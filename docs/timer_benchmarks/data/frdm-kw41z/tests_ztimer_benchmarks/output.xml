<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201030 15:54:19.380" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:54:19.988" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:54:19.997" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:54:21.193" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:54:19.987" endtime="20201030 15:54:21.194"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:54:21.196" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 15:54:21.195" endtime="20201030 15:54:21.197"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:19.986" endtime="20201030 15:54:21.197"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:21.199" endtime="20201030 15:54:21.451"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:21.198" endtime="20201030 15:54:21.452"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:21.465" endtime="20201030 15:54:21.480"></status>
</kw>
<msg timestamp="20201030 15:54:21.481" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:21.463" endtime="20201030 15:54:21.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:21.484" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:21.482" endtime="20201030 15:54:21.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:21.487" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:21.485" endtime="20201030 15:54:21.487"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:21.461" endtime="20201030 15:54:21.488"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:21.458" endtime="20201030 15:54:21.489"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:21.457" endtime="20201030 15:54:21.489"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:21.494" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:21.493" endtime="20201030 15:54:21.494"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:21.490" endtime="20201030 15:54:21.495"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:21.456" endtime="20201030 15:54:21.495"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:21.456" endtime="20201030 15:54:21.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:21.496" endtime="20201030 15:54:21.497"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:21.454" endtime="20201030 15:54:21.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:21.499" endtime="20201030 15:54:21.500"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:21.453" endtime="20201030 15:54:21.501"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:19.984" endtime="20201030 15:54:21.501"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:21.507" endtime="20201030 15:54:21.527"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:21.506" endtime="20201030 15:54:21.527"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:21.542" endtime="20201030 15:54:21.564"></status>
</kw>
<msg timestamp="20201030 15:54:21.564" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:21.540" endtime="20201030 15:54:21.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:21.567" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:21.565" endtime="20201030 15:54:21.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:21.570" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:21.568" endtime="20201030 15:54:21.570"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:21.537" endtime="20201030 15:54:21.571"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:21.535" endtime="20201030 15:54:21.572"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:21.533" endtime="20201030 15:54:21.572"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:21.576" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:21.575" endtime="20201030 15:54:21.576"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:21.573" endtime="20201030 15:54:21.577"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:21.532" endtime="20201030 15:54:21.577"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:21.531" endtime="20201030 15:54:21.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:21.578" endtime="20201030 15:54:21.579"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:21.530" endtime="20201030 15:54:21.580"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:21.528" endtime="20201030 15:54:21.580"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:21.504" endtime="20201030 15:54:21.580"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:21.589" endtime="20201030 15:54:21.604"></status>
</kw>
<msg timestamp="20201030 15:54:21.605" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:21.587" endtime="20201030 15:54:21.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:21.607" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:21.606" endtime="20201030 15:54:21.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:21.608" endtime="20201030 15:54:21.610"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:21.583" endtime="20201030 15:54:21.611"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:21.581" endtime="20201030 15:54:21.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:21.615" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201030 15:54:21.614" endtime="20201030 15:54:21.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:21.617" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201030 15:54:21.616" endtime="20201030 15:54:21.618"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:21.612" endtime="20201030 15:54:21.618"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:54:21.502" endtime="20201030 15:54:21.619" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 15:54:19.511" endtime="20201030 15:54:21.621"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:54:21.673" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:54:21.682" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:54:22.866" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:54:21.672" endtime="20201030 15:54:22.866"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:54:22.869" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 15:54:22.867" endtime="20201030 15:54:22.869"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:21.670" endtime="20201030 15:54:22.870"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:22.872" endtime="20201030 15:54:23.157"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:22.870" endtime="20201030 15:54:23.157"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:23.170" endtime="20201030 15:54:23.189"></status>
</kw>
<msg timestamp="20201030 15:54:23.189" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['IOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:23.168" endtime="20201030 15:54:23.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:23.192" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['IOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:23.191" endtime="20201030 15:54:23.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:23.195" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:23.193" endtime="20201030 15:54:23.196"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:23.166" endtime="20201030 15:54:23.196"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:23.164" endtime="20201030 15:54:23.197"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.162" endtime="20201030 15:54:23.197"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:23.201" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:23.200" endtime="20201030 15:54:23.201"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.198" endtime="20201030 15:54:23.202"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.161" endtime="20201030 15:54:23.202"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.161" endtime="20201030 15:54:23.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:23.203" endtime="20201030 15:54:23.204"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.160" endtime="20201030 15:54:23.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:23.205" endtime="20201030 15:54:23.207"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.158" endtime="20201030 15:54:23.207"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:21.669" endtime="20201030 15:54:23.208"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:23.214" endtime="20201030 15:54:23.234"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.212" endtime="20201030 15:54:23.234"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:23.247" endtime="20201030 15:54:23.265"></status>
</kw>
<msg timestamp="20201030 15:54:23.266" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:23.246" endtime="20201030 15:54:23.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:23.268" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:23.267" endtime="20201030 15:54:23.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:23.271" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:23.269" endtime="20201030 15:54:23.272"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:23.243" endtime="20201030 15:54:23.272"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:23.241" endtime="20201030 15:54:23.273"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.240" endtime="20201030 15:54:23.273"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:23.277" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:23.276" endtime="20201030 15:54:23.277"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.274" endtime="20201030 15:54:23.278"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.239" endtime="20201030 15:54:23.278"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.238" endtime="20201030 15:54:23.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:23.279" endtime="20201030 15:54:23.280"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.237" endtime="20201030 15:54:23.281"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.235" endtime="20201030 15:54:23.281"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.210" endtime="20201030 15:54:23.281"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:23.290" endtime="20201030 15:54:23.308"></status>
</kw>
<msg timestamp="20201030 15:54:23.309" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:23.288" endtime="20201030 15:54:23.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:23.311" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:23.310" endtime="20201030 15:54:23.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:23.312" endtime="20201030 15:54:23.314"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.286" endtime="20201030 15:54:23.314"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.284" endtime="20201030 15:54:23.315"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:23.321" endtime="20201030 15:54:23.611"></status>
</kw>
<msg timestamp="20201030 15:54:23.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069733389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069733861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:23.320" endtime="20201030 15:54:23.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:23.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069733389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069733861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:23.615" endtime="20201030 15:54:23.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:23.624" endtime="20201030 15:54:23.625"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.317" endtime="20201030 15:54:23.626"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.315" endtime="20201030 15:54:23.626"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:23.630" level="INFO">${RESULT} = [{'diff': 4.7199999998748243e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}...</msg>
<status status="PASS" starttime="20201030 15:54:23.627" endtime="20201030 15:54:23.630"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:23.635" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999998748243e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4....</msg>
<status status="PASS" starttime="20201030 15:54:23.632" endtime="20201030 15:54:23.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:23.639" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:23.638" endtime="20201030 15:54:23.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:23.642" level="INFO">VALUE: [4.7199999998748243e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201030 15:54:23.640" endtime="20201030 15:54:23.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.636" endtime="20201030 15:54:23.643"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:23.647" endtime="20201030 15:54:23.667"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.646" endtime="20201030 15:54:23.669"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.644" endtime="20201030 15:54:23.670"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.283" endtime="20201030 15:54:23.670"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.282" endtime="20201030 15:54:23.671"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:23.682" endtime="20201030 15:54:23.700"></status>
</kw>
<msg timestamp="20201030 15:54:23.700" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:23.681" endtime="20201030 15:54:23.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:23.703" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:23.701" endtime="20201030 15:54:23.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:23.704" endtime="20201030 15:54:23.706"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.675" endtime="20201030 15:54:23.706"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.673" endtime="20201030 15:54:23.707"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:23.713" endtime="20201030 15:54:23.998"></status>
</kw>
<msg timestamp="20201030 15:54:24.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028709861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028710333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:23.712" endtime="20201030 15:54:24.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:24.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028709861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028710333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:24.003" endtime="20201030 15:54:24.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:24.015" endtime="20201030 15:54:24.018"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.709" endtime="20201030 15:54:24.019"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.707" endtime="20201030 15:54:24.019"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:24.026" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.729999999973644e-07...</msg>
<status status="PASS" starttime="20201030 15:54:24.020" endtime="20201030 15:54:24.026"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:24.031" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4....</msg>
<status status="PASS" starttime="20201030 15:54:24.027" endtime="20201030 15:54:24.032"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:24.037" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:24.036" endtime="20201030 15:54:24.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:24.039" level="INFO">VALUE: [4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201030 15:54:24.038" endtime="20201030 15:54:24.040"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.033" endtime="20201030 15:54:24.040"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:24.044" endtime="20201030 15:54:24.064"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.043" endtime="20201030 15:54:24.064"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.041" endtime="20201030 15:54:24.064"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.672" endtime="20201030 15:54:24.065"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.671" endtime="20201030 15:54:24.065"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:24.073" endtime="20201030 15:54:24.086"></status>
</kw>
<msg timestamp="20201030 15:54:24.087" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:24.071" endtime="20201030 15:54:24.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:24.089" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:24.088" endtime="20201030 15:54:24.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:24.090" endtime="20201030 15:54:24.092"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.069" endtime="20201030 15:54:24.092"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.067" endtime="20201030 15:54:24.093"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:24.099" endtime="20201030 15:54:24.386"></status>
</kw>
<msg timestamp="20201030 15:54:24.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018561208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018561681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:24.097" endtime="20201030 15:54:24.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:24.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018561208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018561681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:24.390" endtime="20201030 15:54:24.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:24.399" endtime="20201030 15:54:24.403"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.095" endtime="20201030 15:54:24.404"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.093" endtime="20201030 15:54:24.405"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:24.411" level="INFO">${RESULT} = [{'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}...</msg>
<status status="PASS" starttime="20201030 15:54:24.406" endtime="20201030 15:54:24.412"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:24.417" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7...</msg>
<status status="PASS" starttime="20201030 15:54:24.413" endtime="20201030 15:54:24.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:24.424" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:24.422" endtime="20201030 15:54:24.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:24.427" level="INFO">VALUE: [4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201030 15:54:24.425" endtime="20201030 15:54:24.429"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.419" endtime="20201030 15:54:24.429"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:24.435" endtime="20201030 15:54:24.456"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.432" endtime="20201030 15:54:24.458"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.431" endtime="20201030 15:54:24.458"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.066" endtime="20201030 15:54:24.459"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.065" endtime="20201030 15:54:24.459"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:24.476" endtime="20201030 15:54:24.498"></status>
</kw>
<msg timestamp="20201030 15:54:24.499" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:24.473" endtime="20201030 15:54:24.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:24.504" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:24.501" endtime="20201030 15:54:24.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:24.506" endtime="20201030 15:54:24.511"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.467" endtime="20201030 15:54:24.512"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.464" endtime="20201030 15:54:24.513"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:24.526" endtime="20201030 15:54:24.816"></status>
</kw>
<msg timestamp="20201030 15:54:24.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034514042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034514514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:24.523" endtime="20201030 15:54:24.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:24.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034514042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034514514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:24.821" endtime="20201030 15:54:24.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:24.829" endtime="20201030 15:54:24.831"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.517" endtime="20201030 15:54:24.832"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.514" endtime="20201030 15:54:24.832"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:24.836" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999442133e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999442133e-07}...</msg>
<status status="PASS" starttime="20201030 15:54:24.833" endtime="20201030 15:54:24.836"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:24.840" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7...</msg>
<status status="PASS" starttime="20201030 15:54:24.837" endtime="20201030 15:54:24.840"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:24.844" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:24.843" endtime="20201030 15:54:24.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:24.847" level="INFO">VALUE: [4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 15:54:24.845" endtime="20201030 15:54:24.848"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.841" endtime="20201030 15:54:24.848"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:24.852" endtime="20201030 15:54:24.872"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.850" endtime="20201030 15:54:24.872"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.849" endtime="20201030 15:54:24.873"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.461" endtime="20201030 15:54:24.874"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.460" endtime="20201030 15:54:24.874"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:24.885" endtime="20201030 15:54:24.901"></status>
</kw>
<msg timestamp="20201030 15:54:24.901" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:24.883" endtime="20201030 15:54:24.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:24.905" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:24.903" endtime="20201030 15:54:24.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:24.907" endtime="20201030 15:54:24.909"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.879" endtime="20201030 15:54:24.909"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.877" endtime="20201030 15:54:24.910"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:24.916" endtime="20201030 15:54:25.201"></status>
</kw>
<msg timestamp="20201030 15:54:25.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024598139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024598611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:24.915" endtime="20201030 15:54:25.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:25.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024598139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024598611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:25.213" endtime="20201030 15:54:25.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:25.221" endtime="20201030 15:54:25.223"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.912" endtime="20201030 15:54:25.223"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.910" endtime="20201030 15:54:25.224"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:25.228" level="INFO">${RESULT} = [{'diff': 4.7199999999789077e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07},...</msg>
<status status="PASS" starttime="20201030 15:54:25.225" endtime="20201030 15:54:25.228"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:25.233" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.71...</msg>
<status status="PASS" starttime="20201030 15:54:25.229" endtime="20201030 15:54:25.233"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:25.237" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:25.236" endtime="20201030 15:54:25.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:25.240" level="INFO">VALUE: [4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201030 15:54:25.238" endtime="20201030 15:54:25.240"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.234" endtime="20201030 15:54:25.241"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:25.244" endtime="20201030 15:54:25.264"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.243" endtime="20201030 15:54:25.264"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.242" endtime="20201030 15:54:25.265"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.875" endtime="20201030 15:54:25.265"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.875" endtime="20201030 15:54:25.265"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:25.273" endtime="20201030 15:54:25.287"></status>
</kw>
<msg timestamp="20201030 15:54:25.287" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:25.271" endtime="20201030 15:54:25.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:25.290" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:25.288" endtime="20201030 15:54:25.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:25.291" endtime="20201030 15:54:25.292"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.269" endtime="20201030 15:54:25.293"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.267" endtime="20201030 15:54:25.293"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:25.300" endtime="20201030 15:54:25.588"></status>
</kw>
<msg timestamp="20201030 15:54:25.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01913625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019136722, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:54:25.299" endtime="20201030 15:54:25.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:25.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01913625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019136722, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:54:25.592" endtime="20201030 15:54:25.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:25.601" endtime="20201030 15:54:25.602"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.296" endtime="20201030 15:54:25.603"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.294" endtime="20201030 15:54:25.603"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:25.607" level="INFO">${RESULT} = [{'diff': 4.7199999999789077e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.7300000000083386e-07...</msg>
<status status="PASS" starttime="20201030 15:54:25.604" endtime="20201030 15:54:25.607"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:25.611" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4...</msg>
<status status="PASS" starttime="20201030 15:54:25.608" endtime="20201030 15:54:25.612"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:25.615" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:25.614" endtime="20201030 15:54:25.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:25.618" level="INFO">VALUE: [4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201030 15:54:25.616" endtime="20201030 15:54:25.618"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.612" endtime="20201030 15:54:25.619"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:25.622" endtime="20201030 15:54:25.642"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.621" endtime="20201030 15:54:25.642"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.620" endtime="20201030 15:54:25.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.266" endtime="20201030 15:54:25.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.265" endtime="20201030 15:54:25.643"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:25.651" endtime="20201030 15:54:25.665"></status>
</kw>
<msg timestamp="20201030 15:54:25.665" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:25.649" endtime="20201030 15:54:25.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:25.667" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:25.666" endtime="20201030 15:54:25.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:25.669" endtime="20201030 15:54:25.671"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.647" endtime="20201030 15:54:25.672"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.645" endtime="20201030 15:54:25.672"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:25.679" endtime="20201030 15:54:25.964"></status>
</kw>
<msg timestamp="20201030 15:54:25.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017868458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017868931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:25.677" endtime="20201030 15:54:25.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:25.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017868458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017868931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:25.968" endtime="20201030 15:54:25.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:25.976" endtime="20201030 15:54:25.978"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.675" endtime="20201030 15:54:25.978"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.673" endtime="20201030 15:54:25.979"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:25.983" level="INFO">${RESULT} = [{'diff': 4.7300000000083386e-07}, {'diff': 4.729999999973644e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.729999999973644e-07},...</msg>
<status status="PASS" starttime="20201030 15:54:25.979" endtime="20201030 15:54:25.983"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:25.987" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7300000000083386e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4....</msg>
<status status="PASS" starttime="20201030 15:54:25.984" endtime="20201030 15:54:25.987"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:25.991" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:25.990" endtime="20201030 15:54:25.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:25.994" level="INFO">VALUE: [4.7300000000083386e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201030 15:54:25.992" endtime="20201030 15:54:25.995"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.988" endtime="20201030 15:54:25.995"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:25.999" endtime="20201030 15:54:26.019"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.998" endtime="20201030 15:54:26.019"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.996" endtime="20201030 15:54:26.020"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.644" endtime="20201030 15:54:26.020"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.643" endtime="20201030 15:54:26.020"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:26.030" endtime="20201030 15:54:26.046"></status>
</kw>
<msg timestamp="20201030 15:54:26.047" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:26.029" endtime="20201030 15:54:26.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:26.049" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:26.048" endtime="20201030 15:54:26.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:26.051" endtime="20201030 15:54:26.053"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.026" endtime="20201030 15:54:26.053"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.024" endtime="20201030 15:54:26.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:26.060" endtime="20201030 15:54:26.348"></status>
</kw>
<msg timestamp="20201030 15:54:26.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023071972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023072444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:26.058" endtime="20201030 15:54:26.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:26.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023071972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023072444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:26.352" endtime="20201030 15:54:26.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:26.360" endtime="20201030 15:54:26.362"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.056" endtime="20201030 15:54:26.363"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.054" endtime="20201030 15:54:26.363"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:26.367" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.729999999973644e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.720000000013602e-07},...</msg>
<status status="PASS" starttime="20201030 15:54:26.364" endtime="20201030 15:54:26.367"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:26.372" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.72...</msg>
<status status="PASS" starttime="20201030 15:54:26.368" endtime="20201030 15:54:26.373"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:26.377" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:26.376" endtime="20201030 15:54:26.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:26.379" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201030 15:54:26.378" endtime="20201030 15:54:26.380"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.373" endtime="20201030 15:54:26.380"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:26.385" endtime="20201030 15:54:26.406"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.383" endtime="20201030 15:54:26.407"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.381" endtime="20201030 15:54:26.407"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.022" endtime="20201030 15:54:26.407"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.021" endtime="20201030 15:54:26.408"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:26.416" endtime="20201030 15:54:26.433"></status>
</kw>
<msg timestamp="20201030 15:54:26.433" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:26.414" endtime="20201030 15:54:26.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:26.436" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:26.435" endtime="20201030 15:54:26.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:26.437" endtime="20201030 15:54:26.439"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.412" endtime="20201030 15:54:26.439"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.410" endtime="20201030 15:54:26.440"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:26.447" endtime="20201030 15:54:26.755"></status>
</kw>
<msg timestamp="20201030 15:54:26.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022307639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022308111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:26.445" endtime="20201030 15:54:26.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:26.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022307639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022308111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:26.765" endtime="20201030 15:54:26.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:26.784" endtime="20201030 15:54:26.786"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.442" endtime="20201030 15:54:26.787"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.441" endtime="20201030 15:54:26.787"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:26.791" level="INFO">${RESULT} = [{'diff': 4.7199999999789077e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.7300000000083386e-07...</msg>
<status status="PASS" starttime="20201030 15:54:26.788" endtime="20201030 15:54:26.792"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:26.796" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4...</msg>
<status status="PASS" starttime="20201030 15:54:26.792" endtime="20201030 15:54:26.796"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:26.800" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:26.799" endtime="20201030 15:54:26.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:26.803" level="INFO">VALUE: [4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 15:54:26.801" endtime="20201030 15:54:26.803"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.797" endtime="20201030 15:54:26.804"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:26.807" endtime="20201030 15:54:26.827"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.806" endtime="20201030 15:54:26.828"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.805" endtime="20201030 15:54:26.828"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.408" endtime="20201030 15:54:26.828"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.408" endtime="20201030 15:54:26.828"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:26.837" endtime="20201030 15:54:26.855"></status>
</kw>
<msg timestamp="20201030 15:54:26.856" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:26.835" endtime="20201030 15:54:26.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:26.858" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:26.857" endtime="20201030 15:54:26.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:26.860" endtime="20201030 15:54:26.862"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.832" endtime="20201030 15:54:26.863"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.831" endtime="20201030 15:54:26.863"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:26.870" endtime="20201030 15:54:27.156"></status>
</kw>
<msg timestamp="20201030 15:54:27.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023406764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023407236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:26.868" endtime="20201030 15:54:27.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:27.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023406764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023407236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:27.160" endtime="20201030 15:54:27.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:27.169" endtime="20201030 15:54:27.170"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.866" endtime="20201030 15:54:27.171"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.864" endtime="20201030 15:54:27.171"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:27.176" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07},...</msg>
<status status="PASS" starttime="20201030 15:54:27.172" endtime="20201030 15:54:27.177"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:27.182" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.72...</msg>
<status status="PASS" starttime="20201030 15:54:27.178" endtime="20201030 15:54:27.182"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:27.186" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:27.185" endtime="20201030 15:54:27.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:27.189" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 15:54:27.188" endtime="20201030 15:54:27.190"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.183" endtime="20201030 15:54:27.191"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:27.195" endtime="20201030 15:54:27.214"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.193" endtime="20201030 15:54:27.215"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.192" endtime="20201030 15:54:27.215"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.829" endtime="20201030 15:54:27.215"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.829" endtime="20201030 15:54:27.216"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:27.225" endtime="20201030 15:54:27.242"></status>
</kw>
<msg timestamp="20201030 15:54:27.242" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:27.223" endtime="20201030 15:54:27.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:27.245" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:27.243" endtime="20201030 15:54:27.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:27.246" endtime="20201030 15:54:27.248"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.220" endtime="20201030 15:54:27.248"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.218" endtime="20201030 15:54:27.249"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:27.256" endtime="20201030 15:54:27.544"></status>
</kw>
<msg timestamp="20201030 15:54:27.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022953514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022953986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:27.254" endtime="20201030 15:54:27.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:27.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022953514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022953986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:27.548" endtime="20201030 15:54:27.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:27.557" endtime="20201030 15:54:27.558"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.251" endtime="20201030 15:54:27.559"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.249" endtime="20201030 15:54:27.559"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:27.563" level="INFO">${RESULT} = [{'diff': 4.7199999999789077e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07},...</msg>
<status status="PASS" starttime="20201030 15:54:27.560" endtime="20201030 15:54:27.564"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:27.568" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7...</msg>
<status status="PASS" starttime="20201030 15:54:27.564" endtime="20201030 15:54:27.569"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:27.573" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:27.572" endtime="20201030 15:54:27.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:27.575" level="INFO">VALUE: [4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201030 15:54:27.574" endtime="20201030 15:54:27.576"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.569" endtime="20201030 15:54:27.576"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:27.580" endtime="20201030 15:54:27.600"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.579" endtime="20201030 15:54:27.601"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.577" endtime="20201030 15:54:27.601"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.217" endtime="20201030 15:54:27.601"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.216" endtime="20201030 15:54:27.602"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:27.610" endtime="20201030 15:54:27.628"></status>
</kw>
<msg timestamp="20201030 15:54:27.629" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:27.608" endtime="20201030 15:54:27.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:27.631" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:27.630" endtime="20201030 15:54:27.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:27.632" endtime="20201030 15:54:27.634"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.606" endtime="20201030 15:54:27.634"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.604" endtime="20201030 15:54:27.635"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:27.642" endtime="20201030 15:54:27.930"></status>
</kw>
<msg timestamp="20201030 15:54:27.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019350056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019350528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:27.640" endtime="20201030 15:54:27.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:27.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019350056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019350528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:27.934" endtime="20201030 15:54:27.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:27.943" endtime="20201030 15:54:27.945"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.637" endtime="20201030 15:54:27.946"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.636" endtime="20201030 15:54:27.946"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:27.950" level="INFO">${RESULT} = [{'diff': 4.7199999999789077e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}...</msg>
<status status="PASS" starttime="20201030 15:54:27.947" endtime="20201030 15:54:27.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:27.955" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4....</msg>
<status status="PASS" starttime="20201030 15:54:27.951" endtime="20201030 15:54:27.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:27.959" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:27.958" endtime="20201030 15:54:27.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:27.962" level="INFO">VALUE: [4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 15:54:27.960" endtime="20201030 15:54:27.962"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.956" endtime="20201030 15:54:27.963"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:27.967" endtime="20201030 15:54:27.986"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.965" endtime="20201030 15:54:27.987"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.964" endtime="20201030 15:54:27.987"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.602" endtime="20201030 15:54:27.988"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.602" endtime="20201030 15:54:27.988"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:27.996" endtime="20201030 15:54:28.010"></status>
</kw>
<msg timestamp="20201030 15:54:28.011" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:27.995" endtime="20201030 15:54:28.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:28.013" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:28.012" endtime="20201030 15:54:28.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:28.014" endtime="20201030 15:54:28.017"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.992" endtime="20201030 15:54:28.017"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.990" endtime="20201030 15:54:28.018"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:28.025" endtime="20201030 15:54:28.312"></status>
</kw>
<msg timestamp="20201030 15:54:28.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019508542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019509014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:28.023" endtime="20201030 15:54:28.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:28.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019508542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019509014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:28.317" endtime="20201030 15:54:28.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:28.325" endtime="20201030 15:54:28.327"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.020" endtime="20201030 15:54:28.327"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.018" endtime="20201030 15:54:28.328"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:28.332" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.7199999999789077e-07...</msg>
<status status="PASS" starttime="20201030 15:54:28.329" endtime="20201030 15:54:28.332"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:28.336" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4....</msg>
<status status="PASS" starttime="20201030 15:54:28.333" endtime="20201030 15:54:28.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:28.340" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:28.339" endtime="20201030 15:54:28.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:28.343" level="INFO">VALUE: [4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201030 15:54:28.342" endtime="20201030 15:54:28.345"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.337" endtime="20201030 15:54:28.345"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:28.349" endtime="20201030 15:54:28.369"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.348" endtime="20201030 15:54:28.369"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.346" endtime="20201030 15:54:28.370"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.989" endtime="20201030 15:54:28.370"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.988" endtime="20201030 15:54:28.370"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:28.378" endtime="20201030 15:54:28.393"></status>
</kw>
<msg timestamp="20201030 15:54:28.393" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:28.377" endtime="20201030 15:54:28.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:28.396" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:28.394" endtime="20201030 15:54:28.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:28.397" endtime="20201030 15:54:28.399"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.374" endtime="20201030 15:54:28.399"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.372" endtime="20201030 15:54:28.400"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:28.407" endtime="20201030 15:54:28.692"></status>
</kw>
<msg timestamp="20201030 15:54:28.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018946208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018946681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:28.405" endtime="20201030 15:54:28.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:28.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018946208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018946681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:28.696" endtime="20201030 15:54:28.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:28.705" endtime="20201030 15:54:28.707"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.402" endtime="20201030 15:54:28.707"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.400" endtime="20201030 15:54:28.708"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:28.712" level="INFO">${RESULT} = [{'diff': 4.7300000000083386e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.729999999973644e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.7199999999789077e-07...</msg>
<status status="PASS" starttime="20201030 15:54:28.708" endtime="20201030 15:54:28.712"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:28.717" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7300000000083386e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4...</msg>
<status status="PASS" starttime="20201030 15:54:28.713" endtime="20201030 15:54:28.717"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:28.721" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:28.720" endtime="20201030 15:54:28.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:28.724" level="INFO">VALUE: [4.7300000000083386e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201030 15:54:28.722" endtime="20201030 15:54:28.725"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.718" endtime="20201030 15:54:28.725"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:28.729" endtime="20201030 15:54:28.749"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.727" endtime="20201030 15:54:28.749"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.726" endtime="20201030 15:54:28.750"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.371" endtime="20201030 15:54:28.750"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.370" endtime="20201030 15:54:28.750"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:28.758" endtime="20201030 15:54:28.774"></status>
</kw>
<msg timestamp="20201030 15:54:28.775" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:28.757" endtime="20201030 15:54:28.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:28.777" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:28.776" endtime="20201030 15:54:28.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:28.778" endtime="20201030 15:54:28.780"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.754" endtime="20201030 15:54:28.781"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.752" endtime="20201030 15:54:28.781"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:28.788" endtime="20201030 15:54:29.077"></status>
</kw>
<msg timestamp="20201030 15:54:29.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021012417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021012889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:28.786" endtime="20201030 15:54:29.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:29.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021012417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021012889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:29.082" endtime="20201030 15:54:29.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:29.090" endtime="20201030 15:54:29.092"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.784" endtime="20201030 15:54:29.093"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.782" endtime="20201030 15:54:29.093"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:29.097" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}...</msg>
<status status="PASS" starttime="20201030 15:54:29.094" endtime="20201030 15:54:29.097"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:29.102" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4...</msg>
<status status="PASS" starttime="20201030 15:54:29.098" endtime="20201030 15:54:29.102"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:29.106" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:29.105" endtime="20201030 15:54:29.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:29.108" level="INFO">VALUE: [4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 15:54:29.107" endtime="20201030 15:54:29.109"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.102" endtime="20201030 15:54:29.110"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:29.114" endtime="20201030 15:54:29.133"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.112" endtime="20201030 15:54:29.134"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.111" endtime="20201030 15:54:29.134"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.751" endtime="20201030 15:54:29.134"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.750" endtime="20201030 15:54:29.135"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:29.143" endtime="20201030 15:54:29.161"></status>
</kw>
<msg timestamp="20201030 15:54:29.161" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:29.141" endtime="20201030 15:54:29.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:29.164" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:29.162" endtime="20201030 15:54:29.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:29.165" endtime="20201030 15:54:29.168"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.138" endtime="20201030 15:54:29.168"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.137" endtime="20201030 15:54:29.169"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:29.175" endtime="20201030 15:54:29.461"></status>
</kw>
<msg timestamp="20201030 15:54:29.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023223014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023223486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:29.174" endtime="20201030 15:54:29.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:29.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023223014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023223486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:29.465" endtime="20201030 15:54:29.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:29.474" endtime="20201030 15:54:29.475"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.171" endtime="20201030 15:54:29.476"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.169" endtime="20201030 15:54:29.476"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:29.480" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07...</msg>
<status status="PASS" starttime="20201030 15:54:29.477" endtime="20201030 15:54:29.481"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:29.485" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5....</msg>
<status status="PASS" starttime="20201030 15:54:29.482" endtime="20201030 15:54:29.485"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:29.489" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:29.488" endtime="20201030 15:54:29.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:29.492" level="INFO">VALUE: [4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.420000000026792e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201030 15:54:29.490" endtime="20201030 15:54:29.493"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.486" endtime="20201030 15:54:29.494"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:29.498" endtime="20201030 15:54:29.517"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.496" endtime="20201030 15:54:29.518"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.495" endtime="20201030 15:54:29.518"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.135" endtime="20201030 15:54:29.518"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.135" endtime="20201030 15:54:29.519"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:29.527" endtime="20201030 15:54:29.544"></status>
</kw>
<msg timestamp="20201030 15:54:29.544" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:29.525" endtime="20201030 15:54:29.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:29.547" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:29.546" endtime="20201030 15:54:29.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:29.548" endtime="20201030 15:54:29.550"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.523" endtime="20201030 15:54:29.551"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.521" endtime="20201030 15:54:29.551"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:29.558" endtime="20201030 15:54:29.844"></status>
</kw>
<msg timestamp="20201030 15:54:29.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021049944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021050417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:29.556" endtime="20201030 15:54:29.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:29.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021049944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021050417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:29.849" endtime="20201030 15:54:29.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:29.857" endtime="20201030 15:54:29.859"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.553" endtime="20201030 15:54:29.859"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.552" endtime="20201030 15:54:29.859"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:29.863" level="INFO">${RESULT} = [{'diff': 4.729999999973644e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.7199999999789077e-07...</msg>
<status status="PASS" starttime="20201030 15:54:29.860" endtime="20201030 15:54:29.864"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:29.868" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.729999999973644e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4....</msg>
<status status="PASS" starttime="20201030 15:54:29.864" endtime="20201030 15:54:29.869"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:29.873" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:29.872" endtime="20201030 15:54:29.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:29.875" level="INFO">VALUE: [4.729999999973644e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 5.420000000026792e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 15:54:29.874" endtime="20201030 15:54:29.876"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.869" endtime="20201030 15:54:29.876"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:29.880" endtime="20201030 15:54:29.900"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.879" endtime="20201030 15:54:29.900"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.877" endtime="20201030 15:54:29.901"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.519" endtime="20201030 15:54:29.901"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.519" endtime="20201030 15:54:29.901"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:29.909" endtime="20201030 15:54:29.925"></status>
</kw>
<msg timestamp="20201030 15:54:29.925" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:29.908" endtime="20201030 15:54:29.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:29.928" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:29.927" endtime="20201030 15:54:29.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:29.929" endtime="20201030 15:54:29.931"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.905" endtime="20201030 15:54:29.931"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.903" endtime="20201030 15:54:29.932"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:29.938" endtime="20201030 15:54:30.226"></status>
</kw>
<msg timestamp="20201030 15:54:30.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020310042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020310514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:29.937" endtime="20201030 15:54:30.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:30.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020310042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020310514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:30.231" endtime="20201030 15:54:30.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:30.239" endtime="20201030 15:54:30.242"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.934" endtime="20201030 15:54:30.242"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.932" endtime="20201030 15:54:30.243"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:30.246" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.7199999999789077e-07}...</msg>
<status status="PASS" starttime="20201030 15:54:30.243" endtime="20201030 15:54:30.247"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:30.251" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4....</msg>
<status status="PASS" starttime="20201030 15:54:30.247" endtime="20201030 15:54:30.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:30.255" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:30.254" endtime="20201030 15:54:30.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:30.257" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07]</msg>
<status status="PASS" starttime="20201030 15:54:30.256" endtime="20201030 15:54:30.258"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.252" endtime="20201030 15:54:30.259"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:30.263" endtime="20201030 15:54:30.282"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.261" endtime="20201030 15:54:30.283"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.260" endtime="20201030 15:54:30.283"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.902" endtime="20201030 15:54:30.284"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.902" endtime="20201030 15:54:30.284"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:30.295" endtime="20201030 15:54:30.312"></status>
</kw>
<msg timestamp="20201030 15:54:30.313" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:30.294" endtime="20201030 15:54:30.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:30.317" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:30.314" endtime="20201030 15:54:30.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:30.319" endtime="20201030 15:54:30.327"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.288" endtime="20201030 15:54:30.328"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.286" endtime="20201030 15:54:30.330"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:30.339" endtime="20201030 15:54:30.639"></status>
</kw>
<msg timestamp="20201030 15:54:30.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024391208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024391681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:30.338" endtime="20201030 15:54:30.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:30.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024391208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024391681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:30.644" endtime="20201030 15:54:30.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:30.652" endtime="20201030 15:54:30.654"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.335" endtime="20201030 15:54:30.655"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.333" endtime="20201030 15:54:30.655"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:30.659" level="INFO">${RESULT} = [{'diff': 4.729999999973644e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, ...</msg>
<status status="PASS" starttime="20201030 15:54:30.656" endtime="20201030 15:54:30.659"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:30.664" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.729999999973644e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7...</msg>
<status status="PASS" starttime="20201030 15:54:30.660" endtime="20201030 15:54:30.664"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:30.668" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:30.667" endtime="20201030 15:54:30.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:30.670" level="INFO">VALUE: [4.729999999973644e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 15:54:30.669" endtime="20201030 15:54:30.672"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.665" endtime="20201030 15:54:30.673"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:30.677" endtime="20201030 15:54:30.696"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.675" endtime="20201030 15:54:30.697"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.674" endtime="20201030 15:54:30.698"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.285" endtime="20201030 15:54:30.698"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.284" endtime="20201030 15:54:30.698"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:30.707" endtime="20201030 15:54:30.723"></status>
</kw>
<msg timestamp="20201030 15:54:30.724" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:30.705" endtime="20201030 15:54:30.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:30.726" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:30.725" endtime="20201030 15:54:30.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:30.727" endtime="20201030 15:54:30.729"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.702" endtime="20201030 15:54:30.729"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.700" endtime="20201030 15:54:30.730"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:30.737" endtime="20201030 15:54:31.023"></status>
</kw>
<msg timestamp="20201030 15:54:31.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022824847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022825319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:30.735" endtime="20201030 15:54:31.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:31.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022824847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022825319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:31.027" endtime="20201030 15:54:31.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:31.036" endtime="20201030 15:54:31.037"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.732" endtime="20201030 15:54:31.038"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.730" endtime="20201030 15:54:31.038"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:31.042" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.720000000013602e-07},...</msg>
<status status="PASS" starttime="20201030 15:54:31.039" endtime="20201030 15:54:31.043"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:31.048" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7...</msg>
<status status="PASS" starttime="20201030 15:54:31.043" endtime="20201030 15:54:31.048"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:31.052" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:31.051" endtime="20201030 15:54:31.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:31.055" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201030 15:54:31.053" endtime="20201030 15:54:31.056"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.049" endtime="20201030 15:54:31.056"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:31.060" endtime="20201030 15:54:31.079"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.058" endtime="20201030 15:54:31.080"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.057" endtime="20201030 15:54:31.080"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.699" endtime="20201030 15:54:31.081"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.698" endtime="20201030 15:54:31.081"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.282" endtime="20201030 15:54:31.081"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:54:23.208" endtime="20201030 15:54:31.082" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:31.088" endtime="20201030 15:54:31.108"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.087" endtime="20201030 15:54:31.109"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:31.122" endtime="20201030 15:54:31.143"></status>
</kw>
<msg timestamp="20201030 15:54:31.144" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:31.121" endtime="20201030 15:54:31.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:31.147" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:31.145" endtime="20201030 15:54:31.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:31.151" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:31.148" endtime="20201030 15:54:31.151"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:31.118" endtime="20201030 15:54:31.152"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:31.115" endtime="20201030 15:54:31.152"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.114" endtime="20201030 15:54:31.153"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:31.156" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:31.156" endtime="20201030 15:54:31.157"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.154" endtime="20201030 15:54:31.157"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.113" endtime="20201030 15:54:31.157"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.113" endtime="20201030 15:54:31.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:31.158" endtime="20201030 15:54:31.160"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.111" endtime="20201030 15:54:31.160"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.109" endtime="20201030 15:54:31.161"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.086" endtime="20201030 15:54:31.161"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:31.170" endtime="20201030 15:54:31.187"></status>
</kw>
<msg timestamp="20201030 15:54:31.187" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:31.168" endtime="20201030 15:54:31.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:31.190" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:31.188" endtime="20201030 15:54:31.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:31.191" endtime="20201030 15:54:31.193"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.166" endtime="20201030 15:54:31.194"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.164" endtime="20201030 15:54:31.194"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:31.201" endtime="20201030 15:54:31.485"></status>
</kw>
<msg timestamp="20201030 15:54:31.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073690653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073696083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:31.199" endtime="20201030 15:54:31.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:31.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073690653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073696083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:31.489" endtime="20201030 15:54:31.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:31.498" endtime="20201030 15:54:31.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.196" endtime="20201030 15:54:31.500"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.195" endtime="20201030 15:54:31.500"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:31.505" level="INFO">${RESULT} = [{'diff': 5.430000000000712e-06}, {'diff': 5.472000000006361e-06}, {'diff': 5.431000000000186e-06}, {'diff': 5.444000000007221e-06}, {'diff': 5.416000000008081e-06}, {'diff': 5.444999999992817e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:54:31.501" endtime="20201030 15:54:31.505"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:31.510" level="INFO">${OVERHEAD} = {'diff': [5.430000000000712e-06, 5.472000000006361e-06, 5.431000000000186e-06, 5.444000000007221e-06, 5.416000000008081e-06, 5.444999999992817e-06, 5.444999999992817e-06, 5.4589999999993255e-06, 5.443...</msg>
<status status="PASS" starttime="20201030 15:54:31.506" endtime="20201030 15:54:31.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:31.514" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:31.513" endtime="20201030 15:54:31.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:31.517" level="INFO">VALUE: [5.430000000000712e-06, 5.472000000006361e-06, 5.431000000000186e-06, 5.444000000007221e-06, 5.416000000008081e-06, 5.444999999992817e-06, 5.444999999992817e-06, 5.4589999999993255e-06, 5.443999999993343e-06, 5.457999999999852e-06, 5.457999999999852e-06, 5.417000000007555e-06, 5.430000000000712e-06, 5.5139999999981315e-06, 5.457999999999852e-06, 5.444999999992817e-06, 5.401999999987694e-06, 5.430000000000712e-06, 5.485999999998992e-06, 5.430000000000712e-06, 5.415999999994203e-06, 5.430000000000712e-06, 5.430000000000712e-06, 5.388999999994537e-06, 5.430000000000712e-06, 5.416999999993677e-06, 5.4589999999993255e-06, 5.444999999992817e-06, 5.431000000000186e-06, 5.416999999993677e-06, 5.471999999992483e-06, 5.430000000000712e-06, 5.375000000001906e-06, 5.5000000000055005e-06, 5.473000000005834e-06, 5.444000000007221e-06, 5.457999999999852e-06, 5.444999999992817e-06, 5.403000000001046e-06, 5.416000000008081e-06, 5.444000000007221e-06, 5.416999999993677e-06, 5.444000000007221e-06, 5.417000000007555e-06, 5.457999999999852e-06, 5.485999999998992e-06, 5.52800000000464e-06, 5.430000000000712e-06, 5.416999999993677e-06, 5.443999999993343e-06]</msg>
<status status="PASS" starttime="20201030 15:54:31.516" endtime="20201030 15:54:31.517"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.511" endtime="20201030 15:54:31.518"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:31.522" endtime="20201030 15:54:31.541"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.520" endtime="20201030 15:54:31.542"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.519" endtime="20201030 15:54:31.542"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.163" endtime="20201030 15:54:31.542"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.162" endtime="20201030 15:54:31.543"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:31.551" endtime="20201030 15:54:31.568"></status>
</kw>
<msg timestamp="20201030 15:54:31.569" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:31.549" endtime="20201030 15:54:31.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:31.572" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:31.570" endtime="20201030 15:54:31.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:31.573" endtime="20201030 15:54:31.575"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.547" endtime="20201030 15:54:31.575"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.545" endtime="20201030 15:54:31.576"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:31.582" endtime="20201030 15:54:31.872"></status>
</kw>
<msg timestamp="20201030 15:54:31.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022135139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022140556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:31.581" endtime="20201030 15:54:31.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:31.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022135139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022140556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:31.877" endtime="20201030 15:54:31.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:31.885" endtime="20201030 15:54:31.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.578" endtime="20201030 15:54:31.888"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.576" endtime="20201030 15:54:31.889"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:31.894" level="INFO">${RESULT} = [{'diff': 5.416999999997146e-06}, {'diff': 5.457999999999852e-06}, {'diff': 5.403000000001046e-06}, {'diff': 5.444000000000282e-06}, {'diff': 5.430000000000712e-06}, {'diff': 5.416999999997146e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:54:31.890" endtime="20201030 15:54:31.895"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:31.900" level="INFO">${OVERHEAD} = {'diff': [5.416999999997146e-06, 5.457999999999852e-06, 5.403000000001046e-06, 5.444000000000282e-06, 5.430000000000712e-06, 5.416999999997146e-06, 5.417000000000616e-06, 5.431000000000186e-06, 5.4720...</msg>
<status status="PASS" starttime="20201030 15:54:31.896" endtime="20201030 15:54:31.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:31.907" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:31.905" endtime="20201030 15:54:31.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:31.911" level="INFO">VALUE: [5.416999999997146e-06, 5.457999999999852e-06, 5.403000000001046e-06, 5.444000000000282e-06, 5.430000000000712e-06, 5.416999999997146e-06, 5.417000000000616e-06, 5.431000000000186e-06, 5.472000000002891e-06, 5.444999999999756e-06, 5.403000000001046e-06, 5.417000000000616e-06, 5.403000000001046e-06, 5.417000000000616e-06, 5.416000000001142e-06, 5.430000000000712e-06, 5.471999999999422e-06, 5.431000000000186e-06, 5.415999999997673e-06, 5.472999999998895e-06, 5.416000000001142e-06, 5.429999999997243e-06, 5.444000000000282e-06, 5.457999999999852e-06, 5.402000000001572e-06, 5.401999999998103e-06, 5.444000000000282e-06, 5.431000000000186e-06, 5.471999999999422e-06, 5.444999999999756e-06, 5.444000000000282e-06, 5.4589999999993255e-06, 5.457999999999852e-06, 5.444999999999756e-06, 5.3889999999980065e-06, 5.416999999997146e-06, 5.431000000000186e-06, 5.429999999997243e-06, 5.444000000000282e-06, 5.431000000000186e-06, 5.375000000001906e-06, 5.429999999997243e-06, 5.417000000000616e-06, 5.416000000001142e-06, 5.430000000000712e-06, 5.457999999999852e-06, 5.457999999999852e-06, 5.415999999997673e-06, 5.4589999999993255e-06, 5.431000000000186e-06]</msg>
<status status="PASS" starttime="20201030 15:54:31.909" endtime="20201030 15:54:31.912"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.902" endtime="20201030 15:54:31.914"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:31.920" endtime="20201030 15:54:31.940"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.918" endtime="20201030 15:54:31.940"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.915" endtime="20201030 15:54:31.940"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.543" endtime="20201030 15:54:31.941"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.543" endtime="20201030 15:54:31.941"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:31.950" endtime="20201030 15:54:31.969"></status>
</kw>
<msg timestamp="20201030 15:54:31.970" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:31.948" endtime="20201030 15:54:31.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:31.973" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:31.971" endtime="20201030 15:54:31.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:31.974" endtime="20201030 15:54:31.975"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.945" endtime="20201030 15:54:31.976"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.943" endtime="20201030 15:54:31.976"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:31.983" endtime="20201030 15:54:32.269"></status>
</kw>
<msg timestamp="20201030 15:54:32.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020875208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020880639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:31.982" endtime="20201030 15:54:32.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:32.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020875208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020880639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:32.273" endtime="20201030 15:54:32.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:32.282" endtime="20201030 15:54:32.283"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.979" endtime="20201030 15:54:32.284"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.977" endtime="20201030 15:54:32.284"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:32.288" level="INFO">${RESULT} = [{'diff': 5.431000000000186e-06}, {'diff': 5.444000000000282e-06}, {'diff': 5.444000000000282e-06}, {'diff': 5.429999999997243e-06}, {'diff': 5.417000000000616e-06}, {'diff': 5.417000000000616e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:54:32.285" endtime="20201030 15:54:32.289"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:32.293" level="INFO">${OVERHEAD} = {'diff': [5.431000000000186e-06, 5.444000000000282e-06, 5.444000000000282e-06, 5.429999999997243e-06, 5.417000000000616e-06, 5.417000000000616e-06, 5.417000000000616e-06, 5.444000000000282e-06, 5.4030...</msg>
<status status="PASS" starttime="20201030 15:54:32.289" endtime="20201030 15:54:32.293"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:32.297" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:32.296" endtime="20201030 15:54:32.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:32.300" level="INFO">VALUE: [5.431000000000186e-06, 5.444000000000282e-06, 5.444000000000282e-06, 5.429999999997243e-06, 5.417000000000616e-06, 5.417000000000616e-06, 5.417000000000616e-06, 5.444000000000282e-06, 5.403000000001046e-06, 5.445000000003225e-06, 5.403000000001046e-06, 5.444000000000282e-06, 5.444000000000282e-06, 5.417000000000616e-06, 5.444999999999756e-06, 5.444999999999756e-06, 5.486000000002461e-06, 5.444999999999756e-06, 5.416000000001142e-06, 5.430000000000712e-06, 5.444000000000282e-06, 5.431000000000186e-06, 5.444000000000282e-06, 5.444000000000282e-06, 5.4589999999993255e-06, 5.431000000000186e-06, 5.444999999999756e-06, 5.457999999999852e-06, 5.431000000000186e-06, 5.457999999999852e-06, 5.417000000000616e-06, 5.3889999999980065e-06, 5.4439999999968125e-06, 5.431000000000186e-06, 5.415999999997673e-06, 5.4589999999993255e-06, 5.4439999999968125e-06, 5.415999999997673e-06, 5.444000000000282e-06, 5.430000000000712e-06, 5.457999999999852e-06, 5.444000000000282e-06, 5.417000000000616e-06, 5.444999999999756e-06, 5.444000000000282e-06, 5.374999999998437e-06, 5.430000000000712e-06, 5.416000000001142e-06, 5.431000000000186e-06, 5.416000000001142e-06]</msg>
<status status="PASS" starttime="20201030 15:54:32.298" endtime="20201030 15:54:32.303"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.294" endtime="20201030 15:54:32.304"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:32.308" endtime="20201030 15:54:32.328"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.306" endtime="20201030 15:54:32.328"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.305" endtime="20201030 15:54:32.329"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.942" endtime="20201030 15:54:32.329"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.941" endtime="20201030 15:54:32.329"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:32.338" endtime="20201030 15:54:32.351"></status>
</kw>
<msg timestamp="20201030 15:54:32.352" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:32.336" endtime="20201030 15:54:32.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:32.354" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:32.353" endtime="20201030 15:54:32.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:32.355" endtime="20201030 15:54:32.357"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.333" endtime="20201030 15:54:32.358"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.332" endtime="20201030 15:54:32.358"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:32.365" endtime="20201030 15:54:32.652"></status>
</kw>
<msg timestamp="20201030 15:54:32.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019659597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019665014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:32.363" endtime="20201030 15:54:32.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:32.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019659597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019665014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:32.656" endtime="20201030 15:54:32.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:32.665" endtime="20201030 15:54:32.666"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.361" endtime="20201030 15:54:32.667"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.359" endtime="20201030 15:54:32.667"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:32.671" level="INFO">${RESULT} = [{'diff': 5.417000000000616e-06}, {'diff': 5.457999999999852e-06}, {'diff': 5.444000000000282e-06}, {'diff': 5.444999999999756e-06}, {'diff': 5.444000000000282e-06}, {'diff': 5.431000000000186e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:54:32.668" endtime="20201030 15:54:32.672"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:32.676" level="INFO">${OVERHEAD} = {'diff': [5.417000000000616e-06, 5.457999999999852e-06, 5.444000000000282e-06, 5.444999999999756e-06, 5.444000000000282e-06, 5.431000000000186e-06, 5.431000000000186e-06, 5.431000000000186e-06, 5.4310...</msg>
<status status="PASS" starttime="20201030 15:54:32.672" endtime="20201030 15:54:32.677"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:32.681" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:32.680" endtime="20201030 15:54:32.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:32.684" level="INFO">VALUE: [5.417000000000616e-06, 5.457999999999852e-06, 5.444000000000282e-06, 5.444999999999756e-06, 5.444000000000282e-06, 5.431000000000186e-06, 5.431000000000186e-06, 5.431000000000186e-06, 5.431000000000186e-06, 5.403000000001046e-06, 5.444000000000282e-06, 5.430999999996716e-06, 5.417000000000616e-06, 5.417000000000616e-06, 5.402999999997576e-06, 5.431000000000186e-06, 5.430000000000712e-06, 5.444000000000282e-06, 5.401999999998103e-06, 5.430000000000712e-06, 5.430000000000712e-06, 5.374999999998437e-06, 5.472000000002891e-06, 5.471999999999422e-06, 5.4589999999993255e-06, 5.444999999999756e-06, 5.444000000000282e-06, 5.417000000000616e-06, 5.402999999997576e-06, 5.4589999999993255e-06, 5.457999999999852e-06, 5.416000000001142e-06, 5.361000000002336e-06, 5.444000000000282e-06, 5.444999999999756e-06, 5.430999999996716e-06, 5.430000000000712e-06, 5.402000000001572e-06, 5.499999999998562e-06, 5.444000000000282e-06, 5.485999999998992e-06, 5.444999999999756e-06, 5.417000000000616e-06, 5.431000000000186e-06, 5.431000000000186e-06, 5.431000000000186e-06, 5.431000000000186e-06, 5.444000000000282e-06, 5.416999999997146e-06, 5.416000000001142e-06]</msg>
<status status="PASS" starttime="20201030 15:54:32.682" endtime="20201030 15:54:32.684"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.677" endtime="20201030 15:54:32.684"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:32.688" endtime="20201030 15:54:32.708"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.687" endtime="20201030 15:54:32.709"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.685" endtime="20201030 15:54:32.709"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.330" endtime="20201030 15:54:32.709"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.330" endtime="20201030 15:54:32.710"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:32.718" endtime="20201030 15:54:32.734"></status>
</kw>
<msg timestamp="20201030 15:54:32.734" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:32.716" endtime="20201030 15:54:32.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:32.737" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:32.736" endtime="20201030 15:54:32.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:32.738" endtime="20201030 15:54:32.740"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.714" endtime="20201030 15:54:32.740"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.712" endtime="20201030 15:54:32.741"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:32.748" endtime="20201030 15:54:33.033"></status>
</kw>
<msg timestamp="20201030 15:54:33.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020808667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020814083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:32.746" endtime="20201030 15:54:33.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:33.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020808667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020814083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:33.037" endtime="20201030 15:54:33.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:33.046" endtime="20201030 15:54:33.049"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.743" endtime="20201030 15:54:33.049"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.741" endtime="20201030 15:54:33.050"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:33.054" level="INFO">${RESULT} = [{'diff': 5.416000000001142e-06}, {'diff': 5.417000000000616e-06}, {'diff': 5.431000000000186e-06}, {'diff': 5.430000000000712e-06}, {'diff': 5.417000000000616e-06}, {'diff': 5.445000000003225e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:54:33.050" endtime="20201030 15:54:33.054"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:33.058" level="INFO">${OVERHEAD} = {'diff': [5.416000000001142e-06, 5.417000000000616e-06, 5.431000000000186e-06, 5.430000000000712e-06, 5.417000000000616e-06, 5.445000000003225e-06, 5.417000000000616e-06, 5.457999999999852e-06, 5.4160...</msg>
<status status="PASS" starttime="20201030 15:54:33.055" endtime="20201030 15:54:33.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:33.063" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:33.061" endtime="20201030 15:54:33.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:33.065" level="INFO">VALUE: [5.416000000001142e-06, 5.417000000000616e-06, 5.431000000000186e-06, 5.430000000000712e-06, 5.417000000000616e-06, 5.445000000003225e-06, 5.417000000000616e-06, 5.457999999999852e-06, 5.416000000001142e-06, 5.444999999999756e-06, 5.444000000000282e-06, 5.444000000000282e-06, 5.417000000000616e-06, 5.417000000000616e-06, 5.457999999999852e-06, 5.403000000001046e-06, 5.431000000000186e-06, 5.431000000000186e-06, 5.431000000000186e-06, 5.430999999996716e-06, 5.4439999999968125e-06, 5.417000000000616e-06, 5.444999999999756e-06, 5.403000000001046e-06, 5.457999999999852e-06, 5.472999999998895e-06, 5.430000000000712e-06, 5.431000000000186e-06, 5.389000000001476e-06, 5.444999999999756e-06, 5.3889999999980065e-06, 5.416000000001142e-06, 5.485999999998992e-06, 5.444000000000282e-06, 5.347000000002766e-06, 5.431000000000186e-06, 5.34799999999877e-06, 5.374999999998437e-06, 5.431000000000186e-06, 5.444000000000282e-06, 5.473000000002365e-06, 5.430000000000712e-06, 5.416000000001142e-06, 5.402999999997576e-06, 5.431000000000186e-06, 5.374999999998437e-06, 5.444000000000282e-06, 5.444000000000282e-06, 5.361000000002336e-06, 5.430000000000712e-06]</msg>
<status status="PASS" starttime="20201030 15:54:33.064" endtime="20201030 15:54:33.066"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.059" endtime="20201030 15:54:33.066"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:33.070" endtime="20201030 15:54:33.090"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.069" endtime="20201030 15:54:33.090"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.067" endtime="20201030 15:54:33.091"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.710" endtime="20201030 15:54:33.091"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.710" endtime="20201030 15:54:33.091"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:33.099" endtime="20201030 15:54:33.115"></status>
</kw>
<msg timestamp="20201030 15:54:33.116" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:33.098" endtime="20201030 15:54:33.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:33.118" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:33.117" endtime="20201030 15:54:33.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:33.120" endtime="20201030 15:54:33.122"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.095" endtime="20201030 15:54:33.123"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.093" endtime="20201030 15:54:33.123"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:33.130" endtime="20201030 15:54:33.417"></status>
</kw>
<msg timestamp="20201030 15:54:33.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020981306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020986736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:33.128" endtime="20201030 15:54:33.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:33.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020981306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020986736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:33.422" endtime="20201030 15:54:33.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:33.430" endtime="20201030 15:54:33.432"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.126" endtime="20201030 15:54:33.433"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.124" endtime="20201030 15:54:33.433"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:33.437" level="INFO">${RESULT} = [{'diff': 5.429999999997243e-06}, {'diff': 5.4589999999993255e-06}, {'diff': 5.430000000000712e-06}, {'diff': 5.431000000000186e-06}, {'diff': 5.431000000000186e-06}, {'diff': 5.4589999999993255e-06},...</msg>
<status status="PASS" starttime="20201030 15:54:33.434" endtime="20201030 15:54:33.437"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:33.442" level="INFO">${OVERHEAD} = {'diff': [5.429999999997243e-06, 5.4589999999993255e-06, 5.430000000000712e-06, 5.431000000000186e-06, 5.431000000000186e-06, 5.4589999999993255e-06, 5.457999999999852e-06, 5.417000000000616e-06, 5.44...</msg>
<status status="PASS" starttime="20201030 15:54:33.438" endtime="20201030 15:54:33.442"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:33.446" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:33.445" endtime="20201030 15:54:33.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:33.448" level="INFO">VALUE: [5.429999999997243e-06, 5.4589999999993255e-06, 5.430000000000712e-06, 5.431000000000186e-06, 5.431000000000186e-06, 5.4589999999993255e-06, 5.457999999999852e-06, 5.417000000000616e-06, 5.445000000003225e-06, 5.444000000000282e-06, 5.416000000001142e-06, 5.403000000001046e-06, 5.430999999996716e-06, 5.457999999999852e-06, 5.431000000000186e-06, 5.444000000000282e-06, 5.457999999999852e-06, 5.417000000000616e-06, 5.471999999999422e-06, 5.444999999999756e-06, 5.417000000000616e-06, 5.416000000001142e-06, 5.417000000000616e-06, 5.417000000000616e-06, 5.4439999999968125e-06, 5.431000000000186e-06, 5.444000000000282e-06, 5.457999999999852e-06, 5.459000000002795e-06, 5.431000000000186e-06, 5.457999999999852e-06, 5.3889999999980065e-06, 5.485999999998992e-06, 5.403000000001046e-06, 5.403000000001046e-06, 5.417000000000616e-06, 5.430000000000712e-06, 5.430000000000712e-06, 5.4589999999993255e-06, 5.444000000000282e-06, 5.444999999999756e-06, 5.416999999997146e-06, 5.444999999999756e-06, 5.417000000000616e-06, 5.444999999999756e-06, 5.431000000000186e-06, 5.429999999997243e-06, 5.403000000001046e-06, 5.416000000001142e-06, 5.431000000000186e-06]</msg>
<status status="PASS" starttime="20201030 15:54:33.447" endtime="20201030 15:54:33.450"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.443" endtime="20201030 15:54:33.451"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:33.455" endtime="20201030 15:54:33.474"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.453" endtime="20201030 15:54:33.475"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.452" endtime="20201030 15:54:33.475"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.092" endtime="20201030 15:54:33.475"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.092" endtime="20201030 15:54:33.475"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:33.484" endtime="20201030 15:54:33.503"></status>
</kw>
<msg timestamp="20201030 15:54:33.503" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:33.482" endtime="20201030 15:54:33.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:33.506" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:33.504" endtime="20201030 15:54:33.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:33.507" endtime="20201030 15:54:33.509"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.479" endtime="20201030 15:54:33.509"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.478" endtime="20201030 15:54:33.510"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:33.517" endtime="20201030 15:54:33.801"></status>
</kw>
<msg timestamp="20201030 15:54:33.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023592292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023597736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:33.515" endtime="20201030 15:54:33.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:33.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023592292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023597736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:33.805" endtime="20201030 15:54:33.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:33.814" endtime="20201030 15:54:33.815"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.512" endtime="20201030 15:54:33.816"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.510" endtime="20201030 15:54:33.816"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:33.821" level="INFO">${RESULT} = [{'diff': 5.444000000000282e-06}, {'diff': 5.459000000002795e-06}, {'diff': 5.457999999999852e-06}, {'diff': 5.472000000002891e-06}, {'diff': 5.346999999999297e-06}, {'diff': 5.417000000000616e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:54:33.817" endtime="20201030 15:54:33.821"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:33.826" level="INFO">${OVERHEAD} = {'diff': [5.444000000000282e-06, 5.459000000002795e-06, 5.457999999999852e-06, 5.472000000002891e-06, 5.346999999999297e-06, 5.417000000000616e-06, 5.416999999997146e-06, 5.417000000000616e-06, 5.4170...</msg>
<status status="PASS" starttime="20201030 15:54:33.822" endtime="20201030 15:54:33.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:33.830" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:33.829" endtime="20201030 15:54:33.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:33.833" level="INFO">VALUE: [5.444000000000282e-06, 5.459000000002795e-06, 5.457999999999852e-06, 5.472000000002891e-06, 5.346999999999297e-06, 5.417000000000616e-06, 5.416999999997146e-06, 5.417000000000616e-06, 5.417000000000616e-06, 5.4589999999993255e-06, 5.444999999999756e-06, 5.444999999999756e-06, 5.540999999997798e-06, 5.444999999999756e-06, 5.375000000001906e-06, 5.417000000000616e-06, 5.431000000000186e-06, 5.444000000000282e-06, 5.431000000000186e-06, 5.472999999998895e-06, 5.431000000000186e-06, 5.431000000000186e-06, 5.3889999999980065e-06, 5.444000000000282e-06, 5.430000000000712e-06, 5.417000000000616e-06, 5.487000000001935e-06, 5.430000000000712e-06, 5.444999999999756e-06, 5.416000000001142e-06, 5.417000000000616e-06, 5.444000000000282e-06, 5.415999999997673e-06, 5.430000000000712e-06, 5.457999999999852e-06, 5.4439999999968125e-06, 5.457999999999852e-06, 5.457999999999852e-06, 5.444000000000282e-06, 5.444000000000282e-06, 5.457999999999852e-06, 5.403000000001046e-06, 5.444000000000282e-06, 5.444999999999756e-06, 5.389000000001476e-06, 5.444000000000282e-06, 5.430000000000712e-06, 5.402999999997576e-06, 5.430000000000712e-06, 5.402999999997576e-06]</msg>
<status status="PASS" starttime="20201030 15:54:33.831" endtime="20201030 15:54:33.833"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.827" endtime="20201030 15:54:33.834"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:33.838" endtime="20201030 15:54:33.857"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.836" endtime="20201030 15:54:33.858"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.835" endtime="20201030 15:54:33.858"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.476" endtime="20201030 15:54:33.859"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.476" endtime="20201030 15:54:33.859"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:33.867" endtime="20201030 15:54:33.883"></status>
</kw>
<msg timestamp="20201030 15:54:33.884" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:33.866" endtime="20201030 15:54:33.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:33.886" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:33.885" endtime="20201030 15:54:33.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:33.888" endtime="20201030 15:54:33.889"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.863" endtime="20201030 15:54:33.890"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.861" endtime="20201030 15:54:33.890"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:33.897" endtime="20201030 15:54:34.187"></status>
</kw>
<msg timestamp="20201030 15:54:34.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022115097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022120542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:33.895" endtime="20201030 15:54:34.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:34.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022115097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022120542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:34.192" endtime="20201030 15:54:34.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:34.200" endtime="20201030 15:54:34.202"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.893" endtime="20201030 15:54:34.203"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.891" endtime="20201030 15:54:34.203"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:34.207" level="INFO">${RESULT} = [{'diff': 5.444999999999756e-06}, {'diff': 5.430000000000712e-06}, {'diff': 5.444999999999756e-06}, {'diff': 5.444999999999756e-06}, {'diff': 5.471999999999422e-06}, {'diff': 5.431000000000186e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:54:34.204" endtime="20201030 15:54:34.207"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:34.211" level="INFO">${OVERHEAD} = {'diff': [5.444999999999756e-06, 5.430000000000712e-06, 5.444999999999756e-06, 5.444999999999756e-06, 5.471999999999422e-06, 5.431000000000186e-06, 5.417000000000616e-06, 5.4589999999993255e-06, 5.403...</msg>
<status status="PASS" starttime="20201030 15:54:34.208" endtime="20201030 15:54:34.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:34.216" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:34.215" endtime="20201030 15:54:34.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:34.218" level="INFO">VALUE: [5.444999999999756e-06, 5.430000000000712e-06, 5.444999999999756e-06, 5.444999999999756e-06, 5.471999999999422e-06, 5.431000000000186e-06, 5.417000000000616e-06, 5.4589999999993255e-06, 5.403000000001046e-06, 5.431000000000186e-06, 5.360999999998867e-06, 5.444000000000282e-06, 5.4439999999968125e-06, 5.444999999999756e-06, 5.416000000001142e-06, 5.457999999999852e-06, 5.444000000000282e-06, 5.417000000000616e-06, 5.431000000000186e-06, 5.415999999997673e-06, 5.430000000000712e-06, 5.444000000000282e-06, 5.430000000000712e-06, 5.527999999997701e-06, 5.444000000000282e-06, 5.430000000000712e-06, 5.444000000000282e-06, 5.457999999999852e-06, 5.444000000000282e-06, 5.430000000000712e-06, 5.457999999999852e-06, 5.430000000000712e-06, 5.430000000000712e-06, 5.430000000000712e-06, 5.417000000000616e-06, 5.403000000001046e-06, 5.444000000000282e-06, 5.431000000000186e-06, 5.444000000000282e-06, 5.513000000002127e-06, 5.444000000000282e-06, 5.430000000000712e-06, 5.514000000001601e-06, 5.457999999999852e-06, 5.471999999999422e-06, 5.457999999999852e-06, 5.457999999999852e-06, 5.417000000000616e-06, 5.416000000001142e-06, 5.417000000000616e-06]</msg>
<status status="PASS" starttime="20201030 15:54:34.217" endtime="20201030 15:54:34.219"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.212" endtime="20201030 15:54:34.219"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:34.223" endtime="20201030 15:54:34.243"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.222" endtime="20201030 15:54:34.243"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.220" endtime="20201030 15:54:34.244"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.860" endtime="20201030 15:54:34.244"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.859" endtime="20201030 15:54:34.244"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:34.252" endtime="20201030 15:54:34.266"></status>
</kw>
<msg timestamp="20201030 15:54:34.267" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:34.250" endtime="20201030 15:54:34.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:34.269" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:34.268" endtime="20201030 15:54:34.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:34.270" endtime="20201030 15:54:34.273"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.248" endtime="20201030 15:54:34.273"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.246" endtime="20201030 15:54:34.274"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:34.280" endtime="20201030 15:54:34.568"></status>
</kw>
<msg timestamp="20201030 15:54:34.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01863425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018639667, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:54:34.279" endtime="20201030 15:54:34.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:34.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01863425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018639667, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:54:34.572" endtime="20201030 15:54:34.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:34.582" endtime="20201030 15:54:34.584"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.276" endtime="20201030 15:54:34.585"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.274" endtime="20201030 15:54:34.585"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:34.590" level="INFO">${RESULT} = [{'diff': 5.416999999997146e-06}, {'diff': 5.417000000000616e-06}, {'diff': 5.471999999999422e-06}, {'diff': 5.417000000000616e-06}, {'diff': 5.431000000000186e-06}, {'diff': 5.4439999999968125e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:54:34.586" endtime="20201030 15:54:34.591"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:34.596" level="INFO">${OVERHEAD} = {'diff': [5.416999999997146e-06, 5.417000000000616e-06, 5.471999999999422e-06, 5.417000000000616e-06, 5.431000000000186e-06, 5.4439999999968125e-06, 5.431000000000186e-06, 5.416000000001142e-06, 5.500...</msg>
<status status="PASS" starttime="20201030 15:54:34.592" endtime="20201030 15:54:34.596"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:34.600" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:34.599" endtime="20201030 15:54:34.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:34.603" level="INFO">VALUE: [5.416999999997146e-06, 5.417000000000616e-06, 5.471999999999422e-06, 5.417000000000616e-06, 5.431000000000186e-06, 5.4439999999968125e-06, 5.431000000000186e-06, 5.416000000001142e-06, 5.500000000002031e-06, 5.4589999999993255e-06, 5.444000000000282e-06, 5.430000000000712e-06, 5.416000000001142e-06, 5.416999999997146e-06, 5.417000000000616e-06, 5.402999999997576e-06, 5.417000000000616e-06, 5.34799999999877e-06, 5.417000000000616e-06, 5.431000000000186e-06, 5.429999999997243e-06, 5.444999999999756e-06, 5.4589999999993255e-06, 5.514000000001601e-06, 5.431000000000186e-06, 5.499999999998562e-06, 5.415999999997673e-06, 5.3889999999980065e-06, 5.417000000000616e-06, 5.457999999999852e-06, 5.444000000000282e-06, 5.375000000001906e-06, 5.444999999999756e-06, 5.500000000002031e-06, 5.431000000000186e-06, 5.444999999999756e-06, 5.444000000000282e-06, 5.430000000000712e-06, 5.389000000001476e-06, 5.417000000000616e-06, 5.417000000000616e-06, 5.444999999999756e-06, 5.444999999999756e-06, 5.403000000001046e-06, 5.444999999999756e-06, 5.430000000000712e-06, 5.430000000000712e-06, 5.444999999999756e-06, 5.416999999997146e-06, 5.429999999997243e-06]</msg>
<status status="PASS" starttime="20201030 15:54:34.601" endtime="20201030 15:54:34.604"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.597" endtime="20201030 15:54:34.605"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:34.609" endtime="20201030 15:54:34.628"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.607" endtime="20201030 15:54:34.629"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.606" endtime="20201030 15:54:34.629"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.245" endtime="20201030 15:54:34.629"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.244" endtime="20201030 15:54:34.629"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:34.640" endtime="20201030 15:54:34.658"></status>
</kw>
<msg timestamp="20201030 15:54:34.658" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:34.638" endtime="20201030 15:54:34.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:34.661" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:34.659" endtime="20201030 15:54:34.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:34.662" endtime="20201030 15:54:34.663"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.635" endtime="20201030 15:54:34.664"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.632" endtime="20201030 15:54:34.664"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:34.671" endtime="20201030 15:54:34.955"></status>
</kw>
<msg timestamp="20201030 15:54:34.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025195861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025201292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:34.669" endtime="20201030 15:54:34.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:34.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025195861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025201292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:34.959" endtime="20201030 15:54:34.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:34.968" endtime="20201030 15:54:34.970"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.667" endtime="20201030 15:54:34.970"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.665" endtime="20201030 15:54:34.971"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:34.975" level="INFO">${RESULT} = [{'diff': 5.431000000000186e-06}, {'diff': 5.444000000000282e-06}, {'diff': 5.416000000001142e-06}, {'diff': 5.457999999999852e-06}, {'diff': 5.444000000000282e-06}, {'diff': 5.4439999999968125e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:54:34.972" endtime="20201030 15:54:34.975"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:34.980" level="INFO">${OVERHEAD} = {'diff': [5.431000000000186e-06, 5.444000000000282e-06, 5.416000000001142e-06, 5.457999999999852e-06, 5.444000000000282e-06, 5.4439999999968125e-06, 5.403000000001046e-06, 5.444000000000282e-06, 5.444...</msg>
<status status="PASS" starttime="20201030 15:54:34.976" endtime="20201030 15:54:34.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:34.984" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:34.983" endtime="20201030 15:54:34.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:34.987" level="INFO">VALUE: [5.431000000000186e-06, 5.444000000000282e-06, 5.416000000001142e-06, 5.457999999999852e-06, 5.444000000000282e-06, 5.4439999999968125e-06, 5.403000000001046e-06, 5.444000000000282e-06, 5.444999999999756e-06, 5.430000000000712e-06, 5.5139999999981315e-06, 5.431000000000186e-06, 5.500000000002031e-06, 5.444000000000282e-06, 5.459000000002795e-06, 5.417000000000616e-06, 5.402999999997576e-06, 5.430000000000712e-06, 5.4589999999993255e-06, 5.374999999998437e-06, 5.429999999997243e-06, 5.471999999999422e-06, 5.444000000000282e-06, 5.429999999997243e-06, 5.417000000000616e-06, 5.444000000000282e-06, 5.402999999997576e-06, 5.444999999999756e-06, 5.444999999999756e-06, 5.360999999998867e-06, 5.444000000000282e-06, 5.431000000000186e-06, 5.444999999999756e-06, 5.3889999999980065e-06, 5.416000000001142e-06, 5.444999999999756e-06, 5.444000000000282e-06, 5.431000000000186e-06, 5.430000000000712e-06, 5.415999999997673e-06, 5.444000000000282e-06, 5.444999999999756e-06, 5.3889999999980065e-06, 5.431000000000186e-06, 5.457999999999852e-06, 5.375000000001906e-06, 5.459000000002795e-06, 5.431000000000186e-06, 5.444000000000282e-06, 5.457999999999852e-06]</msg>
<status status="PASS" starttime="20201030 15:54:34.985" endtime="20201030 15:54:34.988"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.981" endtime="20201030 15:54:34.988"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:34.992" endtime="20201030 15:54:35.012"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.990" endtime="20201030 15:54:35.012"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.989" endtime="20201030 15:54:35.012"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.630" endtime="20201030 15:54:35.013"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.630" endtime="20201030 15:54:35.013"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:35.021" endtime="20201030 15:54:35.041"></status>
</kw>
<msg timestamp="20201030 15:54:35.042" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:35.019" endtime="20201030 15:54:35.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:35.044" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:35.043" endtime="20201030 15:54:35.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:35.045" endtime="20201030 15:54:35.047"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.017" endtime="20201030 15:54:35.048"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.015" endtime="20201030 15:54:35.048"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:35.055" endtime="20201030 15:54:35.339"></status>
</kw>
<msg timestamp="20201030 15:54:35.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023559875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023565306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:35.053" endtime="20201030 15:54:35.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:35.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023559875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023565306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:35.343" endtime="20201030 15:54:35.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:35.351" endtime="20201030 15:54:35.354"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.050" endtime="20201030 15:54:35.355"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.049" endtime="20201030 15:54:35.355"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:35.359" level="INFO">${RESULT} = [{'diff': 5.431000000000186e-06}, {'diff': 5.444000000000282e-06}, {'diff': 5.403000000001046e-06}, {'diff': 5.417000000000616e-06}, {'diff': 5.431000000000186e-06}, {'diff': 5.430000000000712e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:54:35.356" endtime="20201030 15:54:35.359"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:35.363" level="INFO">${OVERHEAD} = {'diff': [5.431000000000186e-06, 5.444000000000282e-06, 5.403000000001046e-06, 5.417000000000616e-06, 5.431000000000186e-06, 5.430000000000712e-06, 5.457999999999852e-06, 5.444000000000282e-06, 5.4449...</msg>
<status status="PASS" starttime="20201030 15:54:35.360" endtime="20201030 15:54:35.363"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:35.367" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:35.366" endtime="20201030 15:54:35.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:35.370" level="INFO">VALUE: [5.431000000000186e-06, 5.444000000000282e-06, 5.403000000001046e-06, 5.417000000000616e-06, 5.431000000000186e-06, 5.430000000000712e-06, 5.457999999999852e-06, 5.444000000000282e-06, 5.444999999999756e-06, 5.416000000001142e-06, 5.444000000000282e-06, 5.444000000000282e-06, 5.457999999999852e-06, 5.431000000000186e-06, 5.388000000002002e-06, 5.3889999999980065e-06, 5.457999999999852e-06, 5.457999999999852e-06, 5.444999999999756e-06, 5.444000000000282e-06, 5.4439999999968125e-06, 5.444000000000282e-06, 5.431000000000186e-06, 5.4439999999968125e-06, 5.444999999999756e-06, 5.416000000001142e-06, 5.416000000001142e-06, 5.430000000000712e-06, 5.403000000001046e-06, 5.360999999998867e-06, 5.431000000000186e-06, 5.36199999999834e-06, 5.457999999999852e-06, 5.499999999998562e-06, 5.403000000001046e-06, 5.444999999999756e-06, 5.417000000000616e-06, 5.444999999999756e-06, 5.444999999999756e-06, 5.415999999997673e-06, 5.431000000000186e-06, 5.457999999999852e-06, 5.431000000000186e-06, 5.471999999999422e-06, 5.417000000000616e-06, 5.430000000000712e-06, 5.417000000000616e-06, 5.444999999999756e-06, 5.444000000000282e-06, 5.444999999999756e-06]</msg>
<status status="PASS" starttime="20201030 15:54:35.368" endtime="20201030 15:54:35.374"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.364" endtime="20201030 15:54:35.375"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:35.378" endtime="20201030 15:54:35.398"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.377" endtime="20201030 15:54:35.399"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.376" endtime="20201030 15:54:35.400"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.014" endtime="20201030 15:54:35.401"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.013" endtime="20201030 15:54:35.401"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:35.413" endtime="20201030 15:54:35.432"></status>
</kw>
<msg timestamp="20201030 15:54:35.433" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:35.410" endtime="20201030 15:54:35.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:35.435" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:35.434" endtime="20201030 15:54:35.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:35.436" endtime="20201030 15:54:35.439"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.407" endtime="20201030 15:54:35.439"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.404" endtime="20201030 15:54:35.440"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:35.446" endtime="20201030 15:54:35.730"></status>
</kw>
<msg timestamp="20201030 15:54:35.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028961708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028967139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:35.445" endtime="20201030 15:54:35.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:35.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028961708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028967139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:35.734" endtime="20201030 15:54:35.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:35.743" endtime="20201030 15:54:35.744"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.442" endtime="20201030 15:54:35.745"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.440" endtime="20201030 15:54:35.745"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:35.749" level="INFO">${RESULT} = [{'diff': 5.431000000000186e-06}, {'diff': 5.417000000000616e-06}, {'diff': 5.471999999999422e-06}, {'diff': 5.431000000000186e-06}, {'diff': 5.417000000000616e-06}, {'diff': 5.431000000000186e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:54:35.746" endtime="20201030 15:54:35.750"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:35.754" level="INFO">${OVERHEAD} = {'diff': [5.431000000000186e-06, 5.417000000000616e-06, 5.471999999999422e-06, 5.431000000000186e-06, 5.417000000000616e-06, 5.431000000000186e-06, 5.417000000000616e-06, 5.403000000001046e-06, 5.4300...</msg>
<status status="PASS" starttime="20201030 15:54:35.750" endtime="20201030 15:54:35.754"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:35.758" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:35.757" endtime="20201030 15:54:35.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:35.760" level="INFO">VALUE: [5.431000000000186e-06, 5.417000000000616e-06, 5.471999999999422e-06, 5.431000000000186e-06, 5.417000000000616e-06, 5.431000000000186e-06, 5.417000000000616e-06, 5.403000000001046e-06, 5.430000000000712e-06, 5.444999999999756e-06, 5.431000000000186e-06, 5.444999999999756e-06, 5.444999999999756e-06, 5.485999999998992e-06, 5.416000000001142e-06, 5.430000000000712e-06, 5.471999999999422e-06, 5.416999999997146e-06, 5.416000000001142e-06, 5.431000000000186e-06, 5.416999999997146e-06, 5.444000000000282e-06, 5.375000000001906e-06, 5.417000000000616e-06, 5.514000000001601e-06, 5.431000000000186e-06, 5.417000000000616e-06, 5.416000000001142e-06, 5.499999999998562e-06, 5.417000000000616e-06, 5.431000000000186e-06, 5.444999999999756e-06, 5.444999999999756e-06, 5.457999999999852e-06, 5.444999999999756e-06, 5.417000000000616e-06, 5.444999999999756e-06, 5.403000000001046e-06, 5.431000000000186e-06, 5.512999999998658e-06, 5.417000000000616e-06, 5.416000000001142e-06, 5.417000000000616e-06, 5.444999999999756e-06, 5.430000000000712e-06, 5.4589999999993255e-06, 5.471999999999422e-06, 5.431000000000186e-06, 5.375000000001906e-06, 5.444000000000282e-06]</msg>
<status status="PASS" starttime="20201030 15:54:35.759" endtime="20201030 15:54:35.764"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.754" endtime="20201030 15:54:35.764"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:35.768" endtime="20201030 15:54:35.788"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.767" endtime="20201030 15:54:35.788"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.765" endtime="20201030 15:54:35.788"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.402" endtime="20201030 15:54:35.789"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.401" endtime="20201030 15:54:35.789"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:35.797" endtime="20201030 15:54:35.814"></status>
</kw>
<msg timestamp="20201030 15:54:35.814" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:35.795" endtime="20201030 15:54:35.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:35.817" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:35.815" endtime="20201030 15:54:35.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:35.818" endtime="20201030 15:54:35.819"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.793" endtime="20201030 15:54:35.820"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.791" endtime="20201030 15:54:35.820"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:35.827" endtime="20201030 15:54:36.115"></status>
</kw>
<msg timestamp="20201030 15:54:36.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021143694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021149125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:35.825" endtime="20201030 15:54:36.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:36.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021143694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021149125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:36.119" endtime="20201030 15:54:36.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:36.127" endtime="20201030 15:54:36.129"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.823" endtime="20201030 15:54:36.129"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.821" endtime="20201030 15:54:36.130"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:36.134" level="INFO">${RESULT} = [{'diff': 5.431000000000186e-06}, {'diff': 5.444999999999756e-06}, {'diff': 5.471999999999422e-06}, {'diff': 5.430000000000712e-06}, {'diff': 5.444999999999756e-06}, {'diff': 5.416000000001142e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:54:36.131" endtime="20201030 15:54:36.134"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:36.139" level="INFO">${OVERHEAD} = {'diff': [5.431000000000186e-06, 5.444999999999756e-06, 5.471999999999422e-06, 5.430000000000712e-06, 5.444999999999756e-06, 5.416000000001142e-06, 5.389000000001476e-06, 5.431000000000186e-06, 5.4440...</msg>
<status status="PASS" starttime="20201030 15:54:36.135" endtime="20201030 15:54:36.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:36.144" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:36.143" endtime="20201030 15:54:36.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:36.147" level="INFO">VALUE: [5.431000000000186e-06, 5.444999999999756e-06, 5.471999999999422e-06, 5.430000000000712e-06, 5.444999999999756e-06, 5.416000000001142e-06, 5.389000000001476e-06, 5.431000000000186e-06, 5.444000000000282e-06, 5.444000000000282e-06, 5.417000000000616e-06, 5.431000000000186e-06, 5.431000000000186e-06, 5.471999999999422e-06, 5.444999999999756e-06, 5.417000000000616e-06, 5.457999999999852e-06, 5.444999999999756e-06, 5.403000000001046e-06, 5.430000000000712e-06, 5.457999999999852e-06, 5.416000000001142e-06, 5.375000000001906e-06, 5.403000000001046e-06, 5.444999999999756e-06, 5.444999999999756e-06, 5.457999999999852e-06, 5.431000000000186e-06, 5.4589999999993255e-06, 5.444999999999756e-06, 5.417000000000616e-06, 5.429999999997243e-06, 5.431000000000186e-06, 5.471999999999422e-06, 5.444999999999756e-06, 5.457999999999852e-06, 5.417000000000616e-06, 5.431000000000186e-06, 5.472999999998895e-06, 5.444000000000282e-06, 5.431000000000186e-06, 5.485999999998992e-06, 5.472000000002891e-06, 5.444999999999756e-06, 5.445000000003225e-06, 5.444000000000282e-06, 5.416000000001142e-06, 5.430000000000712e-06, 5.444999999999756e-06, 5.403000000001046e-06]</msg>
<status status="PASS" starttime="20201030 15:54:36.145" endtime="20201030 15:54:36.148"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.140" endtime="20201030 15:54:36.148"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:36.152" endtime="20201030 15:54:36.172"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.150" endtime="20201030 15:54:36.172"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.149" endtime="20201030 15:54:36.173"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.790" endtime="20201030 15:54:36.173"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.789" endtime="20201030 15:54:36.173"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:36.181" endtime="20201030 15:54:36.200"></status>
</kw>
<msg timestamp="20201030 15:54:36.201" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:36.179" endtime="20201030 15:54:36.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:36.203" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:36.202" endtime="20201030 15:54:36.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:36.204" endtime="20201030 15:54:36.206"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.177" endtime="20201030 15:54:36.206"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.175" endtime="20201030 15:54:36.207"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:36.213" endtime="20201030 15:54:36.500"></status>
</kw>
<msg timestamp="20201030 15:54:36.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018996569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019001986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:36.212" endtime="20201030 15:54:36.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:36.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018996569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019001986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:36.504" endtime="20201030 15:54:36.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:36.512" endtime="20201030 15:54:36.515"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.209" endtime="20201030 15:54:36.515"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.207" endtime="20201030 15:54:36.516"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:36.520" level="INFO">${RESULT} = [{'diff': 5.416999999997146e-06}, {'diff': 5.417000000000616e-06}, {'diff': 5.430000000000712e-06}, {'diff': 5.430000000000712e-06}, {'diff': 5.431000000000186e-06}, {'diff': 5.389000000001476e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:54:36.517" endtime="20201030 15:54:36.520"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:36.524" level="INFO">${OVERHEAD} = {'diff': [5.416999999997146e-06, 5.417000000000616e-06, 5.430000000000712e-06, 5.430000000000712e-06, 5.431000000000186e-06, 5.389000000001476e-06, 5.417000000000616e-06, 5.429999999997243e-06, 5.4440...</msg>
<status status="PASS" starttime="20201030 15:54:36.521" endtime="20201030 15:54:36.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:36.528" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:36.527" endtime="20201030 15:54:36.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:36.531" level="INFO">VALUE: [5.416999999997146e-06, 5.417000000000616e-06, 5.430000000000712e-06, 5.430000000000712e-06, 5.431000000000186e-06, 5.389000000001476e-06, 5.417000000000616e-06, 5.429999999997243e-06, 5.444000000000282e-06, 5.471999999999422e-06, 5.417000000000616e-06, 5.430000000000712e-06, 5.431000000000186e-06, 5.444999999999756e-06, 5.444999999999756e-06, 5.430000000000712e-06, 5.444999999999756e-06, 5.444999999999756e-06, 5.444000000000282e-06, 5.430000000000712e-06, 5.444999999999756e-06, 5.417000000000616e-06, 5.429999999997243e-06, 5.431000000000186e-06, 5.431000000000186e-06, 5.499999999998562e-06, 5.429999999997243e-06, 5.444000000000282e-06, 5.429999999997243e-06, 5.401999999998103e-06, 5.444999999999756e-06, 5.431000000000186e-06, 5.471999999999422e-06, 5.375000000001906e-06, 5.472000000002891e-06, 5.403000000001046e-06, 5.374999999998437e-06, 5.429999999997243e-06, 5.416999999997146e-06, 5.415999999997673e-06, 5.431000000000186e-06, 5.444000000000282e-06, 5.431000000000186e-06, 5.431000000000186e-06, 5.431000000000186e-06, 5.402999999997576e-06, 5.431000000000186e-06, 5.416999999997146e-06, 5.430000000000712e-06, 5.444999999999756e-06]</msg>
<status status="PASS" starttime="20201030 15:54:36.529" endtime="20201030 15:54:36.531"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.525" endtime="20201030 15:54:36.532"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:36.536" endtime="20201030 15:54:36.555"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.534" endtime="20201030 15:54:36.556"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.533" endtime="20201030 15:54:36.556"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.174" endtime="20201030 15:54:36.556"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.173" endtime="20201030 15:54:36.556"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:36.564" endtime="20201030 15:54:36.582"></status>
</kw>
<msg timestamp="20201030 15:54:36.582" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:36.563" endtime="20201030 15:54:36.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:36.585" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:36.583" endtime="20201030 15:54:36.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:36.586" endtime="20201030 15:54:36.588"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.560" endtime="20201030 15:54:36.589"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.558" endtime="20201030 15:54:36.589"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:36.596" endtime="20201030 15:54:36.882"></status>
</kw>
<msg timestamp="20201030 15:54:36.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022325833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022331264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:36.594" endtime="20201030 15:54:36.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:36.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022325833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022331264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:36.886" endtime="20201030 15:54:36.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:36.895" endtime="20201030 15:54:36.896"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.592" endtime="20201030 15:54:36.897"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.590" endtime="20201030 15:54:36.897"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:36.901" level="INFO">${RESULT} = [{'diff': 5.431000000000186e-06}, {'diff': 5.417000000000616e-06}, {'diff': 5.416000000001142e-06}, {'diff': 5.431000000000186e-06}, {'diff': 5.402999999997576e-06}, {'diff': 5.417000000000616e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:54:36.898" endtime="20201030 15:54:36.901"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:36.905" level="INFO">${OVERHEAD} = {'diff': [5.431000000000186e-06, 5.417000000000616e-06, 5.416000000001142e-06, 5.431000000000186e-06, 5.402999999997576e-06, 5.417000000000616e-06, 5.457999999999852e-06, 5.444000000000282e-06, 5.4440...</msg>
<status status="PASS" starttime="20201030 15:54:36.902" endtime="20201030 15:54:36.906"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:36.909" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:36.908" endtime="20201030 15:54:36.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:36.912" level="INFO">VALUE: [5.431000000000186e-06, 5.417000000000616e-06, 5.416000000001142e-06, 5.431000000000186e-06, 5.402999999997576e-06, 5.417000000000616e-06, 5.457999999999852e-06, 5.444000000000282e-06, 5.444000000000282e-06, 5.431000000000186e-06, 5.431000000000186e-06, 5.431000000000186e-06, 5.430000000000712e-06, 5.444000000000282e-06, 5.444000000000282e-06, 5.431000000000186e-06, 5.472000000002891e-06, 5.457999999999852e-06, 5.416999999997146e-06, 5.361000000002336e-06, 5.430000000000712e-06, 5.416999999997146e-06, 5.430000000000712e-06, 5.444000000000282e-06, 5.457999999999852e-06, 5.444999999999756e-06, 5.431000000000186e-06, 5.528000000001171e-06, 5.431000000000186e-06, 5.431000000000186e-06, 5.387999999998533e-06, 5.444999999999756e-06, 5.389000000001476e-06, 5.416999999997146e-06, 5.444000000000282e-06, 5.444000000000282e-06, 5.431000000000186e-06, 5.457999999999852e-06, 5.430000000000712e-06, 5.528000000001171e-06, 5.444000000000282e-06, 5.444999999999756e-06, 5.431000000000186e-06, 5.416000000001142e-06, 5.4589999999993255e-06, 5.3889999999980065e-06, 5.416000000001142e-06, 5.417000000000616e-06, 5.444000000000282e-06, 5.415999999997673e-06]</msg>
<status status="PASS" starttime="20201030 15:54:36.911" endtime="20201030 15:54:36.914"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.906" endtime="20201030 15:54:36.914"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:36.918" endtime="20201030 15:54:36.937"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.916" endtime="20201030 15:54:36.938"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.915" endtime="20201030 15:54:36.938"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.557" endtime="20201030 15:54:36.938"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.557" endtime="20201030 15:54:36.939"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:36.947" endtime="20201030 15:54:36.963"></status>
</kw>
<msg timestamp="20201030 15:54:36.964" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:36.945" endtime="20201030 15:54:36.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:36.966" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:36.965" endtime="20201030 15:54:36.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:36.967" endtime="20201030 15:54:36.969"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.942" endtime="20201030 15:54:36.969"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.941" endtime="20201030 15:54:36.970"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:36.976" endtime="20201030 15:54:37.262"></status>
</kw>
<msg timestamp="20201030 15:54:37.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021886903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021892347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:36.975" endtime="20201030 15:54:37.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:37.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021886903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021892347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:37.266" endtime="20201030 15:54:37.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:37.275" endtime="20201030 15:54:37.276"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.972" endtime="20201030 15:54:37.277"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.970" endtime="20201030 15:54:37.277"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:37.281" level="INFO">${RESULT} = [{'diff': 5.444000000000282e-06}, {'diff': 5.417000000000616e-06}, {'diff': 5.444000000000282e-06}, {'diff': 5.486000000002461e-06}, {'diff': 5.473000000002365e-06}, {'diff': 5.444999999999756e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:54:37.278" endtime="20201030 15:54:37.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:37.286" level="INFO">${OVERHEAD} = {'diff': [5.444000000000282e-06, 5.417000000000616e-06, 5.444000000000282e-06, 5.486000000002461e-06, 5.473000000002365e-06, 5.444999999999756e-06, 5.431000000000186e-06, 5.403000000001046e-06, 5.4310...</msg>
<status status="PASS" starttime="20201030 15:54:37.282" endtime="20201030 15:54:37.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:37.290" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:37.289" endtime="20201030 15:54:37.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:37.293" level="INFO">VALUE: [5.444000000000282e-06, 5.417000000000616e-06, 5.444000000000282e-06, 5.486000000002461e-06, 5.473000000002365e-06, 5.444999999999756e-06, 5.431000000000186e-06, 5.403000000001046e-06, 5.431000000000186e-06, 5.444999999999756e-06, 5.417000000000616e-06, 5.417000000000616e-06, 5.500000000002031e-06, 5.444999999999756e-06, 5.430000000000712e-06, 5.431000000000186e-06, 5.431000000000186e-06, 5.444000000000282e-06, 5.444000000000282e-06, 5.401999999998103e-06, 5.444999999999756e-06, 5.444999999999756e-06, 5.444999999999756e-06, 5.444000000000282e-06, 5.430000000000712e-06, 5.444999999999756e-06, 5.444000000000282e-06, 5.459000000002795e-06, 5.4589999999993255e-06, 5.416000000001142e-06, 5.417000000000616e-06, 5.457999999999852e-06, 5.4589999999993255e-06, 5.431000000000186e-06, 5.431000000000186e-06, 5.431000000000186e-06, 5.416000000001142e-06, 5.473000000002365e-06, 5.444999999999756e-06, 5.429999999997243e-06, 5.444000000000282e-06, 5.444999999999756e-06, 5.431000000000186e-06, 5.415999999997673e-06, 5.430000000000712e-06, 5.430000000000712e-06, 5.415999999997673e-06, 5.361000000002336e-06, 5.457999999999852e-06, 5.472000000002891e-06]</msg>
<status status="PASS" starttime="20201030 15:54:37.292" endtime="20201030 15:54:37.294"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.287" endtime="20201030 15:54:37.294"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:37.298" endtime="20201030 15:54:37.317"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.296" endtime="20201030 15:54:37.318"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.295" endtime="20201030 15:54:37.318"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.939" endtime="20201030 15:54:37.319"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.939" endtime="20201030 15:54:37.319"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:37.327" endtime="20201030 15:54:37.341"></status>
</kw>
<msg timestamp="20201030 15:54:37.341" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:37.325" endtime="20201030 15:54:37.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:37.344" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:37.342" endtime="20201030 15:54:37.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:37.345" endtime="20201030 15:54:37.347"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.323" endtime="20201030 15:54:37.347"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.321" endtime="20201030 15:54:37.347"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:37.354" endtime="20201030 15:54:37.641"></status>
</kw>
<msg timestamp="20201030 15:54:37.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018663681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018669042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:37.352" endtime="20201030 15:54:37.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:37.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018663681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018669042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:37.645" endtime="20201030 15:54:37.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:37.653" endtime="20201030 15:54:37.656"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.350" endtime="20201030 15:54:37.656"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.348" endtime="20201030 15:54:37.657"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:37.661" level="INFO">${RESULT} = [{'diff': 5.360999999998867e-06}, {'diff': 5.486000000002461e-06}, {'diff': 5.528000000001171e-06}, {'diff': 5.444000000000282e-06}, {'diff': 5.430000000000712e-06}, {'diff': 5.444999999999756e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:54:37.657" endtime="20201030 15:54:37.661"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:37.665" level="INFO">${OVERHEAD} = {'diff': [5.360999999998867e-06, 5.486000000002461e-06, 5.528000000001171e-06, 5.444000000000282e-06, 5.430000000000712e-06, 5.444999999999756e-06, 5.417000000000616e-06, 5.457999999999852e-06, 5.4310...</msg>
<status status="PASS" starttime="20201030 15:54:37.662" endtime="20201030 15:54:37.665"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:37.669" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:37.668" endtime="20201030 15:54:37.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:37.672" level="INFO">VALUE: [5.360999999998867e-06, 5.486000000002461e-06, 5.528000000001171e-06, 5.444000000000282e-06, 5.430000000000712e-06, 5.444999999999756e-06, 5.417000000000616e-06, 5.457999999999852e-06, 5.431000000000186e-06, 5.374999999998437e-06, 5.416999999997146e-06, 5.444000000000282e-06, 5.375000000001906e-06, 5.417000000000616e-06, 5.415999999997673e-06, 5.444999999999756e-06, 5.499999999998562e-06, 5.403000000001046e-06, 5.403000000001046e-06, 5.401999999998103e-06, 5.444000000000282e-06, 5.444000000000282e-06, 5.444999999999756e-06, 5.444000000000282e-06, 5.431000000000186e-06, 5.485999999998992e-06, 5.360999999998867e-06, 5.375000000001906e-06, 5.431000000000186e-06, 5.403000000001046e-06, 5.430000000000712e-06, 5.375000000001906e-06, 5.499999999998562e-06, 5.457999999999852e-06, 5.429999999997243e-06, 5.430000000000712e-06, 5.416999999997146e-06, 5.416000000001142e-06, 5.430000000000712e-06, 5.431000000000186e-06, 5.431000000000186e-06, 5.5139999999981315e-06, 5.457999999999852e-06, 5.485999999998992e-06, 5.471999999999422e-06, 5.457999999999852e-06, 5.430000000000712e-06, 5.416000000001142e-06, 5.417000000000616e-06, 5.444000000000282e-06]</msg>
<status status="PASS" starttime="20201030 15:54:37.670" endtime="20201030 15:54:37.672"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.666" endtime="20201030 15:54:37.673"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:37.677" endtime="20201030 15:54:37.696"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.675" endtime="20201030 15:54:37.697"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.674" endtime="20201030 15:54:37.697"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.319" endtime="20201030 15:54:37.697"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.319" endtime="20201030 15:54:37.698"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:37.706" endtime="20201030 15:54:37.723"></status>
</kw>
<msg timestamp="20201030 15:54:37.724" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:37.704" endtime="20201030 15:54:37.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:37.726" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:37.725" endtime="20201030 15:54:37.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:37.727" endtime="20201030 15:54:37.730"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.701" endtime="20201030 15:54:37.730"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.700" endtime="20201030 15:54:37.731"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:37.737" endtime="20201030 15:54:38.022"></status>
</kw>
<msg timestamp="20201030 15:54:38.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021733458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021738875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:37.736" endtime="20201030 15:54:38.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:38.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021733458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021738875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:38.026" endtime="20201030 15:54:38.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:38.034" endtime="20201030 15:54:38.036"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.733" endtime="20201030 15:54:38.037"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.731" endtime="20201030 15:54:38.037"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:38.041" level="INFO">${RESULT} = [{'diff': 5.417000000000616e-06}, {'diff': 5.445000000003225e-06}, {'diff': 5.444000000000282e-06}, {'diff': 5.485999999998992e-06}, {'diff': 5.486999999998465e-06}, {'diff': 5.416000000001142e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:54:38.038" endtime="20201030 15:54:38.041"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:38.045" level="INFO">${OVERHEAD} = {'diff': [5.417000000000616e-06, 5.445000000003225e-06, 5.444000000000282e-06, 5.485999999998992e-06, 5.486999999998465e-06, 5.416000000001142e-06, 5.4589999999993255e-06, 5.430000000000712e-06, 5.431...</msg>
<status status="PASS" starttime="20201030 15:54:38.042" endtime="20201030 15:54:38.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:38.049" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:38.048" endtime="20201030 15:54:38.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:38.052" level="INFO">VALUE: [5.417000000000616e-06, 5.445000000003225e-06, 5.444000000000282e-06, 5.485999999998992e-06, 5.486999999998465e-06, 5.416000000001142e-06, 5.4589999999993255e-06, 5.430000000000712e-06, 5.431000000000186e-06, 5.444000000000282e-06, 5.403000000001046e-06, 5.444000000000282e-06, 5.430000000000712e-06, 5.444999999999756e-06, 5.417000000000616e-06, 5.416999999997146e-06, 5.444999999999756e-06, 5.430000000000712e-06, 5.417000000000616e-06, 5.3889999999980065e-06, 5.472999999998895e-06, 5.457999999999852e-06, 5.431000000000186e-06, 5.444000000000282e-06, 5.487000000001935e-06, 5.346999999999297e-06, 5.430000000000712e-06, 5.444000000000282e-06, 5.444999999999756e-06, 5.485999999998992e-06, 5.444999999999756e-06, 5.417000000000616e-06, 5.375000000001906e-06, 5.403000000001046e-06, 5.416999999997146e-06, 5.430000000000712e-06, 5.430000000000712e-06, 5.417000000000616e-06, 5.375000000001906e-06, 5.416000000001142e-06, 5.444000000000282e-06, 5.471999999999422e-06, 5.430000000000712e-06, 5.430000000000712e-06, 5.444000000000282e-06, 5.431000000000186e-06, 5.416000000001142e-06, 5.4439999999968125e-06, 5.417000000000616e-06, 5.403000000001046e-06]</msg>
<status status="PASS" starttime="20201030 15:54:38.050" endtime="20201030 15:54:38.053"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.046" endtime="20201030 15:54:38.054"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:38.058" endtime="20201030 15:54:38.077"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.056" endtime="20201030 15:54:38.078"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.055" endtime="20201030 15:54:38.078"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.698" endtime="20201030 15:54:38.078"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.698" endtime="20201030 15:54:38.078"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:38.086" endtime="20201030 15:54:38.104"></status>
</kw>
<msg timestamp="20201030 15:54:38.104" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:38.085" endtime="20201030 15:54:38.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:38.107" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:38.105" endtime="20201030 15:54:38.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:38.108" endtime="20201030 15:54:38.109"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.082" endtime="20201030 15:54:38.110"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.080" endtime="20201030 15:54:38.110"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:38.117" endtime="20201030 15:54:38.402"></status>
</kw>
<msg timestamp="20201030 15:54:38.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022639347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022644764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:38.116" endtime="20201030 15:54:38.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:38.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022639347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022644764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:38.406" endtime="20201030 15:54:38.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:38.414" endtime="20201030 15:54:38.416"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.113" endtime="20201030 15:54:38.416"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.111" endtime="20201030 15:54:38.417"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:38.421" level="INFO">${RESULT} = [{'diff': 5.417000000000616e-06}, {'diff': 5.431000000000186e-06}, {'diff': 5.430000000000712e-06}, {'diff': 5.416000000001142e-06}, {'diff': 5.458000000003321e-06}, {'diff': 5.471999999999422e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:54:38.418" endtime="20201030 15:54:38.421"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:38.426" level="INFO">${OVERHEAD} = {'diff': [5.417000000000616e-06, 5.431000000000186e-06, 5.430000000000712e-06, 5.416000000001142e-06, 5.458000000003321e-06, 5.471999999999422e-06, 5.415999999997673e-06, 5.457999999999852e-06, 5.4440...</msg>
<status status="PASS" starttime="20201030 15:54:38.422" endtime="20201030 15:54:38.426"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:38.430" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:38.429" endtime="20201030 15:54:38.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:38.433" level="INFO">VALUE: [5.417000000000616e-06, 5.431000000000186e-06, 5.430000000000712e-06, 5.416000000001142e-06, 5.458000000003321e-06, 5.471999999999422e-06, 5.415999999997673e-06, 5.457999999999852e-06, 5.444000000000282e-06, 5.429999999997243e-06, 5.415999999997673e-06, 5.444000000000282e-06, 5.429999999997243e-06, 5.417000000000616e-06, 5.4589999999993255e-06, 5.444999999999756e-06, 5.416000000001142e-06, 5.430000000000712e-06, 5.444000000000282e-06, 5.431000000000186e-06, 5.485999999998992e-06, 5.3889999999980065e-06, 5.431000000000186e-06, 5.430000000000712e-06, 5.417000000000616e-06, 5.430000000000712e-06, 5.431000000000186e-06, 5.3889999999980065e-06, 5.430000000000712e-06, 5.444000000000282e-06, 5.444999999999756e-06, 5.416999999997146e-06, 5.444999999999756e-06, 5.417000000000616e-06, 5.444999999999756e-06, 5.401999999998103e-06, 5.416000000001142e-06, 5.485999999998992e-06, 5.459000000002795e-06, 5.444000000000282e-06, 5.430000000000712e-06, 5.444000000000282e-06, 5.417000000000616e-06, 5.431000000000186e-06, 5.444000000000282e-06, 5.444999999999756e-06, 5.430999999996716e-06, 5.444000000000282e-06, 5.417000000000616e-06, 5.431000000000186e-06]</msg>
<status status="PASS" starttime="20201030 15:54:38.431" endtime="20201030 15:54:38.433"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.427" endtime="20201030 15:54:38.434"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:38.438" endtime="20201030 15:54:38.457"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.436" endtime="20201030 15:54:38.458"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.435" endtime="20201030 15:54:38.458"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.079" endtime="20201030 15:54:38.458"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.079" endtime="20201030 15:54:38.458"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:38.466" endtime="20201030 15:54:38.480"></status>
</kw>
<msg timestamp="20201030 15:54:38.481" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:38.465" endtime="20201030 15:54:38.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:38.483" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:38.482" endtime="20201030 15:54:38.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:38.484" endtime="20201030 15:54:38.486"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.462" endtime="20201030 15:54:38.487"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.460" endtime="20201030 15:54:38.487"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:38.494" endtime="20201030 15:54:38.783"></status>
</kw>
<msg timestamp="20201030 15:54:38.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01933525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019340667, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:54:38.492" endtime="20201030 15:54:38.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:38.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01933525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019340667, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:54:38.787" endtime="20201030 15:54:38.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:38.795" endtime="20201030 15:54:38.798"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.489" endtime="20201030 15:54:38.798"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.488" endtime="20201030 15:54:38.799"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:38.803" level="INFO">${RESULT} = [{'diff': 5.417000000000616e-06}, {'diff': 5.403000000001046e-06}, {'diff': 5.416000000001142e-06}, {'diff': 5.431000000000186e-06}, {'diff': 5.401999999998103e-06}, {'diff': 5.431000000000186e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:54:38.800" endtime="20201030 15:54:38.803"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:38.807" level="INFO">${OVERHEAD} = {'diff': [5.417000000000616e-06, 5.403000000001046e-06, 5.416000000001142e-06, 5.431000000000186e-06, 5.401999999998103e-06, 5.431000000000186e-06, 5.375000000001906e-06, 5.402000000001572e-06, 5.4440...</msg>
<status status="PASS" starttime="20201030 15:54:38.804" endtime="20201030 15:54:38.807"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:38.811" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:38.810" endtime="20201030 15:54:38.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:38.814" level="INFO">VALUE: [5.417000000000616e-06, 5.403000000001046e-06, 5.416000000001142e-06, 5.431000000000186e-06, 5.401999999998103e-06, 5.431000000000186e-06, 5.375000000001906e-06, 5.402000000001572e-06, 5.444000000000282e-06, 5.375000000001906e-06, 5.444999999999756e-06, 5.431000000000186e-06, 5.431000000000186e-06, 5.471999999999422e-06, 5.416000000001142e-06, 5.417000000000616e-06, 5.444000000000282e-06, 5.444000000000282e-06, 5.431000000000186e-06, 5.417000000000616e-06, 5.429999999997243e-06, 5.403000000001046e-06, 5.472999999998895e-06, 5.416999999997146e-06, 5.429999999997243e-06, 5.431000000000186e-06, 5.444000000000282e-06, 5.444000000000282e-06, 5.402999999997576e-06, 5.444999999999756e-06, 5.416999999997146e-06, 5.430000000000712e-06, 5.415999999997673e-06, 5.457999999999852e-06, 5.416000000001142e-06, 5.431000000000186e-06, 5.457999999999852e-06, 5.4439999999968125e-06, 5.430000000000712e-06, 5.3889999999980065e-06, 5.3889999999980065e-06, 5.499999999998562e-06, 5.429999999997243e-06, 5.417000000000616e-06, 5.403000000001046e-06, 5.444000000000282e-06, 5.445000000003225e-06, 5.417000000000616e-06, 5.402000000001572e-06, 5.416000000001142e-06]</msg>
<status status="PASS" starttime="20201030 15:54:38.812" endtime="20201030 15:54:38.814"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.808" endtime="20201030 15:54:38.815"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:38.819" endtime="20201030 15:54:38.838"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.817" endtime="20201030 15:54:38.839"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.816" endtime="20201030 15:54:38.839"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.459" endtime="20201030 15:54:38.839"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.459" endtime="20201030 15:54:38.840"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.162" endtime="20201030 15:54:38.840"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:54:31.083" endtime="20201030 15:54:38.840" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:38.847" endtime="20201030 15:54:38.867"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.846" endtime="20201030 15:54:38.867"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:38.882" endtime="20201030 15:54:38.903"></status>
</kw>
<msg timestamp="20201030 15:54:38.904" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:38.880" endtime="20201030 15:54:38.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:38.906" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:38.905" endtime="20201030 15:54:38.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:38.909" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:38.907" endtime="20201030 15:54:38.909"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:38.877" endtime="20201030 15:54:38.910"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:38.875" endtime="20201030 15:54:38.911"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.873" endtime="20201030 15:54:38.911"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:38.915" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:38.914" endtime="20201030 15:54:38.915"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.912" endtime="20201030 15:54:38.915"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.872" endtime="20201030 15:54:38.915"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.871" endtime="20201030 15:54:38.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:38.916" endtime="20201030 15:54:38.918"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.870" endtime="20201030 15:54:38.918"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.868" endtime="20201030 15:54:38.919"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.845" endtime="20201030 15:54:38.919"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:38.928" endtime="20201030 15:54:38.950"></status>
</kw>
<msg timestamp="20201030 15:54:38.951" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:38.926" endtime="20201030 15:54:38.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:38.953" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:38.952" endtime="20201030 15:54:38.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:38.955" endtime="20201030 15:54:38.956"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.923" endtime="20201030 15:54:38.957"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.921" endtime="20201030 15:54:38.957"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:38.960" endtime="20201030 15:54:38.961"></status>
</kw>
<msg timestamp="20201030 15:54:38.962" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 15:54:38.958" endtime="20201030 15:54:38.962"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:38.966" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:54:38.965" endtime="20201030 15:54:38.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:38.968" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:54:38.967" endtime="20201030 15:54:38.968"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.962" endtime="20201030 15:54:38.969"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:38.976" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:54:38.972" endtime="20201030 15:54:38.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:38.978" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:54:38.977" endtime="20201030 15:54:38.978"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.969" endtime="20201030 15:54:38.979"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:38.985" endtime="20201030 15:54:39.271"></status>
</kw>
<msg timestamp="20201030 15:54:39.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072816875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072835389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:38.984" endtime="20201030 15:54:39.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:39.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072816875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072835389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:39.276" endtime="20201030 15:54:39.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:39.284" endtime="20201030 15:54:39.286"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.981" endtime="20201030 15:54:39.286"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.979" endtime="20201030 15:54:39.287"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:39.290" level="INFO">${RESULT} = [{'diff': 1.8513999999997255e-05}, {'diff': 2.2542000000000395e-05}, {'diff': 2.258300000000657e-05}, {'diff': 2.255500000000743e-05}, {'diff': 2.2569999999999535e-05}, {'diff': 2.2527999999993886e-05...</msg>
<status status="PASS" starttime="20201030 15:54:39.287" endtime="20201030 15:54:39.291"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:39.295" level="INFO">${OVERHEAD} = {'diff': [1.8513999999997255e-05, 2.2542000000000395e-05, 2.258300000000657e-05, 2.255500000000743e-05, 2.2569999999999535e-05, 2.2527999999993886e-05, 2.254100000000092e-05, 2.2555999999993026e-05, 2...</msg>
<status status="PASS" starttime="20201030 15:54:39.292" endtime="20201030 15:54:39.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:39.299" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201030 15:54:39.298" endtime="20201030 15:54:39.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:39.302" level="INFO">VALUE: [1.8513999999997255e-05, 2.2542000000000395e-05, 2.258300000000657e-05, 2.255500000000743e-05, 2.2569999999999535e-05, 2.2527999999993886e-05, 2.254100000000092e-05, 2.2555999999993026e-05, 2.2499999999994746e-05, 2.252700000000829e-05, 2.2542000000000395e-05, 2.255500000000743e-05, 2.2582999999992692e-05, 2.2514000000001255e-05, 2.2527999999993886e-05, 2.254100000000092e-05, 2.2514000000001255e-05, 2.2610999999991832e-05, 2.2527999999993886e-05, 2.2500000000008624e-05, 2.2527999999993886e-05, 2.2556000000006904e-05, 2.2556000000006904e-05, 2.251300000000178e-05, 2.2569999999999535e-05, 2.2444000000010345e-05, 2.2527999999993886e-05, 2.2527999999993886e-05, 2.256900000000006e-05, 2.2542000000000395e-05, 2.2554999999993552e-05, 2.2556000000006904e-05, 2.254100000000092e-05, 2.258300000000657e-05, 2.2486000000002115e-05, 2.2527999999993886e-05, 2.254100000000092e-05, 2.258300000000657e-05, 2.2582999999992692e-05, 2.2542000000000395e-05, 2.254100000000092e-05, 2.2500000000008624e-05, 2.2542000000000395e-05, 2.2471999999995607e-05, 2.2500000000008624e-05, 2.2554999999993552e-05, 2.2554999999993552e-05, 2.2513999999987377e-05, 2.2500000000008624e-05, 2.2471999999995607e-05]</msg>
<status status="PASS" starttime="20201030 15:54:39.300" endtime="20201030 15:54:39.303"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.296" endtime="20201030 15:54:39.304"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:39.308" endtime="20201030 15:54:39.327"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.306" endtime="20201030 15:54:39.328"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.305" endtime="20201030 15:54:39.328"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.920" endtime="20201030 15:54:39.328"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:54:38.842" endtime="20201030 15:54:39.329" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:39.336" endtime="20201030 15:54:39.355"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.334" endtime="20201030 15:54:39.356"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:39.369" endtime="20201030 15:54:39.386"></status>
</kw>
<msg timestamp="20201030 15:54:39.387" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:39.367" endtime="20201030 15:54:39.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:39.389" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:39.388" endtime="20201030 15:54:39.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:39.392" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:39.390" endtime="20201030 15:54:39.392"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:39.365" endtime="20201030 15:54:39.393"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:39.362" endtime="20201030 15:54:39.394"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.361" endtime="20201030 15:54:39.394"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:39.398" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:39.397" endtime="20201030 15:54:39.398"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.395" endtime="20201030 15:54:39.398"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.360" endtime="20201030 15:54:39.398"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.359" endtime="20201030 15:54:39.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:39.399" endtime="20201030 15:54:39.401"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.358" endtime="20201030 15:54:39.401"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.356" endtime="20201030 15:54:39.402"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.333" endtime="20201030 15:54:39.402"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:39.412" endtime="20201030 15:54:39.482"></status>
</kw>
<msg timestamp="20201030 15:54:39.482" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:39.410" endtime="20201030 15:54:39.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:39.485" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:39.483" endtime="20201030 15:54:39.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:39.486" endtime="20201030 15:54:39.488"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.406" endtime="20201030 15:54:39.489"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.404" endtime="20201030 15:54:39.489"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:39.491" endtime="20201030 15:54:39.493"></status>
</kw>
<msg timestamp="20201030 15:54:39.493" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 15:54:39.490" endtime="20201030 15:54:39.493"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:39.497" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:54:39.496" endtime="20201030 15:54:39.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:39.499" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:54:39.498" endtime="20201030 15:54:39.500"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.494" endtime="20201030 15:54:39.500"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:39.504" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:54:39.503" endtime="20201030 15:54:39.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:39.506" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:54:39.505" endtime="20201030 15:54:39.506"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.501" endtime="20201030 15:54:39.507"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:39.514" endtime="20201030 15:54:39.805"></status>
</kw>
<msg timestamp="20201030 15:54:39.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067458389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067478861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:39.512" endtime="20201030 15:54:39.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:39.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067458389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067478861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:39.809" endtime="20201030 15:54:39.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:39.817" endtime="20201030 15:54:39.818"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.509" endtime="20201030 15:54:39.819"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.508" endtime="20201030 15:54:39.819"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:39.824" level="INFO">${RESULT} = [{'diff': 2.0472000000007484e-05}, {'diff': 2.9804999999993864e-05}, {'diff': 2.9792000000000707e-05}, {'diff': 2.9832999999993004e-05}, {'diff': 2.9819000000000373e-05}, {'diff': 2.9832999999993004e-...</msg>
<status status="PASS" starttime="20201030 15:54:39.820" endtime="20201030 15:54:39.824"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:39.829" level="INFO">${OVERHEAD} = {'diff': [2.0472000000007484e-05, 2.9804999999993864e-05, 2.9792000000000707e-05, 2.9832999999993004e-05, 2.9819000000000373e-05, 2.9832999999993004e-05, 2.9832999999993004e-05, 2.9736000000002427e-05...</msg>
<status status="PASS" starttime="20201030 15:54:39.825" endtime="20201030 15:54:39.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:39.833" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201030 15:54:39.832" endtime="20201030 15:54:39.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:39.836" level="INFO">VALUE: [2.0472000000007484e-05, 2.9804999999993864e-05, 2.9792000000000707e-05, 2.9832999999993004e-05, 2.9819000000000373e-05, 2.9832999999993004e-05, 2.9832999999993004e-05, 2.9736000000002427e-05, 2.9819999999999847e-05, 2.9846999999999513e-05, 2.9819999999999847e-05, 2.970900000000276e-05, 2.9806000000007216e-05, 2.9819000000000373e-05, 2.9763000000002093e-05, 2.9764000000001567e-05, 2.990300000001167e-05, 2.9791000000001233e-05, 2.9832999999993004e-05, 2.9804999999993864e-05, 2.9805999999993338e-05, 2.9860999999992144e-05, 2.9763000000002093e-05, 2.9832999999993004e-05, 2.9819999999999847e-05, 2.9819000000000373e-05, 2.9764000000001567e-05, 2.9819999999999847e-05, 2.9764000000001567e-05, 2.9805999999993338e-05, 2.9819999999999847e-05, 2.9778000000008076e-05, 2.9819999999999847e-05, 2.973599999998855e-05, 2.9791000000001233e-05, 2.9806000000007216e-05, 2.9749999999995058e-05, 2.9819000000000373e-05, 2.9791000000001233e-05, 2.9764000000001567e-05, 2.9764000000001567e-05, 2.9805999999993338e-05, 2.972199999999592e-05, 2.9777000000008602e-05, 2.9791000000001233e-05, 2.9776999999994724e-05, 2.9805000000007742e-05, 2.9833000000006882e-05, 2.972199999999592e-05, 2.9846999999999513e-05]</msg>
<status status="PASS" starttime="20201030 15:54:39.834" endtime="20201030 15:54:39.836"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.829" endtime="20201030 15:54:39.837"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:39.841" endtime="20201030 15:54:39.860"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.839" endtime="20201030 15:54:39.861"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.838" endtime="20201030 15:54:39.861"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.403" endtime="20201030 15:54:39.861"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:54:39.330" endtime="20201030 15:54:39.862" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:39.869" endtime="20201030 15:54:39.888"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.867" endtime="20201030 15:54:39.889"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:39.902" endtime="20201030 15:54:39.918"></status>
</kw>
<msg timestamp="20201030 15:54:39.919" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:39.900" endtime="20201030 15:54:39.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:39.921" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:39.920" endtime="20201030 15:54:39.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:39.925" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:39.922" endtime="20201030 15:54:39.926"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:39.898" endtime="20201030 15:54:39.926"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:39.896" endtime="20201030 15:54:39.927"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.894" endtime="20201030 15:54:39.927"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:39.931" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:39.930" endtime="20201030 15:54:39.931"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.928" endtime="20201030 15:54:39.931"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.893" endtime="20201030 15:54:39.932"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.893" endtime="20201030 15:54:39.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:39.932" endtime="20201030 15:54:39.934"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.891" endtime="20201030 15:54:39.935"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.890" endtime="20201030 15:54:39.935"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.866" endtime="20201030 15:54:39.935"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:39.944" endtime="20201030 15:54:40.115"></status>
</kw>
<msg timestamp="20201030 15:54:40.116" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:39.942" endtime="20201030 15:54:40.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:40.118" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:40.117" endtime="20201030 15:54:40.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:40.120" endtime="20201030 15:54:40.122"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.939" endtime="20201030 15:54:40.122"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.937" endtime="20201030 15:54:40.123"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:40.125" endtime="20201030 15:54:40.126"></status>
</kw>
<msg timestamp="20201030 15:54:40.127" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 15:54:40.123" endtime="20201030 15:54:40.127"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:40.131" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:54:40.130" endtime="20201030 15:54:40.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:40.133" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:54:40.132" endtime="20201030 15:54:40.133"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.128" endtime="20201030 15:54:40.134"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:40.138" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:54:40.137" endtime="20201030 15:54:40.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:40.140" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:54:40.139" endtime="20201030 15:54:40.140"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.134" endtime="20201030 15:54:40.141"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:40.147" endtime="20201030 15:54:40.466"></status>
</kw>
<msg timestamp="20201030 15:54:40.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068056542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0680895, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:54:40.146" endtime="20201030 15:54:40.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:40.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068056542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0680895, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:54:40.470" endtime="20201030 15:54:40.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:40.478" endtime="20201030 15:54:40.481"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.143" endtime="20201030 15:54:40.483"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.141" endtime="20201030 15:54:40.484"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:40.493" level="INFO">${RESULT} = [{'diff': 3.29579999999996e-05}, {'diff': 5.011099999999158e-05}, {'diff': 5.018099999999637e-05}, {'diff': 5.016600000000426e-05}, {'diff': 5.018000000001077e-05}, {'diff': 5.016600000000426e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:54:40.486" endtime="20201030 15:54:40.493"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:40.501" level="INFO">${OVERHEAD} = {'diff': [3.29579999999996e-05, 5.011099999999158e-05, 5.018099999999637e-05, 5.016600000000426e-05, 5.018000000001077e-05, 5.016600000000426e-05, 5.005600000000665e-05, 5.018099999999637e-05, 5.01670...</msg>
<status status="PASS" starttime="20201030 15:54:40.495" endtime="20201030 15:54:40.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:40.511" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201030 15:54:40.508" endtime="20201030 15:54:40.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:40.516" level="INFO">VALUE: [3.29579999999996e-05, 5.011099999999158e-05, 5.018099999999637e-05, 5.016600000000426e-05, 5.018000000001077e-05, 5.016600000000426e-05, 5.005600000000665e-05, 5.018099999999637e-05, 5.0167000000003736e-05, 5.015299999999723e-05, 5.018099999999637e-05, 5.005500000000718e-05, 5.008399999999191e-05, 5.0151999999997754e-05, 5.006899999999981e-05, 5.012499999999809e-05, 5.012499999999809e-05, 5.00549999999933e-05, 5.0167000000003736e-05, 5.015299999999723e-05, 5.009699999999895e-05, 5.012499999998421e-05, 5.0139000000004597e-05, 5.018099999998249e-05, 5.0139000000004597e-05, 5.012499999998421e-05, 5.0165999999990385e-05, 5.0167000000017614e-05, 5.009699999999895e-05, 5.008299999997856e-05, 5.0167000000017614e-05, 5.009799999999842e-05, 5.011099999999158e-05, 5.002800000000751e-05, 5.0139000000004597e-05, 5.016600000001814e-05, 5.01940000000034e-05, 5.009699999999895e-05, 5.016699999998986e-05, 5.018099999998249e-05, 5.015299999999723e-05, 5.006899999998593e-05, 5.006899999998593e-05, 5.0139000000004597e-05, 5.008300000000632e-05, 5.011200000001881e-05, 5.0139000000004597e-05, 5.0125000000011966e-05, 5.008300000000632e-05, 5.016600000001814e-05]</msg>
<status status="PASS" starttime="20201030 15:54:40.514" endtime="20201030 15:54:40.523"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.503" endtime="20201030 15:54:40.524"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:40.530" endtime="20201030 15:54:40.550"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.527" endtime="20201030 15:54:40.551"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.525" endtime="20201030 15:54:40.552"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.936" endtime="20201030 15:54:40.553"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:54:39.863" endtime="20201030 15:54:40.553" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:40.564" endtime="20201030 15:54:40.584"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.561" endtime="20201030 15:54:40.584"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:40.600" endtime="20201030 15:54:40.617"></status>
</kw>
<msg timestamp="20201030 15:54:40.617" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:40.598" endtime="20201030 15:54:40.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:40.620" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:40.618" endtime="20201030 15:54:40.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:40.623" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:40.621" endtime="20201030 15:54:40.623"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:40.595" endtime="20201030 15:54:40.624"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:40.593" endtime="20201030 15:54:40.624"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.591" endtime="20201030 15:54:40.624"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:40.629" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:40.628" endtime="20201030 15:54:40.630"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.625" endtime="20201030 15:54:40.630"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.589" endtime="20201030 15:54:40.631"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.589" endtime="20201030 15:54:40.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:40.632" endtime="20201030 15:54:40.634"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.587" endtime="20201030 15:54:40.634"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.585" endtime="20201030 15:54:40.635"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.559" endtime="20201030 15:54:40.635"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:40.647" endtime="20201030 15:54:40.671"></status>
</kw>
<msg timestamp="20201030 15:54:40.671" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:40.644" endtime="20201030 15:54:40.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:40.674" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:40.672" endtime="20201030 15:54:40.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:40.675" endtime="20201030 15:54:40.677"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.641" endtime="20201030 15:54:40.678"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.638" endtime="20201030 15:54:40.678"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:40.680" endtime="20201030 15:54:40.682"></status>
</kw>
<msg timestamp="20201030 15:54:40.682" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 15:54:40.679" endtime="20201030 15:54:40.683"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:40.687" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:54:40.685" endtime="20201030 15:54:40.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:40.689" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:54:40.688" endtime="20201030 15:54:40.689"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.683" endtime="20201030 15:54:40.689"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:40.695" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:54:40.693" endtime="20201030 15:54:40.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:40.697" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:54:40.696" endtime="20201030 15:54:40.697"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.690" endtime="20201030 15:54:40.697"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:40.704" endtime="20201030 15:54:40.990"></status>
</kw>
<msg timestamp="20201030 15:54:40.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.07443275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074450917, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:54:40.703" endtime="20201030 15:54:40.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.07443275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074450917, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:54:40.994" endtime="20201030 15:54:41.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:41.003" endtime="20201030 15:54:41.004"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.700" endtime="20201030 15:54:41.005"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.698" endtime="20201030 15:54:41.005"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:41.009" level="INFO">${RESULT} = [{'diff': 1.816699999999949e-05}, {'diff': 1.8193999999999155e-05}, {'diff': 1.8249999999997435e-05}, {'diff': 1.8208000000005664e-05}, {'diff': 1.8181000000005998e-05}, {'diff': 1.8222000000012173e-0...</msg>
<status status="PASS" starttime="20201030 15:54:41.006" endtime="20201030 15:54:41.009"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:41.013" level="INFO">${OVERHEAD} = {'diff': [1.816699999999949e-05, 1.8193999999999155e-05, 1.8249999999997435e-05, 1.8208000000005664e-05, 1.8181000000005998e-05, 1.8222000000012173e-05, 1.8193999999999155e-05, 1.8208000000005664e-05,...</msg>
<status status="PASS" starttime="20201030 15:54:41.010" endtime="20201030 15:54:41.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.019" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201030 15:54:41.017" endtime="20201030 15:54:41.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.022" level="INFO">VALUE: [1.816699999999949e-05, 1.8193999999999155e-05, 1.8249999999997435e-05, 1.8208000000005664e-05, 1.8181000000005998e-05, 1.8222000000012173e-05, 1.8193999999999155e-05, 1.8208000000005664e-05, 1.818099999999212e-05, 1.8236000000004804e-05, 1.8278000000010453e-05, 1.820899999999126e-05, 1.8181000000005998e-05, 1.8181000000005998e-05, 1.8249999999997435e-05, 1.8193999999999155e-05, 1.819499999999863e-05, 1.820899999999126e-05, 1.8166000000000015e-05, 1.816699999999949e-05, 1.8208000000005664e-05, 1.819499999999863e-05, 1.8180000000006524e-05, 1.8193999999999155e-05, 1.8223000000011647e-05, 1.8180000000006524e-05, 1.819499999999863e-05, 1.8193999999999155e-05, 1.816699999999949e-05, 1.816699999999949e-05, 1.8208000000005664e-05, 1.8235999999990926e-05, 1.8208000000005664e-05, 1.8153000000006858e-05, 1.8207999999991786e-05, 1.819499999999863e-05, 1.8221999999998295e-05, 1.8193999999999155e-05, 1.819499999999863e-05, 1.8207999999991786e-05, 1.811100000000121e-05, 1.8208000000005664e-05, 1.8221999999998295e-05, 1.8166000000000015e-05, 1.8179999999992646e-05, 1.8208000000005664e-05, 1.822299999999777e-05, 1.8181000000005998e-05, 1.8235999999990926e-05, 1.8236000000004804e-05]</msg>
<status status="PASS" starttime="20201030 15:54:41.020" endtime="20201030 15:54:41.022"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.014" endtime="20201030 15:54:41.023"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:41.027" endtime="20201030 15:54:41.046"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.025" endtime="20201030 15:54:41.047"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.024" endtime="20201030 15:54:41.047"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.636" endtime="20201030 15:54:41.048"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:54:40.556" endtime="20201030 15:54:41.048" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:41.056" endtime="20201030 15:54:41.075"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.054" endtime="20201030 15:54:41.076"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:41.089" endtime="20201030 15:54:41.105"></status>
</kw>
<msg timestamp="20201030 15:54:41.105" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:41.087" endtime="20201030 15:54:41.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.108" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:41.106" endtime="20201030 15:54:41.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.111" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:41.109" endtime="20201030 15:54:41.111"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:41.085" endtime="20201030 15:54:41.112"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:41.082" endtime="20201030 15:54:41.112"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.081" endtime="20201030 15:54:41.113"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:41.116" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:41.116" endtime="20201030 15:54:41.117"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.114" endtime="20201030 15:54:41.117"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.080" endtime="20201030 15:54:41.117"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.080" endtime="20201030 15:54:41.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:41.118" endtime="20201030 15:54:41.120"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.078" endtime="20201030 15:54:41.120"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.077" endtime="20201030 15:54:41.121"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.052" endtime="20201030 15:54:41.121"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:41.131" endtime="20201030 15:54:41.208"></status>
</kw>
<msg timestamp="20201030 15:54:41.209" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:41.129" endtime="20201030 15:54:41.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.211" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:41.210" endtime="20201030 15:54:41.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:41.213" endtime="20201030 15:54:41.214"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.125" endtime="20201030 15:54:41.215"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.123" endtime="20201030 15:54:41.215"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:41.218" endtime="20201030 15:54:41.219"></status>
</kw>
<msg timestamp="20201030 15:54:41.220" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 15:54:41.216" endtime="20201030 15:54:41.220"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.224" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:54:41.223" endtime="20201030 15:54:41.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.226" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:54:41.225" endtime="20201030 15:54:41.226"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.220" endtime="20201030 15:54:41.227"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.231" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:54:41.230" endtime="20201030 15:54:41.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.233" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:54:41.232" endtime="20201030 15:54:41.233"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.227" endtime="20201030 15:54:41.233"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:41.240" endtime="20201030 15:54:41.531"></status>
</kw>
<msg timestamp="20201030 15:54:41.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071081486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071111125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:41.239" endtime="20201030 15:54:41.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071081486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071111125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:41.535" endtime="20201030 15:54:41.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:41.543" endtime="20201030 15:54:41.545"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.236" endtime="20201030 15:54:41.545"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.234" endtime="20201030 15:54:41.546"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:41.550" level="INFO">${RESULT} = [{'diff': 2.9638999999997973e-05}, {'diff': 2.9555000000000553e-05}, {'diff': 2.9666999999997112e-05}, {'diff': 2.9596999999992324e-05}, {'diff': 2.9624999999991464e-05}, {'diff': 2.9638999999997973e-...</msg>
<status status="PASS" starttime="20201030 15:54:41.547" endtime="20201030 15:54:41.550"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:41.555" level="INFO">${OVERHEAD} = {'diff': [2.9638999999997973e-05, 2.9555000000000553e-05, 2.9666999999997112e-05, 2.9596999999992324e-05, 2.9624999999991464e-05, 2.9638999999997973e-05, 2.9666999999997112e-05, 2.962500000000534e-05,...</msg>
<status status="PASS" starttime="20201030 15:54:41.551" endtime="20201030 15:54:41.555"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.560" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201030 15:54:41.559" endtime="20201030 15:54:41.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.562" level="INFO">VALUE: [2.9638999999997973e-05, 2.9555000000000553e-05, 2.9666999999997112e-05, 2.9596999999992324e-05, 2.9624999999991464e-05, 2.9638999999997973e-05, 2.9666999999997112e-05, 2.962500000000534e-05, 2.9652999999990604e-05, 2.965300000000448e-05, 2.962500000000534e-05, 2.9638999999997973e-05, 2.965300000000448e-05, 2.965300000000448e-05, 2.9736000000002427e-05, 2.966599999999764e-05, 2.9666999999997112e-05, 2.966700000001099e-05, 2.9652999999990604e-05, 2.9652000000005008e-05, 2.9582999999999693e-05, 2.965199999999113e-05, 2.9610999999998833e-05, 2.9624999999991464e-05, 2.9610999999998833e-05, 2.9680000000004148e-05, 2.9582999999999693e-05, 2.967999999999027e-05, 2.97370000000019e-05, 2.9666999999997112e-05, 2.95970000000062e-05, 2.965300000000448e-05, 2.968100000000362e-05, 2.969399999999678e-05, 2.9666999999997112e-05, 2.9624999999991464e-05, 2.9596999999992324e-05, 2.9624999999991464e-05, 2.966700000001099e-05, 2.9694999999996252e-05, 2.962500000000534e-05, 2.9610999999998833e-05, 2.96379999999985e-05, 2.966599999999764e-05, 2.966599999999764e-05, 2.9597999999991798e-05, 2.9638999999997973e-05, 2.9666999999997112e-05, 2.9638999999997973e-05, 2.966700000001099e-05]</msg>
<status status="PASS" starttime="20201030 15:54:41.561" endtime="20201030 15:54:41.563"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.556" endtime="20201030 15:54:41.564"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:41.570" endtime="20201030 15:54:41.590"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.567" endtime="20201030 15:54:41.590"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.565" endtime="20201030 15:54:41.591"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.121" endtime="20201030 15:54:41.592"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:54:41.050" endtime="20201030 15:54:41.593" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:41.601" endtime="20201030 15:54:41.620"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.599" endtime="20201030 15:54:41.621"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:41.634" endtime="20201030 15:54:41.652"></status>
</kw>
<msg timestamp="20201030 15:54:41.653" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:41.633" endtime="20201030 15:54:41.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.655" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:41.654" endtime="20201030 15:54:41.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.659" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:41.656" endtime="20201030 15:54:41.659"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:41.630" endtime="20201030 15:54:41.660"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:41.628" endtime="20201030 15:54:41.661"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.626" endtime="20201030 15:54:41.661"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:41.665" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:41.664" endtime="20201030 15:54:41.665"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.662" endtime="20201030 15:54:41.665"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.626" endtime="20201030 15:54:41.665"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.625" endtime="20201030 15:54:41.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:41.666" endtime="20201030 15:54:41.668"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.624" endtime="20201030 15:54:41.668"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.622" endtime="20201030 15:54:41.669"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.598" endtime="20201030 15:54:41.669"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:41.678" endtime="20201030 15:54:41.851"></status>
</kw>
<msg timestamp="20201030 15:54:41.852" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:41.676" endtime="20201030 15:54:41.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.854" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:41.853" endtime="20201030 15:54:41.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:41.856" endtime="20201030 15:54:41.857"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.673" endtime="20201030 15:54:41.858"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.671" endtime="20201030 15:54:41.858"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:41.860" endtime="20201030 15:54:41.862"></status>
</kw>
<msg timestamp="20201030 15:54:41.862" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 15:54:41.859" endtime="20201030 15:54:41.863"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.867" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:54:41.866" endtime="20201030 15:54:41.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.869" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:54:41.868" endtime="20201030 15:54:41.869"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.863" endtime="20201030 15:54:41.869"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.873" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:54:41.872" endtime="20201030 15:54:41.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.876" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:54:41.875" endtime="20201030 15:54:41.876"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.870" endtime="20201030 15:54:41.876"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:41.883" endtime="20201030 15:54:42.180"></status>
</kw>
<msg timestamp="20201030 15:54:42.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.06951475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069552667, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:54:41.881" endtime="20201030 15:54:42.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:42.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.06951475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069552667, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:54:42.184" endtime="20201030 15:54:42.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:42.194" endtime="20201030 15:54:42.196"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.879" endtime="20201030 15:54:42.196"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.877" endtime="20201030 15:54:42.197"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:42.204" level="INFO">${RESULT} = [{'diff': 3.7916999999998424e-05}, {'diff': 3.797199999999723e-05}, {'diff': 3.7916999999998424e-05}, {'diff': 3.800000000001025e-05}, {'diff': 3.795900000000407e-05}, {'diff': 3.799999999999637e-05},...</msg>
<status status="PASS" starttime="20201030 15:54:42.198" endtime="20201030 15:54:42.204"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:42.211" level="INFO">${OVERHEAD} = {'diff': [3.7916999999998424e-05, 3.797199999999723e-05, 3.7916999999998424e-05, 3.800000000001025e-05, 3.795900000000407e-05, 3.799999999999637e-05, 3.797199999999723e-05, 3.798600000000374e-05, 3.78...</msg>
<status status="PASS" starttime="20201030 15:54:42.206" endtime="20201030 15:54:42.211"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:42.216" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201030 15:54:42.215" endtime="20201030 15:54:42.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:42.218" level="INFO">VALUE: [3.7916999999998424e-05, 3.797199999999723e-05, 3.7916999999998424e-05, 3.800000000001025e-05, 3.795900000000407e-05, 3.799999999999637e-05, 3.797199999999723e-05, 3.798600000000374e-05, 3.7888999999999284e-05, 3.793100000000493e-05, 3.7902999999991915e-05, 3.802799999999551e-05, 3.791600000001283e-05, 3.7902999999991915e-05, 3.793000000000546e-05, 3.797199999999723e-05, 3.795900000000407e-05, 3.7944999999997564e-05, 3.797200000001111e-05, 3.7888999999985407e-05, 3.791599999999895e-05, 3.797199999999723e-05, 3.798600000001762e-05, 3.797199999999723e-05, 3.790300000000579e-05, 3.795900000000407e-05, 3.795899999997632e-05, 3.790300000000579e-05, 3.794399999998421e-05, 3.791599999999895e-05, 3.797199999999723e-05, 3.790300000000579e-05, 3.7930999999991055e-05, 3.7916999999998424e-05, 3.7916999999998424e-05, 3.794399999998421e-05, 3.792999999999158e-05, 3.797199999999723e-05, 3.790300000000579e-05, 3.7888999999985407e-05, 3.7972999999996704e-05, 3.794399999998421e-05, 3.798599999998986e-05, 3.7972999999996704e-05, 3.788900000001316e-05, 3.791599999999895e-05, 3.79580000000046e-05, 3.7944999999983686e-05, 3.798599999998986e-05, 3.7972999999996704e-05]</msg>
<status status="PASS" starttime="20201030 15:54:42.217" endtime="20201030 15:54:42.219"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.212" endtime="20201030 15:54:42.220"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:42.226" endtime="20201030 15:54:42.246"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.224" endtime="20201030 15:54:42.247"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.222" endtime="20201030 15:54:42.247"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.670" endtime="20201030 15:54:42.247"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:54:41.595" endtime="20201030 15:54:42.248" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:42.254" endtime="20201030 15:54:42.274"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.253" endtime="20201030 15:54:42.275"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:42.289" endtime="20201030 15:54:42.305"></status>
</kw>
<msg timestamp="20201030 15:54:42.306" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:42.287" endtime="20201030 15:54:42.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:42.308" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:42.307" endtime="20201030 15:54:42.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:42.311" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:42.309" endtime="20201030 15:54:42.312"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:42.284" endtime="20201030 15:54:42.312"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:42.282" endtime="20201030 15:54:42.313"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.280" endtime="20201030 15:54:42.313"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:42.317" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:42.316" endtime="20201030 15:54:42.317"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.314" endtime="20201030 15:54:42.318"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.279" endtime="20201030 15:54:42.318"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.278" endtime="20201030 15:54:42.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:42.319" endtime="20201030 15:54:42.320"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.277" endtime="20201030 15:54:42.321"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.275" endtime="20201030 15:54:42.321"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.252" endtime="20201030 15:54:42.321"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:54:42.325" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:54:42.334" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:54:43.545" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:54:42.324" endtime="20201030 15:54:43.545"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:54:43.548" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 15:54:43.547" endtime="20201030 15:54:43.548"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.322" endtime="20201030 15:54:43.549"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:43.563" endtime="20201030 15:54:43.580"></status>
</kw>
<msg timestamp="20201030 15:54:43.581" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:43.560" endtime="20201030 15:54:43.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:43.585" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:43.583" endtime="20201030 15:54:43.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:43.586" endtime="20201030 15:54:43.588"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.554" endtime="20201030 15:54:43.589"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.552" endtime="20201030 15:54:43.590"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:43.598" endtime="20201030 15:54:43.906"></status>
</kw>
<msg timestamp="20201030 15:54:43.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.2330555, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.233062625, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:54:43.595" endtime="20201030 15:54:43.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:43.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.2330555, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.233062625, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:54:43.911" endtime="20201030 15:54:43.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:43.922" endtime="20201030 15:54:43.923"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.592" endtime="20201030 15:54:43.924"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.590" endtime="20201030 15:54:43.924"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:43.929" level="INFO">${PHILIP_RES} = [{'diff': 7.124999999996717e-06}, {'diff': 7.11100000017062e-06}, {'diff': 7.153000000093002e-06}, {'diff': 7.110999999948575e-06}, {'diff': 7.110999999948575e-06}, {'diff': 7.1390000000448595e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:54:43.925" endtime="20201030 15:54:43.929"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:43.934" level="INFO">${RESULT} = {'diff': [7.124999999996717e-06, 7.11100000017062e-06, 7.153000000093002e-06, 7.110999999948575e-06, 7.110999999948575e-06, 7.1390000000448595e-06, 7.1390000000448595e-06, 7.056000000060791e-06, 7.124...</msg>
<status status="PASS" starttime="20201030 15:54:43.930" endtime="20201030 15:54:43.934"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:43.939" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:43.937" endtime="20201030 15:54:43.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:43.941" level="INFO">VALUE: [7.124999999996717e-06, 7.11100000017062e-06, 7.153000000093002e-06, 7.110999999948575e-06, 7.110999999948575e-06, 7.1390000000448595e-06, 7.1390000000448595e-06, 7.056000000060791e-06, 7.124999999996717e-06, 7.152999999870957e-06, 7.124999999996717e-06, 7.124999999996717e-06, 7.124999999996717e-06, 7.207999999980785e-06, 1.8930999999833276e-05, 1.9041999999913628e-05, 1.8972000000117006e-05, 1.8902999999959036e-05, 1.9042000000135673e-05, 1.8971999999894962e-05, 1.8987000000025844e-05, 1.8999999999991246e-05, 1.8987000000025844e-05, 1.8958000000068864e-05, 1.8999999999991246e-05, 1.8999999999991246e-05, 1.8944000000020722e-05, 1.8987000000025844e-05, 1.9012999999956648e-05, 1.8959000000151605e-05, 1.8999999999991246e-05, 1.8971999999894962e-05, 1.8999999999991246e-05, 1.905599999996177e-05, 1.8999999999991246e-05, 1.8987000000025844e-05, 1.892999999997258e-05, 1.8999999999991246e-05, 1.905599999996177e-05, 1.895899999992956e-05, 1.9042000000135673e-05, 1.8999999999991246e-05, 1.8973000000199747e-05, 1.9014000000039388e-05, 1.8971999999894962e-05, 1.8971999999894962e-05, 1.8972999999977702e-05, 1.9014000000039388e-05, 1.898600000016515e-05, 1.8945000000103462e-05, 1.9014000000039388e-05, 1.8999999999991246e-05, 1.895799999984682e-05, 1.902800000008753e-05, 1.8999999999991246e-05, 1.9068999999927172e-05, 1.8985999999943104e-05, 1.8958000000068864e-05, 1.9012999999956648e-05, 1.8999999999991246e-05, 1.8958000000068864e-05, 1.8999999999991246e-05, 1.8999999999991246e-05, 1.893100000005532e-05]</msg>
<status status="PASS" starttime="20201030 15:54:43.940" endtime="20201030 15:54:43.942"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.935" endtime="20201030 15:54:43.942"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:43.947" endtime="20201030 15:54:43.968"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.945" endtime="20201030 15:54:43.970"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.943" endtime="20201030 15:54:43.970"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.550" endtime="20201030 15:54:43.971"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.550" endtime="20201030 15:54:43.972"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:43.991" endtime="20201030 15:54:44.009"></status>
</kw>
<msg timestamp="20201030 15:54:44.010" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:43.988" endtime="20201030 15:54:44.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:44.016" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:44.013" endtime="20201030 15:54:44.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:44.018" endtime="20201030 15:54:44.022"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.982" endtime="20201030 15:54:44.023"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.977" endtime="20201030 15:54:44.025"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:44.044" endtime="20201030 15:54:44.337"></status>
</kw>
<msg timestamp="20201030 15:54:44.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035531597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035558903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:44.039" endtime="20201030 15:54:44.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:44.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035531597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035558903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:44.341" endtime="20201030 15:54:44.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:44.350" endtime="20201030 15:54:44.352"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.031" endtime="20201030 15:54:44.352"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.026" endtime="20201030 15:54:44.353"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:44.357" level="INFO">${PHILIP_RES} = [{'diff': 2.7306000000004715e-05}, {'diff': 2.7347999999996486e-05}, {'diff': 2.7360999999996582e-05}, {'diff': 2.733300000000438e-05}, {'diff': 2.736100000000352e-05}, {'diff': 2.7304999999998303e-05...</msg>
<status status="PASS" starttime="20201030 15:54:44.354" endtime="20201030 15:54:44.357"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:44.362" level="INFO">${RESULT} = {'diff': [2.7306000000004715e-05, 2.7347999999996486e-05, 2.7360999999996582e-05, 2.733300000000438e-05, 2.736100000000352e-05, 2.7304999999998303e-05, 2.7402999999995292e-05, 2.7291999999998207e-05, ...</msg>
<status status="PASS" starttime="20201030 15:54:44.358" endtime="20201030 15:54:44.362"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:44.367" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:44.366" endtime="20201030 15:54:44.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:44.369" level="INFO">VALUE: [2.7306000000004715e-05, 2.7347999999996486e-05, 2.7360999999996582e-05, 2.733300000000438e-05, 2.736100000000352e-05, 2.7304999999998303e-05, 2.7402999999995292e-05, 2.7291999999998207e-05, 2.740300000000223e-05, 2.7346999999997013e-05, 2.7306000000004715e-05, 2.7305000000005242e-05, 2.7360999999996582e-05, 2.7347999999996486e-05, 2.7346999999997013e-05, 2.7346999999997013e-05, 2.737500000000309e-05, 2.7290999999998733e-05, 2.7374999999996152e-05, 2.7278000000005576e-05, 2.736100000000352e-05, 2.7291999999998207e-05, 2.7361999999996056e-05, 2.7332999999997443e-05, 2.733300000000438e-05, 2.7304999999998303e-05, 2.7347999999996486e-05, 2.7319999999997346e-05, 2.7319999999997346e-05, 2.734700000000395e-05, 2.7361999999996056e-05, 2.7290999999998733e-05, 2.736100000000352e-05, 2.7332999999997443e-05, 2.7290999999998733e-05, 2.734700000000395e-05, 2.7304999999998303e-05, 2.737500000000309e-05, 2.736100000000352e-05, 2.7306000000004715e-05, 2.7318999999997873e-05, 2.7249999999999497e-05, 2.7305999999997776e-05, 2.734700000000395e-05, 2.7318999999997873e-05, 2.7360999999996582e-05, 2.7332999999997443e-05, 2.736100000000352e-05, 2.7360999999996582e-05, 2.7318999999997873e-05]</msg>
<status status="PASS" starttime="20201030 15:54:44.368" endtime="20201030 15:54:44.370"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.363" endtime="20201030 15:54:44.370"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:44.375" endtime="20201030 15:54:44.394"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.373" endtime="20201030 15:54:44.395"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.371" endtime="20201030 15:54:44.395"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.974" endtime="20201030 15:54:44.395"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.973" endtime="20201030 15:54:44.396"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:44.404" endtime="20201030 15:54:44.419"></status>
</kw>
<msg timestamp="20201030 15:54:44.420" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:44.403" endtime="20201030 15:54:44.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:44.422" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:44.421" endtime="20201030 15:54:44.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:44.423" endtime="20201030 15:54:44.425"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.400" endtime="20201030 15:54:44.426"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.398" endtime="20201030 15:54:44.426"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:44.433" endtime="20201030 15:54:44.725"></status>
</kw>
<msg timestamp="20201030 15:54:44.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019799264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019835139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:44.431" endtime="20201030 15:54:44.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:44.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019799264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019835139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:44.730" endtime="20201030 15:54:44.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:44.738" endtime="20201030 15:54:44.740"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.429" endtime="20201030 15:54:44.740"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.427" endtime="20201030 15:54:44.741"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:44.746" level="INFO">${PHILIP_RES} = [{'diff': 3.5875000000001184e-05}, {'diff': 3.598600000000174e-05}, {'diff': 3.590200000000085e-05}, {'diff': 3.595799999999913e-05}, {'diff': 3.594399999999956e-05}, {'diff': 3.598599999999827e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:54:44.742" endtime="20201030 15:54:44.746"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:44.750" level="INFO">${RESULT} = {'diff': [3.5875000000001184e-05, 3.598600000000174e-05, 3.590200000000085e-05, 3.595799999999913e-05, 3.594399999999956e-05, 3.598599999999827e-05, 3.595900000000207e-05, 3.59580000000026e-05, 3.5999...</msg>
<status status="PASS" starttime="20201030 15:54:44.747" endtime="20201030 15:54:44.751"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:44.755" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:44.754" endtime="20201030 15:54:44.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:44.757" level="INFO">VALUE: [3.5875000000001184e-05, 3.598600000000174e-05, 3.590200000000085e-05, 3.595799999999913e-05, 3.594399999999956e-05, 3.598599999999827e-05, 3.595900000000207e-05, 3.59580000000026e-05, 3.599999999999784e-05, 3.593099999999946e-05, 3.597299999999817e-05, 3.598599999999827e-05, 3.5833000000002474e-05, 3.599999999999784e-05, 3.600000000000131e-05, 3.5889000000000754e-05, 3.592999999999999e-05, 3.597200000000217e-05, 3.5818999999999435e-05, 3.595799999999913e-05, 3.5916999999999893e-05, 3.59719999999987e-05, 3.5889000000000754e-05, 3.599999999999784e-05, 3.5888999999997284e-05, 3.598600000000174e-05, 3.594399999999956e-05, 3.597200000000217e-05, 3.594499999999903e-05, 3.595799999999913e-05, 3.59719999999987e-05, 3.593099999999946e-05, 3.5889000000000754e-05, 3.593099999999946e-05, 3.597200000000217e-05, 3.5916999999999893e-05, 3.600000000000131e-05, 3.5903000000000324e-05, 3.592999999999999e-05, 3.600000000000131e-05, 3.5916999999999893e-05, 3.597200000000217e-05, 3.590200000000085e-05, 3.594499999999903e-05, 3.5889000000000754e-05, 3.595799999999913e-05, 3.5889000000000754e-05, 3.595900000000207e-05, 3.595799999999913e-05, 3.593099999999946e-05]</msg>
<status status="PASS" starttime="20201030 15:54:44.756" endtime="20201030 15:54:44.758"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.751" endtime="20201030 15:54:44.759"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:44.763" endtime="20201030 15:54:44.783"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.761" endtime="20201030 15:54:44.785"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.760" endtime="20201030 15:54:44.786"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.397" endtime="20201030 15:54:44.787"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.396" endtime="20201030 15:54:44.788"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:44.811" endtime="20201030 15:54:44.831"></status>
</kw>
<msg timestamp="20201030 15:54:44.832" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:44.807" endtime="20201030 15:54:44.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:44.835" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:44.833" endtime="20201030 15:54:44.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:44.837" endtime="20201030 15:54:44.839"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.800" endtime="20201030 15:54:44.840"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.795" endtime="20201030 15:54:44.841"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:44.853" endtime="20201030 15:54:45.140"></status>
</kw>
<msg timestamp="20201030 15:54:45.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043707472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043752236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:44.851" endtime="20201030 15:54:45.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:45.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043707472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043752236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:45.145" endtime="20201030 15:54:45.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:45.153" endtime="20201030 15:54:45.155"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.846" endtime="20201030 15:54:45.155"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.843" endtime="20201030 15:54:45.156"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:45.160" level="INFO">${PHILIP_RES} = [{'diff': 4.476400000000269e-05}, {'diff': 4.473599999999661e-05}, {'diff': 4.472199999999704e-05}, {'diff': 4.482000000000097e-05}, {'diff': 4.475000000000312e-05}, {'diff': 4.480500000000193e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:54:45.156" endtime="20201030 15:54:45.160"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:45.164" level="INFO">${RESULT} = {'diff': [4.476400000000269e-05, 4.473599999999661e-05, 4.472199999999704e-05, 4.482000000000097e-05, 4.475000000000312e-05, 4.480500000000193e-05, 4.472200000000398e-05, 4.480500000000193e-05, 4.4777...</msg>
<status status="PASS" starttime="20201030 15:54:45.161" endtime="20201030 15:54:45.164"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:45.168" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:45.167" endtime="20201030 15:54:45.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:45.171" level="INFO">VALUE: [4.476400000000269e-05, 4.473599999999661e-05, 4.472199999999704e-05, 4.482000000000097e-05, 4.475000000000312e-05, 4.480500000000193e-05, 4.472200000000398e-05, 4.480500000000193e-05, 4.477799999999532e-05, 4.480599999999446e-05, 4.479200000000183e-05, 4.477800000000226e-05, 4.483400000000054e-05, 4.48060000000014e-05, 4.483400000000054e-05, 4.474999999999618e-05, 4.481999999999403e-05, 4.472199999999704e-05, 4.4819000000001497e-05, 4.472199999999704e-05, 4.477800000000226e-05, 4.482000000000097e-05, 4.472200000000398e-05, 4.475000000000312e-05, 4.4833000000001066e-05, 4.473600000000355e-05, 4.473599999999661e-05, 4.4709000000003885e-05, 4.475000000000312e-05, 4.4847000000000636e-05, 4.475000000000312e-05, 4.473599999999661e-05, 4.477699999999585e-05, 4.477700000000279e-05, 4.476400000000269e-05, 4.479200000000183e-05, 4.475000000000312e-05, 4.473599999999661e-05, 4.48060000000014e-05, 4.4833000000001066e-05, 4.482000000000097e-05, 4.48060000000014e-05, 4.480599999999446e-05, 4.479200000000183e-05, 4.479100000000236e-05, 4.475000000000312e-05, 4.476400000000269e-05, 4.477699999999585e-05, 4.48339999999936e-05, 4.4833000000001066e-05]</msg>
<status status="PASS" starttime="20201030 15:54:45.169" endtime="20201030 15:54:45.171"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.165" endtime="20201030 15:54:45.172"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:45.176" endtime="20201030 15:54:45.195"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.174" endtime="20201030 15:54:45.196"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.173" endtime="20201030 15:54:45.196"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.790" endtime="20201030 15:54:45.196"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.789" endtime="20201030 15:54:45.197"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:45.206" endtime="20201030 15:54:45.228"></status>
</kw>
<msg timestamp="20201030 15:54:45.229" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:45.204" endtime="20201030 15:54:45.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:45.231" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:45.230" endtime="20201030 15:54:45.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:45.232" endtime="20201030 15:54:45.234"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.202" endtime="20201030 15:54:45.234"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.199" endtime="20201030 15:54:45.235"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:45.241" endtime="20201030 15:54:45.546"></status>
</kw>
<msg timestamp="20201030 15:54:45.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022551014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022604903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:45.240" endtime="20201030 15:54:45.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:45.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022551014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022604903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:45.555" endtime="20201030 15:54:45.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:45.573" endtime="20201030 15:54:45.577"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.237" endtime="20201030 15:54:45.578"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.235" endtime="20201030 15:54:45.579"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:45.585" level="INFO">${PHILIP_RES} = [{'diff': 5.388899999999794e-05}, {'diff': 5.38470000000027e-05}, {'diff': 5.388899999999794e-05}, {'diff': 5.383299999999966e-05}, {'diff': 5.38609999999988e-05}, {'diff': 5.394499999999969e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:54:45.580" endtime="20201030 15:54:45.585"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:45.590" level="INFO">${RESULT} = {'diff': [5.388899999999794e-05, 5.38470000000027e-05, 5.388899999999794e-05, 5.383299999999966e-05, 5.38609999999988e-05, 5.394499999999969e-05, 5.384699999999923e-05, 5.391700000000055e-05, 5.387499...</msg>
<status status="PASS" starttime="20201030 15:54:45.586" endtime="20201030 15:54:45.590"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:45.595" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:45.594" endtime="20201030 15:54:45.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:45.597" level="INFO">VALUE: [5.388899999999794e-05, 5.38470000000027e-05, 5.388899999999794e-05, 5.383299999999966e-05, 5.38609999999988e-05, 5.394499999999969e-05, 5.384699999999923e-05, 5.391700000000055e-05, 5.387499999999837e-05, 5.390300000000098e-05, 5.38609999999988e-05, 5.390300000000098e-05, 5.3930000000000644e-05, 5.388900000000141e-05, 5.38340000000026e-05, 5.384699999999923e-05, 5.390299999999751e-05, 5.38479999999987e-05, 5.383299999999966e-05, 5.383299999999966e-05, 5.3901999999998035e-05, 5.38470000000027e-05, 5.38479999999987e-05, 5.384699999999923e-05, 5.390300000000098e-05, 5.38609999999988e-05, 5.390299999999751e-05, 5.380599999999999e-05, 5.388900000000141e-05, 5.386100000000227e-05, 5.387500000000184e-05, 5.381999999999956e-05, 5.388900000000141e-05, 5.38340000000026e-05, 5.3930000000000644e-05, 5.387499999999837e-05, 5.381999999999956e-05, 5.384699999999923e-05, 5.384800000000217e-05, 5.387499999999837e-05, 5.390300000000098e-05, 5.393100000000012e-05, 5.391700000000055e-05, 5.383299999999966e-05, 5.3916000000001074e-05, 5.383399999999913e-05, 5.387499999999837e-05, 5.386200000000174e-05, 5.384699999999923e-05, 5.390300000000098e-05]</msg>
<status status="PASS" starttime="20201030 15:54:45.596" endtime="20201030 15:54:45.605"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.591" endtime="20201030 15:54:45.606"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:45.610" endtime="20201030 15:54:45.629"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.608" endtime="20201030 15:54:45.630"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.607" endtime="20201030 15:54:45.630"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.198" endtime="20201030 15:54:45.630"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.197" endtime="20201030 15:54:45.630"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:45.639" endtime="20201030 15:54:45.660"></status>
</kw>
<msg timestamp="20201030 15:54:45.661" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:45.638" endtime="20201030 15:54:45.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:45.663" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:45.662" endtime="20201030 15:54:45.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:45.664" endtime="20201030 15:54:45.666"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.635" endtime="20201030 15:54:45.666"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.633" endtime="20201030 15:54:45.667"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:45.673" endtime="20201030 15:54:45.959"></status>
</kw>
<msg timestamp="20201030 15:54:45.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020780444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020843736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:45.672" endtime="20201030 15:54:45.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:45.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020780444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020843736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:45.963" endtime="20201030 15:54:45.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:45.971" endtime="20201030 15:54:45.973"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.669" endtime="20201030 15:54:45.974"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.667" endtime="20201030 15:54:45.974"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:45.978" level="INFO">${PHILIP_RES} = [{'diff': 6.329200000000298e-05}, {'diff': 6.32500000000008e-05}, {'diff': 6.322200000000167e-05}, {'diff': 6.330499999999961e-05}, {'diff': 6.329100000000004e-05}, {'diff': 6.313900000000025e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:54:45.975" endtime="20201030 15:54:45.978"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:45.983" level="INFO">${RESULT} = {'diff': [6.329200000000298e-05, 6.32500000000008e-05, 6.322200000000167e-05, 6.330499999999961e-05, 6.329100000000004e-05, 6.313900000000025e-05, 6.3195000000002e-05, 6.319499999999853e-05, 6.3291999...</msg>
<status status="PASS" starttime="20201030 15:54:45.979" endtime="20201030 15:54:45.984"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:45.988" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:45.987" endtime="20201030 15:54:45.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:45.990" level="INFO">VALUE: [6.329200000000298e-05, 6.32500000000008e-05, 6.322200000000167e-05, 6.330499999999961e-05, 6.329100000000004e-05, 6.313900000000025e-05, 6.3195000000002e-05, 6.319499999999853e-05, 6.329199999999952e-05, 6.329199999999952e-05, 6.337499999999746e-05, 6.322200000000167e-05, 6.330599999999909e-05, 6.32500000000008e-05, 6.32080000000021e-05, 6.316699999999939e-05, 6.333299999999875e-05, 6.326400000000038e-05, 6.327799999999995e-05, 6.317999999999949e-05, 6.330499999999961e-05, 6.329100000000004e-05, 6.329100000000004e-05, 6.322200000000167e-05, 6.32500000000008e-05, 6.326400000000038e-05, 6.323700000000071e-05, 6.320799999999863e-05, 6.329100000000004e-05, 6.329100000000004e-05, 6.327799999999995e-05, 6.32639999999969e-05, 6.327799999999995e-05, 6.334800000000126e-05, 6.318099999999896e-05, 6.32630000000009e-05, 6.330499999999961e-05, 6.326400000000038e-05, 6.32089999999981e-05, 6.330599999999909e-05, 6.329199999999952e-05, 6.326400000000038e-05, 6.327799999999995e-05, 6.331999999999866e-05, 6.3276999999997e-05, 6.318099999999896e-05, 6.316699999999939e-05, 6.326400000000038e-05, 6.329199999999952e-05, 6.330599999999909e-05]</msg>
<status status="PASS" starttime="20201030 15:54:45.989" endtime="20201030 15:54:45.991"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.984" endtime="20201030 15:54:45.992"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:45.995" endtime="20201030 15:54:46.015"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.994" endtime="20201030 15:54:46.015"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.993" endtime="20201030 15:54:46.016"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.631" endtime="20201030 15:54:46.016"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.631" endtime="20201030 15:54:46.016"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:46.025" endtime="20201030 15:54:46.047"></status>
</kw>
<msg timestamp="20201030 15:54:46.048" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:46.023" endtime="20201030 15:54:46.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:46.054" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:46.052" endtime="20201030 15:54:46.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:46.055" endtime="20201030 15:54:46.057"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.020" endtime="20201030 15:54:46.057"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.019" endtime="20201030 15:54:46.058"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:46.066" endtime="20201030 15:54:46.357"></status>
</kw>
<msg timestamp="20201030 15:54:46.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021992194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022065111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:46.063" endtime="20201030 15:54:46.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:46.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021992194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022065111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:46.361" endtime="20201030 15:54:46.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:46.369" endtime="20201030 15:54:46.371"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.060" endtime="20201030 15:54:46.371"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.058" endtime="20201030 15:54:46.372"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:46.376" level="INFO">${PHILIP_RES} = [{'diff': 7.291699999999873e-05}, {'diff': 7.283300000000131e-05}, {'diff': 7.280500000000217e-05}, {'diff': 7.277800000000251e-05}, {'diff': 7.283400000000079e-05}, {'diff': 7.277799999999904e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:54:46.373" endtime="20201030 15:54:46.376"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:46.380" level="INFO">${RESULT} = {'diff': [7.291699999999873e-05, 7.283300000000131e-05, 7.280500000000217e-05, 7.277800000000251e-05, 7.283400000000079e-05, 7.277799999999904e-05, 7.277799999999904e-05, 7.28049999999987e-05, 7.28470...</msg>
<status status="PASS" starttime="20201030 15:54:46.377" endtime="20201030 15:54:46.380"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:46.385" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:46.384" endtime="20201030 15:54:46.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:46.388" level="INFO">VALUE: [7.291699999999873e-05, 7.283300000000131e-05, 7.280500000000217e-05, 7.277800000000251e-05, 7.283400000000079e-05, 7.277799999999904e-05, 7.277799999999904e-05, 7.28049999999987e-05, 7.284700000000088e-05, 7.28049999999987e-05, 7.277800000000251e-05, 7.288899999999959e-05, 7.279200000000208e-05, 7.284700000000088e-05, 7.287500000000002e-05, 7.276399999999947e-05, 7.277799999999904e-05, 7.29309999999983e-05, 7.287500000000002e-05, 7.27499999999999e-05, 7.276399999999947e-05, 7.288800000000012e-05, 7.279199999999861e-05, 7.2763e-05, 7.277799999999904e-05, 7.276399999999947e-05, 7.276399999999947e-05, 7.287500000000002e-05, 7.277699999999956e-05, 7.292999999999883e-05, 7.286199999999993e-05, 7.277799999999904e-05, 7.284800000000036e-05, 7.276399999999947e-05, 7.290300000000263e-05, 7.286100000000045e-05, 7.292999999999883e-05, 7.279199999999861e-05, 7.284700000000088e-05, 7.286199999999993e-05, 7.283300000000131e-05, 7.281899999999827e-05, 7.283300000000131e-05, 7.280500000000217e-05, 7.282000000000122e-05, 7.282000000000122e-05, 7.287500000000002e-05, 7.287500000000002e-05, 7.279200000000208e-05, 7.287500000000002e-05]</msg>
<status status="PASS" starttime="20201030 15:54:46.386" endtime="20201030 15:54:46.389"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.381" endtime="20201030 15:54:46.389"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:46.393" endtime="20201030 15:54:46.413"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.392" endtime="20201030 15:54:46.413"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.390" endtime="20201030 15:54:46.414"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.017" endtime="20201030 15:54:46.414"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.017" endtime="20201030 15:54:46.414"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:46.423" endtime="20201030 15:54:46.449"></status>
</kw>
<msg timestamp="20201030 15:54:46.449" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:46.421" endtime="20201030 15:54:46.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:46.452" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:46.450" endtime="20201030 15:54:46.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:46.453" endtime="20201030 15:54:46.454"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.418" endtime="20201030 15:54:46.455"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.416" endtime="20201030 15:54:46.455"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:46.462" endtime="20201030 15:54:46.749"></status>
</kw>
<msg timestamp="20201030 15:54:46.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020957389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021040056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:46.460" endtime="20201030 15:54:46.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:46.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020957389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021040056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:46.753" endtime="20201030 15:54:46.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:46.762" endtime="20201030 15:54:46.763"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.458" endtime="20201030 15:54:46.764"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.456" endtime="20201030 15:54:46.764"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:46.768" level="INFO">${PHILIP_RES} = [{'diff': 8.266700000000154e-05}, {'diff': 8.266700000000154e-05}, {'diff': 8.27780000000021e-05}, {'diff': 8.273599999999992e-05}, {'diff': 8.26529999999985e-05}, {'diff': 8.273599999999992e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:54:46.765" endtime="20201030 15:54:46.769"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:46.773" level="INFO">${RESULT} = {'diff': [8.266700000000154e-05, 8.266700000000154e-05, 8.27780000000021e-05, 8.273599999999992e-05, 8.26529999999985e-05, 8.273599999999992e-05, 8.272200000000035e-05, 8.27780000000021e-05, 8.2735999...</msg>
<status status="PASS" starttime="20201030 15:54:46.769" endtime="20201030 15:54:46.773"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:46.777" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:46.776" endtime="20201030 15:54:46.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:46.783" level="INFO">VALUE: [8.266700000000154e-05, 8.266700000000154e-05, 8.27780000000021e-05, 8.273599999999992e-05, 8.26529999999985e-05, 8.273599999999992e-05, 8.272200000000035e-05, 8.27780000000021e-05, 8.273599999999992e-05, 8.273599999999992e-05, 8.268099999999765e-05, 8.277799999999863e-05, 8.272200000000035e-05, 8.27369999999994e-05, 8.266700000000154e-05, 8.274999999999949e-05, 8.270900000000025e-05, 8.26390000000024e-05, 8.277799999999863e-05, 8.266699999999808e-05, 8.268100000000111e-05, 8.272200000000035e-05, 8.274999999999949e-05, 8.266699999999808e-05, 8.26109999999998e-05, 8.26109999999998e-05, 8.273599999999992e-05, 8.274999999999949e-05, 8.268100000000111e-05, 8.270800000000078e-05, 8.268100000000111e-05, 8.274999999999949e-05, 8.276299999999959e-05, 8.268100000000111e-05, 8.27780000000021e-05, 8.276400000000253e-05, 8.274999999999949e-05, 8.272299999999982e-05, 8.276399999999906e-05, 8.263799999999946e-05, 8.276400000000253e-05, 8.267999999999817e-05, 8.276399999999906e-05, 8.268100000000111e-05, 8.277799999999863e-05, 8.265299999999504e-05, 8.27919999999982e-05, 8.276399999999906e-05, 8.265199999999556e-05, 8.276399999999906e-05]</msg>
<status status="PASS" starttime="20201030 15:54:46.779" endtime="20201030 15:54:46.784"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.774" endtime="20201030 15:54:46.785"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:46.788" endtime="20201030 15:54:46.808"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.787" endtime="20201030 15:54:46.809"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.786" endtime="20201030 15:54:46.809"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.415" endtime="20201030 15:54:46.809"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.414" endtime="20201030 15:54:46.809"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:46.818" endtime="20201030 15:54:46.846"></status>
</kw>
<msg timestamp="20201030 15:54:46.846" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:46.817" endtime="20201030 15:54:46.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:46.849" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:46.848" endtime="20201030 15:54:46.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:46.850" endtime="20201030 15:54:46.852"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.814" endtime="20201030 15:54:46.852"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.812" endtime="20201030 15:54:46.853"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:46.860" endtime="20201030 15:54:47.183"></status>
</kw>
<msg timestamp="20201030 15:54:47.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022571597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022664347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:46.858" endtime="20201030 15:54:47.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:47.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022571597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022664347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:47.188" endtime="20201030 15:54:47.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:47.196" endtime="20201030 15:54:47.198"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.855" endtime="20201030 15:54:47.198"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.854" endtime="20201030 15:54:47.199"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:47.203" level="INFO">${PHILIP_RES} = [{'diff': 9.275000000000255e-05}, {'diff': 9.28330000000005e-05}, {'diff': 9.275000000000255e-05}, {'diff': 9.286099999999964e-05}, {'diff': 9.283399999999997e-05}, {'diff': 9.281900000000093e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:54:47.199" endtime="20201030 15:54:47.203"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:47.208" level="INFO">${RESULT} = {'diff': [9.275000000000255e-05, 9.28330000000005e-05, 9.275000000000255e-05, 9.286099999999964e-05, 9.283399999999997e-05, 9.281900000000093e-05, 9.287499999999921e-05, 9.273599999999951e-05, 9.27780...</msg>
<status status="PASS" starttime="20201030 15:54:47.204" endtime="20201030 15:54:47.208"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:47.212" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:47.211" endtime="20201030 15:54:47.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:47.215" level="INFO">VALUE: [9.275000000000255e-05, 9.28330000000005e-05, 9.275000000000255e-05, 9.286099999999964e-05, 9.283399999999997e-05, 9.281900000000093e-05, 9.287499999999921e-05, 9.273599999999951e-05, 9.277800000000169e-05, 9.28330000000005e-05, 9.284800000000301e-05, 9.277800000000169e-05, 9.277800000000169e-05, 9.281899999999746e-05, 9.277800000000169e-05, 9.276399999999865e-05, 9.28200000000004e-05, 9.287499999999921e-05, 9.277799999999822e-05, 9.281900000000093e-05, 9.28330000000005e-05, 9.283399999999997e-05, 9.277800000000169e-05, 9.277700000000222e-05, 9.277800000000169e-05, 9.28330000000005e-05, 9.279099999999832e-05, 9.277800000000169e-05, 9.26940000000008e-05, 9.281900000000093e-05, 9.28330000000005e-05, 9.279200000000126e-05, 9.279200000000126e-05, 9.269499999999681e-05, 9.281900000000093e-05, 9.28330000000005e-05, 9.273599999999604e-05, 9.28330000000005e-05, 9.28200000000004e-05, 9.279100000000179e-05, 9.280600000000083e-05, 9.286099999999964e-05, 9.276399999999518e-05, 9.277800000000169e-05, 9.287499999999921e-05, 9.276299999999571e-05, 9.276400000000212e-05, 9.272199999999647e-05, 9.276400000000212e-05, 9.275000000000255e-05]</msg>
<status status="PASS" starttime="20201030 15:54:47.214" endtime="20201030 15:54:47.216"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.209" endtime="20201030 15:54:47.216"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:47.220" endtime="20201030 15:54:47.240"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.219" endtime="20201030 15:54:47.240"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.217" endtime="20201030 15:54:47.241"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.810" endtime="20201030 15:54:47.241"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.810" endtime="20201030 15:54:47.241"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:47.250" endtime="20201030 15:54:47.277"></status>
</kw>
<msg timestamp="20201030 15:54:47.278" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:47.248" endtime="20201030 15:54:47.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:47.281" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:47.279" endtime="20201030 15:54:47.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:47.282" endtime="20201030 15:54:47.283"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.246" endtime="20201030 15:54:47.284"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.244" endtime="20201030 15:54:47.284"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:47.291" endtime="20201030 15:54:47.577"></status>
</kw>
<msg timestamp="20201030 15:54:47.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023094167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023197208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:47.290" endtime="20201030 15:54:47.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:47.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023094167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023197208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:47.581" endtime="20201030 15:54:47.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:47.590" endtime="20201030 15:54:47.592"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.287" endtime="20201030 15:54:47.593"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.285" endtime="20201030 15:54:47.593"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:47.597" level="INFO">${PHILIP_RES} = [{'diff': 0.00010304100000000163}, {'diff': 0.0001030420000000011}, {'diff': 0.00010315299999999819}, {'diff': 0.00010322200000000004}, {'diff': 0.00010304100000000163}, {'diff': 0.0001030830000000003...</msg>
<status status="PASS" starttime="20201030 15:54:47.594" endtime="20201030 15:54:47.598"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:47.602" level="INFO">${RESULT} = {'diff': [0.00010304100000000163, 0.0001030420000000011, 0.00010315299999999819, 0.00010322200000000004, 0.00010304100000000163, 0.00010308300000000034, 0.00010316699999999776, 0.00010311099999999948,...</msg>
<status status="PASS" starttime="20201030 15:54:47.598" endtime="20201030 15:54:47.602"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:47.606" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:47.605" endtime="20201030 15:54:47.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:47.609" level="INFO">VALUE: [0.00010304100000000163, 0.0001030420000000011, 0.00010315299999999819, 0.00010322200000000004, 0.00010304100000000163, 0.00010308300000000034, 0.00010316699999999776, 0.00010311099999999948, 0.00010312499999999905, 0.00010311099999999948, 0.0001031810000000008, 0.00010312499999999905, 0.00010304099999999816, 0.0001031940000000009, 0.00010315299999999819, 0.00010318099999999733, 0.00010312499999999905, 0.00010315299999999819, 0.00010307000000000024, 0.0001030420000000011, 0.00010311099999999948, 0.00010313899999999862, 0.00010305600000000067, 0.00010305600000000067, 0.0001030420000000011, 0.0001031940000000009, 0.00010313899999999862, 0.00010306999999999678, 0.00010306900000000424, 0.0001031940000000009, 0.00010320799999999353, 0.00010311099999999601, 0.00010305600000000414, 0.00010313899999999515, 0.0001030139999999985, 0.00010315200000000219, 0.00010309700000000338, 0.00010311099999999601, 0.00010304099999999816, 0.0001030689999999973, 0.0001031940000000009, 0.00010315300000000166, 0.00010304199999999764, 0.00010311100000000295, 0.00010316700000000123, 0.00010313900000000209, 0.00010309700000000338, 0.00010311100000000295, 0.0001030139999999985, 0.00010313900000000209]</msg>
<status status="PASS" starttime="20201030 15:54:47.607" endtime="20201030 15:54:47.609"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.602" endtime="20201030 15:54:47.610"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:47.614" endtime="20201030 15:54:47.633"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.612" endtime="20201030 15:54:47.634"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.611" endtime="20201030 15:54:47.634"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.242" endtime="20201030 15:54:47.635"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.241" endtime="20201030 15:54:47.635"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:47.644" endtime="20201030 15:54:47.674"></status>
</kw>
<msg timestamp="20201030 15:54:47.675" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:47.642" endtime="20201030 15:54:47.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:47.678" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:47.676" endtime="20201030 15:54:47.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:47.679" endtime="20201030 15:54:47.680"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.639" endtime="20201030 15:54:47.681"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.637" endtime="20201030 15:54:47.681"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:47.688" endtime="20201030 15:54:47.975"></status>
</kw>
<msg timestamp="20201030 15:54:47.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021232153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021345875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:47.687" endtime="20201030 15:54:47.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:47.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021232153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021345875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:47.979" endtime="20201030 15:54:47.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:47.987" endtime="20201030 15:54:47.989"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.684" endtime="20201030 15:54:47.989"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.682" endtime="20201030 15:54:47.990"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:47.994" level="INFO">${PHILIP_RES} = [{'diff': 0.00011372200000000013}, {'diff': 0.00011362499999999914}, {'diff': 0.00011365299999999828}, {'diff': 0.000113597}, {'diff': 0.00011372200000000013}, {'diff': 0.00011370900000000003}, {'diff...</msg>
<status status="PASS" starttime="20201030 15:54:47.991" endtime="20201030 15:54:47.994"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:47.998" level="INFO">${RESULT} = {'diff': [0.00011372200000000013, 0.00011362499999999914, 0.00011365299999999828, 0.000113597, 0.00011372200000000013, 0.00011370900000000003, 0.00011372200000000013, 0.00011370800000000056, 0.0001136...</msg>
<status status="PASS" starttime="20201030 15:54:47.995" endtime="20201030 15:54:47.998"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:48.003" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:48.002" endtime="20201030 15:54:48.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:48.005" level="INFO">VALUE: [0.00011372200000000013, 0.00011362499999999914, 0.00011365299999999828, 0.000113597, 0.00011372200000000013, 0.00011370900000000003, 0.00011372200000000013, 0.00011370800000000056, 0.00011369500000000046, 0.00011368100000000089, 0.00011372200000000013, 0.00011361099999999957, 0.00011366599999999838, 0.00011374999999999927, 0.00011370900000000003, 0.00011370800000000056, 0.00011365299999999828, 0.00011369400000000099, 0.00011372200000000013, 0.00011368100000000089, 0.0001137359999999997, 0.00011361099999999957, 0.00011366699999999785, 0.00011372200000000013, 0.00011366700000000132, 0.00011361099999999957, 0.00011374999999999927, 0.0001137359999999997, 0.00011372200000000013, 0.00011370900000000003, 0.00011363899999999871, 0.00011370800000000403, 0.00011370899999999656, 0.0001137090000000035, 0.000113597, 0.00011363899999999871, 0.00011372199999999666, 0.00011370799999999709, 0.00011373600000000317, 0.00011365299999999828, 0.00011370899999999656, 0.00011370800000000403, 0.00011369499999999699, 0.00011366599999999838, 0.00011380600000000102, 0.00011368099999999742, 0.00011369500000000393, 0.00011373600000000317, 0.00011370899999999656, 0.00011362499999999914]</msg>
<status status="PASS" starttime="20201030 15:54:48.004" endtime="20201030 15:54:48.007"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.999" endtime="20201030 15:54:48.007"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:48.011" endtime="20201030 15:54:48.031"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.010" endtime="20201030 15:54:48.032"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.008" endtime="20201030 15:54:48.032"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.636" endtime="20201030 15:54:48.032"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.635" endtime="20201030 15:54:48.032"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:48.041" endtime="20201030 15:54:48.072"></status>
</kw>
<msg timestamp="20201030 15:54:48.072" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:48.040" endtime="20201030 15:54:48.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:48.075" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:48.073" endtime="20201030 15:54:48.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:48.076" endtime="20201030 15:54:48.078"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.037" endtime="20201030 15:54:48.078"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.035" endtime="20201030 15:54:48.079"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:48.086" endtime="20201030 15:54:48.373"></status>
</kw>
<msg timestamp="20201030 15:54:48.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020630931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020755514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:48.084" endtime="20201030 15:54:48.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:48.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020630931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020755514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:48.377" endtime="20201030 15:54:48.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:48.385" endtime="20201030 15:54:48.386"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.081" endtime="20201030 15:54:48.387"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.079" endtime="20201030 15:54:48.388"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:48.392" level="INFO">${PHILIP_RES} = [{'diff': 0.00012458299999999756}, {'diff': 0.00012459699999999713}, {'diff': 0.00012458299999999756}, {'diff': 0.0001247230000000002}, {'diff': 0.00012466699999999845}, {'diff': 0.0001245829999999975...</msg>
<status status="PASS" starttime="20201030 15:54:48.388" endtime="20201030 15:54:48.392"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:48.397" level="INFO">${RESULT} = {'diff': [0.00012458299999999756, 0.00012459699999999713, 0.00012458299999999756, 0.0001247230000000002, 0.00012466699999999845, 0.00012458299999999756, 0.00012458300000000103, 0.00012458300000000103,...</msg>
<status status="PASS" starttime="20201030 15:54:48.393" endtime="20201030 15:54:48.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:48.401" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:48.400" endtime="20201030 15:54:48.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:48.404" level="INFO">VALUE: [0.00012458299999999756, 0.00012459699999999713, 0.00012458299999999756, 0.0001247230000000002, 0.00012466699999999845, 0.00012458299999999756, 0.00012458300000000103, 0.00012458300000000103, 0.00012466699999999845, 0.00012461100000000017, 0.0001246389999999993, 0.000124568999999998, 0.00012457000000000093, 0.00012457000000000093, 0.0001245970000000006, 0.00012457000000000093, 0.00012465299999999888, 0.0001245840000000005, 0.0001245559999999979, 0.00012468099999999802, 0.00012468100000000149, 0.0001245970000000006, 0.00012461100000000017, 0.00012456999999999746, 0.00012452700000000275, 0.0001245840000000005, 0.0001245840000000005, 0.00012469499999999759, 0.00012461100000000017, 0.0001246659999999955, 0.00012455500000000536, 0.00012463899999999584, 0.00012465300000000235, 0.00012458399999999703, 0.0001246380000000033, 0.0001246529999999954, 0.00012469500000000105, 0.00012461100000000364, 0.00012447200000000047, 0.00012455600000000483, 0.000124680000000002, 0.00012466699999999498, 0.00012469500000000105, 0.000124568999999998, 0.00012463900000000278, 0.0001245559999999979, 0.00012458299999999756, 0.00012466700000000192, 0.00012458299999999756, 0.00012469399999999464]</msg>
<status status="PASS" starttime="20201030 15:54:48.403" endtime="20201030 15:54:48.405"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.398" endtime="20201030 15:54:48.405"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:48.409" endtime="20201030 15:54:48.429"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.408" endtime="20201030 15:54:48.429"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.406" endtime="20201030 15:54:48.430"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.033" endtime="20201030 15:54:48.430"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.033" endtime="20201030 15:54:48.430"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:48.439" endtime="20201030 15:54:48.468"></status>
</kw>
<msg timestamp="20201030 15:54:48.469" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:48.437" endtime="20201030 15:54:48.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:48.471" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:48.470" endtime="20201030 15:54:48.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:48.473" endtime="20201030 15:54:48.474"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.435" endtime="20201030 15:54:48.475"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.433" endtime="20201030 15:54:48.475"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:48.482" endtime="20201030 15:54:48.769"></status>
</kw>
<msg timestamp="20201030 15:54:48.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019740556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019876083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:48.480" endtime="20201030 15:54:48.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:48.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019740556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019876083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:48.773" endtime="20201030 15:54:48.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:48.781" endtime="20201030 15:54:48.784"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.478" endtime="20201030 15:54:48.785"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.476" endtime="20201030 15:54:48.785"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:48.789" level="INFO">${PHILIP_RES} = [{'diff': 0.00013552699999999987}, {'diff': 0.0001355970000000012}, {'diff': 0.00013545799999999802}, {'diff': 0.00013562500000000033}, {'diff': 0.00013559699999999772}, {'diff': 0.0001356669999999990...</msg>
<status status="PASS" starttime="20201030 15:54:48.786" endtime="20201030 15:54:48.790"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:48.794" level="INFO">${RESULT} = {'diff': [0.00013552699999999987, 0.0001355970000000012, 0.00013545799999999802, 0.00013562500000000033, 0.00013559699999999772, 0.00013566699999999904, 0.0001356389999999999, 0.00013566699999999904, ...</msg>
<status status="PASS" starttime="20201030 15:54:48.790" endtime="20201030 15:54:48.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:48.798" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:48.797" endtime="20201030 15:54:48.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:48.801" level="INFO">VALUE: [0.00013552699999999987, 0.0001355970000000012, 0.00013545799999999802, 0.00013562500000000033, 0.00013559699999999772, 0.00013566699999999904, 0.0001356389999999999, 0.00013566699999999904, 0.0001356800000000026, 0.0001356939999999987, 0.00013567999999999913, 0.00013573599999999741, 0.00013556899999999858, 0.0001355280000000028, 0.000135554999999999, 0.00013569499999999818, 0.00013565299999999947, 0.0001356670000000025, 0.00013563800000000042, 0.0001355419999999989, 0.00013566600000000303, 0.00013556899999999858, 0.00013569400000000217, 0.000135652, 0.00013554200000000238, 0.0001356670000000025, 0.00013570800000000174, 0.00013570800000000174, 0.00013562499999999686, 0.00013577800000000306, 0.00013561100000000076, 0.0001355840000000011, 0.00013568100000000555, 0.00013570799999999827, 0.00013568000000000607, 0.00013566599999999956, 0.0001356809999999986, 0.00013568100000000555, 0.00013569499999999818, 0.00013570799999999827, 0.00013570899999999775, 0.00013570799999999827, 0.00013566599999999956, 0.00013570799999999827, 0.00013583300000000187, 0.00013572199999999784, 0.00013565299999999947, 0.00013566699999999904, 0.00013565299999999947, 0.00013566699999999904]</msg>
<status status="PASS" starttime="20201030 15:54:48.799" endtime="20201030 15:54:48.801"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.794" endtime="20201030 15:54:48.802"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:48.806" endtime="20201030 15:54:48.825"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.804" endtime="20201030 15:54:48.826"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.803" endtime="20201030 15:54:48.826"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.431" endtime="20201030 15:54:48.827"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.430" endtime="20201030 15:54:48.827"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:48.836" endtime="20201030 15:54:48.870"></status>
</kw>
<msg timestamp="20201030 15:54:48.871" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:48.834" endtime="20201030 15:54:48.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:48.873" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:48.872" endtime="20201030 15:54:48.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:48.874" endtime="20201030 15:54:48.876"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.831" endtime="20201030 15:54:48.877"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.829" endtime="20201030 15:54:48.877"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:48.884" endtime="20201030 15:54:49.171"></status>
</kw>
<msg timestamp="20201030 15:54:49.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020002542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020149569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:48.882" endtime="20201030 15:54:49.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:49.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020002542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020149569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:49.175" endtime="20201030 15:54:49.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:49.184" endtime="20201030 15:54:49.186"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.880" endtime="20201030 15:54:49.186"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.878" endtime="20201030 15:54:49.187"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:49.191" level="INFO">${PHILIP_RES} = [{'diff': 0.0001470269999999975}, {'diff': 0.0001469719999999987}, {'diff': 0.0001469719999999987}, {'diff': 0.00014695799999999912}, {'diff': 0.00014701400000000087}, {'diff': 0.00014697200000000216}...</msg>
<status status="PASS" starttime="20201030 15:54:49.187" endtime="20201030 15:54:49.191"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:49.195" level="INFO">${RESULT} = {'diff': [0.0001470269999999975, 0.0001469719999999987, 0.0001469719999999987, 0.00014695799999999912, 0.00014701400000000087, 0.00014697200000000216, 0.00014706999999999915, 0.0001469719999999987, 0....</msg>
<status status="PASS" starttime="20201030 15:54:49.192" endtime="20201030 15:54:49.195"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:49.199" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:49.198" endtime="20201030 15:54:49.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:49.202" level="INFO">VALUE: [0.0001470269999999975, 0.0001469719999999987, 0.0001469719999999987, 0.00014695799999999912, 0.00014701400000000087, 0.00014697200000000216, 0.00014706999999999915, 0.0001469719999999987, 0.00014708400000000219, 0.00014706899999999967, 0.00014711099999999838, 0.00014699999999999783, 0.00014708299999999924, 0.00014695799999999912, 0.00014698600000000173, 0.0001469870000000012, 0.00014708399999999872, 0.0001470000000000013, 0.00014702800000000044, 0.00014698600000000173, 0.00014706899999999967, 0.00014694499999999902, 0.00014701400000000087, 0.0001469589999999986, 0.00014699999999999783, 0.0001470000000000013, 0.000147042, 0.00014701400000000087, 0.0001468890000000042, 0.00014694400000000302, 0.00014702800000000044, 0.00014704100000000053, 0.00014691600000000388, 0.0001468879999999978, 0.0001469299999999965, 0.00014694400000000302, 0.00014702800000000044, 0.0001469580000000026, 0.00014698600000000173, 0.0001469450000000025, 0.0001470550000000001, 0.00014706899999999967, 0.00014708299999999924, 0.0001469450000000025, 0.00014702800000000044, 0.00014699999999999436, 0.00014701400000000087, 0.00014704100000000053, 0.00014702700000000096, 0.00014698600000000173]</msg>
<status status="PASS" starttime="20201030 15:54:49.201" endtime="20201030 15:54:49.204"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.196" endtime="20201030 15:54:49.204"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:49.208" endtime="20201030 15:54:49.228"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.206" endtime="20201030 15:54:49.228"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.205" endtime="20201030 15:54:49.228"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.828" endtime="20201030 15:54:49.229"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.827" endtime="20201030 15:54:49.229"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:49.238" endtime="20201030 15:54:49.273"></status>
</kw>
<msg timestamp="20201030 15:54:49.273" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:49.236" endtime="20201030 15:54:49.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:49.276" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:49.274" endtime="20201030 15:54:49.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:49.277" endtime="20201030 15:54:49.279"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.234" endtime="20201030 15:54:49.279"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.232" endtime="20201030 15:54:49.280"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:49.286" endtime="20201030 15:54:49.573"></status>
</kw>
<msg timestamp="20201030 15:54:49.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019665222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019823861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:49.285" endtime="20201030 15:54:49.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:49.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019665222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019823861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:49.577" endtime="20201030 15:54:49.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:49.585" endtime="20201030 15:54:49.587"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.282" endtime="20201030 15:54:49.588"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.280" endtime="20201030 15:54:49.588"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:49.592" level="INFO">${PHILIP_RES} = [{'diff': 0.00015863900000000208}, {'diff': 0.00015872200000000003}, {'diff': 0.00015862500000000251}, {'diff': 0.00015854099999999816}, {'diff': 0.00015861099999999947}, {'diff': 0.000158680999999997...</msg>
<status status="PASS" starttime="20201030 15:54:49.589" endtime="20201030 15:54:49.593"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:49.597" level="INFO">${RESULT} = {'diff': [0.00015863900000000208, 0.00015872200000000003, 0.00015862500000000251, 0.00015854099999999816, 0.00015861099999999947, 0.00015868099999999732, 0.00015861199999999895, 0.00015863900000000208...</msg>
<status status="PASS" starttime="20201030 15:54:49.593" endtime="20201030 15:54:49.598"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:49.602" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:49.601" endtime="20201030 15:54:49.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:49.604" level="INFO">VALUE: [0.00015863900000000208, 0.00015872200000000003, 0.00015862500000000251, 0.00015854099999999816, 0.00015861099999999947, 0.00015868099999999732, 0.00015861199999999895, 0.00015863900000000208, 0.00015863799999999914, 0.0001585969999999999, 0.00015863899999999861, 0.0001585969999999999, 0.00015858300000000033, 0.00015862499999999904, 0.00015861099999999947, 0.00015868000000000132, 0.00015866600000000175, 0.00015865299999999818, 0.00015865300000000165, 0.00015855600000000067, 0.00015863899999999861, 0.0001585969999999999, 0.00015862499999999904, 0.0001586810000000008, 0.0001585689999999973, 0.00015868000000000132, 0.0001585830000000038, 0.00015858399999999634, 0.0001587229999999995, 0.0001586940000000009, 0.00015861100000000294, 0.000158610999999996, 0.00015866600000000175, 0.00015870800000000046, 0.00015869500000000036, 0.00015866700000000122, 0.0001586810000000008, 0.00015863899999999515, 0.00015863900000000208, 0.00015863899999999515, 0.00015868099999999385, 0.00015866700000000122, 0.00015876399999999874, 0.0001586940000000009, 0.00015865300000000165, 0.00015862500000000251, 0.0001586940000000009, 0.00015865200000000218, 0.00015862499999999558, 0.00015866699999999428]</msg>
<status status="PASS" starttime="20201030 15:54:49.603" endtime="20201030 15:54:49.605"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.598" endtime="20201030 15:54:49.606"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:49.610" endtime="20201030 15:54:49.629"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.608" endtime="20201030 15:54:49.630"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.607" endtime="20201030 15:54:49.630"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.230" endtime="20201030 15:54:49.630"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.229" endtime="20201030 15:54:49.631"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:49.639" endtime="20201030 15:54:49.674"></status>
</kw>
<msg timestamp="20201030 15:54:49.675" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:49.638" endtime="20201030 15:54:49.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:49.678" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:49.676" endtime="20201030 15:54:49.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:49.679" endtime="20201030 15:54:49.680"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.635" endtime="20201030 15:54:49.681"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.633" endtime="20201030 15:54:49.681"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:49.688" endtime="20201030 15:54:49.974"></status>
</kw>
<msg timestamp="20201030 15:54:49.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019985736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020156278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:49.687" endtime="20201030 15:54:49.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:49.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019985736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020156278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:49.978" endtime="20201030 15:54:49.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:49.986" endtime="20201030 15:54:49.989"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.684" endtime="20201030 15:54:49.989"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.682" endtime="20201030 15:54:49.990"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:49.994" level="INFO">${PHILIP_RES} = [{'diff': 0.00017054199999999922}, {'diff': 0.0001705559999999988}, {'diff': 0.00017049999999999704}, {'diff': 0.0001704169999999991}, {'diff': 0.00017052799999999965}, {'diff': 0.0001705000000000005}...</msg>
<status status="PASS" starttime="20201030 15:54:49.990" endtime="20201030 15:54:49.994"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:49.998" level="INFO">${RESULT} = {'diff': [0.00017054199999999922, 0.0001705559999999988, 0.00017049999999999704, 0.0001704169999999991, 0.00017052799999999965, 0.0001705000000000005, 0.00017052700000000018, 0.0001704719999999979, 0....</msg>
<status status="PASS" starttime="20201030 15:54:49.995" endtime="20201030 15:54:49.998"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:50.003" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:50.002" endtime="20201030 15:54:50.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:50.005" level="INFO">VALUE: [0.00017054199999999922, 0.0001705559999999988, 0.00017049999999999704, 0.0001704169999999991, 0.00017052799999999965, 0.0001705000000000005, 0.00017052700000000018, 0.0001704719999999979, 0.0001705000000000005, 0.00017062500000000064, 0.00017043099999999867, 0.0001705130000000006, 0.00017040299999999953, 0.00017052800000000312, 0.00017048600000000094, 0.00017051400000000008, 0.00017058299999999846, 0.00017054099999999975, 0.0001705550000000028, 0.0001704169999999991, 0.00017054099999999975, 0.00017052799999999965, 0.00017049999999999704, 0.00017049999999999704, 0.00017052800000000312, 0.00017061100000000107, 0.00017050000000000398, 0.00017051400000000355, 0.00017055499999999585, 0.00017055499999999585, 0.00017045799999999833, 0.00017052800000000312, 0.00017061099999999413, 0.00017050000000000398, 0.00017045900000000475, 0.0001704719999999979, 0.00017044399999999876, 0.00017058300000000193, 0.00017059699999999456, 0.00017048699999999695, 0.00017052799999999618, 0.0001706119999999936, 0.00017050000000000398, 0.00017044399999999876, 0.00017050000000000398, 0.00017051400000000355, 0.00017052800000000312, 0.00017044399999999876, 0.00017049999999999704, 0.00017049999999999704]</msg>
<status status="PASS" starttime="20201030 15:54:50.004" endtime="20201030 15:54:50.006"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.999" endtime="20201030 15:54:50.006"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:50.010" endtime="20201030 15:54:50.030"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.009" endtime="20201030 15:54:50.030"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.007" endtime="20201030 15:54:50.031"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.632" endtime="20201030 15:54:50.031"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.631" endtime="20201030 15:54:50.031"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:50.040" endtime="20201030 15:54:50.076"></status>
</kw>
<msg timestamp="20201030 15:54:50.076" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:50.038" endtime="20201030 15:54:50.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:50.079" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:50.078" endtime="20201030 15:54:50.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:50.080" endtime="20201030 15:54:50.082"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.036" endtime="20201030 15:54:50.083"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.034" endtime="20201030 15:54:50.083"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:50.090" endtime="20201030 15:54:50.376"></status>
</kw>
<msg timestamp="20201030 15:54:50.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021201778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021384236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:50.088" endtime="20201030 15:54:50.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:50.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021201778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021384236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:50.380" endtime="20201030 15:54:50.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:50.388" endtime="20201030 15:54:50.390"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.085" endtime="20201030 15:54:50.390"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.084" endtime="20201030 15:54:50.391"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:50.395" level="INFO">${PHILIP_RES} = [{'diff': 0.00018245799999999993}, {'diff': 0.00018259699999999962}, {'diff': 0.00018259699999999962}, {'diff': 0.00018256999999999995}, {'diff': 0.00018254099999999787}, {'diff': 0.000182528000000001...</msg>
<status status="PASS" starttime="20201030 15:54:50.392" endtime="20201030 15:54:50.395"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:50.399" level="INFO">${RESULT} = {'diff': [0.00018245799999999993, 0.00018259699999999962, 0.00018259699999999962, 0.00018256999999999995, 0.00018254099999999787, 0.00018252800000000124, 0.0001825550000000009, 0.0001825550000000009, ...</msg>
<status status="PASS" starttime="20201030 15:54:50.396" endtime="20201030 15:54:50.399"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:50.404" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:50.403" endtime="20201030 15:54:50.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:50.406" level="INFO">VALUE: [0.00018245799999999993, 0.00018259699999999962, 0.00018259699999999962, 0.00018256999999999995, 0.00018254099999999787, 0.00018252800000000124, 0.0001825550000000009, 0.0001825550000000009, 0.0001825979999999991, 0.00018244400000000036, 0.00018248599999999907, 0.00018249999999999864, 0.00018251400000000167, 0.00018249999999999864, 0.00018245799999999993, 0.0001824589999999994, 0.00018258399999999952, 0.0001826109999999992, 0.00018252800000000124, 0.0001824580000000034, 0.00018248600000000254, 0.0001825130000000022, 0.00018247199999999603, 0.00018245799999999646, 0.00018248600000000254, 0.00018251400000000167, 0.00018254200000000081, 0.00018256999999999995, 0.00018248600000000254, 0.00018244399999999689, 0.00018245900000000287, 0.00018254100000000134, 0.00018238899999999808, 0.0001826109999999992, 0.00018256900000000048, 0.00018254200000000081, 0.00018247200000000297, 0.00018256900000000048, 0.00018248600000000254, 0.00018258399999999952, 0.00018251399999999474, 0.00018252700000000177, 0.0001825550000000009, 0.00018256999999999995, 0.00018258300000000005, 0.00018248600000000254, 0.00018251400000000167, 0.0001824580000000034, 0.00018251399999999474, 0.00018252800000000124]</msg>
<status status="PASS" starttime="20201030 15:54:50.405" endtime="20201030 15:54:50.410"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.400" endtime="20201030 15:54:50.411"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:50.415" endtime="20201030 15:54:50.434"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.413" endtime="20201030 15:54:50.435"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.412" endtime="20201030 15:54:50.435"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.032" endtime="20201030 15:54:50.435"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.032" endtime="20201030 15:54:50.436"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:50.444" endtime="20201030 15:54:50.484"></status>
</kw>
<msg timestamp="20201030 15:54:50.484" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:50.443" endtime="20201030 15:54:50.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:50.487" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:50.485" endtime="20201030 15:54:50.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:50.488" endtime="20201030 15:54:50.490"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.440" endtime="20201030 15:54:50.490"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.438" endtime="20201030 15:54:50.491"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:50.498" endtime="20201030 15:54:50.784"></status>
</kw>
<msg timestamp="20201030 15:54:50.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018868639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019063556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:50.496" endtime="20201030 15:54:50.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:50.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018868639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019063556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:50.788" endtime="20201030 15:54:50.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:50.796" endtime="20201030 15:54:50.798"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.493" endtime="20201030 15:54:50.799"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.491" endtime="20201030 15:54:50.799"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:50.803" level="INFO">${PHILIP_RES} = [{'diff': 0.0001949169999999993}, {'diff': 0.0001947919999999992}, {'diff': 0.00019484799999999747}, {'diff': 0.0001948750000000006}, {'diff': 0.000194846999999998}, {'diff': 0.0001947079999999983}, {...</msg>
<status status="PASS" starttime="20201030 15:54:50.800" endtime="20201030 15:54:50.803"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:50.808" level="INFO">${RESULT} = {'diff': [0.0001949169999999993, 0.0001947919999999992, 0.00019484799999999747, 0.0001948750000000006, 0.000194846999999998, 0.0001947079999999983, 0.0001948750000000006, 0.000194846999999998, 0.00019...</msg>
<status status="PASS" starttime="20201030 15:54:50.804" endtime="20201030 15:54:50.808"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:50.813" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:50.812" endtime="20201030 15:54:50.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:50.815" level="INFO">VALUE: [0.0001949169999999993, 0.0001947919999999992, 0.00019484799999999747, 0.0001948750000000006, 0.000194846999999998, 0.0001947079999999983, 0.0001948750000000006, 0.000194846999999998, 0.00019484700000000146, 0.00019483299999999842, 0.00019486100000000103, 0.00019479099999999971, 0.00019483299999999842, 0.00019486099999999756, 0.0001947919999999992, 0.00019488799999999723, 0.00019488900000000017, 0.00019495799999999855, 0.00019488900000000017, 0.00019494399999999898, 0.0001949030000000032, 0.00019486099999999756, 0.00019483299999999842, 0.00019490299999999627, 0.00019494400000000245, 0.00019477799999999962, 0.00019483299999999842, 0.000194846999999998, 0.000194846999999998, 0.00019484700000000493, 0.0001949030000000032, 0.0001949030000000032, 0.00019479099999999971, 0.00019492999999999594, 0.00019480599999999876, 0.00019487499999999713, 0.00019495899999999455, 0.0001947919999999992, 0.00019480599999999876, 0.00019480499999999928, 0.0001947919999999992, 0.00019476400000000005, 0.00019481999999999833, 0.00019491699999999584, 0.0001949160000000033, 0.00019479099999999971, 0.0001948339999999979, 0.00019488900000000364, 0.00019477799999999962, 0.00019483300000000536]</msg>
<status status="PASS" starttime="20201030 15:54:50.814" endtime="20201030 15:54:50.823"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.809" endtime="20201030 15:54:50.823"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:50.828" endtime="20201030 15:54:50.847"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.826" endtime="20201030 15:54:50.848"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.824" endtime="20201030 15:54:50.848"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.436" endtime="20201030 15:54:50.848"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.436" endtime="20201030 15:54:50.848"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:50.857" endtime="20201030 15:54:50.900"></status>
</kw>
<msg timestamp="20201030 15:54:50.901" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:50.856" endtime="20201030 15:54:50.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:50.904" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:50.902" endtime="20201030 15:54:50.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:50.905" endtime="20201030 15:54:50.906"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.853" endtime="20201030 15:54:50.907"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.851" endtime="20201030 15:54:50.907"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:50.914" endtime="20201030 15:54:51.200"></status>
</kw>
<msg timestamp="20201030 15:54:51.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022905653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023113042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:50.913" endtime="20201030 15:54:51.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:51.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022905653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023113042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:51.204" endtime="20201030 15:54:51.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:51.213" endtime="20201030 15:54:51.215"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.910" endtime="20201030 15:54:51.216"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.908" endtime="20201030 15:54:51.216"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:51.221" level="INFO">${PHILIP_RES} = [{'diff': 0.0002073889999999988}, {'diff': 0.0002074720000000002}, {'diff': 0.00020744500000000055}, {'diff': 0.0002073889999999988}, {'diff': 0.0002074170000000014}, {'diff': 0.00020740300000000184},...</msg>
<status status="PASS" starttime="20201030 15:54:51.217" endtime="20201030 15:54:51.222"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:51.226" level="INFO">${RESULT} = {'diff': [0.0002073889999999988, 0.0002074720000000002, 0.00020744500000000055, 0.0002073889999999988, 0.0002074170000000014, 0.00020740300000000184, 0.00020740299999999837, 0.00020730500000000138, 0....</msg>
<status status="PASS" starttime="20201030 15:54:51.223" endtime="20201030 15:54:51.227"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:51.231" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:51.230" endtime="20201030 15:54:51.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:51.234" level="INFO">VALUE: [0.0002073889999999988, 0.0002074720000000002, 0.00020744500000000055, 0.0002073889999999988, 0.0002074170000000014, 0.00020740300000000184, 0.00020740299999999837, 0.00020730500000000138, 0.00020738799999999932, 0.0002074170000000014, 0.00020726400000000214, 0.00020740299999999837, 0.0002074720000000002, 0.00020736099999999966, 0.00020737499999999576, 0.00020749999999999935, 0.00020737499999999576, 0.0002073609999999962, 0.00020733399999999652, 0.00020741699999999447, 0.00020745800000000064, 0.0002073750000000027, 0.00020740300000000184, 0.00020751399999999892, 0.00020751399999999892, 0.0002073750000000027, 0.0002074300000000015, 0.00020740200000000236, 0.0002075699999999972, 0.0002073750000000027, 0.00020745900000000012, 0.00020743099999999404, 0.00020747299999999969, 0.00020749999999999935, 0.00020745800000000064, 0.00020754199999999806, 0.0002074720000000002, 0.00020744500000000055, 0.0002074720000000002, 0.00020741600000000193, 0.00020747299999999969, 0.00020740300000000184, 0.00020749999999999935, 0.00020744400000000107, 0.00020733299999999705, 0.0002074300000000015, 0.00020740300000000184, 0.00020743100000000098, 0.00020738899999999533, 0.00020738900000000227]</msg>
<status status="PASS" starttime="20201030 15:54:51.232" endtime="20201030 15:54:51.234"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.227" endtime="20201030 15:54:51.235"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:51.239" endtime="20201030 15:54:51.259"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.237" endtime="20201030 15:54:51.260"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.236" endtime="20201030 15:54:51.260"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.849" endtime="20201030 15:54:51.260"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.849" endtime="20201030 15:54:51.260"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:51.270" endtime="20201030 15:54:51.312"></status>
</kw>
<msg timestamp="20201030 15:54:51.313" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:51.268" endtime="20201030 15:54:51.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:51.315" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:51.314" endtime="20201030 15:54:51.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:51.316" endtime="20201030 15:54:51.318"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.265" endtime="20201030 15:54:51.318"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.263" endtime="20201030 15:54:51.319"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:51.326" endtime="20201030 15:54:51.611"></status>
</kw>
<msg timestamp="20201030 15:54:51.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022970333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023190611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:51.324" endtime="20201030 15:54:51.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:51.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022970333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023190611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:51.615" endtime="20201030 15:54:51.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:51.623" endtime="20201030 15:54:51.625"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.321" endtime="20201030 15:54:51.626"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.320" endtime="20201030 15:54:51.626"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:51.630" level="INFO">${PHILIP_RES} = [{'diff': 0.00022027800000000083}, {'diff': 0.00022027799999999736}, {'diff': 0.00022029100000000093}, {'diff': 0.00022024999999999822}, {'diff': 0.00022031999999999954}, {'diff': 0.000220291999999996...</msg>
<status status="PASS" starttime="20201030 15:54:51.627" endtime="20201030 15:54:51.630"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:51.634" level="INFO">${RESULT} = {'diff': [0.00022027800000000083, 0.00022027799999999736, 0.00022029100000000093, 0.00022024999999999822, 0.00022031999999999954, 0.00022029199999999693, 0.00022022199999999909, 0.0002203469999999992,...</msg>
<status status="PASS" starttime="20201030 15:54:51.631" endtime="20201030 15:54:51.634"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:51.639" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:51.638" endtime="20201030 15:54:51.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:51.641" level="INFO">VALUE: [0.00022027800000000083, 0.00022027799999999736, 0.00022029100000000093, 0.00022024999999999822, 0.00022031999999999954, 0.00022029199999999693, 0.00022022199999999909, 0.0002203469999999992, 0.00022026400000000126, 0.00022038899999999792, 0.00022036099999999878, 0.00022031999999999954, 0.00022019399999999995, 0.00022025000000000516, 0.00022022199999999909, 0.00022036100000000225, 0.00022033399999999564, 0.00022027799999999736, 0.0002203890000000014, 0.00022026400000000473, 0.0002203189999999966, 0.00022027799999999736, 0.00022024999999999822, 0.00022034799999999521, 0.00022020799999999952, 0.00022019499999999942, 0.00022027799999999736, 0.00022019399999999995, 0.0002203189999999966, 0.00022033299999999617, 0.00022027799999999736, 0.00022027799999999736, 0.00022022199999999909, 0.00022019499999999942, 0.00022037500000000182, 0.00022025000000000516, 0.00022029199999999693, 0.00022029099999999746, 0.0002203059999999965, 0.0002202639999999978, 0.0002202360000000056, 0.0002202639999999978, 0.00022029200000000387, 0.00022020799999999952, 0.00022026299999999832, 0.00022025000000000516, 0.00022024999999999822, 0.0002203189999999966, 0.00022027799999999736, 0.00022031999999999607]</msg>
<status status="PASS" starttime="20201030 15:54:51.640" endtime="20201030 15:54:51.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.635" endtime="20201030 15:54:51.643"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:51.647" endtime="20201030 15:54:51.667"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.646" endtime="20201030 15:54:51.668"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.645" endtime="20201030 15:54:51.668"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.261" endtime="20201030 15:54:51.668"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.261" endtime="20201030 15:54:51.668"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:51.677" endtime="20201030 15:54:51.724"></status>
</kw>
<msg timestamp="20201030 15:54:51.724" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:51.676" endtime="20201030 15:54:51.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:51.727" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:51.725" endtime="20201030 15:54:51.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:51.728" endtime="20201030 15:54:51.729"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.673" endtime="20201030 15:54:51.730"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.671" endtime="20201030 15:54:51.730"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:51.737" endtime="20201030 15:54:52.023"></status>
</kw>
<msg timestamp="20201030 15:54:52.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021925347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022158653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:51.736" endtime="20201030 15:54:52.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:52.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021925347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022158653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:52.027" endtime="20201030 15:54:52.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:52.035" endtime="20201030 15:54:52.037"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.733" endtime="20201030 15:54:52.038"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.731" endtime="20201030 15:54:52.038"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:52.042" level="INFO">${PHILIP_RES} = [{'diff': 0.0002333059999999991}, {'diff': 0.00023334800000000128}, {'diff': 0.00023330499999999962}, {'diff': 0.00023337499999999747}, {'diff': 0.00023337500000000094}, {'diff': 0.0002333329999999987...</msg>
<status status="PASS" starttime="20201030 15:54:52.039" endtime="20201030 15:54:52.042"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:52.047" level="INFO">${RESULT} = {'diff': [0.0002333059999999991, 0.00023334800000000128, 0.00023330499999999962, 0.00023337499999999747, 0.00023337500000000094, 0.00023333299999999876, 0.00023336100000000137, 0.00023336200000000085,...</msg>
<status status="PASS" starttime="20201030 15:54:52.043" endtime="20201030 15:54:52.048"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:52.052" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:52.051" endtime="20201030 15:54:52.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:52.055" level="INFO">VALUE: [0.0002333059999999991, 0.00023334800000000128, 0.00023330499999999962, 0.00023337499999999747, 0.00023337500000000094, 0.00023333299999999876, 0.00023336100000000137, 0.00023336200000000085, 0.00023329100000000005, 0.0002333890000000005, 0.0002333890000000005, 0.00023337500000000094, 0.0002333890000000005, 0.0002334579999999989, 0.00023345800000000583, 0.0002333199999999952, 0.00023344399999999932, 0.00023344399999999932, 0.00023336099999999443, 0.000233374999999994, 0.00023343099999999922, 0.0002334020000000006, 0.00023336100000000137, 0.0002334020000000006, 0.0002333329999999953, 0.00023347300000000487, 0.0002334020000000006, 0.00023332000000000214, 0.0002333890000000005, 0.00023337500000000094, 0.00023327800000000343, 0.0002334579999999989, 0.00023336100000000137, 0.00023337500000000094, 0.00023341699999999965, 0.0002333199999999952, 0.00023340300000000008, 0.00023334800000000128, 0.00023334800000000128, 0.00023337500000000094, 0.0002333890000000005, 0.0002333890000000005, 0.00023340300000000008, 0.00023344399999999932, 0.00023341699999999965, 0.00023347199999999846, 0.00023341600000000018, 0.0002333470000000018, 0.00023337500000000094, 0.00023351399999999717]</msg>
<status status="PASS" starttime="20201030 15:54:52.053" endtime="20201030 15:54:52.055"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.048" endtime="20201030 15:54:52.056"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:52.060" endtime="20201030 15:54:52.079"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.058" endtime="20201030 15:54:52.080"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.057" endtime="20201030 15:54:52.080"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.669" endtime="20201030 15:54:52.080"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.669" endtime="20201030 15:54:52.081"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:52.089" endtime="20201030 15:54:52.136"></status>
</kw>
<msg timestamp="20201030 15:54:52.137" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:52.088" endtime="20201030 15:54:52.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:52.139" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:52.138" endtime="20201030 15:54:52.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:52.141" endtime="20201030 15:54:52.142"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.085" endtime="20201030 15:54:52.143"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.083" endtime="20201030 15:54:52.143"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:52.150" endtime="20201030 15:54:52.438"></status>
</kw>
<msg timestamp="20201030 15:54:52.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021665056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021911819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:52.149" endtime="20201030 15:54:52.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:52.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021665056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021911819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:52.442" endtime="20201030 15:54:52.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:52.450" endtime="20201030 15:54:52.452"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.146" endtime="20201030 15:54:52.453"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.144" endtime="20201030 15:54:52.453"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:52.457" level="INFO">${PHILIP_RES} = [{'diff': 0.00024676300000000054}, {'diff': 0.00024672199999999783}, {'diff': 0.0002466250000000003}, {'diff': 0.00024669400000000216}, {'diff': 0.0002466250000000003}, {'diff': 0.0002467220000000013}...</msg>
<status status="PASS" starttime="20201030 15:54:52.454" endtime="20201030 15:54:52.457"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:52.461" level="INFO">${RESULT} = {'diff': [0.00024676300000000054, 0.00024672199999999783, 0.0002466250000000003, 0.00024669400000000216, 0.0002466250000000003, 0.0002467220000000013, 0.00024675000000000044, 0.000246764, 0.0002466110...</msg>
<status status="PASS" starttime="20201030 15:54:52.458" endtime="20201030 15:54:52.462"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:52.466" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:52.465" endtime="20201030 15:54:52.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:52.468" level="INFO">VALUE: [0.00024676300000000054, 0.00024672199999999783, 0.0002466250000000003, 0.00024669400000000216, 0.0002466250000000003, 0.0002467220000000013, 0.00024675000000000044, 0.000246764, 0.00024661100000000075, 0.00024669500000000164, 0.0002467779999999996, 0.000246764, 0.0002466939999999987, 0.00024670800000000173, 0.00024656900000000204, 0.00024672200000000477, 0.0002468050000000027, 0.00024669499999999817, 0.000246666999999999, 0.0002468199999999948, 0.0002466809999999986, 0.0002466389999999999, 0.00024665299999999946, 0.0002467909999999962, 0.0002466809999999986, 0.00024672199999999783, 0.00024668100000000553, 0.00024666599999999955, 0.0002468470000000014, 0.0002466389999999999, 0.00024672200000000477, 0.00024672199999999783, 0.0002466389999999999, 0.00024674999999999697, 0.0002467229999999973, 0.00024674999999999697, 0.00024670899999999774, 0.0002467090000000047, 0.0002467359999999974, 0.00024655600000000194, 0.0002465700000000015, 0.00024672199999999783, 0.00024672200000000477, 0.000246666999999999, 0.0002466809999999986, 0.00024665299999999946, 0.0002466389999999999, 0.00024672199999999783, 0.00024672200000000477, 0.0002466809999999986]</msg>
<status status="PASS" starttime="20201030 15:54:52.467" endtime="20201030 15:54:52.469"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.462" endtime="20201030 15:54:52.470"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:52.474" endtime="20201030 15:54:52.493"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.472" endtime="20201030 15:54:52.494"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.471" endtime="20201030 15:54:52.494"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.082" endtime="20201030 15:54:52.494"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.081" endtime="20201030 15:54:52.495"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:52.504" endtime="20201030 15:54:52.557"></status>
</kw>
<msg timestamp="20201030 15:54:52.558" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:52.502" endtime="20201030 15:54:52.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:52.560" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:52.559" endtime="20201030 15:54:52.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:52.562" endtime="20201030 15:54:52.563"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.499" endtime="20201030 15:54:52.564"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.497" endtime="20201030 15:54:52.564"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:52.571" endtime="20201030 15:54:52.877"></status>
</kw>
<msg timestamp="20201030 15:54:52.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0246005, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024860931, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:54:52.569" endtime="20201030 15:54:52.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:52.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0246005, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024860931, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:54:52.881" endtime="20201030 15:54:52.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:52.893" endtime="20201030 15:54:52.896"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.567" endtime="20201030 15:54:52.897"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.565" endtime="20201030 15:54:52.898"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:52.905" level="INFO">${PHILIP_RES} = [{'diff': 0.00026043099999999847}, {'diff': 0.0002604580000000016}, {'diff': 0.0002603610000000006}, {'diff': 0.0002604589999999976}, {'diff': 0.0002603610000000006}, {'diff': 0.0002605000000000003}, ...</msg>
<status status="PASS" starttime="20201030 15:54:52.900" endtime="20201030 15:54:52.905"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:52.912" level="INFO">${RESULT} = {'diff': [0.00026043099999999847, 0.0002604580000000016, 0.0002603610000000006, 0.0002604589999999976, 0.0002603610000000006, 0.0002605000000000003, 0.0002604450000000015, 0.0002604580000000016, 0.000...</msg>
<status status="PASS" starttime="20201030 15:54:52.906" endtime="20201030 15:54:52.912"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:52.918" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:52.916" endtime="20201030 15:54:52.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:52.920" level="INFO">VALUE: [0.00026043099999999847, 0.0002604580000000016, 0.0002603610000000006, 0.0002604589999999976, 0.0002603610000000006, 0.0002605000000000003, 0.0002604450000000015, 0.0002604580000000016, 0.00026034700000000105, 0.0002602640000000031, 0.00026033299999999454, 0.00026043099999999847, 0.0002604310000000054, 0.000260429999999999, 0.0002604580000000051, 0.0002603750000000002, 0.0002602919999999953, 0.0002603060000000018, 0.00026038899999999976, 0.00026040199999999986, 0.0002604310000000054, 0.00026044399999999857, 0.0002604310000000054, 0.00026038899999999976, 0.00026045799999999814, 0.0002604159999999994, 0.0002604859999999973, 0.00026043000000000593, 0.00026049999999999685, 0.00026038899999999976, 0.00026029100000000277, 0.0002604169999999989, 0.0002603610000000006, 0.0002603750000000002, 0.00026038899999999976, 0.00026034700000000105, 0.0002603330000000015, 0.00026038799999999335, 0.0002603750000000002, 0.0002602919999999953, 0.0002603609999999937, 0.0002604169999999989, 0.00026033299999999454, 0.00026030500000000234, 0.0002603049999999954, 0.0002602780000000027, 0.00026025000000000353, 0.0002602640000000031, 0.00026029200000000224, 0.0002603750000000002]</msg>
<status status="PASS" starttime="20201030 15:54:52.919" endtime="20201030 15:54:52.922"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.914" endtime="20201030 15:54:52.922"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:52.926" endtime="20201030 15:54:52.945"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.925" endtime="20201030 15:54:52.946"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.923" endtime="20201030 15:54:52.946"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.496" endtime="20201030 15:54:52.947"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.495" endtime="20201030 15:54:52.947"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:52.955" endtime="20201030 15:54:53.006"></status>
</kw>
<msg timestamp="20201030 15:54:53.007" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:52.954" endtime="20201030 15:54:53.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:53.009" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:53.008" endtime="20201030 15:54:53.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:53.010" endtime="20201030 15:54:53.012"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.951" endtime="20201030 15:54:53.012"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.949" endtime="20201030 15:54:53.013"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:53.019" endtime="20201030 15:54:53.306"></status>
</kw>
<msg timestamp="20201030 15:54:53.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019497931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019772083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:53.018" endtime="20201030 15:54:53.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:53.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019497931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019772083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:53.309" endtime="20201030 15:54:53.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:53.317" endtime="20201030 15:54:53.319"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.015" endtime="20201030 15:54:53.319"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.013" endtime="20201030 15:54:53.320"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:53.324" level="INFO">${PHILIP_RES} = [{'diff': 0.00027415199999999973}, {'diff': 0.00027412500000000006}, {'diff': 0.00027427799999999933}, {'diff': 0.0002740139999999995}, {'diff': 0.0002740279999999991}, {'diff': 0.00027413899999999963...</msg>
<status status="PASS" starttime="20201030 15:54:53.320" endtime="20201030 15:54:53.324"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:53.328" level="INFO">${RESULT} = {'diff': [0.00027415199999999973, 0.00027412500000000006, 0.00027427799999999933, 0.0002740139999999995, 0.0002740279999999991, 0.00027413899999999963, 0.0002741110000000005, 0.0002741110000000005, 0....</msg>
<status status="PASS" starttime="20201030 15:54:53.324" endtime="20201030 15:54:53.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:53.333" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:53.332" endtime="20201030 15:54:53.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:53.335" level="INFO">VALUE: [0.00027415199999999973, 0.00027412500000000006, 0.00027427799999999933, 0.0002740139999999995, 0.0002740279999999991, 0.00027413899999999963, 0.0002741110000000005, 0.0002741110000000005, 0.00027413899999999963, 0.00027415300000000267, 0.00027412500000000006, 0.000274207999999998, 0.00027408300000000135, 0.0002740970000000009, 0.0002741659999999993, 0.00027409699999999745, 0.00027417999999999887, 0.00027407000000000126, 0.00027413899999999963, 0.00027399999999999647, 0.0002741529999999992, 0.00027411199999999997, 0.00027413800000000016, 0.000274096999999994, 0.00027415199999999973, 0.00027419399999999844, 0.0002740970000000009, 0.0002741110000000005, 0.0002741110000000005, 0.0002742089999999975, 0.0002741110000000005, 0.00027412500000000006, 0.0002740970000000009, 0.00027412500000000006, 0.00027408300000000135, 0.00027406899999999484, 0.00027413899999999963, 0.00027407000000000126, 0.0002740980000000004, 0.0002742360000000041, 0.0002740420000000021, 0.0002741529999999992, 0.00027412500000000006, 0.0002741529999999992, 0.0002741529999999992, 0.0002741529999999992, 0.0002742360000000041, 0.000274207999999998, 0.00027416699999999877, 0.00027408300000000135]</msg>
<status status="PASS" starttime="20201030 15:54:53.334" endtime="20201030 15:54:53.336"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.329" endtime="20201030 15:54:53.336"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:53.340" endtime="20201030 15:54:53.359"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.338" endtime="20201030 15:54:53.360"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.337" endtime="20201030 15:54:53.360"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.948" endtime="20201030 15:54:53.361"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.947" endtime="20201030 15:54:53.361"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:53.369" endtime="20201030 15:54:53.422"></status>
</kw>
<msg timestamp="20201030 15:54:53.423" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:53.368" endtime="20201030 15:54:53.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:53.425" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:53.424" endtime="20201030 15:54:53.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:53.426" endtime="20201030 15:54:53.428"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.365" endtime="20201030 15:54:53.428"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.363" endtime="20201030 15:54:53.429"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:53.435" endtime="20201030 15:54:53.722"></status>
</kw>
<msg timestamp="20201030 15:54:53.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022562917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022851111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:53.434" endtime="20201030 15:54:53.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:53.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022562917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022851111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:53.726" endtime="20201030 15:54:53.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:53.734" endtime="20201030 15:54:53.736"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.431" endtime="20201030 15:54:53.736"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.429" endtime="20201030 15:54:53.737"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:53.740" level="INFO">${PHILIP_RES} = [{'diff': 0.00028819400000000203}, {'diff': 0.00028820799999999813}, {'diff': 0.000288179999999999}, {'diff': 0.00028820799999999813}, {'diff': 0.0002881250000000002}, {'diff': 0.00028823599999999727}...</msg>
<status status="PASS" starttime="20201030 15:54:53.737" endtime="20201030 15:54:53.741"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:53.744" level="INFO">${RESULT} = {'diff': [0.00028819400000000203, 0.00028820799999999813, 0.000288179999999999, 0.00028820799999999813, 0.0002881250000000002, 0.00028823599999999727, 0.00028820799999999813, 0.0002882639999999999, 0....</msg>
<status status="PASS" starttime="20201030 15:54:53.741" endtime="20201030 15:54:53.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:53.749" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:53.748" endtime="20201030 15:54:53.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:53.751" level="INFO">VALUE: [0.00028819400000000203, 0.00028820799999999813, 0.000288179999999999, 0.00028820799999999813, 0.0002881250000000002, 0.00028823599999999727, 0.00028820799999999813, 0.0002882639999999999, 0.0002880969999999976, 0.00028813899999999976, 0.00028819399999999856, 0.00028809700000000105, 0.0002881669999999989, 0.00028819499999999804, 0.00028819499999999804, 0.00028809700000000105, 0.00028818099999999847, 0.0002882219999999977, 0.00028816700000000584, 0.0002881659999999994, 0.0002881669999999989, 0.00028818099999999847, 0.0002880830000000015, 0.0002881250000000002, 0.00028818099999999847, 0.000288179999999999, 0.0002882360000000042, 0.000288291000000003, 0.00028822200000000464, 0.0002882219999999977, 0.000288179999999999, 0.0002882219999999977, 0.0002880560000000018, 0.00028813899999999976, 0.00028823599999999727, 0.0002882230000000041, 0.0002882219999999977, 0.00028813899999999976, 0.0002881659999999994, 0.0002881110000000006, 0.0002881529999999993, 0.00028806999999999444, 0.0002882219999999977, 0.000288179999999999, 0.0002882219999999977, 0.0002882089999999976, 0.00028830600000000206, 0.00028813899999999976, 0.00028819399999999856, 0.0002880700000000014]</msg>
<status status="PASS" starttime="20201030 15:54:53.750" endtime="20201030 15:54:53.752"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.745" endtime="20201030 15:54:53.752"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:53.756" endtime="20201030 15:54:53.776"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.755" endtime="20201030 15:54:53.776"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.753" endtime="20201030 15:54:53.776"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.362" endtime="20201030 15:54:53.777"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.361" endtime="20201030 15:54:53.777"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:53.785" endtime="20201030 15:54:53.843"></status>
</kw>
<msg timestamp="20201030 15:54:53.844" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:53.784" endtime="20201030 15:54:53.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:53.846" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:53.845" endtime="20201030 15:54:53.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:53.847" endtime="20201030 15:54:53.849"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.781" endtime="20201030 15:54:53.849"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.779" endtime="20201030 15:54:53.850"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:53.857" endtime="20201030 15:54:54.144"></status>
</kw>
<msg timestamp="20201030 15:54:54.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023378986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023681653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:53.856" endtime="20201030 15:54:54.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:54.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023378986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023681653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:54.148" endtime="20201030 15:54:54.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:54.155" endtime="20201030 15:54:54.157"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.853" endtime="20201030 15:54:54.157"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.850" endtime="20201030 15:54:54.158"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:54.162" level="INFO">${PHILIP_RES} = [{'diff': 0.0003026669999999995}, {'diff': 0.0003027359999999979}, {'diff': 0.00030273600000000137}, {'diff': 0.00030275000000000094}, {'diff': 0.00030265299999999995}, {'diff': 0.0003026939999999992}...</msg>
<status status="PASS" starttime="20201030 15:54:54.159" endtime="20201030 15:54:54.162"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:54.166" level="INFO">${RESULT} = {'diff': [0.0003026669999999995, 0.0003027359999999979, 0.00030273600000000137, 0.00030275000000000094, 0.00030265299999999995, 0.0003026939999999992, 0.0003025830000000021, 0.0003026939999999992, 0.0...</msg>
<status status="PASS" starttime="20201030 15:54:54.163" endtime="20201030 15:54:54.166"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:54.170" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:54.169" endtime="20201030 15:54:54.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:54.172" level="INFO">VALUE: [0.0003026669999999995, 0.0003027359999999979, 0.00030273600000000137, 0.00030275000000000094, 0.00030265299999999995, 0.0003026939999999992, 0.0003025830000000021, 0.0003026939999999992, 0.0003026390000000004, 0.00030261099999999777, 0.0003027219999999983, 0.0003026390000000004, 0.0003026520000000005, 0.00030268100000000603, 0.00030261100000000124, 0.00030263899999999344, 0.00030265299999999995, 0.0003028340000000018, 0.0003027219999999983, 0.00030259800000000114, 0.0003026669999999995, 0.0003027359999999979, 0.00030291699999999977, 0.0003026939999999992, 0.0003027500000000044, 0.00030274999999999747, 0.0003028339999999949, 0.0003026939999999992, 0.0003026390000000004, 0.0003026120000000007, 0.0003026669999999995, 0.0003027500000000044, 0.00030255600000000243, 0.0003027359999999979, 0.00030270899999999823, 0.0003026250000000008, 0.000302764000000004, 0.0003028340000000018, 0.00030265199999999354, 0.00030276399999999704, 0.0003027359999999979, 0.0003026669999999995, 0.00030280599999999575, 0.0003027909999999967, 0.00030265299999999995, 0.00030274999999999747, 0.0003026659999999931, 0.0003026949999999917, 0.00030276299999999756, 0.00030265299999999995]</msg>
<status status="PASS" starttime="20201030 15:54:54.171" endtime="20201030 15:54:54.176"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.167" endtime="20201030 15:54:54.177"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:54.180" endtime="20201030 15:54:54.200"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.179" endtime="20201030 15:54:54.201"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.178" endtime="20201030 15:54:54.201"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.778" endtime="20201030 15:54:54.201"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.777" endtime="20201030 15:54:54.201"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:54.210" endtime="20201030 15:54:54.269"></status>
</kw>
<msg timestamp="20201030 15:54:54.270" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:54.208" endtime="20201030 15:54:54.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:54.275" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:54.272" endtime="20201030 15:54:54.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:54.277" endtime="20201030 15:54:54.280"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.206" endtime="20201030 15:54:54.281"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.204" endtime="20201030 15:54:54.282"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:54.296" endtime="20201030 15:54:54.590"></status>
</kw>
<msg timestamp="20201030 15:54:54.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021012556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021329639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:54.293" endtime="20201030 15:54:54.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:54.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021012556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021329639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:54.594" endtime="20201030 15:54:54.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:54.602" endtime="20201030 15:54:54.604"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.287" endtime="20201030 15:54:54.604"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.284" endtime="20201030 15:54:54.605"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:54.608" level="INFO">${PHILIP_RES} = [{'diff': 0.00031708299999999925}, {'diff': 0.00031715199999999763}, {'diff': 0.00031708399999999873}, {'diff': 0.0003170689999999997}, {'diff': 0.00031702800000000045}, {'diff': 0.0003170140000000009...</msg>
<status status="PASS" starttime="20201030 15:54:54.605" endtime="20201030 15:54:54.609"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:54.613" level="INFO">${RESULT} = {'diff': [0.00031708299999999925, 0.00031715199999999763, 0.00031708399999999873, 0.0003170689999999997, 0.00031702800000000045, 0.0003170140000000009, 0.00031709800000000177, 0.00031711200000000134, ...</msg>
<status status="PASS" starttime="20201030 15:54:54.609" endtime="20201030 15:54:54.613"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:54.617" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:54.616" endtime="20201030 15:54:54.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:54.620" level="INFO">VALUE: [0.00031708299999999925, 0.00031715199999999763, 0.00031708399999999873, 0.0003170689999999997, 0.00031702800000000045, 0.0003170140000000009, 0.00031709800000000177, 0.00031711200000000134, 0.0003170689999999997, 0.00031711200000000134, 0.00031716700000000014, 0.00031713899999999753, 0.000317139000000001, 0.0003170420000000035, 0.00031712500000000143, 0.000317139000000001, 0.00031711200000000134, 0.0003170550000000036, 0.00031705499999999665, 0.00031720899999999885, 0.0003170550000000036, 0.0003170409999999971, 0.0003171109999999949, 0.00031705600000000306, 0.0003171939999999998, 0.0003171109999999949, 0.0003171809999999997, 0.00031727799999999723, 0.00031711100000000186, 0.0003172079999999994, 0.0003170840000000022, 0.00031712500000000143, 0.00031727799999999723, 0.00031718000000000024, 0.00031712500000000143, 0.00031712500000000143, 0.00031712500000000143, 0.00031705600000000306, 0.000317139000000001, 0.0003170829999999958, 0.0003171530000000006, 0.0003171809999999997, 0.0003171809999999997, 0.0003170829999999958, 0.0003172220000000059, 0.0003171530000000006, 0.00031711100000000186, 0.0003170969999999884, 0.00031707000000000263, 0.0003171110000000088]</msg>
<status status="PASS" starttime="20201030 15:54:54.619" endtime="20201030 15:54:54.621"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.614" endtime="20201030 15:54:54.621"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:54.625" endtime="20201030 15:54:54.644"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.623" endtime="20201030 15:54:54.645"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.622" endtime="20201030 15:54:54.645"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.202" endtime="20201030 15:54:54.645"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.202" endtime="20201030 15:54:54.646"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:54.655" endtime="20201030 15:54:54.713"></status>
</kw>
<msg timestamp="20201030 15:54:54.714" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:54.653" endtime="20201030 15:54:54.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:54.716" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:54.715" endtime="20201030 15:54:54.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:54.717" endtime="20201030 15:54:54.719"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.650" endtime="20201030 15:54:54.719"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.648" endtime="20201030 15:54:54.720"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:54.726" endtime="20201030 15:54:55.014"></status>
</kw>
<msg timestamp="20201030 15:54:55.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023794653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024126708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:54.725" endtime="20201030 15:54:55.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:55.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023794653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024126708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:55.018" endtime="20201030 15:54:55.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:55.026" endtime="20201030 15:54:55.027"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.722" endtime="20201030 15:54:55.028"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.720" endtime="20201030 15:54:55.028"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:55.032" level="INFO">${PHILIP_RES} = [{'diff': 0.00033205500000000124}, {'diff': 0.00033202699999999863}, {'diff': 0.0003321530000000017}, {'diff': 0.0003323050000000015}, {'diff': 0.00033212500000000256}, {'diff': 0.0003321109999999995}...</msg>
<status status="PASS" starttime="20201030 15:54:55.029" endtime="20201030 15:54:55.032"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:55.036" level="INFO">${RESULT} = {'diff': [0.00033205500000000124, 0.00033202699999999863, 0.0003321530000000017, 0.0003323050000000015, 0.00033212500000000256, 0.0003321109999999995, 0.00033209699999999995, 0.0003321669999999978, 0....</msg>
<status status="PASS" starttime="20201030 15:54:55.033" endtime="20201030 15:54:55.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:55.040" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:55.039" endtime="20201030 15:54:55.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:55.043" level="INFO">VALUE: [0.00033205500000000124, 0.00033202699999999863, 0.0003321530000000017, 0.0003323050000000015, 0.00033212500000000256, 0.0003321109999999995, 0.00033209699999999995, 0.0003321669999999978, 0.00033205599999999724, 0.00033212500000000256, 0.0003319310000000006, 0.0003320409999999982, 0.0003320970000000034, 0.0003320970000000034, 0.0003320829999999969, 0.00033208300000000385, 0.00033208300000000385, 0.0003320980000000029, 0.00033199999999999896, 0.00033206899999999734, 0.00033206899999999734, 0.0003320969999999965, 0.0003320550000000047, 0.0003320969999999965, 0.00033201400000000547, 0.00033218000000000136, 0.000332111000000003, 0.0003320829999999969, 0.00033211099999999605, 0.00033211099999999605, 0.0003320409999999982, 0.0003321530000000017, 0.00033199999999999896, 0.00033186100000000274, 0.00033201400000000547, 0.0003319859999999994, 0.00033204199999999767, 0.00033201399999999853, 0.0003319589999999997, 0.000331917000000001, 0.00033201399999999853, 0.0003319859999999994, 0.00033204199999999073, 0.0003320420000000046, 0.00033199999999999896, 0.00033199999999999896, 0.00033205499999999777, 0.00033201400000000547, 0.0003319030000000084, 0.0003319440000000007]</msg>
<status status="PASS" starttime="20201030 15:54:55.041" endtime="20201030 15:54:55.043"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.037" endtime="20201030 15:54:55.044"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:55.047" endtime="20201030 15:54:55.067"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.046" endtime="20201030 15:54:55.068"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.045" endtime="20201030 15:54:55.068"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.646" endtime="20201030 15:54:55.068"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.646" endtime="20201030 15:54:55.068"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:55.077" endtime="20201030 15:54:55.141"></status>
</kw>
<msg timestamp="20201030 15:54:55.141" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:55.075" endtime="20201030 15:54:55.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:55.144" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:55.142" endtime="20201030 15:54:55.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:55.145" endtime="20201030 15:54:55.146"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.073" endtime="20201030 15:54:55.147"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.071" endtime="20201030 15:54:55.147"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:55.154" endtime="20201030 15:54:55.442"></status>
</kw>
<msg timestamp="20201030 15:54:55.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02323425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023581347, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:54:55.152" endtime="20201030 15:54:55.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:55.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02323425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023581347, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:54:55.446" endtime="20201030 15:54:55.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:55.454" endtime="20201030 15:54:55.456"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.149" endtime="20201030 15:54:55.457"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.148" endtime="20201030 15:54:55.457"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:55.461" level="INFO">${PHILIP_RES} = [{'diff': 0.0003470969999999976}, {'diff': 0.00034711100000000064}, {'diff': 0.00034709700000000107}, {'diff': 0.00034698599999999705}, {'diff': 0.00034702699999999975}, {'diff': 0.0003470699999999979...</msg>
<status status="PASS" starttime="20201030 15:54:55.458" endtime="20201030 15:54:55.461"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:55.465" level="INFO">${RESULT} = {'diff': [0.0003470969999999976, 0.00034711100000000064, 0.00034709700000000107, 0.00034698599999999705, 0.00034702699999999975, 0.00034706999999999794, 0.00034698599999999705, 0.0003470409999999993, ...</msg>
<status status="PASS" starttime="20201030 15:54:55.462" endtime="20201030 15:54:55.465"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:55.470" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:55.469" endtime="20201030 15:54:55.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:55.472" level="INFO">VALUE: [0.0003470969999999976, 0.00034711100000000064, 0.00034709700000000107, 0.00034698599999999705, 0.00034702699999999975, 0.00034706999999999794, 0.00034698599999999705, 0.0003470409999999993, 0.00034691700000000214, 0.00034708299999999803, 0.0003470130000000002, 0.00034701399999999966, 0.00034708299999999803, 0.0003470560000000053, 0.00034701399999999966, 0.0003470279999999992, 0.0003471389999999963, 0.00034704200000000573, 0.00034709700000000454, 0.0003470279999999992, 0.0003470560000000053, 0.0003470839999999975, 0.00034723600000000077, 0.0003470000000000001, 0.00034704200000000573, 0.00034705599999999837, 0.0003471110000000041, 0.00034701399999999966, 0.00034704200000000573, 0.0003469860000000005, 0.00034708299999999803, 0.0003469730000000004, 0.0003470130000000002, 0.00034693000000000224, 0.00034702699999999975, 0.0003470549999999989, 0.00034691700000000214, 0.0003470279999999992, 0.0003470279999999992, 0.000346889000000003, 0.00034697200000000095, 0.00034695799999999444, 0.00034704200000000573, 0.00034691700000000214, 0.0003470000000000001, 0.00034695799999999444, 0.00034698600000000746, 0.0003470690000000054, 0.00034704200000000573, 0.0003469859999999936]</msg>
<status status="PASS" starttime="20201030 15:54:55.471" endtime="20201030 15:54:55.474"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.466" endtime="20201030 15:54:55.474"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:55.478" endtime="20201030 15:54:55.498"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.477" endtime="20201030 15:54:55.498"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.475" endtime="20201030 15:54:55.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.069" endtime="20201030 15:54:55.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.069" endtime="20201030 15:54:55.499"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:55.508" endtime="20201030 15:54:55.573"></status>
</kw>
<msg timestamp="20201030 15:54:55.573" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:55.506" endtime="20201030 15:54:55.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:55.576" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:55.574" endtime="20201030 15:54:55.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:55.577" endtime="20201030 15:54:55.578"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.504" endtime="20201030 15:54:55.579"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.502" endtime="20201030 15:54:55.579"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:55.586" endtime="20201030 15:54:55.895"></status>
</kw>
<msg timestamp="20201030 15:54:55.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019485014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019847278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:55.585" endtime="20201030 15:54:55.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:55.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019485014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019847278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:55.899" endtime="20201030 15:54:55.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:55.907" endtime="20201030 15:54:55.908"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.582" endtime="20201030 15:54:55.909"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.580" endtime="20201030 15:54:55.910"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:55.914" level="INFO">${PHILIP_RES} = [{'diff': 0.00036226400000000103}, {'diff': 0.0003623750000000016}, {'diff': 0.0003622780000000006}, {'diff': 0.0003623749999999981}, {'diff': 0.0003623199999999993}, {'diff': 0.00036229200000000017},...</msg>
<status status="PASS" starttime="20201030 15:54:55.910" endtime="20201030 15:54:55.914"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:55.919" level="INFO">${RESULT} = {'diff': [0.00036226400000000103, 0.0003623750000000016, 0.0003622780000000006, 0.0003623749999999981, 0.0003623199999999993, 0.00036229200000000017, 0.0003623339999999989, 0.00036226400000000103, 0.0...</msg>
<status status="PASS" starttime="20201030 15:54:55.915" endtime="20201030 15:54:55.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:55.923" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:55.922" endtime="20201030 15:54:55.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:55.926" level="INFO">VALUE: [0.00036226400000000103, 0.0003623750000000016, 0.0003622780000000006, 0.0003623749999999981, 0.0003623199999999993, 0.00036229200000000017, 0.0003623339999999989, 0.00036226400000000103, 0.00036243099999999986, 0.00036244499999999943, 0.0003624170000000003, 0.000362361000000002, 0.0003625000000000017, 0.00036243100000000333, 0.0003625000000000017, 0.0003623890000000046, 0.00036226400000000103, 0.00036240299999999726, 0.0003623890000000046, 0.0003624169999999968, 0.000362346999999999, 0.0003623749999999981, 0.0003623749999999981, 0.0003623480000000054, 0.00036252800000000085, 0.0003623749999999981, 0.0003624590000000025, 0.00036229200000000017, 0.000362346999999999, 0.0003623749999999981, 0.000362346999999999, 0.00036244400000000343, 0.0003623329999999994, 0.00036236099999999855, 0.000362361999999998, 0.00036241599999999735, 0.0003623060000000067, 0.00036230599999999974, 0.00036240299999999726, 0.0003622780000000006, 0.00036243100000000333, 0.00036226400000000103, 0.0003624169999999968, 0.0003623609999999916, 0.0003625000000000017, 0.00036233299999999247, 0.00036241700000000376, 0.0003624159999999904, 0.00036234799999999845, 0.0003625000000000017]</msg>
<status status="PASS" starttime="20201030 15:54:55.924" endtime="20201030 15:54:55.932"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.919" endtime="20201030 15:54:55.933"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:55.937" endtime="20201030 15:54:55.956"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.935" endtime="20201030 15:54:55.957"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.934" endtime="20201030 15:54:55.957"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.500" endtime="20201030 15:54:55.957"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.499" endtime="20201030 15:54:55.958"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:55.966" endtime="20201030 15:54:56.029"></status>
</kw>
<msg timestamp="20201030 15:54:56.030" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:55.965" endtime="20201030 15:54:56.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:56.033" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:56.031" endtime="20201030 15:54:56.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:56.034" endtime="20201030 15:54:56.035"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.962" endtime="20201030 15:54:56.036"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.960" endtime="20201030 15:54:56.036"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:56.043" endtime="20201030 15:54:56.330"></status>
</kw>
<msg timestamp="20201030 15:54:56.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023262347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023640403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:56.042" endtime="20201030 15:54:56.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:56.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023262347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023640403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:56.334" endtime="20201030 15:54:56.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:56.343" endtime="20201030 15:54:56.344"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.039" endtime="20201030 15:54:56.345"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.037" endtime="20201030 15:54:56.345"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:56.349" level="INFO">${PHILIP_RES} = [{'diff': 0.0003780560000000016}, {'diff': 0.00037788799999999984}, {'diff': 0.00037795899999999716}, {'diff': 0.00037798700000000324}, {'diff': 0.0003779720000000007}, {'diff': 0.00037794500000000106...</msg>
<status status="PASS" starttime="20201030 15:54:56.346" endtime="20201030 15:54:56.349"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:56.354" level="INFO">${RESULT} = {'diff': [0.0003780560000000016, 0.00037788799999999984, 0.00037795899999999716, 0.00037798700000000324, 0.0003779720000000007, 0.00037794500000000106, 0.00037794500000000106, 0.0003777499999999996, 0...</msg>
<status status="PASS" starttime="20201030 15:54:56.350" endtime="20201030 15:54:56.354"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:56.358" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:56.357" endtime="20201030 15:54:56.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:56.361" level="INFO">VALUE: [0.0003780560000000016, 0.00037788799999999984, 0.00037795899999999716, 0.00037798700000000324, 0.0003779720000000007, 0.00037794500000000106, 0.00037794500000000106, 0.0003777499999999996, 0.0003779579999999977, 0.0003779999999999964, 0.00037794400000000505, 0.00037792999999999854, 0.00037804200000000204, 0.00037782000000000093, 0.0003779019999999994, 0.0003779590000000041, 0.00037798600000000376, 0.00037786100000000017, 0.00037783300000000103, 0.000377930999999998, 0.00037801399999999596, 0.0003779439999999981, 0.00037797199999999725, 0.00037804100000000257, 0.00037794400000000505, 0.00037786100000000017, 0.00037795899999999716, 0.00037780600000000136, 0.0003779869999999963, 0.0003779580000000046, 0.0003779859999999968, 0.00037787499999999974, 0.00037787499999999974, 0.00037791699999999845, 0.0003779439999999981, 0.00037791699999999845, 0.0003780690000000017, 0.00037800000000000333, 0.00037797199999999725, 0.00037794500000000453, 0.00037788899999999237, 0.00037786099999999323, 0.00037792999999999854, 0.00037780499999999495, 0.00037781900000000146, 0.00037787499999999974, 0.00037800000000000333, 0.0003778470000000006, 0.000377930999999998, 0.000377930999999998]</msg>
<status status="PASS" starttime="20201030 15:54:56.359" endtime="20201030 15:54:56.361"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.355" endtime="20201030 15:54:56.362"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:56.366" endtime="20201030 15:54:56.386"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.364" endtime="20201030 15:54:56.386"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.363" endtime="20201030 15:54:56.386"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.958" endtime="20201030 15:54:56.387"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.958" endtime="20201030 15:54:56.387"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:56.396" endtime="20201030 15:54:56.462"></status>
</kw>
<msg timestamp="20201030 15:54:56.462" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:56.395" endtime="20201030 15:54:56.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:56.465" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:56.464" endtime="20201030 15:54:56.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:56.466" endtime="20201030 15:54:56.468"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.392" endtime="20201030 15:54:56.468"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.390" endtime="20201030 15:54:56.469"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:56.476" endtime="20201030 15:54:56.763"></status>
</kw>
<msg timestamp="20201030 15:54:56.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021026653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021420417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:56.474" endtime="20201030 15:54:56.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:56.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021026653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021420417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:56.767" endtime="20201030 15:54:56.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:56.775" endtime="20201030 15:54:56.777"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.471" endtime="20201030 15:54:56.777"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.469" endtime="20201030 15:54:56.778"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:56.782" level="INFO">${PHILIP_RES} = [{'diff': 0.0003937640000000013}, {'diff': 0.0003937090000000025}, {'diff': 0.00039370899999999903}, {'diff': 0.0003938609999999988}, {'diff': 0.0003938190000000001}, {'diff': 0.0003938190000000001}, ...</msg>
<status status="PASS" starttime="20201030 15:54:56.779" endtime="20201030 15:54:56.782"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:56.786" level="INFO">${RESULT} = {'diff': [0.0003937640000000013, 0.0003937090000000025, 0.00039370899999999903, 0.0003938609999999988, 0.0003938190000000001, 0.0003938190000000001, 0.00039375000000000174, 0.0003937090000000025, 0.00...</msg>
<status status="PASS" starttime="20201030 15:54:56.783" endtime="20201030 15:54:56.786"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:56.791" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:56.790" endtime="20201030 15:54:56.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:56.793" level="INFO">VALUE: [0.0003937640000000013, 0.0003937090000000025, 0.00039370899999999903, 0.0003938609999999988, 0.0003938190000000001, 0.0003938190000000001, 0.00039375000000000174, 0.0003937090000000025, 0.0003938749999999984, 0.00039372199999999913, 0.00039383300000000315, 0.00039383300000000315, 0.0003937770000000049, 0.00039384799999999526, 0.0003937500000000052, 0.00039372199999999913, 0.00039372200000000607, 0.0003937920000000039, 0.0003936250000000016, 0.00039374999999999827, 0.0003937640000000048, 0.00039374999999999827, 0.00039370799999999956, 0.00039370900000000597, 0.00039381899999999664, 0.0003938049999999971, 0.00039370799999999956, 0.00039372199999999913, 0.0003938340000000026, 0.0003937640000000048, 0.0003938610000000023, 0.00039393100000000014, 0.0003938469999999958, 0.000393805000000004, 0.00039376399999999784, 0.00039369499999999946, 0.00039376399999999784, 0.00039373600000000564, 0.00039376299999999836, 0.00039386099999999535, 0.00039374999999999827, 0.0003937779999999974, 0.0003937779999999974, 0.00039373600000000564, 0.0003938470000000027, 0.00039386199999999483, 0.0003937639999999909, 0.0003938470000000027, 0.0003938339999999957, 0.0003937089999999921]</msg>
<status status="PASS" starttime="20201030 15:54:56.792" endtime="20201030 15:54:56.795"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.787" endtime="20201030 15:54:56.795"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:56.799" endtime="20201030 15:54:56.819"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.798" endtime="20201030 15:54:56.819"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.796" endtime="20201030 15:54:56.820"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.388" endtime="20201030 15:54:56.820"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.388" endtime="20201030 15:54:56.820"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:56.829" endtime="20201030 15:54:56.894"></status>
</kw>
<msg timestamp="20201030 15:54:56.894" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:56.827" endtime="20201030 15:54:56.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:56.897" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:56.895" endtime="20201030 15:54:56.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:56.898" endtime="20201030 15:54:56.900"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.825" endtime="20201030 15:54:56.900"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.823" endtime="20201030 15:54:56.901"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:56.908" endtime="20201030 15:54:57.194"></status>
</kw>
<msg timestamp="20201030 15:54:57.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019704694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020114694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:56.906" endtime="20201030 15:54:57.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:57.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019704694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020114694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:57.198" endtime="20201030 15:54:57.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:57.207" endtime="20201030 15:54:57.208"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.903" endtime="20201030 15:54:57.209"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.901" endtime="20201030 15:54:57.209"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:57.213" level="INFO">${PHILIP_RES} = [{'diff': 0.00041000000000000064}, {'diff': 0.0004100270000000003}, {'diff': 0.00040997199999999803}, {'diff': 0.0004100140000000002}, {'diff': 0.0004100829999999986}, {'diff': 0.00041011099999999773}...</msg>
<status status="PASS" starttime="20201030 15:54:57.210" endtime="20201030 15:54:57.214"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:57.218" level="INFO">${RESULT} = {'diff': [0.00041000000000000064, 0.0004100270000000003, 0.00040997199999999803, 0.0004100140000000002, 0.0004100829999999986, 0.00041011099999999773, 0.0004098750000000005, 0.0004099720000000015, 0.0...</msg>
<status status="PASS" starttime="20201030 15:54:57.214" endtime="20201030 15:54:57.219"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:57.223" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:57.222" endtime="20201030 15:54:57.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:57.226" level="INFO">VALUE: [0.00041000000000000064, 0.0004100270000000003, 0.00040997199999999803, 0.0004100140000000002, 0.0004100829999999986, 0.00041011099999999773, 0.0004098750000000005, 0.0004099720000000015, 0.0004099020000000002, 0.0004099439999999989, 0.00041009799999999763, 0.00041000000000000064, 0.0004100270000000003, 0.0004100270000000003, 0.00040993100000000227, 0.00041011099999999773, 0.00040987499999999705, 0.0004099159999999963, 0.00040997199999999456, 0.00041000000000000064, 0.0004099720000000015, 0.0004100279999999998, 0.0004100279999999998, 0.000409875000000004, 0.00040984700000000485, 0.00041004199999999935, 0.0004099590000000014, 0.00040988900000000356, 0.0004100409999999999, 0.0004100829999999986, 0.0004099720000000015, 0.0004100140000000002, 0.0004099720000000015, 0.00040994500000000184, 0.0004100140000000002, 0.0004099449999999949, 0.00040988900000000356, 0.00040995800000000193, 0.0004098610000000044, 0.00040993100000000227, 0.0004099999999999937, 0.0004099030000000031, 0.00040998600000000107, 0.0004099590000000014, 0.000410055999999992, 0.0004099999999999937, 0.0004100830000000055, 0.000409888000000011, 0.00041005600000000586, 0.00041011100000000467]</msg>
<status status="PASS" starttime="20201030 15:54:57.224" endtime="20201030 15:54:57.226"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.219" endtime="20201030 15:54:57.227"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:57.233" endtime="20201030 15:54:57.253"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.230" endtime="20201030 15:54:57.253"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.228" endtime="20201030 15:54:57.254"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.821" endtime="20201030 15:54:57.254"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.821" endtime="20201030 15:54:57.254"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:57.263" endtime="20201030 15:54:57.332"></status>
</kw>
<msg timestamp="20201030 15:54:57.332" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:57.262" endtime="20201030 15:54:57.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:57.335" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:57.333" endtime="20201030 15:54:57.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:57.336" endtime="20201030 15:54:57.338"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.259" endtime="20201030 15:54:57.338"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.257" endtime="20201030 15:54:57.339"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:57.346" endtime="20201030 15:54:57.634"></status>
</kw>
<msg timestamp="20201030 15:54:57.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022866069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0232925, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:54:57.344" endtime="20201030 15:54:57.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:57.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022866069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0232925, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:54:57.638" endtime="20201030 15:54:57.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:57.646" endtime="20201030 15:54:57.648"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.341" endtime="20201030 15:54:57.649"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.339" endtime="20201030 15:54:57.649"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:57.653" level="INFO">${PHILIP_RES} = [{'diff': 0.0004264310000000014}, {'diff': 0.0004264029999999988}, {'diff': 0.0004263190000000014}, {'diff': 0.0004262220000000004}, {'diff': 0.00042634700000000053}, {'diff': 0.00042634700000000053},...</msg>
<status status="PASS" starttime="20201030 15:54:57.650" endtime="20201030 15:54:57.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:57.657" level="INFO">${RESULT} = {'diff': [0.0004264310000000014, 0.0004264029999999988, 0.0004263190000000014, 0.0004262220000000004, 0.00042634700000000053, 0.00042634700000000053, 0.0004262640000000026, 0.00042640199999999587, 0.0...</msg>
<status status="PASS" starttime="20201030 15:54:57.654" endtime="20201030 15:54:57.658"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:57.662" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:57.661" endtime="20201030 15:54:57.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:57.664" level="INFO">VALUE: [0.0004264310000000014, 0.0004264029999999988, 0.0004263190000000014, 0.0004262220000000004, 0.00042634700000000053, 0.00042634700000000053, 0.0004262640000000026, 0.00042640199999999587, 0.0004264589999999971, 0.00042648599999999676, 0.00042619499999999727, 0.0004262499999999961, 0.00042618100000000464, 0.0004262779999999952, 0.000426250000000003, 0.0004261249999999994, 0.00042616700000000507, 0.0004262499999999961, 0.0004262909999999953, 0.0004261379999999995, 0.0004261799999999982, 0.00042622300000000335, 0.000426138999999999, 0.0004262080000000043, 0.0004263619999999996, 0.00042626399999999565, 0.0004261799999999982, 0.00042620799999999737, 0.00042616699999999813, 0.0004262640000000026, 0.0004262359999999965, 0.0004262499999999961, 0.00042615299999999856, 0.00042632000000000086, 0.0004262499999999961, 0.00042627800000000216, 0.0004261249999999994, 0.000426250000000003, 0.0004261809999999977, 0.00042624999999998914, 0.00042619499999999033, 0.00042620799999999737, 0.00042616700000000507, 0.0004261109999999929, 0.0004263060000000013, 0.00042616700000000507, 0.0004263610000000001, 0.00042622300000000335, 0.0004261249999999994, 0.0004262640000000095]</msg>
<status status="PASS" starttime="20201030 15:54:57.663" endtime="20201030 15:54:57.665"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.658" endtime="20201030 15:54:57.666"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:57.670" endtime="20201030 15:54:57.689"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.668" endtime="20201030 15:54:57.690"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.667" endtime="20201030 15:54:57.690"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.255" endtime="20201030 15:54:57.691"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.255" endtime="20201030 15:54:57.691"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:57.699" endtime="20201030 15:54:57.773"></status>
</kw>
<msg timestamp="20201030 15:54:57.774" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:57.698" endtime="20201030 15:54:57.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:57.776" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:57.775" endtime="20201030 15:54:57.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:57.777" endtime="20201030 15:54:57.779"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.695" endtime="20201030 15:54:57.780"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.693" endtime="20201030 15:54:57.780"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:57.787" endtime="20201030 15:54:58.094"></status>
</kw>
<msg timestamp="20201030 15:54:58.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023400042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023843069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:57.785" endtime="20201030 15:54:58.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:58.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023400042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023843069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:58.097" endtime="20201030 15:54:58.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:58.105" endtime="20201030 15:54:58.107"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.783" endtime="20201030 15:54:58.107"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.781" endtime="20201030 15:54:58.108"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:58.111" level="INFO">${PHILIP_RES} = [{'diff': 0.0004430270000000021}, {'diff': 0.0004428339999999996}, {'diff': 0.00044288900000000186}, {'diff': 0.0004428750000000023}, {'diff': 0.00044291600000000153}, {'diff': 0.00044288900000000186}...</msg>
<status status="PASS" starttime="20201030 15:54:58.108" endtime="20201030 15:54:58.112"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:58.115" level="INFO">${RESULT} = {'diff': [0.0004430270000000021, 0.0004428339999999996, 0.00044288900000000186, 0.0004428750000000023, 0.00044291600000000153, 0.00044288900000000186, 0.00044294400000000067, 0.00044299999999999895, 0...</msg>
<status status="PASS" starttime="20201030 15:54:58.112" endtime="20201030 15:54:58.116"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:58.120" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:58.119" endtime="20201030 15:54:58.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:58.122" level="INFO">VALUE: [0.0004430270000000021, 0.0004428339999999996, 0.00044288900000000186, 0.0004428750000000023, 0.00044291600000000153, 0.00044288900000000186, 0.00044294400000000067, 0.00044299999999999895, 0.00044287499999999536, 0.00044291600000000153, 0.00044291699999999407, 0.0004427919999999974, 0.00044276399999999827, 0.0004428339999999961, 0.0004428469999999962, 0.0004427499999999987, 0.000442708, 0.0004427780000000048, 0.0004426530000000012, 0.0004427919999999974, 0.00044273599999999913, 0.0004427499999999987, 0.0004428049999999975, 0.0004428750000000023, 0.0004427780000000048, 0.0004428060000000039, 0.000442708, 0.0004428609999999958, 0.0004429719999999998, 0.00044298699999999885, 0.0004429300000000011, 0.00044301400000000546, 0.00044279099999999794, 0.000442999999999992, 0.00044283400000000306, 0.0004428479999999957, 0.0004429030000000084, 0.000442917000000001, 0.00044286099999998885, 0.00044293099999999364, 0.00044301400000000546, 0.00044279099999999794, 0.0004429029999999945, 0.00044287499999999536, 0.0004429719999999998, 0.0004429869999999919, 0.0004429029999999945, 0.00044294400000000067, 0.00044268000000000085, 0.000442888999999988]</msg>
<status status="PASS" starttime="20201030 15:54:58.121" endtime="20201030 15:54:58.126"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.116" endtime="20201030 15:54:58.127"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:58.130" endtime="20201030 15:54:58.150"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.129" endtime="20201030 15:54:58.150"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.128" endtime="20201030 15:54:58.151"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.692" endtime="20201030 15:54:58.151"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.691" endtime="20201030 15:54:58.151"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:58.159" endtime="20201030 15:54:58.231"></status>
</kw>
<msg timestamp="20201030 15:54:58.231" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:58.158" endtime="20201030 15:54:58.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:58.234" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:58.232" endtime="20201030 15:54:58.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:58.235" endtime="20201030 15:54:58.236"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.155" endtime="20201030 15:54:58.237"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.153" endtime="20201030 15:54:58.237"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:58.244" endtime="20201030 15:54:58.530"></status>
</kw>
<msg timestamp="20201030 15:54:58.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020137764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020597472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:58.242" endtime="20201030 15:54:58.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:58.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020137764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020597472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:58.534" endtime="20201030 15:54:58.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:58.542" endtime="20201030 15:54:58.543"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.240" endtime="20201030 15:54:58.544"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.238" endtime="20201030 15:54:58.544"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:58.548" level="INFO">${PHILIP_RES} = [{'diff': 0.00045970799999999964}, {'diff': 0.0004596250000000017}, {'diff': 0.00045980500000000063}, {'diff': 0.0004598060000000001}, {'diff': 0.0004597500000000018}, {'diff': 0.0004598609999999989},...</msg>
<status status="PASS" starttime="20201030 15:54:58.545" endtime="20201030 15:54:58.548"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:58.553" level="INFO">${RESULT} = {'diff': [0.00045970799999999964, 0.0004596250000000017, 0.00045980500000000063, 0.0004598060000000001, 0.0004597500000000018, 0.0004598609999999989, 0.00045970799999999964, 0.0004598609999999989, 0.0...</msg>
<status status="PASS" starttime="20201030 15:54:58.549" endtime="20201030 15:54:58.553"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:58.557" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:58.556" endtime="20201030 15:54:58.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:58.560" level="INFO">VALUE: [0.00045970799999999964, 0.0004596250000000017, 0.00045980500000000063, 0.0004598060000000001, 0.0004597500000000018, 0.0004598609999999989, 0.00045970799999999964, 0.0004598609999999989, 0.0004597779999999975, 0.00045979200000000053, 0.00045984699999999934, 0.00045968100000000345, 0.0004597080000000031, 0.0004597640000000014, 0.0004597640000000014, 0.00045983299999999977, 0.00045967999999999704, 0.00045962500000000517, 0.00045965299999999737, 0.00045977800000000096, 0.00045977800000000096, 0.0004598049999999937, 0.00045965299999999737, 0.0004598609999999989, 0.0004599169999999972, 0.000459889000000005, 0.0004597090000000026, 0.00045977800000000096, 0.00045970899999999565, 0.00045969400000000354, 0.0004596660000000044, 0.00045983299999999977, 0.00045966699999999694, 0.0004597090000000026, 0.00045990300000000456, 0.0004597090000000026, 0.0004596390000000117, 0.00045972199999999575, 0.00045991600000000465, 0.0004598340000000062, 0.0004598190000000002, 0.00045979200000000053, 0.0004596940000000105, 0.0004598190000000002, 0.00045983299999999283, 0.000459777999999994, 0.00045980599999999316, 0.00045968100000000345, 0.0004597499999999949, 0.0004598339999999923]</msg>
<status status="PASS" starttime="20201030 15:54:58.558" endtime="20201030 15:54:58.560"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.554" endtime="20201030 15:54:58.561"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:58.565" endtime="20201030 15:54:58.584"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.563" endtime="20201030 15:54:58.585"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.562" endtime="20201030 15:54:58.585"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.152" endtime="20201030 15:54:58.585"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.151" endtime="20201030 15:54:58.585"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:58.594" endtime="20201030 15:54:58.672"></status>
</kw>
<msg timestamp="20201030 15:54:58.673" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:58.592" endtime="20201030 15:54:58.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:58.675" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:58.674" endtime="20201030 15:54:58.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:58.676" endtime="20201030 15:54:58.678"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.590" endtime="20201030 15:54:58.678"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.588" endtime="20201030 15:54:58.679"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:58.685" endtime="20201030 15:54:58.997"></status>
</kw>
<msg timestamp="20201030 15:54:59.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022908292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023384889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:58.684" endtime="20201030 15:54:59.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:59.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022908292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023384889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:59.001" endtime="20201030 15:54:59.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:59.009" endtime="20201030 15:54:59.010"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.681" endtime="20201030 15:54:59.011"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.679" endtime="20201030 15:54:59.011"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:59.015" level="INFO">${PHILIP_RES} = [{'diff': 0.00047659699999999874}, {'diff': 0.0004765970000000022}, {'diff': 0.0004765829999999992}, {'diff': 0.00047654199999999994}, {'diff': 0.0004766949999999992}, {'diff': 0.0004768329999999994},...</msg>
<status status="PASS" starttime="20201030 15:54:59.012" endtime="20201030 15:54:59.015"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:59.019" level="INFO">${RESULT} = {'diff': [0.00047659699999999874, 0.0004765970000000022, 0.0004765829999999992, 0.00047654199999999994, 0.0004766949999999992, 0.0004768329999999994, 0.0004766110000000018, 0.00047672299999999834, 0.0...</msg>
<status status="PASS" starttime="20201030 15:54:59.016" endtime="20201030 15:54:59.019"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:59.023" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:59.022" endtime="20201030 15:54:59.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:59.026" level="INFO">VALUE: [0.00047659699999999874, 0.0004765970000000022, 0.0004765829999999992, 0.00047654199999999994, 0.0004766949999999992, 0.0004768329999999994, 0.0004766110000000018, 0.00047672299999999834, 0.0004767769999999977, 0.00047662500000000135, 0.0004765829999999957, 0.0004766530000000005, 0.0004766660000000006, 0.00047670899999999877, 0.0004767079999999993, 0.0004765829999999957, 0.000476749999999998, 0.00047669399999999973, 0.000476638999999994, 0.0004766530000000005, 0.00047675000000000495, 0.0004766530000000005, 0.0004767079999999993, 0.00047679099999999724, 0.00047656899999999613, 0.00047672199999999887, 0.00047661200000000126, 0.0004768750000000016, 0.00047677799999999715, 0.0004768189999999964, 0.0004768890000000012, 0.000476944, 0.00047683299999999595, 0.0004768890000000081, 0.0004768050000000107, 0.00047701399999999783, 0.0004768750000000016, 0.00047683399999999543, 0.0004769159999999939, 0.00047688899999999423, 0.0004768749999999877, 0.0004769300000000004, 0.00047690200000000127, 0.0004768750000000016, 0.00047698600000001257, 0.0004768750000000016, 0.0004768190000000033, 0.00047688899999999423, 0.0004769590000000129, 0.0004767360000000054]</msg>
<status status="PASS" starttime="20201030 15:54:59.025" endtime="20201030 15:54:59.027"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.020" endtime="20201030 15:54:59.027"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:59.031" endtime="20201030 15:54:59.050"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.029" endtime="20201030 15:54:59.051"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.028" endtime="20201030 15:54:59.052"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.586" endtime="20201030 15:54:59.052"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.586" endtime="20201030 15:54:59.053"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:59.061" endtime="20201030 15:54:59.140"></status>
</kw>
<msg timestamp="20201030 15:54:59.141" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:59.059" endtime="20201030 15:54:59.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:59.143" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:59.142" endtime="20201030 15:54:59.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:59.144" endtime="20201030 15:54:59.146"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.057" endtime="20201030 15:54:59.146"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.055" endtime="20201030 15:54:59.147"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:59.153" endtime="20201030 15:54:59.439"></status>
</kw>
<msg timestamp="20201030 15:54:59.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023953917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024448042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:59.152" endtime="20201030 15:54:59.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:59.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023953917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024448042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:59.443" endtime="20201030 15:54:59.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:59.451" endtime="20201030 15:54:59.453"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.149" endtime="20201030 15:54:59.454"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.147" endtime="20201030 15:54:59.454"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:59.458" level="INFO">${PHILIP_RES} = [{'diff': 0.000494124999999998}, {'diff': 0.0004940839999999988}, {'diff': 0.0004942639999999977}, {'diff': 0.0004941519999999977}, {'diff': 0.0004942089999999989}, {'diff': 0.0004942079999999995}, {'...</msg>
<status status="PASS" starttime="20201030 15:54:59.455" endtime="20201030 15:54:59.458"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:59.462" level="INFO">${RESULT} = {'diff': [0.000494124999999998, 0.0004940839999999988, 0.0004942639999999977, 0.0004941519999999977, 0.0004942089999999989, 0.0004942079999999995, 0.0004941529999999972, 0.0004942080000000029, 0.00049...</msg>
<status status="PASS" starttime="20201030 15:54:59.459" endtime="20201030 15:54:59.462"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:59.466" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:59.465" endtime="20201030 15:54:59.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:59.469" level="INFO">VALUE: [0.000494124999999998, 0.0004940839999999988, 0.0004942639999999977, 0.0004941519999999977, 0.0004942089999999989, 0.0004942079999999995, 0.0004941529999999972, 0.0004942080000000029, 0.000494319, 0.000494223000000002, 0.0004940829999999993, 0.0004941670000000037, 0.000494207999999996, 0.0004942220000000025, 0.0004941109999999985, 0.0004942780000000008, 0.0004940689999999998, 0.0004941800000000038, 0.0004941530000000041, 0.0004940979999999984, 0.0004940550000000002, 0.0004941669999999967, 0.0004941659999999973, 0.0004942920000000003, 0.0004941950000000028, 0.0004941939999999964, 0.0004941529999999972, 0.0004941109999999985, 0.0004941809999999963, 0.0004941530000000041, 0.0004941939999999895, 0.0004941529999999972, 0.0004941110000000054, 0.0004940970000000128, 0.0004941940000000034, 0.000494124999999998, 0.0004940560000000066, 0.000494124999999998, 0.0004941120000000049, 0.0004941669999999898, 0.0004942219999999886, 0.0004939999999999944, 0.000494124999999998, 0.0004940830000000063, 0.000494124999999998, 0.0004940420000000001, 0.0004941669999999898, 0.0004941109999999915, 0.0004940699999999992, 0.0004941940000000034]</msg>
<status status="PASS" starttime="20201030 15:54:59.467" endtime="20201030 15:54:59.470"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.463" endtime="20201030 15:54:59.471"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:59.474" endtime="20201030 15:54:59.494"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.473" endtime="20201030 15:54:59.495"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.472" endtime="20201030 15:54:59.495"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.053" endtime="20201030 15:54:59.495"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.053" endtime="20201030 15:54:59.495"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:59.504" endtime="20201030 15:54:59.582"></status>
</kw>
<msg timestamp="20201030 15:54:59.582" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:59.502" endtime="20201030 15:54:59.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:59.585" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:59.583" endtime="20201030 15:54:59.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:59.586" endtime="20201030 15:54:59.587"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.499" endtime="20201030 15:54:59.588"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.498" endtime="20201030 15:54:59.588"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:59.595" endtime="20201030 15:54:59.903"></status>
</kw>
<msg timestamp="20201030 15:54:59.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022333597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02284525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:54:59.593" endtime="20201030 15:54:59.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:59.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022333597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02284525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:54:59.906" endtime="20201030 15:54:59.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:59.914" endtime="20201030 15:54:59.916"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.590" endtime="20201030 15:54:59.916"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.589" endtime="20201030 15:54:59.917"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:59.920" level="INFO">${PHILIP_RES} = [{'diff': 0.0005116530000000008}, {'diff': 0.0005118339999999992}, {'diff': 0.0005117079999999996}, {'diff': 0.0005116670000000004}, {'diff': 0.0005117079999999996}, {'diff': 0.0005116949999999995}, {...</msg>
<status status="PASS" starttime="20201030 15:54:59.917" endtime="20201030 15:54:59.921"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:59.925" level="INFO">${RESULT} = {'diff': [0.0005116530000000008, 0.0005118339999999992, 0.0005117079999999996, 0.0005116670000000004, 0.0005117079999999996, 0.0005116949999999995, 0.0005116670000000004, 0.0005116110000000021, 0.0005...</msg>
<status status="PASS" starttime="20201030 15:54:59.921" endtime="20201030 15:54:59.926"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:59.930" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:59.929" endtime="20201030 15:54:59.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:59.932" level="INFO">VALUE: [0.0005116530000000008, 0.0005118339999999992, 0.0005117079999999996, 0.0005116670000000004, 0.0005117079999999996, 0.0005116949999999995, 0.0005116670000000004, 0.0005116110000000021, 0.0005115689999999964, 0.000511582999999996, 0.0005115970000000025, 0.0005114999999999981, 0.0005114719999999989, 0.0005116250000000017, 0.0005114730000000053, 0.0005115549999999969, 0.0005115410000000042, 0.0005114729999999984, 0.0005114579999999994, 0.000511582999999996, 0.0005114170000000001, 0.0005115280000000041, 0.0005115970000000025, 0.0005114589999999988, 0.0005115840000000024, 0.0005115139999999976, 0.0005114449999999993, 0.0005116119999999946, 0.0005115279999999972, 0.000511583000000003, 0.0005114719999999989, 0.0005114439999999998, 0.0005114170000000001, 0.000511360999999988, 0.0005114590000000058, 0.0005115139999999907, 0.0005115000000000119, 0.0005113750000000084, 0.0005114579999999924, 0.0005114719999999989, 0.0005115700000000029, 0.0005114999999999981, 0.0005114999999999981, 0.0005116109999999952, 0.0005115549999999969, 0.0005115690000000034, 0.0005114860000000054, 0.0005115409999999904, 0.0005114719999999989, 0.0005115410000000042]</msg>
<status status="PASS" starttime="20201030 15:54:59.931" endtime="20201030 15:54:59.933"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.926" endtime="20201030 15:54:59.933"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:59.937" endtime="20201030 15:54:59.956"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.935" endtime="20201030 15:54:59.957"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.934" endtime="20201030 15:54:59.957"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.496" endtime="20201030 15:54:59.958"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.496" endtime="20201030 15:54:59.958"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:59.966" endtime="20201030 15:55:00.049"></status>
</kw>
<msg timestamp="20201030 15:55:00.050" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:59.965" endtime="20201030 15:55:00.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:00.053" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:00.051" endtime="20201030 15:55:00.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:00.054" endtime="20201030 15:55:00.056"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.962" endtime="20201030 15:55:00.056"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.960" endtime="20201030 15:55:00.057"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:00.063" endtime="20201030 15:55:00.351"></status>
</kw>
<msg timestamp="20201030 15:55:00.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022184139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022713472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:00.062" endtime="20201030 15:55:00.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:00.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022184139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022713472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:00.355" endtime="20201030 15:55:00.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:00.362" endtime="20201030 15:55:00.364"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.059" endtime="20201030 15:55:00.365"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.058" endtime="20201030 15:55:00.365"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:00.369" level="INFO">${PHILIP_RES} = [{'diff': 0.0005293329999999999}, {'diff': 0.0005293890000000016}, {'diff': 0.0005293469999999995}, {'diff': 0.0005293750000000021}, {'diff': 0.0005292920000000007}, {'diff': 0.0005294170000000008}, {...</msg>
<status status="PASS" starttime="20201030 15:55:00.366" endtime="20201030 15:55:00.369"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:00.373" level="INFO">${RESULT} = {'diff': [0.0005293329999999999, 0.0005293890000000016, 0.0005293469999999995, 0.0005293750000000021, 0.0005292920000000007, 0.0005294170000000008, 0.0005292500000000019, 0.0005292910000000012, 0.0005...</msg>
<status status="PASS" starttime="20201030 15:55:00.370" endtime="20201030 15:55:00.373"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:00.377" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:00.376" endtime="20201030 15:55:00.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:00.379" level="INFO">VALUE: [0.0005293329999999999, 0.0005293890000000016, 0.0005293469999999995, 0.0005293750000000021, 0.0005292920000000007, 0.0005294170000000008, 0.0005292500000000019, 0.0005292910000000012, 0.0005293749999999986, 0.0005294029999999977, 0.0005293199999999998, 0.0005293059999999933, 0.0005293469999999995, 0.0005292640000000015, 0.0005293329999999999, 0.0005294449999999964, 0.0005293749999999986, 0.0005293190000000003, 0.000529249999999995, 0.0005294860000000026, 0.0005294309999999969, 0.0005292919999999937, 0.0005294170000000042, 0.0005295000000000022, 0.0005294300000000043, 0.0005293060000000002, 0.0005293190000000003, 0.0005293199999999998, 0.0005292500000000019, 0.0005292779999999941, 0.0005294860000000096, 0.0005293749999999986, 0.0005294169999999904, 0.0005292779999999941, 0.0005294579999999965, 0.0005295280000000013, 0.0005293889999999912, 0.0005295139999999948, 0.0005294579999999965, 0.000529472000000003, 0.000529472000000003, 0.0005293330000000068, 0.0005294579999999965, 0.000529526999999988, 0.0005295420000000078, 0.0005293330000000068, 0.0005295690000000075, 0.0005293199999999998, 0.000529458999999996, 0.0005293890000000051]</msg>
<status status="PASS" starttime="20201030 15:55:00.378" endtime="20201030 15:55:00.380"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.374" endtime="20201030 15:55:00.381"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:00.384" endtime="20201030 15:55:00.404"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.383" endtime="20201030 15:55:00.405"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.382" endtime="20201030 15:55:00.405"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.959" endtime="20201030 15:55:00.405"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.958" endtime="20201030 15:55:00.405"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:00.414" endtime="20201030 15:55:00.496"></status>
</kw>
<msg timestamp="20201030 15:55:00.497" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:00.412" endtime="20201030 15:55:00.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:00.499" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:00.498" endtime="20201030 15:55:00.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:00.500" endtime="20201030 15:55:00.502"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.409" endtime="20201030 15:55:00.502"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.408" endtime="20201030 15:55:00.503"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:00.509" endtime="20201030 15:55:00.795"></status>
</kw>
<msg timestamp="20201030 15:55:00.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021759819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022307514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:00.508" endtime="20201030 15:55:00.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:00.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021759819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022307514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:00.799" endtime="20201030 15:55:00.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:00.806" endtime="20201030 15:55:00.808"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.505" endtime="20201030 15:55:00.809"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.503" endtime="20201030 15:55:00.809"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:00.813" level="INFO">${PHILIP_RES} = [{'diff': 0.0005476950000000008}, {'diff': 0.0005477919999999983}, {'diff': 0.0005477640000000027}, {'diff': 0.0005477080000000009}, {'diff': 0.0005476389999999991}, {'diff': 0.0005476950000000008}, {...</msg>
<status status="PASS" starttime="20201030 15:55:00.810" endtime="20201030 15:55:00.813"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:00.817" level="INFO">${RESULT} = {'diff': [0.0005476950000000008, 0.0005477919999999983, 0.0005477640000000027, 0.0005477080000000009, 0.0005476389999999991, 0.0005476950000000008, 0.0005477369999999995, 0.0005477090000000004, 0.0005...</msg>
<status status="PASS" starttime="20201030 15:55:00.814" endtime="20201030 15:55:00.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:00.821" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:00.820" endtime="20201030 15:55:00.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:00.824" level="INFO">VALUE: [0.0005476950000000008, 0.0005477919999999983, 0.0005477640000000027, 0.0005477080000000009, 0.0005476389999999991, 0.0005476950000000008, 0.0005477369999999995, 0.0005477090000000004, 0.0005477499999999996, 0.0005477360000000001, 0.0005476530000000021, 0.0005476109999999965, 0.0005475830000000043, 0.0005475549999999982, 0.0005476529999999952, 0.0005476810000000013, 0.0005476809999999943, 0.0005475549999999982, 0.0005477080000000009, 0.0005476390000000025, 0.0005475409999999986, 0.0005477909999999989, 0.0005477220000000005, 0.0005477629999999997, 0.0005476530000000021, 0.000547624999999996, 0.0005478059999999979, 0.0005476390000000025, 0.000547625000000003, 0.0005475419999999981, 0.000547513999999999, 0.0005475689999999978, 0.0005476390000000025, 0.0005476809999999943, 0.0005476940000000013, 0.0005475969999999969, 0.0005478059999999979, 0.000547624999999996, 0.0005476950000000008, 0.000547624999999996, 0.0005475550000000051, 0.0005475560000000046, 0.0005477220000000005, 0.0005476670000000017, 0.0005475419999999981, 0.000547513999999999, 0.0005476799999999948, 0.0005475559999999907, 0.000547624999999996, 0.000547707999999994]</msg>
<status status="PASS" starttime="20201030 15:55:00.822" endtime="20201030 15:55:00.825"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.818" endtime="20201030 15:55:00.826"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:00.829" endtime="20201030 15:55:00.849"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.828" endtime="20201030 15:55:00.849"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.827" endtime="20201030 15:55:00.850"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.406" endtime="20201030 15:55:00.850"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.406" endtime="20201030 15:55:00.850"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:00.859" endtime="20201030 15:55:00.943"></status>
</kw>
<msg timestamp="20201030 15:55:00.944" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:00.858" endtime="20201030 15:55:00.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:00.946" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:00.945" endtime="20201030 15:55:00.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:00.947" endtime="20201030 15:55:00.949"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.855" endtime="20201030 15:55:00.949"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.854" endtime="20201030 15:55:00.950"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:00.956" endtime="20201030 15:55:01.264"></status>
</kw>
<msg timestamp="20201030 15:55:01.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019011056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019577069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:00.955" endtime="20201030 15:55:01.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:01.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019011056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019577069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:01.268" endtime="20201030 15:55:01.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:01.276" endtime="20201030 15:55:01.277"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.952" endtime="20201030 15:55:01.278"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.950" endtime="20201030 15:55:01.278"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:01.282" level="INFO">${PHILIP_RES} = [{'diff': 0.0005660130000000006}, {'diff': 0.000565986000000001}, {'diff': 0.0005658750000000004}, {'diff': 0.0005660419999999992}, {'diff': 0.0005659310000000022}, {'diff': 0.0005660419999999992}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:01.279" endtime="20201030 15:55:01.282"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:01.287" level="INFO">${RESULT} = {'diff': [0.0005660130000000006, 0.000565986000000001, 0.0005658750000000004, 0.0005660419999999992, 0.0005659310000000022, 0.0005660419999999992, 0.0005660409999999998, 0.000565986000000001, 0.000566...</msg>
<status status="PASS" starttime="20201030 15:55:01.283" endtime="20201030 15:55:01.287"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:01.291" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:01.290" endtime="20201030 15:55:01.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:01.294" level="INFO">VALUE: [0.0005660130000000006, 0.000565986000000001, 0.0005658750000000004, 0.0005660419999999992, 0.0005659310000000022, 0.0005660419999999992, 0.0005660409999999998, 0.000565986000000001, 0.0005660419999999992, 0.0005659579999999984, 0.0005659449999999983, 0.000565889, 0.0005659859999999975, 0.0005659579999999984, 0.0005660269999999967, 0.0005659580000000053, 0.0005658330000000017, 0.0005659159999999996, 0.0005660279999999962, 0.0005661669999999994, 0.0005660139999999966, 0.0005658340000000012, 0.0005661799999999995, 0.0005659859999999975, 0.0005660139999999966, 0.0005661250000000007, 0.0005660830000000019, 0.0005659999999999971, 0.0005659859999999975, 0.0005660840000000014, 0.0005659870000000039, 0.0005660270000000106, 0.0005661660000000068, 0.0005659310000000056, 0.0005660410000000032, 0.0005661109999999941, 0.0005661390000000072, 0.0005661670000000063, 0.0005660839999999945, 0.0005661109999999941, 0.0005660830000000089, 0.0005661529999999998, 0.0005660140000000036, 0.0005659859999999906, 0.0005660559999999953, 0.0005660559999999953, 0.0005659169999999991, 0.0005659579999999914, 0.0005659159999999996, 0.0005660000000000109]</msg>
<status status="PASS" starttime="20201030 15:55:01.292" endtime="20201030 15:55:01.298"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.288" endtime="20201030 15:55:01.299"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:01.303" endtime="20201030 15:55:01.322"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.301" endtime="20201030 15:55:01.323"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.300" endtime="20201030 15:55:01.323"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.852" endtime="20201030 15:55:01.323"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.850" endtime="20201030 15:55:01.323"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:01.332" endtime="20201030 15:55:01.421"></status>
</kw>
<msg timestamp="20201030 15:55:01.421" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:01.330" endtime="20201030 15:55:01.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:01.429" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:01.425" endtime="20201030 15:55:01.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:01.433" endtime="20201030 15:55:01.438"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.328" endtime="20201030 15:55:01.439"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.326" endtime="20201030 15:55:01.440"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:01.452" endtime="20201030 15:55:01.741"></status>
</kw>
<msg timestamp="20201030 15:55:01.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022901042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023485347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:01.450" endtime="20201030 15:55:01.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:01.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022901042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023485347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:01.745" endtime="20201030 15:55:01.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:01.753" endtime="20201030 15:55:01.754"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.445" endtime="20201030 15:55:01.755"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.441" endtime="20201030 15:55:01.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:01.759" level="INFO">${PHILIP_RES} = [{'diff': 0.0005843050000000002}, {'diff': 0.0005840419999999999}, {'diff': 0.000584264000000001}, {'diff': 0.0005843339999999989}, {'diff': 0.0005842360000000019}, {'diff': 0.0005844170000000003}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:01.756" endtime="20201030 15:55:01.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:01.763" level="INFO">${RESULT} = {'diff': [0.0005843050000000002, 0.0005840419999999999, 0.000584264000000001, 0.0005843339999999989, 0.0005842360000000019, 0.0005844170000000003, 0.0005843329999999994, 0.0005843189999999998, 0.00058...</msg>
<status status="PASS" starttime="20201030 15:55:01.760" endtime="20201030 15:55:01.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:01.767" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:01.766" endtime="20201030 15:55:01.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:01.770" level="INFO">VALUE: [0.0005843050000000002, 0.0005840419999999999, 0.000584264000000001, 0.0005843339999999989, 0.0005842360000000019, 0.0005844170000000003, 0.0005843329999999994, 0.0005843189999999998, 0.0005844169999999968, 0.0005843890000000046, 0.0005843749999999981, 0.0005844309999999964, 0.0005843609999999985, 0.0005844160000000043, 0.0005844159999999973, 0.0005844029999999972, 0.0005844450000000029, 0.0005844169999999968, 0.0005844029999999972, 0.0005843609999999985, 0.0005844309999999964, 0.0005843059999999997, 0.0005844170000000037, 0.0005844160000000043, 0.0005843479999999984, 0.0005844439999999965, 0.0005844719999999956, 0.000584444999999989, 0.0005842080000000027, 0.0005843199999999993, 0.000584346999999999, 0.0005844029999999972, 0.0005843200000000132, 0.0005844589999999955, 0.0005843199999999993, 0.0005844859999999952, 0.0005842910000000007, 0.0005842910000000007, 0.0005844029999999972, 0.0005843609999999916, 0.0005845000000000017, 0.0005844169999999899, 0.0005844440000000034, 0.0005843889999999907, 0.0005843749999999981, 0.0005843609999999916, 0.000584264000000001, 0.0005843880000000051, 0.0005843330000000063, 0.0005842500000000084]</msg>
<status status="PASS" starttime="20201030 15:55:01.768" endtime="20201030 15:55:01.770"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.764" endtime="20201030 15:55:01.771"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:01.775" endtime="20201030 15:55:01.794"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.773" endtime="20201030 15:55:01.795"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.772" endtime="20201030 15:55:01.795"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.324" endtime="20201030 15:55:01.795"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.324" endtime="20201030 15:55:01.795"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:01.804" endtime="20201030 15:55:01.898"></status>
</kw>
<msg timestamp="20201030 15:55:01.898" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:01.802" endtime="20201030 15:55:01.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:01.901" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:01.899" endtime="20201030 15:55:01.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:01.902" endtime="20201030 15:55:01.903"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.800" endtime="20201030 15:55:01.904"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.798" endtime="20201030 15:55:01.904"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:01.911" endtime="20201030 15:55:02.214"></status>
</kw>
<msg timestamp="20201030 15:55:02.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023207625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023810806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:01.909" endtime="20201030 15:55:02.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:02.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023207625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023810806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:02.218" endtime="20201030 15:55:02.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:02.226" endtime="20201030 15:55:02.227"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.907" endtime="20201030 15:55:02.228"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.905" endtime="20201030 15:55:02.228"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:02.232" level="INFO">${PHILIP_RES} = [{'diff': 0.0006031810000000012}, {'diff': 0.0006030549999999982}, {'diff': 0.0006031389999999991}, {'diff': 0.000603333000000001}, {'diff': 0.0006031809999999978}, {'diff': 0.0006030139999999989}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:02.229" endtime="20201030 15:55:02.232"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:02.236" level="INFO">${RESULT} = {'diff': [0.0006031810000000012, 0.0006030549999999982, 0.0006031389999999991, 0.000603333000000001, 0.0006031809999999978, 0.0006030139999999989, 0.0006031949999999939, 0.000603318999999998, 0.000603...</msg>
<status status="PASS" starttime="20201030 15:55:02.233" endtime="20201030 15:55:02.236"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:02.240" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:02.239" endtime="20201030 15:55:02.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:02.243" level="INFO">VALUE: [0.0006031810000000012, 0.0006030549999999982, 0.0006031389999999991, 0.000603333000000001, 0.0006031809999999978, 0.0006030139999999989, 0.0006031949999999939, 0.000603318999999998, 0.0006033469999999971, 0.0006033890000000028, 0.0006033329999999976, 0.0006033049999999984, 0.000603125000000003, 0.000603236, 0.0006031390000000025, 0.000603236, 0.0006031110000000034, 0.0006031670000000017, 0.0006030969999999969, 0.0006031950000000008, 0.0006031940000000013, 0.0006030549999999982, 0.000603207999999994, 0.0006030969999999969, 0.0006030970000000038, 0.0006033609999999967, 0.0006032499999999996, 0.0006031940000000013, 0.0006032220000000005, 0.0006031390000000025, 0.0006031940000000013, 0.0006032370000000065, 0.0006032499999999996, 0.0006034020000000029, 0.0006031810000000082, 0.0006031799999999948, 0.0006031810000000082, 0.0006032639999999923, 0.0006031809999999943, 0.0006032220000000005, 0.0006033190000000049, 0.0006031670000000017, 0.0006031809999999943, 0.0006030419999999981, 0.0006031529999999952, 0.0006031120000000029, 0.0006033329999999976, 0.0006031110000000034, 0.0006030829999999904, 0.0006031809999999943]</msg>
<status status="PASS" starttime="20201030 15:55:02.241" endtime="20201030 15:55:02.247"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.237" endtime="20201030 15:55:02.247"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:02.251" endtime="20201030 15:55:02.270"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.249" endtime="20201030 15:55:02.271"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.248" endtime="20201030 15:55:02.271"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.796" endtime="20201030 15:55:02.271"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.796" endtime="20201030 15:55:02.272"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:02.280" endtime="20201030 15:55:02.370"></status>
</kw>
<msg timestamp="20201030 15:55:02.370" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:02.278" endtime="20201030 15:55:02.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:02.373" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:02.371" endtime="20201030 15:55:02.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:02.374" endtime="20201030 15:55:02.375"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.276" endtime="20201030 15:55:02.376"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.274" endtime="20201030 15:55:02.376"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:02.383" endtime="20201030 15:55:02.670"></status>
</kw>
<msg timestamp="20201030 15:55:02.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019268306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019890819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:02.381" endtime="20201030 15:55:02.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:02.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019268306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019890819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:02.674" endtime="20201030 15:55:02.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:02.682" endtime="20201030 15:55:02.684"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.379" endtime="20201030 15:55:02.684"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.377" endtime="20201030 15:55:02.685"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:02.688" level="INFO">${PHILIP_RES} = [{'diff': 0.0006225130000000016}, {'diff': 0.0006225410000000008}, {'diff': 0.0006225140000000011}, {'diff': 0.000622486000000002}, {'diff': 0.0006225280000000007}, {'diff': 0.0006225279999999972}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:02.685" endtime="20201030 15:55:02.689"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:02.693" level="INFO">${RESULT} = {'diff': [0.0006225130000000016, 0.0006225410000000008, 0.0006225140000000011, 0.000622486000000002, 0.0006225280000000007, 0.0006225279999999972, 0.0006224859999999985, 0.0006224170000000001, 0.00062...</msg>
<status status="PASS" starttime="20201030 15:55:02.689" endtime="20201030 15:55:02.693"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:02.697" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:02.697" endtime="20201030 15:55:02.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:02.700" level="INFO">VALUE: [0.0006225130000000016, 0.0006225410000000008, 0.0006225140000000011, 0.000622486000000002, 0.0006225280000000007, 0.0006225279999999972, 0.0006224859999999985, 0.0006224170000000001, 0.0006224310000000066, 0.0006224729999999984, 0.0006225139999999976, 0.0006225830000000029, 0.0006224719999999989, 0.0006224859999999985, 0.0006223750000000014, 0.0006226670000000004, 0.0006223480000000017, 0.0006224449999999992, 0.0006224579999999993, 0.0006225269999999977, 0.0006224719999999989, 0.0006225840000000024, 0.0006224729999999984, 0.0006222639999999974, 0.0006222780000000039, 0.0006223190000000031, 0.0006225140000000046, 0.0006224170000000001, 0.0006224999999999981, 0.0006225000000000119, 0.0006224999999999981, 0.0006224170000000001, 0.0006225840000000094, 0.0006224859999999915, 0.0006224029999999936, 0.0006225269999999977, 0.0006223749999999945, 0.0006225279999999972, 0.0006223750000000083, 0.0006224859999999915, 0.0006224310000000066, 0.0006225280000000111, 0.0006224870000000049, 0.0006222500000000047, 0.0006222910000000109, 0.0006222079999999991, 0.0006221939999999926, 0.0006223479999999948, 0.0006222359999999982, 0.0006223330000000027]</msg>
<status status="PASS" starttime="20201030 15:55:02.699" endtime="20201030 15:55:02.701"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.694" endtime="20201030 15:55:02.701"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:02.705" endtime="20201030 15:55:02.724"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.703" endtime="20201030 15:55:02.725"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.702" endtime="20201030 15:55:02.725"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.273" endtime="20201030 15:55:02.725"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.272" endtime="20201030 15:55:02.726"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:02.734" endtime="20201030 15:55:02.829"></status>
</kw>
<msg timestamp="20201030 15:55:02.830" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:02.733" endtime="20201030 15:55:02.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:02.835" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:02.833" endtime="20201030 15:55:02.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:02.838" endtime="20201030 15:55:02.841"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.730" endtime="20201030 15:55:02.842"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.728" endtime="20201030 15:55:02.843"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:02.858" endtime="20201030 15:55:03.156"></status>
</kw>
<msg timestamp="20201030 15:55:03.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022480708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02312225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:02.854" endtime="20201030 15:55:03.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:03.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022480708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02312225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:03.160" endtime="20201030 15:55:03.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:03.167" endtime="20201030 15:55:03.169"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.848" endtime="20201030 15:55:03.170"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.844" endtime="20201030 15:55:03.170"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:03.174" level="INFO">${PHILIP_RES} = [{'diff': 0.0006415420000000019}, {'diff': 0.0006415419999999984}, {'diff': 0.0006413890000000026}, {'diff': 0.0006415279999999988}, {'diff': 0.0006415549999999985}, {'diff': 0.0006414590000000005}, {...</msg>
<status status="PASS" starttime="20201030 15:55:03.171" endtime="20201030 15:55:03.174"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:03.178" level="INFO">${RESULT} = {'diff': [0.0006415420000000019, 0.0006415419999999984, 0.0006413890000000026, 0.0006415279999999988, 0.0006415549999999985, 0.0006414590000000005, 0.0006414029999999987, 0.0006414999999999962, 0.0006...</msg>
<status status="PASS" starttime="20201030 15:55:03.175" endtime="20201030 15:55:03.178"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:03.182" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:03.181" endtime="20201030 15:55:03.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:03.184" level="INFO">VALUE: [0.0006415420000000019, 0.0006415419999999984, 0.0006413890000000026, 0.0006415279999999988, 0.0006415549999999985, 0.0006414590000000005, 0.0006414029999999987, 0.0006414999999999962, 0.0006416109999999933, 0.000641541999999995, 0.0006415270000000028, 0.0006415139999999958, 0.0006415690000000016, 0.0006419029999999992, 0.0006417909999999957, 0.0006419449999999979, 0.0006418059999999948, 0.0006417499999999965, 0.0006417639999999961, 0.0006417499999999965, 0.0006418480000000004, 0.0006419029999999992, 0.0006418470000000009, 0.0006419589999999975, 0.0006418060000000017, 0.0006419589999999975, 0.0006418190000000018, 0.0006419029999999992, 0.0006419170000000057, 0.0006418339999999939, 0.0006418890000000066, 0.0006417769999999962, 0.0006415689999999946, 0.0006415699999999941, 0.0006417220000000112, 0.0006417220000000112, 0.000641764000000003, 0.0006417499999999965, 0.0006418190000000018, 0.0006417360000000039, 0.000641681000000005, 0.0006418049999999953, 0.0006418200000000013, 0.0006418470000000009, 0.0006418610000000075, 0.000641681000000005, 0.0006417780000000095, 0.000641652999999992, 0.0006417219999999974, 0.0006418049999999953]</msg>
<status status="PASS" starttime="20201030 15:55:03.183" endtime="20201030 15:55:03.185"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.179" endtime="20201030 15:55:03.186"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:03.189" endtime="20201030 15:55:03.209"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.188" endtime="20201030 15:55:03.209"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.187" endtime="20201030 15:55:03.210"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.726" endtime="20201030 15:55:03.210"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.726" endtime="20201030 15:55:03.210"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:03.219" endtime="20201030 15:55:03.314"></status>
</kw>
<msg timestamp="20201030 15:55:03.314" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:03.217" endtime="20201030 15:55:03.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:03.316" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:03.315" endtime="20201030 15:55:03.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:03.318" endtime="20201030 15:55:03.319"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.215" endtime="20201030 15:55:03.320"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.213" endtime="20201030 15:55:03.320"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:03.327" endtime="20201030 15:55:03.614"></status>
</kw>
<msg timestamp="20201030 15:55:03.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020234431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020895528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:03.325" endtime="20201030 15:55:03.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:03.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020234431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020895528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:03.618" endtime="20201030 15:55:03.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:03.625" endtime="20201030 15:55:03.627"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.323" endtime="20201030 15:55:03.628"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.321" endtime="20201030 15:55:03.628"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:03.632" level="INFO">${PHILIP_RES} = [{'diff': 0.0006610969999999994}, {'diff': 0.0006610829999999998}, {'diff': 0.0006611940000000004}, {'diff': 0.0006613190000000005}, {'diff': 0.0006610969999999994}, {'diff': 0.0006611529999999977}, {...</msg>
<status status="PASS" starttime="20201030 15:55:03.629" endtime="20201030 15:55:03.632"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:03.636" level="INFO">${RESULT} = {'diff': [0.0006610969999999994, 0.0006610829999999998, 0.0006611940000000004, 0.0006613190000000005, 0.0006610969999999994, 0.0006611529999999977, 0.0006611389999999981, 0.0006611809999999968, 0.0006...</msg>
<status status="PASS" starttime="20201030 15:55:03.633" endtime="20201030 15:55:03.636"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:03.640" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:03.639" endtime="20201030 15:55:03.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:03.642" level="INFO">VALUE: [0.0006610969999999994, 0.0006610829999999998, 0.0006611940000000004, 0.0006613190000000005, 0.0006610969999999994, 0.0006611529999999977, 0.0006611389999999981, 0.0006611809999999968, 0.0006612500000000021, 0.000661221999999996, 0.0006610969999999994, 0.0006612080000000034, 0.0006611250000000055, 0.0006613330000000001, 0.0006612360000000025, 0.0006611799999999973, 0.0006610980000000058, 0.0006611800000000043, 0.0006611389999999981, 0.0006610550000000007, 0.0006611389999999981, 0.0006612629999999953, 0.0006611529999999977, 0.0006610420000000006, 0.0006611809999999968, 0.0006611950000000033, 0.0006612080000000103, 0.0006610969999999994, 0.0006613060000000004, 0.0006611799999999973, 0.0006609439999999966, 0.0006612500000000021, 0.0006611950000000033, 0.0006611249999999985, 0.0006610420000000006, 0.0006611519999999982, 0.0006610140000000014, 0.0006611529999999977, 0.0006611249999999985, 0.0006610979999999989, 0.0006613339999999995, 0.0006610690000000002, 0.0006612639999999947, 0.0006611670000000042, 0.0006612359999999956, 0.0006613750000000057, 0.0006615830000000072, 0.0006614729999999958, 0.0006615420000000011, 0.0006615550000000081]</msg>
<status status="PASS" starttime="20201030 15:55:03.641" endtime="20201030 15:55:03.644"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.637" endtime="20201030 15:55:03.645"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:03.648" endtime="20201030 15:55:03.668"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.647" endtime="20201030 15:55:03.668"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.646" endtime="20201030 15:55:03.669"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.211" endtime="20201030 15:55:03.669"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.211" endtime="20201030 15:55:03.669"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:03.678" endtime="20201030 15:55:03.772"></status>
</kw>
<msg timestamp="20201030 15:55:03.773" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:03.676" endtime="20201030 15:55:03.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:03.775" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:03.774" endtime="20201030 15:55:03.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:03.776" endtime="20201030 15:55:03.778"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.673" endtime="20201030 15:55:03.778"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.672" endtime="20201030 15:55:03.779"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:03.785" endtime="20201030 15:55:04.072"></status>
</kw>
<msg timestamp="20201030 15:55:04.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018455375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019136222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:03.783" endtime="20201030 15:55:04.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:04.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018455375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019136222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:04.075" endtime="20201030 15:55:04.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:04.083" endtime="20201030 15:55:04.085"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.781" endtime="20201030 15:55:04.085"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.779" endtime="20201030 15:55:04.086"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:04.089" level="INFO">${PHILIP_RES} = [{'diff': 0.0006808470000000018}, {'diff': 0.0006809299999999997}, {'diff': 0.0006807499999999973}, {'diff': 0.0006809450000000022}, {'diff': 0.0006807360000000012}, {'diff': 0.0006808060000000025}, {...</msg>
<status status="PASS" starttime="20201030 15:55:04.086" endtime="20201030 15:55:04.090"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:04.094" level="INFO">${RESULT} = {'diff': [0.0006808470000000018, 0.0006809299999999997, 0.0006807499999999973, 0.0006809450000000022, 0.0006807360000000012, 0.0006808060000000025, 0.0006809439999999993, 0.0006808060000000025, 0.0006...</msg>
<status status="PASS" starttime="20201030 15:55:04.090" endtime="20201030 15:55:04.094"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:04.099" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:04.098" endtime="20201030 15:55:04.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:04.101" level="INFO">VALUE: [0.0006808470000000018, 0.0006809299999999997, 0.0006807499999999973, 0.0006809450000000022, 0.0006807360000000012, 0.0006808060000000025, 0.0006809439999999993, 0.0006808060000000025, 0.0006809159999999967, 0.0006807919999999995, 0.0006807919999999995, 0.0006808619999999974, 0.0006808750000000044, 0.0006808619999999974, 0.0006809580000000023, 0.0006809310000000027, 0.0006808609999999979, 0.0006810140000000006, 0.0006808749999999975, 0.0006807500000000008, 0.0006808049999999996, 0.0006807640000000004, 0.0006809170000000031, 0.0006809579999999954, 0.000681000000000001, 0.0006808749999999975, 0.0006809440000000028, 0.0006809589999999949, 0.0006807360000000012, 0.0006809589999999949, 0.0006806810000000024, 0.0006809160000000036, 0.0006806810000000024, 0.0006808610000000048, 0.0006808329999999918, 0.0006808199999999986, 0.0006808749999999975, 0.0006809019999999971, 0.0006808469999999983, 0.0006808340000000052, 0.0006809450000000022, 0.0006807080000000021, 0.000680889000000004, 0.0006808189999999992, 0.0006809019999999971, 0.0006809030000000105, 0.0006808749999999975, 0.0006808610000000048, 0.0006809859999999945, 0.0006807219999999947]</msg>
<status status="PASS" starttime="20201030 15:55:04.100" endtime="20201030 15:55:04.102"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.095" endtime="20201030 15:55:04.102"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:04.106" endtime="20201030 15:55:04.125"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.104" endtime="20201030 15:55:04.126"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.103" endtime="20201030 15:55:04.126"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.670" endtime="20201030 15:55:04.127"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.669" endtime="20201030 15:55:04.127"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:04.135" endtime="20201030 15:55:04.229"></status>
</kw>
<msg timestamp="20201030 15:55:04.229" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:04.134" endtime="20201030 15:55:04.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:04.232" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:04.230" endtime="20201030 15:55:04.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:04.233" endtime="20201030 15:55:04.234"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.131" endtime="20201030 15:55:04.235"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.129" endtime="20201030 15:55:04.235"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:04.242" endtime="20201030 15:55:04.557"></status>
</kw>
<msg timestamp="20201030 15:55:04.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018034486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018735806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:04.240" endtime="20201030 15:55:04.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:04.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018034486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018735806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:04.561" endtime="20201030 15:55:04.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:04.569" endtime="20201030 15:55:04.571"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.237" endtime="20201030 15:55:04.571"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.236" endtime="20201030 15:55:04.572"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:04.576" level="INFO">${PHILIP_RES} = [{'diff': 0.0007013200000000018}, {'diff': 0.0007011800000000026}, {'diff': 0.000701264}, {'diff': 0.0007013199999999983}, {'diff': 0.0007011669999999991}, {'diff': 0.0007012500000000005}, {'diff': 0....</msg>
<status status="PASS" starttime="20201030 15:55:04.573" endtime="20201030 15:55:04.576"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:04.580" level="INFO">${RESULT} = {'diff': [0.0007013200000000018, 0.0007011800000000026, 0.000701264, 0.0007013199999999983, 0.0007011669999999991, 0.0007012500000000005, 0.000701249999999997, 0.0007012220000000013, 0.000701416999999...</msg>
<status status="PASS" starttime="20201030 15:55:04.577" endtime="20201030 15:55:04.580"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:04.584" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:04.583" endtime="20201030 15:55:04.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:04.586" level="INFO">VALUE: [0.0007013200000000018, 0.0007011800000000026, 0.000701264, 0.0007013199999999983, 0.0007011669999999991, 0.0007012500000000005, 0.000701249999999997, 0.0007012220000000013, 0.0007014169999999958, 0.0007013189999999989, 0.0007013329999999984, 0.000701458000000002, 0.0007013889999999967, 0.0007012220000000013, 0.0007011940000000022, 0.0007012919999999992, 0.000701070000000005, 0.0007013199999999983, 0.0007011670000000025, 0.0007012220000000013, 0.0007012779999999996, 0.0007012360000000009, 0.0007011249999999969, 0.000701152999999996, 0.0007011810000000021, 0.0007013890000000036, 0.0007013470000000049, 0.000701055000000006, 0.0007012500000000005, 0.0007011809999999952, 0.0007012500000000005, 0.0007012500000000005, 0.0007011110000000043, 0.0007013060000000126, 0.0007010689999999986, 0.0007011950000000017, 0.0007011389999999895, 0.0007011940000000022, 0.0007012219999999875, 0.0007011940000000022, 0.0007010970000000116, 0.0007011670000000025, 0.0007012920000000061, 0.000701264000000007, 0.0007011809999999952, 0.0007012079999999948, 0.0007012779999999996, 0.0007011809999999952, 0.0007011950000000017, 0.0007012500000000005]</msg>
<status status="PASS" starttime="20201030 15:55:04.585" endtime="20201030 15:55:04.587"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.580" endtime="20201030 15:55:04.588"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:04.591" endtime="20201030 15:55:04.611"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.590" endtime="20201030 15:55:04.611"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.589" endtime="20201030 15:55:04.612"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.128" endtime="20201030 15:55:04.612"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.127" endtime="20201030 15:55:04.612"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:04.621" endtime="20201030 15:55:04.721"></status>
</kw>
<msg timestamp="20201030 15:55:04.722" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:04.619" endtime="20201030 15:55:04.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:04.724" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:04.723" endtime="20201030 15:55:04.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:04.725" endtime="20201030 15:55:04.727"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.616" endtime="20201030 15:55:04.727"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.615" endtime="20201030 15:55:04.728"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:04.734" endtime="20201030 15:55:05.022"></status>
</kw>
<msg timestamp="20201030 15:55:05.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019889389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020610583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:04.733" endtime="20201030 15:55:05.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:05.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019889389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020610583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:05.026" endtime="20201030 15:55:05.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:05.034" endtime="20201030 15:55:05.035"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.730" endtime="20201030 15:55:05.036"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.728" endtime="20201030 15:55:05.036"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:05.040" level="INFO">${PHILIP_RES} = [{'diff': 0.0007211939999999979}, {'diff': 0.0007212919999999984}, {'diff': 0.0007210970000000004}, {'diff': 0.0007213340000000006}, {'diff': 0.000721223}, {'diff': 0.0007214309999999981}, {'diff': 0....</msg>
<status status="PASS" starttime="20201030 15:55:05.037" endtime="20201030 15:55:05.040"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:05.044" level="INFO">${RESULT} = {'diff': [0.0007211939999999979, 0.0007212919999999984, 0.0007210970000000004, 0.0007213340000000006, 0.000721223, 0.0007214309999999981, 0.0007214450000000011, 0.0007212499999999997, 0.00072127799999...</msg>
<status status="PASS" starttime="20201030 15:55:05.041" endtime="20201030 15:55:05.044"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:05.048" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:05.047" endtime="20201030 15:55:05.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:05.051" level="INFO">VALUE: [0.0007211939999999979, 0.0007212919999999984, 0.0007210970000000004, 0.0007213340000000006, 0.000721223, 0.0007214309999999981, 0.0007214450000000011, 0.0007212499999999997, 0.0007212779999999988, 0.0007211810000000013, 0.0007212220000000005, 0.0007213199999999975, 0.0007213609999999968, 0.0007212639999999992, 0.0007212639999999992, 0.000721305999999998, 0.0007212220000000005, 0.0007211810000000013, 0.0007213610000000037, 0.0007211390000000026, 0.0007214580000000012, 0.0007213890000000028, 0.0007214030000000024, 0.0007215139999999995, 0.0007212220000000005, 0.0007212230000000069, 0.0007213330000000046, 0.0007214299999999951, 0.0007213749999999963, 0.0007212919999999984, 0.0007211109999999965, 0.0007213199999999975, 0.0007213749999999963, 0.0007213610000000037, 0.0007216669999999953, 0.0007216249999999896, 0.0007216250000000035, 0.0007211950000000078, 0.0007215700000000047, 0.0007216250000000035, 0.0007215269999999996, 0.0007216800000000023, 0.0007216250000000035, 0.0007216949999999944, 0.0007213469999999972, 0.00072163900000001, 0.0007216659999999958, 0.0007215420000000056, 0.0007217500000000071, 0.0007215970000000044]</msg>
<status status="PASS" starttime="20201030 15:55:05.049" endtime="20201030 15:55:05.053"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.045" endtime="20201030 15:55:05.054"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:05.058" endtime="20201030 15:55:05.077"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.056" endtime="20201030 15:55:05.078"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.055" endtime="20201030 15:55:05.078"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.613" endtime="20201030 15:55:05.078"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.613" endtime="20201030 15:55:05.078"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.549" endtime="20201030 15:55:05.078"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:54:42.249" endtime="20201030 15:55:05.079" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 15:54:21.626" endtime="20201030 15:55:05.088"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:55:05.158" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:55:05.166" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:55:06.334" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:55:05.156" endtime="20201030 15:55:06.335"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:55:06.338" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 15:55:06.336" endtime="20201030 15:55:06.338"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.155" endtime="20201030 15:55:06.339"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:06.342" endtime="20201030 15:55:06.527"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.340" endtime="20201030 15:55:06.528"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:06.540" endtime="20201030 15:55:06.556"></status>
</kw>
<msg timestamp="20201030 15:55:06.556" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['T! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:06.539" endtime="20201030 15:55:06.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:06.559" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['T! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:06.558" endtime="20201030 15:55:06.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:55:06.562" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:55:06.560" endtime="20201030 15:55:06.563"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:06.536" endtime="20201030 15:55:06.563"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:06.534" endtime="20201030 15:55:06.564"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.533" endtime="20201030 15:55:06.564"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:55:06.568" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:55:06.567" endtime="20201030 15:55:06.569"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.565" endtime="20201030 15:55:06.569"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.532" endtime="20201030 15:55:06.570"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.532" endtime="20201030 15:55:06.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:06.571" endtime="20201030 15:55:06.572"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.530" endtime="20201030 15:55:06.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:06.573" endtime="20201030 15:55:06.575"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.529" endtime="20201030 15:55:06.576"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.154" endtime="20201030 15:55:06.576"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:06.599" endtime="20201030 15:55:06.621"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.596" endtime="20201030 15:55:06.623"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:06.650" endtime="20201030 15:55:06.675"></status>
</kw>
<msg timestamp="20201030 15:55:06.676" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:06.646" endtime="20201030 15:55:06.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:06.682" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:06.679" endtime="20201030 15:55:06.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:55:06.687" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:55:06.684" endtime="20201030 15:55:06.687"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:06.641" endtime="20201030 15:55:06.688"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:06.636" endtime="20201030 15:55:06.689"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.633" endtime="20201030 15:55:06.689"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:55:06.693" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:55:06.692" endtime="20201030 15:55:06.693"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.690" endtime="20201030 15:55:06.693"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.632" endtime="20201030 15:55:06.693"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.630" endtime="20201030 15:55:06.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:06.694" endtime="20201030 15:55:06.696"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.627" endtime="20201030 15:55:06.696"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.624" endtime="20201030 15:55:06.697"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.594" endtime="20201030 15:55:06.697"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:06.708" endtime="20201030 15:55:06.747"></status>
</kw>
<msg timestamp="20201030 15:55:06.748" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:06.706" endtime="20201030 15:55:06.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:06.750" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:06.749" endtime="20201030 15:55:06.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:06.751" endtime="20201030 15:55:06.753"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.702" endtime="20201030 15:55:06.753"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.700" endtime="20201030 15:55:06.754"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:06.761" endtime="20201030 15:55:07.060"></status>
</kw>
<msg timestamp="20201030 15:55:07.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.102947458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.103277431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:06.758" endtime="20201030 15:55:07.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:07.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.102947458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.103277431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:07.064" endtime="20201030 15:55:07.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:07.072" endtime="20201030 15:55:07.074"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.756" endtime="20201030 15:55:07.074"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.754" endtime="20201030 15:55:07.075"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:07.079" level="INFO">${RESULT} = [{'diff': 0.0003299729999999973}, {'diff': 0.0003392080000000075}, {'diff': 0.00034148600000000195}, {'diff': 0.000341403000000004}, {'diff': 0.0003421949999999896}, {'diff': 0.0003427780000000019}, {...</msg>
<status status="PASS" starttime="20201030 15:55:07.076" endtime="20201030 15:55:07.079"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:07.083" level="INFO">${ACCURACY} = {'diff': [0.0003299729999999973, 0.0003392080000000075, 0.00034148600000000195, 0.000341403000000004, 0.0003421949999999896, 0.0003427780000000019, 0.0003382640000000048, 0.0003394580000000008, 0.0003...</msg>
<status status="PASS" starttime="20201030 15:55:07.080" endtime="20201030 15:55:07.083"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:07.088" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201030 15:55:07.087" endtime="20201030 15:55:07.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:07.091" level="INFO">VALUE: [0.0003299729999999973, 0.0003392080000000075, 0.00034148600000000195, 0.000341403000000004, 0.0003421949999999896, 0.0003427780000000019, 0.0003382640000000048, 0.0003394580000000008, 0.00034409700000000154, 0.00033773599999999127, 0.00034018099999999496, 0.0003398480000000037, 0.0003382639999999909, 0.00034286199999999933, 0.00034180600000000005, 0.0003380280000000041, 0.0003388890000000089, 0.000343889, 0.00034255500000000827, 0.00033836099999999536, 0.0003411939999999891, 0.0003400830000000049, 0.00034418099999999896, 0.00033973600000000714, 0.0003403049999999991, 0.0003434999999999966, 0.0003441799999999995, 0.00034136199999999783, 0.0003411249999999977, 0.00033768099999999246, 0.0003394300000000017, 0.000343403000000006, 0.000338403000000001, 0.000344165999999993, 0.00033854199999999723, 0.0003393190000000046, 0.0003381249999999947, 0.0003423050000000011, 0.0003385139999999981, 0.000343098, 0.00033923599999999277, 0.0003417920000000074, 0.00034234700000000673, 0.0003399730000000073, 0.0003379720000000058, 0.0003386390000000017, 0.00034030599999999855, 0.00034166700000000383, 0.0003414999999999946, 0.00034090200000000404]</msg>
<status status="PASS" starttime="20201030 15:55:07.089" endtime="20201030 15:55:07.091"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.084" endtime="20201030 15:55:07.092"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:07.095" endtime="20201030 15:55:07.115"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.094" endtime="20201030 15:55:07.116"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.093" endtime="20201030 15:55:07.116"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.699" endtime="20201030 15:55:07.116"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.698" endtime="20201030 15:55:07.116"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:07.131" endtime="20201030 15:55:07.168"></status>
</kw>
<msg timestamp="20201030 15:55:07.169" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:07.130" endtime="20201030 15:55:07.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:07.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:07.170" endtime="20201030 15:55:07.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:07.173" endtime="20201030 15:55:07.174"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.124" endtime="20201030 15:55:07.175"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.122" endtime="20201030 15:55:07.175"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:07.182" endtime="20201030 15:55:07.500"></status>
</kw>
<msg timestamp="20201030 15:55:07.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029652778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030011764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:07.181" endtime="20201030 15:55:07.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:07.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029652778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030011764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:07.504" endtime="20201030 15:55:07.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:07.512" endtime="20201030 15:55:07.514"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.178" endtime="20201030 15:55:07.515"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.176" endtime="20201030 15:55:07.515"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:07.519" level="INFO">${RESULT} = [{'diff': 0.00035898599999999864}, {'diff': 0.00033965300000000226}, {'diff': 0.00033872199999999963}, {'diff': 0.0003442500000000008}, {'diff': 0.0003393480000000032}, {'diff': 0.00034315199999999935...</msg>
<status status="PASS" starttime="20201030 15:55:07.516" endtime="20201030 15:55:07.519"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:07.524" level="INFO">${ACCURACY} = {'diff': [0.00035898599999999864, 0.00033965300000000226, 0.00033872199999999963, 0.0003442500000000008, 0.0003393480000000032, 0.00034315199999999935, 0.0003442639999999969, 0.0003416390000000047, 0....</msg>
<status status="PASS" starttime="20201030 15:55:07.520" endtime="20201030 15:55:07.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:07.528" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201030 15:55:07.527" endtime="20201030 15:55:07.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:07.531" level="INFO">VALUE: [0.00035898599999999864, 0.00033965300000000226, 0.00033872199999999963, 0.0003442500000000008, 0.0003393480000000032, 0.00034315199999999935, 0.0003442639999999969, 0.0003416390000000047, 0.00034397199999999795, 0.0003423469999999998, 0.0003380139999999976, 0.00034326400000000284, 0.00034063899999999675, 0.0003395139999999991, 0.00033856900000000384, 0.00033906900000000434, 0.0003431529999999988, 0.00033954199999999823, 0.0003420690000000004, 0.0003429859999999965, 0.00034076300000000087, 0.00033922200000000013, 0.000343777999999996, 0.00033876399999999834, 0.0003441799999999995, 0.00033788900000000094, 0.0003394450000000007, 0.0003442360000000047, 0.000343791000000003, 0.00033805600000000324, 0.00034390299999999957, 0.0003425140000000021, 0.0003389580000000003, 0.0003406659999999964, 0.00034441699999999964, 0.00033920800000000056, 0.0003435270000000032, 0.00033987499999999643, 0.0003379589999999988, 0.0003384579999999998, 0.00034008299999999797, 0.00034187499999999843, 0.00034390299999999957, 0.00033990200000000304, 0.0003402360000000007, 0.0003394720000000004, 0.0003438470000000013, 0.00033837499999999493, 0.00034369499999999803, 0.00033848699999999843]</msg>
<status status="PASS" starttime="20201030 15:55:07.529" endtime="20201030 15:55:07.531"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.525" endtime="20201030 15:55:07.532"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:07.535" endtime="20201030 15:55:07.555"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.534" endtime="20201030 15:55:07.555"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.533" endtime="20201030 15:55:07.556"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.119" endtime="20201030 15:55:07.556"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.117" endtime="20201030 15:55:07.556"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:07.565" endtime="20201030 15:55:07.600"></status>
</kw>
<msg timestamp="20201030 15:55:07.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:07.563" endtime="20201030 15:55:07.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:07.603" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:07.602" endtime="20201030 15:55:07.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:07.604" endtime="20201030 15:55:07.606"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.560" endtime="20201030 15:55:07.607"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.558" endtime="20201030 15:55:07.607"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:07.613" endtime="20201030 15:55:07.901"></status>
</kw>
<msg timestamp="20201030 15:55:07.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021650167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021984236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:07.612" endtime="20201030 15:55:07.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:07.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021650167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021984236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:07.905" endtime="20201030 15:55:07.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:07.913" endtime="20201030 15:55:07.915"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.609" endtime="20201030 15:55:07.915"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.608" endtime="20201030 15:55:07.916"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:07.919" level="INFO">${RESULT} = [{'diff': 0.00033406899999999934}, {'diff': 0.00033966699999999836}, {'diff': 0.00034144499999999925}, {'diff': 0.00034107000000000234}, {'diff': 0.00034030599999999855}, {'diff': 0.000339055999999997...</msg>
<status status="PASS" starttime="20201030 15:55:07.916" endtime="20201030 15:55:07.920"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:07.923" level="INFO">${ACCURACY} = {'diff': [0.00033406899999999934, 0.00033966699999999836, 0.00034144499999999925, 0.00034107000000000234, 0.00034030599999999855, 0.0003390559999999973, 0.0003424170000000011, 0.0003391810000000009, 0...</msg>
<status status="PASS" starttime="20201030 15:55:07.920" endtime="20201030 15:55:07.924"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:07.928" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201030 15:55:07.927" endtime="20201030 15:55:07.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:07.930" level="INFO">VALUE: [0.00033406899999999934, 0.00033966699999999836, 0.00034144499999999925, 0.00034107000000000234, 0.00034030599999999855, 0.0003390559999999973, 0.0003424170000000011, 0.0003391810000000009, 0.00034423600000000124, 0.00033772199999999863, 0.0003430700000000009, 0.0003414589999999988, 0.0003384860000000024, 0.0003412780000000004, 0.0003427780000000019, 0.00033908300000000044, 0.0003428750000000029, 0.0003398749999999999, 0.0003436250000000002, 0.00033972200000000063, 0.0003394580000000008, 0.0003400550000000023, 0.00034091600000000014, 0.0003392499999999993, 0.0003386519999999983, 0.00033812499999999815, 0.0003407639999999969, 0.0003382499999999983, 0.0003418329999999997, 0.0003403049999999991, 0.0003419309999999967, 0.00033840200000000153, 0.0003407230000000011, 0.0003439170000000061, 0.00034416700000000633, 0.0003423889999999985, 0.0003403889999999965, 0.00033793099999999965, 0.0003393190000000046, 0.000341292, 0.0003403469999999978, 0.00034019500000000147, 0.0003412500000000013, 0.0003383469999999958, 0.00034102800000000016, 0.00034287499999999943, 0.0003424309999999972, 0.00034369499999999803, 0.00033801400000000453, 0.0003414170000000036]</msg>
<status status="PASS" starttime="20201030 15:55:07.929" endtime="20201030 15:55:07.931"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.924" endtime="20201030 15:55:07.931"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:07.935" endtime="20201030 15:55:07.954"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.933" endtime="20201030 15:55:07.955"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.932" endtime="20201030 15:55:07.955"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.557" endtime="20201030 15:55:07.955"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.556" endtime="20201030 15:55:07.956"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:07.965" endtime="20201030 15:55:08.002"></status>
</kw>
<msg timestamp="20201030 15:55:08.003" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:07.963" endtime="20201030 15:55:08.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:08.005" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:08.004" endtime="20201030 15:55:08.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:08.006" endtime="20201030 15:55:08.008"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.960" endtime="20201030 15:55:08.008"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.958" endtime="20201030 15:55:08.009"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:08.015" endtime="20201030 15:55:08.301"></status>
</kw>
<msg timestamp="20201030 15:55:08.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023989653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024348111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:08.014" endtime="20201030 15:55:08.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:08.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023989653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024348111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:08.305" endtime="20201030 15:55:08.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:08.316" endtime="20201030 15:55:08.319"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.011" endtime="20201030 15:55:08.319"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.009" endtime="20201030 15:55:08.320"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:08.325" level="INFO">${RESULT} = [{'diff': 0.000358457999999999}, {'diff': 0.00034095799999999885}, {'diff': 0.000342888999999999}, {'diff': 0.00033806999999999934}, {'diff': 0.00034240299999999807}, {'diff': 0.00033907000000000034},...</msg>
<status status="PASS" starttime="20201030 15:55:08.320" endtime="20201030 15:55:08.326"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:08.333" level="INFO">${ACCURACY} = {'diff': [0.000358457999999999, 0.00034095799999999885, 0.000342888999999999, 0.00033806999999999934, 0.00034240299999999807, 0.00033907000000000034, 0.0003382780000000009, 0.00034107000000000234, 0.0...</msg>
<status status="PASS" starttime="20201030 15:55:08.328" endtime="20201030 15:55:08.333"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:08.339" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201030 15:55:08.338" endtime="20201030 15:55:08.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:08.342" level="INFO">VALUE: [0.000358457999999999, 0.00034095799999999885, 0.000342888999999999, 0.00033806999999999934, 0.00034240299999999807, 0.00033907000000000034, 0.0003382780000000009, 0.00034107000000000234, 0.00033782000000000256, 0.0003428050000000016, 0.00034088900000000047, 0.00034366700000000236, 0.0003377499999999978, 0.00034036100000000083, 0.00034342999999999874, 0.00033990199999999957, 0.00034333299999999775, 0.00033934799999999973, 0.00033787500000000137, 0.0003401380000000037, 0.00034322299999999667, 0.0003382369999999982, 0.00033995899999999385, 0.00033837499999999493, 0.00033922200000000013, 0.00034126400000000084, 0.0003436250000000002, 0.0003441529999999998, 0.0003416529999999973, 0.00034213899999999825, 0.0003423339999999997, 0.0003380830000000029, 0.00034004199999999873, 0.0003441250000000007, 0.0003433330000000012, 0.00034308300000000097, 0.00033865300000000126, 0.0003382920000000039, 0.00034108299999999897, 0.00034342999999999874, 0.00033977699999999944, 0.0003404720000000014, 0.000338999999999999, 0.00034319499999999753, 0.00034136099999999836, 0.00033888900000000194, 0.0003433470000000008, 0.00033908299999999697, 0.0003404720000000014, 0.0003440690000000024]</msg>
<status status="PASS" starttime="20201030 15:55:08.340" endtime="20201030 15:55:08.344"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.334" endtime="20201030 15:55:08.345"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:08.349" endtime="20201030 15:55:08.369"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.348" endtime="20201030 15:55:08.369"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.346" endtime="20201030 15:55:08.370"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.957" endtime="20201030 15:55:08.370"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.956" endtime="20201030 15:55:08.370"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:08.379" endtime="20201030 15:55:08.413"></status>
</kw>
<msg timestamp="20201030 15:55:08.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:08.378" endtime="20201030 15:55:08.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:08.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:08.415" endtime="20201030 15:55:08.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:08.417" endtime="20201030 15:55:08.419"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.375" endtime="20201030 15:55:08.420"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.373" endtime="20201030 15:55:08.420"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:08.426" endtime="20201030 15:55:08.713"></status>
</kw>
<msg timestamp="20201030 15:55:08.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021458458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021807208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:08.425" endtime="20201030 15:55:08.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:08.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021458458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021807208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:08.717" endtime="20201030 15:55:08.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:08.725" endtime="20201030 15:55:08.726"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.422" endtime="20201030 15:55:08.727"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.421" endtime="20201030 15:55:08.727"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:08.731" level="INFO">${RESULT} = [{'diff': 0.00034875000000000184}, {'diff': 0.00034254199999999776}, {'diff': 0.0003414719999999989}, {'diff': 0.0003398329999999977}, {'diff': 0.0003411660000000004}, {'diff': 0.00033820800000000303}...</msg>
<status status="PASS" starttime="20201030 15:55:08.728" endtime="20201030 15:55:08.732"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:08.736" level="INFO">${ACCURACY} = {'diff': [0.00034875000000000184, 0.00034254199999999776, 0.0003414719999999989, 0.0003398329999999977, 0.0003411660000000004, 0.00033820800000000303, 0.00034020800000000156, 0.00034323600000000024, 0...</msg>
<status status="PASS" starttime="20201030 15:55:08.732" endtime="20201030 15:55:08.737"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:08.741" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201030 15:55:08.740" endtime="20201030 15:55:08.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:08.743" level="INFO">VALUE: [0.00034875000000000184, 0.00034254199999999776, 0.0003414719999999989, 0.0003398329999999977, 0.0003411660000000004, 0.00033820800000000303, 0.00034020800000000156, 0.00034323600000000024, 0.0003440140000000001, 0.0003391109999999996, 0.0003437630000000004, 0.00033907000000000034, 0.000339790999999999, 0.0003392359999999997, 0.0003418469999999993, 0.0003419310000000002, 0.00034230600000000055, 0.0003403750000000004, 0.00034076400000000034, 0.0003387640000000018, 0.0003431659999999989, 0.00033983400000000066, 0.00034286099999999986, 0.0003420140000000016, 0.0003425000000000025, 0.0003437639999999999, 0.0003391109999999996, 0.00034098600000000145, 0.0003412780000000004, 0.00033898599999999945, 0.0003428470000000003, 0.00033866700000000083, 0.00034086099999999786, 0.0003426249999999992, 0.00034019499999999453, 0.0003388190000000041, 0.000337806000000003, 0.0003422500000000023, 0.0003402360000000007, 0.000343889, 0.00034337499999999993, 0.0003429580000000043, 0.0003414160000000041, 0.0003386390000000017, 0.0003421249999999987, 0.000338612000000002, 0.0003399720000000009, 0.00034370800000000507, 0.0003407779999999999, 0.0003404580000000018]</msg>
<status status="PASS" starttime="20201030 15:55:08.742" endtime="20201030 15:55:08.744"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.737" endtime="20201030 15:55:08.744"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:08.748" endtime="20201030 15:55:08.767"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.746" endtime="20201030 15:55:08.768"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.745" endtime="20201030 15:55:08.768"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.371" endtime="20201030 15:55:08.769"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.370" endtime="20201030 15:55:08.769"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:08.777" endtime="20201030 15:55:08.816"></status>
</kw>
<msg timestamp="20201030 15:55:08.817" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:08.776" endtime="20201030 15:55:08.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:08.819" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:08.818" endtime="20201030 15:55:08.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:08.820" endtime="20201030 15:55:08.822"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.773" endtime="20201030 15:55:08.822"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.771" endtime="20201030 15:55:08.823"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:08.829" endtime="20201030 15:55:09.118"></status>
</kw>
<msg timestamp="20201030 15:55:09.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025158292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025509958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:08.828" endtime="20201030 15:55:09.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:09.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025158292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025509958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:09.122" endtime="20201030 15:55:09.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:09.130" endtime="20201030 15:55:09.132"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.825" endtime="20201030 15:55:09.132"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.823" endtime="20201030 15:55:09.132"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:09.136" level="INFO">${RESULT} = [{'diff': 0.0003516660000000005}, {'diff': 0.0003436110000000006}, {'diff': 0.0003425690000000009}, {'diff': 0.0003406800000000029}, {'diff': 0.00034373600000000074}, {'diff': 0.00034036100000000083},...</msg>
<status status="PASS" starttime="20201030 15:55:09.133" endtime="20201030 15:55:09.136"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:09.140" level="INFO">${ACCURACY} = {'diff': [0.0003516660000000005, 0.0003436110000000006, 0.0003425690000000009, 0.0003406800000000029, 0.00034373600000000074, 0.00034036100000000083, 0.00034341600000000264, 0.0003442219999999982, 0.0...</msg>
<status status="PASS" starttime="20201030 15:55:09.137" endtime="20201030 15:55:09.140"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:09.145" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201030 15:55:09.144" endtime="20201030 15:55:09.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:09.147" level="INFO">VALUE: [0.0003516660000000005, 0.0003436110000000006, 0.0003425690000000009, 0.0003406800000000029, 0.00034373600000000074, 0.00034036100000000083, 0.00034341600000000264, 0.0003442219999999982, 0.0003434440000000018, 0.00034123599999999824, 0.0003402079999999981, 0.0003441110000000011, 0.00034138900000000097, 0.0003399169999999986, 0.0003396810000000014, 0.0003405559999999988, 0.0003416810000000034, 0.00033922200000000013, 0.0003385830000000034, 0.0003425560000000008, 0.0003426109999999996, 0.00033883300000000366, 0.00033837500000000187, 0.0003385139999999981, 0.00033801400000000453, 0.0003416249999999982, 0.0003435980000000005, 0.000341292, 0.0003396109999999966, 0.0003443059999999956, 0.00033956900000000484, 0.0003415409999999938, 0.0003395139999999991, 0.00033822199999999913, 0.0003428050000000016, 0.0003429859999999965, 0.0003418339999999992, 0.0003383469999999958, 0.00034076400000000034, 0.00034252800000000166, 0.00033859800000000245, 0.0003442780000000034, 0.0003423050000000011, 0.00034118099999999596, 0.0003441669999999994, 0.00034366700000000583, 0.0003409439999999958, 0.0003403610000000043, 0.0003437769999999965, 0.0003428470000000003]</msg>
<status status="PASS" starttime="20201030 15:55:09.146" endtime="20201030 15:55:09.147"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.141" endtime="20201030 15:55:09.148"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:09.152" endtime="20201030 15:55:09.172"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.151" endtime="20201030 15:55:09.172"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.149" endtime="20201030 15:55:09.172"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.770" endtime="20201030 15:55:09.173"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.769" endtime="20201030 15:55:09.173"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:09.182" endtime="20201030 15:55:09.218"></status>
</kw>
<msg timestamp="20201030 15:55:09.219" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:09.180" endtime="20201030 15:55:09.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:09.221" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:09.220" endtime="20201030 15:55:09.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:09.222" endtime="20201030 15:55:09.224"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.177" endtime="20201030 15:55:09.224"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.175" endtime="20201030 15:55:09.225"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:09.231" endtime="20201030 15:55:09.518"></status>
</kw>
<msg timestamp="20201030 15:55:09.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022544653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022886958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:09.230" endtime="20201030 15:55:09.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:09.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022544653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022886958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:09.522" endtime="20201030 15:55:09.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:09.530" endtime="20201030 15:55:09.532"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.227" endtime="20201030 15:55:09.533"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.225" endtime="20201030 15:55:09.533"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:09.539" level="INFO">${RESULT} = [{'diff': 0.0003423049999999976}, {'diff': 0.0003377359999999982}, {'diff': 0.00034173599999999874}, {'diff': 0.00034236099999999936}, {'diff': 0.0003397499999999998}, {'diff': 0.0003442079999999986},...</msg>
<status status="PASS" starttime="20201030 15:55:09.534" endtime="20201030 15:55:09.540"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:09.545" level="INFO">${ACCURACY} = {'diff': [0.0003423049999999976, 0.0003377359999999982, 0.00034173599999999874, 0.00034236099999999936, 0.0003397499999999998, 0.0003442079999999986, 0.0003395559999999978, 0.0003407779999999999, 0.00...</msg>
<status status="PASS" starttime="20201030 15:55:09.541" endtime="20201030 15:55:09.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:09.551" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201030 15:55:09.549" endtime="20201030 15:55:09.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:09.555" level="INFO">VALUE: [0.0003423049999999976, 0.0003377359999999982, 0.00034173599999999874, 0.00034236099999999936, 0.0003397499999999998, 0.0003442079999999986, 0.0003395559999999978, 0.0003407779999999999, 0.0003398199999999976, 0.00034054199999999923, 0.00034237499999999893, 0.00034408300000000197, 0.0003429449999999973, 0.00034191600000000114, 0.0003411530000000003, 0.0003406110000000011, 0.00034372200000000117, 0.0003395559999999978, 0.0003392499999999993, 0.0003428470000000003, 0.0003380000000000015, 0.00033854100000000123, 0.00034038899999999997, 0.0003388469999999963, 0.00034066700000000283, 0.00034018099999999496, 0.00033832000000000306, 0.0003412230000000016, 0.0003407779999999999, 0.0003434309999999982, 0.0003414019999999976, 0.0003410559999999993, 0.0003393329999999972, 0.0003441799999999995, 0.00034436100000000136, 0.00034069500000000197, 0.000341888999999998, 0.00034187500000000537, 0.000341679999999997, 0.0003396249999999962, 0.0003411810000000029, 0.0003398610000000038, 0.0003412780000000004, 0.0003411800000000034, 0.0003406659999999964, 0.00034434699999999485, 0.00034098700000000093, 0.000338194, 0.00034087500000000437, 0.0003393049999999981]</msg>
<status status="PASS" starttime="20201030 15:55:09.553" endtime="20201030 15:55:09.558"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.546" endtime="20201030 15:55:09.559"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:09.565" endtime="20201030 15:55:09.585"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.563" endtime="20201030 15:55:09.586"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.561" endtime="20201030 15:55:09.586"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.174" endtime="20201030 15:55:09.586"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.173" endtime="20201030 15:55:09.586"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:09.595" endtime="20201030 15:55:09.630"></status>
</kw>
<msg timestamp="20201030 15:55:09.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:09.594" endtime="20201030 15:55:09.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:09.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:09.631" endtime="20201030 15:55:09.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:09.634" endtime="20201030 15:55:09.635"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.591" endtime="20201030 15:55:09.636"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.589" endtime="20201030 15:55:09.636"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:09.643" endtime="20201030 15:55:09.928"></status>
</kw>
<msg timestamp="20201030 15:55:09.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021150681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021507625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:09.641" endtime="20201030 15:55:09.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:09.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021150681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021507625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:09.932" endtime="20201030 15:55:09.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:09.940" endtime="20201030 15:55:09.941"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.639" endtime="20201030 15:55:09.942"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.637" endtime="20201030 15:55:09.942"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:09.946" level="INFO">${RESULT} = [{'diff': 0.00035694399999999793}, {'diff': 0.0003417639999999979}, {'diff': 0.00034120899999999857}, {'diff': 0.00033766699999999983}, {'diff': 0.0003417500000000018}, {'diff': 0.00034180600000000005...</msg>
<status status="PASS" starttime="20201030 15:55:09.943" endtime="20201030 15:55:09.946"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:09.951" level="INFO">${ACCURACY} = {'diff': [0.00035694399999999793, 0.0003417639999999979, 0.00034120899999999857, 0.00033766699999999983, 0.0003417500000000018, 0.00034180600000000005, 0.00034398700000000046, 0.0003402779999999994, 0...</msg>
<status status="PASS" starttime="20201030 15:55:09.947" endtime="20201030 15:55:09.951"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:09.956" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201030 15:55:09.955" endtime="20201030 15:55:09.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:09.958" level="INFO">VALUE: [0.00035694399999999793, 0.0003417639999999979, 0.00034120899999999857, 0.00033766699999999983, 0.0003417500000000018, 0.00034180600000000005, 0.00034398700000000046, 0.0003402779999999994, 0.0003379589999999988, 0.000339693999999998, 0.000340985999999998, 0.00033952799999999866, 0.00034220899999999957, 0.0003379300000000002, 0.0003431119999999996, 0.0003438470000000013, 0.0003435690000000019, 0.00034327700000000294, 0.0003427080000000006, 0.0003424589999999998, 0.0003415140000000011, 0.00033825000000000174, 0.00034405499999999936, 0.0003415140000000011, 0.00033834699999999926, 0.00033972200000000063, 0.00033938899999999897, 0.0003422639999999984, 0.0003441110000000011, 0.00033794399999999974, 0.0003381529999999938, 0.00034054199999999923, 0.0003426249999999992, 0.00034330600000000155, 0.00034336100000000036, 0.0003404580000000018, 0.0003384999999999985, 0.0003435969999999941, 0.0003392500000000062, 0.0003381809999999999, 0.00033888900000000194, 0.0003405000000000005, 0.00033969399999999456, 0.00034287499999999943, 0.00034094400000000274, 0.0003380970000000025, 0.00034166700000000383, 0.00033983300000000466, 0.0003439450000000052, 0.00033815300000000076]</msg>
<status status="PASS" starttime="20201030 15:55:09.957" endtime="20201030 15:55:09.959"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.952" endtime="20201030 15:55:09.959"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:09.963" endtime="20201030 15:55:09.982"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.961" endtime="20201030 15:55:09.983"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.960" endtime="20201030 15:55:09.983"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.587" endtime="20201030 15:55:09.984"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.587" endtime="20201030 15:55:09.984"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:09.993" endtime="20201030 15:55:10.026"></status>
</kw>
<msg timestamp="20201030 15:55:10.027" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:09.991" endtime="20201030 15:55:10.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:10.029" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:10.028" endtime="20201030 15:55:10.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:10.030" endtime="20201030 15:55:10.032"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.988" endtime="20201030 15:55:10.033"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.986" endtime="20201030 15:55:10.033"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:10.039" endtime="20201030 15:55:10.327"></status>
</kw>
<msg timestamp="20201030 15:55:10.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020535542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020884139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:10.038" endtime="20201030 15:55:10.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:10.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020535542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020884139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:10.332" endtime="20201030 15:55:10.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:10.344" endtime="20201030 15:55:10.347"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.035" endtime="20201030 15:55:10.348"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.034" endtime="20201030 15:55:10.348"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:10.355" level="INFO">${RESULT} = [{'diff': 0.0003485969999999991}, {'diff': 0.00034427799999999995}, {'diff': 0.0003377640000000008}, {'diff': 0.0003426109999999996}, {'diff': 0.0003395420000000017}, {'diff': 0.00034048600000000095},...</msg>
<status status="PASS" starttime="20201030 15:55:10.349" endtime="20201030 15:55:10.355"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:10.360" level="INFO">${ACCURACY} = {'diff': [0.0003485969999999991, 0.00034427799999999995, 0.0003377640000000008, 0.0003426109999999996, 0.0003395420000000017, 0.00034048600000000095, 0.00034136100000000183, 0.0003387499999999988, 0.0...</msg>
<status status="PASS" starttime="20201030 15:55:10.357" endtime="20201030 15:55:10.360"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:10.364" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201030 15:55:10.363" endtime="20201030 15:55:10.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:10.366" level="INFO">VALUE: [0.0003485969999999991, 0.00034427799999999995, 0.0003377640000000008, 0.0003426109999999996, 0.0003395420000000017, 0.00034048600000000095, 0.00034136100000000183, 0.0003387499999999988, 0.00033815300000000076, 0.0003386109999999991, 0.00034337499999999993, 0.00034308300000000097, 0.000341000000000001, 0.00034319399999999806, 0.0003393200000000006, 0.0003421940000000005, 0.00033936099999999983, 0.0003392780000000019, 0.0003440279999999997, 0.0003398749999999999, 0.000339598, 0.00034322200000000067, 0.00034340299999999907, 0.0003433049999999986, 0.0003418339999999992, 0.0003416119999999981, 0.0003424859999999995, 0.00034423600000000124, 0.0003389589999999998, 0.0003436120000000001, 0.00033826399999999784, 0.0003389450000000002, 0.0003376109999999946, 0.0003386810000000004, 0.00033798599999999845, 0.0003435279999999957, 0.0003437089999999976, 0.0003404019999999966, 0.0003436120000000001, 0.0003437079999999981, 0.000342888999999999, 0.0003410559999999993, 0.00033856900000000384, 0.0003417780000000009, 0.0003434579999999979, 0.00034115300000000376, 0.0003422079999999966, 0.0003399579999999944, 0.0003407360000000012, 0.0003423200000000001]</msg>
<status status="PASS" starttime="20201030 15:55:10.365" endtime="20201030 15:55:10.367"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.361" endtime="20201030 15:55:10.368"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:10.371" endtime="20201030 15:55:10.391"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.370" endtime="20201030 15:55:10.392"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.369" endtime="20201030 15:55:10.392"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.985" endtime="20201030 15:55:10.392"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.984" endtime="20201030 15:55:10.392"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:10.402" endtime="20201030 15:55:10.438"></status>
</kw>
<msg timestamp="20201030 15:55:10.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:10.400" endtime="20201030 15:55:10.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:10.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:10.440" endtime="20201030 15:55:10.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:10.442" endtime="20201030 15:55:10.444"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.397" endtime="20201030 15:55:10.444"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.395" endtime="20201030 15:55:10.445"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:10.451" endtime="20201030 15:55:10.737"></status>
</kw>
<msg timestamp="20201030 15:55:10.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02406625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024415444, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:10.450" endtime="20201030 15:55:10.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:10.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02406625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024415444, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:10.741" endtime="20201030 15:55:10.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:10.749" endtime="20201030 15:55:10.751"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.447" endtime="20201030 15:55:10.751"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.445" endtime="20201030 15:55:10.752"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:10.756" level="INFO">${RESULT} = [{'diff': 0.0003491940000000006}, {'diff': 0.0003432369999999997}, {'diff': 0.0003415689999999999}, {'diff': 0.00034191599999999767}, {'diff': 0.0003414300000000002}, {'diff': 0.00034363899999999975},...</msg>
<status status="PASS" starttime="20201030 15:55:10.753" endtime="20201030 15:55:10.756"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:10.760" level="INFO">${ACCURACY} = {'diff': [0.0003491940000000006, 0.0003432369999999997, 0.0003415689999999999, 0.00034191599999999767, 0.0003414300000000002, 0.00034363899999999975, 0.000339500000000003, 0.00034237499999999893, 0.00...</msg>
<status status="PASS" starttime="20201030 15:55:10.757" endtime="20201030 15:55:10.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:10.764" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201030 15:55:10.763" endtime="20201030 15:55:10.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:10.766" level="INFO">VALUE: [0.0003491940000000006, 0.0003432369999999997, 0.0003415689999999999, 0.00034191599999999767, 0.0003414300000000002, 0.00034363899999999975, 0.000339500000000003, 0.00034237499999999893, 0.00034073599999999774, 0.00034067999999999946, 0.0003376939999999995, 0.00034354200000000223, 0.00034040299999999954, 0.00034358400000000094, 0.0003408199999999986, 0.0003443890000000005, 0.0003422780000000014, 0.0003427639999999989, 0.00034158299999999947, 0.00034104100000000026, 0.00033948700000000637, 0.00033847299999999886, 0.0003438880000000005, 0.00033880599999999705, 0.00034015300000000276, 0.00033909699999999654, 0.0003432360000000037, 0.00034269399999999756, 0.0003430700000000009, 0.0003438470000000013, 0.00034152800000000066, 0.000338194, 0.0003423200000000001, 0.0003429439999999978, 0.00033963899999999575, 0.0003391390000000022, 0.00034240299999999807, 0.00034191599999999767, 0.00034220900000000304, 0.0003379030000000005, 0.00033887500000000237, 0.00034, 0.00034419500000000547, 0.0003443330000000022, 0.00033970800000000106, 0.0003384719999999994, 0.00033886099999999586, 0.0003400559999999983, 0.0003429720000000039, 0.0003405270000000002]</msg>
<status status="PASS" starttime="20201030 15:55:10.765" endtime="20201030 15:55:10.768"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.761" endtime="20201030 15:55:10.769"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:10.772" endtime="20201030 15:55:10.792"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.771" endtime="20201030 15:55:10.792"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.770" endtime="20201030 15:55:10.793"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.393" endtime="20201030 15:55:10.793"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.393" endtime="20201030 15:55:10.793"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:10.802" endtime="20201030 15:55:10.836"></status>
</kw>
<msg timestamp="20201030 15:55:10.836" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:10.800" endtime="20201030 15:55:10.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:10.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:10.837" endtime="20201030 15:55:10.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:10.840" endtime="20201030 15:55:10.842"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.798" endtime="20201030 15:55:10.842"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.796" endtime="20201030 15:55:10.843"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:10.849" endtime="20201030 15:55:11.135"></status>
</kw>
<msg timestamp="20201030 15:55:11.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020173792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020511208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:10.847" endtime="20201030 15:55:11.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:11.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020173792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020511208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:11.140" endtime="20201030 15:55:11.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:11.148" endtime="20201030 15:55:11.149"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.845" endtime="20201030 15:55:11.150"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.843" endtime="20201030 15:55:11.150"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:11.154" level="INFO">${RESULT} = [{'diff': 0.0003374160000000001}, {'diff': 0.0003387230000000026}, {'diff': 0.0003401800000000024}, {'diff': 0.0003430269999999992}, {'diff': 0.00034320900000000057}, {'diff': 0.0003419170000000006}, ...</msg>
<status status="PASS" starttime="20201030 15:55:11.151" endtime="20201030 15:55:11.154"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:11.159" level="INFO">${ACCURACY} = {'diff': [0.0003374160000000001, 0.0003387230000000026, 0.0003401800000000024, 0.0003430269999999992, 0.00034320900000000057, 0.0003419170000000006, 0.0003419719999999994, 0.0003385969999999995, 0.000...</msg>
<status status="PASS" starttime="20201030 15:55:11.155" endtime="20201030 15:55:11.159"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:11.163" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201030 15:55:11.162" endtime="20201030 15:55:11.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:11.166" level="INFO">VALUE: [0.0003374160000000001, 0.0003387230000000026, 0.0003401800000000024, 0.0003430269999999992, 0.00034320900000000057, 0.0003419170000000006, 0.0003419719999999994, 0.0003385969999999995, 0.00033844400000000024, 0.0003433889999999995, 0.00034220899999999957, 0.00034067999999999946, 0.00034126400000000084, 0.0003421940000000005, 0.00034405599999999883, 0.00034330600000000155, 0.00034231900000000065, 0.00033934799999999973, 0.0003389030000000015, 0.0003391390000000022, 0.000342986, 0.0003423050000000011, 0.0003431249999999997, 0.000342097000000003, 0.00034026399999999984, 0.00034172299999999864, 0.00033861100000000255, 0.0003434590000000008, 0.0003378189999999996, 0.0003385839999999994, 0.0003417079999999961, 0.00034173599999999527, 0.0003389580000000003, 0.00034419499999999853, 0.0003421799999999975, 0.00034169500000000297, 0.00034426400000000384, 0.0003389719999999999, 0.00033970900000000054, 0.0003434869999999965, 0.0003392359999999997, 0.00033884700000000323, 0.00034008399999999744, 0.0003440279999999962, 0.0003401800000000024, 0.00033993100000000165, 0.0003380280000000041, 0.00034137499999999793, 0.000342000000000002, 0.0003412089999999951]</msg>
<status status="PASS" starttime="20201030 15:55:11.164" endtime="20201030 15:55:11.166"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.160" endtime="20201030 15:55:11.167"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:11.171" endtime="20201030 15:55:11.190"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.169" endtime="20201030 15:55:11.191"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.168" endtime="20201030 15:55:11.191"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.794" endtime="20201030 15:55:11.191"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.793" endtime="20201030 15:55:11.191"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:11.200" endtime="20201030 15:55:11.238"></status>
</kw>
<msg timestamp="20201030 15:55:11.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:11.198" endtime="20201030 15:55:11.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:11.240" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:11.239" endtime="20201030 15:55:11.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:11.242" endtime="20201030 15:55:11.243"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.196" endtime="20201030 15:55:11.244"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.194" endtime="20201030 15:55:11.244"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:11.250" endtime="20201030 15:55:11.541"></status>
</kw>
<msg timestamp="20201030 15:55:11.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023800181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024142153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:11.249" endtime="20201030 15:55:11.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:11.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023800181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024142153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:11.545" endtime="20201030 15:55:11.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:11.553" endtime="20201030 15:55:11.555"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.246" endtime="20201030 15:55:11.555"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.245" endtime="20201030 15:55:11.556"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:11.560" level="INFO">${RESULT} = [{'diff': 0.0003419719999999994}, {'diff': 0.0003398200000000011}, {'diff': 0.0003398060000000015}, {'diff': 0.0003393619999999993}, {'diff': 0.0003395689999999979}, {'diff': 0.0003422360000000027}, {...</msg>
<status status="PASS" starttime="20201030 15:55:11.556" endtime="20201030 15:55:11.560"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:11.564" level="INFO">${ACCURACY} = {'diff': [0.0003419719999999994, 0.0003398200000000011, 0.0003398060000000015, 0.0003393619999999993, 0.0003395689999999979, 0.0003422360000000027, 0.0003376390000000007, 0.00034109699999999854, 0.000...</msg>
<status status="PASS" starttime="20201030 15:55:11.561" endtime="20201030 15:55:11.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:11.568" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201030 15:55:11.567" endtime="20201030 15:55:11.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:11.570" level="INFO">VALUE: [0.0003419719999999994, 0.0003398200000000011, 0.0003398060000000015, 0.0003393619999999993, 0.0003395689999999979, 0.0003422360000000027, 0.0003376390000000007, 0.00034109699999999854, 0.0003423200000000001, 0.0003392499999999993, 0.00034094400000000274, 0.00034052799999999966, 0.0003424589999999998, 0.0003378610000000018, 0.0003379719999999989, 0.0003388049999999976, 0.0003423330000000002, 0.0003413750000000014, 0.0003435690000000019, 0.0003435139999999996, 0.00034177799999999744, 0.0003381809999999999, 0.0003432089999999971, 0.0003400139999999996, 0.00034230600000000055, 0.00034248600000000295, 0.00034037500000000387, 0.00033997199999999395, 0.00034288900000000594, 0.0003413610000000053, 0.00034109699999999854, 0.0003417500000000018, 0.000342485999999996, 0.0003434439999999983, 0.0003423610000000063, 0.00033963899999999575, 0.0003397360000000002, 0.0003407360000000012, 0.00034190299999999757, 0.00033837500000000187, 0.0003411390000000042, 0.000341888999999998, 0.00034126400000000084, 0.0003425140000000021, 0.00033801400000000453, 0.00033808399999999544, 0.0003421810000000039, 0.0003399720000000009, 0.0003443890000000005, 0.0003435140000000031]</msg>
<status status="PASS" starttime="20201030 15:55:11.569" endtime="20201030 15:55:11.571"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.564" endtime="20201030 15:55:11.572"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:11.575" endtime="20201030 15:55:11.595"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.574" endtime="20201030 15:55:11.595"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.573" endtime="20201030 15:55:11.596"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.192" endtime="20201030 15:55:11.596"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.192" endtime="20201030 15:55:11.596"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:11.605" endtime="20201030 15:55:11.639"></status>
</kw>
<msg timestamp="20201030 15:55:11.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:11.603" endtime="20201030 15:55:11.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:11.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:11.641" endtime="20201030 15:55:11.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:11.643" endtime="20201030 15:55:11.645"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.601" endtime="20201030 15:55:11.645"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.599" endtime="20201030 15:55:11.646"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:11.652" endtime="20201030 15:55:11.938"></status>
</kw>
<msg timestamp="20201030 15:55:11.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021059889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021402931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:11.651" endtime="20201030 15:55:11.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:11.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021059889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021402931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:11.942" endtime="20201030 15:55:11.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:11.950" endtime="20201030 15:55:11.952"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.648" endtime="20201030 15:55:11.953"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.646" endtime="20201030 15:55:11.953"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:11.957" level="INFO">${RESULT} = [{'diff': 0.00034304200000000173}, {'diff': 0.00034369499999999803}, {'diff': 0.0003411109999999981}, {'diff': 0.0003435279999999992}, {'diff': 0.0003409719999999984}, {'diff': 0.00033840299999999754}...</msg>
<status status="PASS" starttime="20201030 15:55:11.954" endtime="20201030 15:55:11.957"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:11.961" level="INFO">${ACCURACY} = {'diff': [0.00034304200000000173, 0.00034369499999999803, 0.0003411109999999981, 0.0003435279999999992, 0.0003409719999999984, 0.00033840299999999754, 0.0003421669999999974, 0.0003438049999999991, 0.0...</msg>
<status status="PASS" starttime="20201030 15:55:11.958" endtime="20201030 15:55:11.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:11.965" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201030 15:55:11.964" endtime="20201030 15:55:11.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:11.968" level="INFO">VALUE: [0.00034304200000000173, 0.00034369499999999803, 0.0003411109999999981, 0.0003435279999999992, 0.0003409719999999984, 0.00033840299999999754, 0.0003421669999999974, 0.0003438049999999991, 0.0003434730000000004, 0.000341694, 0.00034072200000000163, 0.0003380839999999989, 0.00034086099999999786, 0.0003438340000000012, 0.0003402500000000003, 0.0003394999999999995, 0.0003413199999999991, 0.0003384719999999994, 0.0003399309999999982, 0.00034040299999999954, 0.00034259700000000004, 0.000341194000000003, 0.000342292000000001, 0.0003406940000000025, 0.0003414309999999997, 0.00034419399999999906, 0.0003405689999999989, 0.00034347199999999745, 0.0003433470000000008, 0.0003414720000000024, 0.00034337499999999993, 0.0003402360000000007, 0.00034155500000000033, 0.0003428050000000016, 0.000338291999999997, 0.000339291999999998, 0.000341403000000004, 0.00033866700000000083, 0.0003407089999999946, 0.00033955499999999833, 0.00033836099999999536, 0.000342000000000002, 0.0003386249999999952, 0.00034347300000000386, 0.0003398199999999976, 0.00033934700000000373, 0.0003435690000000019, 0.0003397920000000054, 0.00033870800000000006, 0.00034204200000000073]</msg>
<status status="PASS" starttime="20201030 15:55:11.966" endtime="20201030 15:55:11.973"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.962" endtime="20201030 15:55:11.974"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:11.977" endtime="20201030 15:55:11.997"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.976" endtime="20201030 15:55:11.998"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.975" endtime="20201030 15:55:11.998"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.597" endtime="20201030 15:55:11.998"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.596" endtime="20201030 15:55:11.998"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:12.007" endtime="20201030 15:55:12.041"></status>
</kw>
<msg timestamp="20201030 15:55:12.041" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:12.006" endtime="20201030 15:55:12.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:12.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:12.042" endtime="20201030 15:55:12.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:12.045" endtime="20201030 15:55:12.046"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.003" endtime="20201030 15:55:12.047"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.001" endtime="20201030 15:55:12.047"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:12.054" endtime="20201030 15:55:12.339"></status>
</kw>
<msg timestamp="20201030 15:55:12.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020796556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021139583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:12.052" endtime="20201030 15:55:12.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:12.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020796556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021139583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:12.344" endtime="20201030 15:55:12.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:12.352" endtime="20201030 15:55:12.353"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.050" endtime="20201030 15:55:12.354"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.048" endtime="20201030 15:55:12.354"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:12.359" level="INFO">${RESULT} = [{'diff': 0.0003430269999999992}, {'diff': 0.0003393749999999994}, {'diff': 0.00034184700000000276}, {'diff': 0.0003405270000000002}, {'diff': 0.00034259700000000004}, {'diff': 0.00033801400000000106}...</msg>
<status status="PASS" starttime="20201030 15:55:12.355" endtime="20201030 15:55:12.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:12.368" level="INFO">${ACCURACY} = {'diff': [0.0003430269999999992, 0.0003393749999999994, 0.00034184700000000276, 0.0003405270000000002, 0.00034259700000000004, 0.00033801400000000106, 0.00033984700000000076, 0.0003395139999999991, 0....</msg>
<status status="PASS" starttime="20201030 15:55:12.361" endtime="20201030 15:55:12.368"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:12.376" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201030 15:55:12.374" endtime="20201030 15:55:12.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:12.380" level="INFO">VALUE: [0.0003430269999999992, 0.0003393749999999994, 0.00034184700000000276, 0.0003405270000000002, 0.00034259700000000004, 0.00033801400000000106, 0.00033984700000000076, 0.0003395139999999991, 0.000343388, 0.0003426669999999979, 0.000339291999999998, 0.00034262500000000265, 0.00034413900000000025, 0.00033826399999999784, 0.0003427920000000015, 0.0003379030000000005, 0.0003378059999999995, 0.0003397780000000024, 0.00034144499999999925, 0.00033788900000000094, 0.00033870800000000006, 0.00034181900000000015, 0.0003433050000000021, 0.0003425700000000004, 0.0003444310000000027, 0.0003418469999999993, 0.00034436100000000136, 0.0003401110000000006, 0.0003405689999999989, 0.00034001400000000653, 0.0003384999999999985, 0.00034111100000000505, 0.0003422500000000023, 0.00034040299999999607, 0.0003385269999999982, 0.00034219399999999706, 0.0003396250000000031, 0.00034055500000000627, 0.00033919500000000047, 0.0003417089999999956, 0.0003401109999999971, 0.0003389300000000012, 0.00033788900000000094, 0.00034186099999999886, 0.00034192999999999724, 0.00033788900000000094, 0.0003391120000000025, 0.0003427639999999954, 0.0003412780000000004, 0.0003386529999999943]</msg>
<status status="PASS" starttime="20201030 15:55:12.378" endtime="20201030 15:55:12.381"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.369" endtime="20201030 15:55:12.382"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:12.388" endtime="20201030 15:55:12.408"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.386" endtime="20201030 15:55:12.409"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.384" endtime="20201030 15:55:12.409"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.999" endtime="20201030 15:55:12.409"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.999" endtime="20201030 15:55:12.410"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:12.418" endtime="20201030 15:55:12.455"></status>
</kw>
<msg timestamp="20201030 15:55:12.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:12.417" endtime="20201030 15:55:12.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:12.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:12.456" endtime="20201030 15:55:12.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:12.459" endtime="20201030 15:55:12.460"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.414" endtime="20201030 15:55:12.461"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.412" endtime="20201030 15:55:12.461"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:12.468" endtime="20201030 15:55:12.780"></status>
</kw>
<msg timestamp="20201030 15:55:12.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021507764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02184075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:12.466" endtime="20201030 15:55:12.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:12.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021507764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02184075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:12.784" endtime="20201030 15:55:12.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:12.792" endtime="20201030 15:55:12.794"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.464" endtime="20201030 15:55:12.794"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.462" endtime="20201030 15:55:12.795"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:12.799" level="INFO">${RESULT} = [{'diff': 0.0003329860000000004}, {'diff': 0.00034249999999999906}, {'diff': 0.0003401800000000024}, {'diff': 0.00034163899999999775}, {'diff': 0.00034348699999999996}, {'diff': 0.00034322300000000014...</msg>
<status status="PASS" starttime="20201030 15:55:12.796" endtime="20201030 15:55:12.799"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:12.803" level="INFO">${ACCURACY} = {'diff': [0.0003329860000000004, 0.00034249999999999906, 0.0003401800000000024, 0.00034163899999999775, 0.00034348699999999996, 0.00034322300000000014, 0.00034198700000000193, 0.0003408329999999987, 0...</msg>
<status status="PASS" starttime="20201030 15:55:12.800" endtime="20201030 15:55:12.803"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:12.807" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201030 15:55:12.806" endtime="20201030 15:55:12.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:12.809" level="INFO">VALUE: [0.0003329860000000004, 0.00034249999999999906, 0.0003401800000000024, 0.00034163899999999775, 0.00034348699999999996, 0.00034322300000000014, 0.00034198700000000193, 0.0003408329999999987, 0.0003377780000000004, 0.0003429729999999999, 0.00033798599999999845, 0.00034038899999999997, 0.00034036100000000083, 0.00034076400000000034, 0.0003405420000000027, 0.0003415140000000011, 0.0003408329999999987, 0.00033856999999999984, 0.000339598, 0.00034048700000000043, 0.0003383190000000001, 0.0003416390000000012, 0.00034368100000000193, 0.0003377640000000008, 0.00034380600000000205, 0.0003384860000000024, 0.0003410699999999989, 0.00034354100000000276, 0.00034358400000000094, 0.00033898599999999945, 0.00034209800000000595, 0.00033987500000000337, 0.0003385979999999955, 0.0003381390000000012, 0.00033852799999999766, 0.0003442219999999982, 0.00034208299999999997, 0.0003402500000000003, 0.00034181900000000015, 0.0003405559999999988, 0.00033893100000000065, 0.00033827699999999794, 0.00033805499999999683, 0.0003426109999999996, 0.0003427780000000019, 0.0003402500000000003, 0.00034015300000000276, 0.0003441669999999994, 0.00034108399999999844, 0.0003392229999999996]</msg>
<status status="PASS" starttime="20201030 15:55:12.808" endtime="20201030 15:55:12.810"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.803" endtime="20201030 15:55:12.811"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:12.814" endtime="20201030 15:55:12.834"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.813" endtime="20201030 15:55:12.835"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.812" endtime="20201030 15:55:12.835"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.411" endtime="20201030 15:55:12.835"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.410" endtime="20201030 15:55:12.835"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:12.844" endtime="20201030 15:55:12.880"></status>
</kw>
<msg timestamp="20201030 15:55:12.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:12.842" endtime="20201030 15:55:12.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:12.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:12.882" endtime="20201030 15:55:12.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:12.885" endtime="20201030 15:55:12.886"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.840" endtime="20201030 15:55:12.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.838" endtime="20201030 15:55:12.887"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:12.894" endtime="20201030 15:55:13.179"></status>
</kw>
<msg timestamp="20201030 15:55:13.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022810111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023140833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:12.892" endtime="20201030 15:55:13.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:13.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022810111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023140833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:13.183" endtime="20201030 15:55:13.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:13.191" endtime="20201030 15:55:13.193"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.889" endtime="20201030 15:55:13.193"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.888" endtime="20201030 15:55:13.194"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:13.198" level="INFO">${RESULT} = [{'diff': 0.00033072199999999857}, {'diff': 0.00034387500000000043}, {'diff': 0.00034086099999999786}, {'diff': 0.0003387499999999988}, {'diff': 0.0003391389999999987}, {'diff': 0.000341292}, {'diff':...</msg>
<status status="PASS" starttime="20201030 15:55:13.194" endtime="20201030 15:55:13.198"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:13.202" level="INFO">${ACCURACY} = {'diff': [0.00033072199999999857, 0.00034387500000000043, 0.00034086099999999786, 0.0003387499999999988, 0.0003391389999999987, 0.000341292, 0.00033984800000000023, 0.0003408469999999983, 0.0003400280...</msg>
<status status="PASS" starttime="20201030 15:55:13.199" endtime="20201030 15:55:13.202"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:13.206" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201030 15:55:13.205" endtime="20201030 15:55:13.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:13.208" level="INFO">VALUE: [0.00033072199999999857, 0.00034387500000000043, 0.00034086099999999786, 0.0003387499999999988, 0.0003391389999999987, 0.000341292, 0.00033984800000000023, 0.0003408469999999983, 0.00034002800000000263, 0.0003380420000000002, 0.0003425979999999995, 0.00034072199999999817, 0.00034340300000000254, 0.0003426109999999996, 0.0003410840000000019, 0.0003433479999999968, 0.00034401300000000065, 0.0003424719999999999, 0.00034209699999999954, 0.0003420560000000003, 0.0003418329999999997, 0.00034137499999999793, 0.0003424589999999998, 0.00033784699999999876, 0.0003441110000000011, 0.00034066700000000283, 0.00033813899999999425, 0.0003400139999999996, 0.00033911100000000305, 0.00034136099999999836, 0.0003423889999999985, 0.000343679999999999, 0.00033811100000000205, 0.0003423200000000001, 0.00034015199999999635, 0.00034073599999999427, 0.0003409720000000019, 0.00034163899999999775, 0.00033955499999999833, 0.0003396800000000019, 0.0003419170000000041, 0.00034198600000000245, 0.0003412360000000017, 0.0003430419999999948, 0.0003381950000000064, 0.0003397919999999985, 0.00033852799999999766, 0.0003416119999999981, 0.0003421109999999991, 0.00033983300000000466]</msg>
<status status="PASS" starttime="20201030 15:55:13.207" endtime="20201030 15:55:13.210"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.202" endtime="20201030 15:55:13.210"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:13.214" endtime="20201030 15:55:13.234"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.213" endtime="20201030 15:55:13.234"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.212" endtime="20201030 15:55:13.234"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.836" endtime="20201030 15:55:13.235"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.836" endtime="20201030 15:55:13.235"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:13.244" endtime="20201030 15:55:13.282"></status>
</kw>
<msg timestamp="20201030 15:55:13.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:13.242" endtime="20201030 15:55:13.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:13.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:13.284" endtime="20201030 15:55:13.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:13.286" endtime="20201030 15:55:13.288"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.239" endtime="20201030 15:55:13.288"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.237" endtime="20201030 15:55:13.289"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:13.295" endtime="20201030 15:55:13.581"></status>
</kw>
<msg timestamp="20201030 15:55:13.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025076792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025431208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:13.294" endtime="20201030 15:55:13.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:13.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025076792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025431208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:13.585" endtime="20201030 15:55:13.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:13.593" endtime="20201030 15:55:13.595"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.291" endtime="20201030 15:55:13.595"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.289" endtime="20201030 15:55:13.596"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:13.600" level="INFO">${RESULT} = [{'diff': 0.00035441599999999976}, {'diff': 0.000341292}, {'diff': 0.00033783400000000213}, {'diff': 0.00034090300000000004}, {'diff': 0.0003412079999999991}, {'diff': 0.00033916700000000133}, {'diff'...</msg>
<status status="PASS" starttime="20201030 15:55:13.597" endtime="20201030 15:55:13.600"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:13.605" level="INFO">${ACCURACY} = {'diff': [0.00035441599999999976, 0.000341292, 0.00033783400000000213, 0.00034090300000000004, 0.0003412079999999991, 0.00033916700000000133, 0.0003430139999999991, 0.0003396389999999992, 0.0003419440...</msg>
<status status="PASS" starttime="20201030 15:55:13.601" endtime="20201030 15:55:13.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:13.609" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201030 15:55:13.608" endtime="20201030 15:55:13.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:13.612" level="INFO">VALUE: [0.00035441599999999976, 0.000341292, 0.00033783400000000213, 0.00034090300000000004, 0.0003412079999999991, 0.00033916700000000133, 0.0003430139999999991, 0.0003396389999999992, 0.0003419440000000003, 0.0003435139999999996, 0.0003414309999999997, 0.0003386940000000005, 0.0003399299999999987, 0.00034152800000000066, 0.00034180600000000005, 0.0003416390000000012, 0.000338194, 0.0003412500000000013, 0.0003380139999999976, 0.0003406379999999973, 0.0003400830000000049, 0.00033848599999999895, 0.0003432500000000033, 0.0003420699999999999, 0.00033837500000000187, 0.00034237499999999893, 0.0003440969999999946, 0.00033984700000000423, 0.0003399720000000009, 0.00034102800000000016, 0.0003404590000000013, 0.00034220900000000304, 0.00033937499999999593, 0.0003422360000000027, 0.000343889, 0.0003399160000000026, 0.0003393469999999968, 0.0003399590000000008, 0.0003405140000000001, 0.0003416800000000039, 0.0003430700000000009, 0.00034380600000000205, 0.0003390970000000035, 0.00034037499999999693, 0.0003426249999999992, 0.0003421109999999991, 0.00034330499999999514, 0.00033793099999999965, 0.0003394580000000008, 0.0003432780000000024]</msg>
<status status="PASS" starttime="20201030 15:55:13.610" endtime="20201030 15:55:13.612"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.606" endtime="20201030 15:55:13.613"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:13.616" endtime="20201030 15:55:13.636"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.615" endtime="20201030 15:55:13.637"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.614" endtime="20201030 15:55:13.637"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.236" endtime="20201030 15:55:13.637"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.235" endtime="20201030 15:55:13.637"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:13.646" endtime="20201030 15:55:13.687"></status>
</kw>
<msg timestamp="20201030 15:55:13.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:13.644" endtime="20201030 15:55:13.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:13.692" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:13.689" endtime="20201030 15:55:13.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:13.695" endtime="20201030 15:55:13.696"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.642" endtime="20201030 15:55:13.698"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.640" endtime="20201030 15:55:13.699"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:13.708" endtime="20201030 15:55:13.995"></status>
</kw>
<msg timestamp="20201030 15:55:13.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024679514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025033458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:13.706" endtime="20201030 15:55:13.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:14.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024679514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025033458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:13.999" endtime="20201030 15:55:14.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:14.007" endtime="20201030 15:55:14.009"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.702" endtime="20201030 15:55:14.009"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.699" endtime="20201030 15:55:14.010"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:14.014" level="INFO">${RESULT} = [{'diff': 0.00035394400000000187}, {'diff': 0.0003420560000000003}, {'diff': 0.0003407919999999995}, {'diff': 0.0003388190000000006}, {'diff': 0.0003414719999999989}, {'diff': 0.0003384719999999994}, ...</msg>
<status status="PASS" starttime="20201030 15:55:14.010" endtime="20201030 15:55:14.014"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:14.018" level="INFO">${ACCURACY} = {'diff': [0.00035394400000000187, 0.0003420560000000003, 0.0003407919999999995, 0.0003388190000000006, 0.0003414719999999989, 0.0003384719999999994, 0.00034130599999999955, 0.0003409309999999992, 0.00...</msg>
<status status="PASS" starttime="20201030 15:55:14.015" endtime="20201030 15:55:14.018"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:14.022" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201030 15:55:14.021" endtime="20201030 15:55:14.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:14.024" level="INFO">VALUE: [0.00035394400000000187, 0.0003420560000000003, 0.0003407919999999995, 0.0003388190000000006, 0.0003414719999999989, 0.0003384719999999994, 0.00034130599999999955, 0.0003409309999999992, 0.00034319399999999806, 0.00034154200000000023, 0.000340291999999999, 0.0003431249999999997, 0.00034116699999999986, 0.0003409720000000019, 0.000342986, 0.0003404169999999991, 0.0003439579999999984, 0.000341292, 0.000338999999999999, 0.00033934700000000373, 0.0003399170000000021, 0.00034109699999999854, 0.00033883300000000366, 0.00034136099999999836, 0.0003427780000000019, 0.0003421249999999987, 0.000342888999999999, 0.0003397499999999998, 0.00034187500000000537, 0.0003432230000000036, 0.00034419399999999906, 0.0003395700000000043, 0.0003411520000000043, 0.00033894400000000074, 0.00033952799999999866, 0.0003412500000000013, 0.00034408400000000144, 0.0003415559999999998, 0.000337999999999998, 0.000342679999999998, 0.00034408400000000144, 0.00034438899999999356, 0.0003417360000000022, 0.0003397919999999985, 0.0003407500000000008, 0.00034441699999999964, 0.0003441110000000011, 0.0003390280000000051, 0.0003435129999999967, 0.00033927699999999894]</msg>
<status status="PASS" starttime="20201030 15:55:14.023" endtime="20201030 15:55:14.025"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.018" endtime="20201030 15:55:14.026"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:14.029" endtime="20201030 15:55:14.049"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.028" endtime="20201030 15:55:14.050"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.027" endtime="20201030 15:55:14.050"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.638" endtime="20201030 15:55:14.050"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.638" endtime="20201030 15:55:14.050"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:14.059" endtime="20201030 15:55:14.096"></status>
</kw>
<msg timestamp="20201030 15:55:14.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:14.057" endtime="20201030 15:55:14.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:14.099" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:14.098" endtime="20201030 15:55:14.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:14.101" endtime="20201030 15:55:14.102"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.055" endtime="20201030 15:55:14.103"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.053" endtime="20201030 15:55:14.103"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:14.109" endtime="20201030 15:55:14.395"></status>
</kw>
<msg timestamp="20201030 15:55:14.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023632806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023969708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:14.108" endtime="20201030 15:55:14.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:14.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023632806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023969708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:14.399" endtime="20201030 15:55:14.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:14.407" endtime="20201030 15:55:14.409"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.105" endtime="20201030 15:55:14.409"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.104" endtime="20201030 15:55:14.410"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:14.413" level="INFO">${RESULT} = [{'diff': 0.00033690200000000003}, {'diff': 0.0003380000000000015}, {'diff': 0.0003398329999999977}, {'diff': 0.0003377640000000008}, {'diff': 0.00034084700000000176}, {'diff': 0.00034112500000000115}...</msg>
<status status="PASS" starttime="20201030 15:55:14.410" endtime="20201030 15:55:14.414"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:14.417" level="INFO">${ACCURACY} = {'diff': [0.00033690200000000003, 0.0003380000000000015, 0.0003398329999999977, 0.0003377640000000008, 0.00034084700000000176, 0.00034112500000000115, 0.00033790299999999704, 0.0003406529999999998, 0....</msg>
<status status="PASS" starttime="20201030 15:55:14.414" endtime="20201030 15:55:14.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:14.422" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201030 15:55:14.421" endtime="20201030 15:55:14.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:14.424" level="INFO">VALUE: [0.00033690200000000003, 0.0003380000000000015, 0.0003398329999999977, 0.0003377640000000008, 0.00034084700000000176, 0.00034112500000000115, 0.00033790299999999704, 0.0003406529999999998, 0.00034281900000000115, 0.00034406899999999893, 0.00034126400000000084, 0.00034093100000000265, 0.0003431110000000001, 0.00033999999999999655, 0.0003389300000000012, 0.0003436250000000002, 0.00034006900000000187, 0.0003416110000000021, 0.0003384579999999998, 0.00033801400000000106, 0.00033786099999999833, 0.00033784799999999476, 0.00033883300000000366, 0.0003413050000000001, 0.00034143100000000315, 0.0003387919999999975, 0.00033919500000000047, 0.00033972200000000063, 0.00033859800000000245, 0.0003408610000000048, 0.0003419450000000032, 0.0003422089999999961, 0.00033993100000000165, 0.000341000000000001, 0.0003409449999999953, 0.00034424999999999734, 0.00034406899999999546, 0.00034390299999999957, 0.0003431659999999989, 0.000338305000000004, 0.00034206899999999346, 0.00034426400000000384, 0.0003386390000000017, 0.00034058399999999794, 0.0003442219999999982, 0.00034423599999999777, 0.00033837500000000187, 0.00033882000000000356, 0.00034113899999999725, 0.00034184799999999876]</msg>
<status status="PASS" starttime="20201030 15:55:14.423" endtime="20201030 15:55:14.426"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.418" endtime="20201030 15:55:14.426"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:14.430" endtime="20201030 15:55:14.449"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.428" endtime="20201030 15:55:14.450"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.427" endtime="20201030 15:55:14.450"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.051" endtime="20201030 15:55:14.451"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.051" endtime="20201030 15:55:14.451"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:14.459" endtime="20201030 15:55:14.493"></status>
</kw>
<msg timestamp="20201030 15:55:14.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:14.458" endtime="20201030 15:55:14.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:14.496" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:14.495" endtime="20201030 15:55:14.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:14.497" endtime="20201030 15:55:14.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.455" endtime="20201030 15:55:14.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.453" endtime="20201030 15:55:14.500"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:14.506" endtime="20201030 15:55:14.793"></status>
</kw>
<msg timestamp="20201030 15:55:14.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02010225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020459403, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:14.505" endtime="20201030 15:55:14.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:14.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02010225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020459403, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:14.797" endtime="20201030 15:55:14.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:14.805" endtime="20201030 15:55:14.806"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.502" endtime="20201030 15:55:14.807"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.500" endtime="20201030 15:55:14.807"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:14.811" level="INFO">${RESULT} = [{'diff': 0.0003571530000000024}, {'diff': 0.0003401529999999993}, {'diff': 0.00033843100000000015}, {'diff': 0.00033976399999999934}, {'diff': 0.00034112500000000115}, {'diff': 0.0003425139999999986}...</msg>
<status status="PASS" starttime="20201030 15:55:14.808" endtime="20201030 15:55:14.811"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:14.816" level="INFO">${ACCURACY} = {'diff': [0.0003571530000000024, 0.0003401529999999993, 0.00033843100000000015, 0.00033976399999999934, 0.00034112500000000115, 0.0003425139999999986, 0.0003382230000000021, 0.00033780500000000005, 0....</msg>
<status status="PASS" starttime="20201030 15:55:14.812" endtime="20201030 15:55:14.816"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:14.821" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201030 15:55:14.820" endtime="20201030 15:55:14.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:14.823" level="INFO">VALUE: [0.0003571530000000024, 0.0003401529999999993, 0.00033843100000000015, 0.00033976399999999934, 0.00034112500000000115, 0.0003425139999999986, 0.0003382230000000021, 0.00033780500000000005, 0.0003428470000000003, 0.0003441529999999998, 0.0003431390000000027, 0.0003382780000000009, 0.00034240299999999807, 0.0003389580000000003, 0.0003415689999999999, 0.0003429310000000012, 0.0003431249999999997, 0.00034415200000000035, 0.0003417500000000018, 0.0003411530000000003, 0.00034209699999999954, 0.0003377910000000005, 0.0003443200000000021, 0.00034012500000000015, 0.0003440560000000023, 0.000338500000000002, 0.0003437370000000002, 0.00033962499999999965, 0.0003428189999999977, 0.0003439730000000009, 0.00033822199999999913, 0.0003437219999999977, 0.00034113899999999725, 0.0003400699999999979, 0.0003437219999999977, 0.00034373599999999727, 0.0003389719999999999, 0.0003438059999999951, 0.0003403469999999978, 0.0003383049999999971, 0.0003424720000000034, 0.00034072200000000163, 0.00034130599999999955, 0.00034208399999999944, 0.000342000000000002, 0.00034130599999999955, 0.00034172200000000263, 0.00033915300000000176, 0.00034191599999999767, 0.0003425700000000004]</msg>
<status status="PASS" starttime="20201030 15:55:14.822" endtime="20201030 15:55:14.824"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.817" endtime="20201030 15:55:14.824"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:14.828" endtime="20201030 15:55:14.847"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.826" endtime="20201030 15:55:14.848"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.825" endtime="20201030 15:55:14.848"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.452" endtime="20201030 15:55:14.849"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.451" endtime="20201030 15:55:14.849"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:14.857" endtime="20201030 15:55:14.895"></status>
</kw>
<msg timestamp="20201030 15:55:14.895" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:14.856" endtime="20201030 15:55:14.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:14.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:14.896" endtime="20201030 15:55:14.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:14.899" endtime="20201030 15:55:14.900"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.853" endtime="20201030 15:55:14.901"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.851" endtime="20201030 15:55:14.901"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:14.908" endtime="20201030 15:55:15.195"></status>
</kw>
<msg timestamp="20201030 15:55:15.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023945514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024294958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:14.906" endtime="20201030 15:55:15.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:15.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023945514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024294958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:15.199" endtime="20201030 15:55:15.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:15.207" endtime="20201030 15:55:15.209"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.904" endtime="20201030 15:55:15.210"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.902" endtime="20201030 15:55:15.210"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:15.214" level="INFO">${RESULT} = [{'diff': 0.00034944399999999737}, {'diff': 0.0003438609999999974}, {'diff': 0.0003434310000000017}, {'diff': 0.00034168099999999993}, {'diff': 0.0003434309999999982}, {'diff': 0.00034084700000000176}...</msg>
<status status="PASS" starttime="20201030 15:55:15.211" endtime="20201030 15:55:15.214"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:15.218" level="INFO">${ACCURACY} = {'diff': [0.00034944399999999737, 0.0003438609999999974, 0.0003434310000000017, 0.00034168099999999993, 0.0003434309999999982, 0.00034084700000000176, 0.0003439449999999983, 0.000338403000000001, 0.00...</msg>
<status status="PASS" starttime="20201030 15:55:15.215" endtime="20201030 15:55:15.218"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:15.222" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201030 15:55:15.221" endtime="20201030 15:55:15.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:15.225" level="INFO">VALUE: [0.00034944399999999737, 0.0003438609999999974, 0.0003434310000000017, 0.00034168099999999993, 0.0003434309999999982, 0.00034084700000000176, 0.0003439449999999983, 0.000338403000000001, 0.0003396389999999992, 0.00033798599999999845, 0.0003404299999999992, 0.0003419170000000006, 0.0003388330000000002, 0.0003424170000000011, 0.00034240300000000154, 0.0003443189999999992, 0.00034041599999999964, 0.0003406529999999998, 0.000342888999999999, 0.0003395970000000005, 0.0003427639999999954, 0.0003408469999999983, 0.0003411529999999968, 0.00034093100000000265, 0.0003392499999999993, 0.00034392999999999924, 0.0003382499999999983, 0.00034098600000000145, 0.00033926399999999884, 0.0003383060000000035, 0.0003414720000000024, 0.00034209699999999954, 0.00034197300000000236, 0.0003437920000000025, 0.0003390699999999969, 0.0003441659999999999, 0.000339612000000003, 0.0003418469999999993, 0.00033991699999999514, 0.0003438470000000013, 0.0003414439999999963, 0.00033770799999999906, 0.00033904199999999773, 0.0003394590000000003, 0.0003391810000000009, 0.0003382359999999987, 0.00034, 0.0003413610000000053, 0.0003422219999999962, 0.00034168099999999646]</msg>
<status status="PASS" starttime="20201030 15:55:15.223" endtime="20201030 15:55:15.226"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.219" endtime="20201030 15:55:15.226"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:15.230" endtime="20201030 15:55:15.249"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.228" endtime="20201030 15:55:15.250"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.227" endtime="20201030 15:55:15.250"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.850" endtime="20201030 15:55:15.250"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.849" endtime="20201030 15:55:15.250"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:15.259" endtime="20201030 15:55:15.297"></status>
</kw>
<msg timestamp="20201030 15:55:15.297" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:15.258" endtime="20201030 15:55:15.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:15.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:15.298" endtime="20201030 15:55:15.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:15.301" endtime="20201030 15:55:15.302"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.255" endtime="20201030 15:55:15.303"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.253" endtime="20201030 15:55:15.303"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:15.310" endtime="20201030 15:55:15.596"></status>
</kw>
<msg timestamp="20201030 15:55:15.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024110542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02446475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:15.308" endtime="20201030 15:55:15.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:15.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024110542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02446475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:15.600" endtime="20201030 15:55:15.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:15.608" endtime="20201030 15:55:15.610"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.306" endtime="20201030 15:55:15.610"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.304" endtime="20201030 15:55:15.611"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:15.615" level="INFO">${RESULT} = [{'diff': 0.0003542080000000017}, {'diff': 0.00033933400000000016}, {'diff': 0.00034368100000000193}, {'diff': 0.00034430600000000255}, {'diff': 0.0003393749999999994}, {'diff': 0.00033980599999999805...</msg>
<status status="PASS" starttime="20201030 15:55:15.612" endtime="20201030 15:55:15.615"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:15.619" level="INFO">${ACCURACY} = {'diff': [0.0003542080000000017, 0.00033933400000000016, 0.00034368100000000193, 0.00034430600000000255, 0.0003393749999999994, 0.00033980599999999805, 0.0003393749999999994, 0.0003395139999999991, 0....</msg>
<status status="PASS" starttime="20201030 15:55:15.616" endtime="20201030 15:55:15.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:15.623" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201030 15:55:15.622" endtime="20201030 15:55:15.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:15.626" level="INFO">VALUE: [0.0003542080000000017, 0.00033933400000000016, 0.00034368100000000193, 0.00034430600000000255, 0.0003393749999999994, 0.00033980599999999805, 0.0003393749999999994, 0.0003395139999999991, 0.0003440279999999997, 0.000344195000000002, 0.00033790299999999704, 0.00034123599999999824, 0.00034008299999999797, 0.0003402079999999981, 0.000341985999999999, 0.00033976299999999987, 0.0003401939999999985, 0.00034199999999999856, 0.00034090300000000004, 0.0003396249999999962, 0.00034241599999999817, 0.00034172200000000263, 0.00034351399999999616, 0.0003431249999999997, 0.00033843100000000015, 0.0003393049999999981, 0.0003411520000000043, 0.00034176400000000134, 0.0003443189999999957, 0.0003401120000000035, 0.000341403000000004, 0.0003439999999999971, 0.000340194000000002, 0.00034180600000000005, 0.00034098600000000145, 0.00033948599999999995, 0.000342000000000002, 0.00034186099999999886, 0.0003434720000000044, 0.00034137500000000487, 0.0003420140000000016, 0.000339790999999999, 0.0003396659999999954, 0.0003406249999999972, 0.00034131899999999965, 0.00033926399999999884, 0.0003441250000000007, 0.0003398610000000038, 0.00034366700000000583, 0.0003425700000000004]</msg>
<status status="PASS" starttime="20201030 15:55:15.624" endtime="20201030 15:55:15.627"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.619" endtime="20201030 15:55:15.628"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:15.631" endtime="20201030 15:55:15.651"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.630" endtime="20201030 15:55:15.652"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.629" endtime="20201030 15:55:15.652"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.251" endtime="20201030 15:55:15.652"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.251" endtime="20201030 15:55:15.652"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:15.661" endtime="20201030 15:55:15.702"></status>
</kw>
<msg timestamp="20201030 15:55:15.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:15.659" endtime="20201030 15:55:15.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:15.705" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:15.704" endtime="20201030 15:55:15.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:15.706" endtime="20201030 15:55:15.708"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.657" endtime="20201030 15:55:15.709"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.655" endtime="20201030 15:55:15.709"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:15.715" endtime="20201030 15:55:16.002"></status>
</kw>
<msg timestamp="20201030 15:55:16.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024301792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024640472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:15.714" endtime="20201030 15:55:16.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:16.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024301792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024640472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:16.006" endtime="20201030 15:55:16.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:16.014" endtime="20201030 15:55:16.015"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.711" endtime="20201030 15:55:16.016"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.710" endtime="20201030 15:55:16.016"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:16.020" level="INFO">${RESULT} = [{'diff': 0.0003386800000000009}, {'diff': 0.0003379030000000005}, {'diff': 0.0003379589999999988}, {'diff': 0.0003413469999999988}, {'diff': 0.00034370900000000107}, {'diff': 0.00034313899999999925},...</msg>
<status status="PASS" starttime="20201030 15:55:16.017" endtime="20201030 15:55:16.020"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:16.025" level="INFO">${ACCURACY} = {'diff': [0.0003386800000000009, 0.0003379030000000005, 0.0003379589999999988, 0.0003413469999999988, 0.00034370900000000107, 0.00034313899999999925, 0.0003394590000000003, 0.0003386390000000017, 0.00...</msg>
<status status="PASS" starttime="20201030 15:55:16.021" endtime="20201030 15:55:16.025"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:16.030" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201030 15:55:16.029" endtime="20201030 15:55:16.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:16.032" level="INFO">VALUE: [0.0003386800000000009, 0.0003379030000000005, 0.0003379589999999988, 0.0003413469999999988, 0.00034370900000000107, 0.00034313899999999925, 0.0003394590000000003, 0.0003386390000000017, 0.00033952799999999866, 0.000343889, 0.00034083400000000166, 0.0003431249999999997, 0.000342000000000002, 0.0003399160000000026, 0.0003411530000000003, 0.00034322300000000014, 0.00033883399999999966, 0.0003422080000000001, 0.0003411110000000016, 0.000341292, 0.00034420800000000557, 0.00034322299999999667, 0.0003415699999999994, 0.0003439579999999984, 0.00033783400000000213, 0.0003430549999999949, 0.00034392999999999924, 0.000338999999999999, 0.00034376300000000387, 0.0003388469999999963, 0.0003392359999999997, 0.00034004199999999873, 0.0003406940000000025, 0.00034136099999999836, 0.0003375689999999959, 0.0003417089999999956, 0.0003421529999999978, 0.0003441250000000007, 0.00033813899999999425, 0.0003381109999999951, 0.00034070800000000206, 0.0003434309999999982, 0.0003379589999999988, 0.00034104100000000026, 0.00033916600000000185, 0.0003429449999999973, 0.00034223599999999577, 0.0003391249999999957, 0.0003432500000000033, 0.00034290299999999857]</msg>
<status status="PASS" starttime="20201030 15:55:16.031" endtime="20201030 15:55:16.033"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.026" endtime="20201030 15:55:16.033"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:16.037" endtime="20201030 15:55:16.056"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.035" endtime="20201030 15:55:16.057"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.034" endtime="20201030 15:55:16.057"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.653" endtime="20201030 15:55:16.058"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.653" endtime="20201030 15:55:16.058"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:16.066" endtime="20201030 15:55:16.101"></status>
</kw>
<msg timestamp="20201030 15:55:16.102" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:16.065" endtime="20201030 15:55:16.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:16.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:16.103" endtime="20201030 15:55:16.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:16.105" endtime="20201030 15:55:16.107"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.062" endtime="20201030 15:55:16.107"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.060" endtime="20201030 15:55:16.108"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:16.114" endtime="20201030 15:55:16.401"></status>
</kw>
<msg timestamp="20201030 15:55:16.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020673361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021019431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:16.113" endtime="20201030 15:55:16.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:16.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020673361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021019431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:16.405" endtime="20201030 15:55:16.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:16.413" endtime="20201030 15:55:16.414"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.110" endtime="20201030 15:55:16.415"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.108" endtime="20201030 15:55:16.415"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:16.419" level="INFO">${RESULT} = [{'diff': 0.0003460700000000004}, {'diff': 0.0003442639999999969}, {'diff': 0.0003442640000000004}, {'diff': 0.00034016699999999886}, {'diff': 0.00034148600000000195}, {'diff': 0.0003401389999999997},...</msg>
<status status="PASS" starttime="20201030 15:55:16.416" endtime="20201030 15:55:16.419"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:16.423" level="INFO">${ACCURACY} = {'diff': [0.0003460700000000004, 0.0003442639999999969, 0.0003442640000000004, 0.00034016699999999886, 0.00034148600000000195, 0.0003401389999999997, 0.00034363899999999975, 0.0003389030000000015, 0.0...</msg>
<status status="PASS" starttime="20201030 15:55:16.420" endtime="20201030 15:55:16.423"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:16.428" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201030 15:55:16.427" endtime="20201030 15:55:16.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:16.430" level="INFO">VALUE: [0.0003460700000000004, 0.0003442639999999969, 0.0003442640000000004, 0.00034016699999999886, 0.00034148600000000195, 0.0003401389999999997, 0.00034363899999999975, 0.0003389030000000015, 0.0003411110000000016, 0.0003388749999999989, 0.0003394170000000016, 0.0003411520000000008, 0.00034031899999999865, 0.000343791999999999, 0.00033816700000000033, 0.0003412639999999974, 0.00034162500000000165, 0.0003418750000000019, 0.00033938899999999897, 0.0003428330000000007, 0.0003391519999999988, 0.0003381390000000012, 0.0003400139999999996, 0.00034304100000000226, 0.0003392359999999997, 0.00033865300000000126, 0.00034323600000000024, 0.0003416249999999982, 0.00034034800000000073, 0.0003433889999999995, 0.00034131899999999965, 0.0003423200000000001, 0.0003427079999999971, 0.0003414720000000024, 0.00033848699999999843, 0.0003378329999999957, 0.00033794399999999974, 0.00033984700000000423, 0.0003425560000000008, 0.0003437500000000038, 0.0003402779999999994, 0.00033802700000000463, 0.00034068099999999546, 0.0003402779999999994, 0.0003412500000000013, 0.000339305000000005, 0.0003432780000000024, 0.00034093100000000265, 0.0003423189999999937, 0.0003385420000000042]</msg>
<status status="PASS" starttime="20201030 15:55:16.429" endtime="20201030 15:55:16.431"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.424" endtime="20201030 15:55:16.431"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:16.435" endtime="20201030 15:55:16.454"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.433" endtime="20201030 15:55:16.455"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.432" endtime="20201030 15:55:16.455"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.059" endtime="20201030 15:55:16.456"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.058" endtime="20201030 15:55:16.456"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:16.465" endtime="20201030 15:55:16.503"></status>
</kw>
<msg timestamp="20201030 15:55:16.503" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:16.463" endtime="20201030 15:55:16.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:16.506" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:16.504" endtime="20201030 15:55:16.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:16.507" endtime="20201030 15:55:16.508"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.460" endtime="20201030 15:55:16.509"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.458" endtime="20201030 15:55:16.509"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:16.516" endtime="20201030 15:55:16.802"></status>
</kw>
<msg timestamp="20201030 15:55:16.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024646347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024989972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:16.514" endtime="20201030 15:55:16.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:16.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024646347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024989972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:16.806" endtime="20201030 15:55:16.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:16.814" endtime="20201030 15:55:16.816"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.512" endtime="20201030 15:55:16.817"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.510" endtime="20201030 15:55:16.817"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:16.821" level="INFO">${RESULT} = [{'diff': 0.0003436250000000002}, {'diff': 0.00034213899999999825}, {'diff': 0.00033811100000000205}, {'diff': 0.00033940199999999907}, {'diff': 0.00033790199999999757}, {'diff': 0.0003383469999999992...</msg>
<status status="PASS" starttime="20201030 15:55:16.818" endtime="20201030 15:55:16.821"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:16.825" level="INFO">${ACCURACY} = {'diff': [0.0003436250000000002, 0.00034213899999999825, 0.00033811100000000205, 0.00033940199999999907, 0.00033790199999999757, 0.00033834699999999926, 0.00034223599999999924, 0.0003443470000000018, ...</msg>
<status status="PASS" starttime="20201030 15:55:16.822" endtime="20201030 15:55:16.825"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:16.829" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201030 15:55:16.828" endtime="20201030 15:55:16.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:16.832" level="INFO">VALUE: [0.0003436250000000002, 0.00034213899999999825, 0.00033811100000000205, 0.00033940199999999907, 0.00033790199999999757, 0.00033834699999999926, 0.00034223599999999924, 0.0003443470000000018, 0.00033888899999999847, 0.0003390269999999987, 0.00034002799999999916, 0.00033784699999999876, 0.00034005499999999883, 0.0003414170000000001, 0.0003429720000000004, 0.0003408750000000009, 0.0003407779999999999, 0.0003428470000000003, 0.0003413750000000014, 0.0003392369999999992, 0.0003398610000000038, 0.00034204200000000073, 0.0003393329999999972, 0.00034159699999999904, 0.0003399450000000012, 0.00033991599999999567, 0.0003399720000000009, 0.000342485999999996, 0.0003390139999999986, 0.00033865300000000126, 0.0003397640000000063, 0.0003437219999999977, 0.0003441250000000007, 0.00033804199999999673, 0.0003403329999999982, 0.0003396940000000015, 0.0003389589999999998, 0.0003434309999999982, 0.0003398879999999965, 0.0003418469999999993, 0.0003405140000000001, 0.00034165199999999785, 0.00034441600000000017, 0.0003439309999999987, 0.00034352800000000266, 0.0003407230000000011, 0.0003419019999999981, 0.0003420419999999938, 0.0003390129999999991, 0.0003420279999999942]</msg>
<status status="PASS" starttime="20201030 15:55:16.830" endtime="20201030 15:55:16.833"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.826" endtime="20201030 15:55:16.834"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:16.837" endtime="20201030 15:55:16.857"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.836" endtime="20201030 15:55:16.857"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.835" endtime="20201030 15:55:16.858"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.457" endtime="20201030 15:55:16.858"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.456" endtime="20201030 15:55:16.858"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:16.867" endtime="20201030 15:55:16.904"></status>
</kw>
<msg timestamp="20201030 15:55:16.905" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:16.865" endtime="20201030 15:55:16.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:16.907" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:16.906" endtime="20201030 15:55:16.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:16.908" endtime="20201030 15:55:16.910"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.863" endtime="20201030 15:55:16.911"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.861" endtime="20201030 15:55:16.911"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:16.917" endtime="20201030 15:55:17.206"></status>
</kw>
<msg timestamp="20201030 15:55:17.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024134056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024470403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:16.916" endtime="20201030 15:55:17.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024134056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024470403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:17.210" endtime="20201030 15:55:17.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:17.218" endtime="20201030 15:55:17.220"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.913" endtime="20201030 15:55:17.220"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.912" endtime="20201030 15:55:17.221"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:17.225" level="INFO">${RESULT} = [{'diff': 0.00033634700000000073}, {'diff': 0.0003390839999999999}, {'diff': 0.0003385969999999995}, {'diff': 0.00034095799999999885}, {'diff': 0.00034299999999999956}, {'diff': 0.0003406529999999998}...</msg>
<status status="PASS" starttime="20201030 15:55:17.222" endtime="20201030 15:55:17.225"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:17.230" level="INFO">${ACCURACY} = {'diff': [0.00033634700000000073, 0.0003390839999999999, 0.0003385969999999995, 0.00034095799999999885, 0.00034299999999999956, 0.0003406529999999998, 0.000339888, 0.000337999999999998, 0.000340764000...</msg>
<status status="PASS" starttime="20201030 15:55:17.226" endtime="20201030 15:55:17.230"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.234" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201030 15:55:17.233" endtime="20201030 15:55:17.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.236" level="INFO">VALUE: [0.00033634700000000073, 0.0003390839999999999, 0.0003385969999999995, 0.00034095799999999885, 0.00034299999999999956, 0.0003406529999999998, 0.000339888, 0.000337999999999998, 0.00034076400000000034, 0.0003392780000000019, 0.0003405840000000014, 0.0003396529999999988, 0.0003385560000000003, 0.0003414589999999988, 0.0003442500000000008, 0.0003434439999999983, 0.00034152800000000066, 0.00033838899999999797, 0.0003407639999999969, 0.0003377919999999965, 0.00033882000000000356, 0.00034237499999999893, 0.0003438330000000017, 0.0003423050000000011, 0.0003383190000000036, 0.0003419030000000045, 0.00034102800000000016, 0.00034426299999999743, 0.00034076400000000034, 0.0003431110000000001, 0.00034209699999999954, 0.0003404580000000018, 0.0003386250000000021, 0.0003425000000000025, 0.0003380700000000028, 0.00034002799999999916, 0.00034248600000000295, 0.00034242999999999774, 0.00033772199999999863, 0.00033883300000000366, 0.0003407360000000012, 0.000337888999999994, 0.00034287499999999943, 0.0003417089999999956, 0.0003430409999999953, 0.0003393339999999967, 0.00033870899999999954, 0.0003422910000000015, 0.0003425140000000021, 0.00033952799999999866]</msg>
<status status="PASS" starttime="20201030 15:55:17.235" endtime="20201030 15:55:17.241"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.230" endtime="20201030 15:55:17.242"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:17.245" endtime="20201030 15:55:17.265"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.244" endtime="20201030 15:55:17.266"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.243" endtime="20201030 15:55:17.266"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.859" endtime="20201030 15:55:17.266"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.858" endtime="20201030 15:55:17.266"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:17.275" endtime="20201030 15:55:17.311"></status>
</kw>
<msg timestamp="20201030 15:55:17.311" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:17.273" endtime="20201030 15:55:17.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.314" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:17.313" endtime="20201030 15:55:17.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:17.315" endtime="20201030 15:55:17.316"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.271" endtime="20201030 15:55:17.317"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.269" endtime="20201030 15:55:17.317"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:17.324" endtime="20201030 15:55:17.611"></status>
</kw>
<msg timestamp="20201030 15:55:17.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022978028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023337861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:17.322" endtime="20201030 15:55:17.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022978028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023337861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:17.615" endtime="20201030 15:55:17.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:17.623" endtime="20201030 15:55:17.625"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.320" endtime="20201030 15:55:17.626"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.318" endtime="20201030 15:55:17.626"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:17.630" level="INFO">${RESULT} = [{'diff': 0.0003598330000000004}, {'diff': 0.00034436200000000083}, {'diff': 0.00033811100000000205}, {'diff': 0.0003403469999999978}, {'diff': 0.00034377799999999945}, {'diff': 0.000342292000000001},...</msg>
<status status="PASS" starttime="20201030 15:55:17.627" endtime="20201030 15:55:17.630"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:17.635" level="INFO">${ACCURACY} = {'diff': [0.0003598330000000004, 0.00034436200000000083, 0.00033811100000000205, 0.0003403469999999978, 0.00034377799999999945, 0.000342292000000001, 0.0003388749999999989, 0.0003431529999999988, 0.00...</msg>
<status status="PASS" starttime="20201030 15:55:17.631" endtime="20201030 15:55:17.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.639" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201030 15:55:17.638" endtime="20201030 15:55:17.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.642" level="INFO">VALUE: [0.0003598330000000004, 0.00034436200000000083, 0.00033811100000000205, 0.0003403469999999978, 0.00034377799999999945, 0.000342292000000001, 0.0003388749999999989, 0.0003431529999999988, 0.000343694000000002, 0.00033836099999999883, 0.0003381380000000017, 0.00034073599999999774, 0.0003406949999999985, 0.0003439720000000014, 0.00034440300000000007, 0.0003393749999999994, 0.0003409589999999983, 0.0003413750000000014, 0.0003406390000000002, 0.0003436250000000002, 0.00034377799999999945, 0.0003414580000000028, 0.00033881899999999715, 0.00034276400000000234, 0.00033822199999999913, 0.0003431249999999997, 0.0003386810000000004, 0.0003389589999999998, 0.0003392779999999984, 0.00034104199999999973, 0.0003393329999999972, 0.0003409030000000035, 0.0003383199999999961, 0.0003411109999999981, 0.00033898599999999945, 0.0003407779999999999, 0.000342000000000002, 0.0003404590000000013, 0.000341888999999998, 0.00034002799999999916, 0.000339291999999998, 0.0003405699999999984, 0.00033908299999999697, 0.0003424720000000034, 0.0003434439999999983, 0.00034386200000000033, 0.0003420699999999999, 0.00033905499999999783, 0.00034355500000000233, 0.00033820799999999956]</msg>
<status status="PASS" starttime="20201030 15:55:17.640" endtime="20201030 15:55:17.642"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.635" endtime="20201030 15:55:17.643"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:17.647" endtime="20201030 15:55:17.666"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.645" endtime="20201030 15:55:17.667"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.644" endtime="20201030 15:55:17.667"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.267" endtime="20201030 15:55:17.667"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.267" endtime="20201030 15:55:17.667"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:17.676" endtime="20201030 15:55:17.714"></status>
</kw>
<msg timestamp="20201030 15:55:17.714" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:17.674" endtime="20201030 15:55:17.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.717" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:17.715" endtime="20201030 15:55:17.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:17.718" endtime="20201030 15:55:17.719"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.672" endtime="20201030 15:55:17.720"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.670" endtime="20201030 15:55:17.720"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:17.727" endtime="20201030 15:55:18.012"></status>
</kw>
<msg timestamp="20201030 15:55:18.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023835778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024189444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:17.725" endtime="20201030 15:55:18.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:18.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023835778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024189444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:18.016" endtime="20201030 15:55:18.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:18.024" endtime="20201030 15:55:18.026"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.723" endtime="20201030 15:55:18.026"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.721" endtime="20201030 15:55:18.027"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:18.031" level="INFO">${RESULT} = [{'diff': 0.0003536660000000025}, {'diff': 0.0003437219999999977}, {'diff': 0.0003409589999999983}, {'diff': 0.00033943100000000115}, {'diff': 0.00033782000000000256}, {'diff': 0.0003404580000000018},...</msg>
<status status="PASS" starttime="20201030 15:55:18.028" endtime="20201030 15:55:18.031"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:18.035" level="INFO">${ACCURACY} = {'diff': [0.0003536660000000025, 0.0003437219999999977, 0.0003409589999999983, 0.00033943100000000115, 0.00033782000000000256, 0.0003404580000000018, 0.00034072199999999817, 0.00034299999999999956, 0....</msg>
<status status="PASS" starttime="20201030 15:55:18.032" endtime="20201030 15:55:18.035"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:18.039" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201030 15:55:18.038" endtime="20201030 15:55:18.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:18.042" level="INFO">VALUE: [0.0003536660000000025, 0.0003437219999999977, 0.0003409589999999983, 0.00033943100000000115, 0.00033782000000000256, 0.0003404580000000018, 0.00034072199999999817, 0.00034299999999999956, 0.0003413329999999992, 0.0003430700000000009, 0.00034272200000000017, 0.0003424579999999969, 0.00034336100000000036, 0.00033916700000000133, 0.00034394500000000175, 0.00033825000000000174, 0.000341194999999999, 0.0003410689999999994, 0.0003406949999999985, 0.00034016699999999886, 0.00034363899999999975, 0.00033834700000000273, 0.00034281900000000115, 0.00034295899999999685, 0.0003427089999999966, 0.0003417920000000005, 0.000339888999999996, 0.00033865300000000126, 0.00034251399999999516, 0.00033869499999999997, 0.0003401390000000032, 0.0003379719999999989, 0.00033911100000000305, 0.00034061100000000455, 0.000338403000000001, 0.00034337499999999993, 0.00034358400000000094, 0.000340679999999996, 0.00034104199999999973, 0.0003393480000000032, 0.00034036099999999736, 0.0003379030000000005, 0.0003425279999999947, 0.00034194400000000374, 0.00033937500000000287, 0.00033833300000000316, 0.000340194000000002, 0.0003384719999999994, 0.0003395689999999979, 0.0003414720000000024]</msg>
<status status="PASS" starttime="20201030 15:55:18.040" endtime="20201030 15:55:18.043"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.036" endtime="20201030 15:55:18.044"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:18.047" endtime="20201030 15:55:18.067"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.046" endtime="20201030 15:55:18.067"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.045" endtime="20201030 15:55:18.068"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.668" endtime="20201030 15:55:18.068"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.668" endtime="20201030 15:55:18.068"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:18.077" endtime="20201030 15:55:18.116"></status>
</kw>
<msg timestamp="20201030 15:55:18.117" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:18.075" endtime="20201030 15:55:18.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:18.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:18.118" endtime="20201030 15:55:18.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:18.120" endtime="20201030 15:55:18.122"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.073" endtime="20201030 15:55:18.123"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.071" endtime="20201030 15:55:18.123"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:18.129" endtime="20201030 15:55:18.416"></status>
</kw>
<msg timestamp="20201030 15:55:18.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024884458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025239667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:18.128" endtime="20201030 15:55:18.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:18.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024884458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025239667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:18.420" endtime="20201030 15:55:18.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:18.428" endtime="20201030 15:55:18.430"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.125" endtime="20201030 15:55:18.430"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.124" endtime="20201030 15:55:18.431"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:18.434" level="INFO">${RESULT} = [{'diff': 0.0003552089999999987}, {'diff': 0.0003425279999999982}, {'diff': 0.0003420690000000004}, {'diff': 0.0003419440000000003}, {'diff': 0.0003421110000000026}, {'diff': 0.00034355599999999833}, ...</msg>
<status status="PASS" starttime="20201030 15:55:18.431" endtime="20201030 15:55:18.435"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:18.439" level="INFO">${ACCURACY} = {'diff': [0.0003552089999999987, 0.0003425279999999982, 0.0003420690000000004, 0.0003419440000000003, 0.0003421110000000026, 0.00034355599999999833, 0.0003410689999999994, 0.0003412079999999991, 0.000...</msg>
<status status="PASS" starttime="20201030 15:55:18.435" endtime="20201030 15:55:18.439"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:18.444" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201030 15:55:18.443" endtime="20201030 15:55:18.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:18.446" level="INFO">VALUE: [0.0003552089999999987, 0.0003425279999999982, 0.0003420690000000004, 0.0003419440000000003, 0.0003421110000000026, 0.00034355599999999833, 0.0003410689999999994, 0.0003412079999999991, 0.00034122199999999867, 0.0003415689999999999, 0.00034043100000000215, 0.00034002700000000316, 0.0003441250000000007, 0.00034344500000000125, 0.00034076400000000034, 0.00033994499999999775, 0.00034108300000000244, 0.00034138900000000097, 0.000344292000000003, 0.0003416249999999982, 0.00033836099999999536, 0.00034155500000000033, 0.00034308300000000097, 0.0003412780000000004, 0.00034143100000000315, 0.00034369399999999856, 0.00034052799999999966, 0.0003431810000000049, 0.0003421529999999978, 0.00034370800000000507, 0.0003426249999999992, 0.0003400699999999979, 0.0003401109999999971, 0.0003401250000000036, 0.00033859699999999604, 0.0003387499999999988, 0.00033898599999999945, 0.00033816700000000033, 0.0003414580000000028, 0.00034076400000000034, 0.0003419449999999963, 0.00034270900000000354, 0.0003439449999999983, 0.0003422780000000014, 0.0003388199999999966, 0.00033972200000000063, 0.0003442780000000034, 0.00034397199999999795, 0.00033936199999999583, 0.00034294400000000475]</msg>
<status status="PASS" starttime="20201030 15:55:18.445" endtime="20201030 15:55:18.447"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.440" endtime="20201030 15:55:18.448"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:18.451" endtime="20201030 15:55:18.471"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.450" endtime="20201030 15:55:18.471"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.448" endtime="20201030 15:55:18.472"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.069" endtime="20201030 15:55:18.472"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.068" endtime="20201030 15:55:18.472"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:18.481" endtime="20201030 15:55:18.517"></status>
</kw>
<msg timestamp="20201030 15:55:18.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:18.479" endtime="20201030 15:55:18.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:18.520" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:18.519" endtime="20201030 15:55:18.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:18.521" endtime="20201030 15:55:18.523"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.477" endtime="20201030 15:55:18.523"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.474" endtime="20201030 15:55:18.524"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:18.530" endtime="20201030 15:55:18.817"></status>
</kw>
<msg timestamp="20201030 15:55:18.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023053611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023406472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:18.529" endtime="20201030 15:55:18.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:18.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023053611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023406472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:18.822" endtime="20201030 15:55:18.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:18.829" endtime="20201030 15:55:18.831"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.526" endtime="20201030 15:55:18.832"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.524" endtime="20201030 15:55:18.832"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:18.836" level="INFO">${RESULT} = [{'diff': 0.00035286099999999945}, {'diff': 0.0003434170000000021}, {'diff': 0.00034026399999999984}, {'diff': 0.00034119500000000247}, {'diff': 0.0003431530000000023}, {'diff': 0.00033865300000000126...</msg>
<status status="PASS" starttime="20201030 15:55:18.833" endtime="20201030 15:55:18.836"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:18.840" level="INFO">${ACCURACY} = {'diff': [0.00035286099999999945, 0.0003434170000000021, 0.00034026399999999984, 0.00034119500000000247, 0.0003431530000000023, 0.00033865300000000126, 0.00033933400000000016, 0.00034291599999999867, ...</msg>
<status status="PASS" starttime="20201030 15:55:18.837" endtime="20201030 15:55:18.840"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:18.844" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201030 15:55:18.843" endtime="20201030 15:55:18.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:18.847" level="INFO">VALUE: [0.00035286099999999945, 0.0003434170000000021, 0.00034026399999999984, 0.00034119500000000247, 0.0003431530000000023, 0.00033865300000000126, 0.00033933400000000016, 0.00034291599999999867, 0.00034368100000000193, 0.00034031899999999865, 0.0003385969999999995, 0.00034002800000000263, 0.0003393190000000011, 0.0003396110000000001, 0.0003386810000000004, 0.0003420699999999999, 0.00033822199999999913, 0.00034273599999999974, 0.0003431110000000001, 0.0003411520000000008, 0.0003430139999999991, 0.0003431110000000001, 0.0003418750000000019, 0.0003443330000000022, 0.00033965300000000226, 0.0003421249999999987, 0.00034309700000000054, 0.00034076400000000034, 0.00033837500000000187, 0.00033972200000000063, 0.00033947299999999986, 0.00034165300000000426, 0.00034413900000000025, 0.0003389719999999999, 0.0003400559999999983, 0.0003385559999999968, 0.00034080599999999905, 0.00034418099999999896, 0.00034081899999999915, 0.00034424999999999734, 0.0003429309999999977, 0.0003419030000000045, 0.0003377499999999978, 0.00034104199999999973, 0.0003419170000000041, 0.0003410559999999993, 0.00034276299999999593, 0.000343791000000003, 0.00034090299999999657, 0.0003401250000000036]</msg>
<status status="PASS" starttime="20201030 15:55:18.845" endtime="20201030 15:55:18.848"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.841" endtime="20201030 15:55:18.848"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:18.852" endtime="20201030 15:55:18.871"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.850" endtime="20201030 15:55:18.872"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.849" endtime="20201030 15:55:18.872"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.473" endtime="20201030 15:55:18.873"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.472" endtime="20201030 15:55:18.873"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:18.881" endtime="20201030 15:55:18.919"></status>
</kw>
<msg timestamp="20201030 15:55:18.919" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:18.880" endtime="20201030 15:55:18.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:18.922" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:18.920" endtime="20201030 15:55:18.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:18.923" endtime="20201030 15:55:18.924"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.877" endtime="20201030 15:55:18.925"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.875" endtime="20201030 15:55:18.925"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:18.932" endtime="20201030 15:55:19.218"></status>
</kw>
<msg timestamp="20201030 15:55:19.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024302486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024653778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:18.930" endtime="20201030 15:55:19.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:19.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024302486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024653778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:19.222" endtime="20201030 15:55:19.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:19.230" endtime="20201030 15:55:19.232"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.928" endtime="20201030 15:55:19.232"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.926" endtime="20201030 15:55:19.233"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:19.237" level="INFO">${RESULT} = [{'diff': 0.0003512919999999996}, {'diff': 0.000341985999999999}, {'diff': 0.0003383329999999997}, {'diff': 0.000338597000000003}, {'diff': 0.0003408199999999986}, {'diff': 0.00034420900000000157}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:19.234" endtime="20201030 15:55:19.237"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:19.241" level="INFO">${ACCURACY} = {'diff': [0.0003512919999999996, 0.000341985999999999, 0.0003383329999999997, 0.000338597000000003, 0.0003408199999999986, 0.00034420900000000157, 0.0003413889999999975, 0.00033988899999999947, 0.0003...</msg>
<status status="PASS" starttime="20201030 15:55:19.238" endtime="20201030 15:55:19.241"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:19.245" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201030 15:55:19.244" endtime="20201030 15:55:19.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:19.248" level="INFO">VALUE: [0.0003512919999999996, 0.000341985999999999, 0.0003383329999999997, 0.000338597000000003, 0.0003408199999999986, 0.00034420900000000157, 0.0003413889999999975, 0.00033988899999999947, 0.0003396110000000001, 0.0003390139999999986, 0.0003435279999999992, 0.00033933400000000016, 0.0003395699999999974, 0.00033798599999999845, 0.00034102800000000016, 0.00033820799999999956, 0.0003434720000000009, 0.000342791000000002, 0.00034222199999999967, 0.0003410130000000011, 0.0003435700000000014, 0.0003379589999999988, 0.0003386810000000004, 0.000341888999999998, 0.00034287499999999943, 0.0003432219999999972, 0.0003412219999999952, 0.00033936099999999636, 0.0003412360000000017, 0.00034033400000000463, 0.00033797299999999836, 0.0003429859999999965, 0.00033784700000000223, 0.0003387779999999979, 0.0003434439999999983, 0.00033990200000000304, 0.00033820899999999904, 0.0003433330000000012, 0.0003399580000000013, 0.0003377500000000047, 0.0003407360000000012, 0.00034370800000000507, 0.0003438059999999951, 0.000341485999999995, 0.000343777999999996, 0.0003419580000000033, 0.0003384999999999985, 0.0003426109999999996, 0.0003382779999999974, 0.0003391800000000014]</msg>
<status status="PASS" starttime="20201030 15:55:19.246" endtime="20201030 15:55:19.249"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.241" endtime="20201030 15:55:19.250"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:19.253" endtime="20201030 15:55:19.273"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.252" endtime="20201030 15:55:19.274"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.251" endtime="20201030 15:55:19.274"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.874" endtime="20201030 15:55:19.274"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.873" endtime="20201030 15:55:19.274"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:19.283" endtime="20201030 15:55:19.323"></status>
</kw>
<msg timestamp="20201030 15:55:19.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:19.281" endtime="20201030 15:55:19.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:19.326" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:19.325" endtime="20201030 15:55:19.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:19.327" endtime="20201030 15:55:19.329"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.279" endtime="20201030 15:55:19.330"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.277" endtime="20201030 15:55:19.330"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:19.336" endtime="20201030 15:55:19.623"></status>
</kw>
<msg timestamp="20201030 15:55:19.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024653347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025004556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:19.335" endtime="20201030 15:55:19.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:19.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024653347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025004556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:19.628" endtime="20201030 15:55:19.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:19.635" endtime="20201030 15:55:19.637"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.332" endtime="20201030 15:55:19.638"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.331" endtime="20201030 15:55:19.638"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:19.642" level="INFO">${RESULT} = [{'diff': 0.00035120900000000163}, {'diff': 0.0003394169999999981}, {'diff': 0.0003399169999999986}, {'diff': 0.00034158399999999894}, {'diff': 0.0003391109999999996}, {'diff': 0.000343292000000002}, ...</msg>
<status status="PASS" starttime="20201030 15:55:19.639" endtime="20201030 15:55:19.642"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:19.647" level="INFO">${ACCURACY} = {'diff': [0.00035120900000000163, 0.0003394169999999981, 0.0003399169999999986, 0.00034158399999999894, 0.0003391109999999996, 0.000343292000000002, 0.00033852800000000113, 0.00034140200000000107, 0.0...</msg>
<status status="PASS" starttime="20201030 15:55:19.643" endtime="20201030 15:55:19.647"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:19.652" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201030 15:55:19.651" endtime="20201030 15:55:19.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:19.654" level="INFO">VALUE: [0.00035120900000000163, 0.0003394169999999981, 0.0003399169999999986, 0.00034158399999999894, 0.0003391109999999996, 0.000343292000000002, 0.00033852800000000113, 0.00034140200000000107, 0.00033922200000000013, 0.00034288900000000247, 0.0003384169999999971, 0.00034295800000000085, 0.0003391529999999983, 0.00034183400000000266, 0.0003400559999999983, 0.0003408049999999996, 0.0003407780000000034, 0.00034084700000000176, 0.00033972200000000063, 0.0003386250000000021, 0.0003409309999999957, 0.000341485999999995, 0.0003409170000000031, 0.0003392359999999997, 0.00034280499999999464, 0.0003424309999999972, 0.00034016700000000233, 0.0003412780000000004, 0.00034268099999999746, 0.0003437360000000042, 0.0003396250000000031, 0.0003392499999999993, 0.00034011100000000405, 0.00034191699999999714, 0.00034208299999999997, 0.00033787500000000137, 0.00033770899999999854, 0.0003424309999999972, 0.0003418050000000006, 0.00034316700000000533, 0.00034337499999999993, 0.00034008399999999744, 0.00034223599999999577, 0.0003442779999999965, 0.00034174999999999484, 0.0003437079999999981, 0.0003413329999999992, 0.0003383329999999962, 0.0003408329999999987, 0.00034237499999999893]</msg>
<status status="PASS" starttime="20201030 15:55:19.653" endtime="20201030 15:55:19.655"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.648" endtime="20201030 15:55:19.656"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:19.660" endtime="20201030 15:55:19.679"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.658" endtime="20201030 15:55:19.680"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.657" endtime="20201030 15:55:19.680"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.275" endtime="20201030 15:55:19.681"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.275" endtime="20201030 15:55:19.681"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:19.690" endtime="20201030 15:55:19.728"></status>
</kw>
<msg timestamp="20201030 15:55:19.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:19.688" endtime="20201030 15:55:19.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:19.731" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:19.730" endtime="20201030 15:55:19.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:19.732" endtime="20201030 15:55:19.734"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.686" endtime="20201030 15:55:19.734"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.683" endtime="20201030 15:55:19.735"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:19.741" endtime="20201030 15:55:20.028"></status>
</kw>
<msg timestamp="20201030 15:55:20.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025066472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025399167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:19.740" endtime="20201030 15:55:20.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:20.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025066472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025399167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:20.032" endtime="20201030 15:55:20.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:20.040" endtime="20201030 15:55:20.042"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.737" endtime="20201030 15:55:20.043"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.735" endtime="20201030 15:55:20.043"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:20.047" level="INFO">${RESULT} = [{'diff': 0.0003326950000000009}, {'diff': 0.00034318100000000143}, {'diff': 0.0003415559999999998}, {'diff': 0.0003407779999999999}, {'diff': 0.0003437080000000016}, {'diff': 0.00034404199999999927},...</msg>
<status status="PASS" starttime="20201030 15:55:20.044" endtime="20201030 15:55:20.047"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:20.051" level="INFO">${ACCURACY} = {'diff': [0.0003326950000000009, 0.00034318100000000143, 0.0003415559999999998, 0.0003407779999999999, 0.0003437080000000016, 0.00034404199999999927, 0.0003406249999999972, 0.0003405970000000015, 0.00...</msg>
<status status="PASS" starttime="20201030 15:55:20.048" endtime="20201030 15:55:20.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:20.055" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201030 15:55:20.054" endtime="20201030 15:55:20.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:20.058" level="INFO">VALUE: [0.0003326950000000009, 0.00034318100000000143, 0.0003415559999999998, 0.0003407779999999999, 0.0003437080000000016, 0.00034404199999999927, 0.0003406249999999972, 0.0003405970000000015, 0.0003382090000000025, 0.0003432919999999985, 0.0003402779999999994, 0.00034012500000000015, 0.00033862499999999865, 0.0003379030000000005, 0.000340985999999998, 0.00034402800000000316, 0.00034038899999999997, 0.00034363899999999975, 0.0003419170000000041, 0.0003442500000000043, 0.00033992999999999524, 0.0003391109999999961, 0.0003432089999999971, 0.0003391119999999956, 0.0003401810000000019, 0.00033815300000000076, 0.0003414590000000023, 0.0003424720000000034, 0.00033788900000000094, 0.00033790299999999357, 0.0003438340000000012, 0.0003394999999999995, 0.0003427639999999954, 0.0003398199999999976, 0.00034337499999999993, 0.00034168099999999646, 0.0003386109999999956, 0.00033823600000000564, 0.00034231900000000065, 0.00033970800000000106, 0.0003406249999999972, 0.00033770899999999854, 0.0003434309999999982, 0.00034015300000000276, 0.0003442219999999982, 0.00034215199999999835, 0.00033804099999999726, 0.0003390840000000034, 0.0003428200000000006, 0.00033804200000000367]</msg>
<status status="PASS" starttime="20201030 15:55:20.056" endtime="20201030 15:55:20.059"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.052" endtime="20201030 15:55:20.059"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:20.063" endtime="20201030 15:55:20.082"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.061" endtime="20201030 15:55:20.083"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.060" endtime="20201030 15:55:20.083"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.682" endtime="20201030 15:55:20.083"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.681" endtime="20201030 15:55:20.084"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:20.092" endtime="20201030 15:55:20.130"></status>
</kw>
<msg timestamp="20201030 15:55:20.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:20.091" endtime="20201030 15:55:20.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:20.133" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:20.131" endtime="20201030 15:55:20.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:20.134" endtime="20201030 15:55:20.135"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.088" endtime="20201030 15:55:20.136"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.086" endtime="20201030 15:55:20.136"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:20.143" endtime="20201030 15:55:20.429"></status>
</kw>
<msg timestamp="20201030 15:55:20.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024157847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024502806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:20.141" endtime="20201030 15:55:20.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:20.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024157847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024502806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:20.433" endtime="20201030 15:55:20.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:20.441" endtime="20201030 15:55:20.443"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.139" endtime="20201030 15:55:20.443"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.137" endtime="20201030 15:55:20.444"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:20.448" level="INFO">${RESULT} = [{'diff': 0.00034495899999999885}, {'diff': 0.0003442079999999986}, {'diff': 0.0003426390000000022}, {'diff': 0.0003385550000000008}, {'diff': 0.00033838900000000144}, {'diff': 0.00034117999999999996}...</msg>
<status status="PASS" starttime="20201030 15:55:20.444" endtime="20201030 15:55:20.448"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:20.452" level="INFO">${ACCURACY} = {'diff': [0.00034495899999999885, 0.0003442079999999986, 0.0003426390000000022, 0.0003385550000000008, 0.00033838900000000144, 0.00034117999999999996, 0.0003412629999999979, 0.00034387500000000043, 0....</msg>
<status status="PASS" starttime="20201030 15:55:20.449" endtime="20201030 15:55:20.452"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:20.456" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201030 15:55:20.455" endtime="20201030 15:55:20.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:20.458" level="INFO">VALUE: [0.00034495899999999885, 0.0003442079999999986, 0.0003426390000000022, 0.0003385550000000008, 0.00033838900000000144, 0.00034117999999999996, 0.0003412629999999979, 0.00034387500000000043, 0.0003416390000000012, 0.0003432079999999976, 0.00034340299999999907, 0.00033994499999999775, 0.0003391810000000009, 0.00033912499999999915, 0.0003441120000000006, 0.000340194000000002, 0.00033780500000000005, 0.0003408469999999983, 0.00034377699999999997, 0.00033794399999999974, 0.00034441600000000017, 0.00034140200000000454, 0.0003429580000000043, 0.0003395689999999979, 0.0003433189999999947, 0.00034308300000000097, 0.00034, 0.0003436110000000006, 0.00033844400000000024, 0.00033965300000000226, 0.0003384160000000011, 0.0003379170000000001, 0.00034219500000000347, 0.00034105600000000624, 0.0003408329999999987, 0.0003405000000000005, 0.00034202800000000116, 0.0003403610000000043, 0.00034173599999999527, 0.00034084700000000523, 0.00033954199999999823, 0.00034337499999999993, 0.00034116700000000333, 0.000339097999999996, 0.00034392999999999924, 0.0003433889999999995, 0.00034073599999999427, 0.0003412360000000017, 0.00033883300000000366, 0.0003422089999999961]</msg>
<status status="PASS" starttime="20201030 15:55:20.457" endtime="20201030 15:55:20.460"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.453" endtime="20201030 15:55:20.461"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:20.464" endtime="20201030 15:55:20.484"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.463" endtime="20201030 15:55:20.484"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.462" endtime="20201030 15:55:20.485"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.084" endtime="20201030 15:55:20.485"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.084" endtime="20201030 15:55:20.485"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:20.494" endtime="20201030 15:55:20.532"></status>
</kw>
<msg timestamp="20201030 15:55:20.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:20.492" endtime="20201030 15:55:20.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:20.534" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:20.533" endtime="20201030 15:55:20.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:20.536" endtime="20201030 15:55:20.537"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.489" endtime="20201030 15:55:20.538"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.487" endtime="20201030 15:55:20.538"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:20.544" endtime="20201030 15:55:20.831"></status>
</kw>
<msg timestamp="20201030 15:55:20.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024617403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0249755, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:55:20.543" endtime="20201030 15:55:20.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:20.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024617403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0249755, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:55:20.835" endtime="20201030 15:55:20.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:20.843" endtime="20201030 15:55:20.844"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.540" endtime="20201030 15:55:20.845"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.539" endtime="20201030 15:55:20.845"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:20.849" level="INFO">${RESULT} = [{'diff': 0.00035809700000000166}, {'diff': 0.00033934700000000026}, {'diff': 0.00034255599999999733}, {'diff': 0.0003409299999999997}, {'diff': 0.00033870800000000006}, {'diff': 0.0003423200000000001...</msg>
<status status="PASS" starttime="20201030 15:55:20.846" endtime="20201030 15:55:20.849"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:20.854" level="INFO">${ACCURACY} = {'diff': [0.00035809700000000166, 0.00033934700000000026, 0.00034255599999999733, 0.0003409299999999997, 0.00033870800000000006, 0.0003423200000000001, 0.0003395139999999991, 0.00034145799999999935, 0...</msg>
<status status="PASS" starttime="20201030 15:55:20.850" endtime="20201030 15:55:20.854"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:20.858" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201030 15:55:20.857" endtime="20201030 15:55:20.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:20.861" level="INFO">VALUE: [0.00035809700000000166, 0.00033934700000000026, 0.00034255599999999733, 0.0003409299999999997, 0.00033870800000000006, 0.0003423200000000001, 0.0003395139999999991, 0.00034145799999999935, 0.0003379170000000001, 0.00033865300000000126, 0.00033938899999999897, 0.0003427920000000015, 0.0003391810000000009, 0.00033926399999999884, 0.0003390139999999986, 0.00034205500000000083, 0.0003419310000000002, 0.000342986, 0.00034222199999999967, 0.0003411250000000046, 0.00034420800000000557, 0.0003375689999999959, 0.0003440140000000036, 0.00033813899999999425, 0.0003431669999999984, 0.00033816700000000033, 0.0003392779999999984, 0.00034172299999999517, 0.00033794399999999974, 0.0003406390000000037, 0.00034373599999999727, 0.00033837500000000187, 0.0003375699999999954, 0.00034351399999999616, 0.00033932000000000406, 0.00034326400000000284, 0.0003441799999999995, 0.00034054199999999923, 0.00034408300000000197, 0.0003416379999999983, 0.00034070900000000154, 0.00033904099999999826, 0.0003440279999999962, 0.00034359700000000104, 0.0003418339999999992, 0.0003436250000000002, 0.0003436110000000006, 0.0003380689999999964, 0.00033886099999999586, 0.0003422370000000022]</msg>
<status status="PASS" starttime="20201030 15:55:20.859" endtime="20201030 15:55:20.862"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.855" endtime="20201030 15:55:20.862"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:20.866" endtime="20201030 15:55:20.885"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.864" endtime="20201030 15:55:20.886"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.863" endtime="20201030 15:55:20.886"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.486" endtime="20201030 15:55:20.886"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.485" endtime="20201030 15:55:20.886"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:20.895" endtime="20201030 15:55:20.928"></status>
</kw>
<msg timestamp="20201030 15:55:20.929" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:20.894" endtime="20201030 15:55:20.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:20.931" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:20.930" endtime="20201030 15:55:20.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:20.932" endtime="20201030 15:55:20.934"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.891" endtime="20201030 15:55:20.934"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.889" endtime="20201030 15:55:20.935"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:20.941" endtime="20201030 15:55:21.229"></status>
</kw>
<msg timestamp="20201030 15:55:21.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020096472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020429389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:20.940" endtime="20201030 15:55:21.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020096472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020429389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:21.233" endtime="20201030 15:55:21.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.241" endtime="20201030 15:55:21.242"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.937" endtime="20201030 15:55:21.243"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.935" endtime="20201030 15:55:21.243"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:21.247" level="INFO">${RESULT} = [{'diff': 0.00033291699999999855}, {'diff': 0.0003416379999999983}, {'diff': 0.000340306000000002}, {'diff': 0.00034359700000000104}, {'diff': 0.0003439439999999988}, {'diff': 0.0003413329999999992}, ...</msg>
<status status="PASS" starttime="20201030 15:55:21.244" endtime="20201030 15:55:21.247"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:21.251" level="INFO">${ACCURACY} = {'diff': [0.00033291699999999855, 0.0003416379999999983, 0.000340306000000002, 0.00034359700000000104, 0.0003439439999999988, 0.0003413329999999992, 0.00033836099999999883, 0.00033879200000000095, 0.0...</msg>
<status status="PASS" starttime="20201030 15:55:21.248" endtime="20201030 15:55:21.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.256" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201030 15:55:21.255" endtime="20201030 15:55:21.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.258" level="INFO">VALUE: [0.00033291699999999855, 0.0003416379999999983, 0.000340306000000002, 0.00034359700000000104, 0.0003439439999999988, 0.0003413329999999992, 0.00033836099999999883, 0.00033879200000000095, 0.00034076400000000034, 0.0003441659999999999, 0.00034279099999999854, 0.000342694000000001, 0.0003393330000000007, 0.00034273599999999974, 0.0003437079999999981, 0.00034190300000000104, 0.00033958300000000094, 0.0003396520000000028, 0.00034218000000000096, 0.0003406529999999998, 0.00034070900000000154, 0.00034052799999999966, 0.0003411390000000007, 0.00033926399999999884, 0.00034062500000000065, 0.00033969500000000097, 0.0003384449999999997, 0.0003383190000000001, 0.00033943100000000115, 0.0003433469999999973, 0.00034194499999999975, 0.00034072200000000163, 0.0003430409999999953, 0.0003389450000000002, 0.0003431110000000001, 0.0003400689999999984, 0.000343777999999996, 0.00033937499999999593, 0.000339403000000002, 0.0003414579999999959, 0.0003422219999999962, 0.00034, 0.0003404170000000026, 0.00034131899999999965, 0.0003430140000000026, 0.0003414720000000024, 0.0003383329999999962, 0.0003415279999999937, 0.00034304100000000226, 0.000343889]</msg>
<status status="PASS" starttime="20201030 15:55:21.257" endtime="20201030 15:55:21.259"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.252" endtime="20201030 15:55:21.259"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:21.263" endtime="20201030 15:55:21.283"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.261" endtime="20201030 15:55:21.283"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.260" endtime="20201030 15:55:21.284"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.887" endtime="20201030 15:55:21.284"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.887" endtime="20201030 15:55:21.284"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.293" endtime="20201030 15:55:21.336"></status>
</kw>
<msg timestamp="20201030 15:55:21.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:21.291" endtime="20201030 15:55:21.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.339" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:21.337" endtime="20201030 15:55:21.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.340" endtime="20201030 15:55:21.341"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.289" endtime="20201030 15:55:21.342"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.286" endtime="20201030 15:55:21.342"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.349" endtime="20201030 15:55:21.634"></status>
</kw>
<msg timestamp="20201030 15:55:21.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024652111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024986556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:21.347" endtime="20201030 15:55:21.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024652111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024986556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:21.638" endtime="20201030 15:55:21.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.646" endtime="20201030 15:55:21.648"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.345" endtime="20201030 15:55:21.649"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.343" endtime="20201030 15:55:21.649"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:21.653" level="INFO">${RESULT} = [{'diff': 0.0003344449999999992}, {'diff': 0.000343195000000001}, {'diff': 0.00034297300000000336}, {'diff': 0.00034359700000000104}, {'diff': 0.00033926399999999884}, {'diff': 0.0003391529999999983},...</msg>
<status status="PASS" starttime="20201030 15:55:21.650" endtime="20201030 15:55:21.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:21.657" level="INFO">${ACCURACY} = {'diff': [0.0003344449999999992, 0.000343195000000001, 0.00034297300000000336, 0.00034359700000000104, 0.00033926399999999884, 0.0003391529999999983, 0.00034007000000000134, 0.0003405420000000027, 0.0...</msg>
<status status="PASS" starttime="20201030 15:55:21.654" endtime="20201030 15:55:21.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.661" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201030 15:55:21.660" endtime="20201030 15:55:21.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.664" level="INFO">VALUE: [0.0003344449999999992, 0.000343195000000001, 0.00034297300000000336, 0.00034359700000000104, 0.00033926399999999884, 0.0003391529999999983, 0.00034007000000000134, 0.0003405420000000027, 0.00034145799999999935, 0.00033813799999999825, 0.0003392229999999996, 0.0003391519999999988, 0.0003419729999999989, 0.00033970899999999707, 0.00034268000000000146, 0.00033907000000000034, 0.0003415979999999985, 0.00034258399999999994, 0.0003409589999999983, 0.00034359700000000104, 0.0003387359999999992, 0.00033908299999999697, 0.0003398190000000051, 0.0003420279999999942, 0.00033865300000000126, 0.0003439579999999984, 0.00034272200000000363, 0.00034108399999999844, 0.00034287499999999943, 0.0003439439999999988, 0.0003401390000000032, 0.00034213899999999825, 0.00033959800000000345, 0.00033870800000000006, 0.0003435690000000019, 0.00033886200000000227, 0.0003431249999999997, 0.0003425140000000021, 0.0003397919999999985, 0.00034152800000000066, 0.0003379300000000002, 0.0003379030000000005, 0.0003430140000000026, 0.0003434579999999979, 0.00033970800000000106, 0.0003386390000000017, 0.00033972200000000063, 0.00033937500000000287, 0.0003433189999999947, 0.0003378050000000035]</msg>
<status status="PASS" starttime="20201030 15:55:21.662" endtime="20201030 15:55:21.665"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.658" endtime="20201030 15:55:21.666"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:21.669" endtime="20201030 15:55:21.689"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.668" endtime="20201030 15:55:21.690"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.667" endtime="20201030 15:55:21.690"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.285" endtime="20201030 15:55:21.690"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.284" endtime="20201030 15:55:21.690"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.699" endtime="20201030 15:55:21.738"></status>
</kw>
<msg timestamp="20201030 15:55:21.738" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:21.698" endtime="20201030 15:55:21.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.741" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:21.739" endtime="20201030 15:55:21.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.742" endtime="20201030 15:55:21.743"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.695" endtime="20201030 15:55:21.744"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.693" endtime="20201030 15:55:21.744"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.751" endtime="20201030 15:55:22.036"></status>
</kw>
<msg timestamp="20201030 15:55:22.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025124875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025466583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:21.749" endtime="20201030 15:55:22.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025124875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025466583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:22.040" endtime="20201030 15:55:22.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:22.048" endtime="20201030 15:55:22.049"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.747" endtime="20201030 15:55:22.050"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.745" endtime="20201030 15:55:22.050"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:22.054" level="INFO">${RESULT} = [{'diff': 0.0003417079999999996}, {'diff': 0.00034152800000000066}, {'diff': 0.00034026399999999984}, {'diff': 0.0003386810000000004}, {'diff': 0.0003423200000000001}, {'diff': 0.0003381389999999977},...</msg>
<status status="PASS" starttime="20201030 15:55:22.051" endtime="20201030 15:55:22.055"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:22.059" level="INFO">${ACCURACY} = {'diff': [0.0003417079999999996, 0.00034152800000000066, 0.00034026399999999984, 0.0003386810000000004, 0.0003423200000000001, 0.0003381389999999977, 0.0003401519999999998, 0.00033884699999999976, 0.0...</msg>
<status status="PASS" starttime="20201030 15:55:22.055" endtime="20201030 15:55:22.059"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.064" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201030 15:55:22.063" endtime="20201030 15:55:22.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.066" level="INFO">VALUE: [0.0003417079999999996, 0.00034152800000000066, 0.00034026399999999984, 0.0003386810000000004, 0.0003423200000000001, 0.0003381389999999977, 0.0003401519999999998, 0.00033884699999999976, 0.00034336199999999983, 0.00033772199999999863, 0.0003435139999999996, 0.00033934799999999973, 0.00034190300000000104, 0.0003381250000000016, 0.00034365199999999985, 0.00034095799999999885, 0.0003377359999999982, 0.0003382779999999974, 0.00033848599999999895, 0.00034240299999999807, 0.00034387500000000043, 0.0003439449999999983, 0.00034216700000000433, 0.0003391250000000026, 0.00034004099999999926, 0.0003413889999999975, 0.00033794399999999974, 0.00033898599999999945, 0.00034268099999999746, 0.00033911100000000305, 0.00034352699999999625, 0.0003418469999999993, 0.00033815300000000076, 0.0003392909999999985, 0.00034258399999999994, 0.0003439720000000049, 0.0003394160000000021, 0.0003423050000000011, 0.0003381250000000016, 0.00034301399999999566, 0.0003426109999999996, 0.00034208299999999997, 0.0003407500000000008, 0.000338305000000004, 0.0003407360000000012, 0.00034231900000000065, 0.0003424729999999959, 0.0003426810000000044, 0.0003425000000000025, 0.0003377640000000043]</msg>
<status status="PASS" starttime="20201030 15:55:22.065" endtime="20201030 15:55:22.067"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.060" endtime="20201030 15:55:22.067"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:22.071" endtime="20201030 15:55:22.090"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.069" endtime="20201030 15:55:22.091"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.068" endtime="20201030 15:55:22.091"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.692" endtime="20201030 15:55:22.092"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.691" endtime="20201030 15:55:22.092"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:22.100" endtime="20201030 15:55:22.134"></status>
</kw>
<msg timestamp="20201030 15:55:22.135" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:22.099" endtime="20201030 15:55:22.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:22.136" endtime="20201030 15:55:22.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:22.138" endtime="20201030 15:55:22.140"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.096" endtime="20201030 15:55:22.140"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.094" endtime="20201030 15:55:22.141"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:22.147" endtime="20201030 15:55:22.434"></status>
</kw>
<msg timestamp="20201030 15:55:22.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020486389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020831472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:22.146" endtime="20201030 15:55:22.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020486389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020831472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:22.438" endtime="20201030 15:55:22.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:22.446" endtime="20201030 15:55:22.448"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.143" endtime="20201030 15:55:22.448"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.142" endtime="20201030 15:55:22.449"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:22.453" level="INFO">${RESULT} = [{'diff': 0.0003450829999999995}, {'diff': 0.00034141599999999717}, {'diff': 0.0003433470000000008}, {'diff': 0.0003415699999999994}, {'diff': 0.00034018099999999843}, {'diff': 0.0003419300000000007},...</msg>
<status status="PASS" starttime="20201030 15:55:22.449" endtime="20201030 15:55:22.453"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:22.457" level="INFO">${ACCURACY} = {'diff': [0.0003450829999999995, 0.00034141599999999717, 0.0003433470000000008, 0.0003415699999999994, 0.00034018099999999843, 0.0003419300000000007, 0.0003378199999999991, 0.00033843100000000015, 0.0...</msg>
<status status="PASS" starttime="20201030 15:55:22.454" endtime="20201030 15:55:22.457"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.461" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201030 15:55:22.460" endtime="20201030 15:55:22.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.463" level="INFO">VALUE: [0.0003450829999999995, 0.00034141599999999717, 0.0003433470000000008, 0.0003415699999999994, 0.00034018099999999843, 0.0003419300000000007, 0.0003378199999999991, 0.00033843100000000015, 0.0003406110000000011, 0.00034216700000000086, 0.00034287499999999943, 0.00034154200000000023, 0.00034130599999999955, 0.00034002800000000263, 0.00034313899999999925, 0.00034252800000000166, 0.00034088900000000047, 0.0003421530000000013, 0.00033954100000000223, 0.0003405559999999988, 0.0003400560000000018, 0.0003402230000000006, 0.0003432499999999998, 0.0003402079999999981, 0.00033812499999999815, 0.00033919500000000047, 0.00033806999999999934, 0.00033784699999999876, 0.0003392499999999993, 0.0003386520000000018, 0.0003401109999999971, 0.00034387500000000043, 0.0003425000000000025, 0.0003424580000000038, 0.00034413900000000025, 0.0003391810000000009, 0.00034281900000000115, 0.0003400139999999996, 0.0003444449999999988, 0.0003384300000000007, 0.00034033400000000463, 0.0003405559999999988, 0.00033826399999999784, 0.00033872199999999963, 0.00034308300000000097, 0.00033890200000000203, 0.00033936200000000277, 0.0003442360000000047, 0.0003441110000000011, 0.00034263899999999875]</msg>
<status status="PASS" starttime="20201030 15:55:22.462" endtime="20201030 15:55:22.468"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.457" endtime="20201030 15:55:22.469"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:22.472" endtime="20201030 15:55:22.492"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.471" endtime="20201030 15:55:22.493"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.470" endtime="20201030 15:55:22.493"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.093" endtime="20201030 15:55:22.493"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.092" endtime="20201030 15:55:22.493"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:22.502" endtime="20201030 15:55:22.536"></status>
</kw>
<msg timestamp="20201030 15:55:22.537" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:22.500" endtime="20201030 15:55:22.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:22.538" endtime="20201030 15:55:22.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:22.540" endtime="20201030 15:55:22.542"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.498" endtime="20201030 15:55:22.543"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.496" endtime="20201030 15:55:22.543"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:22.549" endtime="20201030 15:55:22.836"></status>
</kw>
<msg timestamp="20201030 15:55:22.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021004097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021357653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:22.548" endtime="20201030 15:55:22.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021004097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021357653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:22.840" endtime="20201030 15:55:22.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:22.848" endtime="20201030 15:55:22.849"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.545" endtime="20201030 15:55:22.850"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.544" endtime="20201030 15:55:22.850"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:22.854" level="INFO">${RESULT} = [{'diff': 0.0003535560000000014}, {'diff': 0.0003405270000000002}, {'diff': 0.00034244500000000025}, {'diff': 0.0003428200000000006}, {'diff': 0.00033912499999999915}, {'diff': 0.0003411530000000003},...</msg>
<status status="PASS" starttime="20201030 15:55:22.851" endtime="20201030 15:55:22.854"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:22.858" level="INFO">${ACCURACY} = {'diff': [0.0003535560000000014, 0.0003405270000000002, 0.00034244500000000025, 0.0003428200000000006, 0.00033912499999999915, 0.0003411530000000003, 0.00033829200000000045, 0.0003433889999999995, 0.0...</msg>
<status status="PASS" starttime="20201030 15:55:22.855" endtime="20201030 15:55:22.858"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.863" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201030 15:55:22.862" endtime="20201030 15:55:22.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.865" level="INFO">VALUE: [0.0003535560000000014, 0.0003405270000000002, 0.00034244500000000025, 0.0003428200000000006, 0.00033912499999999915, 0.0003411530000000003, 0.00033829200000000045, 0.0003433889999999995, 0.00034318100000000143, 0.0003420409999999978, 0.0003425700000000004, 0.0003436529999999993, 0.00033797300000000183, 0.00033856900000000037, 0.00034273599999999974, 0.00034186100000000233, 0.0003393330000000007, 0.00033820799999999956, 0.00034266700000000136, 0.0003416249999999982, 0.0003411660000000004, 0.0003411390000000007, 0.00034012500000000015, 0.0003414300000000002, 0.00034091600000000014, 0.00034140300000000054, 0.0003396810000000014, 0.000340097000000001, 0.00033841599999999764, 0.00034255500000000133, 0.00034369399999999856, 0.0003404580000000018, 0.00034301399999999566, 0.00034102800000000016, 0.00033969500000000097, 0.00033808399999999544, 0.00033966700000000183, 0.00034387500000000043, 0.00034186099999999886, 0.0003443470000000018, 0.0003388050000000045, 0.00034276400000000234, 0.00034308400000000044, 0.0003394170000000016, 0.00033782000000000256, 0.00033844400000000024, 0.00034381900000000215, 0.00034402699999999675, 0.000339194000000001, 0.00034074999999999384]</msg>
<status status="PASS" starttime="20201030 15:55:22.864" endtime="20201030 15:55:22.867"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.859" endtime="20201030 15:55:22.867"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:22.871" endtime="20201030 15:55:22.890"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.869" endtime="20201030 15:55:22.891"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.868" endtime="20201030 15:55:22.891"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.494" endtime="20201030 15:55:22.891"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.494" endtime="20201030 15:55:22.892"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:22.900" endtime="20201030 15:55:22.939"></status>
</kw>
<msg timestamp="20201030 15:55:22.939" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:22.899" endtime="20201030 15:55:22.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.942" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:22.940" endtime="20201030 15:55:22.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:22.943" endtime="20201030 15:55:22.945"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.896" endtime="20201030 15:55:22.945"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.894" endtime="20201030 15:55:22.945"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:22.952" endtime="20201030 15:55:23.238"></status>
</kw>
<msg timestamp="20201030 15:55:23.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024527042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024887153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:22.950" endtime="20201030 15:55:23.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024527042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024887153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:23.242" endtime="20201030 15:55:23.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:23.250" endtime="20201030 15:55:23.252"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.948" endtime="20201030 15:55:23.252"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.946" endtime="20201030 15:55:23.253"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:23.256" level="INFO">${RESULT} = [{'diff': 0.00036011099999999976}, {'diff': 0.00033866700000000083}, {'diff': 0.00034115199999999735}, {'diff': 0.00034380600000000205}, {'diff': 0.0003394169999999981}, {'diff': 0.0003382639999999978...</msg>
<status status="PASS" starttime="20201030 15:55:23.253" endtime="20201030 15:55:23.257"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:23.261" level="INFO">${ACCURACY} = {'diff': [0.00036011099999999976, 0.00033866700000000083, 0.00034115199999999735, 0.00034380600000000205, 0.0003394169999999981, 0.00033826399999999784, 0.00034241599999999817, 0.00034354100000000276,...</msg>
<status status="PASS" starttime="20201030 15:55:23.257" endtime="20201030 15:55:23.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.266" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201030 15:55:23.265" endtime="20201030 15:55:23.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.268" level="INFO">VALUE: [0.00036011099999999976, 0.00033866700000000083, 0.00034115199999999735, 0.00034380600000000205, 0.0003394169999999981, 0.00033826399999999784, 0.00034241599999999817, 0.00034354100000000276, 0.00033806999999999934, 0.00033786099999999833, 0.0003424859999999995, 0.0003382640000000013, 0.0003443330000000022, 0.00034140200000000107, 0.0003417920000000005, 0.00034047300000000086, 0.0003431249999999997, 0.00033820799999999956, 0.00033959699999999704, 0.00033920800000000056, 0.0003438050000000026, 0.00034, 0.00034269399999999756, 0.0003379579999999993, 0.00034216700000000433, 0.0003429030000000055, 0.0003436110000000006, 0.00034193100000000365, 0.00033802799999999716, 0.0003388049999999976, 0.0003426669999999979, 0.0003439450000000052, 0.00034359700000000104, 0.00034365300000000626, 0.0003381250000000016, 0.00034422200000000513, 0.00033877800000000485, 0.0003433200000000011, 0.00033959699999999704, 0.00034076400000000034, 0.0003398199999999976, 0.0003430130000000031, 0.0003389030000000015, 0.0003438470000000013, 0.0003405699999999984, 0.0003420699999999999, 0.0003421390000000052, 0.00034208299999999997, 0.00033788900000000094, 0.0003388610000000028]</msg>
<status status="PASS" starttime="20201030 15:55:23.267" endtime="20201030 15:55:23.269"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.262" endtime="20201030 15:55:23.269"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:23.273" endtime="20201030 15:55:23.293"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.272" endtime="20201030 15:55:23.293"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.270" endtime="20201030 15:55:23.293"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.893" endtime="20201030 15:55:23.294"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.892" endtime="20201030 15:55:23.294"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:23.303" endtime="20201030 15:55:23.341"></status>
</kw>
<msg timestamp="20201030 15:55:23.341" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:23.301" endtime="20201030 15:55:23.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.343" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:23.342" endtime="20201030 15:55:23.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:23.345" endtime="20201030 15:55:23.346"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.298" endtime="20201030 15:55:23.347"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.296" endtime="20201030 15:55:23.347"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:23.354" endtime="20201030 15:55:23.640"></status>
</kw>
<msg timestamp="20201030 15:55:23.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024131069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024490514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:23.352" endtime="20201030 15:55:23.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024131069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024490514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:23.644" endtime="20201030 15:55:23.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:23.653" endtime="20201030 15:55:23.654"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.349" endtime="20201030 15:55:23.655"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.348" endtime="20201030 15:55:23.655"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:23.659" level="INFO">${RESULT} = [{'diff': 0.0003594449999999999}, {'diff': 0.0003386810000000004}, {'diff': 0.0003424310000000007}, {'diff': 0.0003440140000000001}, {'diff': 0.0003409439999999993}, {'diff': 0.00033876399999999834}, ...</msg>
<status status="PASS" starttime="20201030 15:55:23.656" endtime="20201030 15:55:23.659"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:23.663" level="INFO">${ACCURACY} = {'diff': [0.0003594449999999999, 0.0003386810000000004, 0.0003424310000000007, 0.0003440140000000001, 0.0003409439999999993, 0.00033876399999999834, 0.0003432369999999997, 0.0003391109999999996, 0.000...</msg>
<status status="PASS" starttime="20201030 15:55:23.660" endtime="20201030 15:55:23.663"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.667" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201030 15:55:23.666" endtime="20201030 15:55:23.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.670" level="INFO">VALUE: [0.0003594449999999999, 0.0003386810000000004, 0.0003424310000000007, 0.0003440140000000001, 0.0003409439999999993, 0.00033876399999999834, 0.0003432369999999997, 0.0003391109999999996, 0.00033794399999999974, 0.000341097000000002, 0.0003399439999999983, 0.00034172200000000263, 0.00034013800000000025, 0.00033930500000000155, 0.00034213899999999825, 0.0003379579999999993, 0.0003399450000000012, 0.00034017999999999896, 0.00034390299999999957, 0.00033940299999999854, 0.00034263899999999875, 0.0003405000000000005, 0.00033782000000000256, 0.00033886099999999586, 0.0003389300000000012, 0.00034252800000000166, 0.00033865300000000126, 0.0003429590000000038, 0.0003403469999999978, 0.0003443329999999953, 0.00033834700000000273, 0.0003428470000000003, 0.0003396109999999966, 0.00034141699999999664, 0.0003432500000000033, 0.00033884700000000323, 0.0003390269999999987, 0.00034181900000000015, 0.0003430279999999952, 0.0003441659999999999, 0.0003433470000000008, 0.0003417500000000018, 0.0003404160000000031, 0.00034120800000000256, 0.0003428330000000007, 0.00034040299999999607, 0.00034259700000000004, 0.00034287499999999943, 0.0003381809999999999, 0.00034409700000000154]</msg>
<status status="PASS" starttime="20201030 15:55:23.668" endtime="20201030 15:55:23.671"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.664" endtime="20201030 15:55:23.671"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:23.675" endtime="20201030 15:55:23.694"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.673" endtime="20201030 15:55:23.695"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.672" endtime="20201030 15:55:23.695"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.295" endtime="20201030 15:55:23.696"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.294" endtime="20201030 15:55:23.696"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:23.704" endtime="20201030 15:55:23.743"></status>
</kw>
<msg timestamp="20201030 15:55:23.744" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:23.703" endtime="20201030 15:55:23.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.746" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:23.745" endtime="20201030 15:55:23.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:23.747" endtime="20201030 15:55:23.749"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.700" endtime="20201030 15:55:23.750"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.698" endtime="20201030 15:55:23.750"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:23.757" endtime="20201030 15:55:24.042"></status>
</kw>
<msg timestamp="20201030 15:55:24.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024229875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024570833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:23.755" endtime="20201030 15:55:24.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024229875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024570833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:24.046" endtime="20201030 15:55:24.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.054" endtime="20201030 15:55:24.056"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.752" endtime="20201030 15:55:24.056"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.751" endtime="20201030 15:55:24.056"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:24.060" level="INFO">${RESULT} = [{'diff': 0.00034095799999999885}, {'diff': 0.0003437370000000002}, {'diff': 0.0003426660000000019}, {'diff': 0.0003428469999999968}, {'diff': 0.00034043100000000215}, {'diff': 0.0003415139999999976},...</msg>
<status status="PASS" starttime="20201030 15:55:24.057" endtime="20201030 15:55:24.061"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:24.065" level="INFO">${ACCURACY} = {'diff': [0.00034095799999999885, 0.0003437370000000002, 0.0003426660000000019, 0.0003428469999999968, 0.00034043100000000215, 0.0003415139999999976, 0.0003405000000000005, 0.0003379579999999993, 0.00...</msg>
<status status="PASS" starttime="20201030 15:55:24.062" endtime="20201030 15:55:24.065"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.069" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201030 15:55:24.068" endtime="20201030 15:55:24.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.071" level="INFO">VALUE: [0.00034095799999999885, 0.0003437370000000002, 0.0003426660000000019, 0.0003428469999999968, 0.00034043100000000215, 0.0003415139999999976, 0.0003405000000000005, 0.0003379579999999993, 0.00034358300000000147, 0.00033870800000000006, 0.0003430139999999991, 0.0003420139999999981, 0.00034236100000000283, 0.00034323600000000024, 0.00034384800000000076, 0.0003435980000000005, 0.00034108399999999844, 0.0003412079999999991, 0.00034006900000000187, 0.00034211099999999564, 0.0003417780000000009, 0.0003435549999999954, 0.0003410140000000006, 0.0003416249999999982, 0.00033800000000000496, 0.0003403610000000043, 0.00034340299999999907, 0.0003379030000000005, 0.00034337499999999993, 0.0003377779999999969, 0.0003429300000000052, 0.00034119500000000247, 0.00034209699999999954, 0.0003411529999999968, 0.0003418050000000006, 0.0003437089999999976, 0.0003406109999999976, 0.00034316600000000586, 0.00033884700000000323, 0.0003393060000000045, 0.00034276400000000234, 0.0003439309999999987, 0.0003432780000000024, 0.00034359700000000104, 0.0003410830000000059, 0.0003393329999999972, 0.0003439020000000001, 0.0003443050000000031, 0.00034226400000000184, 0.00034297300000000336]</msg>
<status status="PASS" starttime="20201030 15:55:24.070" endtime="20201030 15:55:24.073"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.065" endtime="20201030 15:55:24.074"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:24.077" endtime="20201030 15:55:24.097"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.076" endtime="20201030 15:55:24.097"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.075" endtime="20201030 15:55:24.098"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.697" endtime="20201030 15:55:24.098"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.696" endtime="20201030 15:55:24.098"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.107" endtime="20201030 15:55:24.144"></status>
</kw>
<msg timestamp="20201030 15:55:24.144" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:24.105" endtime="20201030 15:55:24.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.147" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:24.145" endtime="20201030 15:55:24.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.148" endtime="20201030 15:55:24.149"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.103" endtime="20201030 15:55:24.150"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.101" endtime="20201030 15:55:24.150"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.157" endtime="20201030 15:55:24.444"></status>
</kw>
<msg timestamp="20201030 15:55:24.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023810014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024142694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:24.155" endtime="20201030 15:55:24.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023810014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024142694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:24.448" endtime="20201030 15:55:24.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.456" endtime="20201030 15:55:24.457"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.153" endtime="20201030 15:55:24.458"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.151" endtime="20201030 15:55:24.458"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:24.462" level="INFO">${RESULT} = [{'diff': 0.0003326799999999984}, {'diff': 0.0003426249999999992}, {'diff': 0.0003412360000000017}, {'diff': 0.00034344500000000125}, {'diff': 0.0003404309999999987}, {'diff': 0.00034108399999999844},...</msg>
<status status="PASS" starttime="20201030 15:55:24.459" endtime="20201030 15:55:24.462"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:24.467" level="INFO">${ACCURACY} = {'diff': [0.0003326799999999984, 0.0003426249999999992, 0.0003412360000000017, 0.00034344500000000125, 0.0003404309999999987, 0.00034108399999999844, 0.0003391810000000009, 0.0003411109999999981, 0.00...</msg>
<status status="PASS" starttime="20201030 15:55:24.463" endtime="20201030 15:55:24.467"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.471" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201030 15:55:24.470" endtime="20201030 15:55:24.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.474" level="INFO">VALUE: [0.0003326799999999984, 0.0003426249999999992, 0.0003412360000000017, 0.00034344500000000125, 0.0003404309999999987, 0.00034108399999999844, 0.0003391810000000009, 0.0003411109999999981, 0.0003416530000000008, 0.0003399160000000026, 0.0003408750000000009, 0.00033811199999999805, 0.0003441250000000007, 0.0003384299999999972, 0.000342888999999999, 0.0003391520000000023, 0.00034163899999999775, 0.0003383190000000001, 0.0003407779999999999, 0.00034133400000000216, 0.00033804099999999726, 0.00034174999999999484, 0.0003381250000000016, 0.0003376250000000011, 0.000338194, 0.00033984700000000423, 0.0003405000000000005, 0.00034309700000000054, 0.0003397779999999989, 0.0003399580000000013, 0.00034286099999999986, 0.00033965300000000226, 0.00034159699999999904, 0.000341000000000001, 0.00034404100000000326, 0.000341791000000001, 0.0003382779999999974, 0.0003430140000000026, 0.0003443050000000031, 0.0003392499999999993, 0.00034316700000000533, 0.00034272200000000363, 0.00034240299999999807, 0.0003425279999999947, 0.0003401250000000036, 0.00034154200000000023, 0.00034123599999999477, 0.0003406390000000037, 0.00034376299999999693, 0.00033841599999999417]</msg>
<status status="PASS" starttime="20201030 15:55:24.473" endtime="20201030 15:55:24.475"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.468" endtime="20201030 15:55:24.475"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:24.479" endtime="20201030 15:55:24.498"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.477" endtime="20201030 15:55:24.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.476" endtime="20201030 15:55:24.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.099" endtime="20201030 15:55:24.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.099" endtime="20201030 15:55:24.499"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.508" endtime="20201030 15:55:24.545"></status>
</kw>
<msg timestamp="20201030 15:55:24.546" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:24.507" endtime="20201030 15:55:24.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.548" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:24.547" endtime="20201030 15:55:24.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.549" endtime="20201030 15:55:24.551"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.504" endtime="20201030 15:55:24.552"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.502" endtime="20201030 15:55:24.552"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.558" endtime="20201030 15:55:24.845"></status>
</kw>
<msg timestamp="20201030 15:55:24.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024328639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024665542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:24.557" endtime="20201030 15:55:24.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024328639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024665542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:24.849" endtime="20201030 15:55:24.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.857" endtime="20201030 15:55:24.859"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.554" endtime="20201030 15:55:24.860"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.553" endtime="20201030 15:55:24.860"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:24.864" level="INFO">${RESULT} = [{'diff': 0.0003369029999999995}, {'diff': 0.0003434309999999982}, {'diff': 0.0003380700000000028}, {'diff': 0.0003435980000000005}, {'diff': 0.0003417499999999983}, {'diff': 0.00033911100000000305}, ...</msg>
<status status="PASS" starttime="20201030 15:55:24.861" endtime="20201030 15:55:24.864"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:24.868" level="INFO">${ACCURACY} = {'diff': [0.0003369029999999995, 0.0003434309999999982, 0.0003380700000000028, 0.0003435980000000005, 0.0003417499999999983, 0.00033911100000000305, 0.0003432079999999976, 0.00034038899999999997, 0.00...</msg>
<status status="PASS" starttime="20201030 15:55:24.865" endtime="20201030 15:55:24.868"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.872" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201030 15:55:24.871" endtime="20201030 15:55:24.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.875" level="INFO">VALUE: [0.0003369029999999995, 0.0003434309999999982, 0.0003380700000000028, 0.0003435980000000005, 0.0003417499999999983, 0.00033911100000000305, 0.0003432079999999976, 0.00034038899999999997, 0.00034190200000000157, 0.00033798699999999793, 0.0003433889999999995, 0.00033790299999999704, 0.0003397499999999998, 0.0003394580000000008, 0.00033788900000000094, 0.0003384170000000006, 0.00033880500000000105, 0.0003396519999999993, 0.00034404199999999927, 0.00033820899999999904, 0.00033958299999999747, 0.0003440140000000036, 0.00034011100000000405, 0.0003414580000000028, 0.0003385559999999968, 0.00034122200000000213, 0.0003430700000000009, 0.0003399720000000009, 0.0003403469999999978, 0.00033938900000000244, 0.0003425560000000008, 0.0003390689999999974, 0.00034055499999999933, 0.00034363899999999975, 0.00033961100000000355, 0.0003418339999999992, 0.0003426249999999992, 0.0003422779999999945, 0.00034287499999999943, 0.00034, 0.0003442219999999982, 0.0003384589999999993, 0.0003442219999999982, 0.00034036099999999736, 0.00033938900000000244, 0.00034258399999999994, 0.00034276300000000287, 0.00033826299999999837, 0.0003381390000000012, 0.000337999999999998]</msg>
<status status="PASS" starttime="20201030 15:55:24.873" endtime="20201030 15:55:24.875"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.869" endtime="20201030 15:55:24.876"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:24.880" endtime="20201030 15:55:24.899"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.878" endtime="20201030 15:55:24.900"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.877" endtime="20201030 15:55:24.900"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.500" endtime="20201030 15:55:24.900"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.500" endtime="20201030 15:55:24.901"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.909" endtime="20201030 15:55:24.948"></status>
</kw>
<msg timestamp="20201030 15:55:24.949" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:24.908" endtime="20201030 15:55:24.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.951" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:24.950" endtime="20201030 15:55:24.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.953" endtime="20201030 15:55:24.954"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.905" endtime="20201030 15:55:24.955"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.903" endtime="20201030 15:55:24.955"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.962" endtime="20201030 15:55:25.247"></status>
</kw>
<msg timestamp="20201030 15:55:25.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025254042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025590583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:24.960" endtime="20201030 15:55:25.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025254042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025590583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:25.251" endtime="20201030 15:55:25.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:25.259" endtime="20201030 15:55:25.261"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.957" endtime="20201030 15:55:25.261"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.956" endtime="20201030 15:55:25.262"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:25.266" level="INFO">${RESULT} = [{'diff': 0.00033654099999999923}, {'diff': 0.0003424589999999998}, {'diff': 0.00034118099999999943}, {'diff': 0.0003413750000000014}, {'diff': 0.0003413750000000014}, {'diff': 0.000343582999999998}, ...</msg>
<status status="PASS" starttime="20201030 15:55:25.263" endtime="20201030 15:55:25.266"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:25.270" level="INFO">${ACCURACY} = {'diff': [0.00033654099999999923, 0.0003424589999999998, 0.00034118099999999943, 0.0003413750000000014, 0.0003413750000000014, 0.000343582999999998, 0.0003389160000000016, 0.0003417079999999996, 0.000...</msg>
<status status="PASS" starttime="20201030 15:55:25.267" endtime="20201030 15:55:25.270"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.274" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201030 15:55:25.273" endtime="20201030 15:55:25.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.276" level="INFO">VALUE: [0.00033654099999999923, 0.0003424589999999998, 0.00034118099999999943, 0.0003413750000000014, 0.0003413750000000014, 0.000343582999999998, 0.0003389160000000016, 0.0003417079999999996, 0.00034288900000000247, 0.0003402779999999994, 0.0003409309999999992, 0.0003430409999999988, 0.0003437079999999981, 0.00033872199999999963, 0.00033820799999999956, 0.0003410559999999993, 0.00033880500000000105, 0.0003389580000000003, 0.0003436110000000006, 0.0003408049999999996, 0.00034036099999999736, 0.00034319499999999753, 0.00033866700000000083, 0.0003416380000000052, 0.00034377700000000344, 0.0003400269999999997, 0.0003413889999999975, 0.0003382499999999983, 0.00034266700000000483, 0.00034423599999999777, 0.00034301399999999566, 0.0003383610000000023, 0.0003438880000000005, 0.00033856900000000384, 0.0003385979999999955, 0.0003419729999999954, 0.00034237499999999893, 0.000341777999999994, 0.00034174999999999484, 0.0003406800000000029, 0.00034004099999999926, 0.0003384300000000007, 0.0003420549999999939, 0.0003423469999999998, 0.00034231900000000065, 0.00033804199999999673, 0.00034108299999999897, 0.0003399450000000012, 0.00034418099999999896, 0.0003422500000000023]</msg>
<status status="PASS" starttime="20201030 15:55:25.275" endtime="20201030 15:55:25.278"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.270" endtime="20201030 15:55:25.278"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:25.282" endtime="20201030 15:55:25.302"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.281" endtime="20201030 15:55:25.302"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.279" endtime="20201030 15:55:25.303"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.901" endtime="20201030 15:55:25.303"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.901" endtime="20201030 15:55:25.303"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:25.312" endtime="20201030 15:55:25.350"></status>
</kw>
<msg timestamp="20201030 15:55:25.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:25.310" endtime="20201030 15:55:25.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.353" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:25.352" endtime="20201030 15:55:25.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:25.354" endtime="20201030 15:55:25.356"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.308" endtime="20201030 15:55:25.356"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.305" endtime="20201030 15:55:25.357"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:25.363" endtime="20201030 15:55:25.650"></status>
</kw>
<msg timestamp="20201030 15:55:25.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024688222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025037917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:25.362" endtime="20201030 15:55:25.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024688222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025037917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:25.654" endtime="20201030 15:55:25.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:25.662" endtime="20201030 15:55:25.664"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.359" endtime="20201030 15:55:25.664"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.357" endtime="20201030 15:55:25.665"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:25.669" level="INFO">${RESULT} = [{'diff': 0.00034969500000000056}, {'diff': 0.00034086099999999786}, {'diff': 0.00034437500000000093}, {'diff': 0.0003424589999999998}, {'diff': 0.00034261200000000255}, {'diff': 0.0003388609999999993...</msg>
<status status="PASS" starttime="20201030 15:55:25.666" endtime="20201030 15:55:25.669"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:25.673" level="INFO">${ACCURACY} = {'diff': [0.00034969500000000056, 0.00034086099999999786, 0.00034437500000000093, 0.0003424589999999998, 0.00034261200000000255, 0.00033886099999999933, 0.000343694000000002, 0.00033784699999999876, 0...</msg>
<status status="PASS" starttime="20201030 15:55:25.670" endtime="20201030 15:55:25.674"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.678" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201030 15:55:25.677" endtime="20201030 15:55:25.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.681" level="INFO">VALUE: [0.00034969500000000056, 0.00034086099999999786, 0.00034437500000000093, 0.0003424589999999998, 0.00034261200000000255, 0.00033886099999999933, 0.000343694000000002, 0.00033784699999999876, 0.0003433200000000011, 0.00034002799999999916, 0.0003387499999999988, 0.0003429310000000012, 0.00034380600000000205, 0.0003410420000000032, 0.0003405559999999988, 0.0003389450000000002, 0.0003402779999999994, 0.00034055499999999933, 0.00034226400000000184, 0.00034037499999999693, 0.00034409700000000154, 0.00034305500000000183, 0.00033911100000000305, 0.0003408480000000047, 0.0003392920000000049, 0.00034072200000000163, 0.0003426250000000061, 0.00033802700000000463, 0.0003388610000000028, 0.00034241699999999764, 0.0003420560000000003, 0.00033984700000000423, 0.00033798599999999845, 0.0003420140000000016, 0.00033838800000000196, 0.00033926399999999884, 0.00034136099999999836, 0.00034369499999999803, 0.00034429199999999605, 0.00033969500000000097, 0.00034331900000000165, 0.0003428470000000003, 0.0003409309999999957, 0.00033859699999999604, 0.00034308300000000097, 0.00034087499999999743, 0.00034290299999999857, 0.0003423339999999997, 0.0003395139999999991, 0.0003426810000000044]</msg>
<status status="PASS" starttime="20201030 15:55:25.679" endtime="20201030 15:55:25.681"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.674" endtime="20201030 15:55:25.682"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:25.686" endtime="20201030 15:55:25.705"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.684" endtime="20201030 15:55:25.706"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.683" endtime="20201030 15:55:25.706"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.304" endtime="20201030 15:55:25.706"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.303" endtime="20201030 15:55:25.706"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:25.715" endtime="20201030 15:55:25.752"></status>
</kw>
<msg timestamp="20201030 15:55:25.752" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:25.714" endtime="20201030 15:55:25.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.755" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:25.753" endtime="20201030 15:55:25.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:25.756" endtime="20201030 15:55:25.757"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.711" endtime="20201030 15:55:25.758"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.709" endtime="20201030 15:55:25.758"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:25.765" endtime="20201030 15:55:26.051"></status>
</kw>
<msg timestamp="20201030 15:55:26.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023099625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023456806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:25.763" endtime="20201030 15:55:26.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:26.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023099625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023456806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:26.055" endtime="20201030 15:55:26.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:26.063" endtime="20201030 15:55:26.065"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.761" endtime="20201030 15:55:26.066"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.759" endtime="20201030 15:55:26.066"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:26.070" level="INFO">${RESULT} = [{'diff': 0.00035718100000000155}, {'diff': 0.0003389580000000003}, {'diff': 0.00033888899999999847}, {'diff': 0.00034080599999999905}, {'diff': 0.00034236099999999936}, {'diff': 0.0003389170000000011...</msg>
<status status="PASS" starttime="20201030 15:55:26.067" endtime="20201030 15:55:26.070"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:26.074" level="INFO">${ACCURACY} = {'diff': [0.00035718100000000155, 0.0003389580000000003, 0.00033888899999999847, 0.00034080599999999905, 0.00034236099999999936, 0.0003389170000000011, 0.0003395970000000005, 0.00034319399999999806, 0...</msg>
<status status="PASS" starttime="20201030 15:55:26.071" endtime="20201030 15:55:26.074"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:26.078" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201030 15:55:26.077" endtime="20201030 15:55:26.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:26.081" level="INFO">VALUE: [0.00035718100000000155, 0.0003389580000000003, 0.00033888899999999847, 0.00034080599999999905, 0.00034236099999999936, 0.0003389170000000011, 0.0003395970000000005, 0.00034319399999999806, 0.00034137499999999793, 0.0003424729999999994, 0.00033952800000000213, 0.00033862499999999865, 0.00033902799999999816, 0.00034340299999999907, 0.00034062500000000065, 0.0003427920000000015, 0.00034294500000000075, 0.0003412499999999978, 0.0003397369999999997, 0.0003419170000000006, 0.0003425690000000009, 0.00034316700000000186, 0.0003403329999999982, 0.0003405830000000054, 0.00034376400000000334, 0.00034016700000000233, 0.00033972200000000063, 0.0003400699999999979, 0.0003431529999999988, 0.00034387500000000043, 0.00033761100000000155, 0.0003393889999999955, 0.0003388469999999963, 0.00034108299999999897, 0.0003441110000000011, 0.0003410129999999942, 0.00033936099999999636, 0.0003386520000000018, 0.00034413900000000025, 0.00034054199999999923, 0.0003416800000000039, 0.0003385280000000046, 0.0003392359999999997, 0.0003417089999999956, 0.00033861100000000255, 0.00034144400000000324, 0.0003440690000000024, 0.00033997300000000036, 0.0003394450000000007, 0.00034236199999999883]</msg>
<status status="PASS" starttime="20201030 15:55:26.079" endtime="20201030 15:55:26.082"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.075" endtime="20201030 15:55:26.082"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:26.086" endtime="20201030 15:55:26.105"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.084" endtime="20201030 15:55:26.106"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.083" endtime="20201030 15:55:26.106"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.707" endtime="20201030 15:55:26.106"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.707" endtime="20201030 15:55:26.107"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:26.115" endtime="20201030 15:55:26.153"></status>
</kw>
<msg timestamp="20201030 15:55:26.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:26.114" endtime="20201030 15:55:26.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:26.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:26.155" endtime="20201030 15:55:26.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:26.158" endtime="20201030 15:55:26.159"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.111" endtime="20201030 15:55:26.160"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.109" endtime="20201030 15:55:26.160"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:26.167" endtime="20201030 15:55:26.454"></status>
</kw>
<msg timestamp="20201030 15:55:26.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024905681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025245375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:26.165" endtime="20201030 15:55:26.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:26.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024905681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025245375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:26.458" endtime="20201030 15:55:26.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:26.466" endtime="20201030 15:55:26.468"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.163" endtime="20201030 15:55:26.469"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.161" endtime="20201030 15:55:26.469"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:26.473" level="INFO">${RESULT} = [{'diff': 0.0003396940000000015}, {'diff': 0.00034004199999999873}, {'diff': 0.00034387500000000043}, {'diff': 0.0003411660000000004}, {'diff': 0.0003398190000000016}, {'diff': 0.0003409580000000023},...</msg>
<status status="PASS" starttime="20201030 15:55:26.470" endtime="20201030 15:55:26.473"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:26.477" level="INFO">${ACCURACY} = {'diff': [0.0003396940000000015, 0.00034004199999999873, 0.00034387500000000043, 0.0003411660000000004, 0.0003398190000000016, 0.0003409580000000023, 0.000340291999999999, 0.0003411530000000003, 0.000...</msg>
<status status="PASS" starttime="20201030 15:55:26.474" endtime="20201030 15:55:26.477"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:26.482" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201030 15:55:26.480" endtime="20201030 15:55:26.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:26.484" level="INFO">VALUE: [0.0003396940000000015, 0.00034004199999999873, 0.00034387500000000043, 0.0003411660000000004, 0.0003398190000000016, 0.0003409580000000023, 0.000340291999999999, 0.0003411530000000003, 0.00034290300000000204, 0.0003404439999999988, 0.0003438059999999986, 0.0003427639999999989, 0.00033801400000000106, 0.00034108299999999897, 0.0003418620000000018, 0.0003392779999999984, 0.0003401529999999993, 0.00033986100000000033, 0.00034081899999999915, 0.0003387779999999979, 0.00033769499999999897, 0.0003394450000000007, 0.00034334800000000026, 0.00034340299999999907, 0.0003382640000000048, 0.0003379449999999992, 0.00034161100000000555, 0.00033870800000000006, 0.00033893100000000065, 0.0003403469999999978, 0.000341387999999998, 0.0003409720000000019, 0.00034263899999999875, 0.0003391119999999956, 0.00034336100000000036, 0.0003408469999999983, 0.0003377499999999978, 0.0003416529999999973, 0.0003409859999999945, 0.0003417079999999961, 0.0003412910000000005, 0.000339305000000005, 0.00034398600000000445, 0.00034322200000000413, 0.0003420560000000003, 0.00033826399999999784, 0.0003385139999999981, 0.0003401390000000032, 0.0003430700000000009, 0.0003435419999999953]</msg>
<status status="PASS" starttime="20201030 15:55:26.483" endtime="20201030 15:55:26.486"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.478" endtime="20201030 15:55:26.486"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:26.490" endtime="20201030 15:55:26.510"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.488" endtime="20201030 15:55:26.510"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.487" endtime="20201030 15:55:26.510"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.107" endtime="20201030 15:55:26.511"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.107" endtime="20201030 15:55:26.511"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:26.520" endtime="20201030 15:55:26.557"></status>
</kw>
<msg timestamp="20201030 15:55:26.558" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:26.519" endtime="20201030 15:55:26.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:26.564" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:26.560" endtime="20201030 15:55:26.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:26.566" endtime="20201030 15:55:26.569"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.516" endtime="20201030 15:55:26.571"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.514" endtime="20201030 15:55:26.572"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:26.586" endtime="20201030 15:55:26.882"></status>
</kw>
<msg timestamp="20201030 15:55:26.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022652708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022994, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:55:26.583" endtime="20201030 15:55:26.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:26.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022652708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022994, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:55:26.886" endtime="20201030 15:55:26.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:26.894" endtime="20201030 15:55:26.895"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.577" endtime="20201030 15:55:26.896"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.573" endtime="20201030 15:55:26.896"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:26.900" level="INFO">${RESULT} = [{'diff': 0.000341292}, {'diff': 0.0003384449999999997}, {'diff': 0.0003408329999999987}, {'diff': 0.00034350000000000006}, {'diff': 0.0003413469999999988}, {'diff': 0.0003416109999999986}, {'diff': 0...</msg>
<status status="PASS" starttime="20201030 15:55:26.897" endtime="20201030 15:55:26.900"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:26.905" level="INFO">${ACCURACY} = {'diff': [0.000341292, 0.0003384449999999997, 0.0003408329999999987, 0.00034350000000000006, 0.0003413469999999988, 0.0003416109999999986, 0.0003421530000000013, 0.00034340299999999907, 0.000339402999...</msg>
<status status="PASS" starttime="20201030 15:55:26.901" endtime="20201030 15:55:26.905"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:26.910" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201030 15:55:26.909" endtime="20201030 15:55:26.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:26.912" level="INFO">VALUE: [0.000341292, 0.0003384449999999997, 0.0003408329999999987, 0.00034350000000000006, 0.0003413469999999988, 0.0003416109999999986, 0.0003421530000000013, 0.00034340299999999907, 0.00033940299999999854, 0.00034373600000000074, 0.000342888999999999, 0.0003382499999999983, 0.0003399439999999983, 0.0003388200000000001, 0.00034086199999999733, 0.00033952800000000213, 0.00034009699999999754, 0.00034045799999999835, 0.000338999999999999, 0.0003407779999999999, 0.00034062500000000065, 0.0003425560000000008, 0.0003402780000000029, 0.0003411529999999968, 0.000341292, 0.00034102800000000016, 0.0003394019999999956, 0.0003414590000000023, 0.0003404450000000017, 0.00034031899999999865, 0.0003423469999999998, 0.00034147300000000186, 0.0003379440000000067, 0.00034197199999999595, 0.00034052799999999966, 0.0003441799999999995, 0.00033898599999999945, 0.0003412360000000017, 0.0003402500000000003, 0.0003409170000000031, 0.0003392909999999985, 0.00034241699999999764, 0.0003406669999999959, 0.00034424999999999734, 0.0003409309999999957, 0.000338291999999997, 0.00033809699999999554, 0.0003397920000000054, 0.00034197300000000236, 0.00034226400000000184]</msg>
<status status="PASS" starttime="20201030 15:55:26.911" endtime="20201030 15:55:26.913"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.906" endtime="20201030 15:55:26.913"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:26.917" endtime="20201030 15:55:26.937"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.916" endtime="20201030 15:55:26.937"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.914" endtime="20201030 15:55:26.938"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.512" endtime="20201030 15:55:26.938"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.511" endtime="20201030 15:55:26.938"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:26.947" endtime="20201030 15:55:26.988"></status>
</kw>
<msg timestamp="20201030 15:55:26.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:26.945" endtime="20201030 15:55:26.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:26.991" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:26.989" endtime="20201030 15:55:26.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:26.992" endtime="20201030 15:55:26.993"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.943" endtime="20201030 15:55:26.994"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.940" endtime="20201030 15:55:26.994"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:27.001" endtime="20201030 15:55:27.288"></status>
</kw>
<msg timestamp="20201030 15:55:27.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022529972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022879319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:26.999" endtime="20201030 15:55:27.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022529972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022879319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:27.292" endtime="20201030 15:55:27.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:27.300" endtime="20201030 15:55:27.301"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.997" endtime="20201030 15:55:27.302"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.995" endtime="20201030 15:55:27.302"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:27.306" level="INFO">${RESULT} = [{'diff': 0.00034934699999999985}, {'diff': 0.00033817999999999696}, {'diff': 0.00034034800000000073}, {'diff': 0.0003400980000000005}, {'diff': 0.0003386810000000004}, {'diff': 0.00034198700000000193...</msg>
<status status="PASS" starttime="20201030 15:55:27.303" endtime="20201030 15:55:27.307"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:27.310" level="INFO">${ACCURACY} = {'diff': [0.00034934699999999985, 0.00033817999999999696, 0.00034034800000000073, 0.0003400980000000005, 0.0003386810000000004, 0.00034198700000000193, 0.0003381800000000004, 0.0003423330000000002, 0....</msg>
<status status="PASS" starttime="20201030 15:55:27.307" endtime="20201030 15:55:27.311"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.315" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201030 15:55:27.314" endtime="20201030 15:55:27.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.317" level="INFO">VALUE: [0.00034934699999999985, 0.00033817999999999696, 0.00034034800000000073, 0.0003400980000000005, 0.0003386810000000004, 0.00034198700000000193, 0.0003381800000000004, 0.0003423330000000002, 0.0003389580000000003, 0.00034079200000000295, 0.00034065300000000326, 0.00034345899999999735, 0.0003419019999999981, 0.00034337499999999993, 0.0003380970000000025, 0.00034390299999999957, 0.00033952700000000266, 0.00033798599999999845, 0.00034299999999999956, 0.00034068099999999893, 0.00033870800000000006, 0.00034249999999999906, 0.0003417920000000005, 0.00034154100000000423, 0.0003425419999999943, 0.0003428200000000006, 0.00033980599999999805, 0.00033988900000000294, 0.00034187499999999843, 0.0003386390000000017, 0.00034241599999999817, 0.0003396109999999966, 0.0003381109999999951, 0.0003378190000000031, 0.0003427920000000015, 0.0003441250000000007, 0.0003378190000000031, 0.00034148600000000195, 0.00033956900000000484, 0.000343000000000003, 0.0003442079999999986, 0.0003425279999999947, 0.00033983400000000413, 0.00033920800000000056, 0.00033794399999999974, 0.0003411669999999964, 0.0003412780000000004, 0.0003410970000000055, 0.0003425409999999948, 0.00034144400000000324]</msg>
<status status="PASS" starttime="20201030 15:55:27.316" endtime="20201030 15:55:27.318"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.311" endtime="20201030 15:55:27.319"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:27.323" endtime="20201030 15:55:27.342"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.321" endtime="20201030 15:55:27.343"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.320" endtime="20201030 15:55:27.343"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.939" endtime="20201030 15:55:27.343"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.938" endtime="20201030 15:55:27.343"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:27.352" endtime="20201030 15:55:27.390"></status>
</kw>
<msg timestamp="20201030 15:55:27.390" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:27.350" endtime="20201030 15:55:27.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:27.391" endtime="20201030 15:55:27.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:27.394" endtime="20201030 15:55:27.395"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.348" endtime="20201030 15:55:27.396"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.346" endtime="20201030 15:55:27.396"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:27.403" endtime="20201030 15:55:27.689"></status>
</kw>
<msg timestamp="20201030 15:55:27.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024123083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024474986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:27.401" endtime="20201030 15:55:27.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024123083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024474986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:27.693" endtime="20201030 15:55:27.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:27.702" endtime="20201030 15:55:27.703"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.399" endtime="20201030 15:55:27.704"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.397" endtime="20201030 15:55:27.704"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:27.708" level="INFO">${RESULT} = [{'diff': 0.00035190300000000063}, {'diff': 0.0003381250000000016}, {'diff': 0.0003414859999999985}, {'diff': 0.0003385560000000003}, {'diff': 0.00034391699999999914}, {'diff': 0.0003398749999999999},...</msg>
<status status="PASS" starttime="20201030 15:55:27.705" endtime="20201030 15:55:27.708"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:27.712" level="INFO">${ACCURACY} = {'diff': [0.00035190300000000063, 0.0003381250000000016, 0.0003414859999999985, 0.0003385560000000003, 0.00034391699999999914, 0.0003398749999999999, 0.00034163899999999775, 0.0003425270000000022, 0.0...</msg>
<status status="PASS" starttime="20201030 15:55:27.709" endtime="20201030 15:55:27.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.717" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201030 15:55:27.716" endtime="20201030 15:55:27.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.719" level="INFO">VALUE: [0.00035190300000000063, 0.0003381250000000016, 0.0003414859999999985, 0.0003385560000000003, 0.00034391699999999914, 0.0003398749999999999, 0.00034163899999999775, 0.0003425270000000022, 0.0003386250000000021, 0.00033788900000000094, 0.00034104199999999973, 0.00034005499999999883, 0.0003429300000000017, 0.0003379170000000001, 0.0003422360000000027, 0.00034241599999999817, 0.00034097300000000136, 0.0003430829999999975, 0.0003436659999999994, 0.0003397779999999989, 0.000337999999999998, 0.0003394999999999995, 0.0003407919999999995, 0.0003402500000000003, 0.000341292, 0.00033787500000000137, 0.0003418610000000058, 0.000340291999999999, 0.0003392499999999993, 0.0003440969999999946, 0.00034102800000000016, 0.0003383329999999962, 0.000344276999999997, 0.00033926399999999884, 0.0003419030000000045, 0.0003443330000000022, 0.00034286199999999933, 0.0003400139999999996, 0.00034252699999999525, 0.00034426400000000384, 0.0003436659999999994, 0.0003407360000000012, 0.00034219499999999653, 0.0003392359999999997, 0.0003398199999999976, 0.0003379170000000001, 0.0003442639999999969, 0.0003431249999999997, 0.00034092999999999624, 0.000343679999999999]</msg>
<status status="PASS" starttime="20201030 15:55:27.718" endtime="20201030 15:55:27.725"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.713" endtime="20201030 15:55:27.726"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:27.729" endtime="20201030 15:55:27.749"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.728" endtime="20201030 15:55:27.749"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.727" endtime="20201030 15:55:27.750"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.344" endtime="20201030 15:55:27.750"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.344" endtime="20201030 15:55:27.750"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:27.759" endtime="20201030 15:55:27.796"></status>
</kw>
<msg timestamp="20201030 15:55:27.797" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:27.757" endtime="20201030 15:55:27.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.799" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:27.798" endtime="20201030 15:55:27.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:27.800" endtime="20201030 15:55:27.802"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.755" endtime="20201030 15:55:27.803"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.753" endtime="20201030 15:55:27.803"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:27.810" endtime="20201030 15:55:28.096"></status>
</kw>
<msg timestamp="20201030 15:55:28.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024357083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02471725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:27.808" endtime="20201030 15:55:28.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:28.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024357083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02471725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:28.100" endtime="20201030 15:55:28.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:28.108" endtime="20201030 15:55:28.109"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.805" endtime="20201030 15:55:28.110"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.804" endtime="20201030 15:55:28.110"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:28.114" level="INFO">${RESULT} = [{'diff': 0.00036016699999999804}, {'diff': 0.0003434309999999982}, {'diff': 0.0003397079999999976}, {'diff': 0.0003402230000000006}, {'diff': 0.0003387779999999979}, {'diff': 0.00033962499999999965},...</msg>
<status status="PASS" starttime="20201030 15:55:28.111" endtime="20201030 15:55:28.115"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:28.119" level="INFO">${ACCURACY} = {'diff': [0.00036016699999999804, 0.0003434309999999982, 0.0003397079999999976, 0.0003402230000000006, 0.0003387779999999979, 0.00033962499999999965, 0.00034227799999999795, 0.0003399580000000013, 0.0...</msg>
<status status="PASS" starttime="20201030 15:55:28.115" endtime="20201030 15:55:28.119"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:28.124" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201030 15:55:28.123" endtime="20201030 15:55:28.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:28.126" level="INFO">VALUE: [0.00036016699999999804, 0.0003434309999999982, 0.0003397079999999976, 0.0003402230000000006, 0.0003387779999999979, 0.00033962499999999965, 0.00034227799999999795, 0.0003399580000000013, 0.0003442640000000004, 0.0003422919999999975, 0.00034038899999999997, 0.00034268000000000146, 0.00034012500000000015, 0.00033884699999999976, 0.00034354200000000223, 0.0003442919999999995, 0.0003436529999999993, 0.00034318000000000196, 0.00034238900000000197, 0.00034026399999999984, 0.00034302800000000216, 0.0003425560000000008, 0.00033920800000000056, 0.00034259700000000004, 0.00034152800000000066, 0.00034242999999999774, 0.00033858399999999594, 0.0003402920000000059, 0.0003418879999999985, 0.00034356899999999496, 0.000340888999999997, 0.00034054099999999976, 0.0003432219999999972, 0.00034365199999999985, 0.00034104199999999973, 0.00034208399999999944, 0.00034137500000000487, 0.0003431249999999997, 0.00033981899999999815, 0.00034137499999999793, 0.00034342999999999874, 0.00034030599999999855, 0.0003415689999999999, 0.00034423699999999724, 0.0003404590000000013, 0.0003407500000000008, 0.0003437920000000025, 0.00034179099999999407, 0.00034227700000000194, 0.0003397919999999985]</msg>
<status status="PASS" starttime="20201030 15:55:28.125" endtime="20201030 15:55:28.127"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.120" endtime="20201030 15:55:28.128"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:28.131" endtime="20201030 15:55:28.151"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.130" endtime="20201030 15:55:28.151"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.128" endtime="20201030 15:55:28.152"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.751" endtime="20201030 15:55:28.152"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.750" endtime="20201030 15:55:28.152"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:28.161" endtime="20201030 15:55:28.198"></status>
</kw>
<msg timestamp="20201030 15:55:28.199" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:28.159" endtime="20201030 15:55:28.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:28.201" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:28.200" endtime="20201030 15:55:28.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:28.202" endtime="20201030 15:55:28.204"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.157" endtime="20201030 15:55:28.205"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.155" endtime="20201030 15:55:28.205"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:28.211" endtime="20201030 15:55:28.497"></status>
</kw>
<msg timestamp="20201030 15:55:28.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024238306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024571625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:28.210" endtime="20201030 15:55:28.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:28.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024238306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024571625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:28.501" endtime="20201030 15:55:28.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:28.510" endtime="20201030 15:55:28.511"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.207" endtime="20201030 15:55:28.512"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.206" endtime="20201030 15:55:28.512"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:28.516" level="INFO">${RESULT} = [{'diff': 0.0003333189999999986}, {'diff': 0.0003401529999999993}, {'diff': 0.00033784700000000223}, {'diff': 0.0003383199999999996}, {'diff': 0.0003439720000000014}, {'diff': 0.0003409169999999996}, ...</msg>
<status status="PASS" starttime="20201030 15:55:28.513" endtime="20201030 15:55:28.516"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:28.520" level="INFO">${ACCURACY} = {'diff': [0.0003333189999999986, 0.0003401529999999993, 0.00033784700000000223, 0.0003383199999999996, 0.0003439720000000014, 0.0003409169999999996, 0.0003381390000000012, 0.0003416110000000021, 0.000...</msg>
<status status="PASS" starttime="20201030 15:55:28.517" endtime="20201030 15:55:28.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:28.525" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201030 15:55:28.524" endtime="20201030 15:55:28.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:28.527" level="INFO">VALUE: [0.0003333189999999986, 0.0003401529999999993, 0.00033784700000000223, 0.0003383199999999996, 0.0003439720000000014, 0.0003409169999999996, 0.0003381390000000012, 0.0003416110000000021, 0.00034333299999999775, 0.0003399169999999986, 0.00033875000000000224, 0.00033856900000000037, 0.00034327799999999895, 0.0003407360000000012, 0.0003435409999999993, 0.00034244500000000025, 0.00033988899999999947, 0.0003409169999999996, 0.0003421109999999991, 0.00034437500000000093, 0.00034376400000000334, 0.0003406249999999972, 0.0003411250000000046, 0.0003386250000000021, 0.00034294400000000475, 0.0003406659999999964, 0.00033904199999999773, 0.00033955499999999833, 0.0003431520000000063, 0.00034008399999999744, 0.000340291999999999, 0.0003407500000000008, 0.00033938900000000244, 0.00034013899999999625, 0.00033905500000000477, 0.0003428189999999942, 0.00033983400000000413, 0.00034159699999999904, 0.00033820799999999956, 0.0003379719999999989, 0.0003434019999999996, 0.0003404720000000014, 0.00033977699999999944, 0.0003419300000000042, 0.0003387920000000044, 0.00034004199999999873, 0.00034044400000000224, 0.0003436250000000002, 0.00034036099999999736, 0.0003394720000000004]</msg>
<status status="PASS" starttime="20201030 15:55:28.526" endtime="20201030 15:55:28.528"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.521" endtime="20201030 15:55:28.528"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:28.532" endtime="20201030 15:55:28.552"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.530" endtime="20201030 15:55:28.552"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.529" endtime="20201030 15:55:28.553"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.153" endtime="20201030 15:55:28.553"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.152" endtime="20201030 15:55:28.553"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:28.562" endtime="20201030 15:55:28.601"></status>
</kw>
<msg timestamp="20201030 15:55:28.601" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:28.560" endtime="20201030 15:55:28.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:28.604" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:28.602" endtime="20201030 15:55:28.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:28.605" endtime="20201030 15:55:28.607"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.558" endtime="20201030 15:55:28.607"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.555" endtime="20201030 15:55:28.607"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:28.614" endtime="20201030 15:55:28.901"></status>
</kw>
<msg timestamp="20201030 15:55:28.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025287097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025622292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:28.612" endtime="20201030 15:55:28.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:28.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025287097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025622292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:28.905" endtime="20201030 15:55:28.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:28.913" endtime="20201030 15:55:28.914"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.610" endtime="20201030 15:55:28.915"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.608" endtime="20201030 15:55:28.915"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:28.919" level="INFO">${RESULT} = [{'diff': 0.00033519499999999994}, {'diff': 0.00033980599999999805}, {'diff': 0.00034208299999999997}, {'diff': 0.000342888999999999}, {'diff': 0.0003435139999999996}, {'diff': 0.0003380979999999985},...</msg>
<status status="PASS" starttime="20201030 15:55:28.916" endtime="20201030 15:55:28.920"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:28.923" level="INFO">${ACCURACY} = {'diff': [0.00033519499999999994, 0.00033980599999999805, 0.00034208299999999997, 0.000342888999999999, 0.0003435139999999996, 0.0003380979999999985, 0.00034199999999999856, 0.0003408469999999983, 0.0...</msg>
<status status="PASS" starttime="20201030 15:55:28.920" endtime="20201030 15:55:28.924"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:28.928" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201030 15:55:28.927" endtime="20201030 15:55:28.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:28.930" level="INFO">VALUE: [0.00033519499999999994, 0.00033980599999999805, 0.00034208299999999997, 0.000342888999999999, 0.0003435139999999996, 0.0003380979999999985, 0.00034199999999999856, 0.0003408469999999983, 0.00033916600000000185, 0.00034117999999999996, 0.00033944400000000124, 0.00034369399999999856, 0.0003414719999999989, 0.00034441699999999964, 0.0003436250000000002, 0.00034076400000000034, 0.00033852800000000113, 0.00034190299999999757, 0.0003403329999999982, 0.0003421249999999987, 0.0003431529999999988, 0.0003392499999999993, 0.0003428200000000006, 0.0003425560000000008, 0.00034358300000000147, 0.00034136099999999836, 0.0003386390000000017, 0.00034241599999999817, 0.0003433200000000011, 0.000337999999999998, 0.0003401250000000036, 0.000343292000000002, 0.000341485999999995, 0.00034437500000000093, 0.0003433189999999947, 0.00033876299999999887, 0.00033861100000000255, 0.0003384719999999994, 0.0003402370000000002, 0.00033804199999999673, 0.00033861100000000255, 0.000341485999999995, 0.00034419399999999906, 0.0003436250000000002, 0.00033838900000000144, 0.0003408610000000048, 0.0003387229999999991, 0.000338790999999998, 0.0003393610000000033, 0.0003409579999999954]</msg>
<status status="PASS" starttime="20201030 15:55:28.929" endtime="20201030 15:55:28.932"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.924" endtime="20201030 15:55:28.933"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:28.936" endtime="20201030 15:55:28.956"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.935" endtime="20201030 15:55:28.956"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.934" endtime="20201030 15:55:28.957"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.554" endtime="20201030 15:55:28.957"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.553" endtime="20201030 15:55:28.957"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:28.966" endtime="20201030 15:55:29.002"></status>
</kw>
<msg timestamp="20201030 15:55:29.003" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:28.964" endtime="20201030 15:55:29.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:29.005" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:29.004" endtime="20201030 15:55:29.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:29.007" endtime="20201030 15:55:29.008"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.962" endtime="20201030 15:55:29.009"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.959" endtime="20201030 15:55:29.009"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:29.016" endtime="20201030 15:55:29.302"></status>
</kw>
<msg timestamp="20201030 15:55:29.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023085167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023439069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:29.014" endtime="20201030 15:55:29.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:29.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023085167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023439069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:29.306" endtime="20201030 15:55:29.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:29.314" endtime="20201030 15:55:29.315"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.011" endtime="20201030 15:55:29.316"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.010" endtime="20201030 15:55:29.316"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:29.320" level="INFO">${RESULT} = [{'diff': 0.0003539019999999997}, {'diff': 0.00034058299999999847}, {'diff': 0.0003397360000000002}, {'diff': 0.000339598}, {'diff': 0.000343889}, {'diff': 0.00034190299999999757}, {'diff': 0.00034092...</msg>
<status status="PASS" starttime="20201030 15:55:29.317" endtime="20201030 15:55:29.321"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:29.325" level="INFO">${ACCURACY} = {'diff': [0.0003539019999999997, 0.00034058299999999847, 0.0003397360000000002, 0.000339598, 0.000343889, 0.00034190299999999757, 0.0003409299999999997, 0.0003428620000000028, 0.0003411109999999981, 0...</msg>
<status status="PASS" starttime="20201030 15:55:29.321" endtime="20201030 15:55:29.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:29.330" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201030 15:55:29.329" endtime="20201030 15:55:29.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:29.332" level="INFO">VALUE: [0.0003539019999999997, 0.00034058299999999847, 0.0003397360000000002, 0.000339598, 0.000343889, 0.00034190299999999757, 0.0003409299999999997, 0.0003428620000000028, 0.0003411109999999981, 0.00034098600000000145, 0.0003386109999999991, 0.0003430139999999991, 0.00033912499999999915, 0.0003384579999999998, 0.0003442080000000021, 0.0003396110000000001, 0.0003380559999999998, 0.0003401389999999997, 0.0003395840000000004, 0.00034236099999999936, 0.00034380600000000205, 0.000342097000000003, 0.0003380559999999998, 0.00033826399999999784, 0.0003433059999999946, 0.0003423330000000002, 0.0003410140000000006, 0.00033848599999999895, 0.00034419499999999853, 0.0003397779999999989, 0.00033804099999999726, 0.00034252699999999525, 0.0003394309999999942, 0.000342194000000004, 0.0003425000000000025, 0.00033790200000000103, 0.00034291699999999814, 0.00034070900000000154, 0.0003404579999999949, 0.00033904099999999826, 0.000339597000000004, 0.0003388469999999963, 0.0003443059999999956, 0.00034387500000000043, 0.00034259700000000004, 0.00034398600000000445, 0.0003391250000000026, 0.00034119499999999553, 0.0003414170000000036, 0.00034008299999999797]</msg>
<status status="PASS" starttime="20201030 15:55:29.331" endtime="20201030 15:55:29.333"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.326" endtime="20201030 15:55:29.334"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:29.337" endtime="20201030 15:55:29.357"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.336" endtime="20201030 15:55:29.357"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.335" endtime="20201030 15:55:29.358"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.958" endtime="20201030 15:55:29.358"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.957" endtime="20201030 15:55:29.358"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:29.367" endtime="20201030 15:55:29.405"></status>
</kw>
<msg timestamp="20201030 15:55:29.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:29.365" endtime="20201030 15:55:29.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:29.408" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:29.407" endtime="20201030 15:55:29.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:29.409" endtime="20201030 15:55:29.411"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.363" endtime="20201030 15:55:29.412"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.361" endtime="20201030 15:55:29.412"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:29.419" endtime="20201030 15:55:29.706"></status>
</kw>
<msg timestamp="20201030 15:55:29.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023978889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024326917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:29.417" endtime="20201030 15:55:29.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:29.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023978889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024326917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:29.710" endtime="20201030 15:55:29.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:29.719" endtime="20201030 15:55:29.720"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.414" endtime="20201030 15:55:29.721"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.413" endtime="20201030 15:55:29.721"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:29.725" level="INFO">${RESULT} = [{'diff': 0.0003480280000000002}, {'diff': 0.00033788900000000094}, {'diff': 0.0003424300000000012}, {'diff': 0.0003428330000000007}, {'diff': 0.00033916700000000133}, {'diff': 0.0003394999999999995},...</msg>
<status status="PASS" starttime="20201030 15:55:29.722" endtime="20201030 15:55:29.725"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:29.729" level="INFO">${ACCURACY} = {'diff': [0.0003480280000000002, 0.00033788900000000094, 0.0003424300000000012, 0.0003428330000000007, 0.00033916700000000133, 0.0003394999999999995, 0.00034294500000000075, 0.0003376809999999994, 0.0...</msg>
<status status="PASS" starttime="20201030 15:55:29.726" endtime="20201030 15:55:29.729"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:29.734" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201030 15:55:29.733" endtime="20201030 15:55:29.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:29.736" level="INFO">VALUE: [0.0003480280000000002, 0.00033788900000000094, 0.0003424300000000012, 0.0003428330000000007, 0.00033916700000000133, 0.0003394999999999995, 0.00034294500000000075, 0.0003376809999999994, 0.0003378059999999995, 0.0003436669999999989, 0.00034287499999999943, 0.0003384719999999994, 0.0003412500000000013, 0.0003424859999999995, 0.0003403750000000004, 0.00034165199999999785, 0.0003405000000000005, 0.00034019500000000147, 0.0003392499999999993, 0.00033876300000000234, 0.00033793099999999965, 0.0003432910000000025, 0.0003384579999999998, 0.0003386109999999956, 0.000338999999999999, 0.00033965300000000226, 0.0003399030000000025, 0.00034227700000000194, 0.00034254100000000176, 0.0003391810000000009, 0.0003378610000000018, 0.0003437079999999981, 0.00034141599999999717, 0.00034141699999999664, 0.0003403199999999981, 0.0003410270000000007, 0.0003417780000000009, 0.00034442999999999974, 0.0003441669999999994, 0.0003400420000000057, 0.0003381109999999951, 0.00033869499999999997, 0.0003425700000000004, 0.0003393190000000046, 0.00033916700000000133, 0.0003417500000000018, 0.00034391599999999967, 0.00034226300000000237, 0.0003381250000000016, 0.0003431529999999988]</msg>
<status status="PASS" starttime="20201030 15:55:29.735" endtime="20201030 15:55:29.737"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.730" endtime="20201030 15:55:29.737"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:29.741" endtime="20201030 15:55:29.761"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.740" endtime="20201030 15:55:29.762"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.738" endtime="20201030 15:55:29.762"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.359" endtime="20201030 15:55:29.762"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.358" endtime="20201030 15:55:29.762"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:29.771" endtime="20201030 15:55:29.806"></status>
</kw>
<msg timestamp="20201030 15:55:29.806" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:29.770" endtime="20201030 15:55:29.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:29.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:29.807" endtime="20201030 15:55:29.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:29.810" endtime="20201030 15:55:29.812"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.767" endtime="20201030 15:55:29.812"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.765" endtime="20201030 15:55:29.813"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:29.819" endtime="20201030 15:55:30.106"></status>
</kw>
<msg timestamp="20201030 15:55:30.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021543667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021894569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:29.818" endtime="20201030 15:55:30.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021543667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021894569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:30.110" endtime="20201030 15:55:30.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:30.118" endtime="20201030 15:55:30.119"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.815" endtime="20201030 15:55:30.120"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.814" endtime="20201030 15:55:30.120"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:30.124" level="INFO">${RESULT} = [{'diff': 0.00035090200000000016}, {'diff': 0.0003393200000000006}, {'diff': 0.00034365199999999985}, {'diff': 0.00034048600000000095}, {'diff': 0.0003413050000000001}, {'diff': 0.00034036100000000083...</msg>
<status status="PASS" starttime="20201030 15:55:30.121" endtime="20201030 15:55:30.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:30.128" level="INFO">${ACCURACY} = {'diff': [0.00035090200000000016, 0.0003393200000000006, 0.00034365199999999985, 0.00034048600000000095, 0.0003413050000000001, 0.00034036100000000083, 0.00033990299999999904, 0.0003441120000000006, 0...</msg>
<status status="PASS" starttime="20201030 15:55:30.125" endtime="20201030 15:55:30.129"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.133" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201030 15:55:30.132" endtime="20201030 15:55:30.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.135" level="INFO">VALUE: [0.00035090200000000016, 0.0003393200000000006, 0.00034365199999999985, 0.00034048600000000095, 0.0003413050000000001, 0.00034036100000000083, 0.00033990299999999904, 0.0003441120000000006, 0.00034380600000000205, 0.00033837500000000187, 0.0003417629999999984, 0.00034318099999999796, 0.00033920800000000056, 0.0003377359999999982, 0.00034090200000000057, 0.00034259700000000004, 0.0003391529999999983, 0.00034237499999999893, 0.0003425000000000025, 0.0003437219999999977, 0.0003396810000000014, 0.0003409309999999992, 0.0003385550000000008, 0.0003416530000000008, 0.0003389300000000012, 0.00034431999999999865, 0.00034012500000000015, 0.0003405699999999984, 0.00034058299999999847, 0.0003429579999999974, 0.0003437639999999964, 0.00034315199999999935, 0.0003396249999999962, 0.0003408049999999996, 0.00034091699999999614, 0.0003385139999999981, 0.0003423339999999997, 0.0003389719999999999, 0.0003411659999999969, 0.00034040200000000354, 0.0003395139999999991, 0.00034102800000000016, 0.0003431110000000001, 0.0003403610000000043, 0.0003409720000000019, 0.0003429450000000042, 0.000338403000000001, 0.0003441669999999994, 0.00033788900000000094, 0.0003409309999999957]</msg>
<status status="PASS" starttime="20201030 15:55:30.134" endtime="20201030 15:55:30.137"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.129" endtime="20201030 15:55:30.137"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:30.141" endtime="20201030 15:55:30.161"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.140" endtime="20201030 15:55:30.161"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.138" endtime="20201030 15:55:30.162"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.763" endtime="20201030 15:55:30.162"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.763" endtime="20201030 15:55:30.162"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:30.171" endtime="20201030 15:55:30.209"></status>
</kw>
<msg timestamp="20201030 15:55:30.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:30.169" endtime="20201030 15:55:30.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:30.210" endtime="20201030 15:55:30.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:30.213" endtime="20201030 15:55:30.214"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.167" endtime="20201030 15:55:30.215"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.164" endtime="20201030 15:55:30.215"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:30.222" endtime="20201030 15:55:30.508"></status>
</kw>
<msg timestamp="20201030 15:55:30.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023868917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024228972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:30.220" endtime="20201030 15:55:30.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023868917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024228972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:30.512" endtime="20201030 15:55:30.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:30.520" endtime="20201030 15:55:30.521"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.217" endtime="20201030 15:55:30.522"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.216" endtime="20201030 15:55:30.522"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:30.526" level="INFO">${RESULT} = [{'diff': 0.0003600550000000015}, {'diff': 0.0003423049999999976}, {'diff': 0.000339097}, {'diff': 0.0003403330000000017}, {'diff': 0.0003386389999999982}, {'diff': 0.0003410559999999993}, {'diff': 0....</msg>
<status status="PASS" starttime="20201030 15:55:30.523" endtime="20201030 15:55:30.527"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:30.531" level="INFO">${ACCURACY} = {'diff': [0.0003600550000000015, 0.0003423049999999976, 0.000339097, 0.0003403330000000017, 0.0003386389999999982, 0.0003410559999999993, 0.00034444500000000225, 0.00034406899999999893, 0.000341054999...</msg>
<status status="PASS" starttime="20201030 15:55:30.527" endtime="20201030 15:55:30.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.536" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201030 15:55:30.535" endtime="20201030 15:55:30.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.538" level="INFO">VALUE: [0.0003600550000000015, 0.0003423049999999976, 0.000339097, 0.0003403330000000017, 0.0003386389999999982, 0.0003410559999999993, 0.00034444500000000225, 0.00034406899999999893, 0.00034105499999999983, 0.000343791999999999, 0.0003385969999999995, 0.0003442640000000004, 0.0003415560000000033, 0.0003379719999999989, 0.0003412910000000005, 0.0003437639999999999, 0.00034094499999999875, 0.00034400000000000056, 0.00033940299999999854, 0.0003392780000000019, 0.0003442219999999982, 0.0003393049999999981, 0.00034037499999999693, 0.00033876299999999887, 0.00034337499999999993, 0.0003405699999999984, 0.0003429859999999965, 0.0003424449999999968, 0.0003440700000000019, 0.0003385840000000029, 0.0003389580000000003, 0.00034241599999999817, 0.0003398049999999986, 0.0003389580000000003, 0.00034097199999999495, 0.0003391109999999961, 0.0003385269999999982, 0.000342485999999996, 0.0003420690000000004, 0.000343889, 0.0003408610000000048, 0.0003390129999999991, 0.0003393469999999968, 0.00033986199999999633, 0.00034108299999999897, 0.00034308300000000097, 0.000339291999999998, 0.0003407360000000012, 0.00034170900000000254, 0.00034374999999999684]</msg>
<status status="PASS" starttime="20201030 15:55:30.537" endtime="20201030 15:55:30.539"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.532" endtime="20201030 15:55:30.539"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:30.543" endtime="20201030 15:55:30.563"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.542" endtime="20201030 15:55:30.563"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.540" endtime="20201030 15:55:30.564"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.163" endtime="20201030 15:55:30.564"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.162" endtime="20201030 15:55:30.564"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:30.573" endtime="20201030 15:55:30.610"></status>
</kw>
<msg timestamp="20201030 15:55:30.611" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:30.571" endtime="20201030 15:55:30.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.613" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:30.612" endtime="20201030 15:55:30.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:30.614" endtime="20201030 15:55:30.616"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.569" endtime="20201030 15:55:30.616"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.566" endtime="20201030 15:55:30.617"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:30.624" endtime="20201030 15:55:30.911"></status>
</kw>
<msg timestamp="20201030 15:55:30.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023788958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024119222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:30.622" endtime="20201030 15:55:30.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023788958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024119222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:30.915" endtime="20201030 15:55:30.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:30.924" endtime="20201030 15:55:30.925"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.619" endtime="20201030 15:55:30.926"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.617" endtime="20201030 15:55:30.926"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:30.930" level="INFO">${RESULT} = [{'diff': 0.00033026400000000025}, {'diff': 0.0003427639999999989}, {'diff': 0.0003382499999999983}, {'diff': 0.0003426379999999993}, {'diff': 0.00033880500000000105}, {'diff': 0.0003430139999999991},...</msg>
<status status="PASS" starttime="20201030 15:55:30.927" endtime="20201030 15:55:30.930"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:30.934" level="INFO">${ACCURACY} = {'diff': [0.00033026400000000025, 0.0003427639999999989, 0.0003382499999999983, 0.0003426379999999993, 0.00033880500000000105, 0.0003430139999999991, 0.0003385420000000007, 0.0003391250000000026, 0.00...</msg>
<status status="PASS" starttime="20201030 15:55:30.931" endtime="20201030 15:55:30.934"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.939" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201030 15:55:30.938" endtime="20201030 15:55:30.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.941" level="INFO">VALUE: [0.00033026400000000025, 0.0003427639999999989, 0.0003382499999999983, 0.0003426379999999993, 0.00033880500000000105, 0.0003430139999999991, 0.0003385420000000007, 0.0003391250000000026, 0.00034411099999999764, 0.000343485999999997, 0.00033898699999999893, 0.00034427799999999995, 0.00034290300000000204, 0.00034158299999999947, 0.00034061200000000055, 0.0003428049999999981, 0.0003390000000000025, 0.0003421390000000017, 0.00033954199999999823, 0.00034322200000000067, 0.0003434730000000004, 0.00033987500000000337, 0.00034186200000000527, 0.00034169499999999603, 0.0003439579999999984, 0.00034181900000000015, 0.00033959699999999704, 0.0003419999999999951, 0.000338999999999999, 0.0003391810000000009, 0.0003396390000000027, 0.00034202800000000116, 0.00034291699999999814, 0.00033969399999999456, 0.0003441110000000011, 0.0003434439999999983, 0.0003386250000000021, 0.0003408610000000048, 0.0003395139999999991, 0.0003433470000000008, 0.0003410140000000006, 0.0003410699999999989, 0.0003380139999999976, 0.00033790200000000103, 0.00034055499999999933, 0.00034320900000000404, 0.00033838900000000144, 0.0003380699999999959, 0.0003401250000000036, 0.00034372299999999717]</msg>
<status status="PASS" starttime="20201030 15:55:30.940" endtime="20201030 15:55:30.942"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.935" endtime="20201030 15:55:30.942"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:30.946" endtime="20201030 15:55:30.966"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.945" endtime="20201030 15:55:30.966"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.943" endtime="20201030 15:55:30.966"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.565" endtime="20201030 15:55:30.967"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.564" endtime="20201030 15:55:30.967"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:30.976" endtime="20201030 15:55:31.012"></status>
</kw>
<msg timestamp="20201030 15:55:31.013" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:30.974" endtime="20201030 15:55:31.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:31.015" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:31.014" endtime="20201030 15:55:31.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:31.016" endtime="20201030 15:55:31.018"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.972" endtime="20201030 15:55:31.018"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.969" endtime="20201030 15:55:31.019"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:31.025" endtime="20201030 15:55:31.312"></status>
</kw>
<msg timestamp="20201030 15:55:31.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022813847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023156889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:31.024" endtime="20201030 15:55:31.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:31.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022813847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023156889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:31.316" endtime="20201030 15:55:31.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:31.324" endtime="20201030 15:55:31.325"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.021" endtime="20201030 15:55:31.326"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.019" endtime="20201030 15:55:31.326"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:31.330" level="INFO">${RESULT} = [{'diff': 0.00034304199999999826}, {'diff': 0.0003435700000000014}, {'diff': 0.00034158299999999947}, {'diff': 0.00034104100000000026}, {'diff': 0.0003383749999999984}, {'diff': 0.0003438330000000017}...</msg>
<status status="PASS" starttime="20201030 15:55:31.327" endtime="20201030 15:55:31.331"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:31.334" level="INFO">${ACCURACY} = {'diff': [0.00034304199999999826, 0.0003435700000000014, 0.00034158299999999947, 0.00034104100000000026, 0.0003383749999999984, 0.0003438330000000017, 0.0003415000000000015, 0.0003418750000000019, 0.0...</msg>
<status status="PASS" starttime="20201030 15:55:31.331" endtime="20201030 15:55:31.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:31.339" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201030 15:55:31.338" endtime="20201030 15:55:31.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:31.341" level="INFO">VALUE: [0.00034304199999999826, 0.0003435700000000014, 0.00034158299999999947, 0.00034104100000000026, 0.0003383749999999984, 0.0003438330000000017, 0.0003415000000000015, 0.0003418750000000019, 0.0003378610000000018, 0.00034291699999999814, 0.00033916700000000133, 0.0003389450000000002, 0.00034136100000000183, 0.0003385839999999994, 0.00033784799999999823, 0.0003396250000000031, 0.0003401529999999993, 0.0003380139999999976, 0.0003430690000000014, 0.000342292000000001, 0.00034190299999999757, 0.00034162500000000165, 0.00033784700000000223, 0.0003422079999999966, 0.00034305500000000183, 0.0003395830000000044, 0.0003431529999999988, 0.00034192999999999724, 0.00034054199999999923, 0.0003396249999999962, 0.00034116700000000333, 0.0003421249999999987, 0.000338305000000004, 0.00034052799999999966, 0.0003407779999999999, 0.00034436100000000136, 0.00034390299999999957, 0.0003385559999999968, 0.0003387359999999992, 0.0003441669999999994, 0.00033798599999999845, 0.0003417500000000018, 0.000344000000000004, 0.00034105499999999983, 0.00034376400000000334, 0.0003412780000000004, 0.000344292000000003, 0.00034245899999999635, 0.00034274999999999584, 0.00034322299999999667]</msg>
<status status="PASS" starttime="20201030 15:55:31.340" endtime="20201030 15:55:31.343"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.335" endtime="20201030 15:55:31.343"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:31.347" endtime="20201030 15:55:31.367"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.346" endtime="20201030 15:55:31.367"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.344" endtime="20201030 15:55:31.367"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.968" endtime="20201030 15:55:31.368"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.967" endtime="20201030 15:55:31.368"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:31.377" endtime="20201030 15:55:31.413"></status>
</kw>
<msg timestamp="20201030 15:55:31.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:31.375" endtime="20201030 15:55:31.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:31.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:31.415" endtime="20201030 15:55:31.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:31.418" endtime="20201030 15:55:31.419"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.373" endtime="20201030 15:55:31.420"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.370" endtime="20201030 15:55:31.420"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:31.427" endtime="20201030 15:55:31.713"></status>
</kw>
<msg timestamp="20201030 15:55:31.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023761167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024095694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:31.425" endtime="20201030 15:55:31.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:31.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023761167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024095694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:31.717" endtime="20201030 15:55:31.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:31.725" endtime="20201030 15:55:31.727"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.423" endtime="20201030 15:55:31.727"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.421" endtime="20201030 15:55:31.728"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:31.732" level="INFO">${RESULT} = [{'diff': 0.00033452700000000113}, {'diff': 0.00034354199999999877}, {'diff': 0.00033970800000000106}, {'diff': 0.00033897299999999936}, {'diff': 0.00034006900000000187}, {'diff': 0.000339513999999999...</msg>
<status status="PASS" starttime="20201030 15:55:31.729" endtime="20201030 15:55:31.732"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:31.737" level="INFO">${ACCURACY} = {'diff': [0.00033452700000000113, 0.00034354199999999877, 0.00033970800000000106, 0.00033897299999999936, 0.00034006900000000187, 0.0003395139999999991, 0.0003382360000000022, 0.00034195799999999985, ...</msg>
<status status="PASS" starttime="20201030 15:55:31.733" endtime="20201030 15:55:31.737"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:31.741" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201030 15:55:31.740" endtime="20201030 15:55:31.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:31.744" level="INFO">VALUE: [0.00033452700000000113, 0.00034354199999999877, 0.00033970800000000106, 0.00033897299999999936, 0.00034006900000000187, 0.0003395139999999991, 0.0003382360000000022, 0.00034195799999999985, 0.0003395420000000017, 0.00034316700000000186, 0.0003425139999999986, 0.00034445800000000235, 0.00033898599999999945, 0.00033856900000000037, 0.00034208399999999944, 0.00034163899999999775, 0.0003417639999999979, 0.00033854100000000123, 0.0003381389999999977, 0.00033916700000000133, 0.00033894400000000074, 0.000344000000000004, 0.0003417219999999957, 0.0003395559999999978, 0.0003377919999999965, 0.0003383199999999961, 0.0003420140000000016, 0.000342888999999999, 0.00033902799999999816, 0.000343679999999999, 0.00033893100000000065, 0.00034208299999999997, 0.0003436659999999994, 0.0003383469999999958, 0.0003393610000000033, 0.0003395700000000043, 0.00034115300000000376, 0.0003440549999999959, 0.0003418339999999992, 0.00034136099999999836, 0.0003430140000000026, 0.0003377640000000043, 0.0003394999999999995, 0.00034287499999999943, 0.0003394590000000003, 0.0003436940000000055, 0.0003409019999999971, 0.00034086099999999786, 0.0003439579999999984, 0.00034209699999999954]</msg>
<status status="PASS" starttime="20201030 15:55:31.742" endtime="20201030 15:55:31.744"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.737" endtime="20201030 15:55:31.745"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:31.749" endtime="20201030 15:55:31.768"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.747" endtime="20201030 15:55:31.769"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.746" endtime="20201030 15:55:31.769"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.369" endtime="20201030 15:55:31.769"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.368" endtime="20201030 15:55:31.769"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:31.778" endtime="20201030 15:55:31.815"></status>
</kw>
<msg timestamp="20201030 15:55:31.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:31.777" endtime="20201030 15:55:31.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:31.818" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:31.817" endtime="20201030 15:55:31.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:31.819" endtime="20201030 15:55:31.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.774" endtime="20201030 15:55:31.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.772" endtime="20201030 15:55:31.822"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:31.829" endtime="20201030 15:55:32.115"></status>
</kw>
<msg timestamp="20201030 15:55:32.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024199167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024551583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:31.827" endtime="20201030 15:55:32.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:32.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024199167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024551583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:32.119" endtime="20201030 15:55:32.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.127" endtime="20201030 15:55:32.129"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.824" endtime="20201030 15:55:32.129"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.823" endtime="20201030 15:55:32.130"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:32.134" level="INFO">${RESULT} = [{'diff': 0.00035241599999999776}, {'diff': 0.00034400000000000056}, {'diff': 0.00034287499999999943}, {'diff': 0.0003379300000000002}, {'diff': 0.00034392999999999924}, {'diff': 0.000341097000000002}...</msg>
<status status="PASS" starttime="20201030 15:55:32.130" endtime="20201030 15:55:32.134"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:32.138" level="INFO">${ACCURACY} = {'diff': [0.00035241599999999776, 0.00034400000000000056, 0.00034287499999999943, 0.0003379300000000002, 0.00034392999999999924, 0.000341097000000002, 0.00034016699999999886, 0.0003394309999999977, 0....</msg>
<status status="PASS" starttime="20201030 15:55:32.135" endtime="20201030 15:55:32.138"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:32.142" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201030 15:55:32.141" endtime="20201030 15:55:32.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:32.144" level="INFO">VALUE: [0.00035241599999999776, 0.00034400000000000056, 0.00034287499999999943, 0.0003379300000000002, 0.00034392999999999924, 0.000341097000000002, 0.00034016699999999886, 0.0003394309999999977, 0.0003420140000000016, 0.00033970800000000106, 0.0003398329999999977, 0.00033804100000000073, 0.00034288900000000247, 0.00034408400000000144, 0.0003393749999999994, 0.00034136099999999836, 0.0003404720000000014, 0.00033872199999999963, 0.0003389169999999976, 0.00033898599999999945, 0.0003419170000000041, 0.0003436110000000006, 0.0003442639999999969, 0.0003383469999999958, 0.00034404200000000273, 0.0003397779999999989, 0.0003381800000000004, 0.00033880599999999705, 0.00033987499999999643, 0.00034198600000000245, 0.0003377499999999978, 0.00034080599999999905, 0.00033809699999999554, 0.0003437780000000029, 0.00033938900000000244, 0.00034059800000000445, 0.000340403000000003, 0.00034423599999999777, 0.0003405559999999988, 0.00034398600000000445, 0.0003432779999999955, 0.0003419720000000029, 0.0003397360000000002, 0.0003420560000000003, 0.00034391599999999967, 0.0003402909999999995, 0.00034384699999999435, 0.0003443050000000031, 0.0003407230000000011, 0.0003377499999999978]</msg>
<status status="PASS" starttime="20201030 15:55:32.143" endtime="20201030 15:55:32.145"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.138" endtime="20201030 15:55:32.146"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:32.149" endtime="20201030 15:55:32.169"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.148" endtime="20201030 15:55:32.170"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.147" endtime="20201030 15:55:32.170"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.770" endtime="20201030 15:55:32.170"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.770" endtime="20201030 15:55:32.170"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.179" endtime="20201030 15:55:32.218"></status>
</kw>
<msg timestamp="20201030 15:55:32.219" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:32.178" endtime="20201030 15:55:32.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:32.221" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:32.220" endtime="20201030 15:55:32.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.222" endtime="20201030 15:55:32.224"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.175" endtime="20201030 15:55:32.225"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.173" endtime="20201030 15:55:32.225"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.232" endtime="20201030 15:55:32.518"></status>
</kw>
<msg timestamp="20201030 15:55:32.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025240556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025582389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:32.230" endtime="20201030 15:55:32.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:32.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025240556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025582389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:32.522" endtime="20201030 15:55:32.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.530" endtime="20201030 15:55:32.532"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.227" endtime="20201030 15:55:32.532"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.226" endtime="20201030 15:55:32.533"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:32.536" level="INFO">${RESULT} = [{'diff': 0.0003418329999999997}, {'diff': 0.0003430560000000013}, {'diff': 0.0003397919999999985}, {'diff': 0.0003387499999999988}, {'diff': 0.00034145799999999935}, {'diff': 0.00034281900000000115},...</msg>
<status status="PASS" starttime="20201030 15:55:32.533" endtime="20201030 15:55:32.537"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:32.540" level="INFO">${ACCURACY} = {'diff': [0.0003418329999999997, 0.0003430560000000013, 0.0003397919999999985, 0.0003387499999999988, 0.00034145799999999935, 0.00034281900000000115, 0.00034391599999999967, 0.0003426109999999996, 0.0...</msg>
<status status="PASS" starttime="20201030 15:55:32.537" endtime="20201030 15:55:32.541"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:32.545" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201030 15:55:32.544" endtime="20201030 15:55:32.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:32.547" level="INFO">VALUE: [0.0003418329999999997, 0.0003430560000000013, 0.0003397919999999985, 0.0003387499999999988, 0.00034145799999999935, 0.00034281900000000115, 0.00034391599999999967, 0.0003426109999999996, 0.00034013800000000025, 0.00034086100000000133, 0.00034299999999999956, 0.0003378189999999996, 0.000341985999999999, 0.0003386800000000009, 0.00034213899999999825, 0.0003391109999999996, 0.00033981899999999815, 0.000340194000000002, 0.0003423050000000011, 0.00034029100000000645, 0.00034055499999999933, 0.00033851400000000503, 0.0003442219999999982, 0.00034429099999999657, 0.0003391250000000026, 0.00034291599999999867, 0.00033816700000000033, 0.00033788900000000094, 0.00034136099999999836, 0.0003394590000000003, 0.00033954199999999823, 0.00034423599999999777, 0.0003434579999999979, 0.0003390689999999974, 0.00033954199999999823, 0.0003423889999999985, 0.00034108399999999844, 0.00033805500000000377, 0.0003417920000000005, 0.00033969500000000097, 0.00033850000000000546, 0.00033904099999999826, 0.0003435700000000014, 0.0003412500000000013, 0.0003387779999999979, 0.00034155600000000674, 0.0003412639999999939, 0.0003400700000000048, 0.00034351399999999616, 0.0003407219999999947]</msg>
<status status="PASS" starttime="20201030 15:55:32.546" endtime="20201030 15:55:32.549"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.541" endtime="20201030 15:55:32.550"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:32.553" endtime="20201030 15:55:32.573"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.552" endtime="20201030 15:55:32.573"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.551" endtime="20201030 15:55:32.574"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.171" endtime="20201030 15:55:32.574"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.171" endtime="20201030 15:55:32.574"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.583" endtime="20201030 15:55:32.625"></status>
</kw>
<msg timestamp="20201030 15:55:32.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:32.581" endtime="20201030 15:55:32.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:32.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:32.626" endtime="20201030 15:55:32.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.629" endtime="20201030 15:55:32.630"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.579" endtime="20201030 15:55:32.631"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.577" endtime="20201030 15:55:32.631"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.638" endtime="20201030 15:55:32.923"></status>
</kw>
<msg timestamp="20201030 15:55:32.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023347792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0236845, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:55:32.636" endtime="20201030 15:55:32.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:32.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023347792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0236845, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:55:32.927" endtime="20201030 15:55:32.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.935" endtime="20201030 15:55:32.937"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.634" endtime="20201030 15:55:32.938"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.632" endtime="20201030 15:55:32.938"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:32.942" level="INFO">${RESULT} = [{'diff': 0.00033670800000000153}, {'diff': 0.00034081899999999915}, {'diff': 0.00034369399999999856}, {'diff': 0.0003418329999999997}, {'diff': 0.0003395970000000005}, {'diff': 0.0003423049999999976}...</msg>
<status status="PASS" starttime="20201030 15:55:32.939" endtime="20201030 15:55:32.942"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:32.947" level="INFO">${ACCURACY} = {'diff': [0.00033670800000000153, 0.00034081899999999915, 0.00034369399999999856, 0.0003418329999999997, 0.0003395970000000005, 0.0003423049999999976, 0.00034063800000000075, 0.00033833399999999916, 0...</msg>
<status status="PASS" starttime="20201030 15:55:32.943" endtime="20201030 15:55:32.947"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:32.951" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201030 15:55:32.950" endtime="20201030 15:55:32.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:32.954" level="INFO">VALUE: [0.00033670800000000153, 0.00034081899999999915, 0.00034369399999999856, 0.0003418329999999997, 0.0003395970000000005, 0.0003423049999999976, 0.00034063800000000075, 0.00033833399999999916, 0.0003424440000000008, 0.0003437500000000003, 0.0003428049999999981, 0.00034350000000000006, 0.000342292000000001, 0.00034188900000000147, 0.00034117999999999996, 0.000338194, 0.00034036099999999736, 0.0003397230000000001, 0.00033904099999999826, 0.0003389719999999999, 0.00033912499999999915, 0.0003433609999999969, 0.0003436529999999993, 0.0003442780000000034, 0.0003440279999999962, 0.000340194000000002, 0.0003428470000000003, 0.0003439449999999983, 0.00034013899999999625, 0.00034159699999999904, 0.00034120900000000204, 0.00033986099999999686, 0.0003437219999999977, 0.0003397919999999985, 0.0003417089999999956, 0.0003421529999999978, 0.00033766699999999983, 0.00034234799999999926, 0.0003409720000000019, 0.00034102800000000016, 0.0003424720000000034, 0.000342791000000002, 0.00033922200000000013, 0.000343777999999996, 0.00034326400000000284, 0.0003378190000000031, 0.00034043100000000215, 0.0003407370000000007, 0.0003394590000000003, 0.0003385830000000034]</msg>
<status status="PASS" starttime="20201030 15:55:32.952" endtime="20201030 15:55:32.959"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.948" endtime="20201030 15:55:32.959"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:32.963" endtime="20201030 15:55:32.983"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.962" endtime="20201030 15:55:32.983"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.960" endtime="20201030 15:55:32.984"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.575" endtime="20201030 15:55:32.984"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.574" endtime="20201030 15:55:32.984"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.993" endtime="20201030 15:55:33.027"></status>
</kw>
<msg timestamp="20201030 15:55:33.027" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:32.991" endtime="20201030 15:55:33.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:33.030" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:33.028" endtime="20201030 15:55:33.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:33.031" endtime="20201030 15:55:33.032"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.988" endtime="20201030 15:55:33.033"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.986" endtime="20201030 15:55:33.033"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:33.040" endtime="20201030 15:55:33.326"></status>
</kw>
<msg timestamp="20201030 15:55:33.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020399014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020736417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:33.038" endtime="20201030 15:55:33.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:33.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020399014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020736417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:33.330" endtime="20201030 15:55:33.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:33.338" endtime="20201030 15:55:33.339"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.036" endtime="20201030 15:55:33.340"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.034" endtime="20201030 15:55:33.340"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:33.344" level="INFO">${RESULT} = [{'diff': 0.000337403}, {'diff': 0.00034318100000000143}, {'diff': 0.0003381109999999986}, {'diff': 0.00034186100000000233}, {'diff': 0.000343098}, {'diff': 0.00033993100000000165}, {'diff': 0.0003379...</msg>
<status status="PASS" starttime="20201030 15:55:33.341" endtime="20201030 15:55:33.345"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:33.348" level="INFO">${ACCURACY} = {'diff': [0.000337403, 0.00034318100000000143, 0.0003381109999999986, 0.00034186100000000233, 0.000343098, 0.00033993100000000165, 0.0003379170000000001, 0.00034218100000000043, 0.00034162500000000165...</msg>
<status status="PASS" starttime="20201030 15:55:33.345" endtime="20201030 15:55:33.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:33.353" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201030 15:55:33.352" endtime="20201030 15:55:33.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:33.355" level="INFO">VALUE: [0.000337403, 0.00034318100000000143, 0.0003381109999999986, 0.00034186100000000233, 0.000343098, 0.00033993100000000165, 0.0003379170000000001, 0.00034218100000000043, 0.00034162500000000165, 0.00034176400000000134, 0.00034131899999999965, 0.0003428750000000029, 0.00034020800000000156, 0.00034088900000000047, 0.00034190300000000104, 0.0003437079999999981, 0.0003406529999999998, 0.0003400699999999979, 0.0003417639999999979, 0.0003430690000000014, 0.00034358400000000094, 0.00033934700000000026, 0.00034044499999999825, 0.00034279099999999854, 0.0003391250000000026, 0.00034041599999999964, 0.00034433299999999875, 0.0003409720000000019, 0.0003385560000000003, 0.00033990199999999957, 0.0003388049999999976, 0.0003385830000000034, 0.00034255599999999387, 0.0003405000000000005, 0.0003379449999999992, 0.000340679999999996, 0.00034319500000000447, 0.00033933300000000416, 0.00034158399999999894, 0.0003406529999999963, 0.00034241599999999817, 0.00033937499999999593, 0.00034340299999999907, 0.000340403000000003, 0.00034208299999999997, 0.0003414170000000036, 0.0003439579999999984, 0.0003400700000000048, 0.0003382229999999986, 0.00033972200000000063]</msg>
<status status="PASS" starttime="20201030 15:55:33.354" endtime="20201030 15:55:33.356"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.349" endtime="20201030 15:55:33.357"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:33.360" endtime="20201030 15:55:33.380"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.359" endtime="20201030 15:55:33.380"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.357" endtime="20201030 15:55:33.381"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.985" endtime="20201030 15:55:33.381"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.984" endtime="20201030 15:55:33.381"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:33.390" endtime="20201030 15:55:33.428"></status>
</kw>
<msg timestamp="20201030 15:55:33.429" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:33.388" endtime="20201030 15:55:33.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:33.431" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:33.430" endtime="20201030 15:55:33.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:33.432" endtime="20201030 15:55:33.434"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.386" endtime="20201030 15:55:33.434"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.384" endtime="20201030 15:55:33.435"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:33.441" endtime="20201030 15:55:33.728"></status>
</kw>
<msg timestamp="20201030 15:55:33.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025253194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025593847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:33.440" endtime="20201030 15:55:33.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:33.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025253194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025593847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:33.732" endtime="20201030 15:55:33.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:33.740" endtime="20201030 15:55:33.742"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.437" endtime="20201030 15:55:33.742"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.435" endtime="20201030 15:55:33.743"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:33.747" level="INFO">${RESULT} = [{'diff': 0.0003406529999999998}, {'diff': 0.00033806899999999987}, {'diff': 0.0003412780000000004}, {'diff': 0.000340097000000001}, {'diff': 0.00033936099999999983}, {'diff': 0.0003402779999999994}, ...</msg>
<status status="PASS" starttime="20201030 15:55:33.744" endtime="20201030 15:55:33.747"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:33.751" level="INFO">${ACCURACY} = {'diff': [0.0003406529999999998, 0.00033806899999999987, 0.0003412780000000004, 0.000340097000000001, 0.00033936099999999983, 0.0003402779999999994, 0.0003390269999999987, 0.00034315199999999935, 0.00...</msg>
<status status="PASS" starttime="20201030 15:55:33.748" endtime="20201030 15:55:33.751"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:33.755" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201030 15:55:33.754" endtime="20201030 15:55:33.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:33.758" level="INFO">VALUE: [0.0003406529999999998, 0.00033806899999999987, 0.0003412780000000004, 0.000340097000000001, 0.00033936099999999983, 0.0003402779999999994, 0.0003390269999999987, 0.00034315199999999935, 0.0003402629999999969, 0.0003393190000000011, 0.0003442219999999982, 0.00034277699999999897, 0.0003426660000000019, 0.00034063899999999675, 0.00033888899999999847, 0.0003382499999999983, 0.0003444730000000014, 0.00034423599999999777, 0.0003416249999999982, 0.00034254100000000176, 0.0003384170000000006, 0.000338403000000001, 0.00033940299999999507, 0.0003415000000000015, 0.00034384699999999435, 0.0003404450000000017, 0.00034352800000000266, 0.0003408049999999996, 0.0003444309999999992, 0.00033948599999999995, 0.0003397779999999989, 0.0003386249999999952, 0.0003390129999999991, 0.0003417920000000005, 0.00034334800000000026, 0.00034020800000000156, 0.0003383190000000036, 0.0003423050000000011, 0.00033901400000000553, 0.0003422360000000027, 0.00034165300000000426, 0.0003411249999999977, 0.00034098600000000145, 0.00034048600000000095, 0.0003414580000000028, 0.00034159699999999904, 0.00034052799999999966, 0.00034122200000000213, 0.00033793099999999965, 0.00033948599999999995]</msg>
<status status="PASS" starttime="20201030 15:55:33.756" endtime="20201030 15:55:33.759"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.752" endtime="20201030 15:55:33.760"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:33.764" endtime="20201030 15:55:33.783"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.762" endtime="20201030 15:55:33.784"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.761" endtime="20201030 15:55:33.784"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.382" endtime="20201030 15:55:33.784"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.381" endtime="20201030 15:55:33.784"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:33.793" endtime="20201030 15:55:33.830"></status>
</kw>
<msg timestamp="20201030 15:55:33.831" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:33.792" endtime="20201030 15:55:33.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:33.833" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:33.832" endtime="20201030 15:55:33.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:33.835" endtime="20201030 15:55:33.836"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.789" endtime="20201030 15:55:33.837"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.787" endtime="20201030 15:55:33.837"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:33.844" endtime="20201030 15:55:34.129"></status>
</kw>
<msg timestamp="20201030 15:55:34.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023846569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0241925, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:55:33.842" endtime="20201030 15:55:34.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023846569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0241925, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:55:34.133" endtime="20201030 15:55:34.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.141" endtime="20201030 15:55:34.143"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.839" endtime="20201030 15:55:34.144"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.838" endtime="20201030 15:55:34.144"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:34.148" level="INFO">${RESULT} = [{'diff': 0.00034593099999999724}, {'diff': 0.0003388199999999966}, {'diff': 0.0003439729999999974}, {'diff': 0.00034297199999999695}, {'diff': 0.00034350000000000006}, {'diff': 0.00034090300000000004...</msg>
<status status="PASS" starttime="20201030 15:55:34.145" endtime="20201030 15:55:34.148"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:34.153" level="INFO">${ACCURACY} = {'diff': [0.00034593099999999724, 0.0003388199999999966, 0.0003439729999999974, 0.00034297199999999695, 0.00034350000000000006, 0.00034090300000000004, 0.0003415279999999972, 0.0003426390000000022, 0....</msg>
<status status="PASS" starttime="20201030 15:55:34.149" endtime="20201030 15:55:34.153"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.157" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201030 15:55:34.156" endtime="20201030 15:55:34.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.160" level="INFO">VALUE: [0.00034593099999999724, 0.0003388199999999966, 0.0003439729999999974, 0.00034297199999999695, 0.00034350000000000006, 0.00034090300000000004, 0.0003415279999999972, 0.0003426390000000022, 0.00034437500000000093, 0.0003417230000000021, 0.00034372299999999717, 0.00034344500000000125, 0.0003417079999999996, 0.0003395139999999991, 0.00033902800000000163, 0.0003387360000000027, 0.000338597999999999, 0.0003407360000000012, 0.0003402909999999995, 0.00034172199999999917, 0.0003430560000000013, 0.0003381109999999951, 0.00034269399999999756, 0.00034422200000000513, 0.00033951400000000603, 0.0003386390000000017, 0.000343000000000003, 0.000340387999999997, 0.0003421250000000056, 0.0003386940000000005, 0.00034141599999999717, 0.000343485999999997, 0.0003416379999999983, 0.00033936099999999636, 0.0003412780000000004, 0.0003437639999999964, 0.0003381120000000015, 0.00034180600000000005, 0.00034043100000000215, 0.0003396109999999966, 0.0003382499999999983, 0.0003444999999999976, 0.00033919399999999406, 0.00033997300000000036, 0.0003401810000000019, 0.00034181900000000015, 0.0003398049999999986, 0.0003441529999999998, 0.0003397919999999985, 0.0003386250000000021]</msg>
<status status="PASS" starttime="20201030 15:55:34.159" endtime="20201030 15:55:34.161"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.154" endtime="20201030 15:55:34.161"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:34.165" endtime="20201030 15:55:34.185"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.163" endtime="20201030 15:55:34.187"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.162" endtime="20201030 15:55:34.188"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.785" endtime="20201030 15:55:34.188"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.785" endtime="20201030 15:55:34.188"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.201" endtime="20201030 15:55:34.238"></status>
</kw>
<msg timestamp="20201030 15:55:34.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:34.199" endtime="20201030 15:55:34.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.241" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:34.239" endtime="20201030 15:55:34.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.242" endtime="20201030 15:55:34.244"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.194" endtime="20201030 15:55:34.244"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.191" endtime="20201030 15:55:34.245"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.251" endtime="20201030 15:55:34.538"></status>
</kw>
<msg timestamp="20201030 15:55:34.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029424972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029762625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:34.250" endtime="20201030 15:55:34.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029424972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029762625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:34.543" endtime="20201030 15:55:34.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.551" endtime="20201030 15:55:34.552"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.247" endtime="20201030 15:55:34.553"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.245" endtime="20201030 15:55:34.553"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:34.557" level="INFO">${RESULT} = [{'diff': 0.00033765300000000026}, {'diff': 0.0003399170000000021}, {'diff': 0.00034123599999999824}, {'diff': 0.0003423050000000011}, {'diff': 0.0003406379999999973}, {'diff': 0.00033819400000000346}...</msg>
<status status="PASS" starttime="20201030 15:55:34.554" endtime="20201030 15:55:34.558"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:34.561" level="INFO">${ACCURACY} = {'diff': [0.00033765300000000026, 0.0003399170000000021, 0.00034123599999999824, 0.0003423050000000011, 0.0003406379999999973, 0.00033819400000000346, 0.00034209699999999954, 0.0003420140000000016, 0....</msg>
<status status="PASS" starttime="20201030 15:55:34.558" endtime="20201030 15:55:34.562"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.566" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201030 15:55:34.565" endtime="20201030 15:55:34.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.568" level="INFO">VALUE: [0.00033765300000000026, 0.0003399170000000021, 0.00034123599999999824, 0.0003423050000000011, 0.0003406379999999973, 0.00033819400000000346, 0.00034209699999999954, 0.0003420140000000016, 0.0003381520000000013, 0.000342791000000002, 0.00034293100000000465, 0.00033837500000000187, 0.00033870800000000006, 0.00034147300000000186, 0.00034368099999999846, 0.00034318099999999796, 0.00034254200000000123, 0.00034418099999999896, 0.0003399030000000025, 0.0003413329999999992, 0.0003403469999999978, 0.00034222299999999567, 0.0003393190000000046, 0.00034420800000000557, 0.00033966600000000235, 0.00034172200000000263, 0.00034340299999999907, 0.0003402370000000002, 0.0003403889999999965, 0.00034258399999999994, 0.00033887500000000237, 0.00033844400000000024, 0.00033854199999999723, 0.0003395840000000039, 0.0003390970000000035, 0.0003377779999999969, 0.0003403329999999982, 0.00034020800000000156, 0.00033902799999999816, 0.00034374999999999684, 0.00033933400000000363, 0.00033787500000000137, 0.0003381800000000004, 0.0003388339999999962, 0.00034069500000000197, 0.0003432780000000024, 0.00034337499999999993, 0.0003378610000000018, 0.00033820799999999956, 0.0003418469999999993]</msg>
<status status="PASS" starttime="20201030 15:55:34.567" endtime="20201030 15:55:34.569"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.562" endtime="20201030 15:55:34.569"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:34.573" endtime="20201030 15:55:34.593"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.572" endtime="20201030 15:55:34.593"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.570" endtime="20201030 15:55:34.594"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.189" endtime="20201030 15:55:34.594"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.189" endtime="20201030 15:55:34.594"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.603" endtime="20201030 15:55:34.639"></status>
</kw>
<msg timestamp="20201030 15:55:34.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:34.601" endtime="20201030 15:55:34.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:34.641" endtime="20201030 15:55:34.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.644" endtime="20201030 15:55:34.645"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.599" endtime="20201030 15:55:34.646"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.597" endtime="20201030 15:55:34.646"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.653" endtime="20201030 15:55:34.939"></status>
</kw>
<msg timestamp="20201030 15:55:34.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023000764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023344736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:34.651" endtime="20201030 15:55:34.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023000764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023344736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:34.943" endtime="20201030 15:55:34.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.951" endtime="20201030 15:55:34.953"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.648" endtime="20201030 15:55:34.953"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.647" endtime="20201030 15:55:34.954"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:34.958" level="INFO">${RESULT} = [{'diff': 0.0003439720000000014}, {'diff': 0.00034112500000000115}, {'diff': 0.00033972200000000063}, {'diff': 0.00034281900000000115}, {'diff': 0.0003407500000000008}, {'diff': 0.000344083999999998},...</msg>
<status status="PASS" starttime="20201030 15:55:34.955" endtime="20201030 15:55:34.958"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:34.962" level="INFO">${ACCURACY} = {'diff': [0.0003439720000000014, 0.00034112500000000115, 0.00033972200000000063, 0.00034281900000000115, 0.0003407500000000008, 0.000344083999999998, 0.00034237499999999893, 0.0003410689999999994, 0.0...</msg>
<status status="PASS" starttime="20201030 15:55:34.959" endtime="20201030 15:55:34.962"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.966" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201030 15:55:34.965" endtime="20201030 15:55:34.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.969" level="INFO">VALUE: [0.0003439720000000014, 0.00034112500000000115, 0.00033972200000000063, 0.00034281900000000115, 0.0003407500000000008, 0.000344083999999998, 0.00034237499999999893, 0.0003410689999999994, 0.00034295800000000085, 0.00033962499999999965, 0.0003436669999999989, 0.00034306899999999793, 0.0003433330000000012, 0.0003377640000000008, 0.0003406110000000011, 0.0003385969999999995, 0.00034350000000000006, 0.00033890199999999857, 0.00033940299999999854, 0.0003441669999999994, 0.00034108300000000244, 0.00034326400000000284, 0.00034204200000000073, 0.00033901400000000553, 0.0003399720000000009, 0.0003425419999999943, 0.00034163899999999775, 0.0003439449999999983, 0.00034237499999999893, 0.0003388480000000027, 0.00034243100000000415, 0.00034141699999999664, 0.00034069500000000197, 0.00033976399999999934, 0.0003381109999999951, 0.0003440690000000024, 0.00034163899999999775, 0.0003390970000000035, 0.0003429579999999974, 0.00034020800000000156, 0.0003416800000000039, 0.0003408049999999996, 0.00033811100000000205, 0.0003404160000000031, 0.0003437639999999964, 0.00033891699999999414, 0.0003395840000000039, 0.0003405700000000053, 0.00034280600000000105, 0.0003430560000000013]</msg>
<status status="PASS" starttime="20201030 15:55:34.967" endtime="20201030 15:55:34.970"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.963" endtime="20201030 15:55:34.971"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:34.975" endtime="20201030 15:55:34.994"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.973" endtime="20201030 15:55:34.995"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.972" endtime="20201030 15:55:34.995"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.595" endtime="20201030 15:55:34.995"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.594" endtime="20201030 15:55:34.995"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:35.004" endtime="20201030 15:55:35.043"></status>
</kw>
<msg timestamp="20201030 15:55:35.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:35.003" endtime="20201030 15:55:35.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:35.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:35.044" endtime="20201030 15:55:35.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:35.047" endtime="20201030 15:55:35.048"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.000" endtime="20201030 15:55:35.049"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.998" endtime="20201030 15:55:35.049"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:35.056" endtime="20201030 15:55:35.342"></status>
</kw>
<msg timestamp="20201030 15:55:35.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023668806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023999139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:35.054" endtime="20201030 15:55:35.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:35.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023668806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023999139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:35.346" endtime="20201030 15:55:35.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:35.354" endtime="20201030 15:55:35.355"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.051" endtime="20201030 15:55:35.356"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.050" endtime="20201030 15:55:35.356"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:35.360" level="INFO">${RESULT} = [{'diff': 0.00033033299999999863}, {'diff': 0.00034195799999999985}, {'diff': 0.00033870800000000006}, {'diff': 0.0003392359999999997}, {'diff': 0.0003437079999999981}, {'diff': 0.0003440270000000002}...</msg>
<status status="PASS" starttime="20201030 15:55:35.357" endtime="20201030 15:55:35.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:35.365" level="INFO">${ACCURACY} = {'diff': [0.00033033299999999863, 0.00034195799999999985, 0.00033870800000000006, 0.0003392359999999997, 0.0003437079999999981, 0.0003440270000000002, 0.00034336100000000036, 0.000339097, 0.0003429030...</msg>
<status status="PASS" starttime="20201030 15:55:35.361" endtime="20201030 15:55:35.365"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:35.369" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201030 15:55:35.368" endtime="20201030 15:55:35.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:35.372" level="INFO">VALUE: [0.00033033299999999863, 0.00034195799999999985, 0.00033870800000000006, 0.0003392359999999997, 0.0003437079999999981, 0.0003440270000000002, 0.00034336100000000036, 0.000339097, 0.00034290300000000204, 0.00033902800000000163, 0.0003436250000000002, 0.0003395550000000018, 0.0003394580000000008, 0.00033869499999999997, 0.0003393200000000006, 0.00034263899999999875, 0.0003421249999999987, 0.00034295800000000085, 0.0003385969999999995, 0.00034245800000000035, 0.00033769500000000244, 0.0003404999999999936, 0.00033998699999999993, 0.00033890200000000203, 0.0003439999999999971, 0.000342888999999999, 0.0003435000000000035, 0.00034136099999999836, 0.0003428200000000006, 0.00034088900000000394, 0.00034247199999999645, 0.0003415979999999985, 0.00033926399999999884, 0.0003432230000000036, 0.00033804099999999726, 0.0003426380000000062, 0.00033816700000000033, 0.00034269399999999756, 0.0003399590000000008, 0.00033880599999999705, 0.0003423050000000011, 0.00034141699999999664, 0.0003407500000000008, 0.00034251399999999516, 0.0003437079999999981, 0.0003409859999999945, 0.00034373599999999727, 0.00033830599999999655, 0.00033855500000000427, 0.00034270800000000406]</msg>
<status status="PASS" starttime="20201030 15:55:35.371" endtime="20201030 15:55:35.373"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.366" endtime="20201030 15:55:35.373"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:35.377" endtime="20201030 15:55:35.396"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.375" endtime="20201030 15:55:35.397"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.374" endtime="20201030 15:55:35.397"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.996" endtime="20201030 15:55:35.398"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.996" endtime="20201030 15:55:35.398"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:35.407" endtime="20201030 15:55:35.443"></status>
</kw>
<msg timestamp="20201030 15:55:35.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:35.405" endtime="20201030 15:55:35.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:35.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:35.444" endtime="20201030 15:55:35.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:35.447" endtime="20201030 15:55:35.448"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.402" endtime="20201030 15:55:35.449"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.400" endtime="20201030 15:55:35.449"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:35.456" endtime="20201030 15:55:35.743"></status>
</kw>
<msg timestamp="20201030 15:55:35.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023191431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023523153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:35.454" endtime="20201030 15:55:35.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:35.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023191431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023523153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:35.747" endtime="20201030 15:55:35.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:35.755" endtime="20201030 15:55:35.757"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.452" endtime="20201030 15:55:35.758"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.450" endtime="20201030 15:55:35.758"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:35.762" level="INFO">${RESULT} = [{'diff': 0.00033172200000000304}, {'diff': 0.00033904100000000173}, {'diff': 0.0003405140000000001}, {'diff': 0.0003391529999999983}, {'diff': 0.00034062500000000065}, {'diff': 0.0003403200000000016}...</msg>
<status status="PASS" starttime="20201030 15:55:35.759" endtime="20201030 15:55:35.762"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:35.766" level="INFO">${ACCURACY} = {'diff': [0.00033172200000000304, 0.00033904100000000173, 0.0003405140000000001, 0.0003391529999999983, 0.00034062500000000065, 0.0003403200000000016, 0.00034020800000000156, 0.00033948599999999995, 0...</msg>
<status status="PASS" starttime="20201030 15:55:35.763" endtime="20201030 15:55:35.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:35.770" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201030 15:55:35.769" endtime="20201030 15:55:35.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:35.773" level="INFO">VALUE: [0.00033172200000000304, 0.00033904100000000173, 0.0003405140000000001, 0.0003391529999999983, 0.00034062500000000065, 0.0003403200000000016, 0.00034020800000000156, 0.00033948599999999995, 0.0003425560000000008, 0.00034359699999999757, 0.00034218000000000096, 0.00034290299999999857, 0.00034040200000000007, 0.00033966600000000235, 0.0003427920000000015, 0.0003424859999999995, 0.00034350000000000006, 0.0003430560000000013, 0.00033988899999999947, 0.00034236100000000283, 0.0003384170000000006, 0.0003410559999999993, 0.0003384309999999967, 0.0003399030000000025, 0.00034111100000000505, 0.0003436529999999993, 0.00034269399999999756, 0.00034055499999999933, 0.00034052699999999325, 0.00034319500000000447, 0.00034037499999999693, 0.0003402779999999994, 0.0003425000000000025, 0.0003431659999999989, 0.00033833300000000316, 0.0003412779999999935, 0.000337999999999998, 0.0003378480000000017, 0.00034219500000000347, 0.0003381659999999939, 0.00034158299999999947, 0.00033866700000000083, 0.0003417780000000009, 0.00034122200000000213, 0.00034392999999999924, 0.0003409309999999957, 0.0003427079999999971, 0.0003409450000000022, 0.0003382920000000039, 0.0003428470000000003]</msg>
<status status="PASS" starttime="20201030 15:55:35.771" endtime="20201030 15:55:35.774"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.767" endtime="20201030 15:55:35.774"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:35.778" endtime="20201030 15:55:35.797"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.776" endtime="20201030 15:55:35.798"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.775" endtime="20201030 15:55:35.798"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.399" endtime="20201030 15:55:35.798"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.398" endtime="20201030 15:55:35.799"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:35.807" endtime="20201030 15:55:35.846"></status>
</kw>
<msg timestamp="20201030 15:55:35.846" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:35.806" endtime="20201030 15:55:35.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:35.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:35.847" endtime="20201030 15:55:35.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:35.850" endtime="20201030 15:55:35.851"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.803" endtime="20201030 15:55:35.852"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.801" endtime="20201030 15:55:35.852"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:35.859" endtime="20201030 15:55:36.145"></status>
</kw>
<msg timestamp="20201030 15:55:36.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024263875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024613847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:35.857" endtime="20201030 15:55:36.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024263875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024613847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:36.149" endtime="20201030 15:55:36.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.158" endtime="20201030 15:55:36.159"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.855" endtime="20201030 15:55:36.160"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.853" endtime="20201030 15:55:36.160"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:36.164" level="INFO">${RESULT} = [{'diff': 0.0003499720000000005}, {'diff': 0.00034209699999999954}, {'diff': 0.00034223599999999924}, {'diff': 0.0003429720000000004}, {'diff': 0.00034016699999999886}, {'diff': 0.0003381809999999999}...</msg>
<status status="PASS" starttime="20201030 15:55:36.161" endtime="20201030 15:55:36.164"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:36.168" level="INFO">${ACCURACY} = {'diff': [0.0003499720000000005, 0.00034209699999999954, 0.00034223599999999924, 0.0003429720000000004, 0.00034016699999999886, 0.0003381809999999999, 0.00034152800000000066, 0.0003408199999999986, 0....</msg>
<status status="PASS" starttime="20201030 15:55:36.165" endtime="20201030 15:55:36.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.173" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201030 15:55:36.172" endtime="20201030 15:55:36.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.175" level="INFO">VALUE: [0.0003499720000000005, 0.00034209699999999954, 0.00034223599999999924, 0.0003429720000000004, 0.00034016699999999886, 0.0003381809999999999, 0.00034152800000000066, 0.0003408199999999986, 0.00033851400000000156, 0.00034116699999999986, 0.00034305599999999783, 0.0003395560000000013, 0.00034054199999999923, 0.0003412079999999991, 0.0003396389999999992, 0.00034380600000000205, 0.00034181900000000015, 0.00033816600000000085, 0.00034212500000000215, 0.00034413900000000025, 0.0003393329999999972, 0.00034054099999999976, 0.00034284799999999976, 0.00034423699999999724, 0.00034329199999999505, 0.00033952799999999866, 0.00033941699999999464, 0.0003396940000000015, 0.00034159699999999904, 0.00033938900000000244, 0.0003408329999999987, 0.00034083400000000513, 0.00034347199999999745, 0.00034144400000000324, 0.00034230600000000055, 0.00034391599999999967, 0.000341000000000001, 0.00033815300000000076, 0.00034173699999999474, 0.00034015300000000276, 0.0003426249999999992, 0.0003377920000000034, 0.00033898599999999945, 0.00034418099999999896, 0.00034243100000000415, 0.0003385830000000034, 0.0003435980000000005, 0.0003433059999999946, 0.0003440409999999963, 0.0003407360000000012]</msg>
<status status="PASS" starttime="20201030 15:55:36.174" endtime="20201030 15:55:36.177"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.169" endtime="20201030 15:55:36.177"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:36.181" endtime="20201030 15:55:36.200"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.179" endtime="20201030 15:55:36.201"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.178" endtime="20201030 15:55:36.201"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.799" endtime="20201030 15:55:36.202"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.799" endtime="20201030 15:55:36.202"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.210" endtime="20201030 15:55:36.247"></status>
</kw>
<msg timestamp="20201030 15:55:36.248" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:36.209" endtime="20201030 15:55:36.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:36.249" endtime="20201030 15:55:36.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.251" endtime="20201030 15:55:36.253"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.206" endtime="20201030 15:55:36.253"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.204" endtime="20201030 15:55:36.254"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.260" endtime="20201030 15:55:36.546"></status>
</kw>
<msg timestamp="20201030 15:55:36.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022951278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023291653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:36.259" endtime="20201030 15:55:36.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022951278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023291653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:36.550" endtime="20201030 15:55:36.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.558" endtime="20201030 15:55:36.560"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.256" endtime="20201030 15:55:36.560"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.254" endtime="20201030 15:55:36.561"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:36.565" level="INFO">${RESULT} = [{'diff': 0.0003403750000000004}, {'diff': 0.00033784699999999876}, {'diff': 0.00034323600000000024}, {'diff': 0.0003395139999999991}, {'diff': 0.000342888999999999}, {'diff': 0.0003439440000000023}, ...</msg>
<status status="PASS" starttime="20201030 15:55:36.562" endtime="20201030 15:55:36.565"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:36.569" level="INFO">${ACCURACY} = {'diff': [0.0003403750000000004, 0.00033784699999999876, 0.00034323600000000024, 0.0003395139999999991, 0.000342888999999999, 0.0003439440000000023, 0.0003379580000000028, 0.00034040299999999954, 0.00...</msg>
<status status="PASS" starttime="20201030 15:55:36.566" endtime="20201030 15:55:36.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.574" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201030 15:55:36.573" endtime="20201030 15:55:36.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.576" level="INFO">VALUE: [0.0003403750000000004, 0.00033784699999999876, 0.00034323600000000024, 0.0003395139999999991, 0.000342888999999999, 0.0003439440000000023, 0.0003379580000000028, 0.00034040299999999954, 0.0003383199999999996, 0.000344195000000002, 0.00033843100000000015, 0.0003401659999999994, 0.0003414309999999997, 0.0003434720000000009, 0.00034363899999999975, 0.00034058300000000194, 0.00033902700000000216, 0.0003391389999999987, 0.00034180600000000005, 0.0003431249999999997, 0.00034334800000000026, 0.0003390839999999999, 0.00034302800000000216, 0.0003392359999999997, 0.0003413329999999992, 0.0003406109999999976, 0.00034336100000000036, 0.00034355500000000233, 0.000338806000000004, 0.00034126400000000084, 0.0003436110000000006, 0.0003401659999999959, 0.00034138900000000444, 0.00034392999999999924, 0.0003436110000000006, 0.00034252800000000166, 0.00034263899999999875, 0.0003407079999999951, 0.00034301399999999566, 0.00034309700000000054, 0.0003412219999999952, 0.00034309700000000054, 0.00034, 0.00034187500000000537, 0.0003427079999999971, 0.000342292000000001, 0.0003401249999999967, 0.00034080599999999905, 0.000342888999999999, 0.0003380840000000024]</msg>
<status status="PASS" starttime="20201030 15:55:36.575" endtime="20201030 15:55:36.577"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.570" endtime="20201030 15:55:36.578"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:36.582" endtime="20201030 15:55:36.601"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.580" endtime="20201030 15:55:36.602"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.579" endtime="20201030 15:55:36.602"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.203" endtime="20201030 15:55:36.602"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.202" endtime="20201030 15:55:36.602"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.611" endtime="20201030 15:55:36.649"></status>
</kw>
<msg timestamp="20201030 15:55:36.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:36.610" endtime="20201030 15:55:36.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.652" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:36.651" endtime="20201030 15:55:36.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.653" endtime="20201030 15:55:36.655"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.607" endtime="20201030 15:55:36.655"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.605" endtime="20201030 15:55:36.656"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.662" endtime="20201030 15:55:36.950"></status>
</kw>
<msg timestamp="20201030 15:55:36.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024279083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024612986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:36.661" endtime="20201030 15:55:36.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024279083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024612986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:36.954" endtime="20201030 15:55:36.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.962" endtime="20201030 15:55:36.964"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.658" endtime="20201030 15:55:36.965"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.656" endtime="20201030 15:55:36.965"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:36.969" level="INFO">${RESULT} = [{'diff': 0.000333903}, {'diff': 0.0003426669999999979}, {'diff': 0.00034104199999999973}, {'diff': 0.0003426109999999996}, {'diff': 0.0003416390000000012}, {'diff': 0.00034377799999999945}, {'diff': ...</msg>
<status status="PASS" starttime="20201030 15:55:36.966" endtime="20201030 15:55:36.969"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:36.973" level="INFO">${ACCURACY} = {'diff': [0.000333903, 0.0003426669999999979, 0.00034104199999999973, 0.0003426109999999996, 0.0003416390000000012, 0.00034377799999999945, 0.0003386659999999979, 0.00034391600000000314, 0.00033915300...</msg>
<status status="PASS" starttime="20201030 15:55:36.970" endtime="20201030 15:55:36.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.977" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201030 15:55:36.976" endtime="20201030 15:55:36.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.980" level="INFO">VALUE: [0.000333903, 0.0003426669999999979, 0.00034104199999999973, 0.0003426109999999996, 0.0003416390000000012, 0.00034377799999999945, 0.0003386659999999979, 0.00034391600000000314, 0.00033915300000000176, 0.00034038899999999997, 0.00034123599999999824, 0.00034012500000000015, 0.0003432499999999998, 0.000341985999999999, 0.00033969500000000097, 0.0003418329999999997, 0.00033766600000000035, 0.0003417500000000018, 0.00034058399999999794, 0.00034127799999999694, 0.00033794399999999974, 0.00034318099999999796, 0.0003423200000000001, 0.0003399300000000022, 0.0003422360000000027, 0.00034313899999999925, 0.0003425140000000021, 0.0003413199999999991, 0.0003385280000000046, 0.00034392999999999924, 0.0003432639999999959, 0.00033816600000000085, 0.00034255500000000133, 0.0003433200000000011, 0.00034270800000000406, 0.0003442500000000043, 0.00034187499999999843, 0.00034076400000000034, 0.0003439439999999988, 0.00034329099999999557, 0.0003399439999999948, 0.0003384579999999998, 0.0003390840000000034, 0.0003382909999999975, 0.0003402360000000007, 0.0003443330000000022, 0.0003378469999999953, 0.0003414439999999963, 0.00034013899999999625, 0.0003376799999999999]</msg>
<status status="PASS" starttime="20201030 15:55:36.978" endtime="20201030 15:55:36.981"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.974" endtime="20201030 15:55:36.981"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:36.985" endtime="20201030 15:55:37.004"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.983" endtime="20201030 15:55:37.005"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.982" endtime="20201030 15:55:37.005"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.603" endtime="20201030 15:55:37.006"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.603" endtime="20201030 15:55:37.006"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.015" endtime="20201030 15:55:37.050"></status>
</kw>
<msg timestamp="20201030 15:55:37.051" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:37.013" endtime="20201030 15:55:37.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.054" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:37.052" endtime="20201030 15:55:37.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.055" endtime="20201030 15:55:37.056"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.010" endtime="20201030 15:55:37.057"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.008" endtime="20201030 15:55:37.057"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.064" endtime="20201030 15:55:37.349"></status>
</kw>
<msg timestamp="20201030 15:55:37.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022904667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023259056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:37.062" endtime="20201030 15:55:37.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022904667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023259056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:37.353" endtime="20201030 15:55:37.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.361" endtime="20201030 15:55:37.363"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.059" endtime="20201030 15:55:37.364"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.058" endtime="20201030 15:55:37.364"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:37.368" level="INFO">${RESULT} = [{'diff': 0.0003543890000000001}, {'diff': 0.00034254200000000123}, {'diff': 0.0003405000000000005}, {'diff': 0.00033847200000000285}, {'diff': 0.00033840199999999807}, {'diff': 0.00034159699999999904...</msg>
<status status="PASS" starttime="20201030 15:55:37.365" endtime="20201030 15:55:37.368"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:37.372" level="INFO">${ACCURACY} = {'diff': [0.0003543890000000001, 0.00034254200000000123, 0.0003405000000000005, 0.00033847200000000285, 0.00033840199999999807, 0.00034159699999999904, 0.0003431379999999998, 0.00034173599999999874, 0...</msg>
<status status="PASS" starttime="20201030 15:55:37.369" endtime="20201030 15:55:37.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.376" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201030 15:55:37.375" endtime="20201030 15:55:37.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.379" level="INFO">VALUE: [0.0003543890000000001, 0.00034254200000000123, 0.0003405000000000005, 0.00033847200000000285, 0.00033840199999999807, 0.00034159699999999904, 0.0003431379999999998, 0.00034173599999999874, 0.00033854199999999723, 0.0003382229999999986, 0.00034268100000000093, 0.0003428200000000006, 0.0003406249999999972, 0.00034176400000000134, 0.00033938899999999897, 0.0003416530000000008, 0.00033840199999999807, 0.0003442219999999982, 0.0003397499999999998, 0.0003416109999999986, 0.0003438059999999986, 0.0003428330000000007, 0.00033925000000000274, 0.00033777800000000385, 0.00034002799999999916, 0.00033882000000000356, 0.0003380280000000041, 0.0003381250000000016, 0.0003389030000000015, 0.00033832000000000306, 0.0003377770000000044, 0.00034052799999999966, 0.0003431110000000001, 0.00034355500000000233, 0.00034258399999999994, 0.0003403889999999965, 0.00033837500000000187, 0.00034376400000000334, 0.0003398329999999977, 0.0003402779999999994, 0.00034136099999999836, 0.00034291699999999814, 0.0003406810000000024, 0.000338209000000006, 0.0003411249999999977, 0.00034204200000000073, 0.0003397360000000002, 0.0003386659999999944, 0.00033826299999999837, 0.0003418199999999996]</msg>
<status status="PASS" starttime="20201030 15:55:37.378" endtime="20201030 15:55:37.380"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.373" endtime="20201030 15:55:37.381"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:37.385" endtime="20201030 15:55:37.404"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.383" endtime="20201030 15:55:37.405"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.382" endtime="20201030 15:55:37.405"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.007" endtime="20201030 15:55:37.405"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.006" endtime="20201030 15:55:37.406"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.414" endtime="20201030 15:55:37.452"></status>
</kw>
<msg timestamp="20201030 15:55:37.453" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:37.413" endtime="20201030 15:55:37.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:37.454" endtime="20201030 15:55:37.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.456" endtime="20201030 15:55:37.458"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.410" endtime="20201030 15:55:37.458"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.408" endtime="20201030 15:55:37.459"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.465" endtime="20201030 15:55:37.752"></status>
</kw>
<msg timestamp="20201030 15:55:37.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024869431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025202556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:37.464" endtime="20201030 15:55:37.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024869431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025202556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:37.756" endtime="20201030 15:55:37.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.764" endtime="20201030 15:55:37.765"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.461" endtime="20201030 15:55:37.766"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.459" endtime="20201030 15:55:37.766"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:37.770" level="INFO">${RESULT} = [{'diff': 0.0003331250000000001}, {'diff': 0.00034113899999999725}, {'diff': 0.0003426249999999992}, {'diff': 0.0003424439999999973}, {'diff': 0.0003433889999999995}, {'diff': 0.0003398060000000015}, ...</msg>
<status status="PASS" starttime="20201030 15:55:37.767" endtime="20201030 15:55:37.770"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:37.775" level="INFO">${ACCURACY} = {'diff': [0.0003331250000000001, 0.00034113899999999725, 0.0003426249999999992, 0.0003424439999999973, 0.0003433889999999995, 0.0003398060000000015, 0.00033915300000000176, 0.00034030599999999855, 0.0...</msg>
<status status="PASS" starttime="20201030 15:55:37.771" endtime="20201030 15:55:37.775"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.780" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201030 15:55:37.779" endtime="20201030 15:55:37.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.782" level="INFO">VALUE: [0.0003331250000000001, 0.00034113899999999725, 0.0003426249999999992, 0.0003424439999999973, 0.0003433889999999995, 0.0003398060000000015, 0.00033915300000000176, 0.00034030599999999855, 0.0003383619999999983, 0.0003380559999999998, 0.0003390129999999991, 0.00034026399999999984, 0.0003391529999999983, 0.0003418330000000032, 0.00033794399999999974, 0.0003412639999999974, 0.0003434860000000005, 0.00034033400000000116, 0.0003437639999999964, 0.0003429999999999961, 0.0003379719999999989, 0.0003438340000000012, 0.00034047300000000086, 0.00034241599999999817, 0.0003395689999999979, 0.0003442219999999982, 0.0003388469999999963, 0.00033904199999999773, 0.00034391699999999914, 0.0003440690000000024, 0.00033833400000000263, 0.0003404579999999949, 0.00033919500000000047, 0.0003406109999999976, 0.0003426669999999979, 0.0003419449999999963, 0.0003434450000000047, 0.0003411529999999968, 0.00034313899999999925, 0.0003408339999999982, 0.00033869499999999997, 0.0003427780000000019, 0.0003425000000000025, 0.000344000000000004, 0.0003395699999999974, 0.00034152800000000066, 0.0003402920000000059, 0.0003392369999999992, 0.0003427500000000028, 0.0003419580000000033]</msg>
<status status="PASS" starttime="20201030 15:55:37.781" endtime="20201030 15:55:37.783"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.776" endtime="20201030 15:55:37.784"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:37.787" endtime="20201030 15:55:37.807"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.786" endtime="20201030 15:55:37.807"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.785" endtime="20201030 15:55:37.808"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.407" endtime="20201030 15:55:37.808"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.406" endtime="20201030 15:55:37.808"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.817" endtime="20201030 15:55:37.855"></status>
</kw>
<msg timestamp="20201030 15:55:37.856" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:37.815" endtime="20201030 15:55:37.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.858" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:37.857" endtime="20201030 15:55:37.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.859" endtime="20201030 15:55:37.861"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.813" endtime="20201030 15:55:37.861"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.811" endtime="20201030 15:55:37.862"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.868" endtime="20201030 15:55:38.156"></status>
</kw>
<msg timestamp="20201030 15:55:38.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024347056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024679889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:37.867" endtime="20201030 15:55:38.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:38.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024347056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024679889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:38.160" endtime="20201030 15:55:38.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:38.169" endtime="20201030 15:55:38.170"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.864" endtime="20201030 15:55:38.171"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.862" endtime="20201030 15:55:38.171"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:38.175" level="INFO">${RESULT} = [{'diff': 0.00033283300000000113}, {'diff': 0.00033993100000000165}, {'diff': 0.0003431110000000001}, {'diff': 0.00033822199999999913}, {'diff': 0.0003407500000000008}, {'diff': 0.0003386389999999982}...</msg>
<status status="PASS" starttime="20201030 15:55:38.172" endtime="20201030 15:55:38.175"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:38.179" level="INFO">${ACCURACY} = {'diff': [0.00033283300000000113, 0.00033993100000000165, 0.0003431110000000001, 0.00033822199999999913, 0.0003407500000000008, 0.0003386389999999982, 0.00033936099999999983, 0.00033769499999999897, 0...</msg>
<status status="PASS" starttime="20201030 15:55:38.176" endtime="20201030 15:55:38.179"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:38.184" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201030 15:55:38.183" endtime="20201030 15:55:38.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:38.186" level="INFO">VALUE: [0.00033283300000000113, 0.00033993100000000165, 0.0003431110000000001, 0.00033822199999999913, 0.0003407500000000008, 0.0003386389999999982, 0.00033936099999999983, 0.00033769499999999897, 0.0003397499999999998, 0.000339194000000001, 0.00034058399999999794, 0.00033847299999999886, 0.00034054100000000323, 0.0003406659999999999, 0.0003409590000000018, 0.00034433299999999875, 0.00033770799999999906, 0.00034236099999999936, 0.0003411249999999977, 0.0003382229999999986, 0.0003434579999999979, 0.00033948599999999995, 0.00034026399999999984, 0.0003438330000000017, 0.00034058399999999794, 0.00033804099999999726, 0.0003413329999999992, 0.0003411529999999968, 0.00033808299999999597, 0.00034408400000000144, 0.00033769499999999897, 0.0003387779999999979, 0.000339291999999998, 0.0003395559999999978, 0.00033904199999999773, 0.00034209699999999954, 0.0003416109999999986, 0.0003404300000000027, 0.0003393610000000033, 0.00033766699999999983, 0.0003440700000000019, 0.0003400559999999983, 0.00033815300000000076, 0.000340403000000003, 0.0003396529999999953, 0.00034374999999999684, 0.0003389030000000015, 0.00034104199999999973, 0.0003376390000000007, 0.00034387500000000043]</msg>
<status status="PASS" starttime="20201030 15:55:38.185" endtime="20201030 15:55:38.191"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.180" endtime="20201030 15:55:38.192"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:38.196" endtime="20201030 15:55:38.215"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.194" endtime="20201030 15:55:38.216"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.193" endtime="20201030 15:55:38.216"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.809" endtime="20201030 15:55:38.216"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.808" endtime="20201030 15:55:38.217"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:38.225" endtime="20201030 15:55:38.267"></status>
</kw>
<msg timestamp="20201030 15:55:38.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:38.224" endtime="20201030 15:55:38.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:38.270" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:38.268" endtime="20201030 15:55:38.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:38.271" endtime="20201030 15:55:38.272"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.221" endtime="20201030 15:55:38.273"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.219" endtime="20201030 15:55:38.273"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:38.280" endtime="20201030 15:55:38.565"></status>
</kw>
<msg timestamp="20201030 15:55:38.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022897764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023241736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:38.278" endtime="20201030 15:55:38.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:38.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022897764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023241736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:38.569" endtime="20201030 15:55:38.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:38.578" endtime="20201030 15:55:38.579"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.276" endtime="20201030 15:55:38.580"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.274" endtime="20201030 15:55:38.580"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:38.584" level="INFO">${RESULT} = [{'diff': 0.00034397199999999795}, {'diff': 0.00034255599999999733}, {'diff': 0.00034227699999999847}, {'diff': 0.0003405140000000001}, {'diff': 0.0003382369999999982}, {'diff': 0.000343679999999999},...</msg>
<status status="PASS" starttime="20201030 15:55:38.581" endtime="20201030 15:55:38.584"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:38.588" level="INFO">${ACCURACY} = {'diff': [0.00034397199999999795, 0.00034255599999999733, 0.00034227699999999847, 0.0003405140000000001, 0.0003382369999999982, 0.000343679999999999, 0.0003435139999999996, 0.00034162500000000165, 0.0...</msg>
<status status="PASS" starttime="20201030 15:55:38.585" endtime="20201030 15:55:38.588"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:38.593" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201030 15:55:38.592" endtime="20201030 15:55:38.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:38.595" level="INFO">VALUE: [0.00034397199999999795, 0.00034255599999999733, 0.00034227699999999847, 0.0003405140000000001, 0.0003382369999999982, 0.000343679999999999, 0.0003435139999999996, 0.00034162500000000165, 0.00034008299999999797, 0.00034320900000000057, 0.0003412499999999978, 0.000342888999999999, 0.0003425139999999986, 0.0003429440000000013, 0.00034236099999999936, 0.00034130599999999955, 0.00033838899999999797, 0.00034016699999999886, 0.00034373600000000074, 0.00034280600000000105, 0.0003404580000000018, 0.0003418199999999996, 0.00034036100000000083, 0.00034304100000000226, 0.000343098, 0.00034165300000000426, 0.0003424580000000038, 0.00033947299999999986, 0.00034423599999999777, 0.00034087500000000437, 0.00034154100000000076, 0.0003427360000000032, 0.0003433470000000008, 0.0003419859999999955, 0.0003437500000000038, 0.0003414439999999963, 0.00034406899999999546, 0.0003417500000000018, 0.0003397779999999989, 0.0003379589999999988, 0.0003440560000000023, 0.00033870899999999954, 0.00033958299999999747, 0.0003382499999999983, 0.0003416669999999969, 0.0003412500000000013, 0.00034418099999999896, 0.0003390970000000035, 0.00034292999999999824, 0.00034352800000000266]</msg>
<status status="PASS" starttime="20201030 15:55:38.594" endtime="20201030 15:55:38.597"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.589" endtime="20201030 15:55:38.597"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:38.601" endtime="20201030 15:55:38.621"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.599" endtime="20201030 15:55:38.621"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.598" endtime="20201030 15:55:38.622"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.217" endtime="20201030 15:55:38.622"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.217" endtime="20201030 15:55:38.622"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:38.631" endtime="20201030 15:55:38.668"></status>
</kw>
<msg timestamp="20201030 15:55:38.669" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:38.629" endtime="20201030 15:55:38.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:38.672" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:38.670" endtime="20201030 15:55:38.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:38.673" endtime="20201030 15:55:38.674"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.627" endtime="20201030 15:55:38.675"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.624" endtime="20201030 15:55:38.675"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:38.682" endtime="20201030 15:55:38.968"></status>
</kw>
<msg timestamp="20201030 15:55:38.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024438431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024790917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:38.680" endtime="20201030 15:55:38.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:38.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024438431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024790917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:38.972" endtime="20201030 15:55:38.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:38.980" endtime="20201030 15:55:38.982"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.678" endtime="20201030 15:55:38.982"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.676" endtime="20201030 15:55:38.983"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:38.987" level="INFO">${RESULT} = [{'diff': 0.0003524859999999991}, {'diff': 0.0003396529999999988}, {'diff': 0.0003430700000000009}, {'diff': 0.0003429439999999978}, {'diff': 0.0003434019999999996}, {'diff': 0.0003387779999999979}, {...</msg>
<status status="PASS" starttime="20201030 15:55:38.984" endtime="20201030 15:55:38.987"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:38.992" level="INFO">${ACCURACY} = {'diff': [0.0003524859999999991, 0.0003396529999999988, 0.0003430700000000009, 0.0003429439999999978, 0.0003434019999999996, 0.0003387779999999979, 0.0003426379999999993, 0.00034031899999999865, 0.000...</msg>
<status status="PASS" starttime="20201030 15:55:38.988" endtime="20201030 15:55:38.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:38.996" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201030 15:55:38.995" endtime="20201030 15:55:38.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:38.999" level="INFO">VALUE: [0.0003524859999999991, 0.0003396529999999988, 0.0003430700000000009, 0.0003429439999999978, 0.0003434019999999996, 0.0003387779999999979, 0.0003426379999999993, 0.00034031899999999865, 0.00034409699999999807, 0.00034272200000000017, 0.0003411530000000003, 0.00034277799999999845, 0.00033962499999999965, 0.0003397360000000002, 0.00033962499999999965, 0.0003422499999999988, 0.0003397230000000001, 0.00034337499999999993, 0.00034130500000000355, 0.0003396520000000028, 0.0003429309999999977, 0.00034197199999999595, 0.00033904199999999773, 0.00033931899999999765, 0.0003413339999999987, 0.0003397919999999985, 0.000343403000000006, 0.0003435129999999967, 0.0003420840000000064, 0.0003411669999999964, 0.00034281900000000115, 0.0003439439999999988, 0.0003420830000000069, 0.00033902799999999816, 0.00034363899999999975, 0.0003392779999999984, 0.0003414580000000028, 0.0003386520000000018, 0.0003379030000000005, 0.0003420549999999939, 0.00034086099999999786, 0.0003377779999999969, 0.0003414580000000028, 0.00033983400000000413, 0.0003417230000000021, 0.00034037500000000387, 0.0003402360000000007, 0.00033826399999999784, 0.0003387919999999975, 0.00034041699999999564]</msg>
<status status="PASS" starttime="20201030 15:55:38.997" endtime="20201030 15:55:38.999"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.993" endtime="20201030 15:55:39.000"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:39.004" endtime="20201030 15:55:39.023"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.002" endtime="20201030 15:55:39.024"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.001" endtime="20201030 15:55:39.024"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.623" endtime="20201030 15:55:39.025"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.622" endtime="20201030 15:55:39.025"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.034" endtime="20201030 15:55:39.070"></status>
</kw>
<msg timestamp="20201030 15:55:39.071" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:39.032" endtime="20201030 15:55:39.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.073" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:39.072" endtime="20201030 15:55:39.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.074" endtime="20201030 15:55:39.076"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.029" endtime="20201030 15:55:39.076"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.027" endtime="20201030 15:55:39.077"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.083" endtime="20201030 15:55:39.372"></status>
</kw>
<msg timestamp="20201030 15:55:39.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023589347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02393225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:39.082" endtime="20201030 15:55:39.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023589347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02393225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:39.376" endtime="20201030 15:55:39.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.384" endtime="20201030 15:55:39.386"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.079" endtime="20201030 15:55:39.386"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.077" endtime="20201030 15:55:39.387"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:39.391" level="INFO">${RESULT} = [{'diff': 0.00034290299999999857}, {'diff': 0.0003410279999999967}, {'diff': 0.0003432499999999998}, {'diff': 0.0003396389999999992}, {'diff': 0.0003439720000000014}, {'diff': 0.00034290300000000204},...</msg>
<status status="PASS" starttime="20201030 15:55:39.387" endtime="20201030 15:55:39.391"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:39.395" level="INFO">${ACCURACY} = {'diff': [0.00034290299999999857, 0.0003410279999999967, 0.0003432499999999998, 0.0003396389999999992, 0.0003439720000000014, 0.00034290300000000204, 0.00034237499999999893, 0.00033916700000000133, 0....</msg>
<status status="PASS" starttime="20201030 15:55:39.392" endtime="20201030 15:55:39.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.399" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201030 15:55:39.398" endtime="20201030 15:55:39.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.402" level="INFO">VALUE: [0.00034290299999999857, 0.0003410279999999967, 0.0003432499999999998, 0.0003396389999999992, 0.0003439720000000014, 0.00034290300000000204, 0.00034237499999999893, 0.00033916700000000133, 0.0003400139999999996, 0.000341694, 0.00033841599999999764, 0.0003415970000000025, 0.00034263899999999875, 0.00033788899999999747, 0.00033908300000000044, 0.00034236099999999936, 0.000338306, 0.0003377780000000004, 0.0003402360000000007, 0.0003410140000000006, 0.00033836099999999883, 0.0003402500000000003, 0.00034108399999999844, 0.00033934700000000373, 0.0003436669999999989, 0.0003406529999999963, 0.00033904099999999826, 0.00033788900000000094, 0.00033870899999999954, 0.00033908299999999697, 0.0003411390000000042, 0.0003437639999999964, 0.0003409999999999941, 0.00034181900000000015, 0.00034098600000000145, 0.00033944400000000124, 0.0003438329999999948, 0.0003424869999999955, 0.0003401250000000036, 0.00034037500000000387, 0.000338403000000001, 0.0003389579999999934, 0.0003431659999999989, 0.0003431249999999997, 0.00033831899999999665, 0.00033859800000000245, 0.00034186099999999886, 0.00034426400000000384, 0.0003424869999999955, 0.0003384999999999985]</msg>
<status status="PASS" starttime="20201030 15:55:39.400" endtime="20201030 15:55:39.402"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.395" endtime="20201030 15:55:39.403"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:39.407" endtime="20201030 15:55:39.426"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.405" endtime="20201030 15:55:39.427"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.404" endtime="20201030 15:55:39.427"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.026" endtime="20201030 15:55:39.427"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.025" endtime="20201030 15:55:39.427"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.436" endtime="20201030 15:55:39.479"></status>
</kw>
<msg timestamp="20201030 15:55:39.479" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:39.435" endtime="20201030 15:55:39.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.482" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:39.480" endtime="20201030 15:55:39.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.483" endtime="20201030 15:55:39.485"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.432" endtime="20201030 15:55:39.485"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.430" endtime="20201030 15:55:39.486"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.492" endtime="20201030 15:55:39.778"></status>
</kw>
<msg timestamp="20201030 15:55:39.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027916542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028252347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:39.491" endtime="20201030 15:55:39.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027916542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028252347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:39.783" endtime="20201030 15:55:39.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.791" endtime="20201030 15:55:39.792"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.488" endtime="20201030 15:55:39.793"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.486" endtime="20201030 15:55:39.793"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:39.797" level="INFO">${RESULT} = [{'diff': 0.0003358050000000015}, {'diff': 0.0003392780000000019}, {'diff': 0.0003413329999999992}, {'diff': 0.00034420900000000157}, {'diff': 0.0003418329999999997}, {'diff': 0.0003435690000000019}, ...</msg>
<status status="PASS" starttime="20201030 15:55:39.794" endtime="20201030 15:55:39.797"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:39.801" level="INFO">${ACCURACY} = {'diff': [0.0003358050000000015, 0.0003392780000000019, 0.0003413329999999992, 0.00034420900000000157, 0.0003418329999999997, 0.0003435690000000019, 0.0003396250000000031, 0.00033797200000000235, 0.00...</msg>
<status status="PASS" starttime="20201030 15:55:39.798" endtime="20201030 15:55:39.801"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.806" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201030 15:55:39.805" endtime="20201030 15:55:39.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.808" level="INFO">VALUE: [0.0003358050000000015, 0.0003392780000000019, 0.0003413329999999992, 0.00034420900000000157, 0.0003418329999999997, 0.0003435690000000019, 0.0003396250000000031, 0.00033797200000000235, 0.0003402370000000002, 0.0003407779999999999, 0.0003408190000000061, 0.0003396810000000014, 0.0003384449999999997, 0.0003379719999999989, 0.0003437230000000041, 0.0003438330000000017, 0.0003418329999999997, 0.0003409579999999954, 0.00034397199999999795, 0.0003432079999999976, 0.0003420699999999999, 0.00034402800000000316, 0.0003396800000000019, 0.0003411390000000042, 0.00034152800000000066, 0.0003383049999999971, 0.00034241699999999764, 0.0003399590000000008, 0.00033808299999999597, 0.00033858399999999594, 0.00034002799999999916, 0.00034436100000000136, 0.00033811100000000205, 0.0003379030000000005, 0.000340097999999997, 0.00034076400000000034, 0.0003412780000000004, 0.0003378329999999957, 0.00033784799999999476, 0.00033970800000000106, 0.00033894400000000074, 0.0003401390000000032, 0.00034091699999999614, 0.00033868099999999346, 0.0003380559999999963, 0.000343403000000006, 0.0003441110000000011, 0.00034181900000000015, 0.0003385689999999969, 0.0003404300000000027]</msg>
<status status="PASS" starttime="20201030 15:55:39.807" endtime="20201030 15:55:39.810"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.802" endtime="20201030 15:55:39.810"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:39.814" endtime="20201030 15:55:39.833"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.812" endtime="20201030 15:55:39.834"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.811" endtime="20201030 15:55:39.834"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.428" endtime="20201030 15:55:39.835"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.428" endtime="20201030 15:55:39.835"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.844" endtime="20201030 15:55:39.880"></status>
</kw>
<msg timestamp="20201030 15:55:39.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:39.842" endtime="20201030 15:55:39.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:39.881" endtime="20201030 15:55:39.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.884" endtime="20201030 15:55:39.885"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.839" endtime="20201030 15:55:39.886"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.837" endtime="20201030 15:55:39.886"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.893" endtime="20201030 15:55:40.182"></status>
</kw>
<msg timestamp="20201030 15:55:40.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022371486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022721708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:39.891" endtime="20201030 15:55:40.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022371486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022721708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:40.186" endtime="20201030 15:55:40.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:40.194" endtime="20201030 15:55:40.195"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.889" endtime="20201030 15:55:40.196"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.887" endtime="20201030 15:55:40.196"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:40.200" level="INFO">${RESULT} = [{'diff': 0.00035022200000000073}, {'diff': 0.0003407779999999999}, {'diff': 0.0003419440000000003}, {'diff': 0.00034076300000000087}, {'diff': 0.00033820799999999956}, {'diff': 0.00033786200000000127...</msg>
<status status="PASS" starttime="20201030 15:55:40.197" endtime="20201030 15:55:40.201"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:40.205" level="INFO">${ACCURACY} = {'diff': [0.00035022200000000073, 0.0003407779999999999, 0.0003419440000000003, 0.00034076300000000087, 0.00033820799999999956, 0.00033786200000000127, 0.0003382780000000009, 0.0003424719999999999, 0....</msg>
<status status="PASS" starttime="20201030 15:55:40.201" endtime="20201030 15:55:40.205"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.210" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201030 15:55:40.209" endtime="20201030 15:55:40.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.212" level="INFO">VALUE: [0.00035022200000000073, 0.0003407779999999999, 0.0003419440000000003, 0.00034076300000000087, 0.00033820799999999956, 0.00033786200000000127, 0.0003382780000000009, 0.0003424719999999999, 0.00034433299999999875, 0.0003433200000000011, 0.0003422500000000023, 0.00034187499999999843, 0.00034158299999999947, 0.0003443609999999979, 0.00034, 0.0003401110000000006, 0.00034418100000000243, 0.0003436110000000006, 0.0003418469999999993, 0.00033856900000000037, 0.0003430140000000026, 0.000340985999999998, 0.0003431529999999988, 0.00033798599999999845, 0.0003416390000000012, 0.00034048600000000095, 0.0003431799999999985, 0.00034104199999999973, 0.0003432779999999955, 0.0003411109999999981, 0.00033901400000000553, 0.00034263899999999875, 0.0003406390000000037, 0.0003431249999999997, 0.0003390559999999973, 0.00033876399999999834, 0.0003391529999999948, 0.0003431110000000001, 0.0003442230000000046, 0.00034113899999999725, 0.0003440270000000037, 0.0003420409999999943, 0.0003395269999999992, 0.00033854199999999723, 0.000338097999999995, 0.00033905499999999783, 0.00034263899999999875, 0.00033986099999999686, 0.0003379449999999992, 0.00034270900000000354]</msg>
<status status="PASS" starttime="20201030 15:55:40.211" endtime="20201030 15:55:40.213"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.206" endtime="20201030 15:55:40.214"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:40.217" endtime="20201030 15:55:40.237"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.216" endtime="20201030 15:55:40.237"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.215" endtime="20201030 15:55:40.238"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.836" endtime="20201030 15:55:40.238"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.835" endtime="20201030 15:55:40.238"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:40.247" endtime="20201030 15:55:40.281"></status>
</kw>
<msg timestamp="20201030 15:55:40.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:40.245" endtime="20201030 15:55:40.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:40.283" endtime="20201030 15:55:40.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:40.285" endtime="20201030 15:55:40.287"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.243" endtime="20201030 15:55:40.288"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.240" endtime="20201030 15:55:40.288"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:40.295" endtime="20201030 15:55:40.581"></status>
</kw>
<msg timestamp="20201030 15:55:40.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021043667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021393986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:40.293" endtime="20201030 15:55:40.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021043667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021393986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:40.585" endtime="20201030 15:55:40.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:40.594" endtime="20201030 15:55:40.595"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.290" endtime="20201030 15:55:40.596"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.289" endtime="20201030 15:55:40.596"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:40.600" level="INFO">${RESULT} = [{'diff': 0.0003503190000000017}, {'diff': 0.0003383329999999997}, {'diff': 0.0003379449999999992}, {'diff': 0.0003410980000000015}, {'diff': 0.00034062500000000065}, {'diff': 0.0003389030000000015}, ...</msg>
<status status="PASS" starttime="20201030 15:55:40.597" endtime="20201030 15:55:40.600"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:40.604" level="INFO">${ACCURACY} = {'diff': [0.0003503190000000017, 0.0003383329999999997, 0.0003379449999999992, 0.0003410980000000015, 0.00034062500000000065, 0.0003389030000000015, 0.0003430139999999991, 0.00033806999999999934, 0.00...</msg>
<status status="PASS" starttime="20201030 15:55:40.601" endtime="20201030 15:55:40.604"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.609" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201030 15:55:40.608" endtime="20201030 15:55:40.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.611" level="INFO">VALUE: [0.0003503190000000017, 0.0003383329999999997, 0.0003379449999999992, 0.0003410980000000015, 0.00034062500000000065, 0.0003389030000000015, 0.0003430139999999991, 0.00033806999999999934, 0.00034304199999999826, 0.00033916700000000133, 0.00034208299999999997, 0.0003392359999999997, 0.00034158300000000294, 0.0003405970000000015, 0.0003401939999999985, 0.00034315199999999935, 0.00034195799999999985, 0.00033990200000000304, 0.00034395800000000185, 0.0003397360000000002, 0.0003377640000000008, 0.00034359699999999757, 0.0003436110000000006, 0.00034222299999999914, 0.0003392779999999984, 0.0003401659999999994, 0.0003381250000000016, 0.0003437500000000003, 0.00034098600000000145, 0.00034284699999999335, 0.00034045899999999435, 0.0003426529999999983, 0.00034104100000000026, 0.0003384160000000011, 0.00034020800000000156, 0.0003425700000000004, 0.0003434309999999982, 0.00034258399999999994, 0.0003440140000000036, 0.00034172200000000263, 0.0003438340000000012, 0.0003425140000000021, 0.0003394720000000004, 0.00034037499999999693, 0.0003440560000000023, 0.0003379030000000005, 0.00034301399999999566, 0.00033865300000000126, 0.0003439580000000053, 0.0003402909999999995]</msg>
<status status="PASS" starttime="20201030 15:55:40.610" endtime="20201030 15:55:40.612"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.605" endtime="20201030 15:55:40.612"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:40.616" endtime="20201030 15:55:40.635"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.615" endtime="20201030 15:55:40.636"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.613" endtime="20201030 15:55:40.636"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.239" endtime="20201030 15:55:40.637"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.238" endtime="20201030 15:55:40.637"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:40.646" endtime="20201030 15:55:40.684"></status>
</kw>
<msg timestamp="20201030 15:55:40.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:40.644" endtime="20201030 15:55:40.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.687" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:40.686" endtime="20201030 15:55:40.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:40.689" endtime="20201030 15:55:40.690"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.641" endtime="20201030 15:55:40.691"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.639" endtime="20201030 15:55:40.691"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:40.698" endtime="20201030 15:55:40.984"></status>
</kw>
<msg timestamp="20201030 15:55:40.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024159208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024503083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:40.696" endtime="20201030 15:55:40.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024159208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024503083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:40.988" endtime="20201030 15:55:40.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:40.996" endtime="20201030 15:55:40.998"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.694" endtime="20201030 15:55:40.999"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.692" endtime="20201030 15:55:40.999"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:41.003" level="INFO">${RESULT} = [{'diff': 0.00034387499999999696}, {'diff': 0.0003386250000000021}, {'diff': 0.0003398469999999973}, {'diff': 0.000342986}, {'diff': 0.00034154199999999676}, {'diff': 0.00034066699999999936}, {'diff':...</msg>
<status status="PASS" starttime="20201030 15:55:41.000" endtime="20201030 15:55:41.003"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:41.007" level="INFO">${ACCURACY} = {'diff': [0.00034387499999999696, 0.0003386250000000021, 0.0003398469999999973, 0.000342986, 0.00034154199999999676, 0.00034066699999999936, 0.00034072199999999817, 0.00033979200000000195, 0.000338347...</msg>
<status status="PASS" starttime="20201030 15:55:41.004" endtime="20201030 15:55:41.007"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.012" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201030 15:55:41.011" endtime="20201030 15:55:41.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.014" level="INFO">VALUE: [0.00034387499999999696, 0.0003386250000000021, 0.0003398469999999973, 0.000342986, 0.00034154199999999676, 0.00034066699999999936, 0.00034072199999999817, 0.00033979200000000195, 0.00033834700000000273, 0.0003389309999999972, 0.00034386100000000086, 0.0003406109999999976, 0.0003415559999999998, 0.00033836099999999883, 0.00033968099999999793, 0.0003381529999999973, 0.00034198600000000245, 0.00034134799999999826, 0.00034322200000000067, 0.00033820899999999557, 0.0003397919999999985, 0.00034248600000000295, 0.0003437089999999976, 0.0003393190000000046, 0.0003404450000000017, 0.0003384999999999985, 0.0003401520000000033, 0.00033790299999999357, 0.00034418099999999896, 0.00034266700000000483, 0.00033832000000000306, 0.00033772199999999863, 0.000341777999999994, 0.00034387500000000043, 0.00034381900000000215, 0.0003385559999999968, 0.0003429579999999974, 0.00034354100000000276, 0.00034030599999999855, 0.0003402230000000006, 0.0003435560000000018, 0.0003439579999999984, 0.00033823600000000564, 0.00034336100000000036, 0.00034240299999999807, 0.0003384589999999993, 0.0003405979999999975, 0.0003431529999999988, 0.0003406250000000041, 0.00034423599999999777]</msg>
<status status="PASS" starttime="20201030 15:55:41.013" endtime="20201030 15:55:41.016"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.008" endtime="20201030 15:55:41.016"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:41.020" endtime="20201030 15:55:41.039"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.018" endtime="20201030 15:55:41.040"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.017" endtime="20201030 15:55:41.040"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.638" endtime="20201030 15:55:41.041"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.637" endtime="20201030 15:55:41.041"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.049" endtime="20201030 15:55:41.084"></status>
</kw>
<msg timestamp="20201030 15:55:41.085" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:41.048" endtime="20201030 15:55:41.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.087" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:41.086" endtime="20201030 15:55:41.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.089" endtime="20201030 15:55:41.090"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.045" endtime="20201030 15:55:41.091"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.043" endtime="20201030 15:55:41.091"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.098" endtime="20201030 15:55:41.383"></status>
</kw>
<msg timestamp="20201030 15:55:41.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022203708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022540556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:41.096" endtime="20201030 15:55:41.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022203708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022540556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:41.387" endtime="20201030 15:55:41.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.395" endtime="20201030 15:55:41.396"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.094" endtime="20201030 15:55:41.397"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.092" endtime="20201030 15:55:41.397"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:41.401" level="INFO">${RESULT} = [{'diff': 0.0003368480000000007}, {'diff': 0.00034041599999999964}, {'diff': 0.00034226400000000184}, {'diff': 0.000343292000000002}, {'diff': 0.0003402779999999994}, {'diff': 0.000343679999999999}, {...</msg>
<status status="PASS" starttime="20201030 15:55:41.398" endtime="20201030 15:55:41.401"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:41.406" level="INFO">${ACCURACY} = {'diff': [0.0003368480000000007, 0.00034041599999999964, 0.00034226400000000184, 0.000343292000000002, 0.0003402779999999994, 0.000343679999999999, 0.00034187499999999843, 0.00034258300000000047, 0.00...</msg>
<status status="PASS" starttime="20201030 15:55:41.402" endtime="20201030 15:55:41.406"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.411" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201030 15:55:41.410" endtime="20201030 15:55:41.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.413" level="INFO">VALUE: [0.0003368480000000007, 0.00034041599999999964, 0.00034226400000000184, 0.000343292000000002, 0.0003402779999999994, 0.000343679999999999, 0.00034187499999999843, 0.00034258300000000047, 0.0003443059999999991, 0.0003386109999999991, 0.00033859800000000245, 0.00033904100000000173, 0.0003403200000000016, 0.00033938900000000244, 0.0003434439999999983, 0.00034048600000000095, 0.000339194000000001, 0.000338597000000003, 0.00034176400000000134, 0.00034088900000000047, 0.00034315199999999935, 0.0003406110000000011, 0.00034386100000000086, 0.00033883399999999966, 0.0003439439999999988, 0.0003427500000000028, 0.0003435419999999953, 0.00034136099999999836, 0.0003438340000000012, 0.0003421119999999986, 0.0003427089999999966, 0.0003431249999999997, 0.0003411659999999969, 0.0003431659999999989, 0.00034351399999999616, 0.0003400139999999996, 0.0003403329999999982, 0.0003383049999999971, 0.00033972200000000063, 0.00033958299999999747, 0.0003403329999999982, 0.000341403000000004, 0.0003390139999999986, 0.0003421109999999991, 0.00033887499999999543, 0.0003440690000000024, 0.00033893100000000065, 0.00034168099999999646, 0.00034313899999999925, 0.00034436100000000136]</msg>
<status status="PASS" starttime="20201030 15:55:41.412" endtime="20201030 15:55:41.414"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.407" endtime="20201030 15:55:41.414"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:41.418" endtime="20201030 15:55:41.438"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.417" endtime="20201030 15:55:41.438"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.415" endtime="20201030 15:55:41.438"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.042" endtime="20201030 15:55:41.439"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.041" endtime="20201030 15:55:41.439"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.448" endtime="20201030 15:55:41.482"></status>
</kw>
<msg timestamp="20201030 15:55:41.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:41.446" endtime="20201030 15:55:41.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.485" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:41.484" endtime="20201030 15:55:41.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.486" endtime="20201030 15:55:41.488"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.444" endtime="20201030 15:55:41.489"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.441" endtime="20201030 15:55:41.489"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.496" endtime="20201030 15:55:41.783"></status>
</kw>
<msg timestamp="20201030 15:55:41.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020844639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021184778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:41.494" endtime="20201030 15:55:41.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020844639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021184778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:41.787" endtime="20201030 15:55:41.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.796" endtime="20201030 15:55:41.797"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.491" endtime="20201030 15:55:41.798"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.490" endtime="20201030 15:55:41.798"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:41.802" level="INFO">${RESULT} = [{'diff': 0.0003401389999999997}, {'diff': 0.0003428470000000003}, {'diff': 0.00034227700000000194}, {'diff': 0.0003393610000000033}, {'diff': 0.00033811100000000205}, {'diff': 0.000338500000000002}, ...</msg>
<status status="PASS" starttime="20201030 15:55:41.799" endtime="20201030 15:55:41.802"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:41.806" level="INFO">${ACCURACY} = {'diff': [0.0003401389999999997, 0.0003428470000000003, 0.00034227700000000194, 0.0003393610000000033, 0.00033811100000000205, 0.000338500000000002, 0.00034140200000000107, 0.00034154200000000023, 0.0...</msg>
<status status="PASS" starttime="20201030 15:55:41.803" endtime="20201030 15:55:41.806"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.810" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201030 15:55:41.809" endtime="20201030 15:55:41.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.813" level="INFO">VALUE: [0.0003401389999999997, 0.0003428470000000003, 0.00034227700000000194, 0.0003393610000000033, 0.00033811100000000205, 0.000338500000000002, 0.00034140200000000107, 0.00034154200000000023, 0.0003406390000000002, 0.00034280600000000105, 0.0003404719999999979, 0.0003401110000000006, 0.00034086099999999786, 0.0003437079999999981, 0.0003432639999999994, 0.0003420690000000004, 0.0003408750000000009, 0.00034272200000000017, 0.0003426249999999992, 0.0003379589999999988, 0.0003418750000000019, 0.0003441669999999994, 0.0003438200000000016, 0.00034108299999999897, 0.00033822199999999913, 0.00033888899999999847, 0.0003414719999999989, 0.00034309700000000054, 0.0003421669999999974, 0.00034005499999999883, 0.0003394300000000017, 0.0003386940000000005, 0.000342888999999999, 0.0003385689999999969, 0.00033970800000000106, 0.00034343100000000515, 0.00034102800000000016, 0.0003403339999999977, 0.00034409700000000154, 0.00034359700000000104, 0.0003406669999999959, 0.0003407360000000012, 0.0003415559999999998, 0.0003407779999999999, 0.0003396390000000027, 0.0003437500000000038, 0.0003402920000000059, 0.0003381390000000012, 0.0003391390000000022, 0.0003391250000000026]</msg>
<status status="PASS" starttime="20201030 15:55:41.812" endtime="20201030 15:55:41.814"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.807" endtime="20201030 15:55:41.814"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:41.818" endtime="20201030 15:55:41.837"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.816" endtime="20201030 15:55:41.838"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.815" endtime="20201030 15:55:41.838"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.440" endtime="20201030 15:55:41.839"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.439" endtime="20201030 15:55:41.839"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.848" endtime="20201030 15:55:41.884"></status>
</kw>
<msg timestamp="20201030 15:55:41.885" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:41.846" endtime="20201030 15:55:41.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.887" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:41.886" endtime="20201030 15:55:41.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.888" endtime="20201030 15:55:41.890"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.843" endtime="20201030 15:55:41.890"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.841" endtime="20201030 15:55:41.891"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.897" endtime="20201030 15:55:42.183"></status>
</kw>
<msg timestamp="20201030 15:55:42.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022922764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023259333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:41.896" endtime="20201030 15:55:42.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022922764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023259333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:42.188" endtime="20201030 15:55:42.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.196" endtime="20201030 15:55:42.197"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.893" endtime="20201030 15:55:42.198"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.891" endtime="20201030 15:55:42.198"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:42.202" level="INFO">${RESULT} = [{'diff': 0.00033656899999999837}, {'diff': 0.0003438049999999991}, {'diff': 0.00034226400000000184}, {'diff': 0.00034086100000000133}, {'diff': 0.00033958300000000094}, {'diff': 0.0003389310000000006...</msg>
<status status="PASS" starttime="20201030 15:55:42.199" endtime="20201030 15:55:42.202"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:42.206" level="INFO">${ACCURACY} = {'diff': [0.00033656899999999837, 0.0003438049999999991, 0.00034226400000000184, 0.00034086100000000133, 0.00033958300000000094, 0.00033893100000000065, 0.00034076300000000087, 0.0003385550000000008, ...</msg>
<status status="PASS" starttime="20201030 15:55:42.203" endtime="20201030 15:55:42.206"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.211" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201030 15:55:42.210" endtime="20201030 15:55:42.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.213" level="INFO">VALUE: [0.00033656899999999837, 0.0003438049999999991, 0.00034226400000000184, 0.00034086100000000133, 0.00033958300000000094, 0.00033893100000000065, 0.00034076300000000087, 0.0003385550000000008, 0.0003438339999999977, 0.0003437219999999977, 0.0003435409999999993, 0.0003382779999999974, 0.00033887500000000237, 0.0003389030000000015, 0.00034391699999999914, 0.00034330600000000155, 0.0003405140000000001, 0.00033820799999999956, 0.0003431249999999997, 0.00033925000000000274, 0.0003416109999999986, 0.0003417639999999979, 0.00034058300000000194, 0.0003415559999999998, 0.0003431110000000001, 0.0003388610000000028, 0.0003421380000000057, 0.0003387779999999979, 0.0003417219999999957, 0.0003390689999999974, 0.00034059699999999804, 0.00034406899999999546, 0.0003440409999999963, 0.0003401109999999971, 0.0003399300000000022, 0.0003429439999999978, 0.00034031899999999865, 0.000337806000000003, 0.000339291999999998, 0.0003391109999999961, 0.0003395689999999979, 0.00033937500000000287, 0.0003437920000000025, 0.0003393889999999955, 0.0003393889999999955, 0.0003415140000000011, 0.0003421379999999988, 0.000338806000000004, 0.0003442500000000043, 0.0003390280000000051]</msg>
<status status="PASS" starttime="20201030 15:55:42.212" endtime="20201030 15:55:42.215"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.207" endtime="20201030 15:55:42.215"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:42.219" endtime="20201030 15:55:42.238"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.217" endtime="20201030 15:55:42.239"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.216" endtime="20201030 15:55:42.239"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.840" endtime="20201030 15:55:42.240"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.839" endtime="20201030 15:55:42.240"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.249" endtime="20201030 15:55:42.286"></status>
</kw>
<msg timestamp="20201030 15:55:42.286" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:42.247" endtime="20201030 15:55:42.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.289" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:42.287" endtime="20201030 15:55:42.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.290" endtime="20201030 15:55:42.291"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.244" endtime="20201030 15:55:42.292"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.242" endtime="20201030 15:55:42.292"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.299" endtime="20201030 15:55:42.584"></status>
</kw>
<msg timestamp="20201030 15:55:42.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023886389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024224528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:42.297" endtime="20201030 15:55:42.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023886389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024224528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:42.588" endtime="20201030 15:55:42.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.596" endtime="20201030 15:55:42.598"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.295" endtime="20201030 15:55:42.599"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.293" endtime="20201030 15:55:42.599"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:42.603" level="INFO">${RESULT} = [{'diff': 0.0003381389999999977}, {'diff': 0.00034190200000000157}, {'diff': 0.0003396389999999992}, {'diff': 0.0003439590000000013}, {'diff': 0.0003383190000000001}, {'diff': 0.0003437080000000016}, ...</msg>
<status status="PASS" starttime="20201030 15:55:42.600" endtime="20201030 15:55:42.603"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:42.608" level="INFO">${ACCURACY} = {'diff': [0.0003381389999999977, 0.00034190200000000157, 0.0003396389999999992, 0.0003439590000000013, 0.0003383190000000001, 0.0003437080000000016, 0.0003397230000000001, 0.0003437500000000003, 0.000...</msg>
<status status="PASS" starttime="20201030 15:55:42.604" endtime="20201030 15:55:42.608"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.612" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201030 15:55:42.611" endtime="20201030 15:55:42.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.615" level="INFO">VALUE: [0.0003381389999999977, 0.00034190200000000157, 0.0003396389999999992, 0.0003439590000000013, 0.0003383190000000001, 0.0003437080000000016, 0.0003397230000000001, 0.0003437500000000003, 0.00034222199999999967, 0.00034262500000000265, 0.000341292, 0.00034063800000000075, 0.00034390299999999957, 0.0003410140000000006, 0.00033852799999999766, 0.0003391390000000022, 0.0003404309999999987, 0.0003408329999999987, 0.00033801400000000106, 0.0003442219999999982, 0.0003435690000000019, 0.000339194000000001, 0.00033911100000000305, 0.00033901400000000553, 0.0003406390000000037, 0.0003388469999999963, 0.0003431799999999985, 0.00034154200000000023, 0.0003394580000000008, 0.00034070800000000206, 0.00033988900000000294, 0.00034072200000000163, 0.00034016700000000233, 0.00034136099999999836, 0.00033837500000000187, 0.00034131899999999965, 0.0003378469999999953, 0.00033926399999999884, 0.00034087499999999743, 0.00034240299999999807, 0.0003405699999999984, 0.0003437780000000029, 0.000343889, 0.00034197199999999595, 0.0003394019999999956, 0.0003440419999999958, 0.0003431810000000049, 0.00034209699999999954, 0.0003437219999999977, 0.0003442360000000047]</msg>
<status status="PASS" starttime="20201030 15:55:42.614" endtime="20201030 15:55:42.616"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.609" endtime="20201030 15:55:42.616"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:42.620" endtime="20201030 15:55:42.639"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.618" endtime="20201030 15:55:42.640"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.617" endtime="20201030 15:55:42.640"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.241" endtime="20201030 15:55:42.640"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.240" endtime="20201030 15:55:42.641"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.649" endtime="20201030 15:55:42.687"></status>
</kw>
<msg timestamp="20201030 15:55:42.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:42.648" endtime="20201030 15:55:42.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.690" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:42.689" endtime="20201030 15:55:42.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.691" endtime="20201030 15:55:42.693"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.645" endtime="20201030 15:55:42.694"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.643" endtime="20201030 15:55:42.694"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.701" endtime="20201030 15:55:42.988"></status>
</kw>
<msg timestamp="20201030 15:55:42.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024917764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025263139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:42.699" endtime="20201030 15:55:42.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024917764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025263139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:42.992" endtime="20201030 15:55:43.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:43.000" endtime="20201030 15:55:43.002"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.696" endtime="20201030 15:55:43.003"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.695" endtime="20201030 15:55:43.003"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:43.007" level="INFO">${RESULT} = [{'diff': 0.00034537500000000193}, {'diff': 0.0003409589999999983}, {'diff': 0.0003434860000000005}, {'diff': 0.0003423750000000024}, {'diff': 0.0003381250000000016}, {'diff': 0.0003437500000000003}, ...</msg>
<status status="PASS" starttime="20201030 15:55:43.004" endtime="20201030 15:55:43.007"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:43.011" level="INFO">${ACCURACY} = {'diff': [0.00034537500000000193, 0.0003409589999999983, 0.0003434860000000005, 0.0003423750000000024, 0.0003381250000000016, 0.0003437500000000003, 0.0003418750000000019, 0.0003432639999999994, 0.000...</msg>
<status status="PASS" starttime="20201030 15:55:43.008" endtime="20201030 15:55:43.011"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.016" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201030 15:55:43.015" endtime="20201030 15:55:43.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.018" level="INFO">VALUE: [0.00034537500000000193, 0.0003409589999999983, 0.0003434860000000005, 0.0003423750000000024, 0.0003381250000000016, 0.0003437500000000003, 0.0003418750000000019, 0.0003432639999999994, 0.00034054199999999923, 0.00034134700000000226, 0.0003394450000000007, 0.00033852799999999766, 0.00034002800000000263, 0.0003377230000000016, 0.00034354199999999877, 0.00034015300000000276, 0.00033852799999999766, 0.0003434720000000009, 0.0003402779999999994, 0.0003405559999999988, 0.00033922200000000013, 0.0003437500000000038, 0.00034391699999999914, 0.0003421109999999991, 0.00034004199999999873, 0.0003396940000000015, 0.00034220800000000356, 0.0003380830000000029, 0.00034341599999999917, 0.00034109699999999854, 0.00034386100000000086, 0.0003399030000000025, 0.0003404720000000014, 0.00034308400000000044, 0.0003387359999999992, 0.0003388329999999967, 0.00034070900000000154, 0.00034266600000000536, 0.00034220800000000356, 0.0003437920000000025, 0.0003384300000000007, 0.00033819499999999947, 0.00034381900000000215, 0.0003415409999999938, 0.00033781899999999615, 0.00034143100000000315, 0.00034187499999999843, 0.00034080599999999905, 0.00034418099999999896, 0.00033887500000000237]</msg>
<status status="PASS" starttime="20201030 15:55:43.017" endtime="20201030 15:55:43.019"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.012" endtime="20201030 15:55:43.019"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:43.023" endtime="20201030 15:55:43.043"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.022" endtime="20201030 15:55:43.043"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.020" endtime="20201030 15:55:43.044"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.642" endtime="20201030 15:55:43.044"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.641" endtime="20201030 15:55:43.044"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:43.053" endtime="20201030 15:55:43.090"></status>
</kw>
<msg timestamp="20201030 15:55:43.091" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:43.051" endtime="20201030 15:55:43.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.093" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:43.092" endtime="20201030 15:55:43.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:43.094" endtime="20201030 15:55:43.096"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.049" endtime="20201030 15:55:43.097"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.047" endtime="20201030 15:55:43.097"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:43.104" endtime="20201030 15:55:43.389"></status>
</kw>
<msg timestamp="20201030 15:55:43.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02342725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023786514, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:43.102" endtime="20201030 15:55:43.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02342725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023786514, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:43.393" endtime="20201030 15:55:43.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:43.401" endtime="20201030 15:55:43.403"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.099" endtime="20201030 15:55:43.403"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.098" endtime="20201030 15:55:43.404"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:43.408" level="INFO">${RESULT} = [{'diff': 0.0003592640000000015}, {'diff': 0.0003415699999999994}, {'diff': 0.0003441110000000011}, {'diff': 0.00034281900000000115}, {'diff': 0.00034242999999999774}, {'diff': 0.00034090300000000004}...</msg>
<status status="PASS" starttime="20201030 15:55:43.405" endtime="20201030 15:55:43.408"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:43.412" level="INFO">${ACCURACY} = {'diff': [0.0003592640000000015, 0.0003415699999999994, 0.0003441110000000011, 0.00034281900000000115, 0.00034242999999999774, 0.00034090300000000004, 0.00034140300000000054, 0.0003387779999999979, 0....</msg>
<status status="PASS" starttime="20201030 15:55:43.409" endtime="20201030 15:55:43.412"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.416" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201030 15:55:43.415" endtime="20201030 15:55:43.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.419" level="INFO">VALUE: [0.0003592640000000015, 0.0003415699999999994, 0.0003441110000000011, 0.00034281900000000115, 0.00034242999999999774, 0.00034090300000000004, 0.00034140300000000054, 0.0003387779999999979, 0.00034049999999999706, 0.0003389309999999972, 0.00033976399999999934, 0.0003424170000000011, 0.0003441669999999994, 0.0003382359999999987, 0.00034117999999999996, 0.00034012500000000015, 0.0003422369999999987, 0.0003403750000000004, 0.00033912499999999915, 0.0003421660000000014, 0.000342791000000002, 0.0003436660000000029, 0.00034036099999999736, 0.0003436110000000006, 0.0003427079999999971, 0.0003401659999999959, 0.0003439729999999974, 0.0003437780000000029, 0.00034148600000000195, 0.0003385840000000029, 0.0003395139999999991, 0.0003440140000000036, 0.0003392359999999997, 0.0003386249999999952, 0.0003413329999999992, 0.0003411379999999978, 0.00034420800000000557, 0.000343000000000003, 0.00033840299999999407, 0.00033980599999999805, 0.0003382779999999974, 0.00034041699999999564, 0.0003399580000000013, 0.000342777999999995, 0.00034320900000000404, 0.00033834700000000273, 0.0003443189999999957, 0.00034330600000000155, 0.0003426249999999992, 0.00034331900000000165]</msg>
<status status="PASS" starttime="20201030 15:55:43.417" endtime="20201030 15:55:43.424"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.413" endtime="20201030 15:55:43.425"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:43.428" endtime="20201030 15:55:43.448"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.427" endtime="20201030 15:55:43.448"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.426" endtime="20201030 15:55:43.449"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.045" endtime="20201030 15:55:43.449"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.044" endtime="20201030 15:55:43.449"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:43.458" endtime="20201030 15:55:43.492"></status>
</kw>
<msg timestamp="20201030 15:55:43.492" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:43.456" endtime="20201030 15:55:43.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.495" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:43.493" endtime="20201030 15:55:43.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:43.496" endtime="20201030 15:55:43.498"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.454" endtime="20201030 15:55:43.498"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.452" endtime="20201030 15:55:43.499"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:43.505" endtime="20201030 15:55:43.791"></status>
</kw>
<msg timestamp="20201030 15:55:43.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020293736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020633639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:43.504" endtime="20201030 15:55:43.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020293736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020633639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:43.795" endtime="20201030 15:55:43.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:43.803" endtime="20201030 15:55:43.805"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.501" endtime="20201030 15:55:43.805"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.499" endtime="20201030 15:55:43.806"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:43.810" level="INFO">${RESULT} = [{'diff': 0.00033990299999999904}, {'diff': 0.00034040299999999954}, {'diff': 0.00033930599999999755}, {'diff': 0.0003409590000000018}, {'diff': 0.0003386109999999991}, {'diff': 0.0003396110000000001}...</msg>
<status status="PASS" starttime="20201030 15:55:43.807" endtime="20201030 15:55:43.810"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:43.815" level="INFO">${ACCURACY} = {'diff': [0.00033990299999999904, 0.00034040299999999954, 0.00033930599999999755, 0.0003409590000000018, 0.0003386109999999991, 0.0003396110000000001, 0.00033929200000000145, 0.00034423599999999777, 0...</msg>
<status status="PASS" starttime="20201030 15:55:43.811" endtime="20201030 15:55:43.815"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.819" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201030 15:55:43.818" endtime="20201030 15:55:43.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.822" level="INFO">VALUE: [0.00033990299999999904, 0.00034040299999999954, 0.00033930599999999755, 0.0003409590000000018, 0.0003386109999999991, 0.0003396110000000001, 0.00033929200000000145, 0.00034423599999999777, 0.0003414170000000001, 0.0003421249999999987, 0.00034276400000000234, 0.0003385969999999995, 0.00034186099999999886, 0.00033916700000000133, 0.0003409719999999984, 0.00034231900000000065, 0.00034105499999999983, 0.00033888900000000194, 0.00034238900000000197, 0.00034026399999999984, 0.00034093100000000265, 0.0003437219999999977, 0.00034272299999999964, 0.0003433059999999981, 0.00033997300000000036, 0.0003377359999999982, 0.00034350000000000006, 0.0003407079999999986, 0.0003414309999999997, 0.00033852700000000166, 0.0003403049999999991, 0.0003439309999999987, 0.0003396529999999953, 0.00034076300000000087, 0.0003409999999999941, 0.00033840299999999407, 0.00034284799999999976, 0.00034083300000000566, 0.0003379170000000001, 0.0003442639999999969, 0.0003380139999999976, 0.00033976399999999934, 0.0003433470000000008, 0.0003411800000000034, 0.00033976399999999934, 0.00034123599999999477, 0.0003395689999999979, 0.00034205500000000083, 0.00034345899999999735, 0.0003392499999999993]</msg>
<status status="PASS" starttime="20201030 15:55:43.820" endtime="20201030 15:55:43.822"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.815" endtime="20201030 15:55:43.823"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:43.827" endtime="20201030 15:55:43.846"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.825" endtime="20201030 15:55:43.847"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.824" endtime="20201030 15:55:43.847"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.450" endtime="20201030 15:55:43.847"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.449" endtime="20201030 15:55:43.847"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:43.856" endtime="20201030 15:55:43.899"></status>
</kw>
<msg timestamp="20201030 15:55:43.899" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:43.855" endtime="20201030 15:55:43.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:43.900" endtime="20201030 15:55:43.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:43.903" endtime="20201030 15:55:43.904"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.852" endtime="20201030 15:55:43.905"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.850" endtime="20201030 15:55:43.905"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:43.912" endtime="20201030 15:55:44.199"></status>
</kw>
<msg timestamp="20201030 15:55:44.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023990792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024329361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:43.910" endtime="20201030 15:55:44.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023990792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024329361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:44.204" endtime="20201030 15:55:44.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:44.212" endtime="20201030 15:55:44.213"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.908" endtime="20201030 15:55:44.214"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.906" endtime="20201030 15:55:44.214"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:44.218" level="INFO">${RESULT} = [{'diff': 0.00033856900000000037}, {'diff': 0.00033865300000000126}, {'diff': 0.00034136100000000183}, {'diff': 0.0003419310000000002}, {'diff': 0.00034338900000000297}, {'diff': 0.0003435970000000010...</msg>
<status status="PASS" starttime="20201030 15:55:44.215" endtime="20201030 15:55:44.218"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:44.222" level="INFO">${ACCURACY} = {'diff': [0.00033856900000000037, 0.00033865300000000126, 0.00034136100000000183, 0.0003419310000000002, 0.00034338900000000297, 0.00034359700000000104, 0.000339291999999998, 0.0003436249999999967, 0....</msg>
<status status="PASS" starttime="20201030 15:55:44.219" endtime="20201030 15:55:44.223"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.227" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201030 15:55:44.226" endtime="20201030 15:55:44.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.229" level="INFO">VALUE: [0.00033856900000000037, 0.00033865300000000126, 0.00034136100000000183, 0.0003419310000000002, 0.00034338900000000297, 0.00034359700000000104, 0.000339291999999998, 0.0003436249999999967, 0.0003403330000000017, 0.0003405140000000001, 0.0003434730000000004, 0.0003390269999999987, 0.00034359699999999757, 0.0003384169999999971, 0.00034004199999999873, 0.00034272200000000017, 0.00033938899999999897, 0.0003419440000000003, 0.00034209699999999954, 0.0003399169999999986, 0.00033831899999999665, 0.0003395689999999979, 0.00033990299999999557, 0.0003423469999999998, 0.00034411099999999417, 0.00033804199999999673, 0.0003435700000000014, 0.0003417780000000009, 0.00034169500000000297, 0.00034158399999999894, 0.00034065300000000326, 0.000338597000000003, 0.00034030599999999855, 0.00034286099999999986, 0.00034165300000000426, 0.0003414580000000028, 0.00034004199999999873, 0.0003431110000000001, 0.0003432780000000024, 0.00033859800000000245, 0.00033970800000000106, 0.0003392779999999984, 0.00033934700000000373, 0.0003419720000000029, 0.00034043100000000215, 0.0003406940000000025, 0.0003417920000000005, 0.0003441669999999994, 0.00034363899999999975, 0.0003407779999999999]</msg>
<status status="PASS" starttime="20201030 15:55:44.228" endtime="20201030 15:55:44.230"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.223" endtime="20201030 15:55:44.230"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:44.234" endtime="20201030 15:55:44.254"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.233" endtime="20201030 15:55:44.254"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.232" endtime="20201030 15:55:44.255"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.848" endtime="20201030 15:55:44.255"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.848" endtime="20201030 15:55:44.255"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:44.264" endtime="20201030 15:55:44.300"></status>
</kw>
<msg timestamp="20201030 15:55:44.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:44.262" endtime="20201030 15:55:44.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:44.302" endtime="20201030 15:55:44.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:44.304" endtime="20201030 15:55:44.306"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.260" endtime="20201030 15:55:44.307"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.257" endtime="20201030 15:55:44.307"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:44.314" endtime="20201030 15:55:44.600"></status>
</kw>
<msg timestamp="20201030 15:55:44.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023257931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023588236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:44.312" endtime="20201030 15:55:44.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023257931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023588236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:44.604" endtime="20201030 15:55:44.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:44.612" endtime="20201030 15:55:44.613"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.309" endtime="20201030 15:55:44.614"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.308" endtime="20201030 15:55:44.614"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:44.618" level="INFO">${RESULT} = [{'diff': 0.0003303049999999995}, {'diff': 0.00034170900000000254}, {'diff': 0.0003378059999999995}, {'diff': 0.00034126400000000084}, {'diff': 0.0003401389999999997}, {'diff': 0.00033815300000000076}...</msg>
<status status="PASS" starttime="20201030 15:55:44.615" endtime="20201030 15:55:44.618"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:44.622" level="INFO">${ACCURACY} = {'diff': [0.0003303049999999995, 0.00034170900000000254, 0.0003378059999999995, 0.00034126400000000084, 0.0003401389999999997, 0.00033815300000000076, 0.0003441659999999999, 0.0003436659999999994, 0.0...</msg>
<status status="PASS" starttime="20201030 15:55:44.619" endtime="20201030 15:55:44.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.627" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201030 15:55:44.626" endtime="20201030 15:55:44.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.629" level="INFO">VALUE: [0.0003303049999999995, 0.00034170900000000254, 0.0003378059999999995, 0.00034126400000000084, 0.0003401389999999997, 0.00033815300000000076, 0.0003441659999999999, 0.0003436659999999994, 0.0003388749999999989, 0.0003391519999999988, 0.00034231900000000065, 0.0003386659999999979, 0.00034, 0.00034358300000000147, 0.000342986, 0.0003392229999999996, 0.0003416390000000012, 0.00034238900000000197, 0.00034323600000000024, 0.0003417780000000009, 0.00033772199999999863, 0.0003399580000000013, 0.00034034799999999726, 0.00034120800000000256, 0.00033994400000000174, 0.00033763899999999375, 0.00034241699999999764, 0.0003439720000000049, 0.00034187499999999843, 0.00034419500000000547, 0.00034215300000000476, 0.0003435279999999957, 0.0003406669999999959, 0.00033787500000000137, 0.00034287499999999943, 0.00034351399999999616, 0.00034387500000000043, 0.0003399170000000021, 0.0003409720000000019, 0.0003390559999999973, 0.00034391699999999914, 0.0003426380000000062, 0.0003422910000000015, 0.0003423200000000001, 0.00033887500000000237, 0.0003426669999999979, 0.0003382779999999974, 0.0003394579999999939, 0.00033909699999999654, 0.00033872199999999963]</msg>
<status status="PASS" starttime="20201030 15:55:44.628" endtime="20201030 15:55:44.631"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.623" endtime="20201030 15:55:44.631"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:44.635" endtime="20201030 15:55:44.655"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.634" endtime="20201030 15:55:44.655"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.632" endtime="20201030 15:55:44.655"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.256" endtime="20201030 15:55:44.656"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.255" endtime="20201030 15:55:44.656"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:44.665" endtime="20201030 15:55:44.702"></status>
</kw>
<msg timestamp="20201030 15:55:44.702" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:44.663" endtime="20201030 15:55:44.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.705" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:44.703" endtime="20201030 15:55:44.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:44.706" endtime="20201030 15:55:44.708"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.660" endtime="20201030 15:55:44.708"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.658" endtime="20201030 15:55:44.709"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:44.715" endtime="20201030 15:55:45.001"></status>
</kw>
<msg timestamp="20201030 15:55:45.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024303597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024634958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:44.714" endtime="20201030 15:55:45.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:45.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024303597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024634958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:45.006" endtime="20201030 15:55:45.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:45.014" endtime="20201030 15:55:45.015"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.711" endtime="20201030 15:55:45.016"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.709" endtime="20201030 15:55:45.016"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:45.020" level="INFO">${RESULT} = [{'diff': 0.00033136099999999877}, {'diff': 0.00033958300000000094}, {'diff': 0.0003399309999999982}, {'diff': 0.00034418099999999896}, {'diff': 0.0003411530000000003}, {'diff': 0.0003434019999999996}...</msg>
<status status="PASS" starttime="20201030 15:55:45.017" endtime="20201030 15:55:45.021"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:45.026" level="INFO">${ACCURACY} = {'diff': [0.00033136099999999877, 0.00033958300000000094, 0.0003399309999999982, 0.00034418099999999896, 0.0003411530000000003, 0.0003434019999999996, 0.00034298600000000345, 0.00034012500000000015, 0...</msg>
<status status="PASS" starttime="20201030 15:55:45.021" endtime="20201030 15:55:45.026"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:45.031" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201030 15:55:45.029" endtime="20201030 15:55:45.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:45.033" level="INFO">VALUE: [0.00033136099999999877, 0.00033958300000000094, 0.0003399309999999982, 0.00034418099999999896, 0.0003411530000000003, 0.0003434019999999996, 0.00034298600000000345, 0.00034012500000000015, 0.0003394999999999995, 0.0003433470000000008, 0.0003441110000000011, 0.0003424019999999986, 0.00034052799999999966, 0.00034340300000000254, 0.00034350000000000006, 0.00033902800000000163, 0.0003399169999999986, 0.0003431110000000001, 0.00033884799999999923, 0.000341097000000002, 0.000339403000000002, 0.0003384860000000059, 0.0003411810000000029, 0.0003401250000000036, 0.0003432219999999972, 0.0003406669999999959, 0.0003407779999999999, 0.0003411249999999977, 0.0003418339999999992, 0.0003383469999999958, 0.0003415559999999998, 0.00034408300000000197, 0.00034292999999999824, 0.00034358300000000147, 0.00033848599999999895, 0.00034426400000000384, 0.00033976399999999934, 0.0003385559999999968, 0.000338999999999999, 0.00034431900000000265, 0.00034290299999999857, 0.00034013899999999625, 0.0003431110000000001, 0.0003443330000000022, 0.00034155500000000033, 0.00034240299999999807, 0.0003393480000000032, 0.0003410140000000006, 0.00034418099999999896, 0.00034108299999999897]</msg>
<status status="PASS" starttime="20201030 15:55:45.032" endtime="20201030 15:55:45.034"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.027" endtime="20201030 15:55:45.035"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:45.038" endtime="20201030 15:55:45.058"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.037" endtime="20201030 15:55:45.058"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.036" endtime="20201030 15:55:45.059"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.657" endtime="20201030 15:55:45.059"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.656" endtime="20201030 15:55:45.059"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:45.068" endtime="20201030 15:55:45.106"></status>
</kw>
<msg timestamp="20201030 15:55:45.106" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:45.066" endtime="20201030 15:55:45.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:45.109" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:45.107" endtime="20201030 15:55:45.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:45.110" endtime="20201030 15:55:45.111"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.064" endtime="20201030 15:55:45.112"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.062" endtime="20201030 15:55:45.112"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:45.119" endtime="20201030 15:55:45.406"></status>
</kw>
<msg timestamp="20201030 15:55:45.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022997375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023355125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:45.117" endtime="20201030 15:55:45.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:45.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022997375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023355125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:45.410" endtime="20201030 15:55:45.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:45.418" endtime="20201030 15:55:45.420"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.115" endtime="20201030 15:55:45.421"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.113" endtime="20201030 15:55:45.421"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:45.425" level="INFO">${RESULT} = [{'diff': 0.00035775000000000043}, {'diff': 0.0003443189999999992}, {'diff': 0.00033954199999999823}, {'diff': 0.0003384860000000024}, {'diff': 0.0003401529999999993}, {'diff': 0.000342986}, {'diff': ...</msg>
<status status="PASS" starttime="20201030 15:55:45.422" endtime="20201030 15:55:45.425"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:45.429" level="INFO">${ACCURACY} = {'diff': [0.00035775000000000043, 0.0003443189999999992, 0.00033954199999999823, 0.0003384860000000024, 0.0003401529999999993, 0.000342986, 0.0003415139999999976, 0.00034423599999999777, 0.00034323600...</msg>
<status status="PASS" starttime="20201030 15:55:45.426" endtime="20201030 15:55:45.429"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:45.433" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201030 15:55:45.432" endtime="20201030 15:55:45.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:45.436" level="INFO">VALUE: [0.00035775000000000043, 0.0003443189999999992, 0.00033954199999999823, 0.0003384860000000024, 0.0003401529999999993, 0.000342986, 0.0003415139999999976, 0.00034423599999999777, 0.00034323600000000024, 0.0003409589999999983, 0.00034190200000000157, 0.0003406109999999976, 0.00033822199999999913, 0.00034129099999999704, 0.00033848699999999843, 0.0003413880000000015, 0.00033825000000000174, 0.0003389860000000029, 0.00034144499999999925, 0.00034383299999999825, 0.00033919500000000047, 0.0003432499999999998, 0.0003401529999999993, 0.00034298600000000345, 0.00034098600000000145, 0.0003432779999999955, 0.00033922200000000013, 0.0003403199999999981, 0.0003427370000000027, 0.00033919500000000047, 0.00033993100000000165, 0.000343000000000003, 0.0003412079999999956, 0.0003380840000000024, 0.00033988900000000294, 0.0003413199999999991, 0.00034202800000000116, 0.00033887499999999543, 0.00034190299999999757, 0.00034334800000000026, 0.0003421669999999974, 0.0003438470000000013, 0.00034380499999999564, 0.0003395139999999991, 0.0003411109999999981, 0.0003413199999999991, 0.00033909699999999654, 0.0003417780000000009, 0.0003395830000000044, 0.00034105499999999983]</msg>
<status status="PASS" starttime="20201030 15:55:45.435" endtime="20201030 15:55:45.437"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.430" endtime="20201030 15:55:45.437"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:45.441" endtime="20201030 15:55:45.460"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.439" endtime="20201030 15:55:45.461"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.438" endtime="20201030 15:55:45.461"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.060" endtime="20201030 15:55:45.462"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.059" endtime="20201030 15:55:45.462"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:45.470" endtime="20201030 15:55:45.506"></status>
</kw>
<msg timestamp="20201030 15:55:45.507" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:45.469" endtime="20201030 15:55:45.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:45.509" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:45.508" endtime="20201030 15:55:45.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:45.510" endtime="20201030 15:55:45.512"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.466" endtime="20201030 15:55:45.513"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.464" endtime="20201030 15:55:45.513"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:45.519" endtime="20201030 15:55:45.806"></status>
</kw>
<msg timestamp="20201030 15:55:45.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022272028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022608194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:45.518" endtime="20201030 15:55:45.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:45.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022272028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022608194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:45.810" endtime="20201030 15:55:45.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:45.818" endtime="20201030 15:55:45.819"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.515" endtime="20201030 15:55:45.820"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.514" endtime="20201030 15:55:45.820"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:45.824" level="INFO">${RESULT} = [{'diff': 0.0003361660000000023}, {'diff': 0.0003392369999999992}, {'diff': 0.0003414729999999984}, {'diff': 0.00034218100000000043}, {'diff': 0.0003424859999999995}, {'diff': 0.00034409700000000154},...</msg>
<status status="PASS" starttime="20201030 15:55:45.821" endtime="20201030 15:55:45.825"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:45.828" level="INFO">${ACCURACY} = {'diff': [0.0003361660000000023, 0.0003392369999999992, 0.0003414729999999984, 0.00034218100000000043, 0.0003424859999999995, 0.00034409700000000154, 0.0003405140000000001, 0.00034190300000000104, 0.0...</msg>
<status status="PASS" starttime="20201030 15:55:45.825" endtime="20201030 15:55:45.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:45.833" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201030 15:55:45.832" endtime="20201030 15:55:45.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:45.835" level="INFO">VALUE: [0.0003361660000000023, 0.0003392369999999992, 0.0003414729999999984, 0.00034218100000000043, 0.0003424859999999995, 0.00034409700000000154, 0.0003405140000000001, 0.00034190300000000104, 0.00034391599999999967, 0.00034031899999999865, 0.00034187499999999843, 0.0003416530000000008, 0.0003412079999999991, 0.00034187499999999843, 0.00034313899999999925, 0.0003441250000000007, 0.0003392499999999993, 0.0003418469999999993, 0.0003440699999999984, 0.0003396519999999993, 0.0003411110000000016, 0.0003383610000000023, 0.0003434860000000005, 0.0003423200000000001, 0.00033854199999999723, 0.00034255500000000133, 0.00033994400000000174, 0.0003422089999999961, 0.00034108299999999897, 0.0003390139999999986, 0.00034256999999999344, 0.0003436110000000006, 0.00034058299999999847, 0.0003407639999999934, 0.0003407920000000064, 0.0003407500000000008, 0.00033948599999999995, 0.00034279199999999455, 0.0003399450000000012, 0.00033786099999999486, 0.00034119500000000247, 0.0003397920000000054, 0.00034087500000000437, 0.00034108299999999897, 0.0003398610000000038, 0.0003390559999999973, 0.000340679999999996, 0.00034041699999999564, 0.0003409439999999958, 0.00034320900000000404]</msg>
<status status="PASS" starttime="20201030 15:55:45.834" endtime="20201030 15:55:45.837"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.829" endtime="20201030 15:55:45.837"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:45.841" endtime="20201030 15:55:45.861"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.840" endtime="20201030 15:55:45.861"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.838" endtime="20201030 15:55:45.862"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.463" endtime="20201030 15:55:45.862"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.462" endtime="20201030 15:55:45.862"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:45.871" endtime="20201030 15:55:45.908"></status>
</kw>
<msg timestamp="20201030 15:55:45.908" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:45.869" endtime="20201030 15:55:45.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:45.911" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:45.910" endtime="20201030 15:55:45.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:45.912" endtime="20201030 15:55:45.914"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.867" endtime="20201030 15:55:45.914"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.865" endtime="20201030 15:55:45.915"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:45.921" endtime="20201030 15:55:46.208"></status>
</kw>
<msg timestamp="20201030 15:55:46.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023930847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024279111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:45.920" endtime="20201030 15:55:46.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:46.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023930847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024279111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:46.212" endtime="20201030 15:55:46.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:46.220" endtime="20201030 15:55:46.221"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.917" endtime="20201030 15:55:46.222"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.915" endtime="20201030 15:55:46.222"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:46.226" level="INFO">${RESULT} = [{'diff': 0.00034826399999999744}, {'diff': 0.00033856900000000037}, {'diff': 0.0003399720000000009}, {'diff': 0.00034305499999999836}, {'diff': 0.000343889}, {'diff': 0.00033806899999999987}, {'diff'...</msg>
<status status="PASS" starttime="20201030 15:55:46.223" endtime="20201030 15:55:46.226"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:46.231" level="INFO">${ACCURACY} = {'diff': [0.00034826399999999744, 0.00033856900000000037, 0.0003399720000000009, 0.00034305499999999836, 0.000343889, 0.00033806899999999987, 0.00033934700000000026, 0.000340985999999998, 0.0003414030...</msg>
<status status="PASS" starttime="20201030 15:55:46.227" endtime="20201030 15:55:46.231"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:46.236" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201030 15:55:46.235" endtime="20201030 15:55:46.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:46.238" level="INFO">VALUE: [0.00034826399999999744, 0.00033856900000000037, 0.0003399720000000009, 0.00034305499999999836, 0.000343889, 0.00033806899999999987, 0.00033934700000000026, 0.000340985999999998, 0.00034140300000000054, 0.00033981899999999815, 0.0003405140000000001, 0.0003378329999999992, 0.0003386940000000005, 0.0003400269999999997, 0.0003376809999999994, 0.00033827699999999794, 0.0003399590000000008, 0.0003400840000000009, 0.00033976399999999934, 0.0003410140000000006, 0.00033998600000000045, 0.0003411249999999977, 0.00034027800000000635, 0.0003386249999999952, 0.00034119399999999606, 0.0003425409999999948, 0.00034273599999999627, 0.0003391810000000009, 0.0003413339999999987, 0.0003439859999999975, 0.0003396109999999966, 0.00034426400000000384, 0.00034313899999999925, 0.00034059699999999804, 0.00034241699999999764, 0.0003403469999999978, 0.0003396109999999966, 0.00034091699999999614, 0.000341791000000001, 0.0003433889999999995, 0.0003437780000000029, 0.00034319399999999806, 0.0003431669999999984, 0.00034191599999999767, 0.00033826399999999784, 0.00034070800000000206, 0.0003418050000000006, 0.00034368099999999846, 0.00034429199999999605, 0.00034120800000000256]</msg>
<status status="PASS" starttime="20201030 15:55:46.237" endtime="20201030 15:55:46.239"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.232" endtime="20201030 15:55:46.239"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:46.243" endtime="20201030 15:55:46.263"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.242" endtime="20201030 15:55:46.263"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.240" endtime="20201030 15:55:46.264"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.863" endtime="20201030 15:55:46.264"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.862" endtime="20201030 15:55:46.264"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:46.273" endtime="20201030 15:55:46.311"></status>
</kw>
<msg timestamp="20201030 15:55:46.312" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:46.272" endtime="20201030 15:55:46.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:46.314" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:46.313" endtime="20201030 15:55:46.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:46.315" endtime="20201030 15:55:46.317"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.269" endtime="20201030 15:55:46.318"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.266" endtime="20201030 15:55:46.318"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:46.325" endtime="20201030 15:55:46.638"></status>
</kw>
<msg timestamp="20201030 15:55:46.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023898653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024243681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:46.323" endtime="20201030 15:55:46.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:46.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023898653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024243681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:46.642" endtime="20201030 15:55:46.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:46.650" endtime="20201030 15:55:46.652"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.320" endtime="20201030 15:55:46.652"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.319" endtime="20201030 15:55:46.652"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:46.656" level="INFO">${RESULT} = [{'diff': 0.0003450280000000007}, {'diff': 0.00033938899999999897}, {'diff': 0.0003408049999999996}, {'diff': 0.0003434300000000022}, {'diff': 0.00033883399999999966}, {'diff': 0.0003418329999999997},...</msg>
<status status="PASS" starttime="20201030 15:55:46.653" endtime="20201030 15:55:46.656"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:46.660" level="INFO">${ACCURACY} = {'diff': [0.0003450280000000007, 0.00033938899999999897, 0.0003408049999999996, 0.0003434300000000022, 0.00033883399999999966, 0.0003418329999999997, 0.00034099999999999756, 0.0003394720000000004, 0.0...</msg>
<status status="PASS" starttime="20201030 15:55:46.657" endtime="20201030 15:55:46.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:46.665" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201030 15:55:46.664" endtime="20201030 15:55:46.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:46.667" level="INFO">VALUE: [0.0003450280000000007, 0.00033938899999999897, 0.0003408049999999996, 0.0003434300000000022, 0.00033883399999999966, 0.0003418329999999997, 0.00034099999999999756, 0.0003394720000000004, 0.0003383329999999997, 0.0003381520000000013, 0.00034287499999999943, 0.00033934799999999973, 0.00034058300000000194, 0.00034384800000000076, 0.00034226400000000184, 0.00033919500000000047, 0.0003417920000000005, 0.0003442919999999995, 0.00033915300000000176, 0.00034423599999999777, 0.0003395409999999953, 0.00034358300000000147, 0.0003420279999999942, 0.00034072200000000163, 0.000339597000000004, 0.00034373699999999674, 0.0003431249999999997, 0.00033834700000000273, 0.00034169399999999656, 0.0003422500000000023, 0.00034097199999999495, 0.00034137500000000487, 0.00034369399999999856, 0.00034341699999999864, 0.00033886099999999586, 0.00033798599999999845, 0.00034268099999999746, 0.00034447199999999845, 0.0003437219999999977, 0.00033931899999999765, 0.00034115300000000376, 0.0003427370000000027, 0.0003406940000000025, 0.0003407500000000008, 0.0003423469999999998, 0.00034222200000000313, 0.00033809699999999554, 0.00033872199999999963, 0.00034169399999999656, 0.0003404300000000027]</msg>
<status status="PASS" starttime="20201030 15:55:46.666" endtime="20201030 15:55:46.668"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.661" endtime="20201030 15:55:46.668"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:46.672" endtime="20201030 15:55:46.692"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.671" endtime="20201030 15:55:46.692"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.669" endtime="20201030 15:55:46.693"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.265" endtime="20201030 15:55:46.693"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.264" endtime="20201030 15:55:46.693"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:46.703" endtime="20201030 15:55:46.743"></status>
</kw>
<msg timestamp="20201030 15:55:46.743" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:46.701" endtime="20201030 15:55:46.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:46.746" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:46.744" endtime="20201030 15:55:46.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:46.747" endtime="20201030 15:55:46.748"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.698" endtime="20201030 15:55:46.749"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.696" endtime="20201030 15:55:46.749"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:46.756" endtime="20201030 15:55:47.042"></status>
</kw>
<msg timestamp="20201030 15:55:47.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027106458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027449639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:46.754" endtime="20201030 15:55:47.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027106458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027449639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:47.046" endtime="20201030 15:55:47.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.054" endtime="20201030 15:55:47.056"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.752" endtime="20201030 15:55:47.057"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.750" endtime="20201030 15:55:47.057"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:47.061" level="INFO">${RESULT} = [{'diff': 0.00034318100000000143}, {'diff': 0.0003377360000000017}, {'diff': 0.0003408329999999987}, {'diff': 0.00034268100000000093}, {'diff': 0.00034318099999999796}, {'diff': 0.00034358400000000094...</msg>
<status status="PASS" starttime="20201030 15:55:47.058" endtime="20201030 15:55:47.062"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:47.066" level="INFO">${ACCURACY} = {'diff': [0.00034318100000000143, 0.0003377360000000017, 0.0003408329999999987, 0.00034268100000000093, 0.00034318099999999796, 0.00034358400000000094, 0.0003379719999999989, 0.0003433340000000007, 0....</msg>
<status status="PASS" starttime="20201030 15:55:47.063" endtime="20201030 15:55:47.066"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.070" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201030 15:55:47.069" endtime="20201030 15:55:47.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.072" level="INFO">VALUE: [0.00034318100000000143, 0.0003377360000000017, 0.0003408329999999987, 0.00034268100000000093, 0.00034318099999999796, 0.00034358400000000094, 0.0003379719999999989, 0.0003433340000000007, 0.0003396519999999993, 0.0003402360000000007, 0.0003409169999999996, 0.0003442640000000004, 0.000342403000000005, 0.00034308300000000097, 0.0003441659999999999, 0.00034093100000000265, 0.0003391810000000009, 0.00034406899999999546, 0.00033848599999999895, 0.0003394720000000004, 0.00033994400000000174, 0.0003403889999999965, 0.0003421669999999974, 0.00034286099999999986, 0.000340097999999997, 0.00034040200000000354, 0.00033872199999999963, 0.00034058299999999847, 0.0003408469999999983, 0.0003431669999999984, 0.00033865300000000126, 0.00034401399999999666, 0.0003426669999999979, 0.0003441120000000006, 0.00034193100000000365, 0.00034308300000000097, 0.00033898599999999945, 0.0003419859999999955, 0.0003410689999999994, 0.0003392909999999985, 0.0003436110000000006, 0.0003393049999999981, 0.00034198600000000245, 0.0003442500000000043, 0.00034137499999999793, 0.0003442079999999986, 0.00034430499999999614, 0.0003427639999999954, 0.00033915300000000176, 0.0003388190000000041]</msg>
<status status="PASS" starttime="20201030 15:55:47.071" endtime="20201030 15:55:47.074"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.066" endtime="20201030 15:55:47.074"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:47.078" endtime="20201030 15:55:47.098"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.077" endtime="20201030 15:55:47.098"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.075" endtime="20201030 15:55:47.098"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.694" endtime="20201030 15:55:47.099"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.694" endtime="20201030 15:55:47.099"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.697" endtime="20201030 15:55:47.099"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201030 15:55:06.588" endtime="20201030 15:55:47.100" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:47.106" endtime="20201030 15:55:47.126"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.105" endtime="20201030 15:55:47.126"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.139" endtime="20201030 15:55:47.155"></status>
</kw>
<msg timestamp="20201030 15:55:47.156" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:47.138" endtime="20201030 15:55:47.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.158" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:47.157" endtime="20201030 15:55:47.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.161" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:55:47.159" endtime="20201030 15:55:47.161"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:47.135" endtime="20201030 15:55:47.162"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:47.133" endtime="20201030 15:55:47.163"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.131" endtime="20201030 15:55:47.163"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:55:47.166" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:55:47.166" endtime="20201030 15:55:47.167"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.164" endtime="20201030 15:55:47.167"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.131" endtime="20201030 15:55:47.167"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.130" endtime="20201030 15:55:47.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.168" endtime="20201030 15:55:47.170"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.129" endtime="20201030 15:55:47.170"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.127" endtime="20201030 15:55:47.171"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.104" endtime="20201030 15:55:47.171"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.182" endtime="20201030 15:55:47.220"></status>
</kw>
<msg timestamp="20201030 15:55:47.220" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:47.180" endtime="20201030 15:55:47.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.223" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:47.221" endtime="20201030 15:55:47.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.224" endtime="20201030 15:55:47.226"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.176" endtime="20201030 15:55:47.226"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.174" endtime="20201030 15:55:47.227"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.233" endtime="20201030 15:55:47.519"></status>
</kw>
<msg timestamp="20201030 15:55:47.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070269694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070649361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:47.232" endtime="20201030 15:55:47.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070269694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070649361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:47.523" endtime="20201030 15:55:47.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.531" endtime="20201030 15:55:47.533"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.229" endtime="20201030 15:55:47.533"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.227" endtime="20201030 15:55:47.534"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:47.538" level="INFO">${RESULT} = [{'diff': 0.0003796670000000002}, {'diff': 0.0003571109999999933}, {'diff': 0.0003857079999999985}, {'diff': 0.00035941700000000076}, {'diff': 0.00038501400000000296}, {'diff': 0.00038594499999999865}...</msg>
<status status="PASS" starttime="20201030 15:55:47.535" endtime="20201030 15:55:47.538"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:47.542" level="INFO">${ACCURACY} = {'diff': [0.0003796670000000002, 0.0003571109999999933, 0.0003857079999999985, 0.00035941700000000076, 0.00038501400000000296, 0.00038594499999999865, 0.00035802799999999635, 0.0003574999999999967, 0....</msg>
<status status="PASS" starttime="20201030 15:55:47.539" endtime="20201030 15:55:47.542"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.547" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201030 15:55:47.546" endtime="20201030 15:55:47.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.549" level="INFO">VALUE: [0.0003796670000000002, 0.0003571109999999933, 0.0003857079999999985, 0.00035941700000000076, 0.00038501400000000296, 0.00038594499999999865, 0.00035802799999999635, 0.0003574999999999967, 0.00036015300000000194, 0.00035895799999999256, 0.000359054999999997, 0.00038626400000001115, 0.0003560840000000065, 0.00035727800000000254, 0.00035922200000000626, 0.0003593610000000025, 0.0003586390000000078, 0.00035909700000000266, 0.00036008399999999663, 0.00035772300000000423, 0.0003603199999999973, 0.0003582359999999979, 0.0003850280000000095, 0.00038513900000000656, 0.0003600559999999975, 0.00035877800000000404, 0.0003609450000000014, 0.00035790299999999275, 0.00035977799999999116, 0.00038523599999999714, 0.0003571390000000063, 0.00035966700000000795, 0.00038588900000000037, 0.0003588060000000032, 0.0003574309999999914, 0.0003855269999999966, 0.00038598599999999095, 0.000358861000000002, 0.00038476400000000965, 0.0003602359999999999, 0.00038569400000000587, 0.00035797199999999807, 0.0003566390000000058, 0.0003603610000000035, 0.0003564999999999957, 0.0003568060000000012, 0.0003574300000000058, 0.00036079199999999867, 0.0003581809999999991, 0.00035641699999999776]</msg>
<status status="PASS" starttime="20201030 15:55:47.548" endtime="20201030 15:55:47.550"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.543" endtime="20201030 15:55:47.550"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:47.554" endtime="20201030 15:55:47.573"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.552" endtime="20201030 15:55:47.574"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.551" endtime="20201030 15:55:47.574"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.173" endtime="20201030 15:55:47.574"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.172" endtime="20201030 15:55:47.575"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.583" endtime="20201030 15:55:47.621"></status>
</kw>
<msg timestamp="20201030 15:55:47.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:47.582" endtime="20201030 15:55:47.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:47.623" endtime="20201030 15:55:47.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.625" endtime="20201030 15:55:47.627"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.579" endtime="20201030 15:55:47.627"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.577" endtime="20201030 15:55:47.628"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.634" endtime="20201030 15:55:47.921"></status>
</kw>
<msg timestamp="20201030 15:55:47.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024551514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024926222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:47.633" endtime="20201030 15:55:47.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024551514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024926222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:47.925" endtime="20201030 15:55:47.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.933" endtime="20201030 15:55:47.935"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.630" endtime="20201030 15:55:47.935"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.628" endtime="20201030 15:55:47.935"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:47.939" level="INFO">${RESULT} = [{'diff': 0.0003747080000000014}, {'diff': 0.0003576800000000026}, {'diff': 0.00038566699999999926}, {'diff': 0.00036055600000000146}, {'diff': 0.00038595799999999875}, {'diff': 0.0003605970000000007}...</msg>
<status status="PASS" starttime="20201030 15:55:47.936" endtime="20201030 15:55:47.940"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:47.945" level="INFO">${ACCURACY} = {'diff': [0.0003747080000000014, 0.0003576800000000026, 0.00038566699999999926, 0.00036055600000000146, 0.00038595799999999875, 0.0003605970000000007, 0.00035873600000000186, 0.0003605970000000007, 0....</msg>
<status status="PASS" starttime="20201030 15:55:47.940" endtime="20201030 15:55:47.945"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.949" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201030 15:55:47.948" endtime="20201030 15:55:47.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.951" level="INFO">VALUE: [0.0003747080000000014, 0.0003576800000000026, 0.00038566699999999926, 0.00036055600000000146, 0.00038595799999999875, 0.0003605970000000007, 0.00035873600000000186, 0.0003605970000000007, 0.0003593199999999998, 0.00036062499999999983, 0.0003607079999999978, 0.00036062499999999983, 0.00035677800000000204, 0.0003586250000000013, 0.00036026399999999903, 0.0003585419999999999, 0.0003561799999999976, 0.00038570900000000144, 0.0003575419999999989, 0.0003581669999999995, 0.0003604450000000009, 0.00035958299999999666, 0.0003851659999999993, 0.0003568880000000066, 0.00036009800000000314, 0.00035897199999999907, 0.0003589020000000012, 0.0003588469999999955, 0.0003607220000000008, 0.00035711100000000023, 0.00036058299999999766, 0.0003574860000000041, 0.00035743099999999833, 0.0003593749999999951, 0.00035679100000000213, 0.0003610139999999998, 0.00035766599999999954, 0.0003568050000000017, 0.00036043100000000133, 0.0003852639999999963, 0.00035765299999999944, 0.00035736099999999354, 0.0003585700000000025, 0.00036080599999999824, 0.0003597359999999994, 0.00038549999999999696, 0.0003856939999999989, 0.00035609699999999966, 0.00035915300000000094, 0.0003850829999999944]</msg>
<status status="PASS" starttime="20201030 15:55:47.950" endtime="20201030 15:55:47.952"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.945" endtime="20201030 15:55:47.952"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:47.956" endtime="20201030 15:55:47.975"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.954" endtime="20201030 15:55:47.976"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.953" endtime="20201030 15:55:47.976"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.576" endtime="20201030 15:55:47.976"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.575" endtime="20201030 15:55:47.977"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.986" endtime="20201030 15:55:48.027"></status>
</kw>
<msg timestamp="20201030 15:55:48.028" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:47.984" endtime="20201030 15:55:48.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:48.030" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:48.029" endtime="20201030 15:55:48.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:48.031" endtime="20201030 15:55:48.033"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.982" endtime="20201030 15:55:48.034"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.979" endtime="20201030 15:55:48.034"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:48.040" endtime="20201030 15:55:48.328"></status>
</kw>
<msg timestamp="20201030 15:55:48.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024465069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024824903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:48.039" endtime="20201030 15:55:48.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:48.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024465069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024824903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:48.332" endtime="20201030 15:55:48.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:48.340" endtime="20201030 15:55:48.342"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.036" endtime="20201030 15:55:48.342"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.035" endtime="20201030 15:55:48.343"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:48.347" level="INFO">${RESULT} = [{'diff': 0.00035983399999999985}, {'diff': 0.0003586250000000013}, {'diff': 0.000356861}, {'diff': 0.0003577920000000026}, {'diff': 0.0003847780000000023}, {'diff': 0.0003563190000000008}, {'diff': 0...</msg>
<status status="PASS" starttime="20201030 15:55:48.344" endtime="20201030 15:55:48.347"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:48.351" level="INFO">${ACCURACY} = {'diff': [0.00035983399999999985, 0.0003586250000000013, 0.000356861, 0.0003577920000000026, 0.0003847780000000023, 0.0003563190000000008, 0.0003849450000000011, 0.0003559440000000004, 0.0003587370000...</msg>
<status status="PASS" starttime="20201030 15:55:48.348" endtime="20201030 15:55:48.351"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:48.355" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201030 15:55:48.354" endtime="20201030 15:55:48.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:48.358" level="INFO">VALUE: [0.00035983399999999985, 0.0003586250000000013, 0.000356861, 0.0003577920000000026, 0.0003847780000000023, 0.0003563190000000008, 0.0003849450000000011, 0.0003559440000000004, 0.00035873700000000133, 0.0003848749999999998, 0.0003568470000000004, 0.0003857500000000007, 0.00038483400000000056, 0.0003608610000000005, 0.0003848190000000015, 0.0003567220000000003, 0.00035765299999999944, 0.00035772300000000076, 0.0003861660000000003, 0.00035958400000000307, 0.0003847640000000027, 0.0003570280000000023, 0.00038556900000000227, 0.00038484700000000066, 0.0003847770000000028, 0.00035911100000000223, 0.00035643100000000427, 0.00035886200000000146, 0.0003607230000000003, 0.00038555499999999576, 0.0003569159999999988, 0.0003580139999999968, 0.0003574019999999997, 0.0003847499999999962, 0.00035815200000000047, 0.0003579159999999998, 0.00035744399999999843, 0.000359569000000004, 0.00035743099999999833, 0.0003573050000000022, 0.0003560140000000017, 0.000359346999999996, 0.0003564999999999957, 0.00038540299999999944, 0.0003563609999999995, 0.00035929199999999717, 0.0003565830000000006, 0.0003858189999999956, 0.00035711100000000023, 0.0003606800000000021]</msg>
<status status="PASS" starttime="20201030 15:55:48.356" endtime="20201030 15:55:48.358"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.352" endtime="20201030 15:55:48.358"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:48.362" endtime="20201030 15:55:48.382"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.360" endtime="20201030 15:55:48.383"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.359" endtime="20201030 15:55:48.383"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.978" endtime="20201030 15:55:48.383"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.977" endtime="20201030 15:55:48.383"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:48.393" endtime="20201030 15:55:48.431"></status>
</kw>
<msg timestamp="20201030 15:55:48.431" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:48.390" endtime="20201030 15:55:48.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:48.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:48.432" endtime="20201030 15:55:48.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:48.435" endtime="20201030 15:55:48.436"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.388" endtime="20201030 15:55:48.437"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.386" endtime="20201030 15:55:48.437"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:48.444" endtime="20201030 15:55:48.748"></status>
</kw>
<msg timestamp="20201030 15:55:48.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025163014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025537472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:48.442" endtime="20201030 15:55:48.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:48.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025163014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025537472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:48.757" endtime="20201030 15:55:48.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:48.774" endtime="20201030 15:55:48.776"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.440" endtime="20201030 15:55:48.776"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.438" endtime="20201030 15:55:48.777"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:48.780" level="INFO">${RESULT} = [{'diff': 0.00037445799999999765}, {'diff': 0.00035981899999999734}, {'diff': 0.00035718100000000155}, {'diff': 0.0003598060000000007}, {'diff': 0.0003608190000000018}, {'diff': 0.00035872300000000176...</msg>
<status status="PASS" starttime="20201030 15:55:48.777" endtime="20201030 15:55:48.781"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:48.785" level="INFO">${ACCURACY} = {'diff': [0.00037445799999999765, 0.00035981899999999734, 0.00035718100000000155, 0.0003598060000000007, 0.0003608190000000018, 0.00035872300000000176, 0.0003592640000000015, 0.0003582080000000022, 0....</msg>
<status status="PASS" starttime="20201030 15:55:48.782" endtime="20201030 15:55:48.785"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:48.789" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201030 15:55:48.788" endtime="20201030 15:55:48.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:48.791" level="INFO">VALUE: [0.00037445799999999765, 0.00035981899999999734, 0.00035718100000000155, 0.0003598060000000007, 0.0003608190000000018, 0.00035872300000000176, 0.0003592640000000015, 0.0003582080000000022, 0.00036088899999999965, 0.0003608610000000005, 0.0003568060000000012, 0.00036015300000000194, 0.0003580419999999994, 0.00035751399999999975, 0.00035732000000000125, 0.0003863620000000012, 0.00035812499999999733, 0.0003596940000000007, 0.00035794400000000587, 0.00035758400000000107, 0.0003568340000000003, 0.0003565280000000018, 0.0003604999999999997, 0.0003596940000000007, 0.0003861390000000006, 0.0003605689999999981, 0.00036036200000000296, 0.0003853049999999955, 0.00035824999999999746, 0.000359555999999997, 0.0003603190000000048, 0.0003569159999999988, 0.0003608340000000043, 0.0003591670000000005, 0.0003605269999999994, 0.0003606940000000017, 0.0003858750000000008, 0.00036047200000000057, 0.0003864439999999997, 0.0003592219999999993, 0.00038633400000000206, 0.0003859719999999983, 0.0003598749999999956, 0.00038544499999999815, 0.000356181000000004, 0.00036061100000000373, 0.00035654200000000136, 0.00035777800000000304, 0.00035726399999999603, 0.0003862640000000042]</msg>
<status status="PASS" starttime="20201030 15:55:48.790" endtime="20201030 15:55:48.797"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.785" endtime="20201030 15:55:48.798"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:48.802" endtime="20201030 15:55:48.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.800" endtime="20201030 15:55:48.822"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.799" endtime="20201030 15:55:48.822"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.384" endtime="20201030 15:55:48.822"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.384" endtime="20201030 15:55:48.822"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:48.831" endtime="20201030 15:55:48.867"></status>
</kw>
<msg timestamp="20201030 15:55:48.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:48.830" endtime="20201030 15:55:48.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:48.870" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:48.869" endtime="20201030 15:55:48.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:48.872" endtime="20201030 15:55:48.873"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.827" endtime="20201030 15:55:48.874"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.825" endtime="20201030 15:55:48.874"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:48.881" endtime="20201030 15:55:49.166"></status>
</kw>
<msg timestamp="20201030 15:55:49.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022731014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023095097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:48.879" endtime="20201030 15:55:49.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022731014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023095097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:49.170" endtime="20201030 15:55:49.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:49.177" endtime="20201030 15:55:49.179"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.877" endtime="20201030 15:55:49.180"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.875" endtime="20201030 15:55:49.180"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:49.184" level="INFO">${RESULT} = [{'diff': 0.0003640829999999977}, {'diff': 0.0003598200000000003}, {'diff': 0.0003600419999999979}, {'diff': 0.0003862910000000004}, {'diff': 0.00035969500000000015}, {'diff': 0.00036098599999999717},...</msg>
<status status="PASS" starttime="20201030 15:55:49.181" endtime="20201030 15:55:49.184"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:49.189" level="INFO">${ACCURACY} = {'diff': [0.0003640829999999977, 0.0003598200000000003, 0.0003600419999999979, 0.0003862910000000004, 0.00035969500000000015, 0.00036098599999999717, 0.00035609699999999966, 0.0003566249999999993, 0.0...</msg>
<status status="PASS" starttime="20201030 15:55:49.185" endtime="20201030 15:55:49.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.193" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201030 15:55:49.192" endtime="20201030 15:55:49.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.196" level="INFO">VALUE: [0.0003640829999999977, 0.0003598200000000003, 0.0003600419999999979, 0.0003862910000000004, 0.00035969500000000015, 0.00036098599999999717, 0.00035609699999999966, 0.0003566249999999993, 0.00035858400000000207, 0.00035679100000000213, 0.0003573329999999979, 0.00035970800000000025, 0.00035787500000000055, 0.00035965300000000144, 0.0003593190000000003, 0.0003609030000000027, 0.0003574029999999992, 0.0003608610000000005, 0.00036027800000000207, 0.00035623599999999936, 0.00035680499999999823, 0.0003563189999999973, 0.00035823600000000136, 0.00038504199999999864, 0.0003599580000000005, 0.0003566520000000059, 0.00038551400000000347, 0.00038590200000000047, 0.000360667000000002, 0.00035943100000000033, 0.0003579999999999972, 0.0003566810000000045, 0.0003853049999999955, 0.000385820000000002, 0.0003852220000000045, 0.00038626300000000474, 0.0003563190000000008, 0.0003858060000000024, 0.00035716599999999904, 0.0003585969999999952, 0.00035948599999999914, 0.0003570830000000011, 0.0003569860000000036, 0.00035947199999999957, 0.0003586800000000001, 0.0003597779999999981, 0.0003851670000000057, 0.0003595830000000036, 0.0003582089999999982, 0.0003600830000000041]</msg>
<status status="PASS" starttime="20201030 15:55:49.194" endtime="20201030 15:55:49.196"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.190" endtime="20201030 15:55:49.197"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:49.201" endtime="20201030 15:55:49.220"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.199" endtime="20201030 15:55:49.221"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.198" endtime="20201030 15:55:49.221"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.823" endtime="20201030 15:55:49.221"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.823" endtime="20201030 15:55:49.221"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:49.230" endtime="20201030 15:55:49.264"></status>
</kw>
<msg timestamp="20201030 15:55:49.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:49.229" endtime="20201030 15:55:49.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:49.266" endtime="20201030 15:55:49.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:49.268" endtime="20201030 15:55:49.270"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.226" endtime="20201030 15:55:49.270"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.224" endtime="20201030 15:55:49.271"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:49.277" endtime="20201030 15:55:49.563"></status>
</kw>
<msg timestamp="20201030 15:55:49.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020662361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021030486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:49.276" endtime="20201030 15:55:49.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020662361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021030486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:49.567" endtime="20201030 15:55:49.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:49.575" endtime="20201030 15:55:49.577"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.273" endtime="20201030 15:55:49.577"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.271" endtime="20201030 15:55:49.578"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:49.581" level="INFO">${RESULT} = [{'diff': 0.0003681250000000004}, {'diff': 0.0003590280000000008}, {'diff': 0.0003856390000000001}, {'diff': 0.00035754200000000236}, {'diff': 0.0003607909999999992}, {'diff': 0.0003591390000000014}, ...</msg>
<status status="PASS" starttime="20201030 15:55:49.578" endtime="20201030 15:55:49.582"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:49.585" level="INFO">${ACCURACY} = {'diff': [0.0003681250000000004, 0.0003590280000000008, 0.0003856390000000001, 0.00035754200000000236, 0.0003607909999999992, 0.0003591390000000014, 0.00035737500000000005, 0.00035861100000000173, 0.0...</msg>
<status status="PASS" starttime="20201030 15:55:49.582" endtime="20201030 15:55:49.586"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.590" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201030 15:55:49.589" endtime="20201030 15:55:49.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.592" level="INFO">VALUE: [0.0003681250000000004, 0.0003590280000000008, 0.0003856390000000001, 0.00035754200000000236, 0.0003607909999999992, 0.0003591390000000014, 0.00035737500000000005, 0.00035861100000000173, 0.0003595280000000013, 0.0003605139999999993, 0.00035827800000000007, 0.00035925000000000193, 0.00035934699999999944, 0.0003565830000000006, 0.0003572220000000008, 0.0003591250000000018, 0.0003856390000000001, 0.00035669400000000115, 0.00035680499999999823, 0.00035937500000000205, 0.00035659700000000016, 0.00036048600000000014, 0.0003858049999999995, 0.0003591390000000014, 0.00038538899999999987, 0.0003560279999999978, 0.0003857360000000011, 0.0003855000000000004, 0.0003566250000000028, 0.0003585280000000038, 0.00035687499999999955, 0.0003585269999999974, 0.0003609169999999953, 0.0003591109999999953, 0.00035787500000000055, 0.00038584800000000113, 0.00036098600000000064, 0.00035636199999999896, 0.00035737500000000005, 0.0003588890000000011, 0.0003571249999999998, 0.0003586939999999997, 0.00035816600000000004, 0.00035848599999999814, 0.0003855000000000039, 0.00035716599999999904, 0.0003563469999999999, 0.0003573190000000018, 0.00035632000000000025, 0.00038551400000000347]</msg>
<status status="PASS" starttime="20201030 15:55:49.591" endtime="20201030 15:55:49.593"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.586" endtime="20201030 15:55:49.594"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:49.597" endtime="20201030 15:55:49.617"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.596" endtime="20201030 15:55:49.617"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.595" endtime="20201030 15:55:49.618"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.222" endtime="20201030 15:55:49.618"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.222" endtime="20201030 15:55:49.618"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:49.627" endtime="20201030 15:55:49.661"></status>
</kw>
<msg timestamp="20201030 15:55:49.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:49.625" endtime="20201030 15:55:49.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:49.662" endtime="20201030 15:55:49.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:49.665" endtime="20201030 15:55:49.666"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.623" endtime="20201030 15:55:49.667"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.620" endtime="20201030 15:55:49.667"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:49.674" endtime="20201030 15:55:49.960"></status>
</kw>
<msg timestamp="20201030 15:55:49.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020914875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021272944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:49.672" endtime="20201030 15:55:49.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020914875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021272944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:49.964" endtime="20201030 15:55:49.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:49.972" endtime="20201030 15:55:49.974"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.670" endtime="20201030 15:55:49.975"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.668" endtime="20201030 15:55:49.975"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:49.979" level="INFO">${RESULT} = [{'diff': 0.00035806899999999905}, {'diff': 0.00035680499999999823}, {'diff': 0.0003601670000000015}, {'diff': 0.00035611099999999923}, {'diff': 0.0003608750000000001}, {'diff': 0.000358861000000002},...</msg>
<status status="PASS" starttime="20201030 15:55:49.976" endtime="20201030 15:55:49.979"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:49.983" level="INFO">${ACCURACY} = {'diff': [0.00035806899999999905, 0.00035680499999999823, 0.0003601670000000015, 0.00035611099999999923, 0.0003608750000000001, 0.000358861000000002, 0.00038456900000000127, 0.00035727799999999907, 0....</msg>
<status status="PASS" starttime="20201030 15:55:49.980" endtime="20201030 15:55:49.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.987" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201030 15:55:49.986" endtime="20201030 15:55:49.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.990" level="INFO">VALUE: [0.00035806899999999905, 0.00035680499999999823, 0.0003601670000000015, 0.00035611099999999923, 0.0003608750000000001, 0.000358861000000002, 0.00038456900000000127, 0.00035727799999999907, 0.00036070800000000125, 0.00038588900000000037, 0.00035741700000000223, 0.00038488899999999937, 0.000385611000000001, 0.00035626400000000197, 0.0003591939999999967, 0.0003853750000000003, 0.0003604159999999988, 0.0003860559999999992, 0.0003854719999999978, 0.00035997200000000007, 0.00035601399999999825, 0.0003564999999999992, 0.0003608060000000017, 0.0003860689999999993, 0.0003849999999999999, 0.00035609699999999966, 0.00035801400000000025, 0.0003580969999999982, 0.0003846949999999974, 0.0003589999999999982, 0.0003590559999999965, 0.0003584999999999977, 0.0003562219999999963, 0.00038494499999999765, 0.00036069500000000115, 0.00035597199999999607, 0.0003590690000000035, 0.0003578329999999949, 0.00035729100000000263, 0.00038538899999999987, 0.00038499999999999646, 0.0003589020000000012, 0.0003597219999999998, 0.0003607220000000008, 0.0003568479999999999, 0.00035659799999999964, 0.0003592359999999989, 0.0003583610000000015, 0.0003575689999999951, 0.00035948599999999914]</msg>
<status status="PASS" starttime="20201030 15:55:49.988" endtime="20201030 15:55:49.991"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.984" endtime="20201030 15:55:49.992"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:49.995" endtime="20201030 15:55:50.015"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.994" endtime="20201030 15:55:50.016"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.993" endtime="20201030 15:55:50.016"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.619" endtime="20201030 15:55:50.016"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.618" endtime="20201030 15:55:50.016"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:50.025" endtime="20201030 15:55:50.064"></status>
</kw>
<msg timestamp="20201030 15:55:50.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:50.023" endtime="20201030 15:55:50.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:50.067" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:50.065" endtime="20201030 15:55:50.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:50.068" endtime="20201030 15:55:50.069"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.021" endtime="20201030 15:55:50.070"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.019" endtime="20201030 15:55:50.070"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:50.077" endtime="20201030 15:55:50.363"></status>
</kw>
<msg timestamp="20201030 15:55:50.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024702375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025067833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:50.075" endtime="20201030 15:55:50.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:50.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024702375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025067833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:50.367" endtime="20201030 15:55:50.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:50.375" endtime="20201030 15:55:50.377"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.073" endtime="20201030 15:55:50.377"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.071" endtime="20201030 15:55:50.377"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:50.381" level="INFO">${RESULT} = [{'diff': 0.00036545800000000253}, {'diff': 0.0003563050000000012}, {'diff': 0.00035645800000000047}, {'diff': 0.00035615299999999794}, {'diff': 0.0003600559999999975}, {'diff': 0.00035811100000000123...</msg>
<status status="PASS" starttime="20201030 15:55:50.378" endtime="20201030 15:55:50.382"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:50.388" level="INFO">${ACCURACY} = {'diff': [0.00036545800000000253, 0.0003563050000000012, 0.00035645800000000047, 0.00035615299999999794, 0.0003600559999999975, 0.00035811100000000123, 0.00038540299999999944, 0.00035769499999999815, ...</msg>
<status status="PASS" starttime="20201030 15:55:50.382" endtime="20201030 15:55:50.389"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:50.393" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201030 15:55:50.392" endtime="20201030 15:55:50.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:50.395" level="INFO">VALUE: [0.00036545800000000253, 0.0003563050000000012, 0.00035645800000000047, 0.00035615299999999794, 0.0003600559999999975, 0.00035811100000000123, 0.00038540299999999944, 0.00035769499999999815, 0.0003578059999999987, 0.00035956900000000055, 0.0003594449999999999, 0.0003591940000000002, 0.0003859299999999996, 0.00038520900000000094, 0.0003849309999999981, 0.0003591250000000018, 0.00035879199999999667, 0.0003847779999999988, 0.00038572199999999807, 0.00036043000000000186, 0.00035590300000000463, 0.0003852780000000028, 0.00035752799999999585, 0.00035916600000000104, 0.0003602359999999999, 0.0003573889999999996, 0.0003597219999999998, 0.00035765299999999944, 0.0003851529999999992, 0.00036030599999999774, 0.00038495799999999775, 0.0003603889999999957, 0.00038597200000000526, 0.00035698599999999664, 0.0003585969999999952, 0.0003575419999999954, 0.000385611000000001, 0.00035858299999999566, 0.000356861, 0.00035866600000000054, 0.0003568470000000004, 0.00038594499999999865, 0.00038540299999999944, 0.00035811100000000123, 0.0003598340000000033, 0.00038594499999999865, 0.00035797199999999807, 0.0003574159999999993, 0.0003593890000000016, 0.00035691699999999826]</msg>
<status status="PASS" starttime="20201030 15:55:50.394" endtime="20201030 15:55:50.396"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.389" endtime="20201030 15:55:50.397"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:50.400" endtime="20201030 15:55:50.420"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.399" endtime="20201030 15:55:50.420"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.397" endtime="20201030 15:55:50.420"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.017" endtime="20201030 15:55:50.421"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.017" endtime="20201030 15:55:50.421"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:50.430" endtime="20201030 15:55:50.466"></status>
</kw>
<msg timestamp="20201030 15:55:50.467" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:50.428" endtime="20201030 15:55:50.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:50.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:50.468" endtime="20201030 15:55:50.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:50.470" endtime="20201030 15:55:50.472"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.426" endtime="20201030 15:55:50.473"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.423" endtime="20201030 15:55:50.473"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:50.479" endtime="20201030 15:55:50.765"></status>
</kw>
<msg timestamp="20201030 15:55:50.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021935375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022307639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:50.478" endtime="20201030 15:55:50.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:50.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021935375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022307639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:50.769" endtime="20201030 15:55:50.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:50.777" endtime="20201030 15:55:50.779"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.475" endtime="20201030 15:55:50.779"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.474" endtime="20201030 15:55:50.780"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:50.784" level="INFO">${RESULT} = [{'diff': 0.0003722640000000006}, {'diff': 0.00036048600000000014}, {'diff': 0.0003571249999999998}, {'diff': 0.0003585000000000012}, {'diff': 0.0003590269999999979}, {'diff': 0.00035607}, {'diff': 0....</msg>
<status status="PASS" starttime="20201030 15:55:50.781" endtime="20201030 15:55:50.784"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:50.788" level="INFO">${ACCURACY} = {'diff': [0.0003722640000000006, 0.00036048600000000014, 0.0003571249999999998, 0.0003585000000000012, 0.0003590269999999979, 0.00035607, 0.000357666999999999, 0.00035676400000000247, 0.00035679199999...</msg>
<status status="PASS" starttime="20201030 15:55:50.785" endtime="20201030 15:55:50.788"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:50.792" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201030 15:55:50.791" endtime="20201030 15:55:50.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:50.795" level="INFO">VALUE: [0.0003722640000000006, 0.00036048600000000014, 0.0003571249999999998, 0.0003585000000000012, 0.0003590269999999979, 0.00035607, 0.000357666999999999, 0.00035676400000000247, 0.00035679199999999814, 0.0003595419999999974, 0.0003605139999999993, 0.00035709700000000066, 0.00035958400000000307, 0.0003586250000000013, 0.00038540200000000344, 0.0003608750000000001, 0.0003604719999999971, 0.00035893099999999983, 0.000357764, 0.000385611000000001, 0.0003597359999999994, 0.0003568890000000026, 0.0003854299999999991, 0.00035644500000000037, 0.0003591390000000014, 0.000360249999999996, 0.00036080599999999824, 0.00035944400000000043, 0.0003594589999999995, 0.0003583890000000006, 0.00038609699999999497, 0.0003568199999999938, 0.00035947199999999957, 0.00038477699999999587, 0.0003602220000000003, 0.0003568190000000013, 0.0003850970000000009, 0.00035919499999999965, 0.00035893099999999983, 0.00035711100000000023, 0.0003847780000000023, 0.0003598889999999952, 0.0003574029999999992, 0.0003591250000000018, 0.00036062499999999637, 0.00036061199999999627, 0.00035865300000000044, 0.00036079199999999867, 0.000357555999999995, 0.00036034799999999645]</msg>
<status status="PASS" starttime="20201030 15:55:50.793" endtime="20201030 15:55:50.795"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.789" endtime="20201030 15:55:50.796"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:50.799" endtime="20201030 15:55:50.819"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.798" endtime="20201030 15:55:50.819"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.797" endtime="20201030 15:55:50.820"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.422" endtime="20201030 15:55:50.820"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.421" endtime="20201030 15:55:50.820"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:50.829" endtime="20201030 15:55:50.867"></status>
</kw>
<msg timestamp="20201030 15:55:50.867" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:50.827" endtime="20201030 15:55:50.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:50.870" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:50.868" endtime="20201030 15:55:50.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:50.871" endtime="20201030 15:55:50.873"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.825" endtime="20201030 15:55:50.873"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.823" endtime="20201030 15:55:50.874"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:50.880" endtime="20201030 15:55:51.166"></status>
</kw>
<msg timestamp="20201030 15:55:51.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024660875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025046167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:50.878" endtime="20201030 15:55:51.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024660875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025046167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:51.170" endtime="20201030 15:55:51.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.178" endtime="20201030 15:55:51.180"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.876" endtime="20201030 15:55:51.181"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.874" endtime="20201030 15:55:51.181"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:51.185" level="INFO">${RESULT} = [{'diff': 0.00038529200000000235}, {'diff': 0.000357263}, {'diff': 0.00038587499999999733}, {'diff': 0.0003594999999999987}, {'diff': 0.000356763999999999}, {'diff': 0.000386305}, {'diff': 0.000385583...</msg>
<status status="PASS" starttime="20201030 15:55:51.182" endtime="20201030 15:55:51.185"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:51.189" level="INFO">${ACCURACY} = {'diff': [0.00038529200000000235, 0.000357263, 0.00038587499999999733, 0.0003594999999999987, 0.000356763999999999, 0.000386305, 0.00038558399999999785, 0.0003604029999999987, 0.0003603060000000012, 0...</msg>
<status status="PASS" starttime="20201030 15:55:51.186" endtime="20201030 15:55:51.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.193" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201030 15:55:51.192" endtime="20201030 15:55:51.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.196" level="INFO">VALUE: [0.00038529200000000235, 0.000357263, 0.00038587499999999733, 0.0003594999999999987, 0.000356763999999999, 0.000386305, 0.00038558399999999785, 0.0003604029999999987, 0.0003603060000000012, 0.0003583340000000018, 0.00038540299999999944, 0.00038581899999999905, 0.0003590550000000005, 0.0003589020000000012, 0.0003593890000000016, 0.0003609580000000015, 0.00038548700000000033, 0.0003563890000000021, 0.00038572199999999807, 0.00035994499999999346, 0.00035877800000000404, 0.0003560140000000017, 0.00035979199999999767, 0.00038586100000000123, 0.0003582500000000044, 0.0003573340000000008, 0.00035795800000000544, 0.00035640300000000513, 0.0003590140000000047, 0.0003565419999999944, 0.0003610969999999977, 0.0003573610000000005, 0.00036044400000000143, 0.0003854729999999973, 0.0003857639999999968, 0.00035658400000000007, 0.00036069500000000115, 0.00035954200000000436, 0.00035874999999999796, 0.0003578190000000023, 0.00035708400000000057, 0.0003854589999999977, 0.00035737500000000005, 0.000357569000000002, 0.0003583329999999954, 0.0003561669999999975, 0.0003600139999999988, 0.0003610419999999989, 0.000385611000000001, 0.00035947199999999957]</msg>
<status status="PASS" starttime="20201030 15:55:51.194" endtime="20201030 15:55:51.197"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.190" endtime="20201030 15:55:51.198"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:51.202" endtime="20201030 15:55:51.221"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.200" endtime="20201030 15:55:51.222"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.199" endtime="20201030 15:55:51.222"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.821" endtime="20201030 15:55:51.222"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.820" endtime="20201030 15:55:51.222"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.231" endtime="20201030 15:55:51.269"></status>
</kw>
<msg timestamp="20201030 15:55:51.269" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:51.229" endtime="20201030 15:55:51.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:51.270" endtime="20201030 15:55:51.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.273" endtime="20201030 15:55:51.274"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.227" endtime="20201030 15:55:51.275"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.225" endtime="20201030 15:55:51.275"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.282" endtime="20201030 15:55:51.567"></status>
</kw>
<msg timestamp="20201030 15:55:51.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024451694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024826444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:51.280" endtime="20201030 15:55:51.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024451694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024826444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:51.571" endtime="20201030 15:55:51.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.579" endtime="20201030 15:55:51.581"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.278" endtime="20201030 15:55:51.581"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.276" endtime="20201030 15:55:51.582"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:51.586" level="INFO">${RESULT} = [{'diff': 0.0003747500000000001}, {'diff': 0.0003600419999999979}, {'diff': 0.00035773600000000086}, {'diff': 0.00038570900000000144}, {'diff': 0.00036011099999999976}, {'diff': 0.0003583890000000006}...</msg>
<status status="PASS" starttime="20201030 15:55:51.583" endtime="20201030 15:55:51.586"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:51.590" level="INFO">${ACCURACY} = {'diff': [0.0003747500000000001, 0.0003600419999999979, 0.00035773600000000086, 0.00038570900000000144, 0.00036011099999999976, 0.0003583890000000006, 0.00035961099999999926, 0.0003856529999999997, 0....</msg>
<status status="PASS" starttime="20201030 15:55:51.587" endtime="20201030 15:55:51.591"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.595" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201030 15:55:51.594" endtime="20201030 15:55:51.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.597" level="INFO">VALUE: [0.0003747500000000001, 0.0003600419999999979, 0.00035773600000000086, 0.00038570900000000144, 0.00036011099999999976, 0.0003583890000000006, 0.00035961099999999926, 0.0003856529999999997, 0.0003596389999999984, 0.0003590969999999992, 0.00038531899999999855, 0.0003600420000000014, 0.0003589030000000007, 0.0003578480000000009, 0.0003588890000000011, 0.00036048600000000014, 0.0003564440000000009, 0.000360555999999998, 0.00035884699999999894, 0.00036043100000000133, 0.0003575140000000032, 0.00035682000000000075, 0.00038554100000000313, 0.0003563889999999986, 0.000358457999999999, 0.0003585969999999952, 0.0003607909999999992, 0.000356861, 0.0003850000000000034, 0.00038617999999999986, 0.00038497200000000426, 0.0003568469999999935, 0.0003859860000000048, 0.0003599999999999992, 0.0003863750000000013, 0.00035809700000000166, 0.0003560280000000013, 0.0003560410000000014, 0.0003560690000000005, 0.0003857639999999968, 0.0003563060000000007, 0.00036102799999999935, 0.00035663800000000634, 0.0003574860000000041, 0.0003573480000000004, 0.0003607220000000008, 0.00036069399999999474, 0.0003851519999999997, 0.00035641699999999776, 0.0003601940000000012]</msg>
<status status="PASS" starttime="20201030 15:55:51.596" endtime="20201030 15:55:51.598"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.591" endtime="20201030 15:55:51.599"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:51.602" endtime="20201030 15:55:51.622"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.601" endtime="20201030 15:55:51.623"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.600" endtime="20201030 15:55:51.623"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.223" endtime="20201030 15:55:51.623"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.223" endtime="20201030 15:55:51.623"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.632" endtime="20201030 15:55:51.665"></status>
</kw>
<msg timestamp="20201030 15:55:51.666" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:51.630" endtime="20201030 15:55:51.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.668" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:51.667" endtime="20201030 15:55:51.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.669" endtime="20201030 15:55:51.671"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.628" endtime="20201030 15:55:51.672"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.626" endtime="20201030 15:55:51.672"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.679" endtime="20201030 15:55:51.966"></status>
</kw>
<msg timestamp="20201030 15:55:51.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020385958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020756528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:51.677" endtime="20201030 15:55:51.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020385958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020756528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:51.970" endtime="20201030 15:55:51.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.978" endtime="20201030 15:55:51.979"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.674" endtime="20201030 15:55:51.980"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.673" endtime="20201030 15:55:51.980"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:51.984" level="INFO">${RESULT} = [{'diff': 0.0003705700000000006}, {'diff': 0.0003573060000000017}, {'diff': 0.0003859590000000017}, {'diff': 0.000360151999999999}, {'diff': 0.0003576809999999986}, {'diff': 0.0003572639999999995}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:51.981" endtime="20201030 15:55:51.984"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:51.988" level="INFO">${ACCURACY} = {'diff': [0.0003705700000000006, 0.0003573060000000017, 0.0003859590000000017, 0.000360151999999999, 0.0003576809999999986, 0.0003572639999999995, 0.0003601390000000024, 0.0003586809999999996, 0.00036...</msg>
<status status="PASS" starttime="20201030 15:55:51.985" endtime="20201030 15:55:51.988"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.993" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201030 15:55:51.991" endtime="20201030 15:55:51.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.995" level="INFO">VALUE: [0.0003705700000000006, 0.0003573060000000017, 0.0003859590000000017, 0.000360151999999999, 0.0003576809999999986, 0.0003572639999999995, 0.0003601390000000024, 0.0003586809999999996, 0.00036074999999999996, 0.00035898599999999864, 0.0003572080000000012, 0.000360361, 0.00035682000000000075, 0.0003580419999999994, 0.0003575279999999993, 0.00035837500000000105, 0.0003847640000000027, 0.0003853469999999977, 0.0003859299999999996, 0.00036030599999999774, 0.00035801400000000025, 0.00035883399999999885, 0.0003573059999999982, 0.00035659700000000016, 0.0003849309999999981, 0.0003573329999999979, 0.0003577359999999974, 0.00035819499999999865, 0.00036086099999999705, 0.00038541599999999954, 0.00036009700000000366, 0.0003594860000000061, 0.00035943100000000033, 0.00035837500000000105, 0.00035858400000000207, 0.00036047200000000057, 0.0003586800000000001, 0.0003851939999999984, 0.0003601120000000027, 0.0003582359999999979, 0.00038567999999999936, 0.000359054999999997, 0.0003576250000000003, 0.00038511199999999995, 0.0003578890000000001, 0.0003856659999999998, 0.0003861530000000002, 0.0003561799999999976, 0.0003855550000000027, 0.0003598339999999964]</msg>
<status status="PASS" starttime="20201030 15:55:51.994" endtime="20201030 15:55:51.996"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.989" endtime="20201030 15:55:51.996"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:52.000" endtime="20201030 15:55:52.019"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.998" endtime="20201030 15:55:52.020"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.997" endtime="20201030 15:55:52.020"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.624" endtime="20201030 15:55:52.020"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.624" endtime="20201030 15:55:52.021"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:52.029" endtime="20201030 15:55:52.068"></status>
</kw>
<msg timestamp="20201030 15:55:52.069" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:52.028" endtime="20201030 15:55:52.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:52.071" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:52.070" endtime="20201030 15:55:52.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:52.072" endtime="20201030 15:55:52.074"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.025" endtime="20201030 15:55:52.074"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.023" endtime="20201030 15:55:52.075"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:52.081" endtime="20201030 15:55:52.368"></status>
</kw>
<msg timestamp="20201030 15:55:52.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024938431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025306528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:52.080" endtime="20201030 15:55:52.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:52.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024938431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025306528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:52.372" endtime="20201030 15:55:52.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:52.380" endtime="20201030 15:55:52.382"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.077" endtime="20201030 15:55:52.382"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.076" endtime="20201030 15:55:52.383"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:52.387" level="INFO">${RESULT} = [{'diff': 0.0003680969999999978}, {'diff': 0.00038504199999999864}, {'diff': 0.0003849580000000012}, {'diff': 0.00038504199999999864}, {'diff': 0.00035998599999999964}, {'diff': 0.0003594999999999987}...</msg>
<status status="PASS" starttime="20201030 15:55:52.384" endtime="20201030 15:55:52.387"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:52.391" level="INFO">${ACCURACY} = {'diff': [0.0003680969999999978, 0.00038504199999999864, 0.0003849580000000012, 0.00038504199999999864, 0.00035998599999999964, 0.0003594999999999987, 0.00035761100000000073, 0.00038572200000000154, 0...</msg>
<status status="PASS" starttime="20201030 15:55:52.388" endtime="20201030 15:55:52.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:52.395" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201030 15:55:52.394" endtime="20201030 15:55:52.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:52.398" level="INFO">VALUE: [0.0003680969999999978, 0.00038504199999999864, 0.0003849580000000012, 0.00038504199999999864, 0.00035998599999999964, 0.0003594999999999987, 0.00035761100000000073, 0.00038572200000000154, 0.00035701399999999925, 0.00038602800000000007, 0.00035976399999999853, 0.0003592359999999989, 0.00038568099999999883, 0.0003578890000000001, 0.0003598060000000007, 0.0003567500000000029, 0.0003860970000000019, 0.00038512500000000005, 0.00035872200000000576, 0.0003563050000000012, 0.00035837500000000105, 0.0003856390000000001, 0.0003605969999999972, 0.0003563190000000008, 0.0003861949999999989, 0.0003597359999999994, 0.00035874999999999796, 0.00035773600000000433, 0.0003608329999999979, 0.0003857499999999972, 0.00035943100000000033, 0.000358555999999996, 0.0003852499999999967, 0.0003854719999999978, 0.0003565139999999953, 0.0003598340000000033, 0.0003856659999999998, 0.00036062499999999637, 0.00035791699999999926, 0.00035870799999999925, 0.00035765299999999944, 0.0003850000000000034, 0.00035694399999999793, 0.00035650000000000265, 0.00035719499999999765, 0.00035826400000000397, 0.00035962499999999537, 0.0003586939999999997, 0.00035931899999999684, 0.00038640300000000044]</msg>
<status status="PASS" starttime="20201030 15:55:52.396" endtime="20201030 15:55:52.399"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.392" endtime="20201030 15:55:52.400"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:52.403" endtime="20201030 15:55:52.423"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.402" endtime="20201030 15:55:52.423"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.401" endtime="20201030 15:55:52.424"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.022" endtime="20201030 15:55:52.424"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.021" endtime="20201030 15:55:52.424"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:52.433" endtime="20201030 15:55:52.470"></status>
</kw>
<msg timestamp="20201030 15:55:52.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:52.431" endtime="20201030 15:55:52.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:52.473" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:52.471" endtime="20201030 15:55:52.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:52.474" endtime="20201030 15:55:52.475"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.429" endtime="20201030 15:55:52.476"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.427" endtime="20201030 15:55:52.476"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:52.483" endtime="20201030 15:55:52.769"></status>
</kw>
<msg timestamp="20201030 15:55:52.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023306778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023666986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:52.481" endtime="20201030 15:55:52.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:52.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023306778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023666986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:52.773" endtime="20201030 15:55:52.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:52.781" endtime="20201030 15:55:52.783"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.479" endtime="20201030 15:55:52.783"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.477" endtime="20201030 15:55:52.784"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:52.787" level="INFO">${RESULT} = [{'diff': 0.00036020800000000075}, {'diff': 0.0003574159999999993}, {'diff': 0.0003584030000000002}, {'diff': 0.0003566939999999977}, {'diff': 0.00035659700000000016}, {'diff': 0.0003600559999999975},...</msg>
<status status="PASS" starttime="20201030 15:55:52.784" endtime="20201030 15:55:52.788"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:52.792" level="INFO">${ACCURACY} = {'diff': [0.00036020800000000075, 0.0003574159999999993, 0.0003584030000000002, 0.0003566939999999977, 0.00035659700000000016, 0.0003600559999999975, 0.0003860559999999992, 0.00035912499999999833, 0.0...</msg>
<status status="PASS" starttime="20201030 15:55:52.788" endtime="20201030 15:55:52.793"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:52.797" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201030 15:55:52.796" endtime="20201030 15:55:52.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:52.799" level="INFO">VALUE: [0.00036020800000000075, 0.0003574159999999993, 0.0003584030000000002, 0.0003566939999999977, 0.00035659700000000016, 0.0003600559999999975, 0.0003860559999999992, 0.00035912499999999833, 0.00035645899999999994, 0.00035765299999999944, 0.0003857779999999998, 0.0003568889999999991, 0.00036101400000000325, 0.00035974999999999896, 0.0003569860000000001, 0.00035709700000000066, 0.0003603330000000009, 0.0003860000000000009, 0.00035983399999999985, 0.0003575000000000002, 0.00035877800000000057, 0.0003603749999999996, 0.000356666999999998, 0.0003601109999999963, 0.0003852640000000032, 0.0003584449999999989, 0.0003856390000000001, 0.00035770799999999825, 0.0003862780000000038, 0.0003853200000000015, 0.00035608399999999957, 0.0003568889999999991, 0.0003607220000000008, 0.000357070000000001, 0.00035605600000000043, 0.00035936099999999555, 0.0003849580000000047, 0.0003605139999999993, 0.00035782000000000175, 0.0003560140000000017, 0.0003600969999999967, 0.00038507000000000124, 0.0003585139999999973, 0.000360861000000004, 0.0003574999999999967, 0.0003603749999999961, 0.0003856949999999984, 0.0003584020000000007, 0.00035633300000000034, 0.0003585419999999964]</msg>
<status status="PASS" starttime="20201030 15:55:52.798" endtime="20201030 15:55:52.800"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.793" endtime="20201030 15:55:52.801"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:52.804" endtime="20201030 15:55:52.824"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.803" endtime="20201030 15:55:52.824"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.802" endtime="20201030 15:55:52.825"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.425" endtime="20201030 15:55:52.825"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.425" endtime="20201030 15:55:52.825"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:52.834" endtime="20201030 15:55:52.872"></status>
</kw>
<msg timestamp="20201030 15:55:52.872" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:52.832" endtime="20201030 15:55:52.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:52.874" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:52.873" endtime="20201030 15:55:52.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:52.876" endtime="20201030 15:55:52.877"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.829" endtime="20201030 15:55:52.878"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.827" endtime="20201030 15:55:52.878"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:52.885" endtime="20201030 15:55:53.172"></status>
</kw>
<msg timestamp="20201030 15:55:53.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024403847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024781653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:52.883" endtime="20201030 15:55:53.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:53.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024403847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024781653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:53.176" endtime="20201030 15:55:53.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:53.184" endtime="20201030 15:55:53.186"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.880" endtime="20201030 15:55:53.186"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.879" endtime="20201030 15:55:53.187"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:53.190" level="INFO">${RESULT} = [{'diff': 0.00037780600000000136}, {'diff': 0.000360458000000001}, {'diff': 0.0003573610000000005}, {'diff': 0.00036015300000000194}, {'diff': 0.000356763999999999}, {'diff': 0.0003593199999999998}, {...</msg>
<status status="PASS" starttime="20201030 15:55:53.187" endtime="20201030 15:55:53.191"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:53.194" level="INFO">${ACCURACY} = {'diff': [0.00037780600000000136, 0.000360458000000001, 0.0003573610000000005, 0.00036015300000000194, 0.000356763999999999, 0.0003593199999999998, 0.0003589860000000021, 0.00036098600000000064, 0.000...</msg>
<status status="PASS" starttime="20201030 15:55:53.191" endtime="20201030 15:55:53.195"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:53.199" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201030 15:55:53.198" endtime="20201030 15:55:53.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:53.201" level="INFO">VALUE: [0.00037780600000000136, 0.000360458000000001, 0.0003573610000000005, 0.00036015300000000194, 0.000356763999999999, 0.0003593199999999998, 0.0003589860000000021, 0.00036098600000000064, 0.00035677800000000204, 0.0003852919999999989, 0.0003568340000000003, 0.00035775000000000043, 0.0003853750000000003, 0.00035917999999999714, 0.0003579440000000024, 0.0003581799999999996, 0.000359555000000001, 0.00035905599999999996, 0.0003562639999999985, 0.00035640300000000513, 0.00035619499999999665, 0.00038501400000000296, 0.000356861, 0.00035747299999999704, 0.0003605830000000046, 0.0003567500000000029, 0.000359346999999996, 0.0003859169999999995, 0.0003589579999999995, 0.0003572080000000047, 0.00035695800000000444, 0.0003579159999999998, 0.0003583610000000015, 0.0003579020000000002, 0.0003576250000000003, 0.00036079199999999867, 0.0003569449999999974, 0.0003567920000000016, 0.00035745800000000494, 0.0003566390000000058, 0.0003853060000000019, 0.0003564590000000034, 0.0003562229999999958, 0.000357181000000005, 0.00036091599999999585, 0.0003599030000000017, 0.000356569000000001, 0.00035843099999999933, 0.0003578890000000001, 0.0003860560000000027]</msg>
<status status="PASS" starttime="20201030 15:55:53.200" endtime="20201030 15:55:53.202"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.195" endtime="20201030 15:55:53.203"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:53.206" endtime="20201030 15:55:53.226"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.205" endtime="20201030 15:55:53.226"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.204" endtime="20201030 15:55:53.227"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.826" endtime="20201030 15:55:53.227"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.825" endtime="20201030 15:55:53.227"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:53.236" endtime="20201030 15:55:53.273"></status>
</kw>
<msg timestamp="20201030 15:55:53.274" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:53.234" endtime="20201030 15:55:53.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:53.276" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:53.275" endtime="20201030 15:55:53.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:53.277" endtime="20201030 15:55:53.279"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.232" endtime="20201030 15:55:53.279"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.229" endtime="20201030 15:55:53.280"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:53.286" endtime="20201030 15:55:53.571"></status>
</kw>
<msg timestamp="20201030 15:55:53.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024345319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024722153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:53.285" endtime="20201030 15:55:53.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:53.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024345319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024722153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:53.575" endtime="20201030 15:55:53.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:53.583" endtime="20201030 15:55:53.585"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.282" endtime="20201030 15:55:53.585"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.280" endtime="20201030 15:55:53.586"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:53.590" level="INFO">${RESULT} = [{'diff': 0.0003768339999999995}, {'diff': 0.0003861390000000006}, {'diff': 0.0003592779999999976}, {'diff': 0.00035951400000000175}, {'diff': 0.00036093099999999836}, {'diff': 0.00035995799999999703}...</msg>
<status status="PASS" starttime="20201030 15:55:53.587" endtime="20201030 15:55:53.590"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:53.594" level="INFO">${ACCURACY} = {'diff': [0.0003768339999999995, 0.0003861390000000006, 0.0003592779999999976, 0.00035951400000000175, 0.00036093099999999836, 0.00035995799999999703, 0.00035866600000000054, 0.00035847199999999857, 0...</msg>
<status status="PASS" starttime="20201030 15:55:53.591" endtime="20201030 15:55:53.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:53.598" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201030 15:55:53.597" endtime="20201030 15:55:53.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:53.601" level="INFO">VALUE: [0.0003768339999999995, 0.0003861390000000006, 0.0003592779999999976, 0.00035951400000000175, 0.00036093099999999836, 0.00035995799999999703, 0.00035866600000000054, 0.00035847199999999857, 0.00038548600000000086, 0.0003579159999999998, 0.0003571669999999985, 0.0003594449999999999, 0.0003588059999999997, 0.0003583189999999993, 0.0003860140000000005, 0.00036057000000000103, 0.0003854439999999987, 0.0003577920000000026, 0.00035615200000000194, 0.00035886099999999505, 0.000385611000000001, 0.00036041700000000176, 0.00035781899999999534, 0.00035916600000000104, 0.00038538899999999987, 0.0003859859999999979, 0.00036026399999999903, 0.00038590299999999994, 0.00038555599999999524, 0.00035709700000000066, 0.00036030499999999827, 0.0003566249999999993, 0.00036036099999999655, 0.0003570140000000027, 0.0003581939999999992, 0.0003581250000000008, 0.00035986099999999605, 0.00035802799999999635, 0.0003850000000000034, 0.0003564029999999982, 0.0003576799999999991, 0.00035676400000000247, 0.00035979199999999767, 0.000360070000000004, 0.0003563609999999995, 0.00036043000000000186, 0.0003570280000000023, 0.00035718000000000555, 0.00035682000000000075, 0.0003848749999999998]</msg>
<status status="PASS" starttime="20201030 15:55:53.599" endtime="20201030 15:55:53.602"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.595" endtime="20201030 15:55:53.603"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:53.607" endtime="20201030 15:55:53.626"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.605" endtime="20201030 15:55:53.627"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.604" endtime="20201030 15:55:53.627"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.228" endtime="20201030 15:55:53.627"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.227" endtime="20201030 15:55:53.627"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:53.636" endtime="20201030 15:55:53.671"></status>
</kw>
<msg timestamp="20201030 15:55:53.672" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:53.635" endtime="20201030 15:55:53.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:53.674" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:53.673" endtime="20201030 15:55:53.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:53.675" endtime="20201030 15:55:53.677"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.632" endtime="20201030 15:55:53.678"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.630" endtime="20201030 15:55:53.678"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:53.685" endtime="20201030 15:55:53.971"></status>
</kw>
<msg timestamp="20201030 15:55:53.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020909403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021293, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:55:53.683" endtime="20201030 15:55:53.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:53.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020909403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021293, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:55:53.975" endtime="20201030 15:55:53.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:53.983" endtime="20201030 15:55:53.984"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.680" endtime="20201030 15:55:53.985"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.679" endtime="20201030 15:55:53.985"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:53.989" level="INFO">${RESULT} = [{'diff': 0.0003835969999999994}, {'diff': 0.00035784699999999794}, {'diff': 0.0003580000000000007}, {'diff': 0.0003605420000000019}, {'diff': 0.0003858329999999986}, {'diff': 0.0003588749999999981}, ...</msg>
<status status="PASS" starttime="20201030 15:55:53.986" endtime="20201030 15:55:53.989"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:53.996" level="INFO">${ACCURACY} = {'diff': [0.0003835969999999994, 0.00035784699999999794, 0.0003580000000000007, 0.0003605420000000019, 0.0003858329999999986, 0.0003588749999999981, 0.00035668100000000105, 0.00035805600000000243, 0.0...</msg>
<status status="PASS" starttime="20201030 15:55:53.990" endtime="20201030 15:55:53.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:54.001" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201030 15:55:54.000" endtime="20201030 15:55:54.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:54.003" level="INFO">VALUE: [0.0003835969999999994, 0.00035784699999999794, 0.0003580000000000007, 0.0003605420000000019, 0.0003858329999999986, 0.0003588749999999981, 0.00035668100000000105, 0.00035805600000000243, 0.0003592640000000015, 0.0003576250000000003, 0.00035794399999999893, 0.0003607220000000008, 0.0003857500000000007, 0.000358555, 0.00035743099999999833, 0.0003603749999999996, 0.00035833399999999835, 0.0003566950000000006, 0.00035925000000000193, 0.00035915300000000094, 0.00038567999999999936, 0.0003859720000000018, 0.00035977800000000157, 0.0003570969999999972, 0.00036045799999999753, 0.000360652999999999, 0.00035751399999999975, 0.0003592229999999988, 0.00035963899999999493, 0.00036073699999999986, 0.00035926399999999803, 0.00035879199999999667, 0.00035759700000000116, 0.0003562089999999962, 0.00035806999999999506, 0.00035969500000000015, 0.0003583480000000014, 0.0003569999999999962, 0.00035809800000000114, 0.0003851519999999997, 0.00035759700000000116, 0.0003854870000000038, 0.0003588329999999959, 0.0003856939999999989, 0.00035726400000000297, 0.0003607779999999991, 0.0003569029999999987, 0.00035666700000000495, 0.00035874999999999796, 0.00035819499999999865]</msg>
<status status="PASS" starttime="20201030 15:55:54.002" endtime="20201030 15:55:54.004"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.997" endtime="20201030 15:55:54.005"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:54.008" endtime="20201030 15:55:54.028"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.007" endtime="20201030 15:55:54.028"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.006" endtime="20201030 15:55:54.029"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.628" endtime="20201030 15:55:54.029"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.628" endtime="20201030 15:55:54.029"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:54.038" endtime="20201030 15:55:54.073"></status>
</kw>
<msg timestamp="20201030 15:55:54.073" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:54.036" endtime="20201030 15:55:54.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:54.076" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:54.074" endtime="20201030 15:55:54.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:54.077" endtime="20201030 15:55:54.078"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.034" endtime="20201030 15:55:54.079"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.032" endtime="20201030 15:55:54.079"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:54.086" endtime="20201030 15:55:54.373"></status>
</kw>
<msg timestamp="20201030 15:55:54.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021098972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021469139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:54.084" endtime="20201030 15:55:54.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:54.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021098972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021469139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:54.377" endtime="20201030 15:55:54.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:54.385" endtime="20201030 15:55:54.387"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.082" endtime="20201030 15:55:54.387"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.080" endtime="20201030 15:55:54.388"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:54.392" level="INFO">${RESULT} = [{'diff': 0.0003701670000000011}, {'diff': 0.0003580690000000025}, {'diff': 0.0003848749999999998}, {'diff': 0.0003601390000000024}, {'diff': 0.00038590200000000047}, {'diff': 0.00035838899999999715},...</msg>
<status status="PASS" starttime="20201030 15:55:54.388" endtime="20201030 15:55:54.392"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:54.395" level="INFO">${ACCURACY} = {'diff': [0.0003701670000000011, 0.0003580690000000025, 0.0003848749999999998, 0.0003601390000000024, 0.00038590200000000047, 0.00035838899999999715, 0.0003856659999999998, 0.00035775000000000043, 0.0...</msg>
<status status="PASS" starttime="20201030 15:55:54.392" endtime="20201030 15:55:54.396"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:54.400" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201030 15:55:54.399" endtime="20201030 15:55:54.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:54.402" level="INFO">VALUE: [0.0003701670000000011, 0.0003580690000000025, 0.0003848749999999998, 0.0003601390000000024, 0.00038590200000000047, 0.00035838899999999715, 0.0003856659999999998, 0.00035775000000000043, 0.0003850139999999995, 0.00035759800000000064, 0.00038512500000000005, 0.00035829199999999964, 0.00036084700000000094, 0.0003601250000000028, 0.0003850970000000009, 0.0003604999999999997, 0.0003605970000000007, 0.0003593890000000016, 0.00035691699999999826, 0.0003606519999999995, 0.000358263000000001, 0.00036041700000000176, 0.00038498600000000036, 0.00038605499999999973, 0.0003849299999999986, 0.00035844399999999943, 0.0003581809999999991, 0.00035947199999999957, 0.0003585830000000026, 0.0003593470000000029, 0.00035952799999999785, 0.0003579449999999984, 0.00035804200000000286, 0.0003588480000000019, 0.00036011100000000323, 0.000385319000000002, 0.0003569860000000036, 0.00038622199999999857, 0.0003856390000000001, 0.00035976299999999906, 0.00035637499999999905, 0.00038599999999999746, 0.00038484700000000066, 0.0003580969999999947, 0.0003849309999999981, 0.0003582359999999979, 0.0003850409999999957, 0.0003563479999999994, 0.00035607, 0.00035705600000000143]</msg>
<status status="PASS" starttime="20201030 15:55:54.401" endtime="20201030 15:55:54.403"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.396" endtime="20201030 15:55:54.404"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:54.407" endtime="20201030 15:55:54.427"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.406" endtime="20201030 15:55:54.427"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.405" endtime="20201030 15:55:54.428"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.030" endtime="20201030 15:55:54.428"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.029" endtime="20201030 15:55:54.428"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:54.437" endtime="20201030 15:55:54.474"></status>
</kw>
<msg timestamp="20201030 15:55:54.475" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:54.435" endtime="20201030 15:55:54.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:54.477" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:54.476" endtime="20201030 15:55:54.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:54.478" endtime="20201030 15:55:54.480"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.433" endtime="20201030 15:55:54.480"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.431" endtime="20201030 15:55:54.481"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:54.487" endtime="20201030 15:55:54.774"></status>
</kw>
<msg timestamp="20201030 15:55:54.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023977153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024358528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:54.486" endtime="20201030 15:55:54.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:54.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023977153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024358528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:54.778" endtime="20201030 15:55:54.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:54.786" endtime="20201030 15:55:54.788"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.483" endtime="20201030 15:55:54.788"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.482" endtime="20201030 15:55:54.789"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:54.793" level="INFO">${RESULT} = [{'diff': 0.00038137499999999977}, {'diff': 0.000385304999999999}, {'diff': 0.00036063799999999993}, {'diff': 0.00035843099999999933}, {'diff': 0.0003560280000000013}, {'diff': 0.0003561250000000023},...</msg>
<status status="PASS" starttime="20201030 15:55:54.789" endtime="20201030 15:55:54.793"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:54.797" level="INFO">${ACCURACY} = {'diff': [0.00038137499999999977, 0.000385304999999999, 0.00036063799999999993, 0.00035843099999999933, 0.0003560280000000013, 0.0003561250000000023, 0.0003592359999999989, 0.0003850139999999995, 0.00...</msg>
<status status="PASS" starttime="20201030 15:55:54.794" endtime="20201030 15:55:54.797"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:54.801" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201030 15:55:54.800" endtime="20201030 15:55:54.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:54.804" level="INFO">VALUE: [0.00038137499999999977, 0.000385304999999999, 0.00036063799999999993, 0.00035843099999999933, 0.0003560280000000013, 0.0003561250000000023, 0.0003592359999999989, 0.0003850139999999995, 0.00036007000000000053, 0.00038567999999999936, 0.00035636199999999896, 0.00035597199999999954, 0.00035718100000000155, 0.00038530500000000245, 0.00035611099999999923, 0.0003568470000000004, 0.00035815299999999994, 0.0003560280000000013, 0.000386207999999999, 0.00035659700000000363, 0.0003861110000000015, 0.00035965300000000144, 0.00035597199999999607, 0.000358569000000003, 0.0003858059999999955, 0.00035943100000000033, 0.00035898599999999864, 0.0003857919999999959, 0.0003576250000000003, 0.00035973699999999886, 0.0003860000000000044, 0.00036052799999999885, 0.00035776399999999653, 0.0003594160000000013, 0.0003598050000000047, 0.0003585419999999964, 0.0003857079999999985, 0.0003560129999999953, 0.0003569579999999975, 0.0003852780000000028, 0.00035874999999999796, 0.0003570830000000011, 0.0003580969999999947, 0.00038617999999999986, 0.00035682000000000075, 0.00036020800000000075, 0.00036017999999999467, 0.0003849860000000038, 0.0003855409999999962, 0.00036009800000000314]</msg>
<status status="PASS" starttime="20201030 15:55:54.802" endtime="20201030 15:55:54.805"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.797" endtime="20201030 15:55:54.806"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:54.809" endtime="20201030 15:55:54.829"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.808" endtime="20201030 15:55:54.829"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.807" endtime="20201030 15:55:54.830"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.429" endtime="20201030 15:55:54.830"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.428" endtime="20201030 15:55:54.830"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:54.839" endtime="20201030 15:55:54.877"></status>
</kw>
<msg timestamp="20201030 15:55:54.878" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:54.837" endtime="20201030 15:55:54.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:54.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:54.879" endtime="20201030 15:55:54.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:54.881" endtime="20201030 15:55:54.883"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.835" endtime="20201030 15:55:54.884"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.833" endtime="20201030 15:55:54.884"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:54.890" endtime="20201030 15:55:55.204"></status>
</kw>
<msg timestamp="20201030 15:55:55.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023984597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024346431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:54.889" endtime="20201030 15:55:55.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:55.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023984597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024346431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:55.208" endtime="20201030 15:55:55.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:55.217" endtime="20201030 15:55:55.218"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.886" endtime="20201030 15:55:55.219"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.885" endtime="20201030 15:55:55.219"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:55.223" level="INFO">${RESULT} = [{'diff': 0.00036183400000000185}, {'diff': 0.00036062499999999983}, {'diff': 0.00035993100000000083}, {'diff': 0.0003587770000000011}, {'diff': 0.00035888899999999765}, {'diff': 0.0003575559999999984...</msg>
<status status="PASS" starttime="20201030 15:55:55.220" endtime="20201030 15:55:55.223"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:55.228" level="INFO">${ACCURACY} = {'diff': [0.00036183400000000185, 0.00036062499999999983, 0.00035993100000000083, 0.0003587770000000011, 0.00035888899999999765, 0.00035755599999999846, 0.0003860000000000009, 0.0003608199999999978, 0...</msg>
<status status="PASS" starttime="20201030 15:55:55.224" endtime="20201030 15:55:55.228"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:55.233" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201030 15:55:55.231" endtime="20201030 15:55:55.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:55.235" level="INFO">VALUE: [0.00036183400000000185, 0.00036062499999999983, 0.00035993100000000083, 0.0003587770000000011, 0.00035888899999999765, 0.00035755599999999846, 0.0003860000000000009, 0.0003608199999999978, 0.00035779199999999914, 0.0003564159999999983, 0.0003563609999999995, 0.00035816600000000004, 0.00035891700000000026, 0.0003562639999999985, 0.0003581390000000004, 0.00035909799999999867, 0.00035643000000000133, 0.0003588749999999981, 0.00035727700000000306, 0.00035676400000000247, 0.00035993100000000083, 0.00035648599999999614, 0.0003861520000000007, 0.00035815200000000047, 0.0003597219999999998, 0.0003590830000000031, 0.00038570800000000544, 0.00036066600000000254, 0.0003570690000000015, 0.00035641699999999776, 0.0003560690000000005, 0.0003596659999999946, 0.00036002799999999835, 0.00036076399999999953, 0.0003853750000000003, 0.00035643100000000427, 0.000358555999999996, 0.00035898599999999864, 0.000355972000000003, 0.00035913899999999443, 0.0003571669999999985, 0.0003860970000000019, 0.00035724999999999646, 0.0003560830000000001, 0.00036077800000000604, 0.0003857919999999959, 0.0003565410000000019, 0.0003862639999999973, 0.0003578050000000027, 0.000358569000000003]</msg>
<status status="PASS" starttime="20201030 15:55:55.234" endtime="20201030 15:55:55.236"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.229" endtime="20201030 15:55:55.236"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:55.240" endtime="20201030 15:55:55.259"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.238" endtime="20201030 15:55:55.260"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.237" endtime="20201030 15:55:55.260"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.831" endtime="20201030 15:55:55.260"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.830" endtime="20201030 15:55:55.261"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:55.270" endtime="20201030 15:55:55.309"></status>
</kw>
<msg timestamp="20201030 15:55:55.310" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:55.268" endtime="20201030 15:55:55.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:55.314" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:55.311" endtime="20201030 15:55:55.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:55.315" endtime="20201030 15:55:55.318"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.266" endtime="20201030 15:55:55.318"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.263" endtime="20201030 15:55:55.319"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:55.326" endtime="20201030 15:55:55.614"></status>
</kw>
<msg timestamp="20201030 15:55:55.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025542764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025912153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:55.324" endtime="20201030 15:55:55.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:55.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025542764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025912153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:55.618" endtime="20201030 15:55:55.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:55.626" endtime="20201030 15:55:55.628"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.321" endtime="20201030 15:55:55.628"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.319" endtime="20201030 15:55:55.629"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:55.633" level="INFO">${RESULT} = [{'diff': 0.0003693890000000012}, {'diff': 0.0003563609999999995}, {'diff': 0.0003600689999999976}, {'diff': 0.00035695800000000097}, {'diff': 0.0003579860000000011}, {'diff': 0.00036076399999999953},...</msg>
<status status="PASS" starttime="20201030 15:55:55.630" endtime="20201030 15:55:55.633"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:55.637" level="INFO">${ACCURACY} = {'diff': [0.0003693890000000012, 0.0003563609999999995, 0.0003600689999999976, 0.00035695800000000097, 0.0003579860000000011, 0.00036076399999999953, 0.0003588329999999994, 0.0003582359999999979, 0.00...</msg>
<status status="PASS" starttime="20201030 15:55:55.634" endtime="20201030 15:55:55.637"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:55.642" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201030 15:55:55.641" endtime="20201030 15:55:55.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:55.644" level="INFO">VALUE: [0.0003693890000000012, 0.0003563609999999995, 0.0003600689999999976, 0.00035695800000000097, 0.0003579860000000011, 0.00036076399999999953, 0.0003588329999999994, 0.0003582359999999979, 0.00038566699999999926, 0.0003592219999999993, 0.000360555999999998, 0.00035751399999999975, 0.00035894399999999993, 0.00038649999999999796, 0.0003607220000000008, 0.0003603329999999974, 0.00038594499999999865, 0.00035843099999999933, 0.0003606940000000017, 0.00035644399999999743, 0.00035627800000000154, 0.0003586800000000001, 0.00038506899999999483, 0.00035769499999999815, 0.0003600129999999993, 0.0003603060000000047, 0.0003859589999999982, 0.0003853330000000016, 0.0003602909999999987, 0.0003563469999999999, 0.0003563060000000007, 0.0003603610000000035, 0.00036048600000000014, 0.0003590140000000047, 0.00035816700000000645, 0.00038605599999999574, 0.0003578470000000014, 0.00035697199999999707, 0.0003564449999999969, 0.0003604020000000027, 0.0003862919999999964, 0.00035850000000000465, 0.00038538899999999987, 0.00036108299999999816, 0.0003588890000000011, 0.0003596800000000011, 0.00038595799999999875, 0.0003593610000000025, 0.000385513000000004, 0.0003564860000000031]</msg>
<status status="PASS" starttime="20201030 15:55:55.643" endtime="20201030 15:55:55.645"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.638" endtime="20201030 15:55:55.646"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:55.650" endtime="20201030 15:55:55.669"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.648" endtime="20201030 15:55:55.670"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.647" endtime="20201030 15:55:55.670"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.262" endtime="20201030 15:55:55.670"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.261" endtime="20201030 15:55:55.671"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:55.680" endtime="20201030 15:55:55.721"></status>
</kw>
<msg timestamp="20201030 15:55:55.721" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:55.678" endtime="20201030 15:55:55.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:55.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:55.722" endtime="20201030 15:55:55.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:55.725" endtime="20201030 15:55:55.726"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.675" endtime="20201030 15:55:55.727"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.673" endtime="20201030 15:55:55.727"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:55.734" endtime="20201030 15:55:56.038"></status>
</kw>
<msg timestamp="20201030 15:55:56.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027657917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028018764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:55.733" endtime="20201030 15:55:56.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027657917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028018764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:56.042" endtime="20201030 15:55:56.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:56.050" endtime="20201030 15:55:56.052"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.730" endtime="20201030 15:55:56.053"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.728" endtime="20201030 15:55:56.053"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:56.057" level="INFO">${RESULT} = [{'diff': 0.00036084700000000094}, {'diff': 0.0003589160000000008}, {'diff': 0.0003579310000000023}, {'diff': 0.00035816600000000004}, {'diff': 0.0003585280000000003}, {'diff': 0.0003597089999999997},...</msg>
<status status="PASS" starttime="20201030 15:55:56.054" endtime="20201030 15:55:56.057"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:56.061" level="INFO">${ACCURACY} = {'diff': [0.00036084700000000094, 0.0003589160000000008, 0.0003579310000000023, 0.00035816600000000004, 0.0003585280000000003, 0.0003597089999999997, 0.0003852360000000006, 0.0003570829999999976, 0.00...</msg>
<status status="PASS" starttime="20201030 15:55:56.058" endtime="20201030 15:55:56.061"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.066" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201030 15:55:56.065" endtime="20201030 15:55:56.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.069" level="INFO">VALUE: [0.00036084700000000094, 0.0003589160000000008, 0.0003579310000000023, 0.00035816600000000004, 0.0003585280000000003, 0.0003597089999999997, 0.0003852360000000006, 0.0003570829999999976, 0.00035997200000000007, 0.0003852499999999967, 0.0003592359999999989, 0.0003589579999999995, 0.00035894399999999993, 0.0003575280000000028, 0.0003581939999999992, 0.00035826400000000397, 0.00035983300000000384, 0.000358346999999995, 0.00035774999999999696, 0.0003583050000000032, 0.0003848749999999998, 0.0003847910000000024, 0.0003848469999999937, 0.00035923600000000583, 0.0003573470000000009, 0.0003586109999999948, 0.0003584999999999977, 0.0003850980000000004, 0.00036097300000000054, 0.0003591810000000001, 0.00035754099999999595, 0.00038525000000000365, 0.00036041700000000176, 0.0003592219999999993, 0.00038591600000000004, 0.000356569000000001, 0.0003606250000000033, 0.00038486100000000023, 0.0003569860000000036, 0.0003580270000000038, 0.00035673600000000333, 0.0003595549999999975, 0.0003581250000000008, 0.00038616699999999976, 0.00035976399999999853, 0.0003590689999999966, 0.0003607360000000004, 0.0003561249999999988, 0.00035824999999999746, 0.0003859440000000061]</msg>
<status status="PASS" starttime="20201030 15:55:56.067" endtime="20201030 15:55:56.070"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.062" endtime="20201030 15:55:56.071"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:56.075" endtime="20201030 15:55:56.094"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.073" endtime="20201030 15:55:56.095"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.072" endtime="20201030 15:55:56.095"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.672" endtime="20201030 15:55:56.095"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.671" endtime="20201030 15:55:56.096"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:56.105" endtime="20201030 15:55:56.142"></status>
</kw>
<msg timestamp="20201030 15:55:56.143" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:56.103" endtime="20201030 15:55:56.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.146" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:56.144" endtime="20201030 15:55:56.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:56.150" endtime="20201030 15:55:56.152"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.100" endtime="20201030 15:55:56.153"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.098" endtime="20201030 15:55:56.153"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:56.166" endtime="20201030 15:55:56.453"></status>
</kw>
<msg timestamp="20201030 15:55:56.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024629333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025011222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:56.161" endtime="20201030 15:55:56.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024629333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025011222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:56.457" endtime="20201030 15:55:56.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:56.465" endtime="20201030 15:55:56.467"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.156" endtime="20201030 15:55:56.467"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.154" endtime="20201030 15:55:56.467"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:56.471" level="INFO">${RESULT} = [{'diff': 0.00038188899999999984}, {'diff': 0.0003603479999999999}, {'diff': 0.000385416999999999}, {'diff': 0.00038531899999999855}, {'diff': 0.0003602220000000003}, {'diff': 0.0003609029999999992}, ...</msg>
<status status="PASS" starttime="20201030 15:55:56.468" endtime="20201030 15:55:56.472"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:56.476" level="INFO">${ACCURACY} = {'diff': [0.00038188899999999984, 0.0003603479999999999, 0.000385416999999999, 0.00038531899999999855, 0.0003602220000000003, 0.0003609029999999992, 0.000359151999999998, 0.0003568050000000017, 0.0003...</msg>
<status status="PASS" starttime="20201030 15:55:56.472" endtime="20201030 15:55:56.477"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.481" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201030 15:55:56.480" endtime="20201030 15:55:56.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.483" level="INFO">VALUE: [0.00038188899999999984, 0.0003603479999999999, 0.000385416999999999, 0.00038531899999999855, 0.0003602220000000003, 0.0003609029999999992, 0.000359151999999998, 0.0003568050000000017, 0.00038607000000000224, 0.0003859169999999995, 0.00035993000000000136, 0.00035623599999999936, 0.0003567080000000007, 0.00038519500000000137, 0.00035979200000000114, 0.0003861390000000006, 0.0003575419999999989, 0.00035793000000000283, 0.0003576809999999986, 0.0003611659999999961, 0.0003850420000000021, 0.00038551400000000347, 0.0003600419999999979, 0.0003589030000000007, 0.0003851389999999996, 0.00035670799999999725, 0.000386013999999997, 0.0003576389999999999, 0.00035755500000000245, 0.00035633300000000034, 0.0003562920000000011, 0.00036047200000000057, 0.0003606390000000029, 0.00035697299999999654, 0.00036054099999999895, 0.00035823600000000483, 0.0003609019999999963, 0.0003852499999999967, 0.00038608300000000234, 0.00035661099999999973, 0.0003609309999999949, 0.0003608199999999978, 0.0003567500000000029, 0.0003854309999999986, 0.0003862919999999964, 0.00035902799999999735, 0.0003863620000000012, 0.0003856949999999984, 0.0003599999999999992, 0.0003571940000000051]</msg>
<status status="PASS" starttime="20201030 15:55:56.482" endtime="20201030 15:55:56.484"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.477" endtime="20201030 15:55:56.485"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:56.488" endtime="20201030 15:55:56.508"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.487" endtime="20201030 15:55:56.508"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.486" endtime="20201030 15:55:56.509"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.096" endtime="20201030 15:55:56.509"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.096" endtime="20201030 15:55:56.509"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:56.518" endtime="20201030 15:55:56.554"></status>
</kw>
<msg timestamp="20201030 15:55:56.554" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:56.516" endtime="20201030 15:55:56.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.557" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:56.555" endtime="20201030 15:55:56.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:56.558" endtime="20201030 15:55:56.559"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.514" endtime="20201030 15:55:56.560"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.512" endtime="20201030 15:55:56.560"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:56.567" endtime="20201030 15:55:56.892"></status>
</kw>
<msg timestamp="20201030 15:55:56.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022960819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023333139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:56.565" endtime="20201030 15:55:56.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022960819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023333139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:56.896" endtime="20201030 15:55:56.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:56.904" endtime="20201030 15:55:56.905"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.563" endtime="20201030 15:55:56.906"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.561" endtime="20201030 15:55:56.906"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:56.910" level="INFO">${RESULT} = [{'diff': 0.0003723199999999989}, {'diff': 0.0003600689999999976}, {'diff': 0.00035618100000000055}, {'diff': 0.0003571389999999994}, {'diff': 0.0003581669999999995}, {'diff': 0.0003601670000000015}, ...</msg>
<status status="PASS" starttime="20201030 15:55:56.907" endtime="20201030 15:55:56.910"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:56.914" level="INFO">${ACCURACY} = {'diff': [0.0003723199999999989, 0.0003600689999999976, 0.00035618100000000055, 0.0003571389999999994, 0.0003581669999999995, 0.0003601670000000015, 0.00035927800000000107, 0.0003576389999999999, 0.00...</msg>
<status status="PASS" starttime="20201030 15:55:56.911" endtime="20201030 15:55:56.914"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.919" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201030 15:55:56.918" endtime="20201030 15:55:56.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.921" level="INFO">VALUE: [0.0003723199999999989, 0.0003600689999999976, 0.00035618100000000055, 0.0003571389999999994, 0.0003581669999999995, 0.0003601670000000015, 0.00035927800000000107, 0.0003576389999999999, 0.0003564999999999992, 0.0003569999999999997, 0.00035654200000000136, 0.0003861520000000007, 0.0003572219999999973, 0.00036077800000000257, 0.0003598330000000004, 0.00035733300000000134, 0.0003588199999999993, 0.0003563609999999995, 0.0003560830000000001, 0.00038509699999999744, 0.0003604590000000005, 0.0003591529999999975, 0.000385304999999999, 0.00035820799999999875, 0.0003610969999999977, 0.00038629200000000335, 0.000360054999999998, 0.0003579029999999997, 0.0003585969999999952, 0.0003861949999999989, 0.0003577359999999974, 0.0003586390000000009, 0.00035647199999999657, 0.0003852640000000032, 0.00035841699999999976, 0.00035748599999999714, 0.00038536100000000073, 0.0003611800000000026, 0.0003850000000000034, 0.0003850699999999943, 0.00036097200000000107, 0.0003601390000000024, 0.0003588890000000011, 0.00035997200000000007, 0.0003605419999999984, 0.0003591800000000006, 0.0003852220000000045, 0.000359054999999997, 0.00035647199999999657, 0.0003567219999999968]</msg>
<status status="PASS" starttime="20201030 15:55:56.920" endtime="20201030 15:55:56.922"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.915" endtime="20201030 15:55:56.923"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:56.926" endtime="20201030 15:55:56.946"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.925" endtime="20201030 15:55:56.946"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.924" endtime="20201030 15:55:56.947"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.510" endtime="20201030 15:55:56.947"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.509" endtime="20201030 15:55:56.947"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:56.956" endtime="20201030 15:55:56.996"></status>
</kw>
<msg timestamp="20201030 15:55:56.997" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:56.954" endtime="20201030 15:55:56.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.999" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:56.998" endtime="20201030 15:55:56.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:57.000" endtime="20201030 15:55:57.002"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.952" endtime="20201030 15:55:57.003"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.949" endtime="20201030 15:55:57.003"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:57.009" endtime="20201030 15:55:57.296"></status>
</kw>
<msg timestamp="20201030 15:55:57.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022107806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022477653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:57.008" endtime="20201030 15:55:57.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:57.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022107806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022477653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:57.300" endtime="20201030 15:55:57.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:57.308" endtime="20201030 15:55:57.310"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.005" endtime="20201030 15:55:57.310"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.004" endtime="20201030 15:55:57.311"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:57.315" level="INFO">${RESULT} = [{'diff': 0.00036984699999999954}, {'diff': 0.000384611}, {'diff': 0.0003587229999999983}, {'diff': 0.00035954099999999795}, {'diff': 0.00035769400000000215}, {'diff': 0.0003609029999999992}, {'diff':...</msg>
<status status="PASS" starttime="20201030 15:55:57.312" endtime="20201030 15:55:57.315"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:57.319" level="INFO">${ACCURACY} = {'diff': [0.00036984699999999954, 0.000384611, 0.0003587229999999983, 0.00035954099999999795, 0.00035769400000000215, 0.0003609029999999992, 0.00035652699999999884, 0.0003559310000000003, 0.0003851119...</msg>
<status status="PASS" starttime="20201030 15:55:57.316" endtime="20201030 15:55:57.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:57.323" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201030 15:55:57.322" endtime="20201030 15:55:57.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:57.326" level="INFO">VALUE: [0.00036984699999999954, 0.000384611, 0.0003587229999999983, 0.00035954099999999795, 0.00035769400000000215, 0.0003609029999999992, 0.00035652699999999884, 0.0003559310000000003, 0.00038511199999999995, 0.0003605840000000006, 0.00035595799999999997, 0.0003561389999999984, 0.000359360999999999, 0.0003593199999999998, 0.0003596389999999984, 0.0003605419999999984, 0.00035906999999999953, 0.00035926399999999803, 0.0003608329999999979, 0.0003593199999999998, 0.00035673699999999933, 0.00038586100000000123, 0.00036034700000000044, 0.00035957000000000003, 0.00035645899999999994, 0.0003588890000000011, 0.0003860550000000032, 0.00038512500000000005, 0.00035759700000000116, 0.00035856999999999556, 0.0003575830000000016, 0.00035700000000000315, 0.00036024999999999946, 0.0003855970000000014, 0.0003561669999999975, 0.0003566390000000058, 0.0003604999999999997, 0.00036043000000000186, 0.00035626399999999503, 0.00035608399999999957, 0.0003858339999999946, 0.00036091700000000226, 0.00035600000000000215, 0.00036041700000000176, 0.00035724999999999646, 0.0003596250000000023, 0.0003593610000000025, 0.00038580500000000295, 0.0003588470000000024, 0.00036093100000000183]</msg>
<status status="PASS" starttime="20201030 15:55:57.324" endtime="20201030 15:55:57.327"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.320" endtime="20201030 15:55:57.328"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:57.332" endtime="20201030 15:55:57.351"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.330" endtime="20201030 15:55:57.352"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.329" endtime="20201030 15:55:57.352"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.948" endtime="20201030 15:55:57.352"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.947" endtime="20201030 15:55:57.353"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:57.361" endtime="20201030 15:55:57.399"></status>
</kw>
<msg timestamp="20201030 15:55:57.399" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:57.360" endtime="20201030 15:55:57.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:57.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:57.400" endtime="20201030 15:55:57.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:57.403" endtime="20201030 15:55:57.405"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.357" endtime="20201030 15:55:57.405"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.355" endtime="20201030 15:55:57.405"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:57.412" endtime="20201030 15:55:57.698"></status>
</kw>
<msg timestamp="20201030 15:55:57.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023620514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023986681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:57.410" endtime="20201030 15:55:57.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:57.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023620514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023986681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:57.702" endtime="20201030 15:55:57.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:57.710" endtime="20201030 15:55:57.712"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.408" endtime="20201030 15:55:57.712"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.406" endtime="20201030 15:55:57.713"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:57.717" level="INFO">${RESULT} = [{'diff': 0.0003661670000000006}, {'diff': 0.00038530500000000245}, {'diff': 0.0003852919999999989}, {'diff': 0.0003854580000000017}, {'diff': 0.00038576400000000025}, {'diff': 0.00036097300000000054}...</msg>
<status status="PASS" starttime="20201030 15:55:57.714" endtime="20201030 15:55:57.717"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:57.724" level="INFO">${ACCURACY} = {'diff': [0.0003661670000000006, 0.00038530500000000245, 0.0003852919999999989, 0.0003854580000000017, 0.00038576400000000025, 0.00036097300000000054, 0.00035891700000000026, 0.00036080599999999824, 0...</msg>
<status status="PASS" starttime="20201030 15:55:57.718" endtime="20201030 15:55:57.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:57.729" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201030 15:55:57.728" endtime="20201030 15:55:57.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:57.731" level="INFO">VALUE: [0.0003661670000000006, 0.00038530500000000245, 0.0003852919999999989, 0.0003854580000000017, 0.00038576400000000025, 0.00036097300000000054, 0.00035891700000000026, 0.00036080599999999824, 0.00036084700000000094, 0.0003609299999999989, 0.00035734699999999744, 0.0003592219999999993, 0.0003587779999999971, 0.00035941700000000076, 0.0003610419999999989, 0.00036002799999999835, 0.00035605500000000095, 0.00036043000000000186, 0.00035898599999999864, 0.00035931899999999684, 0.0003574029999999992, 0.0003576250000000003, 0.00036019500000000065, 0.0003591250000000018, 0.00035633300000000034, 0.0003568060000000012, 0.0003571939999999982, 0.0003570270000000028, 0.00035966600000000154, 0.0003577779999999961, 0.00035936099999999555, 0.0003857919999999959, 0.00036006999999999706, 0.00035800000000000415, 0.0003862499999999977, 0.00035661099999999973, 0.00038488899999999937, 0.00035955500000000445, 0.0003567920000000016, 0.00038622199999999857, 0.0003852360000000041, 0.00038552800000000303, 0.0003601940000000012, 0.0003562920000000011, 0.0003861530000000002, 0.00036024999999999946, 0.0003601669999999946, 0.00035983300000000384, 0.00038502800000000253, 0.00035693099999999783]</msg>
<status status="PASS" starttime="20201030 15:55:57.730" endtime="20201030 15:55:57.732"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.725" endtime="20201030 15:55:57.732"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:57.736" endtime="20201030 15:55:57.756"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.735" endtime="20201030 15:55:57.756"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.733" endtime="20201030 15:55:57.757"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.354" endtime="20201030 15:55:57.757"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.353" endtime="20201030 15:55:57.757"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:57.766" endtime="20201030 15:55:57.800"></status>
</kw>
<msg timestamp="20201030 15:55:57.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:57.764" endtime="20201030 15:55:57.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:57.803" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:57.802" endtime="20201030 15:55:57.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:57.804" endtime="20201030 15:55:57.806"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.762" endtime="20201030 15:55:57.807"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.759" endtime="20201030 15:55:57.807"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:57.813" endtime="20201030 15:55:58.100"></status>
</kw>
<msg timestamp="20201030 15:55:58.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020965333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021324708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:57.812" endtime="20201030 15:55:58.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:58.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020965333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021324708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:58.105" endtime="20201030 15:55:58.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:58.113" endtime="20201030 15:55:58.114"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.809" endtime="20201030 15:55:58.115"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.808" endtime="20201030 15:55:58.115"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:58.119" level="INFO">${RESULT} = [{'diff': 0.00035937500000000205}, {'diff': 0.0003562920000000011}, {'diff': 0.00035841699999999976}, {'diff': 0.00035641700000000123}, {'diff': 0.0003853750000000003}, {'diff': 0.00035891700000000026...</msg>
<status status="PASS" starttime="20201030 15:55:58.116" endtime="20201030 15:55:58.119"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:58.123" level="INFO">${ACCURACY} = {'diff': [0.00035937500000000205, 0.0003562920000000011, 0.00035841699999999976, 0.00035641700000000123, 0.0003853750000000003, 0.00035891700000000026, 0.0003856529999999997, 0.0003561950000000001, 0....</msg>
<status status="PASS" starttime="20201030 15:55:58.120" endtime="20201030 15:55:58.123"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:58.128" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201030 15:55:58.127" endtime="20201030 15:55:58.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:58.130" level="INFO">VALUE: [0.00035937500000000205, 0.0003562920000000011, 0.00035841699999999976, 0.00035641700000000123, 0.0003853750000000003, 0.00035891700000000026, 0.0003856529999999997, 0.0003561950000000001, 0.000356763999999999, 0.0003849590000000007, 0.00038566700000000273, 0.0003562219999999998, 0.0003854300000000026, 0.00035794399999999893, 0.0003578470000000014, 0.00035627800000000154, 0.0003849169999999985, 0.0003571249999999998, 0.00038472200000000054, 0.0003852500000000002, 0.00035674999999999943, 0.00038515300000000266, 0.0003583189999999993, 0.00035674999999999943, 0.00038502799999999907, 0.0003857370000000006, 0.00035627800000000154, 0.0003591529999999975, 0.00038517999999999886, 0.000357070000000001, 0.00035920799999999975, 0.00036015300000000194, 0.00038605599999999574, 0.0003851529999999992, 0.0003601669999999946, 0.00038490299999999894, 0.0003560280000000013, 0.0003565419999999944, 0.0003608749999999966, 0.00038618099999999933, 0.00035733300000000134, 0.00038555499999999576, 0.0003854589999999977, 0.00035694399999999793, 0.00038594499999999865, 0.0003848890000000063, 0.00035809700000000166, 0.00035792999999999936, 0.0003581939999999992, 0.0003567500000000029]</msg>
<status status="PASS" starttime="20201030 15:55:58.129" endtime="20201030 15:55:58.131"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.124" endtime="20201030 15:55:58.131"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:58.135" endtime="20201030 15:55:58.155"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.134" endtime="20201030 15:55:58.156"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.132" endtime="20201030 15:55:58.156"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.758" endtime="20201030 15:55:58.157"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.757" endtime="20201030 15:55:58.157"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:58.166" endtime="20201030 15:55:58.202"></status>
</kw>
<msg timestamp="20201030 15:55:58.203" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:58.164" endtime="20201030 15:55:58.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:58.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:58.204" endtime="20201030 15:55:58.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:58.206" endtime="20201030 15:55:58.208"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.162" endtime="20201030 15:55:58.208"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.159" endtime="20201030 15:55:58.209"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:58.216" endtime="20201030 15:55:58.503"></status>
</kw>
<msg timestamp="20201030 15:55:58.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023906292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024279528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:58.215" endtime="20201030 15:55:58.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:58.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023906292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024279528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:58.507" endtime="20201030 15:55:58.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:58.515" endtime="20201030 15:55:58.516"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.212" endtime="20201030 15:55:58.517"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.210" endtime="20201030 15:55:58.517"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:58.521" level="INFO">${RESULT} = [{'diff': 0.0003732360000000025}, {'diff': 0.0003572639999999995}, {'diff': 0.00035719499999999765}, {'diff': 0.00035724999999999993}, {'diff': 0.00035825000000000093}, {'diff': 0.0003854439999999987}...</msg>
<status status="PASS" starttime="20201030 15:55:58.518" endtime="20201030 15:55:58.521"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:58.525" level="INFO">${ACCURACY} = {'diff': [0.0003732360000000025, 0.0003572639999999995, 0.00035719499999999765, 0.00035724999999999993, 0.00035825000000000093, 0.0003854439999999987, 0.0003857779999999998, 0.00038612500000000105, 0....</msg>
<status status="PASS" starttime="20201030 15:55:58.522" endtime="20201030 15:55:58.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:58.530" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201030 15:55:58.529" endtime="20201030 15:55:58.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:58.532" level="INFO">VALUE: [0.0003732360000000025, 0.0003572639999999995, 0.00035719499999999765, 0.00035724999999999993, 0.00035825000000000093, 0.0003854439999999987, 0.0003857779999999998, 0.00038612500000000105, 0.00038505499999999873, 0.00036088899999999965, 0.00035761100000000073, 0.0003586390000000009, 0.0003596810000000006, 0.00035920799999999975, 0.0003590969999999992, 0.0003567920000000016, 0.00035624999999999893, 0.0003568060000000012, 0.00038616699999999976, 0.00035691700000000173, 0.0003560830000000001, 0.00036002799999999835, 0.0003566809999999976, 0.00035920799999999975, 0.0003854440000000056, 0.0003584590000000054, 0.00038507000000000124, 0.00035826399999999703, 0.0003577500000000039, 0.000360569000000005, 0.0003563339999999998, 0.0003571939999999982, 0.0003601390000000024, 0.00035879100000000413, 0.0003851949999999979, 0.00035750000000000365, 0.00035809700000000166, 0.0003855000000000039, 0.000360667000000002, 0.00035759700000000116, 0.00035591699999999726, 0.0003564029999999982, 0.00038556900000000227, 0.00035605600000000043, 0.00035676399999999553, 0.0003602779999999986, 0.00035626400000000197, 0.0003858750000000008, 0.00035737500000000005, 0.00036040299999999525]</msg>
<status status="PASS" starttime="20201030 15:55:58.531" endtime="20201030 15:55:58.534"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.526" endtime="20201030 15:55:58.534"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:58.538" endtime="20201030 15:55:58.558"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.537" endtime="20201030 15:55:58.558"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.535" endtime="20201030 15:55:58.558"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.158" endtime="20201030 15:55:58.559"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.157" endtime="20201030 15:55:58.559"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:58.568" endtime="20201030 15:55:58.605"></status>
</kw>
<msg timestamp="20201030 15:55:58.605" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:58.566" endtime="20201030 15:55:58.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:58.608" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:58.606" endtime="20201030 15:55:58.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:58.609" endtime="20201030 15:55:58.610"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.564" endtime="20201030 15:55:58.611"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.561" endtime="20201030 15:55:58.611"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:58.618" endtime="20201030 15:55:58.903"></status>
</kw>
<msg timestamp="20201030 15:55:58.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0229365, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023313458, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:55:58.616" endtime="20201030 15:55:58.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:58.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0229365, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023313458, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:55:58.907" endtime="20201030 15:55:58.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:58.916" endtime="20201030 15:55:58.917"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.614" endtime="20201030 15:55:58.918"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.612" endtime="20201030 15:55:58.918"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:58.922" level="INFO">${RESULT} = [{'diff': 0.00037695800000000015}, {'diff': 0.00035994399999999746}, {'diff': 0.00035984699999999994}, {'diff': 0.0003590000000000017}, {'diff': 0.00038572299999999754}, {'diff': 0.0003563329999999969...</msg>
<status status="PASS" starttime="20201030 15:55:58.919" endtime="20201030 15:55:58.922"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:58.927" level="INFO">${ACCURACY} = {'diff': [0.00037695800000000015, 0.00035994399999999746, 0.00035984699999999994, 0.0003590000000000017, 0.00038572299999999754, 0.0003563329999999969, 0.00036027800000000207, 0.0003586250000000013, 0...</msg>
<status status="PASS" starttime="20201030 15:55:58.923" endtime="20201030 15:55:58.927"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:58.932" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201030 15:55:58.930" endtime="20201030 15:55:58.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:58.934" level="INFO">VALUE: [0.00037695800000000015, 0.00035994399999999746, 0.00035984699999999994, 0.0003590000000000017, 0.00038572299999999754, 0.0003563329999999969, 0.00036027800000000207, 0.0003586250000000013, 0.00035941700000000076, 0.0003567220000000003, 0.0003861390000000006, 0.0003853750000000003, 0.00036084700000000094, 0.0003859589999999982, 0.0003571530000000024, 0.00038567999999999936, 0.0003566670000000015, 0.0003587220000000023, 0.000386305, 0.0003592219999999993, 0.00036105600000000196, 0.00035661099999999973, 0.00038620899999999847, 0.0003586809999999996, 0.00038533400000000106, 0.00035702799999999535, 0.00035882000000000275, 0.000356958999999997, 0.0003564590000000034, 0.0003588340000000023, 0.00035981899999999734, 0.00036077800000000604, 0.0003594869999999986, 0.00036061100000000373, 0.0003570410000000024, 0.0003590969999999957, 0.000385804999999996, 0.00036061100000000373, 0.0003853060000000019, 0.0003607220000000008, 0.00035611099999999923, 0.00035638900000000556, 0.0003584589999999985, 0.0003583610000000015, 0.00035715299999999894, 0.00035815299999999994, 0.0003851529999999992, 0.00036050000000000665, 0.0003571669999999985, 0.0003573610000000005]</msg>
<status status="PASS" starttime="20201030 15:55:58.933" endtime="20201030 15:55:58.935"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.928" endtime="20201030 15:55:58.935"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:58.939" endtime="20201030 15:55:58.958"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.937" endtime="20201030 15:55:58.959"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.936" endtime="20201030 15:55:58.959"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.560" endtime="20201030 15:55:58.960"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.559" endtime="20201030 15:55:58.960"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:58.969" endtime="20201030 15:55:59.006"></status>
</kw>
<msg timestamp="20201030 15:55:59.007" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:58.967" endtime="20201030 15:55:59.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:59.009" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:59.008" endtime="20201030 15:55:59.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:59.010" endtime="20201030 15:55:59.012"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.965" endtime="20201030 15:55:59.013"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.962" endtime="20201030 15:55:59.013"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:59.020" endtime="20201030 15:55:59.307"></status>
</kw>
<msg timestamp="20201030 15:55:59.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023977458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024335194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:59.018" endtime="20201030 15:55:59.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:59.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023977458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024335194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:59.311" endtime="20201030 15:55:59.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:59.319" endtime="20201030 15:55:59.320"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.015" endtime="20201030 15:55:59.321"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.014" endtime="20201030 15:55:59.321"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:59.325" level="INFO">${RESULT} = [{'diff': 0.00035773600000000086}, {'diff': 0.0003563609999999995}, {'diff': 0.00035827800000000007}, {'diff': 0.0003562920000000011}, {'diff': 0.00038581899999999905}, {'diff': 0.00035843099999999933...</msg>
<status status="PASS" starttime="20201030 15:55:59.322" endtime="20201030 15:55:59.326"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:59.329" level="INFO">${ACCURACY} = {'diff': [0.00035773600000000086, 0.0003563609999999995, 0.00035827800000000007, 0.0003562920000000011, 0.00038581899999999905, 0.00035843099999999933, 0.0003851659999999993, 0.00036102799999999935, 0...</msg>
<status status="PASS" starttime="20201030 15:55:59.326" endtime="20201030 15:55:59.330"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:59.334" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201030 15:55:59.333" endtime="20201030 15:55:59.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:59.336" level="INFO">VALUE: [0.00035773600000000086, 0.0003563609999999995, 0.00035827800000000007, 0.0003562920000000011, 0.00038581899999999905, 0.00035843099999999933, 0.0003851659999999993, 0.00036102799999999935, 0.00035837500000000105, 0.0003567219999999968, 0.0003592359999999989, 0.0003563339999999998, 0.00036084700000000094, 0.00038530599999999846, 0.0003562080000000002, 0.00035927800000000107, 0.00035766599999999954, 0.00035765299999999944, 0.00038602800000000007, 0.0003580129999999973, 0.0003566249999999993, 0.00035974999999999896, 0.0003575830000000016, 0.0003861249999999941, 0.00036074999999999996, 0.0003853060000000019, 0.00035874999999999796, 0.00038525000000000365, 0.00038590299999999994, 0.00035607, 0.000356861, 0.0003564449999999969, 0.00035827800000000354, 0.00038540199999999997, 0.0003601390000000024, 0.00035877800000000404, 0.00036086099999999705, 0.0003606250000000033, 0.0003600139999999988, 0.00035705600000000143, 0.00035822200000000526, 0.0003566950000000041, 0.00038616699999999976, 0.00035974999999999896, 0.00038566699999999926, 0.00038544499999999815, 0.0003605269999999994, 0.00035854200000000336, 0.0003853750000000003, 0.0003571669999999985]</msg>
<status status="PASS" starttime="20201030 15:55:59.335" endtime="20201030 15:55:59.342"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.330" endtime="20201030 15:55:59.343"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:59.346" endtime="20201030 15:55:59.366"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.345" endtime="20201030 15:55:59.366"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.344" endtime="20201030 15:55:59.367"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.961" endtime="20201030 15:55:59.367"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.960" endtime="20201030 15:55:59.367"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:59.376" endtime="20201030 15:55:59.414"></status>
</kw>
<msg timestamp="20201030 15:55:59.415" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:59.374" endtime="20201030 15:55:59.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:59.417" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:59.416" endtime="20201030 15:55:59.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:59.418" endtime="20201030 15:55:59.420"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.372" endtime="20201030 15:55:59.421"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.370" endtime="20201030 15:55:59.421"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:59.428" endtime="20201030 15:55:59.714"></status>
</kw>
<msg timestamp="20201030 15:55:59.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023638778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024005403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:59.426" endtime="20201030 15:55:59.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:59.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023638778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024005403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:59.718" endtime="20201030 15:55:59.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:59.727" endtime="20201030 15:55:59.728"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.424" endtime="20201030 15:55:59.729"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.422" endtime="20201030 15:55:59.729"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:59.733" level="INFO">${RESULT} = [{'diff': 0.00036662500000000237}, {'diff': 0.00035672299999999976}, {'diff': 0.0003585000000000012}, {'diff': 0.00035873600000000186}, {'diff': 0.00036025000000000293}, {'diff': 0.000358360999999998}...</msg>
<status status="PASS" starttime="20201030 15:55:59.730" endtime="20201030 15:55:59.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:59.737" level="INFO">${ACCURACY} = {'diff': [0.00036662500000000237, 0.00035672299999999976, 0.0003585000000000012, 0.00035873600000000186, 0.00036025000000000293, 0.000358360999999998, 0.00035773600000000086, 0.00038627799999999685, 0...</msg>
<status status="PASS" starttime="20201030 15:55:59.734" endtime="20201030 15:55:59.737"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:59.742" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201030 15:55:59.741" endtime="20201030 15:55:59.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:59.744" level="INFO">VALUE: [0.00036662500000000237, 0.00035672299999999976, 0.0003585000000000012, 0.00035873600000000186, 0.00036025000000000293, 0.000358360999999998, 0.00035773600000000086, 0.00038627799999999685, 0.0003599029999999982, 0.00038594499999999865, 0.00035798599999999764, 0.0003591389999999979, 0.00035879200000000014, 0.00036048600000000014, 0.0003595280000000013, 0.0003602359999999999, 0.00038554099999999966, 0.00035626400000000197, 0.0003848060000000014, 0.0003851389999999996, 0.0003586389999999974, 0.0003572080000000047, 0.00035869499999999915, 0.0003594449999999999, 0.0003857090000000049, 0.0003595549999999975, 0.0003595969999999962, 0.0003859309999999991, 0.0003858750000000008, 0.00035633300000000034, 0.000385611000000001, 0.00035673600000000333, 0.00038525000000000365, 0.0003582909999999967, 0.0003597779999999981, 0.0003605979999999967, 0.00035842999999999986, 0.00038534700000000116, 0.000359959, 0.0003581390000000004, 0.0003591950000000066, 0.00036079199999999867, 0.00035993100000000083, 0.00035854099999999695, 0.00035827800000000354, 0.00035894399999999993, 0.00035897199999999907, 0.00036106999999999806, 0.00035811100000000123, 0.00035743099999999833]</msg>
<status status="PASS" starttime="20201030 15:55:59.743" endtime="20201030 15:55:59.746"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.738" endtime="20201030 15:55:59.746"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:59.750" endtime="20201030 15:55:59.770"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.749" endtime="20201030 15:55:59.770"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.747" endtime="20201030 15:55:59.770"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.368" endtime="20201030 15:55:59.771"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.367" endtime="20201030 15:55:59.771"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:59.780" endtime="20201030 15:55:59.815"></status>
</kw>
<msg timestamp="20201030 15:55:59.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:59.778" endtime="20201030 15:55:59.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:59.818" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:59.816" endtime="20201030 15:55:59.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:59.819" endtime="20201030 15:55:59.820"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.776" endtime="20201030 15:55:59.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.773" endtime="20201030 15:55:59.821"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:59.828" endtime="20201030 15:56:00.114"></status>
</kw>
<msg timestamp="20201030 15:56:00.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021735028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022107083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:59.826" endtime="20201030 15:56:00.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:00.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021735028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022107083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:00.118" endtime="20201030 15:56:00.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:00.126" endtime="20201030 15:56:00.127"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.824" endtime="20201030 15:56:00.128"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.822" endtime="20201030 15:56:00.128"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:00.132" level="INFO">${RESULT} = [{'diff': 0.0003720549999999996}, {'diff': 0.0003588480000000019}, {'diff': 0.0003857079999999985}, {'diff': 0.0003589579999999995}, {'diff': 0.00036066699999999854}, {'diff': 0.0003595689999999971}, ...</msg>
<status status="PASS" starttime="20201030 15:56:00.129" endtime="20201030 15:56:00.132"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:00.137" level="INFO">${ACCURACY} = {'diff': [0.0003720549999999996, 0.0003588480000000019, 0.0003857079999999985, 0.0003589579999999995, 0.00036066699999999854, 0.0003595689999999971, 0.0003569159999999988, 0.00038617999999999986, 0.00...</msg>
<status status="PASS" starttime="20201030 15:56:00.133" endtime="20201030 15:56:00.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:00.142" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201030 15:56:00.140" endtime="20201030 15:56:00.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:00.144" level="INFO">VALUE: [0.0003720549999999996, 0.0003588480000000019, 0.0003857079999999985, 0.0003589579999999995, 0.00036066699999999854, 0.0003595689999999971, 0.0003569159999999988, 0.00038617999999999986, 0.0003580549999999995, 0.00038498600000000036, 0.0003582359999999979, 0.0003860970000000019, 0.000356763999999999, 0.00035673599999999986, 0.0003592779999999976, 0.0003853620000000002, 0.000386110999999998, 0.0003589860000000021, 0.000358360999999998, 0.0003580000000000007, 0.0003859580000000022, 0.0003573470000000009, 0.0003573340000000008, 0.0003854719999999978, 0.0003857919999999994, 0.00035952700000000185, 0.000359943999999994, 0.00035720900000000416, 0.00035904200000000386, 0.00035716599999999904, 0.000360458000000001, 0.00035755500000000245, 0.0003564159999999983, 0.00035776399999999653, 0.00036061100000000373, 0.0003579029999999997, 0.00038602700000000406, 0.0003860000000000044, 0.00036090299999999575, 0.00035687499999999955, 0.00035794500000000534, 0.0003569449999999974, 0.0003591109999999953, 0.0003578190000000023, 0.0003863750000000013, 0.0003855550000000027, 0.00038558300000000184, 0.0003853049999999955, 0.0003581390000000004, 0.00035959700000000316]</msg>
<status status="PASS" starttime="20201030 15:56:00.143" endtime="20201030 15:56:00.145"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.138" endtime="20201030 15:56:00.145"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:00.149" endtime="20201030 15:56:00.168"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.147" endtime="20201030 15:56:00.169"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.146" endtime="20201030 15:56:00.169"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.772" endtime="20201030 15:56:00.170"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.771" endtime="20201030 15:56:00.170"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:00.179" endtime="20201030 15:56:00.218"></status>
</kw>
<msg timestamp="20201030 15:56:00.218" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:00.177" endtime="20201030 15:56:00.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:00.221" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:00.219" endtime="20201030 15:56:00.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:00.222" endtime="20201030 15:56:00.224"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.174" endtime="20201030 15:56:00.225"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.172" endtime="20201030 15:56:00.225"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:00.233" endtime="20201030 15:56:00.520"></status>
</kw>
<msg timestamp="20201030 15:56:00.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024846875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025220833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:00.232" endtime="20201030 15:56:00.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:00.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024846875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025220833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:00.525" endtime="20201030 15:56:00.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:00.533" endtime="20201030 15:56:00.534"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.229" endtime="20201030 15:56:00.535"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.226" endtime="20201030 15:56:00.535"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:00.539" level="INFO">${RESULT} = [{'diff': 0.0003739580000000006}, {'diff': 0.0003609719999999976}, {'diff': 0.0003597219999999998}, {'diff': 0.0003595000000000022}, {'diff': 0.0003584449999999989}, {'diff': 0.00036058399999999713}, ...</msg>
<status status="PASS" starttime="20201030 15:56:00.536" endtime="20201030 15:56:00.539"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:00.543" level="INFO">${ACCURACY} = {'diff': [0.0003739580000000006, 0.0003609719999999976, 0.0003597219999999998, 0.0003595000000000022, 0.0003584449999999989, 0.00036058399999999713, 0.00035673699999999933, 0.0003593329999999999, 0.00...</msg>
<status status="PASS" starttime="20201030 15:56:00.540" endtime="20201030 15:56:00.543"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:00.548" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201030 15:56:00.547" endtime="20201030 15:56:00.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:00.550" level="INFO">VALUE: [0.0003739580000000006, 0.0003609719999999976, 0.0003597219999999998, 0.0003595000000000022, 0.0003584449999999989, 0.00036058399999999713, 0.00035673699999999933, 0.0003593329999999999, 0.0003608610000000005, 0.00035787500000000055, 0.0003571799999999986, 0.00038548600000000086, 0.000386319999999999, 0.00035962499999999883, 0.0003564440000000009, 0.00035861099999999826, 0.00038617999999999986, 0.0003609719999999976, 0.00038629200000000335, 0.0003599030000000017, 0.00035629199999999417, 0.00038484700000000066, 0.0003593190000000038, 0.00035912499999999486, 0.0003573050000000022, 0.000360054999999998, 0.0003587920000000036, 0.00035644400000000437, 0.0003575700000000015, 0.00038512500000000005, 0.0003589999999999982, 0.00035797199999999807, 0.0003575269999999964, 0.0003863200000000025, 0.0003860980000000014, 0.0003574860000000041, 0.0003585549999999965, 0.0003562080000000037, 0.0003573889999999996, 0.0003862360000000051, 0.0003856949999999984, 0.0003849299999999986, 0.00038617999999999986, 0.00036119500000000165, 0.0003606940000000017, 0.00035648700000000255, 0.0003597089999999997, 0.00035870900000000566, 0.00035961100000000273, 0.0003610559999999985]</msg>
<status status="PASS" starttime="20201030 15:56:00.549" endtime="20201030 15:56:00.551"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.544" endtime="20201030 15:56:00.551"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:00.555" endtime="20201030 15:56:00.575"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.554" endtime="20201030 15:56:00.575"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.552" endtime="20201030 15:56:00.575"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.171" endtime="20201030 15:56:00.576"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.170" endtime="20201030 15:56:00.576"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:00.585" endtime="20201030 15:56:00.624"></status>
</kw>
<msg timestamp="20201030 15:56:00.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:00.583" endtime="20201030 15:56:00.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:00.627" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:00.626" endtime="20201030 15:56:00.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:00.628" endtime="20201030 15:56:00.630"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.580" endtime="20201030 15:56:00.630"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.578" endtime="20201030 15:56:00.631"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:00.637" endtime="20201030 15:56:00.923"></status>
</kw>
<msg timestamp="20201030 15:56:00.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025569208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025941528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:00.636" endtime="20201030 15:56:00.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:00.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025569208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025941528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:00.927" endtime="20201030 15:56:00.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:00.935" endtime="20201030 15:56:00.937"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.633" endtime="20201030 15:56:00.937"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.631" endtime="20201030 15:56:00.938"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:00.942" level="INFO">${RESULT} = [{'diff': 0.0003723199999999989}, {'diff': 0.000359360999999999}, {'diff': 0.0003610550000000025}, {'diff': 0.0003580419999999994}, {'diff': 0.00035976399999999853}, {'diff': 0.0003600689999999976}, {...</msg>
<status status="PASS" starttime="20201030 15:56:00.939" endtime="20201030 15:56:00.942"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:00.946" level="INFO">${ACCURACY} = {'diff': [0.0003723199999999989, 0.000359360999999999, 0.0003610550000000025, 0.0003580419999999994, 0.00035976399999999853, 0.0003600689999999976, 0.00036070800000000125, 0.00038622200000000204, 0.00...</msg>
<status status="PASS" starttime="20201030 15:56:00.943" endtime="20201030 15:56:00.946"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:00.950" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201030 15:56:00.949" endtime="20201030 15:56:00.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:00.953" level="INFO">VALUE: [0.0003723199999999989, 0.000359360999999999, 0.0003610550000000025, 0.0003580419999999994, 0.00035976399999999853, 0.0003600689999999976, 0.00036070800000000125, 0.00038622200000000204, 0.000357167000000002, 0.0003573470000000009, 0.0003578189999999988, 0.0003609299999999989, 0.0003850139999999995, 0.00036088899999999965, 0.0003578890000000001, 0.0003578470000000014, 0.00036097200000000107, 0.00035665299999999844, 0.00038516699999999876, 0.00036074999999999996, 0.0003592219999999993, 0.0003564999999999957, 0.0003601250000000028, 0.00036091700000000226, 0.0003857770000000038, 0.00038556900000000227, 0.00035954200000000436, 0.00036004200000000486, 0.0003578340000000013, 0.00038484800000000013, 0.0003571249999999998, 0.000385722000000005, 0.0003861110000000015, 0.00035929100000000463, 0.00035891700000000026, 0.00036074999999999996, 0.00038580500000000295, 0.00035626400000000197, 0.0003585280000000038, 0.0003590410000000044, 0.000359861000000003, 0.00035947199999999957, 0.0003571389999999994, 0.00035750000000000365, 0.0003590280000000043, 0.00035648599999999614, 0.000357958999999998, 0.00038584700000000166, 0.00035737500000000005, 0.00035700000000000315]</msg>
<status status="PASS" starttime="20201030 15:56:00.951" endtime="20201030 15:56:00.954"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.947" endtime="20201030 15:56:00.955"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:00.958" endtime="20201030 15:56:00.978"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.957" endtime="20201030 15:56:00.979"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.956" endtime="20201030 15:56:00.979"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.577" endtime="20201030 15:56:00.979"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.576" endtime="20201030 15:56:00.979"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:00.988" endtime="20201030 15:56:01.026"></status>
</kw>
<msg timestamp="20201030 15:56:01.026" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:00.987" endtime="20201030 15:56:01.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:01.029" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:01.027" endtime="20201030 15:56:01.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:01.030" endtime="20201030 15:56:01.032"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.984" endtime="20201030 15:56:01.032"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.982" endtime="20201030 15:56:01.033"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:01.039" endtime="20201030 15:56:01.326"></status>
</kw>
<msg timestamp="20201030 15:56:01.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024132472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024510153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:01.038" endtime="20201030 15:56:01.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:01.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024132472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024510153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:01.330" endtime="20201030 15:56:01.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:01.338" endtime="20201030 15:56:01.339"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.035" endtime="20201030 15:56:01.340"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.033" endtime="20201030 15:56:01.340"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:01.344" level="INFO">${RESULT} = [{'diff': 0.00037768100000000124}, {'diff': 0.00035998599999999964}, {'diff': 0.00038620899999999847}, {'diff': 0.000356763999999999}, {'diff': 0.0003576939999999987}, {'diff': 0.0003855000000000004},...</msg>
<status status="PASS" starttime="20201030 15:56:01.341" endtime="20201030 15:56:01.345"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:01.352" level="INFO">${ACCURACY} = {'diff': [0.00037768100000000124, 0.00035998599999999964, 0.00038620899999999847, 0.000356763999999999, 0.0003576939999999987, 0.0003855000000000004, 0.000359360999999999, 0.0003561249999999988, 0.000...</msg>
<status status="PASS" starttime="20201030 15:56:01.345" endtime="20201030 15:56:01.352"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:01.356" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201030 15:56:01.355" endtime="20201030 15:56:01.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:01.359" level="INFO">VALUE: [0.00037768100000000124, 0.00035998599999999964, 0.00038620899999999847, 0.000356763999999999, 0.0003576939999999987, 0.0003855000000000004, 0.000359360999999999, 0.0003561249999999988, 0.00035673599999999986, 0.0003559859999999991, 0.0003588609999999985, 0.0003862780000000003, 0.00035895900000000244, 0.00035730499999999873, 0.00035827800000000007, 0.00038570800000000197, 0.00035669400000000115, 0.00035931899999999684, 0.0003610139999999998, 0.0003581529999999965, 0.0003578890000000001, 0.0003607220000000008, 0.0003852640000000032, 0.00035906999999999606, 0.0003607220000000008, 0.00038508300000000134, 0.00035841699999999976, 0.0003857639999999968, 0.0003580129999999973, 0.0003587219999999988, 0.0003607779999999991, 0.00035670799999999725, 0.000357346999999994, 0.00035607, 0.0003861939999999994, 0.0003599999999999992, 0.00035604200000000086, 0.0003565280000000018, 0.0003858060000000024, 0.0003859169999999995, 0.0003604030000000022, 0.0003593890000000016, 0.00036059800000000364, 0.00038579200000000285, 0.0003586809999999996, 0.0003582920000000031, 0.00038566699999999926, 0.00036094400000000193, 0.0003586800000000001, 0.0003598050000000047]</msg>
<status status="PASS" starttime="20201030 15:56:01.357" endtime="20201030 15:56:01.359"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.353" endtime="20201030 15:56:01.360"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:01.364" endtime="20201030 15:56:01.383"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.362" endtime="20201030 15:56:01.384"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.361" endtime="20201030 15:56:01.384"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.980" endtime="20201030 15:56:01.384"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.980" endtime="20201030 15:56:01.385"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:01.393" endtime="20201030 15:56:01.432"></status>
</kw>
<msg timestamp="20201030 15:56:01.433" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:01.392" endtime="20201030 15:56:01.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:01.435" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:01.434" endtime="20201030 15:56:01.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:01.436" endtime="20201030 15:56:01.438"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.389" endtime="20201030 15:56:01.438"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.387" endtime="20201030 15:56:01.439"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:01.445" endtime="20201030 15:56:01.777"></status>
</kw>
<msg timestamp="20201030 15:56:01.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020825736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021199875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:01.444" endtime="20201030 15:56:01.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:01.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020825736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021199875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:01.781" endtime="20201030 15:56:01.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:01.789" endtime="20201030 15:56:01.791"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.441" endtime="20201030 15:56:01.792"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.439" endtime="20201030 15:56:01.792"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:01.796" level="INFO">${RESULT} = [{'diff': 0.00037413899999999903}, {'diff': 0.0003853750000000003}, {'diff': 0.0003603749999999996}, {'diff': 0.0003861940000000029}, {'diff': 0.00035615299999999794}, {'diff': 0.0003587080000000027},...</msg>
<status status="PASS" starttime="20201030 15:56:01.793" endtime="20201030 15:56:01.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:01.800" level="INFO">${ACCURACY} = {'diff': [0.00037413899999999903, 0.0003853750000000003, 0.0003603749999999996, 0.0003861940000000029, 0.00035615299999999794, 0.0003587080000000027, 0.0003848060000000014, 0.0003583610000000015, 0.00...</msg>
<status status="PASS" starttime="20201030 15:56:01.797" endtime="20201030 15:56:01.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:01.804" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201030 15:56:01.803" endtime="20201030 15:56:01.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:01.807" level="INFO">VALUE: [0.00037413899999999903, 0.0003853750000000003, 0.0003603749999999996, 0.0003861940000000029, 0.00035615299999999794, 0.0003587080000000027, 0.0003848060000000014, 0.0003583610000000015, 0.00035624999999999893, 0.0003853750000000003, 0.00035961099999999926, 0.00038567999999999936, 0.00035866600000000054, 0.00036074999999999996, 0.0003847499999999997, 0.00035827800000000007, 0.0003579020000000002, 0.0003588479999999984, 0.0003849720000000008, 0.0003563889999999986, 0.000360361, 0.000359458, 0.00035792999999999936, 0.0003857639999999968, 0.0003565279999999983, 0.0003861249999999976, 0.0003849720000000008, 0.0003571389999999994, 0.0003566249999999993, 0.0003851110000000005, 0.00035652799999999485, 0.00036074999999999996, 0.00035855500000000345, 0.00035858399999999513, 0.00035704200000000186, 0.000360555999999998, 0.00038567999999999936, 0.0003851110000000005, 0.0003589590000000059, 0.00038561200000000045, 0.0003606390000000029, 0.00035805600000000243, 0.0003852640000000032, 0.00035755500000000245, 0.00035826400000000397, 0.00035637499999999905, 0.00035798599999999764, 0.00035759700000000116, 0.00035724999999999646, 0.0003591670000000005]</msg>
<status status="PASS" starttime="20201030 15:56:01.805" endtime="20201030 15:56:01.808"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.801" endtime="20201030 15:56:01.808"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:01.812" endtime="20201030 15:56:01.832"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.810" endtime="20201030 15:56:01.833"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.809" endtime="20201030 15:56:01.833"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.385" endtime="20201030 15:56:01.833"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.385" endtime="20201030 15:56:01.833"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:01.842" endtime="20201030 15:56:01.879"></status>
</kw>
<msg timestamp="20201030 15:56:01.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:01.840" endtime="20201030 15:56:01.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:01.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:01.881" endtime="20201030 15:56:01.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:01.883" endtime="20201030 15:56:01.885"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.838" endtime="20201030 15:56:01.885"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.836" endtime="20201030 15:56:01.886"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:01.892" endtime="20201030 15:56:02.179"></status>
</kw>
<msg timestamp="20201030 15:56:02.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024284847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024652194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:01.891" endtime="20201030 15:56:02.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:02.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024284847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024652194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:02.183" endtime="20201030 15:56:02.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:02.191" endtime="20201030 15:56:02.192"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.888" endtime="20201030 15:56:02.193"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.886" endtime="20201030 15:56:02.193"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:02.197" level="INFO">${RESULT} = [{'diff': 0.0003673470000000005}, {'diff': 0.0003593470000000029}, {'diff': 0.00035933399999999935}, {'diff': 0.00035961099999999926}, {'diff': 0.00035952799999999785}, {'diff': 0.00035974999999999896...</msg>
<status status="PASS" starttime="20201030 15:56:02.194" endtime="20201030 15:56:02.197"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:02.202" level="INFO">${ACCURACY} = {'diff': [0.0003673470000000005, 0.0003593470000000029, 0.00035933399999999935, 0.00035961099999999926, 0.00035952799999999785, 0.00035974999999999896, 0.0003563060000000007, 0.00035998599999999964, 0...</msg>
<status status="PASS" starttime="20201030 15:56:02.198" endtime="20201030 15:56:02.202"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:02.206" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201030 15:56:02.205" endtime="20201030 15:56:02.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:02.209" level="INFO">VALUE: [0.0003673470000000005, 0.0003593470000000029, 0.00035933399999999935, 0.00035961099999999926, 0.00035952799999999785, 0.00035974999999999896, 0.0003563060000000007, 0.00035998599999999964, 0.0003587219999999988, 0.0003604160000000023, 0.00035622200000000326, 0.0003860689999999993, 0.000385514, 0.0003573329999999979, 0.0003597219999999998, 0.0003856939999999989, 0.0003854719999999978, 0.00035747199999999757, 0.0003572500000000034, 0.00038562500000000055, 0.0003585830000000026, 0.0003586809999999996, 0.0003610269999999999, 0.0003860829999999954, 0.0003853060000000019, 0.0003587779999999971, 0.0003594030000000012, 0.00038536100000000073, 0.0003593339999999959, 0.000360458000000001, 0.0003559029999999977, 0.0003560280000000013, 0.00038486100000000023, 0.00036006999999999706, 0.0003606800000000021, 0.0003588480000000019, 0.00035655500000000145, 0.0003578890000000001, 0.0003573340000000008, 0.00035774999999999696, 0.0003563889999999986, 0.0003561389999999984, 0.0003847780000000023, 0.0003583050000000032, 0.0003575139999999963, 0.0003570139999999958, 0.00035744500000000484, 0.00036080499999999877, 0.0003601810000000011, 0.0003571669999999985]</msg>
<status status="PASS" starttime="20201030 15:56:02.207" endtime="20201030 15:56:02.210"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.203" endtime="20201030 15:56:02.210"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:02.214" endtime="20201030 15:56:02.233"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.212" endtime="20201030 15:56:02.234"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.211" endtime="20201030 15:56:02.234"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.834" endtime="20201030 15:56:02.234"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.834" endtime="20201030 15:56:02.235"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:02.243" endtime="20201030 15:56:02.282"></status>
</kw>
<msg timestamp="20201030 15:56:02.283" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:02.242" endtime="20201030 15:56:02.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:02.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:02.284" endtime="20201030 15:56:02.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:02.286" endtime="20201030 15:56:02.288"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.239" endtime="20201030 15:56:02.288"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.237" endtime="20201030 15:56:02.289"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:02.295" endtime="20201030 15:56:02.582"></status>
</kw>
<msg timestamp="20201030 15:56:02.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024800903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025166222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:02.294" endtime="20201030 15:56:02.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:02.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024800903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025166222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:02.587" endtime="20201030 15:56:02.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:02.595" endtime="20201030 15:56:02.596"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.291" endtime="20201030 15:56:02.597"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.290" endtime="20201030 15:56:02.597"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:02.601" level="INFO">${RESULT} = [{'diff': 0.00036531899999999937}, {'diff': 0.00036094399999999846}, {'diff': 0.0003574870000000001}, {'diff': 0.00035745900000000094}, {'diff': 0.0003590969999999992}, {'diff': 0.00035665299999999844...</msg>
<status status="PASS" starttime="20201030 15:56:02.598" endtime="20201030 15:56:02.601"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:02.605" level="INFO">${ACCURACY} = {'diff': [0.00036531899999999937, 0.00036094399999999846, 0.0003574870000000001, 0.00035745900000000094, 0.0003590969999999992, 0.00035665299999999844, 0.0003861390000000006, 0.0003597769999999986, 0....</msg>
<status status="PASS" starttime="20201030 15:56:02.602" endtime="20201030 15:56:02.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:02.610" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201030 15:56:02.608" endtime="20201030 15:56:02.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:02.612" level="INFO">VALUE: [0.00036531899999999937, 0.00036094399999999846, 0.0003574870000000001, 0.00035745900000000094, 0.0003590969999999992, 0.00035665299999999844, 0.0003861390000000006, 0.0003597769999999986, 0.0003561950000000001, 0.00035943100000000033, 0.0003599869999999991, 0.00036029199999999817, 0.00035732000000000125, 0.00035729199999999864, 0.0003596940000000007, 0.0003564999999999992, 0.00035834699999999844, 0.00035798599999999764, 0.0003577359999999974, 0.0003601109999999963, 0.0003852220000000045, 0.00036047200000000057, 0.00038594499999999865, 0.0003566249999999993, 0.0003570410000000024, 0.0003856520000000002, 0.00035995799999999356, 0.00035847199999999857, 0.00038575000000000415, 0.0003576389999999999, 0.0003861249999999941, 0.0003611250000000038, 0.00035974999999999896, 0.00036097200000000107, 0.0003861660000000003, 0.0003583329999999954, 0.00035731899999999484, 0.0003587359999999984, 0.00036063799999999646, 0.00038618099999999933, 0.00035726399999999603, 0.0003563610000000064, 0.0003580559999999955, 0.0003593340000000028, 0.0003586250000000013, 0.0003574019999999997, 0.00035826399999999703, 0.0003610139999999998, 0.00035986099999999605, 0.0003570269999999959]</msg>
<status status="PASS" starttime="20201030 15:56:02.611" endtime="20201030 15:56:02.613"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.606" endtime="20201030 15:56:02.613"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:02.617" endtime="20201030 15:56:02.636"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.615" endtime="20201030 15:56:02.637"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.614" endtime="20201030 15:56:02.637"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.236" endtime="20201030 15:56:02.638"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.235" endtime="20201030 15:56:02.638"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:02.646" endtime="20201030 15:56:02.684"></status>
</kw>
<msg timestamp="20201030 15:56:02.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:02.645" endtime="20201030 15:56:02.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:02.687" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:02.686" endtime="20201030 15:56:02.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:02.688" endtime="20201030 15:56:02.690"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.642" endtime="20201030 15:56:02.691"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.640" endtime="20201030 15:56:02.691"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:02.697" endtime="20201030 15:56:02.984"></status>
</kw>
<msg timestamp="20201030 15:56:02.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023592736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023949764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:02.696" endtime="20201030 15:56:02.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:02.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023592736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023949764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:02.988" endtime="20201030 15:56:02.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:02.996" endtime="20201030 15:56:02.998"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.693" endtime="20201030 15:56:02.998"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.692" endtime="20201030 15:56:02.999"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:03.003" level="INFO">${RESULT} = [{'diff': 0.0003570279999999988}, {'diff': 0.00038584700000000166}, {'diff': 0.0003574860000000006}, {'diff': 0.00035745800000000147}, {'diff': 0.0003569999999999997}, {'diff': 0.0003608329999999979},...</msg>
<status status="PASS" starttime="20201030 15:56:03.000" endtime="20201030 15:56:03.003"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:03.007" level="INFO">${ACCURACY} = {'diff': [0.0003570279999999988, 0.00038584700000000166, 0.0003574860000000006, 0.00035745800000000147, 0.0003569999999999997, 0.0003608329999999979, 0.00035834699999999844, 0.00038644499999999915, 0....</msg>
<status status="PASS" starttime="20201030 15:56:03.004" endtime="20201030 15:56:03.007"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:03.011" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201030 15:56:03.010" endtime="20201030 15:56:03.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:03.015" level="INFO">VALUE: [0.0003570279999999988, 0.00038584700000000166, 0.0003574860000000006, 0.00035745800000000147, 0.0003569999999999997, 0.0003608329999999979, 0.00035834699999999844, 0.00038644499999999915, 0.0003572370000000033, 0.0003585830000000026, 0.00038609699999999844, 0.0003602779999999986, 0.000385416999999999, 0.00036062499999999983, 0.00035944400000000043, 0.0003592089999999992, 0.000386417, 0.0003594299999999974, 0.00035815200000000047, 0.0003584730000000015, 0.0003600550000000015, 0.00035669499999999715, 0.00035761100000000073, 0.0003857499999999972, 0.00035837500000000105, 0.00035711100000000023, 0.00035644500000000384, 0.0003594030000000012, 0.0003864439999999997, 0.0003854860000000043, 0.0003610419999999989, 0.0003853330000000016, 0.00035815299999999994, 0.00038525000000000365, 0.0003601949999999937, 0.0003604030000000022, 0.0003601810000000011, 0.00038526300000000374, 0.000360667000000002, 0.00035633300000000034, 0.0003590689999999966, 0.0003854719999999978, 0.0003854860000000043, 0.00035879199999999667, 0.00035758299999999466, 0.0003603890000000026, 0.0003594999999999987, 0.0003592219999999993, 0.00035993000000000136, 0.00035598599999999564]</msg>
<status status="PASS" starttime="20201030 15:56:03.012" endtime="20201030 15:56:03.015"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.008" endtime="20201030 15:56:03.016"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:03.020" endtime="20201030 15:56:03.039"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.018" endtime="20201030 15:56:03.040"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.017" endtime="20201030 15:56:03.040"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.639" endtime="20201030 15:56:03.040"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.638" endtime="20201030 15:56:03.040"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:03.049" endtime="20201030 15:56:03.085"></status>
</kw>
<msg timestamp="20201030 15:56:03.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:03.048" endtime="20201030 15:56:03.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:03.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:03.087" endtime="20201030 15:56:03.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:03.089" endtime="20201030 15:56:03.091"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.045" endtime="20201030 15:56:03.091"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.043" endtime="20201030 15:56:03.092"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:03.098" endtime="20201030 15:56:03.385"></status>
</kw>
<msg timestamp="20201030 15:56:03.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022895931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023275528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:03.097" endtime="20201030 15:56:03.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:03.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022895931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023275528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:03.389" endtime="20201030 15:56:03.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:03.397" endtime="20201030 15:56:03.399"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.094" endtime="20201030 15:56:03.399"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.093" endtime="20201030 15:56:03.400"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:03.404" level="INFO">${RESULT} = [{'diff': 0.0003795969999999989}, {'diff': 0.0003852919999999989}, {'diff': 0.0003600000000000027}, {'diff': 0.0003595969999999997}, {'diff': 0.00035934699999999944}, {'diff': 0.00035755599999999846},...</msg>
<status status="PASS" starttime="20201030 15:56:03.401" endtime="20201030 15:56:03.404"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:03.409" level="INFO">${ACCURACY} = {'diff': [0.0003795969999999989, 0.0003852919999999989, 0.0003600000000000027, 0.0003595969999999997, 0.00035934699999999944, 0.00035755599999999846, 0.00036052799999999885, 0.000357958999999998, 0.00...</msg>
<status status="PASS" starttime="20201030 15:56:03.405" endtime="20201030 15:56:03.409"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:03.413" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201030 15:56:03.412" endtime="20201030 15:56:03.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:03.416" level="INFO">VALUE: [0.0003795969999999989, 0.0003852919999999989, 0.0003600000000000027, 0.0003595969999999997, 0.00035934699999999944, 0.00035755599999999846, 0.00036052799999999885, 0.000357958999999998, 0.00035723600000000036, 0.00036070800000000125, 0.0003602779999999986, 0.00035929200000000064, 0.00035979200000000114, 0.00036031899999999784, 0.0003595139999999983, 0.00035642999999999786, 0.00035723600000000036, 0.0003575279999999993, 0.00035897199999999907, 0.0003601389999999989, 0.00038570800000000197, 0.0003852910000000029, 0.00035677799999999857, 0.0003575280000000028, 0.000360555999999998, 0.0003601390000000024, 0.00035805500000000295, 0.0003567370000000028, 0.00038608300000000234, 0.00036063899999999594, 0.00035884799999999495, 0.0003594299999999939, 0.000356666999999998, 0.0003580689999999956, 0.0003860000000000044, 0.00035776400000000347, 0.00035720799999999775, 0.0003602359999999999, 0.000356473000000003, 0.0003860970000000019, 0.0003604450000000009, 0.0003595689999999971, 0.00035615299999999794, 0.0003605140000000062, 0.000384820000000001, 0.000385319000000002, 0.0003859580000000057, 0.00035976400000000547, 0.0003607779999999991, 0.00038577799999999635]</msg>
<status status="PASS" starttime="20201030 15:56:03.414" endtime="20201030 15:56:03.416"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.409" endtime="20201030 15:56:03.417"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:03.421" endtime="20201030 15:56:03.440"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.419" endtime="20201030 15:56:03.441"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.418" endtime="20201030 15:56:03.441"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.041" endtime="20201030 15:56:03.441"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.041" endtime="20201030 15:56:03.442"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:03.450" endtime="20201030 15:56:03.487"></status>
</kw>
<msg timestamp="20201030 15:56:03.487" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:03.449" endtime="20201030 15:56:03.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:03.490" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:03.488" endtime="20201030 15:56:03.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:03.491" endtime="20201030 15:56:03.493"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.446" endtime="20201030 15:56:03.493"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.444" endtime="20201030 15:56:03.494"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:03.500" endtime="20201030 15:56:03.787"></status>
</kw>
<msg timestamp="20201030 15:56:03.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023721153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024106167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:03.499" endtime="20201030 15:56:03.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:03.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023721153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024106167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:03.791" endtime="20201030 15:56:03.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:03.799" endtime="20201030 15:56:03.801"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.496" endtime="20201030 15:56:03.802"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.494" endtime="20201030 15:56:03.802"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:03.806" level="INFO">${RESULT} = [{'diff': 0.00038501400000000296}, {'diff': 0.00038543100000000205}, {'diff': 0.00035683300000000084}, {'diff': 0.00035779199999999914}, {'diff': 0.00035733399999999735}, {'diff': 0.000359290999999997...</msg>
<status status="PASS" starttime="20201030 15:56:03.803" endtime="20201030 15:56:03.806"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:03.810" level="INFO">${ACCURACY} = {'diff': [0.00038501400000000296, 0.00038543100000000205, 0.00035683300000000084, 0.00035779199999999914, 0.00035733399999999735, 0.0003592909999999977, 0.0003848329999999976, 0.0003603330000000009, 0...</msg>
<status status="PASS" starttime="20201030 15:56:03.807" endtime="20201030 15:56:03.810"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:03.815" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201030 15:56:03.813" endtime="20201030 15:56:03.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:03.817" level="INFO">VALUE: [0.00038501400000000296, 0.00038543100000000205, 0.00035683300000000084, 0.00035779199999999914, 0.00035733399999999735, 0.0003592909999999977, 0.0003848329999999976, 0.0003603330000000009, 0.0003577080000000017, 0.00035842999999999986, 0.00035837500000000105, 0.00035755600000000193, 0.0003855699999999983, 0.00036026399999999903, 0.000360361, 0.0003610000000000002, 0.00035866600000000054, 0.0003577089999999977, 0.00036004099999999845, 0.00035724999999999993, 0.0003591529999999975, 0.0003576389999999999, 0.0003596250000000023, 0.00035773699999999686, 0.00035908399999999563, 0.00035609699999999966, 0.0003858469999999947, 0.0003580139999999968, 0.0003564170000000047, 0.0003597779999999981, 0.0003859439999999992, 0.00038531999999999456, 0.0003602229999999998, 0.0003849860000000038, 0.00038622299999999804, 0.0003849580000000047, 0.0003851110000000005, 0.0003590830000000031, 0.00035769499999999815, 0.0003848879999999999, 0.0003592359999999989, 0.00038480500000000195, 0.0003588469999999955, 0.0003606250000000033, 0.0003571950000000046, 0.00035858400000000207, 0.0003609450000000014, 0.00035998599999999964, 0.00038502800000000253, 0.00035820799999999875]</msg>
<status status="PASS" starttime="20201030 15:56:03.816" endtime="20201030 15:56:03.818"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.811" endtime="20201030 15:56:03.818"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:03.822" endtime="20201030 15:56:03.842"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.820" endtime="20201030 15:56:03.842"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.819" endtime="20201030 15:56:03.843"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.442" endtime="20201030 15:56:03.843"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.442" endtime="20201030 15:56:03.843"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:03.852" endtime="20201030 15:56:03.890"></status>
</kw>
<msg timestamp="20201030 15:56:03.890" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:03.850" endtime="20201030 15:56:03.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:03.893" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:03.891" endtime="20201030 15:56:03.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:03.894" endtime="20201030 15:56:03.896"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.848" endtime="20201030 15:56:03.896"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.845" endtime="20201030 15:56:03.897"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:03.903" endtime="20201030 15:56:04.189"></status>
</kw>
<msg timestamp="20201030 15:56:04.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024192125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024553861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:03.902" endtime="20201030 15:56:04.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:04.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024192125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024553861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:04.193" endtime="20201030 15:56:04.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:04.201" endtime="20201030 15:56:04.203"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.899" endtime="20201030 15:56:04.204"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.897" endtime="20201030 15:56:04.204"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:04.208" level="INFO">${RESULT} = [{'diff': 0.0003617360000000014}, {'diff': 0.00035938899999999815}, {'diff': 0.0003596250000000023}, {'diff': 0.0003856109999999975}, {'diff': 0.00035843099999999933}, {'diff': 0.0003861530000000002},...</msg>
<status status="PASS" starttime="20201030 15:56:04.205" endtime="20201030 15:56:04.208"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:04.212" level="INFO">${ACCURACY} = {'diff': [0.0003617360000000014, 0.00035938899999999815, 0.0003596250000000023, 0.0003856109999999975, 0.00035843099999999933, 0.0003861530000000002, 0.00035987500000000255, 0.00036048600000000014, 0....</msg>
<status status="PASS" starttime="20201030 15:56:04.209" endtime="20201030 15:56:04.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:04.216" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201030 15:56:04.215" endtime="20201030 15:56:04.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:04.220" level="INFO">VALUE: [0.0003617360000000014, 0.00035938899999999815, 0.0003596250000000023, 0.0003856109999999975, 0.00035843099999999933, 0.0003861530000000002, 0.00035987500000000255, 0.00036048600000000014, 0.0003588199999999993, 0.00035611099999999923, 0.0003569449999999974, 0.0003600550000000015, 0.0003610559999999985, 0.00038538899999999987, 0.00035906900000000005, 0.00035659700000000016, 0.00036044499999999743, 0.00035780499999999923, 0.00035655600000000093, 0.000357151999999996, 0.00035691699999999826, 0.0003610269999999999, 0.00035697199999999707, 0.00036090299999999575, 0.00035659799999999964, 0.0003581799999999996, 0.0003602090000000002, 0.0003578890000000001, 0.00036102799999999935, 0.0003601390000000024, 0.0003563190000000008, 0.0003606529999999955, 0.00035643099999999733, 0.0003609299999999954, 0.0003565129999999958, 0.00036067999999999517, 0.0003568470000000004, 0.0003586800000000001, 0.0003576939999999987, 0.00035724999999999646, 0.0003597359999999994, 0.00038633299999999565, 0.0003856949999999984, 0.00035919499999999965, 0.0003573610000000005, 0.0003854870000000038, 0.0003577779999999961, 0.0003606810000000016, 0.0003583749999999941, 0.000357457999999998]</msg>
<status status="PASS" starttime="20201030 15:56:04.217" endtime="20201030 15:56:04.220"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.213" endtime="20201030 15:56:04.221"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:04.225" endtime="20201030 15:56:04.244"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.223" endtime="20201030 15:56:04.245"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.222" endtime="20201030 15:56:04.245"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.844" endtime="20201030 15:56:04.245"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.843" endtime="20201030 15:56:04.246"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:04.254" endtime="20201030 15:56:04.292"></status>
</kw>
<msg timestamp="20201030 15:56:04.292" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:04.253" endtime="20201030 15:56:04.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:04.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:04.293" endtime="20201030 15:56:04.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:04.296" endtime="20201030 15:56:04.297"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.250" endtime="20201030 15:56:04.298"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.248" endtime="20201030 15:56:04.298"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:04.305" endtime="20201030 15:56:04.591"></status>
</kw>
<msg timestamp="20201030 15:56:04.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023494319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023851514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:04.304" endtime="20201030 15:56:04.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:04.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023494319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023851514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:04.595" endtime="20201030 15:56:04.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:04.603" endtime="20201030 15:56:04.605"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.301" endtime="20201030 15:56:04.606"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.299" endtime="20201030 15:56:04.606"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:04.610" level="INFO">${RESULT} = [{'diff': 0.0003571950000000011}, {'diff': 0.0003610000000000002}, {'diff': 0.0003569579999999975}, {'diff': 0.0003607220000000008}, {'diff': 0.0003578890000000001}, {'diff': 0.00035723600000000036}, ...</msg>
<status status="PASS" starttime="20201030 15:56:04.607" endtime="20201030 15:56:04.610"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:04.615" level="INFO">${ACCURACY} = {'diff': [0.0003571950000000011, 0.0003610000000000002, 0.0003569579999999975, 0.0003607220000000008, 0.0003578890000000001, 0.00035723600000000036, 0.0003574029999999992, 0.0003578480000000009, 0.000...</msg>
<status status="PASS" starttime="20201030 15:56:04.611" endtime="20201030 15:56:04.615"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:04.619" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201030 15:56:04.618" endtime="20201030 15:56:04.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:04.622" level="INFO">VALUE: [0.0003571950000000011, 0.0003610000000000002, 0.0003569579999999975, 0.0003607220000000008, 0.0003578890000000001, 0.00035723600000000036, 0.0003574029999999992, 0.0003578480000000009, 0.0003578340000000013, 0.00035830499999999973, 0.00035744500000000137, 0.000358861000000002, 0.0003574310000000018, 0.00038549999999999696, 0.00038517999999999886, 0.0003572220000000008, 0.00038584700000000166, 0.0003585829999999991, 0.00035916600000000104, 0.0003852919999999989, 0.00038541699999999554, 0.000359763000000006, 0.00035815299999999994, 0.0003577500000000039, 0.0003565270000000023, 0.00038568099999999883, 0.0003856939999999989, 0.00035920799999999975, 0.00035716599999999904, 0.000357346999999994, 0.00035816600000000004, 0.0003601810000000011, 0.00038545900000000466, 0.00035948599999999914, 0.0003562500000000024, 0.00036070800000000125, 0.0003587779999999971, 0.00035937500000000205, 0.0003858609999999943, 0.0003568470000000004, 0.0003583050000000032, 0.000356861, 0.00036090299999999575, 0.0003588060000000032, 0.0003602220000000003, 0.0003568889999999991, 0.00035944400000000043, 0.0003591390000000014, 0.000356666999999998, 0.00038572199999999807]</msg>
<status status="PASS" starttime="20201030 15:56:04.620" endtime="20201030 15:56:04.629"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.616" endtime="20201030 15:56:04.629"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:04.633" endtime="20201030 15:56:04.653"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.632" endtime="20201030 15:56:04.653"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.630" endtime="20201030 15:56:04.654"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.246" endtime="20201030 15:56:04.654"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.246" endtime="20201030 15:56:04.654"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:04.663" endtime="20201030 15:56:04.698"></status>
</kw>
<msg timestamp="20201030 15:56:04.699" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:04.661" endtime="20201030 15:56:04.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:04.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:04.700" endtime="20201030 15:56:04.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:04.702" endtime="20201030 15:56:04.704"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.659" endtime="20201030 15:56:04.705"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.657" endtime="20201030 15:56:04.705"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:04.712" endtime="20201030 15:56:04.999"></status>
</kw>
<msg timestamp="20201030 15:56:05.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021907278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022277208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:04.710" endtime="20201030 15:56:05.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021907278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022277208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:05.004" endtime="20201030 15:56:05.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:05.013" endtime="20201030 15:56:05.015"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.707" endtime="20201030 15:56:05.016"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.706" endtime="20201030 15:56:05.016"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:05.021" level="INFO">${RESULT} = [{'diff': 0.00036993000000000095}, {'diff': 0.00035901400000000125}, {'diff': 0.0003578199999999983}, {'diff': 0.0003568479999999999}, {'diff': 0.0003857500000000007}, {'diff': 0.00035812499999999733}...</msg>
<status status="PASS" starttime="20201030 15:56:05.017" endtime="20201030 15:56:05.021"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:05.026" level="INFO">${ACCURACY} = {'diff': [0.00036993000000000095, 0.00035901400000000125, 0.0003578199999999983, 0.0003568479999999999, 0.0003857500000000007, 0.00035812499999999733, 0.0003589999999999982, 0.00035920799999999975, 0....</msg>
<status status="PASS" starttime="20201030 15:56:05.022" endtime="20201030 15:56:05.026"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.030" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201030 15:56:05.029" endtime="20201030 15:56:05.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.033" level="INFO">VALUE: [0.00036993000000000095, 0.00035901400000000125, 0.0003578199999999983, 0.0003568479999999999, 0.0003857500000000007, 0.00035812499999999733, 0.0003589999999999982, 0.00035920799999999975, 0.0003862910000000004, 0.0003573340000000008, 0.00038606900000000277, 0.0003560280000000013, 0.00038616699999999976, 0.0003560690000000005, 0.0003860699999999988, 0.0003595549999999975, 0.00035659700000000016, 0.0003570279999999988, 0.00035893099999999983, 0.00035769499999999815, 0.00035861099999999826, 0.0003587090000000022, 0.000359360999999999, 0.0003857779999999998, 0.00038572199999999807, 0.000358070000000002, 0.0003861110000000015, 0.0003849439999999982, 0.00035820900000000516, 0.0003585140000000042, 0.00035834799999999445, 0.00035759700000000116, 0.00035787500000000055, 0.0003852639999999963, 0.00038536100000000073, 0.00035991700000000126, 0.00035737500000000005, 0.000357666999999999, 0.0003593050000000042, 0.00036065199999999603, 0.0003595139999999983, 0.0003856529999999997, 0.00035645800000000394, 0.0003860420000000031, 0.0003607769999999996, 0.0003858060000000024, 0.0003863330000000026, 0.00035941700000000076, 0.000385611000000001, 0.00038534700000000116]</msg>
<status status="PASS" starttime="20201030 15:56:05.031" endtime="20201030 15:56:05.034"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.027" endtime="20201030 15:56:05.034"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:05.038" endtime="20201030 15:56:05.057"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.036" endtime="20201030 15:56:05.058"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.035" endtime="20201030 15:56:05.058"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.655" endtime="20201030 15:56:05.058"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.654" endtime="20201030 15:56:05.059"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:05.068" endtime="20201030 15:56:05.105"></status>
</kw>
<msg timestamp="20201030 15:56:05.106" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:05.066" endtime="20201030 15:56:05.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.108" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:05.107" endtime="20201030 15:56:05.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:05.109" endtime="20201030 15:56:05.111"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.063" endtime="20201030 15:56:05.111"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.061" endtime="20201030 15:56:05.112"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:05.118" endtime="20201030 15:56:05.404"></status>
</kw>
<msg timestamp="20201030 15:56:05.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024313986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024695417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:05.117" endtime="20201030 15:56:05.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024313986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024695417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:05.409" endtime="20201030 15:56:05.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:05.417" endtime="20201030 15:56:05.418"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.114" endtime="20201030 15:56:05.419"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.112" endtime="20201030 15:56:05.419"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:05.423" level="INFO">${RESULT} = [{'diff': 0.0003814310000000015}, {'diff': 0.0003863329999999991}, {'diff': 0.00035897199999999907}, {'diff': 0.00035777799999999957}, {'diff': 0.0003593190000000003}, {'diff': 0.0003585139999999973},...</msg>
<status status="PASS" starttime="20201030 15:56:05.420" endtime="20201030 15:56:05.423"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:05.427" level="INFO">${ACCURACY} = {'diff': [0.0003814310000000015, 0.0003863329999999991, 0.00035897199999999907, 0.00035777799999999957, 0.0003593190000000003, 0.0003585139999999973, 0.00038522200000000104, 0.00035795900000000144, 0....</msg>
<status status="PASS" starttime="20201030 15:56:05.424" endtime="20201030 15:56:05.427"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.432" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201030 15:56:05.431" endtime="20201030 15:56:05.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.434" level="INFO">VALUE: [0.0003814310000000015, 0.0003863329999999991, 0.00035897199999999907, 0.00035777799999999957, 0.0003593190000000003, 0.0003585139999999973, 0.00038522200000000104, 0.00035795900000000144, 0.00035687499999999955, 0.00035695800000000097, 0.0003856390000000001, 0.00038640200000000097, 0.0003593190000000003, 0.00035773600000000086, 0.0003567220000000003, 0.00035709700000000066, 0.0003855970000000014, 0.00035933399999999935, 0.0003861530000000002, 0.0003580830000000021, 0.00036091599999999585, 0.0003560139999999948, 0.00035794399999999893, 0.0003596810000000006, 0.00035794400000000587, 0.00038573599999999764, 0.00038538899999999987, 0.00038641600000000054, 0.00036008399999999663, 0.00035845800000000594, 0.00036044499999999396, 0.00035827800000000354, 0.0003597219999999998, 0.0003573889999999996, 0.00035965200000000197, 0.0003588889999999942, 0.0003599999999999992, 0.0003607920000000056, 0.0003596250000000023, 0.0003604590000000005, 0.0003569029999999987, 0.00035648599999999614, 0.0003587909999999972, 0.0003589860000000056, 0.00038645900000000566, 0.0003863750000000013, 0.0003599030000000017, 0.0003590830000000031, 0.0003598190000000043, 0.0003576939999999987]</msg>
<status status="PASS" starttime="20201030 15:56:05.433" endtime="20201030 15:56:05.436"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.428" endtime="20201030 15:56:05.436"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:05.440" endtime="20201030 15:56:05.459"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.438" endtime="20201030 15:56:05.460"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.437" endtime="20201030 15:56:05.460"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.060" endtime="20201030 15:56:05.461"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.059" endtime="20201030 15:56:05.461"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:05.469" endtime="20201030 15:56:05.506"></status>
</kw>
<msg timestamp="20201030 15:56:05.507" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:05.468" endtime="20201030 15:56:05.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.509" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:05.508" endtime="20201030 15:56:05.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:05.511" endtime="20201030 15:56:05.512"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.465" endtime="20201030 15:56:05.513"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.463" endtime="20201030 15:56:05.513"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:05.520" endtime="20201030 15:56:05.806"></status>
</kw>
<msg timestamp="20201030 15:56:05.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024069458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024430542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:05.518" endtime="20201030 15:56:05.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024069458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024430542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:05.810" endtime="20201030 15:56:05.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:05.819" endtime="20201030 15:56:05.820"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.515" endtime="20201030 15:56:05.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.514" endtime="20201030 15:56:05.821"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:05.825" level="INFO">${RESULT} = [{'diff': 0.0003610840000000011}, {'diff': 0.00035659799999999964}, {'diff': 0.00035875000000000143}, {'diff': 0.0003607359999999969}, {'diff': 0.00036088899999999965}, {'diff': 0.0003600970000000002}...</msg>
<status status="PASS" starttime="20201030 15:56:05.822" endtime="20201030 15:56:05.825"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:05.830" level="INFO">${ACCURACY} = {'diff': [0.0003610840000000011, 0.00035659799999999964, 0.00035875000000000143, 0.0003607359999999969, 0.00036088899999999965, 0.0003600970000000002, 0.00035841699999999976, 0.0003863750000000013, 0....</msg>
<status status="PASS" starttime="20201030 15:56:05.826" endtime="20201030 15:56:05.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.835" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201030 15:56:05.833" endtime="20201030 15:56:05.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.837" level="INFO">VALUE: [0.0003610840000000011, 0.00035659799999999964, 0.00035875000000000143, 0.0003607359999999969, 0.00036088899999999965, 0.0003600970000000002, 0.00035841699999999976, 0.0003863750000000013, 0.0003568329999999974, 0.00035661099999999973, 0.0003573470000000009, 0.0003591670000000005, 0.0003587229999999983, 0.00038544499999999815, 0.0003575829999999981, 0.0003852919999999989, 0.0003570280000000023, 0.0003595280000000013, 0.00035894399999999993, 0.000358861000000002, 0.00038623700000000455, 0.0003593610000000025, 0.0003570690000000015, 0.00035594500000000334, 0.00035779100000000313, 0.00035679100000000213, 0.00035676400000000247, 0.00035792999999999936, 0.0003854860000000043, 0.00035672200000000376, 0.00035766599999999954, 0.00035991700000000126, 0.0003601800000000016, 0.00035607, 0.000386207999999999, 0.0003577359999999974, 0.0003590139999999978, 0.0003565830000000006, 0.00036041700000000176, 0.00035754200000000236, 0.0003579730000000045, 0.00038516699999999876, 0.0003584999999999977, 0.0003608890000000031, 0.00035880599999999624, 0.00035924999999999846, 0.00038504100000000263, 0.00038570899999999797, 0.00036090299999999575, 0.000357346999999994]</msg>
<status status="PASS" starttime="20201030 15:56:05.836" endtime="20201030 15:56:05.838"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.831" endtime="20201030 15:56:05.838"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:05.842" endtime="20201030 15:56:05.862"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.840" endtime="20201030 15:56:05.862"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.839" endtime="20201030 15:56:05.862"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.462" endtime="20201030 15:56:05.863"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.461" endtime="20201030 15:56:05.863"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:05.872" endtime="20201030 15:56:05.914"></status>
</kw>
<msg timestamp="20201030 15:56:05.915" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:05.870" endtime="20201030 15:56:05.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.917" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:05.916" endtime="20201030 15:56:05.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:05.918" endtime="20201030 15:56:05.920"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.867" endtime="20201030 15:56:05.920"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.865" endtime="20201030 15:56:05.921"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:05.928" endtime="20201030 15:56:06.216"></status>
</kw>
<msg timestamp="20201030 15:56:06.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023950486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024328264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:05.926" endtime="20201030 15:56:06.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:06.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023950486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024328264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:06.220" endtime="20201030 15:56:06.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:06.228" endtime="20201030 15:56:06.229"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.923" endtime="20201030 15:56:06.230"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.922" endtime="20201030 15:56:06.230"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:06.235" level="INFO">${RESULT} = [{'diff': 0.00037777799999999875}, {'diff': 0.0003850970000000009}, {'diff': 0.00035733300000000134}, {'diff': 0.0003599869999999991}, {'diff': 0.0003563609999999995}, {'diff': 0.0003597779999999981},...</msg>
<status status="PASS" starttime="20201030 15:56:06.231" endtime="20201030 15:56:06.235"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:06.239" level="INFO">${ACCURACY} = {'diff': [0.00037777799999999875, 0.0003850970000000009, 0.00035733300000000134, 0.0003599869999999991, 0.0003563609999999995, 0.0003597779999999981, 0.00035624999999999893, 0.0003593890000000016, 0.0...</msg>
<status status="PASS" starttime="20201030 15:56:06.236" endtime="20201030 15:56:06.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:06.244" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201030 15:56:06.243" endtime="20201030 15:56:06.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:06.246" level="INFO">VALUE: [0.00037777799999999875, 0.0003850970000000009, 0.00035733300000000134, 0.0003599869999999991, 0.0003563609999999995, 0.0003597779999999981, 0.00035624999999999893, 0.0003593890000000016, 0.00035674999999999943, 0.0003610559999999985, 0.0003599169999999978, 0.0003601529999999985, 0.00035848599999999814, 0.00035897200000000254, 0.0003578890000000001, 0.00038519500000000137, 0.00036024999999999946, 0.000357764, 0.0003610139999999998, 0.000356875000000003, 0.0003583749999999941, 0.00035641699999999776, 0.00035677800000000204, 0.0003577500000000039, 0.0003597769999999986, 0.0003564029999999982, 0.0003572359999999969, 0.00038612500000000105, 0.00035723600000000383, 0.0003581940000000061, 0.00036015300000000194, 0.00036024999999999946, 0.00035727800000000254, 0.0003607779999999991, 0.0003585140000000042, 0.0003860420000000031, 0.0003853330000000016, 0.000357763000000004, 0.0003582909999999967, 0.0003604299999999949, 0.000361152999999996, 0.0003859719999999983, 0.00035627700000000206, 0.000356666999999998, 0.00036026399999999903, 0.00038634800000000163, 0.0003573199999999943, 0.0003579029999999997, 0.0003572909999999957, 0.00035759700000000116]</msg>
<status status="PASS" starttime="20201030 15:56:06.245" endtime="20201030 15:56:06.247"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.240" endtime="20201030 15:56:06.248"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:06.252" endtime="20201030 15:56:06.271"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.250" endtime="20201030 15:56:06.272"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.249" endtime="20201030 15:56:06.272"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.864" endtime="20201030 15:56:06.273"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.863" endtime="20201030 15:56:06.273"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:06.281" endtime="20201030 15:56:06.321"></status>
</kw>
<msg timestamp="20201030 15:56:06.322" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:06.280" endtime="20201030 15:56:06.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:06.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:06.323" endtime="20201030 15:56:06.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:06.325" endtime="20201030 15:56:06.327"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.277" endtime="20201030 15:56:06.328"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.275" endtime="20201030 15:56:06.328"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:06.335" endtime="20201030 15:56:06.622"></status>
</kw>
<msg timestamp="20201030 15:56:06.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026100903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026460778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:06.334" endtime="20201030 15:56:06.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:06.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026100903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026460778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:06.626" endtime="20201030 15:56:06.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:06.634" endtime="20201030 15:56:06.636"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.331" endtime="20201030 15:56:06.636"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.329" endtime="20201030 15:56:06.637"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:06.641" level="INFO">${RESULT} = [{'diff': 0.0003598749999999991}, {'diff': 0.00038513800000000015}, {'diff': 0.0003566119999999992}, {'diff': 0.00035829100000000016}, {'diff': 0.00036088899999999965}, {'diff': 0.00038602800000000007...</msg>
<status status="PASS" starttime="20201030 15:56:06.638" endtime="20201030 15:56:06.641"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:06.645" level="INFO">${ACCURACY} = {'diff': [0.0003598749999999991, 0.00038513800000000015, 0.0003566119999999992, 0.00035829100000000016, 0.00036088899999999965, 0.00038602800000000007, 0.00035640300000000166, 0.00035641700000000123, ...</msg>
<status status="PASS" starttime="20201030 15:56:06.642" endtime="20201030 15:56:06.645"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:06.649" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201030 15:56:06.648" endtime="20201030 15:56:06.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:06.652" level="INFO">VALUE: [0.0003598749999999991, 0.00038513800000000015, 0.0003566119999999992, 0.00035829100000000016, 0.00036088899999999965, 0.00038602800000000007, 0.00035640300000000166, 0.00035641700000000123, 0.0003855130000000005, 0.00038648600000000186, 0.0003566950000000006, 0.00035648700000000255, 0.0003581669999999995, 0.00036066599999999907, 0.00035742999999999886, 0.0003568470000000004, 0.00038569500000000534, 0.0003600690000000045, 0.00035861100000000173, 0.00038640300000000044, 0.0003582359999999979, 0.0003591800000000006, 0.0003560410000000014, 0.00035962499999999537, 0.000359458, 0.00036047200000000057, 0.0003852639999999963, 0.00035659799999999964, 0.0003562500000000024, 0.0003564860000000031, 0.00035865300000000044, 0.00038526300000000374, 0.00038484800000000013, 0.000357070000000001, 0.0003607779999999991, 0.0003610559999999985, 0.0003859860000000048, 0.0003586120000000012, 0.00038599999999999746, 0.00035866600000000054, 0.00038540199999999997, 0.000359458, 0.00038645799999999925, 0.0003859580000000057, 0.0003589869999999981, 0.000360054999999998, 0.00036008299999999716, 0.0003576809999999986, 0.0003861110000000015, 0.0003598749999999956]</msg>
<status status="PASS" starttime="20201030 15:56:06.650" endtime="20201030 15:56:06.653"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.646" endtime="20201030 15:56:06.654"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:06.658" endtime="20201030 15:56:06.677"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.656" endtime="20201030 15:56:06.678"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.655" endtime="20201030 15:56:06.678"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.274" endtime="20201030 15:56:06.678"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.273" endtime="20201030 15:56:06.678"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:06.687" endtime="20201030 15:56:06.723"></status>
</kw>
<msg timestamp="20201030 15:56:06.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:06.686" endtime="20201030 15:56:06.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:06.726" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:06.724" endtime="20201030 15:56:06.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:06.727" endtime="20201030 15:56:06.728"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.683" endtime="20201030 15:56:06.729"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.681" endtime="20201030 15:56:06.729"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:06.736" endtime="20201030 15:56:07.023"></status>
</kw>
<msg timestamp="20201030 15:56:07.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022356694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02273825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:56:06.734" endtime="20201030 15:56:07.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:07.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022356694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02273825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:56:07.027" endtime="20201030 15:56:07.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:07.036" endtime="20201030 15:56:07.037"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.732" endtime="20201030 15:56:07.038"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.730" endtime="20201030 15:56:07.038"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:07.042" level="INFO">${RESULT} = [{'diff': 0.00038155600000000164}, {'diff': 0.0003568190000000013}, {'diff': 0.0003605280000000023}, {'diff': 0.00035875000000000143}, {'diff': 0.0003600970000000002}, {'diff': 0.0003594030000000012},...</msg>
<status status="PASS" starttime="20201030 15:56:07.039" endtime="20201030 15:56:07.042"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:07.047" level="INFO">${ACCURACY} = {'diff': [0.00038155600000000164, 0.0003568190000000013, 0.0003605280000000023, 0.00035875000000000143, 0.0003600970000000002, 0.0003594030000000012, 0.00036057000000000103, 0.0003577229999999973, 0.0...</msg>
<status status="PASS" starttime="20201030 15:56:07.043" endtime="20201030 15:56:07.047"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:07.052" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201030 15:56:07.050" endtime="20201030 15:56:07.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:07.054" level="INFO">VALUE: [0.00038155600000000164, 0.0003568190000000013, 0.0003605280000000023, 0.00035875000000000143, 0.0003600970000000002, 0.0003594030000000012, 0.00036057000000000103, 0.0003577229999999973, 0.0003593190000000003, 0.0003574730000000005, 0.00035861099999999826, 0.0003608750000000001, 0.00035920799999999975, 0.0003568889999999991, 0.0003587219999999988, 0.0003561800000000011, 0.0003579579999999985, 0.0003571249999999998, 0.00036015300000000194, 0.0003857079999999985, 0.00038502799999999907, 0.0003582220000000018, 0.0003601389999999989, 0.00035694500000000087, 0.0003853339999999976, 0.0003858060000000024, 0.00035716599999999904, 0.00035823600000000483, 0.0003592500000000054, 0.0003588890000000011, 0.0003859719999999983, 0.00035870799999999925, 0.000357070000000001, 0.0003610130000000003, 0.0003592219999999993, 0.00036036099999999655, 0.00035993000000000136, 0.0003593470000000029, 0.0003583340000000018, 0.00036016600000000204, 0.0003564720000000035, 0.00035705600000000143, 0.000359959, 0.00035648599999999614, 0.00036048600000000014, 0.000357346999999994, 0.0003862499999999977, 0.0003577920000000026, 0.00038612500000000105, 0.0003578890000000001]</msg>
<status status="PASS" starttime="20201030 15:56:07.053" endtime="20201030 15:56:07.055"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.048" endtime="20201030 15:56:07.055"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:07.059" endtime="20201030 15:56:07.078"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.057" endtime="20201030 15:56:07.079"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.056" endtime="20201030 15:56:07.079"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.679" endtime="20201030 15:56:07.080"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.679" endtime="20201030 15:56:07.080"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:07.089" endtime="20201030 15:56:07.125"></status>
</kw>
<msg timestamp="20201030 15:56:07.126" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:07.087" endtime="20201030 15:56:07.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:07.128" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:07.127" endtime="20201030 15:56:07.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:07.129" endtime="20201030 15:56:07.131"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.084" endtime="20201030 15:56:07.132"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.082" endtime="20201030 15:56:07.132"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:07.140" endtime="20201030 15:56:07.426"></status>
</kw>
<msg timestamp="20201030 15:56:07.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022786819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023150278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:07.138" endtime="20201030 15:56:07.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:07.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022786819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023150278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:07.430" endtime="20201030 15:56:07.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:07.439" endtime="20201030 15:56:07.440"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.134" endtime="20201030 15:56:07.441"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.133" endtime="20201030 15:56:07.441"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:07.445" level="INFO">${RESULT} = [{'diff': 0.000363459}, {'diff': 0.0003863469999999987}, {'diff': 0.00035843099999999933}, {'diff': 0.0003603749999999996}, {'diff': 0.0003585829999999991}, {'diff': 0.00038476399999999925}, {'diff': ...</msg>
<status status="PASS" starttime="20201030 15:56:07.442" endtime="20201030 15:56:07.446"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:07.449" level="INFO">${ACCURACY} = {'diff': [0.000363459, 0.0003863469999999987, 0.00035843099999999933, 0.0003603749999999996, 0.0003585829999999991, 0.00038476399999999925, 0.0003609299999999989, 0.0003603190000000013, 0.000357582999...</msg>
<status status="PASS" starttime="20201030 15:56:07.446" endtime="20201030 15:56:07.450"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:07.454" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201030 15:56:07.453" endtime="20201030 15:56:07.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:07.456" level="INFO">VALUE: [0.000363459, 0.0003863469999999987, 0.00035843099999999933, 0.0003603749999999996, 0.0003585829999999991, 0.00038476399999999925, 0.0003609299999999989, 0.0003603190000000013, 0.0003575829999999981, 0.00035619400000000065, 0.00036088899999999965, 0.00038547300000000076, 0.0003851810000000018, 0.0003605419999999984, 0.00038558299999999837, 0.0003576670000000025, 0.0003563469999999999, 0.00035926399999999803, 0.0003575000000000002, 0.0003561250000000023, 0.0003602779999999986, 0.00035841699999999976, 0.0003856799999999959, 0.00035841699999999976, 0.0003581809999999991, 0.00036040299999999525, 0.0003561390000000053, 0.0003861379999999942, 0.00035611099999999923, 0.000355972000000003, 0.0003860269999999971, 0.0003572219999999973, 0.00035648599999999614, 0.00035842999999999986, 0.00035920799999999975, 0.00038616699999999976, 0.000360959000000001, 0.0003569999999999962, 0.00038612500000000105, 0.00038538899999999987, 0.000385820000000002, 0.0003609030000000027, 0.0003579860000000046, 0.00035912499999999486, 0.0003859860000000048, 0.0003585830000000026, 0.00035658400000000007, 0.0003561530000000049, 0.0003861949999999989, 0.0003563190000000008]</msg>
<status status="PASS" starttime="20201030 15:56:07.455" endtime="20201030 15:56:07.457"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.450" endtime="20201030 15:56:07.458"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:07.461" endtime="20201030 15:56:07.481"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.460" endtime="20201030 15:56:07.482"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.459" endtime="20201030 15:56:07.482"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.081" endtime="20201030 15:56:07.482"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.080" endtime="20201030 15:56:07.482"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:07.491" endtime="20201030 15:56:07.527"></status>
</kw>
<msg timestamp="20201030 15:56:07.528" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:07.489" endtime="20201030 15:56:07.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:07.530" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:07.529" endtime="20201030 15:56:07.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:07.531" endtime="20201030 15:56:07.533"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.487" endtime="20201030 15:56:07.534"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.485" endtime="20201030 15:56:07.534"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:07.542" endtime="20201030 15:56:07.828"></status>
</kw>
<msg timestamp="20201030 15:56:07.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022273208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022655236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:07.540" endtime="20201030 15:56:07.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:07.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022273208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022655236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:07.833" endtime="20201030 15:56:07.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:07.841" endtime="20201030 15:56:07.843"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.537" endtime="20201030 15:56:07.844"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.535" endtime="20201030 15:56:07.844"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:07.848" level="INFO">${RESULT} = [{'diff': 0.00038202799999999953}, {'diff': 0.00035809700000000166}, {'diff': 0.00035618100000000055}, {'diff': 0.0003597359999999994}, {'diff': 0.0003575700000000015}, {'diff': 0.0003591800000000006}...</msg>
<status status="PASS" starttime="20201030 15:56:07.845" endtime="20201030 15:56:07.848"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:07.852" level="INFO">${ACCURACY} = {'diff': [0.00038202799999999953, 0.00035809700000000166, 0.00035618100000000055, 0.0003597359999999994, 0.0003575700000000015, 0.0003591800000000006, 0.0003567080000000007, 0.0003591800000000006, 0.0...</msg>
<status status="PASS" starttime="20201030 15:56:07.849" endtime="20201030 15:56:07.852"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:07.857" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201030 15:56:07.856" endtime="20201030 15:56:07.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:07.859" level="INFO">VALUE: [0.00038202799999999953, 0.00035809700000000166, 0.00035618100000000055, 0.0003597359999999994, 0.0003575700000000015, 0.0003591800000000006, 0.0003567080000000007, 0.0003591800000000006, 0.0003857779999999998, 0.0003566249999999993, 0.00035891700000000026, 0.0003579440000000024, 0.0003601809999999976, 0.00038509699999999744, 0.00035915200000000147, 0.0003850840000000008, 0.00036086099999999705, 0.0003564999999999992, 0.00036077800000000257, 0.0003599029999999982, 0.0003576120000000002, 0.00035754200000000236, 0.0003564859999999996, 0.00035976299999999906, 0.0003573189999999983, 0.0003583610000000015, 0.0003574019999999997, 0.00038557000000000174, 0.00035876400000000447, 0.0003561809999999971, 0.0003564860000000031, 0.00038480500000000195, 0.0003601380000000029, 0.0003852499999999967, 0.00035605500000000095, 0.0003589999999999982, 0.0003600559999999975, 0.0003585139999999973, 0.00035609699999999966, 0.00035826399999999703, 0.00035636199999999896, 0.0003854439999999987, 0.0003583470000000019, 0.00038540199999999997, 0.00036054099999999895, 0.0003569999999999962, 0.0003568190000000013, 0.00035765299999999944, 0.0003849580000000047, 0.0003581390000000004]</msg>
<status status="PASS" starttime="20201030 15:56:07.858" endtime="20201030 15:56:07.861"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.853" endtime="20201030 15:56:07.862"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:07.866" endtime="20201030 15:56:07.885"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.864" endtime="20201030 15:56:07.886"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.863" endtime="20201030 15:56:07.886"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.483" endtime="20201030 15:56:07.886"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.483" endtime="20201030 15:56:07.886"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:07.896" endtime="20201030 15:56:07.934"></status>
</kw>
<msg timestamp="20201030 15:56:07.934" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:07.894" endtime="20201030 15:56:07.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:07.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:07.936" endtime="20201030 15:56:07.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:07.938" endtime="20201030 15:56:07.940"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.891" endtime="20201030 15:56:07.941"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.889" endtime="20201030 15:56:07.941"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:07.948" endtime="20201030 15:56:08.259"></status>
</kw>
<msg timestamp="20201030 15:56:08.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025118417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025495903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:07.946" endtime="20201030 15:56:08.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:08.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025118417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025495903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:08.264" endtime="20201030 15:56:08.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:08.272" endtime="20201030 15:56:08.274"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.944" endtime="20201030 15:56:08.274"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.942" endtime="20201030 15:56:08.275"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:08.279" level="INFO">${RESULT} = [{'diff': 0.0003774859999999998}, {'diff': 0.0003569440000000014}, {'diff': 0.0003580409999999999}, {'diff': 0.0003561660000000015}, {'diff': 0.0003595420000000009}, {'diff': 0.00035820799999999875}, ...</msg>
<status status="PASS" starttime="20201030 15:56:08.275" endtime="20201030 15:56:08.279"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:08.284" level="INFO">${ACCURACY} = {'diff': [0.0003774859999999998, 0.0003569440000000014, 0.0003580409999999999, 0.0003561660000000015, 0.0003595420000000009, 0.00035820799999999875, 0.00035647200000000004, 0.0003603060000000012, 0.00...</msg>
<status status="PASS" starttime="20201030 15:56:08.280" endtime="20201030 15:56:08.284"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:08.289" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201030 15:56:08.287" endtime="20201030 15:56:08.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:08.291" level="INFO">VALUE: [0.0003774859999999998, 0.0003569440000000014, 0.0003580409999999999, 0.0003561660000000015, 0.0003595420000000009, 0.00035820799999999875, 0.00035647200000000004, 0.0003603060000000012, 0.0003571809999999981, 0.000358360999999998, 0.00038558300000000184, 0.000357764, 0.0003564859999999996, 0.0003608750000000001, 0.0003586809999999996, 0.0003561669999999975, 0.0003600550000000015, 0.0003850409999999957, 0.00036102799999999935, 0.00035894399999999993, 0.0003852220000000045, 0.0003602229999999998, 0.0003586109999999948, 0.00035809700000000166, 0.0003861939999999994, 0.0003852910000000029, 0.00038523599999999714, 0.00035859700000000216, 0.00038486100000000023, 0.0003607220000000008, 0.00036066600000000254, 0.0003860560000000027, 0.00035787500000000055, 0.00038612500000000105, 0.0003860000000000044, 0.0003574449999999979, 0.0003559170000000042, 0.00035904200000000386, 0.00035770799999999825, 0.000360861000000004, 0.000386207999999999, 0.00035965300000000144, 0.000386013999999997, 0.0003601810000000011, 0.0003569449999999974, 0.00035831899999999584, 0.0003564449999999969, 0.00035747299999999704, 0.00038586100000000123, 0.00038561099999999404]</msg>
<status status="PASS" starttime="20201030 15:56:08.290" endtime="20201030 15:56:08.292"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.285" endtime="20201030 15:56:08.293"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:08.296" endtime="20201030 15:56:08.316"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.295" endtime="20201030 15:56:08.316"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.294" endtime="20201030 15:56:08.317"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.888" endtime="20201030 15:56:08.317"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.887" endtime="20201030 15:56:08.317"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:08.326" endtime="20201030 15:56:08.361"></status>
</kw>
<msg timestamp="20201030 15:56:08.362" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:08.325" endtime="20201030 15:56:08.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:08.364" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:08.363" endtime="20201030 15:56:08.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:08.366" endtime="20201030 15:56:08.367"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.322" endtime="20201030 15:56:08.368"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.320" endtime="20201030 15:56:08.369"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:08.376" endtime="20201030 15:56:08.663"></status>
</kw>
<msg timestamp="20201030 15:56:08.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021343611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021728486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:08.374" endtime="20201030 15:56:08.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:08.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021343611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021728486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:08.667" endtime="20201030 15:56:08.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:08.676" endtime="20201030 15:56:08.678"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.371" endtime="20201030 15:56:08.678"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.369" endtime="20201030 15:56:08.679"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:08.683" level="INFO">${RESULT} = [{'diff': 0.00038487500000000327}, {'diff': 0.00035909700000000266}, {'diff': 0.000358555}, {'diff': 0.0003590839999999991}, {'diff': 0.00035988899999999865}, {'diff': 0.00036034700000000044}, {'diff'...</msg>
<status status="PASS" starttime="20201030 15:56:08.679" endtime="20201030 15:56:08.683"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:08.687" level="INFO">${ACCURACY} = {'diff': [0.00038487500000000327, 0.00035909700000000266, 0.000358555, 0.0003590839999999991, 0.00035988899999999865, 0.00036034700000000044, 0.0003599999999999992, 0.00038557000000000174, 0.000359791...</msg>
<status status="PASS" starttime="20201030 15:56:08.684" endtime="20201030 15:56:08.687"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:08.692" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201030 15:56:08.690" endtime="20201030 15:56:08.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:08.694" level="INFO">VALUE: [0.00038487500000000327, 0.00035909700000000266, 0.000358555, 0.0003590839999999991, 0.00035988899999999865, 0.00036034700000000044, 0.0003599999999999992, 0.00038557000000000174, 0.00035979100000000167, 0.00035906999999999953, 0.00035823700000000083, 0.00035911099999999876, 0.00036007000000000053, 0.0003851940000000019, 0.0003576809999999986, 0.00036043100000000133, 0.00036081899999999834, 0.00036088899999999965, 0.00035682000000000075, 0.00036061100000000026, 0.00035872300000000176, 0.00035911099999999876, 0.0003850139999999995, 0.0003852360000000006, 0.00035974999999999896, 0.00035933399999999935, 0.0003599450000000004, 0.000385722000000005, 0.0003850420000000021, 0.00038572199999999807, 0.0003581939999999992, 0.0003607220000000008, 0.0003865409999999972, 0.00035909700000000266, 0.0003590689999999966, 0.0003610689999999986, 0.0003606390000000029, 0.00038630500000000345, 0.0003584999999999977, 0.0003588889999999942, 0.00038549999999999696, 0.0003578469999999945, 0.00038512500000000005, 0.00035694399999999793, 0.00035906999999999606, 0.000385013999999996, 0.00035970800000000025, 0.00035720799999999775, 0.0003605419999999984, 0.00038568100000000577]</msg>
<status status="PASS" starttime="20201030 15:56:08.693" endtime="20201030 15:56:08.695"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.688" endtime="20201030 15:56:08.696"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:08.699" endtime="20201030 15:56:08.719"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.698" endtime="20201030 15:56:08.719"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.697" endtime="20201030 15:56:08.720"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.318" endtime="20201030 15:56:08.720"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.318" endtime="20201030 15:56:08.720"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:08.729" endtime="20201030 15:56:08.767"></status>
</kw>
<msg timestamp="20201030 15:56:08.768" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:08.728" endtime="20201030 15:56:08.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:08.771" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:08.769" endtime="20201030 15:56:08.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:08.772" endtime="20201030 15:56:08.773"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.725" endtime="20201030 15:56:08.774"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.723" endtime="20201030 15:56:08.774"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:08.781" endtime="20201030 15:56:09.068"></status>
</kw>
<msg timestamp="20201030 15:56:09.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025310181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025690653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:08.780" endtime="20201030 15:56:09.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:09.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025310181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025690653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:09.073" endtime="20201030 15:56:09.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:09.081" endtime="20201030 15:56:09.083"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.777" endtime="20201030 15:56:09.083"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.775" endtime="20201030 15:56:09.084"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:09.088" level="INFO">${RESULT} = [{'diff': 0.00038047199999999975}, {'diff': 0.00035629199999999764}, {'diff': 0.0003861949999999989}, {'diff': 0.00035673599999999986}, {'diff': 0.00038634700000000216}, {'diff': 0.0003568889999999991...</msg>
<status status="PASS" starttime="20201030 15:56:09.084" endtime="20201030 15:56:09.088"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:09.092" level="INFO">${ACCURACY} = {'diff': [0.00038047199999999975, 0.00035629199999999764, 0.0003861949999999989, 0.00035673599999999986, 0.00038634700000000216, 0.0003568889999999991, 0.00036062499999999983, 0.0003597219999999998, 0...</msg>
<status status="PASS" starttime="20201030 15:56:09.089" endtime="20201030 15:56:09.092"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:09.097" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201030 15:56:09.096" endtime="20201030 15:56:09.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:09.099" level="INFO">VALUE: [0.00038047199999999975, 0.00035629199999999764, 0.0003861949999999989, 0.00035673599999999986, 0.00038634700000000216, 0.0003568889999999991, 0.00036062499999999983, 0.0003597219999999998, 0.00035694500000000087, 0.000385514, 0.0003583329999999989, 0.0003569579999999975, 0.00035997200000000007, 0.0003578060000000022, 0.0003860420000000031, 0.00038580500000000295, 0.00036008299999999716, 0.0003575689999999951, 0.0003851949999999979, 0.0003566379999999994, 0.00038551299999999705, 0.0003849719999999973, 0.0003579579999999985, 0.00035991700000000126, 0.0003606250000000033, 0.00036097200000000107, 0.0003587359999999984, 0.00036054099999999895, 0.00038623700000000455, 0.00035733300000000134, 0.0003610830000000051, 0.000385305999999995, 0.0003570280000000023, 0.00036097300000000054, 0.0003861530000000002, 0.00036095799999999456, 0.00036043100000000133, 0.00035932000000000325, 0.0003862499999999977, 0.0003586800000000001, 0.0003567080000000042, 0.00035626400000000197, 0.0003587219999999988, 0.0003572359999999969, 0.0003595419999999974, 0.00038566699999999926, 0.0003608469999999975, 0.00035774999999999696, 0.00035641699999999776, 0.0003855560000000022]</msg>
<status status="PASS" starttime="20201030 15:56:09.098" endtime="20201030 15:56:09.101"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.093" endtime="20201030 15:56:09.102"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:09.105" endtime="20201030 15:56:09.125"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.104" endtime="20201030 15:56:09.125"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.103" endtime="20201030 15:56:09.126"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.721" endtime="20201030 15:56:09.126"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.721" endtime="20201030 15:56:09.126"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:09.135" endtime="20201030 15:56:09.170"></status>
</kw>
<msg timestamp="20201030 15:56:09.171" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:09.134" endtime="20201030 15:56:09.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:09.173" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:09.172" endtime="20201030 15:56:09.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:09.175" endtime="20201030 15:56:09.176"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.131" endtime="20201030 15:56:09.177"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.129" endtime="20201030 15:56:09.177"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:09.184" endtime="20201030 15:56:09.471"></status>
</kw>
<msg timestamp="20201030 15:56:09.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021255486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021623611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:09.182" endtime="20201030 15:56:09.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:09.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021255486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021623611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:09.475" endtime="20201030 15:56:09.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:09.483" endtime="20201030 15:56:09.485"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.180" endtime="20201030 15:56:09.486"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.178" endtime="20201030 15:56:09.486"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:09.490" level="INFO">${RESULT} = [{'diff': 0.0003681250000000004}, {'diff': 0.00038536100000000073}, {'diff': 0.00038613899999999715}, {'diff': 0.0003585829999999991}, {'diff': 0.00035808400000000157}, {'diff': 0.0003610139999999998}...</msg>
<status status="PASS" starttime="20201030 15:56:09.487" endtime="20201030 15:56:09.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:09.495" level="INFO">${ACCURACY} = {'diff': [0.0003681250000000004, 0.00038536100000000073, 0.00038613899999999715, 0.0003585829999999991, 0.00035808400000000157, 0.0003610139999999998, 0.0003561249999999988, 0.0003560690000000005, 0.0...</msg>
<status status="PASS" starttime="20201030 15:56:09.491" endtime="20201030 15:56:09.495"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:09.500" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201030 15:56:09.499" endtime="20201030 15:56:09.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:09.502" level="INFO">VALUE: [0.0003681250000000004, 0.00038536100000000073, 0.00038613899999999715, 0.0003585829999999991, 0.00035808400000000157, 0.0003610139999999998, 0.0003561249999999988, 0.0003560690000000005, 0.0003571249999999998, 0.00035879200000000014, 0.00035709700000000066, 0.00035842999999999986, 0.00038569500000000187, 0.00038552799999999957, 0.0003857500000000007, 0.0003592220000000028, 0.00036024999999999946, 0.0003609169999999988, 0.000385416999999999, 0.00035819499999999865, 0.0003563890000000021, 0.00035842999999999986, 0.0003593749999999986, 0.0003567080000000007, 0.0003564999999999992, 0.0003850269999999996, 0.00035826399999999703, 0.0003566939999999977, 0.00038505599999999474, 0.000359861000000003, 0.00035750000000000365, 0.00036047200000000057, 0.0003565140000000022, 0.00038555499999999576, 0.00036020800000000075, 0.0003582920000000031, 0.00035927700000000506, 0.0003565280000000018, 0.00035682000000000075, 0.00036016600000000204, 0.00038490199999999947, 0.0003570830000000011, 0.0003573470000000009, 0.00036019500000000065, 0.00038570800000000544, 0.0003609169999999953, 0.00035716599999999904, 0.00036044400000000143, 0.0003563609999999995, 0.00035894399999999993]</msg>
<status status="PASS" starttime="20201030 15:56:09.501" endtime="20201030 15:56:09.503"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.496" endtime="20201030 15:56:09.504"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:09.508" endtime="20201030 15:56:09.527"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.506" endtime="20201030 15:56:09.528"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.505" endtime="20201030 15:56:09.528"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.127" endtime="20201030 15:56:09.529"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.127" endtime="20201030 15:56:09.529"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:09.538" endtime="20201030 15:56:09.577"></status>
</kw>
<msg timestamp="20201030 15:56:09.577" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:09.536" endtime="20201030 15:56:09.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:09.580" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:09.579" endtime="20201030 15:56:09.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:09.581" endtime="20201030 15:56:09.583"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.534" endtime="20201030 15:56:09.583"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.531" endtime="20201030 15:56:09.584"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:09.591" endtime="20201030 15:56:09.878"></status>
</kw>
<msg timestamp="20201030 15:56:09.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025600333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025985014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:09.589" endtime="20201030 15:56:09.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:09.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025600333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025985014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:09.882" endtime="20201030 15:56:09.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:09.890" endtime="20201030 15:56:09.892"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.586" endtime="20201030 15:56:09.893"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.585" endtime="20201030 15:56:09.893"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:09.897" level="INFO">${RESULT} = [{'diff': 0.0003846810000000013}, {'diff': 0.00038486100000000023}, {'diff': 0.0003560419999999974}, {'diff': 0.0003561660000000015}, {'diff': 0.0003569860000000001}, {'diff': 0.0003572920000000021}, ...</msg>
<status status="PASS" starttime="20201030 15:56:09.894" endtime="20201030 15:56:09.898"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:09.902" level="INFO">${ACCURACY} = {'diff': [0.0003846810000000013, 0.00038486100000000023, 0.0003560419999999974, 0.0003561660000000015, 0.0003569860000000001, 0.0003572920000000021, 0.0003563339999999998, 0.0003863339999999986, 0.000...</msg>
<status status="PASS" starttime="20201030 15:56:09.898" endtime="20201030 15:56:09.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:09.906" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201030 15:56:09.905" endtime="20201030 15:56:09.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:09.909" level="INFO">VALUE: [0.0003846810000000013, 0.00038486100000000023, 0.0003560419999999974, 0.0003561660000000015, 0.0003569860000000001, 0.0003572920000000021, 0.0003563339999999998, 0.0003863339999999986, 0.0003604030000000022, 0.00035697200000000054, 0.0003864439999999997, 0.00035906999999999953, 0.0003850699999999978, 0.00038594400000000265, 0.00035791699999999926, 0.00036015300000000194, 0.00035966600000000154, 0.00036047300000000004, 0.0003599299999999944, 0.00036037500000000305, 0.00035704200000000186, 0.00036048600000000014, 0.000359667000000001, 0.00035755600000000193, 0.00036030599999999774, 0.0003579449999999984, 0.00035970900000000666, 0.00035793099999999883, 0.00036015199999999553, 0.00035958400000000307, 0.0003560140000000017, 0.0003857079999999985, 0.00038522199999999757, 0.0003603060000000047, 0.00035676400000000247, 0.00035744399999999843, 0.000359054999999997, 0.0003601670000000015, 0.0003578889999999932, 0.0003590139999999978, 0.0003580559999999955, 0.00038486100000000023, 0.0003606940000000017, 0.0003599030000000017, 0.0003850409999999957, 0.0003595419999999974, 0.0003598469999999965, 0.0003849860000000038, 0.00035837500000000105, 0.000359943999999994]</msg>
<status status="PASS" starttime="20201030 15:56:09.907" endtime="20201030 15:56:09.915"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.902" endtime="20201030 15:56:09.916"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:09.920" endtime="20201030 15:56:09.939"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.918" endtime="20201030 15:56:09.940"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.917" endtime="20201030 15:56:09.940"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.530" endtime="20201030 15:56:09.940"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.529" endtime="20201030 15:56:09.941"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:09.950" endtime="20201030 15:56:09.989"></status>
</kw>
<msg timestamp="20201030 15:56:09.989" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:09.948" endtime="20201030 15:56:09.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:09.992" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:09.990" endtime="20201030 15:56:09.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:09.993" endtime="20201030 15:56:09.995"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.946" endtime="20201030 15:56:09.995"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.943" endtime="20201030 15:56:09.996"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:10.003" endtime="20201030 15:56:10.291"></status>
</kw>
<msg timestamp="20201030 15:56:10.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025825639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026194208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:10.001" endtime="20201030 15:56:10.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:10.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025825639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026194208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:10.296" endtime="20201030 15:56:10.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:10.304" endtime="20201030 15:56:10.306"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.998" endtime="20201030 15:56:10.306"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.996" endtime="20201030 15:56:10.307"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:10.311" level="INFO">${RESULT} = [{'diff': 0.00036856899999999915}, {'diff': 0.00035644500000000037}, {'diff': 0.00038590299999999994}, {'diff': 0.00036038899999999915}, {'diff': 0.0003610000000000002}, {'diff': 0.0003854590000000012...</msg>
<status status="PASS" starttime="20201030 15:56:10.308" endtime="20201030 15:56:10.311"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:10.315" level="INFO">${ACCURACY} = {'diff': [0.00036856899999999915, 0.00035644500000000037, 0.00038590299999999994, 0.00036038899999999915, 0.0003610000000000002, 0.0003854590000000012, 0.0003576530000000029, 0.0003575409999999994, 0....</msg>
<status status="PASS" starttime="20201030 15:56:10.312" endtime="20201030 15:56:10.315"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:10.320" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201030 15:56:10.319" endtime="20201030 15:56:10.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:10.322" level="INFO">VALUE: [0.00036856899999999915, 0.00035644500000000037, 0.00038590299999999994, 0.00036038899999999915, 0.0003610000000000002, 0.0003854590000000012, 0.0003576530000000029, 0.0003575409999999994, 0.00035706899999999805, 0.00035961099999999926, 0.0003597909999999982, 0.00035626400000000197, 0.0003590280000000008, 0.0003596940000000007, 0.0003582359999999979, 0.0003582089999999982, 0.0003593890000000016, 0.000356473000000003, 0.0003609450000000014, 0.000357861000000001, 0.0003864439999999997, 0.0003573050000000022, 0.0003587779999999971, 0.0003852780000000028, 0.00036094400000000193, 0.0003588890000000011, 0.000359667000000001, 0.00035676400000000247, 0.00036045799999999406, 0.0003606390000000029, 0.00035794399999999893, 0.00035759800000000064, 0.0003859719999999983, 0.00038609699999999497, 0.0003858469999999947, 0.00035708399999999363, 0.00036056999999999756, 0.00038522199999999757, 0.00035766599999999954, 0.00035692999999999836, 0.0003581250000000008, 0.00035627800000000154, 0.00035727800000000254, 0.0003601940000000012, 0.00036111100000000423, 0.0003856390000000001, 0.000361054999999999, 0.00035702799999999535, 0.00035632000000000025, 0.00036063899999999594]</msg>
<status status="PASS" starttime="20201030 15:56:10.321" endtime="20201030 15:56:10.324"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.316" endtime="20201030 15:56:10.325"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:10.328" endtime="20201030 15:56:10.349"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.327" endtime="20201030 15:56:10.350"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.326" endtime="20201030 15:56:10.351"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.942" endtime="20201030 15:56:10.352"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.941" endtime="20201030 15:56:10.352"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:10.370" endtime="20201030 15:56:10.406"></status>
</kw>
<msg timestamp="20201030 15:56:10.407" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:10.367" endtime="20201030 15:56:10.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:10.411" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:10.409" endtime="20201030 15:56:10.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:10.413" endtime="20201030 15:56:10.416"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.362" endtime="20201030 15:56:10.417"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.357" endtime="20201030 15:56:10.418"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:10.430" endtime="20201030 15:56:10.717"></status>
</kw>
<msg timestamp="20201030 15:56:10.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034001347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034385917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:10.427" endtime="20201030 15:56:10.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:10.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034001347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034385917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:10.721" endtime="20201030 15:56:10.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:10.730" endtime="20201030 15:56:10.731"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.423" endtime="20201030 15:56:10.732"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.419" endtime="20201030 15:56:10.732"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:10.736" level="INFO">${RESULT} = [{'diff': 0.00038457000000000074}, {'diff': 0.00036054099999999895}, {'diff': 0.0003573190000000018}, {'diff': 0.0003565419999999944}, {'diff': 0.0003559019999999982}, {'diff': 0.0003600269999999989},...</msg>
<status status="PASS" starttime="20201030 15:56:10.733" endtime="20201030 15:56:10.737"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:10.741" level="INFO">${ACCURACY} = {'diff': [0.00038457000000000074, 0.00036054099999999895, 0.0003573190000000018, 0.0003565419999999944, 0.0003559019999999982, 0.0003600269999999989, 0.000358457999999999, 0.00036043000000000186, 0.00...</msg>
<status status="PASS" starttime="20201030 15:56:10.737" endtime="20201030 15:56:10.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:10.746" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201030 15:56:10.745" endtime="20201030 15:56:10.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:10.749" level="INFO">VALUE: [0.00038457000000000074, 0.00036054099999999895, 0.0003573190000000018, 0.0003565419999999944, 0.0003559019999999982, 0.0003600269999999989, 0.000358457999999999, 0.00036043000000000186, 0.00035876399999999753, 0.0003849169999999985, 0.00035806999999999506, 0.00038488899999999937, 0.0003847499999999962, 0.00036043000000000186, 0.00035933300000000334, 0.00035855500000000345, 0.00036070800000000125, 0.0003580419999999959, 0.00036093100000000183, 0.00035908400000000257, 0.00036006999999999706, 0.0003559449999999964, 0.00035841699999999976, 0.00035955500000000445, 0.0003560830000000001, 0.00036076300000000006, 0.00036011100000000323, 0.00035829100000000363, 0.00036069500000000115, 0.00035909800000000214, 0.0003576389999999999, 0.00035880499999999677, 0.00035926399999999803, 0.0003608890000000031, 0.0003851659999999993, 0.00038608300000000234, 0.00038534700000000116, 0.0003849719999999973, 0.0003600690000000045, 0.0003581939999999992, 0.0003560830000000001, 0.0003601670000000015, 0.0003854859999999974, 0.00035911100000000223, 0.00035747199999999757, 0.0003860699999999953, 0.00035611099999999923, 0.0003591940000000002, 0.0003859439999999992, 0.0003600830000000041]</msg>
<status status="PASS" starttime="20201030 15:56:10.747" endtime="20201030 15:56:10.750"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.742" endtime="20201030 15:56:10.750"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:10.754" endtime="20201030 15:56:10.773"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.752" endtime="20201030 15:56:10.774"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.751" endtime="20201030 15:56:10.774"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.354" endtime="20201030 15:56:10.775"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.353" endtime="20201030 15:56:10.775"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:10.784" endtime="20201030 15:56:10.823"></status>
</kw>
<msg timestamp="20201030 15:56:10.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:10.782" endtime="20201030 15:56:10.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:10.826" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:10.825" endtime="20201030 15:56:10.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:10.827" endtime="20201030 15:56:10.829"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.780" endtime="20201030 15:56:10.830"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.777" endtime="20201030 15:56:10.830"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:10.837" endtime="20201030 15:56:11.125"></status>
</kw>
<msg timestamp="20201030 15:56:11.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025474625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025831236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:10.835" endtime="20201030 15:56:11.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:11.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025474625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025831236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:11.129" endtime="20201030 15:56:11.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:11.137" endtime="20201030 15:56:11.139"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.833" endtime="20201030 15:56:11.140"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.831" endtime="20201030 15:56:11.140"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:11.144" level="INFO">${RESULT} = [{'diff': 0.00035661099999999973}, {'diff': 0.00035923600000000236}, {'diff': 0.00036074999999999996}, {'diff': 0.0003583329999999989}, {'diff': 0.00036047300000000004}, {'diff': 0.0003861390000000006...</msg>
<status status="PASS" starttime="20201030 15:56:11.141" endtime="20201030 15:56:11.145"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:11.149" level="INFO">${ACCURACY} = {'diff': [0.00035661099999999973, 0.00035923600000000236, 0.00036074999999999996, 0.0003583329999999989, 0.00036047300000000004, 0.0003861390000000006, 0.0003589860000000021, 0.00038534700000000116, 0...</msg>
<status status="PASS" starttime="20201030 15:56:11.146" endtime="20201030 15:56:11.149"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:11.153" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201030 15:56:11.152" endtime="20201030 15:56:11.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:11.156" level="INFO">VALUE: [0.00035661099999999973, 0.00035923600000000236, 0.00036074999999999996, 0.0003583329999999989, 0.00036047300000000004, 0.0003861390000000006, 0.0003589860000000021, 0.00038534700000000116, 0.00038652800000000057, 0.0003596389999999984, 0.0003596390000000019, 0.00035947199999999957, 0.00035673599999999986, 0.0003564019999999987, 0.00035875000000000143, 0.000386110999999998, 0.00038502700000000306, 0.00035955600000000393, 0.0003581809999999991, 0.0003858190000000025, 0.00035681899999999434, 0.0003606390000000029, 0.000361054999999999, 0.0003864860000000053, 0.00035915300000000094, 0.00035786200000000046, 0.00036074999999999996, 0.0003563609999999995, 0.0003571669999999985, 0.0003859860000000048, 0.00035947199999999957, 0.0003601669999999946, 0.00038627799999999685, 0.0003581390000000004, 0.0003859439999999992, 0.00036058299999999766, 0.00035848599999999814, 0.0003851529999999992, 0.000359667000000001, 0.00038652700000000456, 0.0003861390000000006, 0.00036068099999999464, 0.0003851110000000005, 0.00036070800000000125, 0.0003851949999999979, 0.0003611800000000026, 0.0003855970000000014, 0.0003852780000000028, 0.0003863060000000029, 0.0003561809999999971]</msg>
<status status="PASS" starttime="20201030 15:56:11.154" endtime="20201030 15:56:11.157"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.150" endtime="20201030 15:56:11.157"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:11.161" endtime="20201030 15:56:11.181"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.159" endtime="20201030 15:56:11.181"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.158" endtime="20201030 15:56:11.182"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.776" endtime="20201030 15:56:11.182"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.775" endtime="20201030 15:56:11.182"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:11.191" endtime="20201030 15:56:11.230"></status>
</kw>
<msg timestamp="20201030 15:56:11.230" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:11.190" endtime="20201030 15:56:11.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:11.233" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:11.231" endtime="20201030 15:56:11.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:11.234" endtime="20201030 15:56:11.236"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.187" endtime="20201030 15:56:11.236"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.185" endtime="20201030 15:56:11.237"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:11.244" endtime="20201030 15:56:11.530"></status>
</kw>
<msg timestamp="20201030 15:56:11.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025198903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025568917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:11.242" endtime="20201030 15:56:11.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:11.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025198903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025568917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:11.535" endtime="20201030 15:56:11.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:11.543" endtime="20201030 15:56:11.545"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.239" endtime="20201030 15:56:11.545"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.237" endtime="20201030 15:56:11.546"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:11.550" level="INFO">${RESULT} = [{'diff': 0.00037001399999999837}, {'diff': 0.00035627800000000154}, {'diff': 0.00036029199999999817}, {'diff': 0.0003597779999999981}, {'diff': 0.00035970800000000025}, {'diff': 0.0003849450000000011...</msg>
<status status="PASS" starttime="20201030 15:56:11.547" endtime="20201030 15:56:11.550"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:11.554" level="INFO">${ACCURACY} = {'diff': [0.00037001399999999837, 0.00035627800000000154, 0.00036029199999999817, 0.0003597779999999981, 0.00035970800000000025, 0.0003849450000000011, 0.00036094399999999846, 0.0003596940000000007, 0...</msg>
<status status="PASS" starttime="20201030 15:56:11.551" endtime="20201030 15:56:11.554"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:11.559" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201030 15:56:11.558" endtime="20201030 15:56:11.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:11.562" level="INFO">VALUE: [0.00037001399999999837, 0.00035627800000000154, 0.00036029199999999817, 0.0003597779999999981, 0.00035970800000000025, 0.0003849450000000011, 0.00036094399999999846, 0.0003596940000000007, 0.0003598890000000021, 0.0003854580000000017, 0.0003599869999999991, 0.00035805599999999896, 0.00035888899999999765, 0.00035693099999999783, 0.00035788899999999665, 0.000385514, 0.0003565419999999979, 0.00035769499999999815, 0.0003861939999999994, 0.00038538899999999987, 0.00036098600000000064, 0.00036097200000000107, 0.0003603470000000039, 0.0003565270000000023, 0.0003578469999999945, 0.00035692999999999836, 0.0003571389999999994, 0.0003852640000000032, 0.00035830599999999574, 0.00038599999999999746, 0.00035632000000000025, 0.0003572779999999956, 0.00035827800000000354, 0.00036052799999999885, 0.00038541599999999954, 0.0003855560000000022, 0.00035680499999999477, 0.00038502800000000253, 0.00035982000000000375, 0.00035911100000000223, 0.0003611109999999973, 0.0003580410000000034, 0.0003562920000000011, 0.00035743100000000527, 0.000356555999999994, 0.00035655500000000145, 0.00036041700000000176, 0.00038545799999999825, 0.00035898599999999864, 0.000358555999999996]</msg>
<status status="PASS" starttime="20201030 15:56:11.560" endtime="20201030 15:56:11.563"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.555" endtime="20201030 15:56:11.564"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:11.568" endtime="20201030 15:56:11.587"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.566" endtime="20201030 15:56:11.588"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.565" endtime="20201030 15:56:11.588"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.183" endtime="20201030 15:56:11.588"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.182" endtime="20201030 15:56:11.588"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:11.598" endtime="20201030 15:56:11.638"></status>
</kw>
<msg timestamp="20201030 15:56:11.638" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:11.596" endtime="20201030 15:56:11.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:11.641" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:11.639" endtime="20201030 15:56:11.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:11.642" endtime="20201030 15:56:11.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.593" endtime="20201030 15:56:11.644"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.591" endtime="20201030 15:56:11.644"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:11.652" endtime="20201030 15:56:11.938"></status>
</kw>
<msg timestamp="20201030 15:56:11.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025767403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026125583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:11.650" endtime="20201030 15:56:11.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:11.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025767403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026125583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:11.942" endtime="20201030 15:56:11.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:11.951" endtime="20201030 15:56:11.953"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.647" endtime="20201030 15:56:11.953"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.645" endtime="20201030 15:56:11.954"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:11.958" level="INFO">${RESULT} = [{'diff': 0.0003581799999999996}, {'diff': 0.0003596940000000007}, {'diff': 0.0003576950000000016}, {'diff': 0.0003575419999999989}, {'diff': 0.0003859299999999996}, {'diff': 0.00038504099999999916}, ...</msg>
<status status="PASS" starttime="20201030 15:56:11.954" endtime="20201030 15:56:11.958"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:11.963" level="INFO">${ACCURACY} = {'diff': [0.0003581799999999996, 0.0003596940000000007, 0.0003576950000000016, 0.0003575419999999989, 0.0003859299999999996, 0.00038504099999999916, 0.00035847200000000204, 0.0003588059999999997, 0.00...</msg>
<status status="PASS" starttime="20201030 15:56:11.959" endtime="20201030 15:56:11.963"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:11.967" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201030 15:56:11.966" endtime="20201030 15:56:11.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:11.970" level="INFO">VALUE: [0.0003581799999999996, 0.0003596940000000007, 0.0003576950000000016, 0.0003575419999999989, 0.0003859299999999996, 0.00038504099999999916, 0.00035847200000000204, 0.0003588059999999997, 0.0003570279999999988, 0.00036081899999999834, 0.00035794399999999893, 0.00038536100000000073, 0.0003862910000000004, 0.0003607220000000008, 0.00038508300000000134, 0.00035758299999999466, 0.0003855980000000009, 0.0003588749999999946, 0.00038634700000000216, 0.0003568889999999991, 0.000356569000000001, 0.0003608340000000043, 0.00035815299999999994, 0.00035981899999999734, 0.00035770799999999825, 0.00035976399999999853, 0.00036047200000000057, 0.00036052799999999885, 0.0003610000000000002, 0.00036030499999999827, 0.00036005600000000443, 0.000358861000000002, 0.0003597359999999994, 0.00035877700000000456, 0.0003574159999999993, 0.0003563609999999995, 0.0003855970000000014, 0.00038518099999999833, 0.0003606669999999951, 0.0003590690000000035, 0.0003570139999999958, 0.0003603610000000035, 0.0003595139999999983, 0.0003611949999999947, 0.000356666999999998, 0.0003592920000000041, 0.00035647199999999657, 0.0003584720000000055, 0.0003567909999999952, 0.00038502800000000253]</msg>
<status status="PASS" starttime="20201030 15:56:11.968" endtime="20201030 15:56:11.971"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.964" endtime="20201030 15:56:11.971"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:11.975" endtime="20201030 15:56:11.995"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.974" endtime="20201030 15:56:11.995"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.972" endtime="20201030 15:56:11.996"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.589" endtime="20201030 15:56:11.996"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.589" endtime="20201030 15:56:11.996"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:12.005" endtime="20201030 15:56:12.043"></status>
</kw>
<msg timestamp="20201030 15:56:12.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:12.004" endtime="20201030 15:56:12.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:12.046" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:12.045" endtime="20201030 15:56:12.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:12.047" endtime="20201030 15:56:12.049"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.001" endtime="20201030 15:56:12.050"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.999" endtime="20201030 15:56:12.050"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:12.057" endtime="20201030 15:56:12.344"></status>
</kw>
<msg timestamp="20201030 15:56:12.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025098486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025472569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:12.055" endtime="20201030 15:56:12.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:12.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025098486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025472569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:12.348" endtime="20201030 15:56:12.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:12.356" endtime="20201030 15:56:12.358"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.053" endtime="20201030 15:56:12.359"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.051" endtime="20201030 15:56:12.359"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:12.365" level="INFO">${RESULT} = [{'diff': 0.00037408300000000075}, {'diff': 0.0003606519999999995}, {'diff': 0.00035595799999999997}, {'diff': 0.0003569860000000001}, {'diff': 0.0003566670000000015}, {'diff': 0.0003858049999999995},...</msg>
<status status="PASS" starttime="20201030 15:56:12.360" endtime="20201030 15:56:12.365"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:12.369" level="INFO">${ACCURACY} = {'diff': [0.00037408300000000075, 0.0003606519999999995, 0.00035595799999999997, 0.0003569860000000001, 0.0003566670000000015, 0.0003858049999999995, 0.00035623599999999936, 0.0003597359999999994, 0.0...</msg>
<status status="PASS" starttime="20201030 15:56:12.366" endtime="20201030 15:56:12.369"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:12.374" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201030 15:56:12.373" endtime="20201030 15:56:12.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:12.376" level="INFO">VALUE: [0.00037408300000000075, 0.0003606519999999995, 0.00035595799999999997, 0.0003569860000000001, 0.0003566670000000015, 0.0003858049999999995, 0.00035623599999999936, 0.0003597359999999994, 0.0003605419999999984, 0.0003850699999999978, 0.00035605500000000095, 0.00038586100000000123, 0.0003849309999999981, 0.00035929200000000064, 0.0003577220000000013, 0.0003599450000000004, 0.00035987500000000255, 0.00036036099999999655, 0.00035873600000000533, 0.0003564589999999965, 0.0003609020000000032, 0.0003595140000000052, 0.00035843099999999933, 0.0003582500000000044, 0.0003603470000000039, 0.00035620799999999675, 0.0003593339999999959, 0.00035993100000000083, 0.000358346999999995, 0.00035850000000000465, 0.000360458000000001, 0.0003604999999999997, 0.0003859169999999995, 0.0003608889999999962, 0.0003566940000000046, 0.0003600559999999975, 0.0003600280000000053, 0.00036011100000000323, 0.0003855550000000027, 0.0003598470000000034, 0.0003592219999999993, 0.00035670799999999725, 0.0003571390000000063, 0.000359458, 0.00036036099999999655, 0.00035902799999999735, 0.0003597229999999993, 0.0003585700000000025, 0.00036044400000000143, 0.00035658299999999366]</msg>
<status status="PASS" starttime="20201030 15:56:12.375" endtime="20201030 15:56:12.377"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.370" endtime="20201030 15:56:12.378"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:12.382" endtime="20201030 15:56:12.401"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.380" endtime="20201030 15:56:12.402"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.379" endtime="20201030 15:56:12.402"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.997" endtime="20201030 15:56:12.403"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.997" endtime="20201030 15:56:12.403"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:12.412" endtime="20201030 15:56:12.451"></status>
</kw>
<msg timestamp="20201030 15:56:12.451" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:12.410" endtime="20201030 15:56:12.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:12.454" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:12.453" endtime="20201030 15:56:12.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:12.455" endtime="20201030 15:56:12.457"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.408" endtime="20201030 15:56:12.457"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.405" endtime="20201030 15:56:12.458"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:12.465" endtime="20201030 15:56:12.752"></status>
</kw>
<msg timestamp="20201030 15:56:12.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025515986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025886625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:12.463" endtime="20201030 15:56:12.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:12.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025515986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025886625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:12.756" endtime="20201030 15:56:12.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:12.765" endtime="20201030 15:56:12.766"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.460" endtime="20201030 15:56:12.767"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.458" endtime="20201030 15:56:12.767"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:12.771" level="INFO">${RESULT} = [{'diff': 0.000370638999999999}, {'diff': 0.0003598890000000021}, {'diff': 0.00035994400000000093}, {'diff': 0.00035926399999999803}, {'diff': 0.0003576120000000002}, {'diff': 0.000385820000000002}, {...</msg>
<status status="PASS" starttime="20201030 15:56:12.768" endtime="20201030 15:56:12.771"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:12.775" level="INFO">${ACCURACY} = {'diff': [0.000370638999999999, 0.0003598890000000021, 0.00035994400000000093, 0.00035926399999999803, 0.0003576120000000002, 0.000385820000000002, 0.00036108399999999763, 0.0003593060000000002, 0.000...</msg>
<status status="PASS" starttime="20201030 15:56:12.772" endtime="20201030 15:56:12.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:12.780" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201030 15:56:12.779" endtime="20201030 15:56:12.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:12.783" level="INFO">VALUE: [0.000370638999999999, 0.0003598890000000021, 0.00035994400000000093, 0.00035926399999999803, 0.0003576120000000002, 0.000385820000000002, 0.00036108399999999763, 0.0003593060000000002, 0.0003581669999999995, 0.0003583470000000019, 0.0003593060000000002, 0.00035911100000000223, 0.0003581669999999995, 0.0003606109999999968, 0.0003590969999999992, 0.00035641700000000123, 0.0003581809999999991, 0.00035926399999999803, 0.00038506899999999483, 0.0003561520000000054, 0.0003610559999999985, 0.0003851939999999984, 0.0003568050000000017, 0.000356457999999997, 0.00038501400000000296, 0.00035674999999999596, 0.00036004099999999845, 0.0003600830000000041, 0.000360070000000004, 0.0003856520000000002, 0.000385931000000006, 0.00035879199999999667, 0.0003858330000000021, 0.000358569000000003, 0.0003582769999999971, 0.0003568050000000017, 0.00035956999999999656, 0.000360667000000002, 0.00035956999999999656, 0.0003578890000000001, 0.0003577779999999961, 0.00035848599999999814, 0.0003570139999999958, 0.0003574029999999992, 0.00035626399999999503, 0.00035698599999999664, 0.00035626399999999503, 0.00035943100000000033, 0.0003576250000000003, 0.0003595419999999974]</msg>
<status status="PASS" starttime="20201030 15:56:12.781" endtime="20201030 15:56:12.784"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.776" endtime="20201030 15:56:12.785"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:12.789" endtime="20201030 15:56:12.808"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.787" endtime="20201030 15:56:12.809"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.786" endtime="20201030 15:56:12.809"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.404" endtime="20201030 15:56:12.809"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.403" endtime="20201030 15:56:12.810"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:12.819" endtime="20201030 15:56:12.858"></status>
</kw>
<msg timestamp="20201030 15:56:12.858" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:12.817" endtime="20201030 15:56:12.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:12.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:12.859" endtime="20201030 15:56:12.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:12.862" endtime="20201030 15:56:12.864"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.814" endtime="20201030 15:56:12.864"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.812" endtime="20201030 15:56:12.865"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:12.871" endtime="20201030 15:56:13.158"></status>
</kw>
<msg timestamp="20201030 15:56:13.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025517736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025899722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:12.870" endtime="20201030 15:56:13.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:13.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025517736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025899722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:13.162" endtime="20201030 15:56:13.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:13.171" endtime="20201030 15:56:13.172"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.867" endtime="20201030 15:56:13.173"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.865" endtime="20201030 15:56:13.173"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:13.177" level="INFO">${RESULT} = [{'diff': 0.0003819860000000008}, {'diff': 0.0003586809999999996}, {'diff': 0.0003590969999999992}, {'diff': 0.0003856529999999997}, {'diff': 0.0003590280000000008}, {'diff': 0.00036062499999999983}, ...</msg>
<status status="PASS" starttime="20201030 15:56:13.174" endtime="20201030 15:56:13.178"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:13.182" level="INFO">${ACCURACY} = {'diff': [0.0003819860000000008, 0.0003586809999999996, 0.0003590969999999992, 0.0003856529999999997, 0.0003590280000000008, 0.00036062499999999983, 0.00035787500000000055, 0.00038566699999999926, 0.0...</msg>
<status status="PASS" starttime="20201030 15:56:13.178" endtime="20201030 15:56:13.183"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:13.187" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201030 15:56:13.186" endtime="20201030 15:56:13.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:13.190" level="INFO">VALUE: [0.0003819860000000008, 0.0003586809999999996, 0.0003590969999999992, 0.0003856529999999997, 0.0003590280000000008, 0.00036062499999999983, 0.00035787500000000055, 0.00038566699999999926, 0.0003608330000000014, 0.0003851940000000019, 0.0003608610000000005, 0.0003582220000000018, 0.0003862500000000012, 0.00035852700000000085, 0.00036015200000000247, 0.000360361, 0.00035980499999999777, 0.00038579200000000285, 0.000357457999999998, 0.00038599999999999746, 0.0003600419999999979, 0.00035619499999999665, 0.00035893099999999983, 0.00035669499999999715, 0.0003582909999999967, 0.00035611099999999923, 0.0003603610000000035, 0.00035798599999999764, 0.00038512500000000005, 0.00036076399999999953, 0.0003607230000000003, 0.0003601810000000011, 0.0003584160000000003, 0.00036045799999999406, 0.0003594999999999987, 0.0003848330000000011, 0.00035652799999999485, 0.0003583890000000006, 0.00035661099999999973, 0.0003581669999999995, 0.00036054200000000536, 0.0003561799999999976, 0.00035855600000000293, 0.00035633300000000034, 0.00038586100000000123, 0.00035824999999999746, 0.00038562500000000055, 0.0003606109999999968, 0.0003862919999999964, 0.0003860420000000031]</msg>
<status status="PASS" starttime="20201030 15:56:13.188" endtime="20201030 15:56:13.190"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.183" endtime="20201030 15:56:13.191"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:13.195" endtime="20201030 15:56:13.214"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.193" endtime="20201030 15:56:13.215"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.192" endtime="20201030 15:56:13.215"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.811" endtime="20201030 15:56:13.216"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.810" endtime="20201030 15:56:13.216"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:13.225" endtime="20201030 15:56:13.259"></status>
</kw>
<msg timestamp="20201030 15:56:13.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:13.223" endtime="20201030 15:56:13.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:13.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:13.261" endtime="20201030 15:56:13.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:13.264" endtime="20201030 15:56:13.265"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.221" endtime="20201030 15:56:13.266"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.218" endtime="20201030 15:56:13.266"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:13.273" endtime="20201030 15:56:13.562"></status>
</kw>
<msg timestamp="20201030 15:56:13.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021155125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021529222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:13.272" endtime="20201030 15:56:13.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:13.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021155125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021529222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:13.566" endtime="20201030 15:56:13.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:13.575" endtime="20201030 15:56:13.576"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.269" endtime="20201030 15:56:13.577"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.267" endtime="20201030 15:56:13.577"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:13.581" level="INFO">${RESULT} = [{'diff': 0.0003740970000000003}, {'diff': 0.00035844399999999943}, {'diff': 0.0003610559999999985}, {'diff': 0.0003598749999999991}, {'diff': 0.0003602090000000002}, {'diff': 0.0003852919999999989}, ...</msg>
<status status="PASS" starttime="20201030 15:56:13.578" endtime="20201030 15:56:13.582"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:13.586" level="INFO">${ACCURACY} = {'diff': [0.0003740970000000003, 0.00035844399999999943, 0.0003610559999999985, 0.0003598749999999991, 0.0003602090000000002, 0.0003852919999999989, 0.00036066599999999907, 0.00038504100000000263, 0.0...</msg>
<status status="PASS" starttime="20201030 15:56:13.582" endtime="20201030 15:56:13.586"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:13.590" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201030 15:56:13.589" endtime="20201030 15:56:13.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:13.593" level="INFO">VALUE: [0.0003740970000000003, 0.00035844399999999943, 0.0003610559999999985, 0.0003598749999999991, 0.0003602090000000002, 0.0003852919999999989, 0.00036066599999999907, 0.00038504100000000263, 0.00036009799999999967, 0.0003575000000000002, 0.00036024999999999946, 0.00038534800000000063, 0.0003847079999999975, 0.0003578329999999984, 0.00035752699999999984, 0.00038538899999999987, 0.0003599580000000005, 0.00035904099999999745, 0.00035779199999999914, 0.0003592089999999992, 0.0003849439999999982, 0.00035872300000000176, 0.0003561249999999988, 0.000385207999999998, 0.0003610410000000029, 0.0003850269999999996, 0.0003606250000000033, 0.0003599020000000022, 0.00035727700000000306, 0.0003861390000000006, 0.0003581109999999943, 0.00035700000000000315, 0.0003862499999999977, 0.0003583199999999953, 0.00035676399999999553, 0.000358763000000005, 0.00038541599999999954, 0.00035987500000000255, 0.00035672300000000323, 0.00035943000000000086, 0.00038538899999999987, 0.00038534800000000063, 0.0003605969999999972, 0.0003853330000000016, 0.00035647199999999657, 0.0003568060000000012, 0.0003855420000000026, 0.0003565280000000018, 0.00035679100000000213, 0.00038549999999999696]</msg>
<status status="PASS" starttime="20201030 15:56:13.591" endtime="20201030 15:56:13.594"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.586" endtime="20201030 15:56:13.594"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:13.598" endtime="20201030 15:56:13.618"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.596" endtime="20201030 15:56:13.618"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.595" endtime="20201030 15:56:13.619"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.217" endtime="20201030 15:56:13.619"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.216" endtime="20201030 15:56:13.619"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:13.628" endtime="20201030 15:56:13.670"></status>
</kw>
<msg timestamp="20201030 15:56:13.671" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:13.627" endtime="20201030 15:56:13.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:13.673" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:13.672" endtime="20201030 15:56:13.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:13.674" endtime="20201030 15:56:13.676"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.624" endtime="20201030 15:56:13.677"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.622" endtime="20201030 15:56:13.677"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:13.684" endtime="20201030 15:56:13.970"></status>
</kw>
<msg timestamp="20201030 15:56:13.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024870875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025253889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:13.682" endtime="20201030 15:56:13.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:13.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024870875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025253889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:13.974" endtime="20201030 15:56:13.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:13.983" endtime="20201030 15:56:13.984"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.680" endtime="20201030 15:56:13.985"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.678" endtime="20201030 15:56:13.985"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:13.989" level="INFO">${RESULT} = [{'diff': 0.00038301400000000096}, {'diff': 0.0003851939999999984}, {'diff': 0.00038555499999999923}, {'diff': 0.00036047200000000057}, {'diff': 0.00035697200000000054}, {'diff': 0.0003563610000000029...</msg>
<status status="PASS" starttime="20201030 15:56:13.986" endtime="20201030 15:56:13.990"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:13.994" level="INFO">${ACCURACY} = {'diff': [0.00038301400000000096, 0.0003851939999999984, 0.00038555499999999923, 0.00036047200000000057, 0.00035697200000000054, 0.00035636100000000295, 0.0003579029999999997, 0.00035825000000000093, ...</msg>
<status status="PASS" starttime="20201030 15:56:13.990" endtime="20201030 15:56:13.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:13.998" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201030 15:56:13.997" endtime="20201030 15:56:13.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:14.001" level="INFO">VALUE: [0.00038301400000000096, 0.0003851939999999984, 0.00038555499999999923, 0.00036047200000000057, 0.00035697200000000054, 0.00035636100000000295, 0.0003579029999999997, 0.00035825000000000093, 0.00035775000000000043, 0.0003590000000000017, 0.0003563609999999995, 0.00035747200000000104, 0.0003564860000000031, 0.00036012499999999933, 0.00036043099999999786, 0.00035647200000000004, 0.0003599169999999978, 0.0003582920000000031, 0.0003571809999999981, 0.00038637499999999436, 0.00035804099999999645, 0.0003563469999999999, 0.0003560690000000005, 0.0003581669999999995, 0.00035959700000000316, 0.00035650000000000265, 0.00036079199999999867, 0.0003581250000000008, 0.00036026400000000597, 0.00038595799999999875, 0.0003862919999999964, 0.00035915200000000147, 0.00036024999999999946, 0.0003572769999999961, 0.0003850550000000022, 0.00035616700000000445, 0.00035594500000000334, 0.00035973699999999886, 0.00036074999999999996, 0.0003559999999999952, 0.0003578340000000013, 0.00038512500000000005, 0.0003598340000000033, 0.0003855970000000014, 0.000360458000000001, 0.0003578470000000014, 0.00035809800000000114, 0.00036104099999999945, 0.0003597779999999981, 0.00038638900000000087]</msg>
<status status="PASS" starttime="20201030 15:56:14.000" endtime="20201030 15:56:14.003"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.995" endtime="20201030 15:56:14.003"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:14.007" endtime="20201030 15:56:14.027"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.006" endtime="20201030 15:56:14.027"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.004" endtime="20201030 15:56:14.028"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.620" endtime="20201030 15:56:14.028"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.619" endtime="20201030 15:56:14.028"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:14.037" endtime="20201030 15:56:14.073"></status>
</kw>
<msg timestamp="20201030 15:56:14.073" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:14.036" endtime="20201030 15:56:14.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:14.076" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:14.074" endtime="20201030 15:56:14.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:14.077" endtime="20201030 15:56:14.078"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.033" endtime="20201030 15:56:14.079"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.031" endtime="20201030 15:56:14.079"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:14.086" endtime="20201030 15:56:14.373"></status>
</kw>
<msg timestamp="20201030 15:56:14.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022805153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023173014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:14.085" endtime="20201030 15:56:14.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:14.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022805153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023173014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:14.377" endtime="20201030 15:56:14.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:14.386" endtime="20201030 15:56:14.387"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.082" endtime="20201030 15:56:14.388"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.080" endtime="20201030 15:56:14.388"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:14.392" level="INFO">${RESULT} = [{'diff': 0.0003678609999999971}, {'diff': 0.000356666000000002}, {'diff': 0.00038508300000000134}, {'diff': 0.00036112500000000033}, {'diff': 0.0003569860000000001}, {'diff': 0.00035902799999999735},...</msg>
<status status="PASS" starttime="20201030 15:56:14.389" endtime="20201030 15:56:14.393"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:14.397" level="INFO">${ACCURACY} = {'diff': [0.0003678609999999971, 0.000356666000000002, 0.00038508300000000134, 0.00036112500000000033, 0.0003569860000000001, 0.00035902799999999735, 0.0003585410000000004, 0.0003862780000000003, 0.00...</msg>
<status status="PASS" starttime="20201030 15:56:14.393" endtime="20201030 15:56:14.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:14.402" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201030 15:56:14.401" endtime="20201030 15:56:14.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:14.405" level="INFO">VALUE: [0.0003678609999999971, 0.000356666000000002, 0.00038508300000000134, 0.00036112500000000033, 0.0003569860000000001, 0.00035902799999999735, 0.0003585410000000004, 0.0003862780000000003, 0.0003579860000000011, 0.00038623599999999814, 0.0003607220000000008, 0.00038602800000000007, 0.0003565280000000018, 0.0003578890000000001, 0.0003563190000000008, 0.00035816600000000004, 0.00035861199999999774, 0.0003597089999999997, 0.00038543100000000205, 0.00035874999999999796, 0.00035952799999999785, 0.000385611000000001, 0.0003849859999999969, 0.0003564159999999983, 0.0003590830000000031, 0.0003566940000000046, 0.00035980499999999777, 0.00035670900000000366, 0.0003851529999999992, 0.00038602800000000353, 0.0003594030000000012, 0.00035861100000000173, 0.00035615299999999794, 0.0003863330000000026, 0.00035947199999999957, 0.00038499999999999646, 0.00036020800000000075, 0.00038634700000000216, 0.0003595139999999983, 0.0003595139999999983, 0.0003577500000000039, 0.00035616700000000445, 0.00036008399999999663, 0.00035876399999999753, 0.00038616699999999976, 0.00035804200000000286, 0.00038512500000000005, 0.0003573329999999944, 0.0003600969999999967, 0.0003573190000000018]</msg>
<status status="PASS" starttime="20201030 15:56:14.403" endtime="20201030 15:56:14.406"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.398" endtime="20201030 15:56:14.406"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:14.410" endtime="20201030 15:56:14.429"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.408" endtime="20201030 15:56:14.430"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.407" endtime="20201030 15:56:14.430"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.029" endtime="20201030 15:56:14.431"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.028" endtime="20201030 15:56:14.431"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:14.440" endtime="20201030 15:56:14.476"></status>
</kw>
<msg timestamp="20201030 15:56:14.476" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:14.438" endtime="20201030 15:56:14.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:14.479" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:14.477" endtime="20201030 15:56:14.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:14.480" endtime="20201030 15:56:14.481"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.436" endtime="20201030 15:56:14.482"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.433" endtime="20201030 15:56:14.482"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:14.489" endtime="20201030 15:56:14.777"></status>
</kw>
<msg timestamp="20201030 15:56:14.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021948167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022322639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:14.488" endtime="20201030 15:56:14.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:14.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021948167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022322639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:14.781" endtime="20201030 15:56:14.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:14.789" endtime="20201030 15:56:14.791"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.485" endtime="20201030 15:56:14.792"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.483" endtime="20201030 15:56:14.792"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:14.796" level="INFO">${RESULT} = [{'diff': 0.0003744719999999972}, {'diff': 0.0003562219999999998}, {'diff': 0.000386207999999999}, {'diff': 0.0003584030000000002}, {'diff': 0.0003575969999999977}, {'diff': 0.00035948599999999914}, {...</msg>
<status status="PASS" starttime="20201030 15:56:14.793" endtime="20201030 15:56:14.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:14.800" level="INFO">${ACCURACY} = {'diff': [0.0003744719999999972, 0.0003562219999999998, 0.000386207999999999, 0.0003584030000000002, 0.0003575969999999977, 0.00035948599999999914, 0.0003859859999999979, 0.00035724999999999993, 0.000...</msg>
<status status="PASS" starttime="20201030 15:56:14.797" endtime="20201030 15:56:14.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:14.805" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201030 15:56:14.804" endtime="20201030 15:56:14.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:14.807" level="INFO">VALUE: [0.0003744719999999972, 0.0003562219999999998, 0.000386207999999999, 0.0003584030000000002, 0.0003575969999999977, 0.00035948599999999914, 0.0003859859999999979, 0.00035724999999999993, 0.0003595129999999988, 0.00038498600000000036, 0.00036016699999999804, 0.0003576250000000003, 0.0003852360000000006, 0.00035842999999999986, 0.0003581390000000004, 0.0003863750000000013, 0.000359667000000001, 0.0003859299999999996, 0.0003564869999999991, 0.0003602359999999999, 0.00038595799999999875, 0.00036016699999999804, 0.0003575000000000002, 0.00035734699999999744, 0.0003598200000000003, 0.0003584589999999985, 0.0003865139999999975, 0.00035954099999999795, 0.0003605689999999981, 0.0003605419999999984, 0.0003599450000000004, 0.00035961100000000273, 0.0003574449999999979, 0.0003608889999999962, 0.0003575419999999954, 0.00035650000000000265, 0.0003571389999999994, 0.00035670799999999725, 0.00038545799999999825, 0.0003585139999999973, 0.0003855420000000026, 0.00036073599999999345, 0.00035930499999999727, 0.0003588890000000011, 0.00035672200000000376, 0.0003571389999999994, 0.00035669499999999715, 0.0003595139999999983, 0.0003852360000000041, 0.0003584720000000055]</msg>
<status status="PASS" starttime="20201030 15:56:14.806" endtime="20201030 15:56:14.808"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.801" endtime="20201030 15:56:14.809"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:14.813" endtime="20201030 15:56:14.832"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.811" endtime="20201030 15:56:14.833"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.810" endtime="20201030 15:56:14.833"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.432" endtime="20201030 15:56:14.834"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.431" endtime="20201030 15:56:14.834"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:14.843" endtime="20201030 15:56:14.882"></status>
</kw>
<msg timestamp="20201030 15:56:14.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:14.841" endtime="20201030 15:56:14.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:14.885" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:14.884" endtime="20201030 15:56:14.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:14.887" endtime="20201030 15:56:14.888"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.839" endtime="20201030 15:56:14.889"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.836" endtime="20201030 15:56:14.889"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:14.896" endtime="20201030 15:56:15.182"></status>
</kw>
<msg timestamp="20201030 15:56:15.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025968639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026340736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:14.894" endtime="20201030 15:56:15.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:15.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025968639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026340736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:15.186" endtime="20201030 15:56:15.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:15.194" endtime="20201030 15:56:15.196"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.892" endtime="20201030 15:56:15.197"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.890" endtime="20201030 15:56:15.197"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:15.201" level="INFO">${RESULT} = [{'diff': 0.0003720969999999983}, {'diff': 0.000385611000000001}, {'diff': 0.0003566800000000016}, {'diff': 0.0003574019999999997}, {'diff': 0.0003611389999999999}, {'diff': 0.00035756899999999855}, {...</msg>
<status status="PASS" starttime="20201030 15:56:15.198" endtime="20201030 15:56:15.201"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:15.206" level="INFO">${ACCURACY} = {'diff': [0.0003720969999999983, 0.000385611000000001, 0.0003566800000000016, 0.0003574019999999997, 0.0003611389999999999, 0.00035756899999999855, 0.0003593480000000024, 0.00036007000000000053, 0.000...</msg>
<status status="PASS" starttime="20201030 15:56:15.202" endtime="20201030 15:56:15.206"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:15.210" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201030 15:56:15.209" endtime="20201030 15:56:15.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:15.213" level="INFO">VALUE: [0.0003720969999999983, 0.000385611000000001, 0.0003566800000000016, 0.0003574019999999997, 0.0003611389999999999, 0.00035756899999999855, 0.0003593480000000024, 0.00036007000000000053, 0.00038562500000000055, 0.00035877800000000057, 0.0003593060000000002, 0.0003568470000000004, 0.0003605139999999993, 0.0003590139999999978, 0.0003586670000000035, 0.00038572299999999754, 0.0003572229999999968, 0.0003580979999999942, 0.0003598469999999965, 0.00038490299999999894, 0.00038562500000000055, 0.0003569579999999975, 0.000358457999999999, 0.000385013999999996, 0.0003602920000000051, 0.00038534700000000116, 0.00035855600000000293, 0.0003594449999999999, 0.0003596390000000019, 0.0003859719999999983, 0.00035755600000000193, 0.0003588329999999959, 0.00036040299999999525, 0.0003856520000000002, 0.0003608329999999979, 0.0003563609999999995, 0.00035941599999999435, 0.00035802799999999635, 0.00035676399999999553, 0.0003586109999999948, 0.0003582359999999979, 0.0003862780000000038, 0.0003849309999999981, 0.00038623599999999814, 0.00038637499999999436, 0.0003853750000000003, 0.0003599450000000004, 0.0003858190000000025, 0.00035602799999999435, 0.0003594589999999995]</msg>
<status status="PASS" starttime="20201030 15:56:15.211" endtime="20201030 15:56:15.218"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.206" endtime="20201030 15:56:15.219"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:15.223" endtime="20201030 15:56:15.242"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.221" endtime="20201030 15:56:15.243"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.220" endtime="20201030 15:56:15.243"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.835" endtime="20201030 15:56:15.243"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.834" endtime="20201030 15:56:15.244"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:15.253" endtime="20201030 15:56:15.289"></status>
</kw>
<msg timestamp="20201030 15:56:15.289" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:15.251" endtime="20201030 15:56:15.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:15.292" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:15.290" endtime="20201030 15:56:15.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:15.293" endtime="20201030 15:56:15.295"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.248" endtime="20201030 15:56:15.295"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.246" endtime="20201030 15:56:15.296"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:15.303" endtime="20201030 15:56:15.589"></status>
</kw>
<msg timestamp="20201030 15:56:15.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023062, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023419278, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:56:15.301" endtime="20201030 15:56:15.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:15.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023062, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023419278, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:56:15.594" endtime="20201030 15:56:15.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:15.602" endtime="20201030 15:56:15.604"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.298" endtime="20201030 15:56:15.604"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.296" endtime="20201030 15:56:15.605"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:15.609" level="INFO">${RESULT} = [{'diff': 0.00035727800000000254}, {'diff': 0.00038508300000000134}, {'diff': 0.000358958999999999}, {'diff': 0.000356861}, {'diff': 0.0003862780000000003}, {'diff': 0.0003848879999999999}, {'diff': 0...</msg>
<status status="PASS" starttime="20201030 15:56:15.606" endtime="20201030 15:56:15.609"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:15.614" level="INFO">${ACCURACY} = {'diff': [0.00035727800000000254, 0.00038508300000000134, 0.000358958999999999, 0.000356861, 0.0003862780000000003, 0.0003848879999999999, 0.0003563060000000007, 0.00035701399999999925, 0.000359777999...</msg>
<status status="PASS" starttime="20201030 15:56:15.610" endtime="20201030 15:56:15.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:15.619" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201030 15:56:15.618" endtime="20201030 15:56:15.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:15.621" level="INFO">VALUE: [0.00035727800000000254, 0.00038508300000000134, 0.000358958999999999, 0.000356861, 0.0003862780000000003, 0.0003848879999999999, 0.0003563060000000007, 0.00035701399999999925, 0.0003597779999999981, 0.0003604450000000009, 0.0003566249999999993, 0.00035912499999999833, 0.00035943100000000033, 0.00038580599999999896, 0.00038529200000000235, 0.00038609699999999844, 0.0003584030000000002, 0.00035897199999999907, 0.0003562089999999997, 0.00035630499999999773, 0.0003574310000000018, 0.00035673600000000333, 0.0003608890000000031, 0.0003563609999999995, 0.000358070000000002, 0.0003590140000000047, 0.00035737500000000005, 0.0003583190000000028, 0.0003857360000000046, 0.00035936099999999555, 0.00035769499999999815, 0.0003562359999999959, 0.0003582219999999983, 0.0003581250000000008, 0.00038636100000000173, 0.000386013999999997, 0.00035819499999999865, 0.00035762499999999336, 0.0003569590000000039, 0.0003561389999999984, 0.00035843099999999933, 0.00038588900000000037, 0.00036018099999999414, 0.0003583190000000028, 0.0003566390000000058, 0.0003601800000000016, 0.0003864450000000061, 0.000358667, 0.00035692999999999836, 0.0003580129999999973]</msg>
<status status="PASS" starttime="20201030 15:56:15.620" endtime="20201030 15:56:15.622"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.615" endtime="20201030 15:56:15.623"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:15.627" endtime="20201030 15:56:15.646"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.625" endtime="20201030 15:56:15.647"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.624" endtime="20201030 15:56:15.647"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.245" endtime="20201030 15:56:15.647"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.244" endtime="20201030 15:56:15.647"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:15.657" endtime="20201030 15:56:15.690"></status>
</kw>
<msg timestamp="20201030 15:56:15.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:15.655" endtime="20201030 15:56:15.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:15.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:15.692" endtime="20201030 15:56:15.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:15.695" endtime="20201030 15:56:15.696"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.652" endtime="20201030 15:56:15.697"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.650" endtime="20201030 15:56:15.697"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:15.704" endtime="20201030 15:56:15.992"></status>
</kw>
<msg timestamp="20201030 15:56:15.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021178403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021545986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:15.703" endtime="20201030 15:56:15.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:16.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021178403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021545986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:15.996" endtime="20201030 15:56:16.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:16.005" endtime="20201030 15:56:16.007"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.700" endtime="20201030 15:56:16.007"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.698" endtime="20201030 15:56:16.008"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:16.012" level="INFO">${RESULT} = [{'diff': 0.0003675830000000012}, {'diff': 0.0003585280000000003}, {'diff': 0.00035833300000000234}, {'diff': 0.0003561800000000011}, {'diff': 0.0003861949999999989}, {'diff': 0.00038484700000000066},...</msg>
<status status="PASS" starttime="20201030 15:56:16.008" endtime="20201030 15:56:16.012"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:16.016" level="INFO">${ACCURACY} = {'diff': [0.0003675830000000012, 0.0003585280000000003, 0.00035833300000000234, 0.0003561800000000011, 0.0003861949999999989, 0.00038484700000000066, 0.00035842999999999986, 0.0003560690000000005, 0.0...</msg>
<status status="PASS" starttime="20201030 15:56:16.013" endtime="20201030 15:56:16.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:16.020" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201030 15:56:16.019" endtime="20201030 15:56:16.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:16.023" level="INFO">VALUE: [0.0003675830000000012, 0.0003585280000000003, 0.00035833300000000234, 0.0003561800000000011, 0.0003861949999999989, 0.00038484700000000066, 0.00035842999999999986, 0.0003560690000000005, 0.0003566389999999989, 0.00038609699999999844, 0.00035727799999999907, 0.00035947199999999957, 0.0003585419999999999, 0.00038488899999999937, 0.0003575419999999989, 0.0003857909999999999, 0.0003588060000000032, 0.0003581250000000008, 0.0003578890000000001, 0.0003595139999999983, 0.0003573889999999996, 0.00035715199999999947, 0.0003606939999999982, 0.0003599860000000031, 0.00035654200000000136, 0.00035906900000000005, 0.00036066599999999907, 0.00035916699999999704, 0.00035876400000000447, 0.0003593890000000016, 0.0003599030000000017, 0.00038558300000000184, 0.00035827800000000354, 0.00035698599999999664, 0.0003596390000000019, 0.00035720799999999775, 0.00035744400000000537, 0.000386305999999996, 0.0003848749999999998, 0.00035779100000000313, 0.00038579099999999644, 0.00038579099999999644, 0.0003572359999999969, 0.00035650000000000265, 0.00038622199999999857, 0.00038612500000000105, 0.0003581250000000008, 0.0003855420000000026, 0.0003584030000000002, 0.0003849309999999981]</msg>
<status status="PASS" starttime="20201030 15:56:16.022" endtime="20201030 15:56:16.024"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.017" endtime="20201030 15:56:16.024"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:16.028" endtime="20201030 15:56:16.048"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.027" endtime="20201030 15:56:16.048"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.025" endtime="20201030 15:56:16.049"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.648" endtime="20201030 15:56:16.049"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.648" endtime="20201030 15:56:16.049"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:16.059" endtime="20201030 15:56:16.100"></status>
</kw>
<msg timestamp="20201030 15:56:16.100" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:16.057" endtime="20201030 15:56:16.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:16.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:16.101" endtime="20201030 15:56:16.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:16.104" endtime="20201030 15:56:16.106"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.054" endtime="20201030 15:56:16.107"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.052" endtime="20201030 15:56:16.107"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:16.114" endtime="20201030 15:56:16.401"></status>
</kw>
<msg timestamp="20201030 15:56:16.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026361208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026726542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:16.112" endtime="20201030 15:56:16.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:16.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026361208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026726542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:16.405" endtime="20201030 15:56:16.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:16.414" endtime="20201030 15:56:16.415"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.109" endtime="20201030 15:56:16.416"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.108" endtime="20201030 15:56:16.416"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:16.420" level="INFO">${RESULT} = [{'diff': 0.0003653339999999984}, {'diff': 0.00038502799999999907}, {'diff': 0.00038584799999999767}, {'diff': 0.00035690300000000216}, {'diff': 0.0003571950000000011}, {'diff': 0.00035956900000000055...</msg>
<status status="PASS" starttime="20201030 15:56:16.417" endtime="20201030 15:56:16.421"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:16.425" level="INFO">${ACCURACY} = {'diff': [0.0003653339999999984, 0.00038502799999999907, 0.00038584799999999767, 0.00035690300000000216, 0.0003571950000000011, 0.00035956900000000055, 0.00038566699999999926, 0.00035677799999999857, ...</msg>
<status status="PASS" starttime="20201030 15:56:16.421" endtime="20201030 15:56:16.425"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:16.429" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201030 15:56:16.428" endtime="20201030 15:56:16.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:16.432" level="INFO">VALUE: [0.0003653339999999984, 0.00038502799999999907, 0.00038584799999999767, 0.00035690300000000216, 0.0003571950000000011, 0.00035956900000000055, 0.00038566699999999926, 0.00035677799999999857, 0.0003582359999999979, 0.0003589449999999994, 0.0003566950000000006, 0.00035929200000000064, 0.0003592219999999993, 0.0003571529999999955, 0.0003573340000000008, 0.00038583299999999515, 0.00035727800000000254, 0.0003866119999999945, 0.00038622199999999857, 0.0003857090000000049, 0.0003581939999999992, 0.00038634700000000216, 0.00035911100000000223, 0.00035905500000000395, 0.000386305999999996, 0.0003589030000000007, 0.00038590299999999994, 0.0003565830000000006, 0.0003588890000000011, 0.0003569159999999988, 0.00036032000000000425, 0.0003605139999999993, 0.0003596810000000006, 0.0003589999999999982, 0.0003579449999999984, 0.00036108299999999816, 0.0003567779999999951, 0.00035842999999999986, 0.0003861110000000015, 0.00038513800000000015, 0.000357054999999995, 0.00038520899999999747, 0.0003586250000000013, 0.00038540299999999944, 0.00035633300000000034, 0.0003579999999999972, 0.00038562500000000055, 0.00035882000000000275, 0.0003601810000000011, 0.00035897199999999907]</msg>
<status status="PASS" starttime="20201030 15:56:16.430" endtime="20201030 15:56:16.433"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.425" endtime="20201030 15:56:16.434"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:16.438" endtime="20201030 15:56:16.457"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.436" endtime="20201030 15:56:16.458"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.435" endtime="20201030 15:56:16.458"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.050" endtime="20201030 15:56:16.459"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.050" endtime="20201030 15:56:16.459"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:16.468" endtime="20201030 15:56:16.505"></status>
</kw>
<msg timestamp="20201030 15:56:16.506" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:16.466" endtime="20201030 15:56:16.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:16.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:16.507" endtime="20201030 15:56:16.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:16.509" endtime="20201030 15:56:16.511"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.464" endtime="20201030 15:56:16.512"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.462" endtime="20201030 15:56:16.512"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:16.519" endtime="20201030 15:56:16.805"></status>
</kw>
<msg timestamp="20201030 15:56:16.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023675222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024056444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:16.517" endtime="20201030 15:56:16.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:16.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023675222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024056444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:16.810" endtime="20201030 15:56:16.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:16.818" endtime="20201030 15:56:16.820"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.514" endtime="20201030 15:56:16.820"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.513" endtime="20201030 15:56:16.821"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:16.825" level="INFO">${RESULT} = [{'diff': 0.0003812220000000005}, {'diff': 0.000357554999999999}, {'diff': 0.0003606809999999981}, {'diff': 0.00038618099999999933}, {'diff': 0.00038634800000000163}, {'diff': 0.0003859169999999995}, ...</msg>
<status status="PASS" starttime="20201030 15:56:16.822" endtime="20201030 15:56:16.825"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:16.830" level="INFO">${ACCURACY} = {'diff': [0.0003812220000000005, 0.000357554999999999, 0.0003606809999999981, 0.00038618099999999933, 0.00038634800000000163, 0.0003859169999999995, 0.000385304999999999, 0.0003560410000000014, 0.0003...</msg>
<status status="PASS" starttime="20201030 15:56:16.826" endtime="20201030 15:56:16.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:16.835" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201030 15:56:16.834" endtime="20201030 15:56:16.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:16.837" level="INFO">VALUE: [0.0003812220000000005, 0.000357554999999999, 0.0003606809999999981, 0.00038618099999999933, 0.00038634800000000163, 0.0003859169999999995, 0.000385304999999999, 0.0003560410000000014, 0.00038490199999999947, 0.0003602779999999986, 0.0003848749999999998, 0.00035976399999999853, 0.0003575130000000003, 0.00035637499999999905, 0.00035929200000000064, 0.0003859719999999983, 0.0003565830000000006, 0.0003559999999999987, 0.00038472200000000054, 0.0003852360000000006, 0.00038591600000000004, 0.00038584700000000166, 0.0003601670000000015, 0.0003851110000000005, 0.000358861000000002, 0.0003591940000000002, 0.00036059800000000364, 0.00036026400000000597, 0.00035882000000000275, 0.0003852910000000029, 0.00036024999999999946, 0.00035887500000000155, 0.00035695800000000444, 0.0003609030000000027, 0.00035965300000000144, 0.0003563060000000007, 0.0003861949999999989, 0.0003575419999999954, 0.0003602909999999987, 0.0003602229999999998, 0.0003589030000000007, 0.00036084799999999695, 0.00035808299999999516, 0.00035765299999999944, 0.0003606669999999951, 0.00036088800000000365, 0.00035969399999999374, 0.0003854860000000043, 0.0003851110000000005, 0.00035659700000000016]</msg>
<status status="PASS" starttime="20201030 15:56:16.836" endtime="20201030 15:56:16.838"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.831" endtime="20201030 15:56:16.839"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:16.842" endtime="20201030 15:56:16.862"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.841" endtime="20201030 15:56:16.863"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.840" endtime="20201030 15:56:16.863"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.460" endtime="20201030 15:56:16.863"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.459" endtime="20201030 15:56:16.863"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:16.873" endtime="20201030 15:56:16.906"></status>
</kw>
<msg timestamp="20201030 15:56:16.907" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:16.871" endtime="20201030 15:56:16.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:16.909" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:16.908" endtime="20201030 15:56:16.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:16.911" endtime="20201030 15:56:16.912"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.868" endtime="20201030 15:56:16.913"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.866" endtime="20201030 15:56:16.913"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:16.920" endtime="20201030 15:56:17.208"></status>
</kw>
<msg timestamp="20201030 15:56:17.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021145222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021524875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:16.919" endtime="20201030 15:56:17.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:17.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021145222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021524875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:17.212" endtime="20201030 15:56:17.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:17.220" endtime="20201030 15:56:17.222"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.916" endtime="20201030 15:56:17.223"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.914" endtime="20201030 15:56:17.223"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:17.227" level="INFO">${RESULT} = [{'diff': 0.00037965299999999716}, {'diff': 0.00035777799999999957}, {'diff': 0.00036094400000000193}, {'diff': 0.0003597359999999994}, {'diff': 0.0003610269999999999}, {'diff': 0.00035970800000000025...</msg>
<status status="PASS" starttime="20201030 15:56:17.224" endtime="20201030 15:56:17.227"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:17.232" level="INFO">${ACCURACY} = {'diff': [0.00037965299999999716, 0.00035777799999999957, 0.00036094400000000193, 0.0003597359999999994, 0.0003610269999999999, 0.00035970800000000025, 0.0003590829999999996, 0.00035616599999999804, 0...</msg>
<status status="PASS" starttime="20201030 15:56:17.228" endtime="20201030 15:56:17.232"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:17.236" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201030 15:56:17.235" endtime="20201030 15:56:17.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:17.239" level="INFO">VALUE: [0.00037965299999999716, 0.00035777799999999957, 0.00036094400000000193, 0.0003597359999999994, 0.0003610269999999999, 0.00035970800000000025, 0.0003590829999999996, 0.00035616599999999804, 0.0003579579999999985, 0.00035929200000000064, 0.00035779099999999966, 0.00035856899999999955, 0.0003850139999999995, 0.0003861660000000003, 0.00035618100000000055, 0.00035906900000000005, 0.0003591940000000002, 0.0003564859999999996, 0.0003589030000000007, 0.0003586939999999997, 0.0003847919999999984, 0.0003585839999999986, 0.00038508300000000134, 0.00035984699999999994, 0.0003565140000000022, 0.00035979100000000167, 0.0003600420000000014, 0.00035809700000000166, 0.00038479200000000185, 0.0003573889999999996, 0.00035724999999999646, 0.0003565700000000005, 0.0003566809999999976, 0.0003859859999999979, 0.00035847199999999857, 0.0003601250000000028, 0.00035937500000000205, 0.0003570830000000011, 0.00035715299999999894, 0.00035600000000000215, 0.00035943100000000033, 0.0003610689999999986, 0.0003859870000000043, 0.00038618099999999933, 0.000360667000000002, 0.00038536100000000073, 0.00035723600000000383, 0.00036004200000000486, 0.00035644500000000384, 0.0003566809999999976]</msg>
<status status="PASS" starttime="20201030 15:56:17.237" endtime="20201030 15:56:17.239"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.232" endtime="20201030 15:56:17.240"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:17.244" endtime="20201030 15:56:17.264"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.242" endtime="20201030 15:56:17.264"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.241" endtime="20201030 15:56:17.264"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.864" endtime="20201030 15:56:17.265"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.864" endtime="20201030 15:56:17.265"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:17.274" endtime="20201030 15:56:17.313"></status>
</kw>
<msg timestamp="20201030 15:56:17.314" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:17.273" endtime="20201030 15:56:17.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:17.316" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:17.315" endtime="20201030 15:56:17.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:17.317" endtime="20201030 15:56:17.319"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.270" endtime="20201030 15:56:17.320"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.267" endtime="20201030 15:56:17.320"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:17.327" endtime="20201030 15:56:17.615"></status>
</kw>
<msg timestamp="20201030 15:56:17.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026451806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026809444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:17.325" endtime="20201030 15:56:17.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:17.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026451806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026809444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:17.619" endtime="20201030 15:56:17.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:17.628" endtime="20201030 15:56:17.629"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.323" endtime="20201030 15:56:17.630"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.321" endtime="20201030 15:56:17.630"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:17.635" level="INFO">${RESULT} = [{'diff': 0.0003576380000000004}, {'diff': 0.00036001400000000225}, {'diff': 0.00036062499999999983}, {'diff': 0.0003571530000000024}, {'diff': 0.0003595830000000001}, {'diff': 0.00036062499999999983}...</msg>
<status status="PASS" starttime="20201030 15:56:17.631" endtime="20201030 15:56:17.635"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:17.639" level="INFO">${ACCURACY} = {'diff': [0.0003576380000000004, 0.00036001400000000225, 0.00036062499999999983, 0.0003571530000000024, 0.0003595830000000001, 0.00036062499999999983, 0.0003580269999999969, 0.0003595969999999997, 0.0...</msg>
<status status="PASS" starttime="20201030 15:56:17.636" endtime="20201030 15:56:17.639"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:17.643" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201030 15:56:17.642" endtime="20201030 15:56:17.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:17.646" level="INFO">VALUE: [0.0003576380000000004, 0.00036001400000000225, 0.00036062499999999983, 0.0003571530000000024, 0.0003595830000000001, 0.00036062499999999983, 0.0003580269999999969, 0.0003595969999999997, 0.00038502800000000253, 0.0003591390000000014, 0.00035787500000000055, 0.0003610280000000028, 0.0003585280000000003, 0.0003578890000000036, 0.00038516699999999876, 0.0003565700000000005, 0.00038567999999999936, 0.00036082000000000475, 0.0003847079999999975, 0.0003577219999999978, 0.00038530500000000245, 0.0003597779999999981, 0.00035642999999999786, 0.0003608749999999966, 0.00038583299999999515, 0.0003580280000000033, 0.00035872200000000576, 0.00036063799999999646, 0.00035598599999999564, 0.00036015300000000194, 0.0003593329999999964, 0.0003860420000000031, 0.0003583610000000015, 0.00036079199999999867, 0.00035915300000000094, 0.00035770799999999825, 0.0003579999999999972, 0.0003600139999999988, 0.00036013899999999543, 0.0003608889999999962, 0.00038608300000000234, 0.00038608300000000234, 0.0003579999999999972, 0.0003610139999999998, 0.00035920799999999975, 0.0003576809999999986, 0.0003597089999999997, 0.00036020800000000075, 0.00035750000000000365, 0.0003605139999999993]</msg>
<status status="PASS" starttime="20201030 15:56:17.645" endtime="20201030 15:56:17.648"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.640" endtime="20201030 15:56:17.648"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:17.652" endtime="20201030 15:56:17.672"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.650" endtime="20201030 15:56:17.672"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.649" endtime="20201030 15:56:17.673"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.266" endtime="20201030 15:56:17.673"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.265" endtime="20201030 15:56:17.673"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:17.682" endtime="20201030 15:56:17.721"></status>
</kw>
<msg timestamp="20201030 15:56:17.722" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:17.681" endtime="20201030 15:56:17.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:17.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:17.723" endtime="20201030 15:56:17.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:17.725" endtime="20201030 15:56:17.727"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.678" endtime="20201030 15:56:17.727"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.676" endtime="20201030 15:56:17.728"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:17.735" endtime="20201030 15:56:18.021"></status>
</kw>
<msg timestamp="20201030 15:56:18.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025256736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025641597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:17.733" endtime="20201030 15:56:18.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:18.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025256736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025641597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:18.026" endtime="20201030 15:56:18.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:18.034" endtime="20201030 15:56:18.036"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.730" endtime="20201030 15:56:18.036"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.729" endtime="20201030 15:56:18.037"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:18.041" level="INFO">${RESULT} = [{'diff': 0.00038486100000000023}, {'diff': 0.00035959700000000316}, {'diff': 0.00038607000000000224}, {'diff': 0.00035827800000000007}, {'diff': 0.00036097200000000107}, {'diff': 0.000386403000000000...</msg>
<status status="PASS" starttime="20201030 15:56:18.037" endtime="20201030 15:56:18.041"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:18.046" level="INFO">${ACCURACY} = {'diff': [0.00038486100000000023, 0.00035959700000000316, 0.00038607000000000224, 0.00035827800000000007, 0.00036097200000000107, 0.00038640300000000044, 0.00035741700000000223, 0.00035848599999999814...</msg>
<status status="PASS" starttime="20201030 15:56:18.042" endtime="20201030 15:56:18.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:18.050" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201030 15:56:18.049" endtime="20201030 15:56:18.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:18.053" level="INFO">VALUE: [0.00038486100000000023, 0.00035959700000000316, 0.00038607000000000224, 0.00035827800000000007, 0.00036097200000000107, 0.00038640300000000044, 0.00035741700000000223, 0.00035848599999999814, 0.0003570279999999988, 0.00038577700000000034, 0.0003855270000000001, 0.0003862919999999999, 0.00035650000000000265, 0.00035838899999999715, 0.00035827800000000007, 0.00038525000000000365, 0.0003580139999999968, 0.0003579029999999997, 0.0003575139999999963, 0.0003861530000000002, 0.0003579999999999972, 0.0003853330000000016, 0.0003583470000000019, 0.00035623600000000283, 0.00035700000000000315, 0.0003567219999999968, 0.0003574590000000044, 0.00035708299999999416, 0.00036069399999999474, 0.00035709700000000066, 0.00035859700000000216, 0.0003603329999999974, 0.00036113799999999696, 0.00038586100000000123, 0.0003583190000000028, 0.0003604999999999997, 0.00035670799999999725, 0.00038518100000000527, 0.00035737500000000005, 0.0003601390000000024, 0.00035965199999999503, 0.0003850269999999961, 0.0003603889999999957, 0.000357457999999998, 0.0003596250000000023, 0.0003571389999999994, 0.00036093000000000236, 0.0003592779999999976, 0.00038617999999999986, 0.00035668000000000505]</msg>
<status status="PASS" starttime="20201030 15:56:18.052" endtime="20201030 15:56:18.054"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.047" endtime="20201030 15:56:18.054"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:18.058" endtime="20201030 15:56:18.078"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.057" endtime="20201030 15:56:18.079"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.055" endtime="20201030 15:56:18.079"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.674" endtime="20201030 15:56:18.079"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.673" endtime="20201030 15:56:18.079"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:18.089" endtime="20201030 15:56:18.127"></status>
</kw>
<msg timestamp="20201030 15:56:18.128" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:18.087" endtime="20201030 15:56:18.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:18.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:18.129" endtime="20201030 15:56:18.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:18.131" endtime="20201030 15:56:18.133"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.084" endtime="20201030 15:56:18.134"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.082" endtime="20201030 15:56:18.134"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:18.141" endtime="20201030 15:56:18.429"></status>
</kw>
<msg timestamp="20201030 15:56:18.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020860264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021242694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:18.139" endtime="20201030 15:56:18.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:18.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020860264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021242694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:18.434" endtime="20201030 15:56:18.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:18.442" endtime="20201030 15:56:18.444"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.137" endtime="20201030 15:56:18.444"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.135" endtime="20201030 15:56:18.445"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:18.449" level="INFO">${RESULT} = [{'diff': 0.0003824299999999996}, {'diff': 0.0003575000000000002}, {'diff': 0.0003595969999999997}, {'diff': 0.0003591250000000018}, {'diff': 0.00035623599999999936}, {'diff': 0.000359959}, {'diff': 0...</msg>
<status status="PASS" starttime="20201030 15:56:18.445" endtime="20201030 15:56:18.449"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:18.453" level="INFO">${ACCURACY} = {'diff': [0.0003824299999999996, 0.0003575000000000002, 0.0003595969999999997, 0.0003591250000000018, 0.00035623599999999936, 0.000359959, 0.0003596800000000011, 0.0003603479999999999, 0.0003591660000...</msg>
<status status="PASS" starttime="20201030 15:56:18.450" endtime="20201030 15:56:18.453"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:18.458" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201030 15:56:18.457" endtime="20201030 15:56:18.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:18.460" level="INFO">VALUE: [0.0003824299999999996, 0.0003575000000000002, 0.0003595969999999997, 0.0003591250000000018, 0.00035623599999999936, 0.000359959, 0.0003596800000000011, 0.0003603479999999999, 0.00035916600000000104, 0.00036067999999999864, 0.0003595830000000001, 0.00038626400000000075, 0.0003571389999999994, 0.00038612500000000105, 0.0003573060000000017, 0.0003575969999999977, 0.0003852779999999993, 0.0003611389999999999, 0.0003851529999999992, 0.0003596390000000019, 0.0003572220000000008, 0.00035680499999999823, 0.0003857779999999998, 0.0003578190000000023, 0.0003579449999999984, 0.00035987500000000255, 0.0003577090000000012, 0.00035966599999999807, 0.00035777800000000304, 0.0003611940000000022, 0.00036015200000000247, 0.00035668000000000505, 0.00035754099999999595, 0.0003590689999999966, 0.0003584030000000002, 0.0003561799999999976, 0.00038612500000000105, 0.0003584589999999985, 0.0003563609999999995, 0.00035879199999999667, 0.0003858190000000025, 0.0003605139999999993, 0.00035630499999999427, 0.0003590969999999957, 0.0003585700000000025, 0.0003599999999999992, 0.00035811100000000123, 0.000356666999999998, 0.00038636100000000173, 0.0003600690000000045]</msg>
<status status="PASS" starttime="20201030 15:56:18.459" endtime="20201030 15:56:18.461"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.454" endtime="20201030 15:56:18.462"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:18.466" endtime="20201030 15:56:18.485"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.464" endtime="20201030 15:56:18.486"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.463" endtime="20201030 15:56:18.486"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.080" endtime="20201030 15:56:18.486"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.080" endtime="20201030 15:56:18.487"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:18.496" endtime="20201030 15:56:18.535"></status>
</kw>
<msg timestamp="20201030 15:56:18.535" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:18.494" endtime="20201030 15:56:18.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:18.538" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:18.536" endtime="20201030 15:56:18.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:18.539" endtime="20201030 15:56:18.540"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.491" endtime="20201030 15:56:18.541"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.489" endtime="20201030 15:56:18.541"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:18.548" endtime="20201030 15:56:18.834"></status>
</kw>
<msg timestamp="20201030 15:56:18.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025705514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026070708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:18.547" endtime="20201030 15:56:18.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:18.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025705514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026070708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:18.839" endtime="20201030 15:56:18.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:18.847" endtime="20201030 15:56:18.849"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.544" endtime="20201030 15:56:18.849"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.542" endtime="20201030 15:56:18.850"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:18.854" level="INFO">${RESULT} = [{'diff': 0.0003651940000000027}, {'diff': 0.00035961100000000273}, {'diff': 0.0003563889999999986}, {'diff': 0.0003581799999999996}, {'diff': 0.0003853060000000019}, {'diff': 0.00035677799999999857},...</msg>
<status status="PASS" starttime="20201030 15:56:18.850" endtime="20201030 15:56:18.854"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:18.858" level="INFO">${ACCURACY} = {'diff': [0.0003651940000000027, 0.00035961100000000273, 0.0003563889999999986, 0.0003581799999999996, 0.0003853060000000019, 0.00035677799999999857, 0.00035775000000000043, 0.0003854309999999986, 0.0...</msg>
<status status="PASS" starttime="20201030 15:56:18.855" endtime="20201030 15:56:18.858"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:18.863" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201030 15:56:18.862" endtime="20201030 15:56:18.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:18.865" level="INFO">VALUE: [0.0003651940000000027, 0.00035961100000000273, 0.0003563889999999986, 0.0003581799999999996, 0.0003853060000000019, 0.00035677799999999857, 0.00035775000000000043, 0.0003854309999999986, 0.000356167000000001, 0.0003586809999999996, 0.00035643000000000133, 0.00038604199999999964, 0.0003574860000000006, 0.00035723600000000036, 0.0003604450000000044, 0.00036066600000000254, 0.00035677800000000204, 0.00035897299999999854, 0.00038631999999999556, 0.00038606900000000277, 0.0003590140000000047, 0.00035733300000000134, 0.00035876400000000447, 0.00035711100000000023, 0.00035887500000000155, 0.00035952799999999785, 0.00038540299999999944, 0.000358457999999999, 0.0003863200000000025, 0.0003854859999999974, 0.00036091599999999585, 0.00035611099999999923, 0.0003594160000000013, 0.0003857910000000034, 0.00036048600000000014, 0.00035842999999999986, 0.0003608339999999974, 0.00038566699999999926, 0.0003575549999999955, 0.00036087500000000355, 0.0003594449999999999, 0.00036026299999999956, 0.00035737500000000005, 0.0003578340000000013, 0.00035974999999999896, 0.00035777700000000356, 0.0003862499999999977, 0.00035941700000000076, 0.00035848599999999814, 0.00036074999999999996]</msg>
<status status="PASS" starttime="20201030 15:56:18.864" endtime="20201030 15:56:18.867"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.859" endtime="20201030 15:56:18.867"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:18.871" endtime="20201030 15:56:18.891"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.870" endtime="20201030 15:56:18.892"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.869" endtime="20201030 15:56:18.892"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.487" endtime="20201030 15:56:18.892"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.487" endtime="20201030 15:56:18.892"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:18.901" endtime="20201030 15:56:18.936"></status>
</kw>
<msg timestamp="20201030 15:56:18.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:18.900" endtime="20201030 15:56:18.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:18.939" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:18.938" endtime="20201030 15:56:18.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:18.940" endtime="20201030 15:56:18.942"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.897" endtime="20201030 15:56:18.943"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.895" endtime="20201030 15:56:18.943"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:18.950" endtime="20201030 15:56:19.236"></status>
</kw>
<msg timestamp="20201030 15:56:19.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021865292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022228653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:18.948" endtime="20201030 15:56:19.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:19.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021865292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022228653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:19.240" endtime="20201030 15:56:19.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:19.248" endtime="20201030 15:56:19.250"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.946" endtime="20201030 15:56:19.250"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.944" endtime="20201030 15:56:19.251"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:19.255" level="INFO">${RESULT} = [{'diff': 0.00036336099999999955}, {'diff': 0.00038498600000000036}, {'diff': 0.0003604030000000022}, {'diff': 0.0003585829999999991}, {'diff': 0.0003579159999999998}, {'diff': 0.0003566249999999993},...</msg>
<status status="PASS" starttime="20201030 15:56:19.252" endtime="20201030 15:56:19.255"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:19.260" level="INFO">${ACCURACY} = {'diff': [0.00036336099999999955, 0.00038498600000000036, 0.0003604030000000022, 0.0003585829999999991, 0.0003579159999999998, 0.0003566249999999993, 0.0003584020000000007, 0.0003850420000000021, 0.00...</msg>
<status status="PASS" starttime="20201030 15:56:19.256" endtime="20201030 15:56:19.260"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:19.265" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201030 15:56:19.264" endtime="20201030 15:56:19.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:19.267" level="INFO">VALUE: [0.00036336099999999955, 0.00038498600000000036, 0.0003604030000000022, 0.0003585829999999991, 0.0003579159999999998, 0.0003566249999999993, 0.0003584020000000007, 0.0003850420000000021, 0.00038526399999999975, 0.00038526399999999975, 0.0003577770000000001, 0.0003587220000000023, 0.00035801400000000025, 0.00035783300000000184, 0.00035641700000000123, 0.000356167000000001, 0.0003859719999999983, 0.000357554999999999, 0.0003575829999999981, 0.00035886200000000146, 0.0003593610000000025, 0.00035920799999999975, 0.00035843099999999933, 0.000385207999999998, 0.00036074999999999996, 0.0003604450000000009, 0.00038566699999999926, 0.00038512500000000005, 0.0003562920000000011, 0.0003587229999999983, 0.0003572500000000034, 0.00035633300000000034, 0.00035870799999999925, 0.0003604030000000022, 0.0003581809999999991, 0.00035804200000000286, 0.00035766599999999954, 0.00035920799999999975, 0.00038529200000000235, 0.00035773600000000433, 0.00035887500000000155, 0.0003572779999999956, 0.00035855500000000345, 0.00035961100000000273, 0.00036024999999999946, 0.0003561379999999989, 0.00036026399999999903, 0.00038612500000000105, 0.00035859700000000216, 0.00035965300000000144]</msg>
<status status="PASS" starttime="20201030 15:56:19.266" endtime="20201030 15:56:19.268"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.261" endtime="20201030 15:56:19.269"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:19.273" endtime="20201030 15:56:19.292"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.271" endtime="20201030 15:56:19.293"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.270" endtime="20201030 15:56:19.293"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.893" endtime="20201030 15:56:19.294"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.893" endtime="20201030 15:56:19.294"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:19.303" endtime="20201030 15:56:19.339"></status>
</kw>
<msg timestamp="20201030 15:56:19.340" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:19.301" endtime="20201030 15:56:19.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:19.343" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:19.341" endtime="20201030 15:56:19.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:19.344" endtime="20201030 15:56:19.346"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.298" endtime="20201030 15:56:19.346"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.296" endtime="20201030 15:56:19.347"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:19.353" endtime="20201030 15:56:19.642"></status>
</kw>
<msg timestamp="20201030 15:56:19.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022443806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022826806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:19.352" endtime="20201030 15:56:19.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:19.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022443806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022826806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:19.646" endtime="20201030 15:56:19.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:19.654" endtime="20201030 15:56:19.656"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.349" endtime="20201030 15:56:19.657"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.347" endtime="20201030 15:56:19.657"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:19.661" level="INFO">${RESULT} = [{'diff': 0.0003830000000000014}, {'diff': 0.0003849169999999985}, {'diff': 0.0003592219999999993}, {'diff': 0.00035641700000000123}, {'diff': 0.000359667000000001}, {'diff': 0.00036034700000000044}, ...</msg>
<status status="PASS" starttime="20201030 15:56:19.658" endtime="20201030 15:56:19.662"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:19.665" level="INFO">${ACCURACY} = {'diff': [0.0003830000000000014, 0.0003849169999999985, 0.0003592219999999993, 0.00035641700000000123, 0.000359667000000001, 0.00036034700000000044, 0.0003600550000000015, 0.00035795900000000144, 0.00...</msg>
<status status="PASS" starttime="20201030 15:56:19.662" endtime="20201030 15:56:19.666"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:19.670" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201030 15:56:19.669" endtime="20201030 15:56:19.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:19.673" level="INFO">VALUE: [0.0003830000000000014, 0.0003849169999999985, 0.0003592219999999993, 0.00035641700000000123, 0.000359667000000001, 0.00036034700000000044, 0.0003600550000000015, 0.00035795900000000144, 0.00035961099999999926, 0.00035779199999999914, 0.0003568889999999991, 0.00035951400000000175, 0.00035843099999999933, 0.0003583619999999975, 0.00035669400000000115, 0.00035837500000000105, 0.000359667000000001, 0.00035822300000000126, 0.0003862500000000012, 0.00038552799999999957, 0.0003559999999999987, 0.0003593470000000029, 0.00036043000000000186, 0.0003596939999999972, 0.0003575419999999954, 0.00038612500000000105, 0.0003606940000000017, 0.0003560690000000005, 0.0003577769999999966, 0.0003566389999999989, 0.0003857079999999985, 0.00035641699999999776, 0.00035609699999999966, 0.00035683300000000084, 0.0003596940000000007, 0.0003861520000000007, 0.0003593050000000042, 0.0003605549999999985, 0.00035740300000000613, 0.0003849870000000033, 0.000356457999999997, 0.0003602359999999999, 0.00035887500000000155, 0.0003857639999999968, 0.0003564029999999982, 0.0003861520000000007, 0.0003596390000000019, 0.0003606940000000017, 0.00035650000000000265, 0.0003563060000000007]</msg>
<status status="PASS" starttime="20201030 15:56:19.671" endtime="20201030 15:56:19.673"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.666" endtime="20201030 15:56:19.674"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:19.678" endtime="20201030 15:56:19.698"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.676" endtime="20201030 15:56:19.698"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.675" endtime="20201030 15:56:19.698"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.295" endtime="20201030 15:56:19.699"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.294" endtime="20201030 15:56:19.699"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:19.708" endtime="20201030 15:56:19.751"></status>
</kw>
<msg timestamp="20201030 15:56:19.751" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:19.707" endtime="20201030 15:56:19.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:19.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:19.752" endtime="20201030 15:56:19.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:19.755" endtime="20201030 15:56:19.757"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.704" endtime="20201030 15:56:19.757"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.702" endtime="20201030 15:56:19.758"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:19.765" endtime="20201030 15:56:20.051"></status>
</kw>
<msg timestamp="20201030 15:56:20.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029054181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029413833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:19.763" endtime="20201030 15:56:20.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:20.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029054181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029413833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:20.055" endtime="20201030 15:56:20.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:20.063" endtime="20201030 15:56:20.065"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.760" endtime="20201030 15:56:20.066"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.758" endtime="20201030 15:56:20.066"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:20.070" level="INFO">${RESULT} = [{'diff': 0.00035965200000000197}, {'diff': 0.0003583199999999988}, {'diff': 0.00035848599999999814}, {'diff': 0.0003580829999999986}, {'diff': 0.0003855560000000022}, {'diff': 0.0003856390000000001},...</msg>
<status status="PASS" starttime="20201030 15:56:20.067" endtime="20201030 15:56:20.070"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:20.074" level="INFO">${ACCURACY} = {'diff': [0.00035965200000000197, 0.0003583199999999988, 0.00035848599999999814, 0.0003580829999999986, 0.0003855560000000022, 0.0003856390000000001, 0.0003860829999999954, 0.00035843099999999933, 0.0...</msg>
<status status="PASS" starttime="20201030 15:56:20.071" endtime="20201030 15:56:20.075"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:20.079" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201030 15:56:20.078" endtime="20201030 15:56:20.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:20.082" level="INFO">VALUE: [0.00035965200000000197, 0.0003583199999999988, 0.00035848599999999814, 0.0003580829999999986, 0.0003855560000000022, 0.0003856390000000001, 0.0003860829999999954, 0.00035843099999999933, 0.0003581250000000008, 0.0003584030000000002, 0.00035607, 0.0003857640000000037, 0.00038488899999999937, 0.00036056999999999756, 0.0003595140000000052, 0.00038523599999999714, 0.0003591390000000014, 0.0003583890000000006, 0.0003566389999999989, 0.0003578050000000027, 0.00036044400000000143, 0.00035943100000000033, 0.00035700000000000315, 0.0003573340000000008, 0.00035883300000000284, 0.0003566939999999977, 0.00035847199999999857, 0.0003593340000000028, 0.00036005600000000443, 0.0003608340000000043, 0.00036086099999999705, 0.0003589999999999982, 0.00036059800000000364, 0.00035715299999999894, 0.00038530500000000245, 0.00035887500000000155, 0.00035948599999999914, 0.00038519500000000484, 0.00035798599999999764, 0.00038572199999999807, 0.00038519500000000484, 0.0003586250000000013, 0.00035672200000000376, 0.00035947199999999957, 0.00035738800000000015, 0.0003608749999999966, 0.00035952799999999785, 0.00038583299999999515, 0.0003563339999999998, 0.0003571940000000051]</msg>
<status status="PASS" starttime="20201030 15:56:20.080" endtime="20201030 15:56:20.083"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.075" endtime="20201030 15:56:20.084"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:20.088" endtime="20201030 15:56:20.107"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.086" endtime="20201030 15:56:20.108"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.085" endtime="20201030 15:56:20.108"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.700" endtime="20201030 15:56:20.108"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.699" endtime="20201030 15:56:20.109"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:20.118" endtime="20201030 15:56:20.152"></status>
</kw>
<msg timestamp="20201030 15:56:20.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:20.116" endtime="20201030 15:56:20.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:20.155" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:20.154" endtime="20201030 15:56:20.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:20.156" endtime="20201030 15:56:20.158"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.114" endtime="20201030 15:56:20.159"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.111" endtime="20201030 15:56:20.159"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:20.166" endtime="20201030 15:56:20.452"></status>
</kw>
<msg timestamp="20201030 15:56:20.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021403958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021785486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:20.165" endtime="20201030 15:56:20.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:20.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021403958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021785486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:20.456" endtime="20201030 15:56:20.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:20.464" endtime="20201030 15:56:20.466"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.162" endtime="20201030 15:56:20.467"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.160" endtime="20201030 15:56:20.467"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:20.471" level="INFO">${RESULT} = [{'diff': 0.00038152799999999903}, {'diff': 0.0003569999999999997}, {'diff': 0.0003583749999999976}, {'diff': 0.000358667}, {'diff': 0.0003857079999999985}, {'diff': 0.00035627700000000206}, {'diff': ...</msg>
<status status="PASS" starttime="20201030 15:56:20.468" endtime="20201030 15:56:20.471"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:20.476" level="INFO">${ACCURACY} = {'diff': [0.00038152799999999903, 0.0003569999999999997, 0.0003583749999999976, 0.000358667, 0.0003857079999999985, 0.00035627700000000206, 0.0003851519999999997, 0.0003584860000000016, 0.000359306000...</msg>
<status status="PASS" starttime="20201030 15:56:20.472" endtime="20201030 15:56:20.477"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:20.481" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201030 15:56:20.480" endtime="20201030 15:56:20.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:20.483" level="INFO">VALUE: [0.00038152799999999903, 0.0003569999999999997, 0.0003583749999999976, 0.000358667, 0.0003857079999999985, 0.00035627700000000206, 0.0003851519999999997, 0.0003584860000000016, 0.0003593060000000002, 0.0003570409999999989, 0.00038579200000000285, 0.00036052799999999885, 0.0003850139999999995, 0.00035688799999999965, 0.00035880500000000023, 0.00035761100000000073, 0.0003563190000000008, 0.0003582359999999979, 0.0003573610000000005, 0.00038512500000000005, 0.0003597089999999997, 0.0003598330000000004, 0.00036019500000000065, 0.00038623599999999814, 0.0003562920000000011, 0.0003596800000000011, 0.000359070000000003, 0.0003863750000000013, 0.00036048600000000014, 0.00035680499999999477, 0.0003854580000000052, 0.0003564860000000031, 0.00038572199999999807, 0.000359458, 0.00036008299999999716, 0.00035723600000000383, 0.00038604199999999617, 0.0003568340000000003, 0.00035787500000000055, 0.00038609699999999497, 0.0003586939999999997, 0.00038588900000000037, 0.0003855550000000027, 0.000358181000000006, 0.00035677800000000204, 0.0003852780000000028, 0.0003851389999999996, 0.0003567359999999964, 0.0003600969999999967, 0.00035915300000000094]</msg>
<status status="PASS" starttime="20201030 15:56:20.482" endtime="20201030 15:56:20.488"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.477" endtime="20201030 15:56:20.489"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:20.493" endtime="20201030 15:56:20.512"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.491" endtime="20201030 15:56:20.513"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.490" endtime="20201030 15:56:20.513"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.110" endtime="20201030 15:56:20.514"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.109" endtime="20201030 15:56:20.514"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:20.523" endtime="20201030 15:56:20.559"></status>
</kw>
<msg timestamp="20201030 15:56:20.559" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:20.521" endtime="20201030 15:56:20.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:20.562" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:20.560" endtime="20201030 15:56:20.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:20.563" endtime="20201030 15:56:20.565"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.519" endtime="20201030 15:56:20.566"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.516" endtime="20201030 15:56:20.566"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:20.573" endtime="20201030 15:56:20.860"></status>
</kw>
<msg timestamp="20201030 15:56:20.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023273819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023644472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:20.571" endtime="20201030 15:56:20.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:20.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023273819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023644472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:20.865" endtime="20201030 15:56:20.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:20.873" endtime="20201030 15:56:20.875"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.568" endtime="20201030 15:56:20.876"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.567" endtime="20201030 15:56:20.876"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:20.880" level="INFO">${RESULT} = [{'diff': 0.00037065299999999857}, {'diff': 0.00035941700000000076}, {'diff': 0.00035811099999999776}, {'diff': 0.00036013799999999943}, {'diff': 0.00038573599999999764}, {'diff': 0.000359610999999999...</msg>
<status status="PASS" starttime="20201030 15:56:20.877" endtime="20201030 15:56:20.880"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:20.884" level="INFO">${ACCURACY} = {'diff': [0.00037065299999999857, 0.00035941700000000076, 0.00035811099999999776, 0.00036013799999999943, 0.00038573599999999764, 0.00035961099999999926, 0.00035880500000000023, 0.00038516699999999876...</msg>
<status status="PASS" starttime="20201030 15:56:20.881" endtime="20201030 15:56:20.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:20.889" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201030 15:56:20.888" endtime="20201030 15:56:20.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:20.891" level="INFO">VALUE: [0.00037065299999999857, 0.00035941700000000076, 0.00035811099999999776, 0.00036013799999999943, 0.00038573599999999764, 0.00035961099999999926, 0.00035880500000000023, 0.00038516699999999876, 0.0003851110000000005, 0.00035973700000000233, 0.0003578059999999987, 0.00035819499999999865, 0.00035765199999999997, 0.00038545799999999825, 0.0003610139999999998, 0.00038562500000000055, 0.00035834699999999844, 0.0003594589999999995, 0.00035847200000000204, 0.0003560280000000013, 0.0003568889999999991, 0.0003574860000000006, 0.0003588329999999959, 0.0003566939999999977, 0.00038523599999999714, 0.0003584720000000055, 0.0003593199999999963, 0.00035605500000000095, 0.0003564860000000031, 0.00038577799999999635, 0.00036091700000000226, 0.000360458000000001, 0.00035911100000000223, 0.00038613800000000115, 0.0003604030000000022, 0.000358555999999996, 0.0003858609999999943, 0.0003586939999999997, 0.00035644500000000384, 0.0003849299999999986, 0.00035772200000000476, 0.00035797199999999807, 0.000385305999999995, 0.0003577920000000026, 0.0003561389999999984, 0.0003605139999999993, 0.00038516699999999876, 0.0003609580000000015, 0.00036043100000000133, 0.00036065300000000244]</msg>
<status status="PASS" starttime="20201030 15:56:20.890" endtime="20201030 15:56:20.892"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.885" endtime="20201030 15:56:20.893"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:20.897" endtime="20201030 15:56:20.916"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.895" endtime="20201030 15:56:20.917"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.894" endtime="20201030 15:56:20.917"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.515" endtime="20201030 15:56:20.917"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.514" endtime="20201030 15:56:20.918"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:20.927" endtime="20201030 15:56:20.967"></status>
</kw>
<msg timestamp="20201030 15:56:20.967" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:20.925" endtime="20201030 15:56:20.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:20.970" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:20.968" endtime="20201030 15:56:20.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:20.971" endtime="20201030 15:56:20.973"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.922" endtime="20201030 15:56:20.973"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.920" endtime="20201030 15:56:20.974"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:20.980" endtime="20201030 15:56:21.266"></status>
</kw>
<msg timestamp="20201030 15:56:21.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026362722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026740458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:20.979" endtime="20201030 15:56:21.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:21.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026362722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026740458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:21.270" endtime="20201030 15:56:21.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:21.278" endtime="20201030 15:56:21.280"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.976" endtime="20201030 15:56:21.280"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.974" endtime="20201030 15:56:21.281"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:21.285" level="INFO">${RESULT} = [{'diff': 0.00037773600000000004}, {'diff': 0.00035777799999999957}, {'diff': 0.00036079199999999867}, {'diff': 0.00038490199999999947}, {'diff': 0.00036074999999999996}, {'diff': 0.000356472999999999...</msg>
<status status="PASS" starttime="20201030 15:56:21.282" endtime="20201030 15:56:21.285"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:21.289" level="INFO">${ACCURACY} = {'diff': [0.00037773600000000004, 0.00035777799999999957, 0.00036079199999999867, 0.00038490199999999947, 0.00036074999999999996, 0.0003564729999999995, 0.00035741600000000276, 0.00035638799999999915,...</msg>
<status status="PASS" starttime="20201030 15:56:21.286" endtime="20201030 15:56:21.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:21.294" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201030 15:56:21.293" endtime="20201030 15:56:21.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:21.296" level="INFO">VALUE: [0.00037773600000000004, 0.00035777799999999957, 0.00036079199999999867, 0.00038490199999999947, 0.00036074999999999996, 0.0003564729999999995, 0.00035741600000000276, 0.00035638799999999915, 0.00038536099999999726, 0.0003859720000000018, 0.0003571799999999986, 0.00035745900000000094, 0.00035727799999999907, 0.000385514, 0.0003576250000000003, 0.0003857639999999968, 0.0003565549999999945, 0.0003587219999999988, 0.00035615299999999794, 0.00038512500000000005, 0.00035772200000000476, 0.0003859859999999979, 0.00038622199999999857, 0.00035705600000000143, 0.00035715299999999894, 0.00035897199999999907, 0.00036113899999999644, 0.0003856529999999997, 0.0003857640000000037, 0.00038586100000000123, 0.0003573470000000009, 0.00036074999999999996, 0.000384916000000006, 0.00035908400000000257, 0.0003578340000000013, 0.0003593890000000016, 0.00035909800000000214, 0.0003610559999999985, 0.0003591810000000001, 0.00035776400000000347, 0.00035819499999999865, 0.0003591810000000001, 0.00035926400000000497, 0.0003861390000000006, 0.00036044499999999396, 0.0003562359999999959, 0.00038562500000000055, 0.0003599999999999992, 0.0003595689999999971, 0.00035787500000000055]</msg>
<status status="PASS" starttime="20201030 15:56:21.295" endtime="20201030 15:56:21.298"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.290" endtime="20201030 15:56:21.298"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:21.302" endtime="20201030 15:56:21.322"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.301" endtime="20201030 15:56:21.323"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.300" endtime="20201030 15:56:21.323"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.918" endtime="20201030 15:56:21.323"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.918" endtime="20201030 15:56:21.323"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:21.333" endtime="20201030 15:56:21.368"></status>
</kw>
<msg timestamp="20201030 15:56:21.369" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:21.331" endtime="20201030 15:56:21.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:21.371" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:21.370" endtime="20201030 15:56:21.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:21.373" endtime="20201030 15:56:21.374"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.328" endtime="20201030 15:56:21.375"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.326" endtime="20201030 15:56:21.376"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:21.384" endtime="20201030 15:56:21.672"></status>
</kw>
<msg timestamp="20201030 15:56:21.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022429986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022800792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:21.383" endtime="20201030 15:56:21.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:21.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022429986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022800792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:21.676" endtime="20201030 15:56:21.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:21.684" endtime="20201030 15:56:21.686"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.379" endtime="20201030 15:56:21.687"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.377" endtime="20201030 15:56:21.687"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:21.691" level="INFO">${RESULT} = [{'diff': 0.0003708060000000013}, {'diff': 0.00035829100000000016}, {'diff': 0.0003579159999999998}, {'diff': 0.0003560279999999978}, {'diff': 0.0003583890000000006}, {'diff': 0.0003849300000000021}, ...</msg>
<status status="PASS" starttime="20201030 15:56:21.688" endtime="20201030 15:56:21.691"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:21.696" level="INFO">${ACCURACY} = {'diff': [0.0003708060000000013, 0.00035829100000000016, 0.0003579159999999998, 0.0003560279999999978, 0.0003583890000000006, 0.0003849300000000021, 0.000360361, 0.0003593890000000016, 0.0003604999999...</msg>
<status status="PASS" starttime="20201030 15:56:21.692" endtime="20201030 15:56:21.696"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:21.701" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201030 15:56:21.700" endtime="20201030 15:56:21.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:21.703" level="INFO">VALUE: [0.0003708060000000013, 0.00035829100000000016, 0.0003579159999999998, 0.0003560279999999978, 0.0003583890000000006, 0.0003849300000000021, 0.000360361, 0.0003593890000000016, 0.0003604999999999997, 0.0003599580000000005, 0.00035737500000000005, 0.00035743099999999833, 0.000355972999999999, 0.0003856390000000001, 0.00038540299999999944, 0.0003855550000000027, 0.0003595420000000009, 0.0003595830000000001, 0.000384820000000001, 0.0003576799999999991, 0.0003861110000000015, 0.00035929100000000116, 0.0003563609999999995, 0.00038605499999999973, 0.00035594400000000387, 0.0003567359999999964, 0.0003579860000000046, 0.0003582500000000044, 0.00035797299999999754, 0.00035605600000000043, 0.00035973699999999886, 0.0003590689999999966, 0.00038558300000000184, 0.0003850560000000017, 0.00035893099999999983, 0.0003606250000000033, 0.0003594019999999948, 0.0003589999999999982, 0.0003583340000000018, 0.00035974999999999896, 0.00035991700000000126, 0.0003860829999999954, 0.000356166000000005, 0.0003588890000000011, 0.0003859719999999983, 0.0003592920000000041, 0.0003559590000000029, 0.00036097200000000107, 0.00035919499999999965, 0.00035608399999999957]</msg>
<status status="PASS" starttime="20201030 15:56:21.702" endtime="20201030 15:56:21.704"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.697" endtime="20201030 15:56:21.705"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:21.709" endtime="20201030 15:56:21.728"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.707" endtime="20201030 15:56:21.729"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.706" endtime="20201030 15:56:21.729"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.324" endtime="20201030 15:56:21.729"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.324" endtime="20201030 15:56:21.730"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:21.739" endtime="20201030 15:56:21.775"></status>
</kw>
<msg timestamp="20201030 15:56:21.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:21.737" endtime="20201030 15:56:21.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:21.778" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:21.777" endtime="20201030 15:56:21.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:21.779" endtime="20201030 15:56:21.781"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.734" endtime="20201030 15:56:21.781"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.732" endtime="20201030 15:56:21.782"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:21.789" endtime="20201030 15:56:22.076"></status>
</kw>
<msg timestamp="20201030 15:56:22.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023181958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023541153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:21.787" endtime="20201030 15:56:22.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:22.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023181958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023541153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:22.080" endtime="20201030 15:56:22.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:22.089" endtime="20201030 15:56:22.090"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.784" endtime="20201030 15:56:22.091"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.783" endtime="20201030 15:56:22.092"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:22.096" level="INFO">${RESULT} = [{'diff': 0.00035919499999999965}, {'diff': 0.00038602800000000007}, {'diff': 0.0003850689999999983}, {'diff': 0.000357666999999999}, {'diff': 0.00036074999999999996}, {'diff': 0.00035723600000000036}...</msg>
<status status="PASS" starttime="20201030 15:56:22.092" endtime="20201030 15:56:22.096"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:22.100" level="INFO">${ACCURACY} = {'diff': [0.00035919499999999965, 0.00038602800000000007, 0.0003850689999999983, 0.000357666999999999, 0.00036074999999999996, 0.00035723600000000036, 0.0003577920000000026, 0.0003586380000000014, 0.0...</msg>
<status status="PASS" starttime="20201030 15:56:22.097" endtime="20201030 15:56:22.100"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:22.104" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201030 15:56:22.103" endtime="20201030 15:56:22.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:22.107" level="INFO">VALUE: [0.00035919499999999965, 0.00038602800000000007, 0.0003850689999999983, 0.000357666999999999, 0.00036074999999999996, 0.00035723600000000036, 0.0003577920000000026, 0.0003586380000000014, 0.000385917000000003, 0.0003585700000000025, 0.00036024999999999946, 0.000356763999999999, 0.0003559440000000004, 0.00035659700000000016, 0.0003572219999999973, 0.0003853060000000019, 0.0003849439999999982, 0.000360361, 0.00035650000000000265, 0.00035841699999999976, 0.00035663900000000234, 0.00035822300000000473, 0.00035926400000000497, 0.00035623600000000283, 0.0003583610000000015, 0.00038631999999999556, 0.0003852629999999968, 0.0003575270000000033, 0.0003558750000000055, 0.0003855000000000039, 0.0003579170000000062, 0.0003596250000000023, 0.00038490199999999947, 0.00035930499999999727, 0.00035861100000000173, 0.0003576250000000003, 0.00035659799999999964, 0.0003592500000000054, 0.00035920900000000616, 0.0003608060000000052, 0.0003604999999999997, 0.000386207999999999, 0.00035674999999999596, 0.0003559159999999978, 0.0003597219999999998, 0.0003570139999999958, 0.0003575139999999963, 0.0003591109999999953, 0.000386207999999999, 0.0003586939999999997]</msg>
<status status="PASS" starttime="20201030 15:56:22.106" endtime="20201030 15:56:22.109"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.101" endtime="20201030 15:56:22.110"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:22.115" endtime="20201030 15:56:22.136"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.113" endtime="20201030 15:56:22.137"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.112" endtime="20201030 15:56:22.137"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.730" endtime="20201030 15:56:22.137"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.730" endtime="20201030 15:56:22.138"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:22.147" endtime="20201030 15:56:22.182"></status>
</kw>
<msg timestamp="20201030 15:56:22.182" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:22.145" endtime="20201030 15:56:22.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:22.185" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:22.183" endtime="20201030 15:56:22.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:22.186" endtime="20201030 15:56:22.188"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.142" endtime="20201030 15:56:22.188"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.140" endtime="20201030 15:56:22.189"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:22.195" endtime="20201030 15:56:22.482"></status>
</kw>
<msg timestamp="20201030 15:56:22.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022550097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022925667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:22.194" endtime="20201030 15:56:22.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:22.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022550097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022925667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:22.487" endtime="20201030 15:56:22.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:22.495" endtime="20201030 15:56:22.497"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.191" endtime="20201030 15:56:22.497"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.189" endtime="20201030 15:56:22.498"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:22.502" level="INFO">${RESULT} = [{'diff': 0.0003755699999999987}, {'diff': 0.0003579860000000011}, {'diff': 0.0003606800000000021}, {'diff': 0.0003583470000000019}, {'diff': 0.00035933399999999935}, {'diff': 0.000356167000000001}, {...</msg>
<status status="PASS" starttime="20201030 15:56:22.499" endtime="20201030 15:56:22.502"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:22.506" level="INFO">${ACCURACY} = {'diff': [0.0003755699999999987, 0.0003579860000000011, 0.0003606800000000021, 0.0003583470000000019, 0.00035933399999999935, 0.000356167000000001, 0.00035615199999999847, 0.00036051400000000275, 0.00...</msg>
<status status="PASS" starttime="20201030 15:56:22.503" endtime="20201030 15:56:22.506"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:22.511" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201030 15:56:22.510" endtime="20201030 15:56:22.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:22.513" level="INFO">VALUE: [0.0003755699999999987, 0.0003579860000000011, 0.0003606800000000021, 0.0003583470000000019, 0.00035933399999999935, 0.000356167000000001, 0.00035615199999999847, 0.00036051400000000275, 0.00035732000000000125, 0.00035901400000000125, 0.0003564159999999983, 0.0003583199999999988, 0.0003590420000000004, 0.00035836200000000096, 0.00035797199999999807, 0.0003848190000000015, 0.0003606390000000029, 0.00038616699999999976, 0.0003605970000000007, 0.00035623600000000283, 0.00035893099999999983, 0.00038538899999999987, 0.00036029200000000164, 0.00038604100000000363, 0.0003595139999999983, 0.0003855550000000027, 0.00038606899999999583, 0.0003597779999999981, 0.00035611099999999923, 0.00035976399999999853, 0.00038544499999999815, 0.000384804999999995, 0.0003590969999999957, 0.00038477699999999587, 0.0003587779999999971, 0.0003562920000000011, 0.0003606529999999955, 0.00035869499999999915, 0.0003596810000000006, 0.0003592359999999989, 0.0003854439999999987, 0.000360346999999997, 0.0003583610000000015, 0.00035931899999999684, 0.00035820799999999875, 0.00035998599999999964, 0.00035852799999999685, 0.0003851389999999996, 0.00038501400000000296, 0.0003593339999999959]</msg>
<status status="PASS" starttime="20201030 15:56:22.512" endtime="20201030 15:56:22.515"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.507" endtime="20201030 15:56:22.516"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:22.520" endtime="20201030 15:56:22.539"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.518" endtime="20201030 15:56:22.540"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.517" endtime="20201030 15:56:22.540"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.138" endtime="20201030 15:56:22.540"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.138" endtime="20201030 15:56:22.540"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:22.550" endtime="20201030 15:56:22.588"></status>
</kw>
<msg timestamp="20201030 15:56:22.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:22.548" endtime="20201030 15:56:22.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:22.591" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:22.590" endtime="20201030 15:56:22.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:22.592" endtime="20201030 15:56:22.594"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.545" endtime="20201030 15:56:22.595"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.543" endtime="20201030 15:56:22.595"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:22.602" endtime="20201030 15:56:22.889"></status>
</kw>
<msg timestamp="20201030 15:56:22.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021086194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021452375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:22.600" endtime="20201030 15:56:22.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:22.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021086194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021452375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:22.894" endtime="20201030 15:56:22.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:22.902" endtime="20201030 15:56:22.904"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.598" endtime="20201030 15:56:22.904"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.596" endtime="20201030 15:56:22.905"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:22.909" level="INFO">${RESULT} = [{'diff': 0.00036618100000000015}, {'diff': 0.00036054099999999895}, {'diff': 0.00035924999999999846}, {'diff': 0.0003573889999999996}, {'diff': 0.00035651399999999875}, {'diff': 0.0003565280000000018...</msg>
<status status="PASS" starttime="20201030 15:56:22.906" endtime="20201030 15:56:22.909"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:22.914" level="INFO">${ACCURACY} = {'diff': [0.00036618100000000015, 0.00036054099999999895, 0.00035924999999999846, 0.0003573889999999996, 0.00035651399999999875, 0.0003565280000000018, 0.0003612779999999996, 0.0003863469999999987, 0....</msg>
<status status="PASS" starttime="20201030 15:56:22.910" endtime="20201030 15:56:22.914"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:22.919" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201030 15:56:22.918" endtime="20201030 15:56:22.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:22.922" level="INFO">VALUE: [0.00036618100000000015, 0.00036054099999999895, 0.00035924999999999846, 0.0003573889999999996, 0.00035651399999999875, 0.0003565280000000018, 0.0003612779999999996, 0.0003863469999999987, 0.00036034700000000044, 0.0003851110000000005, 0.0003577220000000013, 0.0003562639999999985, 0.0003585269999999974, 0.00035819499999999865, 0.0003860140000000005, 0.00035677799999999857, 0.0003608750000000001, 0.0003575410000000029, 0.00036086099999999705, 0.00036007000000000053, 0.00038588900000000037, 0.0003858329999999986, 0.00038598600000000136, 0.0003578749999999971, 0.00036026399999999903, 0.00038556900000000227, 0.0003580000000000007, 0.0003608749999999966, 0.00035902799999999735, 0.0003580830000000021, 0.0003569170000000052, 0.00038612500000000105, 0.0003575139999999963, 0.0003864309999999996, 0.0003850560000000017, 0.00038586100000000123, 0.0003851670000000057, 0.00038577699999999687, 0.00038540299999999944, 0.0003570689999999946, 0.0003859299999999996, 0.0003600410000000054, 0.0003853880000000004, 0.00035774999999999696, 0.00035905600000000343, 0.00036061100000000373, 0.00038627799999999685, 0.0003859299999999996, 0.00038551400000000347, 0.0003598470000000034]</msg>
<status status="PASS" starttime="20201030 15:56:22.920" endtime="20201030 15:56:22.922"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.915" endtime="20201030 15:56:22.923"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:22.927" endtime="20201030 15:56:22.946"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.925" endtime="20201030 15:56:22.947"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.924" endtime="20201030 15:56:22.947"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.542" endtime="20201030 15:56:22.947"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.541" endtime="20201030 15:56:22.948"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:22.957" endtime="20201030 15:56:22.991"></status>
</kw>
<msg timestamp="20201030 15:56:22.992" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:22.955" endtime="20201030 15:56:22.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:22.994" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:22.993" endtime="20201030 15:56:22.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:22.995" endtime="20201030 15:56:22.997"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.953" endtime="20201030 15:56:22.998"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.950" endtime="20201030 15:56:22.998"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:23.005" endtime="20201030 15:56:23.293"></status>
</kw>
<msg timestamp="20201030 15:56:23.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020890556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021246528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:23.003" endtime="20201030 15:56:23.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:23.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020890556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021246528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:23.297" endtime="20201030 15:56:23.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:23.306" endtime="20201030 15:56:23.307"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.001" endtime="20201030 15:56:23.308"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.999" endtime="20201030 15:56:23.308"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:23.312" level="INFO">${RESULT} = [{'diff': 0.00035597199999999954}, {'diff': 0.0003573470000000009}, {'diff': 0.00035993000000000136}, {'diff': 0.00038545799999999825}, {'diff': 0.00035805599999999896}, {'diff': 0.0003599170000000012...</msg>
<status status="PASS" starttime="20201030 15:56:23.309" endtime="20201030 15:56:23.313"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:23.316" level="INFO">${ACCURACY} = {'diff': [0.00035597199999999954, 0.0003573470000000009, 0.00035993000000000136, 0.00038545799999999825, 0.00035805599999999896, 0.00035991700000000126, 0.00038504099999999916, 0.0003587779999999971, ...</msg>
<status status="PASS" starttime="20201030 15:56:23.313" endtime="20201030 15:56:23.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:23.321" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201030 15:56:23.320" endtime="20201030 15:56:23.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:23.324" level="INFO">VALUE: [0.00035597199999999954, 0.0003573470000000009, 0.00035993000000000136, 0.00038545799999999825, 0.00035805599999999896, 0.00035991700000000126, 0.00038504099999999916, 0.0003587779999999971, 0.00035619400000000065, 0.0003582640000000005, 0.00035687499999999955, 0.00036084700000000094, 0.00035705600000000143, 0.0003857909999999999, 0.0003568189999999978, 0.0003605969999999972, 0.0003576250000000003, 0.0003598190000000008, 0.00035956900000000055, 0.00035906999999999953, 0.00035879100000000066, 0.0003863889999999974, 0.00035876399999999753, 0.0003854859999999974, 0.0003595969999999997, 0.00035641699999999776, 0.0003595280000000013, 0.0003597079999999968, 0.00038568099999999883, 0.0003564589999999965, 0.0003593340000000028, 0.0003584449999999989, 0.0003857780000000033, 0.0003578890000000001, 0.00035737500000000005, 0.0003847780000000023, 0.00035723600000000383, 0.00035692999999999836, 0.00036080599999999824, 0.0003586529999999935, 0.0003571249999999998, 0.000384820000000001, 0.00038484700000000066, 0.0003609580000000015, 0.0003584160000000003, 0.0003562779999999946, 0.00035998599999999964, 0.0003585830000000026, 0.0003579860000000046, 0.000359054999999997]</msg>
<status status="PASS" starttime="20201030 15:56:23.322" endtime="20201030 15:56:23.325"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.317" endtime="20201030 15:56:23.325"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:23.329" endtime="20201030 15:56:23.349"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.328" endtime="20201030 15:56:23.349"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.326" endtime="20201030 15:56:23.350"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.949" endtime="20201030 15:56:23.350"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.948" endtime="20201030 15:56:23.350"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:23.359" endtime="20201030 15:56:23.398"></status>
</kw>
<msg timestamp="20201030 15:56:23.398" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:23.358" endtime="20201030 15:56:23.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:23.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:23.400" endtime="20201030 15:56:23.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:23.402" endtime="20201030 15:56:23.404"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.355" endtime="20201030 15:56:23.405"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.353" endtime="20201030 15:56:23.405"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:23.412" endtime="20201030 15:56:23.699"></status>
</kw>
<msg timestamp="20201030 15:56:23.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02543325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025816722, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:56:23.410" endtime="20201030 15:56:23.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:23.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02543325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025816722, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:56:23.703" endtime="20201030 15:56:23.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:23.711" endtime="20201030 15:56:23.713"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.407" endtime="20201030 15:56:23.714"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.406" endtime="20201030 15:56:23.714"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:23.718" level="INFO">${RESULT} = [{'diff': 0.0003834719999999993}, {'diff': 0.000358667}, {'diff': 0.00035944399999999696}, {'diff': 0.0003564860000000031}, {'diff': 0.00035912499999999833}, {'diff': 0.0003607360000000004}, {'diff': ...</msg>
<status status="PASS" starttime="20201030 15:56:23.715" endtime="20201030 15:56:23.718"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:23.722" level="INFO">${ACCURACY} = {'diff': [0.0003834719999999993, 0.000358667, 0.00035944399999999696, 0.0003564860000000031, 0.00035912499999999833, 0.0003607360000000004, 0.0003580280000000033, 0.0003589160000000008, 0.000385402999...</msg>
<status status="PASS" starttime="20201030 15:56:23.719" endtime="20201030 15:56:23.723"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:23.727" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201030 15:56:23.726" endtime="20201030 15:56:23.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:23.729" level="INFO">VALUE: [0.0003834719999999993, 0.000358667, 0.00035944399999999696, 0.0003564860000000031, 0.00035912499999999833, 0.0003607360000000004, 0.0003580280000000033, 0.0003589160000000008, 0.00038540299999999944, 0.00036033400000000035, 0.0003593890000000016, 0.000358764000000001, 0.0003856949999999984, 0.00035761099999999726, 0.0003607220000000008, 0.00036009800000000314, 0.00035737500000000005, 0.0003852369999999966, 0.00035993100000000083, 0.00035820799999999875, 0.00035961100000000273, 0.0003601670000000015, 0.000357666999999999, 0.0003859439999999992, 0.000357861000000001, 0.00038572199999999807, 0.00038522199999999757, 0.00038607000000000224, 0.000360667000000002, 0.00036059700000000416, 0.00038495799999999775, 0.00035597199999999607, 0.00035933300000000334, 0.0003850420000000021, 0.0003849299999999986, 0.0003596250000000023, 0.0003566810000000045, 0.0003587359999999984, 0.0003590689999999966, 0.00038572199999999807, 0.000359054999999997, 0.0003576389999999999, 0.0003562500000000024, 0.00035774999999999696, 0.00038572199999999807, 0.000358346999999995, 0.00035605500000000095, 0.00035752799999999585, 0.0003855550000000027, 0.0003595140000000052]</msg>
<status status="PASS" starttime="20201030 15:56:23.728" endtime="20201030 15:56:23.731"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.723" endtime="20201030 15:56:23.732"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:23.736" endtime="20201030 15:56:23.755"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.734" endtime="20201030 15:56:23.756"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.733" endtime="20201030 15:56:23.756"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.351" endtime="20201030 15:56:23.756"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.350" endtime="20201030 15:56:23.757"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:23.766" endtime="20201030 15:56:23.800"></status>
</kw>
<msg timestamp="20201030 15:56:23.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:23.764" endtime="20201030 15:56:23.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:23.803" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:23.802" endtime="20201030 15:56:23.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:23.805" endtime="20201030 15:56:23.806"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.761" endtime="20201030 15:56:23.807"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.759" endtime="20201030 15:56:23.807"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:23.814" endtime="20201030 15:56:24.101"></status>
</kw>
<msg timestamp="20201030 15:56:24.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020901611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021266917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:23.813" endtime="20201030 15:56:24.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:24.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020901611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021266917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:24.105" endtime="20201030 15:56:24.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:24.113" endtime="20201030 15:56:24.115"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.810" endtime="20201030 15:56:24.115"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.808" endtime="20201030 15:56:24.116"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:24.120" level="INFO">${RESULT} = [{'diff': 0.00036530599999999927}, {'diff': 0.0003601529999999985}, {'diff': 0.00035994399999999746}, {'diff': 0.0003562639999999985}, {'diff': 0.0003850559999999982}, {'diff': 0.0003861530000000002},...</msg>
<status status="PASS" starttime="20201030 15:56:24.117" endtime="20201030 15:56:24.120"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:24.125" level="INFO">${ACCURACY} = {'diff': [0.00036530599999999927, 0.0003601529999999985, 0.00035994399999999746, 0.0003562639999999985, 0.0003850559999999982, 0.0003861530000000002, 0.0003859719999999983, 0.00038607000000000224, 0.0...</msg>
<status status="PASS" starttime="20201030 15:56:24.121" endtime="20201030 15:56:24.125"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:24.130" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201030 15:56:24.129" endtime="20201030 15:56:24.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:24.132" level="INFO">VALUE: [0.00036530599999999927, 0.0003601529999999985, 0.00035994399999999746, 0.0003562639999999985, 0.0003850559999999982, 0.0003861530000000002, 0.0003859719999999983, 0.00038607000000000224, 0.00038549999999999696, 0.00038513800000000015, 0.00038588900000000037, 0.00038548600000000086, 0.00038540199999999997, 0.00036029199999999817, 0.00038527699999999984, 0.00035891700000000026, 0.0003858620000000007, 0.0003578059999999987, 0.00035984699999999994, 0.0003573889999999996, 0.00035861100000000173, 0.0003565410000000019, 0.0003571939999999982, 0.0003568190000000013, 0.0003598060000000007, 0.0003590000000000017, 0.0003598060000000007, 0.0003582909999999967, 0.00035840299999999325, 0.00035893099999999983, 0.0003851939999999984, 0.0003573340000000008, 0.00035683300000000084, 0.0003857919999999959, 0.0003573889999999996, 0.0003847640000000027, 0.00035826400000000397, 0.000385820000000002, 0.00036081899999999834, 0.0003563480000000063, 0.00036074999999999996, 0.00035854200000000336, 0.0003598890000000021, 0.0003574029999999992, 0.0003603890000000026, 0.00035787500000000055, 0.0003860970000000019, 0.0003601670000000015, 0.00035881899999999634, 0.0003861530000000002]</msg>
<status status="PASS" starttime="20201030 15:56:24.131" endtime="20201030 15:56:24.133"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.126" endtime="20201030 15:56:24.134"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:24.138" endtime="20201030 15:56:24.157"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.136" endtime="20201030 15:56:24.158"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.135" endtime="20201030 15:56:24.158"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.758" endtime="20201030 15:56:24.158"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.757" endtime="20201030 15:56:24.159"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:24.168" endtime="20201030 15:56:24.201"></status>
</kw>
<msg timestamp="20201030 15:56:24.202" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:24.166" endtime="20201030 15:56:24.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:24.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:24.203" endtime="20201030 15:56:24.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:24.205" endtime="20201030 15:56:24.207"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.163" endtime="20201030 15:56:24.208"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.161" endtime="20201030 15:56:24.208"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:24.215" endtime="20201030 15:56:24.503"></status>
</kw>
<msg timestamp="20201030 15:56:24.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020776347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021152514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:24.213" endtime="20201030 15:56:24.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:24.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020776347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021152514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:24.507" endtime="20201030 15:56:24.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:24.515" endtime="20201030 15:56:24.517"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.211" endtime="20201030 15:56:24.517"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.209" endtime="20201030 15:56:24.518"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:24.522" level="INFO">${RESULT} = [{'diff': 0.00037616700000000017}, {'diff': 0.00035905599999999996}, {'diff': 0.00035855599999999946}, {'diff': 0.000360555999999998}, {'diff': 0.00035791699999999926}, {'diff': 0.0003854439999999987}...</msg>
<status status="PASS" starttime="20201030 15:56:24.519" endtime="20201030 15:56:24.522"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:24.526" level="INFO">${ACCURACY} = {'diff': [0.00037616700000000017, 0.00035905599999999996, 0.00035855599999999946, 0.000360555999999998, 0.00035791699999999926, 0.0003854439999999987, 0.00035719499999999765, 0.0003569159999999988, 0....</msg>
<status status="PASS" starttime="20201030 15:56:24.523" endtime="20201030 15:56:24.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:24.531" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201030 15:56:24.530" endtime="20201030 15:56:24.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:24.533" level="INFO">VALUE: [0.00037616700000000017, 0.00035905599999999996, 0.00035855599999999946, 0.000360555999999998, 0.00035791699999999926, 0.0003854439999999987, 0.00035719499999999765, 0.0003569159999999988, 0.0003854590000000012, 0.00036047200000000057, 0.0003585000000000012, 0.0003598749999999991, 0.00035956900000000055, 0.000359861000000003, 0.0003583610000000015, 0.000358555, 0.0003577770000000001, 0.0003597089999999997, 0.0003850550000000022, 0.0003602359999999999, 0.0003855000000000004, 0.0003583890000000006, 0.0003857079999999985, 0.0003582219999999983, 0.0003577359999999974, 0.0003595000000000022, 0.0003580419999999994, 0.00035955600000000046, 0.0003598199999999968, 0.0003592359999999989, 0.0003854719999999978, 0.00035743099999999833, 0.00036043100000000133, 0.00038634700000000216, 0.00035833300000000234, 0.00035783300000000184, 0.00036076300000000006, 0.0003597089999999997, 0.00035993100000000083, 0.0003850829999999944, 0.00038558300000000184, 0.0003583190000000028, 0.00035805500000000295, 0.000358457999999999, 0.0003605419999999984, 0.0003855970000000014, 0.00035924999999999846, 0.00035645800000000394, 0.00035758400000000107, 0.0003853200000000015]</msg>
<status status="PASS" starttime="20201030 15:56:24.532" endtime="20201030 15:56:24.534"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.527" endtime="20201030 15:56:24.535"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:24.539" endtime="20201030 15:56:24.558"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.537" endtime="20201030 15:56:24.559"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.536" endtime="20201030 15:56:24.559"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.159" endtime="20201030 15:56:24.559"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.159" endtime="20201030 15:56:24.560"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:24.569" endtime="20201030 15:56:24.609"></status>
</kw>
<msg timestamp="20201030 15:56:24.610" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:24.567" endtime="20201030 15:56:24.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:24.612" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:24.611" endtime="20201030 15:56:24.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:24.613" endtime="20201030 15:56:24.615"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.564" endtime="20201030 15:56:24.616"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.562" endtime="20201030 15:56:24.616"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:24.623" endtime="20201030 15:56:24.909"></status>
</kw>
<msg timestamp="20201030 15:56:24.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026632986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026990819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:24.621" endtime="20201030 15:56:24.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:24.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026632986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026990819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:24.913" endtime="20201030 15:56:24.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:24.922" endtime="20201030 15:56:24.923"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.619" endtime="20201030 15:56:24.924"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.617" endtime="20201030 15:56:24.924"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:24.928" level="INFO">${RESULT} = [{'diff': 0.0003578329999999984}, {'diff': 0.0003580829999999986}, {'diff': 0.00035770799999999825}, {'diff': 0.00036006900000000105}, {'diff': 0.00035891700000000026}, {'diff': 0.0003590829999999996}...</msg>
<status status="PASS" starttime="20201030 15:56:24.925" endtime="20201030 15:56:24.929"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:24.933" level="INFO">${ACCURACY} = {'diff': [0.0003578329999999984, 0.0003580829999999986, 0.00035770799999999825, 0.00036006900000000105, 0.00035891700000000026, 0.0003590829999999996, 0.00035729199999999864, 0.0003608330000000014, 0....</msg>
<status status="PASS" starttime="20201030 15:56:24.929" endtime="20201030 15:56:24.933"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:24.937" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201030 15:56:24.936" endtime="20201030 15:56:24.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:24.940" level="INFO">VALUE: [0.0003578329999999984, 0.0003580829999999986, 0.00035770799999999825, 0.00036006900000000105, 0.00035891700000000026, 0.0003590829999999996, 0.00035729199999999864, 0.0003608330000000014, 0.00035744399999999843, 0.00035674999999999943, 0.0003851810000000018, 0.0003578190000000023, 0.00035824999999999746, 0.0003601940000000012, 0.0003588890000000011, 0.00035765299999999944, 0.00035659700000000016, 0.0003609870000000001, 0.00035805600000000243, 0.0003859439999999992, 0.0003575280000000028, 0.0003859169999999995, 0.00036108400000000457, 0.00036052799999999885, 0.0003602779999999986, 0.0003563190000000008, 0.0003860269999999971, 0.00035716599999999904, 0.00035766599999999954, 0.0003865279999999971, 0.0003573060000000017, 0.0003599160000000018, 0.00036020800000000075, 0.0003582219999999983, 0.0003586809999999996, 0.0003857640000000037, 0.0003601120000000027, 0.00035624999999999546, 0.0003581669999999995, 0.0003566940000000046, 0.00038590299999999994, 0.0003563190000000008, 0.00038575000000000415, 0.0003583060000000027, 0.00035793099999999883, 0.00038554199999999567, 0.00038577799999999635, 0.0003604160000000023, 0.0003598060000000042, 0.0003571950000000046]</msg>
<status status="PASS" starttime="20201030 15:56:24.938" endtime="20201030 15:56:24.942"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.934" endtime="20201030 15:56:24.942"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:24.946" endtime="20201030 15:56:24.965"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.944" endtime="20201030 15:56:24.966"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.943" endtime="20201030 15:56:24.966"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.561" endtime="20201030 15:56:24.967"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.560" endtime="20201030 15:56:24.967"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:24.976" endtime="20201030 15:56:25.011"></status>
</kw>
<msg timestamp="20201030 15:56:25.011" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:24.975" endtime="20201030 15:56:25.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:25.014" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:25.013" endtime="20201030 15:56:25.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:25.015" endtime="20201030 15:56:25.017"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.972" endtime="20201030 15:56:25.017"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.969" endtime="20201030 15:56:25.018"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:25.025" endtime="20201030 15:56:25.311"></status>
</kw>
<msg timestamp="20201030 15:56:25.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021329431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021694069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:25.023" endtime="20201030 15:56:25.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:25.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021329431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021694069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:25.315" endtime="20201030 15:56:25.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:25.324" endtime="20201030 15:56:25.325"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.020" endtime="20201030 15:56:25.326"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.018" endtime="20201030 15:56:25.326"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:25.330" level="INFO">${RESULT} = [{'diff': 0.00036463800000000046}, {'diff': 0.00035751399999999975}, {'diff': 0.0003594999999999987}, {'diff': 0.00038556900000000227}, {'diff': 0.0003597359999999994}, {'diff': 0.00035838899999999715...</msg>
<status status="PASS" starttime="20201030 15:56:25.327" endtime="20201030 15:56:25.331"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:25.336" level="INFO">${ACCURACY} = {'diff': [0.00036463800000000046, 0.00035751399999999975, 0.0003594999999999987, 0.00038556900000000227, 0.0003597359999999994, 0.00035838899999999715, 0.0003576800000000026, 0.00038540299999999944, 0...</msg>
<status status="PASS" starttime="20201030 15:56:25.332" endtime="20201030 15:56:25.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:25.340" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201030 15:56:25.339" endtime="20201030 15:56:25.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:25.343" level="INFO">VALUE: [0.00036463800000000046, 0.00035751399999999975, 0.0003594999999999987, 0.00038556900000000227, 0.0003597359999999994, 0.00035838899999999715, 0.0003576800000000026, 0.00038540299999999944, 0.00035630499999999773, 0.00035976399999999853, 0.0003562089999999997, 0.0003588470000000024, 0.00035724999999999993, 0.00035632000000000025, 0.00035607, 0.0003596940000000007, 0.00038570800000000197, 0.00035691700000000173, 0.0003593190000000003, 0.00035626400000000197, 0.00035893099999999983, 0.00038487500000000327, 0.000386110999999998, 0.0003605139999999993, 0.0003571950000000011, 0.00038602800000000007, 0.00035741699999999876, 0.0003570559999999945, 0.00038573599999999764, 0.0003588470000000024, 0.0003850279999999956, 0.00035909700000000266, 0.00035776400000000347, 0.0003602090000000002, 0.0003857090000000049, 0.00035905600000000343, 0.00038580500000000295, 0.0003604999999999997, 0.0003602229999999998, 0.0003853330000000016, 0.00035811100000000123, 0.00038513800000000015, 0.00038616699999999976, 0.0003598340000000033, 0.0003600559999999975, 0.00035880599999999624, 0.000385416999999999, 0.00035804200000000286, 0.0003578470000000014, 0.0003560690000000005]</msg>
<status status="PASS" starttime="20201030 15:56:25.341" endtime="20201030 15:56:25.344"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.337" endtime="20201030 15:56:25.344"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:25.348" endtime="20201030 15:56:25.368"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.347" endtime="20201030 15:56:25.368"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.345" endtime="20201030 15:56:25.369"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.968" endtime="20201030 15:56:25.369"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.967" endtime="20201030 15:56:25.369"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:25.378" endtime="20201030 15:56:25.412"></status>
</kw>
<msg timestamp="20201030 15:56:25.413" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:25.377" endtime="20201030 15:56:25.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:25.415" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:25.414" endtime="20201030 15:56:25.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:25.417" endtime="20201030 15:56:25.418"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.374" endtime="20201030 15:56:25.419"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.372" endtime="20201030 15:56:25.419"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:25.426" endtime="20201030 15:56:25.713"></status>
</kw>
<msg timestamp="20201030 15:56:25.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021080472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021439861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:25.425" endtime="20201030 15:56:25.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:25.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021080472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021439861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:25.718" endtime="20201030 15:56:25.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:25.726" endtime="20201030 15:56:25.728"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.422" endtime="20201030 15:56:25.729"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.420" endtime="20201030 15:56:25.729"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:25.733" level="INFO">${RESULT} = [{'diff': 0.0003593890000000016}, {'diff': 0.00035955600000000046}, {'diff': 0.0003855689999999988}, {'diff': 0.0003601940000000012}, {'diff': 0.00035875000000000143}, {'diff': 0.00035600000000000215}...</msg>
<status status="PASS" starttime="20201030 15:56:25.730" endtime="20201030 15:56:25.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:25.737" level="INFO">${ACCURACY} = {'diff': [0.0003593890000000016, 0.00035955600000000046, 0.0003855689999999988, 0.0003601940000000012, 0.00035875000000000143, 0.00035600000000000215, 0.00038644499999999915, 0.00035652699999999884, 0...</msg>
<status status="PASS" starttime="20201030 15:56:25.734" endtime="20201030 15:56:25.738"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:25.742" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201030 15:56:25.741" endtime="20201030 15:56:25.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:25.745" level="INFO">VALUE: [0.0003593890000000016, 0.00035955600000000046, 0.0003855689999999988, 0.0003601940000000012, 0.00035875000000000143, 0.00035600000000000215, 0.00038644499999999915, 0.00035652699999999884, 0.00035833399999999835, 0.000356569000000001, 0.0003590410000000009, 0.00035994400000000093, 0.0003593879999999987, 0.0003583190000000028, 0.0003568470000000004, 0.0003572080000000012, 0.0003559999999999987, 0.0003579159999999998, 0.0003564999999999992, 0.00038505499999999873, 0.0003855689999999988, 0.0003580549999999995, 0.00035630499999999773, 0.0003860140000000005, 0.0003851939999999984, 0.0003591390000000014, 0.0003588480000000019, 0.0003593470000000029, 0.00038566699999999926, 0.00035644399999999743, 0.00035800000000000415, 0.0003852640000000032, 0.00035759800000000064, 0.00038562500000000055, 0.00035648599999999614, 0.0003594999999999987, 0.00038573599999999764, 0.00035766599999999954, 0.00035859700000000216, 0.00035648599999999614, 0.0003561389999999984, 0.00035761100000000073, 0.000386319000000003, 0.00035855600000000293, 0.0003609030000000027, 0.0003610269999999999, 0.0003589999999999982, 0.00035624999999999546, 0.00035847299999999804, 0.00035605600000000043]</msg>
<status status="PASS" starttime="20201030 15:56:25.743" endtime="20201030 15:56:25.749"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.738" endtime="20201030 15:56:25.750"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:25.754" endtime="20201030 15:56:25.773"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.752" endtime="20201030 15:56:25.774"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.751" endtime="20201030 15:56:25.774"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.370" endtime="20201030 15:56:25.774"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.369" endtime="20201030 15:56:25.775"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:25.784" endtime="20201030 15:56:25.819"></status>
</kw>
<msg timestamp="20201030 15:56:25.820" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:25.782" endtime="20201030 15:56:25.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:25.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:25.821" endtime="20201030 15:56:25.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:25.823" endtime="20201030 15:56:25.825"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.779" endtime="20201030 15:56:25.826"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.777" endtime="20201030 15:56:25.826"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:25.833" endtime="20201030 15:56:26.120"></status>
</kw>
<msg timestamp="20201030 15:56:26.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022499417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022874778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:25.831" endtime="20201030 15:56:26.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:26.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022499417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022874778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:26.124" endtime="20201030 15:56:26.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:26.133" endtime="20201030 15:56:26.135"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.829" endtime="20201030 15:56:26.135"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.827" endtime="20201030 15:56:26.136"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:26.140" level="INFO">${RESULT} = [{'diff': 0.00037536099999999767}, {'diff': 0.0003608610000000005}, {'diff': 0.00035716599999999904}, {'diff': 0.00035633300000000034}, {'diff': 0.0003854439999999987}, {'diff': 0.000385514}, {'diff':...</msg>
<status status="PASS" starttime="20201030 15:56:26.136" endtime="20201030 15:56:26.140"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:26.144" level="INFO">${ACCURACY} = {'diff': [0.00037536099999999767, 0.0003608610000000005, 0.00035716599999999904, 0.00035633300000000034, 0.0003854439999999987, 0.000385514, 0.00035758400000000107, 0.00035929200000000064, 0.000359069...</msg>
<status status="PASS" starttime="20201030 15:56:26.141" endtime="20201030 15:56:26.144"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:26.148" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201030 15:56:26.147" endtime="20201030 15:56:26.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:26.151" level="INFO">VALUE: [0.00037536099999999767, 0.0003608610000000005, 0.00035716599999999904, 0.00035633300000000034, 0.0003854439999999987, 0.000385514, 0.00035758400000000107, 0.00035929200000000064, 0.00035906900000000005, 0.00035825000000000093, 0.0003590969999999992, 0.0003578329999999984, 0.00035686199999999946, 0.00035644399999999743, 0.0003583480000000014, 0.00035659700000000016, 0.0003580279999999998, 0.00035833300000000234, 0.00035830499999999973, 0.00035777799999999957, 0.0003592359999999989, 0.0003575969999999977, 0.0003863339999999986, 0.0003856390000000036, 0.00038529200000000235, 0.0003855840000000013, 0.00035622200000000326, 0.00035979199999999767, 0.0003568340000000003, 0.0003571389999999994, 0.0003570280000000023, 0.0003592909999999977, 0.0003567920000000016, 0.00035870799999999925, 0.00036112499999999687, 0.0003610269999999999, 0.00038588900000000037, 0.0003605269999999994, 0.0003863049999999965, 0.00035837500000000105, 0.0003850970000000009, 0.0003572920000000021, 0.0003596800000000011, 0.0003570419999999949, 0.00035974999999999896, 0.00038584700000000166, 0.0003581390000000004, 0.00038559699999999447, 0.00036058399999999713, 0.0003568340000000003]</msg>
<status status="PASS" starttime="20201030 15:56:26.150" endtime="20201030 15:56:26.153"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.145" endtime="20201030 15:56:26.153"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:26.157" endtime="20201030 15:56:26.177"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.155" endtime="20201030 15:56:26.177"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.154" endtime="20201030 15:56:26.177"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.776" endtime="20201030 15:56:26.178"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.775" endtime="20201030 15:56:26.178"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:26.187" endtime="20201030 15:56:26.221"></status>
</kw>
<msg timestamp="20201030 15:56:26.221" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:26.186" endtime="20201030 15:56:26.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:26.224" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:26.222" endtime="20201030 15:56:26.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:26.225" endtime="20201030 15:56:26.227"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.183" endtime="20201030 15:56:26.227"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.181" endtime="20201030 15:56:26.228"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:26.235" endtime="20201030 15:56:26.522"></status>
</kw>
<msg timestamp="20201030 15:56:26.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021065278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021451208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:26.233" endtime="20201030 15:56:26.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:26.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021065278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021451208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:26.527" endtime="20201030 15:56:26.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:26.546" endtime="20201030 15:56:26.550"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.230" endtime="20201030 15:56:26.551"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.228" endtime="20201030 15:56:26.552"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:26.560" level="INFO">${RESULT} = [{'diff': 0.0003859299999999996}, {'diff': 0.00035962499999999883}, {'diff': 0.0003598890000000021}, {'diff': 0.0003583050000000032}, {'diff': 0.00038630599999999946}, {'diff': 0.0003589030000000007},...</msg>
<status status="PASS" starttime="20201030 15:56:26.553" endtime="20201030 15:56:26.561"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:26.571" level="INFO">${ACCURACY} = {'diff': [0.0003859299999999996, 0.00035962499999999883, 0.0003598890000000021, 0.0003583050000000032, 0.00038630599999999946, 0.0003589030000000007, 0.0003608610000000005, 0.00036088899999999965, 0.0...</msg>
<status status="PASS" starttime="20201030 15:56:26.562" endtime="20201030 15:56:26.571"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:26.580" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201030 15:56:26.578" endtime="20201030 15:56:26.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:26.585" level="INFO">VALUE: [0.0003859299999999996, 0.00035962499999999883, 0.0003598890000000021, 0.0003583050000000032, 0.00038630599999999946, 0.0003589030000000007, 0.0003608610000000005, 0.00036088899999999965, 0.000359360999999999, 0.00038595799999999875, 0.00035591600000000126, 0.00035966699999999754, 0.00035994499999999693, 0.0003860269999999971, 0.0003584999999999977, 0.0003559859999999991, 0.0003567080000000007, 0.0003577080000000017, 0.0003573050000000022, 0.00038502799999999907, 0.0003602079999999973, 0.0003582640000000005, 0.0003608200000000013, 0.0003605969999999972, 0.00035624999999999893, 0.0003559440000000004, 0.0003583470000000019, 0.0003592909999999977, 0.0003595139999999983, 0.00038501400000000296, 0.000384931000000005, 0.00038501299999999655, 0.0003582769999999971, 0.00035672200000000376, 0.0003583610000000015, 0.00035632000000000025, 0.00035658400000000007, 0.000356181000000004, 0.0003847360000000036, 0.00035894399999999993, 0.00035843099999999933, 0.0003586939999999997, 0.00038557000000000174, 0.00035887500000000155, 0.0003564860000000031, 0.00035637499999999905, 0.000386013999999997, 0.00036093000000000236, 0.0003595139999999983, 0.0003600969999999967]</msg>
<status status="PASS" starttime="20201030 15:56:26.582" endtime="20201030 15:56:26.587"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.572" endtime="20201030 15:56:26.588"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:26.596" endtime="20201030 15:56:26.618"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.592" endtime="20201030 15:56:26.619"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.590" endtime="20201030 15:56:26.619"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.179" endtime="20201030 15:56:26.620"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.178" endtime="20201030 15:56:26.620"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:26.635" endtime="20201030 15:56:26.674"></status>
</kw>
<msg timestamp="20201030 15:56:26.674" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:26.633" endtime="20201030 15:56:26.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:26.677" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:26.675" endtime="20201030 15:56:26.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:26.678" endtime="20201030 15:56:26.679"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.630" endtime="20201030 15:56:26.680"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.626" endtime="20201030 15:56:26.680"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:26.687" endtime="20201030 15:56:26.974"></status>
</kw>
<msg timestamp="20201030 15:56:26.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0339965, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034373986, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:56:26.685" endtime="20201030 15:56:26.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:26.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0339965, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034373986, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:56:26.978" endtime="20201030 15:56:26.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:26.986" endtime="20201030 15:56:26.988"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.683" endtime="20201030 15:56:26.989"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.681" endtime="20201030 15:56:26.989"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:26.993" level="INFO">${RESULT} = [{'diff': 0.00037748600000000326}, {'diff': 0.00035919499999999965}, {'diff': 0.00035690300000000563}, {'diff': 0.00038486100000000023}, {'diff': 0.00035677800000000204}, {'diff': 0.000360139000000002...</msg>
<status status="PASS" starttime="20201030 15:56:26.990" endtime="20201030 15:56:26.993"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:26.997" level="INFO">${ACCURACY} = {'diff': [0.00037748600000000326, 0.00035919499999999965, 0.00035690300000000563, 0.00038486100000000023, 0.00035677800000000204, 0.0003601390000000024, 0.0003861530000000002, 0.0003859450000000056, 0...</msg>
<status status="PASS" starttime="20201030 15:56:26.994" endtime="20201030 15:56:26.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:27.002" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201030 15:56:27.001" endtime="20201030 15:56:27.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:27.004" level="INFO">VALUE: [0.00037748600000000326, 0.00035919499999999965, 0.00035690300000000563, 0.00038486100000000023, 0.00035677800000000204, 0.0003601390000000024, 0.0003861530000000002, 0.0003859450000000056, 0.00035591699999999726, 0.0003587359999999984, 0.0003851249999999931, 0.00036047200000000057, 0.0003572920000000021, 0.00035626400000000197, 0.00035961100000000273, 0.00036079199999999867, 0.0003574999999999967, 0.0003847770000000028, 0.00035802799999999635, 0.0003858469999999947, 0.00035745800000000494, 0.0003587359999999984, 0.00035783300000000184, 0.0003860829999999954, 0.000385319000000002, 0.00035822300000000473, 0.0003600830000000041, 0.0003855560000000022, 0.0003608890000000031, 0.0003859439999999992, 0.0003569449999999974, 0.0003587219999999988, 0.0003610139999999998, 0.00038604199999999617, 0.000386207999999999, 0.0003560280000000013, 0.0003854719999999978, 0.000360458000000001, 0.0003861939999999994, 0.0003601800000000016, 0.0003858750000000008, 0.00036002799999999835, 0.00036002799999999835, 0.00035970800000000025, 0.0003575139999999963, 0.00036083300000000484, 0.0003578890000000001, 0.00035902799999999735, 0.0003570690000000015, 0.00038483400000000056]</msg>
<status status="PASS" starttime="20201030 15:56:27.003" endtime="20201030 15:56:27.005"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.998" endtime="20201030 15:56:27.005"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:27.009" endtime="20201030 15:56:27.029"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.008" endtime="20201030 15:56:27.030"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.006" endtime="20201030 15:56:27.030"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.623" endtime="20201030 15:56:27.030"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.621" endtime="20201030 15:56:27.030"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:27.039" endtime="20201030 15:56:27.085"></status>
</kw>
<msg timestamp="20201030 15:56:27.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:27.037" endtime="20201030 15:56:27.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:27.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:27.087" endtime="20201030 15:56:27.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:27.089" endtime="20201030 15:56:27.091"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.035" endtime="20201030 15:56:27.091"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.033" endtime="20201030 15:56:27.092"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:27.098" endtime="20201030 15:56:27.402"></status>
</kw>
<msg timestamp="20201030 15:56:27.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028146681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028506764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:27.097" endtime="20201030 15:56:27.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:27.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028146681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028506764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:27.411" endtime="20201030 15:56:27.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:27.429" endtime="20201030 15:56:27.433"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.094" endtime="20201030 15:56:27.433"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.092" endtime="20201030 15:56:27.434"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:27.437" level="INFO">${RESULT} = [{'diff': 0.0003600830000000006}, {'diff': 0.00038483400000000056}, {'diff': 0.0003861390000000006}, {'diff': 0.00035929100000000116}, {'diff': 0.00038566699999999926}, {'diff': 0.0003576389999999999}...</msg>
<status status="PASS" starttime="20201030 15:56:27.434" endtime="20201030 15:56:27.438"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:27.442" level="INFO">${ACCURACY} = {'diff': [0.0003600830000000006, 0.00038483400000000056, 0.0003861390000000006, 0.00035929100000000116, 0.00038566699999999926, 0.0003576389999999999, 0.0003561249999999988, 0.0003575000000000002, 0.0...</msg>
<status status="PASS" starttime="20201030 15:56:27.438" endtime="20201030 15:56:27.442"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:27.446" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201030 15:56:27.445" endtime="20201030 15:56:27.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:27.448" level="INFO">VALUE: [0.0003600830000000006, 0.00038483400000000056, 0.0003861390000000006, 0.00035929100000000116, 0.00038566699999999926, 0.0003576389999999999, 0.0003561249999999988, 0.0003575000000000002, 0.00035711099999999676, 0.000357181000000005, 0.00035805600000000243, 0.0003561940000000041, 0.00036079199999999867, 0.0003850409999999957, 0.00035990299999999475, 0.0003563050000000012, 0.0003608889999999962, 0.0003848190000000015, 0.00035641699999999776, 0.0003577500000000039, 0.00035682000000000075, 0.00035887500000000155, 0.0003860970000000019, 0.0003566950000000041, 0.00035666599999999854, 0.0003858060000000024, 0.00038509699999999397, 0.00038477799999999535, 0.00038566699999999926, 0.00038536100000000073, 0.00036081899999999834, 0.0003587779999999971, 0.0003848749999999998, 0.0003561249999999988, 0.00035904099999999745, 0.00035722200000000426, 0.00035794500000000534, 0.0003857090000000049, 0.00035682000000000075, 0.0003861939999999994, 0.00035861100000000173, 0.00035909700000000266, 0.0003858750000000008, 0.00036059700000000416, 0.00035682000000000075, 0.0003603340000000038, 0.0003605139999999993, 0.000358070000000002, 0.000385207999999998, 0.00036074999999999996]</msg>
<status status="PASS" starttime="20201030 15:56:27.447" endtime="20201030 15:56:27.450"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.442" endtime="20201030 15:56:27.450"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:27.454" endtime="20201030 15:56:27.474"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.453" endtime="20201030 15:56:27.474"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.452" endtime="20201030 15:56:27.475"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.031" endtime="20201030 15:56:27.475"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.031" endtime="20201030 15:56:27.475"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:27.484" endtime="20201030 15:56:27.522"></status>
</kw>
<msg timestamp="20201030 15:56:27.522" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:27.482" endtime="20201030 15:56:27.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:27.525" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:27.524" endtime="20201030 15:56:27.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:27.526" endtime="20201030 15:56:27.528"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.480" endtime="20201030 15:56:27.528"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.477" endtime="20201030 15:56:27.529"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:27.535" endtime="20201030 15:56:27.822"></status>
</kw>
<msg timestamp="20201030 15:56:27.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025263403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025631639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:27.534" endtime="20201030 15:56:27.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:27.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025263403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025631639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:27.826" endtime="20201030 15:56:27.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:27.834" endtime="20201030 15:56:27.836"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.531" endtime="20201030 15:56:27.837"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.529" endtime="20201030 15:56:27.837"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:27.841" level="INFO">${RESULT} = [{'diff': 0.00036823600000000095}, {'diff': 0.0003568889999999991}, {'diff': 0.0003562219999999998}, {'diff': 0.00038604199999999964}, {'diff': 0.0003579449999999984}, {'diff': 0.00035727800000000254}...</msg>
<status status="PASS" starttime="20201030 15:56:27.838" endtime="20201030 15:56:27.841"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:27.846" level="INFO">${ACCURACY} = {'diff': [0.00036823600000000095, 0.0003568889999999991, 0.0003562219999999998, 0.00038604199999999964, 0.0003579449999999984, 0.00035727800000000254, 0.00035979200000000114, 0.00035966600000000154, 0...</msg>
<status status="PASS" starttime="20201030 15:56:27.842" endtime="20201030 15:56:27.846"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:27.850" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201030 15:56:27.849" endtime="20201030 15:56:27.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:27.853" level="INFO">VALUE: [0.00036823600000000095, 0.0003568889999999991, 0.0003562219999999998, 0.00038604199999999964, 0.0003579449999999984, 0.00035727800000000254, 0.00035979200000000114, 0.00035966600000000154, 0.0003562080000000002, 0.0003564029999999982, 0.0003850560000000017, 0.0003578050000000027, 0.0003849859999999969, 0.0003861520000000007, 0.0003560419999999974, 0.00035879200000000014, 0.0003587779999999971, 0.0003850000000000034, 0.0003603610000000035, 0.0003560140000000017, 0.0003576810000000055, 0.0003607090000000007, 0.0003851519999999997, 0.0003600559999999975, 0.0003578470000000014, 0.0003859859999999979, 0.0003600419999999979, 0.0003861949999999989, 0.0003578480000000009, 0.000360569000000005, 0.00038588900000000037, 0.00035962499999999537, 0.00035933300000000334, 0.0003580830000000021, 0.0003610000000000002, 0.000385207999999998, 0.000386417, 0.000359458, 0.00035794399999999893, 0.00035920799999999975, 0.0003568050000000017, 0.0003583890000000006, 0.0003581250000000008, 0.0003575410000000029, 0.0003850269999999961, 0.00035798599999999764, 0.000357861000000001, 0.0003586390000000009, 0.0003576389999999999, 0.00036004099999999845]</msg>
<status status="PASS" starttime="20201030 15:56:27.851" endtime="20201030 15:56:27.853"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.847" endtime="20201030 15:56:27.854"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:27.857" endtime="20201030 15:56:27.877"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.856" endtime="20201030 15:56:27.877"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.855" endtime="20201030 15:56:27.878"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.476" endtime="20201030 15:56:27.878"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.475" endtime="20201030 15:56:27.878"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.171" endtime="20201030 15:56:27.878"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201030 15:55:47.101" endtime="20201030 15:56:27.879" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 15:55:05.112" endtime="20201030 15:56:27.882"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:56:27.935" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:56:27.943" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:56:29.260" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:56:27.934" endtime="20201030 15:56:29.261"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:56:29.266" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 15:56:29.264" endtime="20201030 15:56:29.267"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.932" endtime="20201030 15:56:29.268"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:29.273" endtime="20201030 15:56:29.457"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.270" endtime="20201030 15:56:29.458"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:29.470" endtime="20201030 15:56:29.491"></status>
</kw>
<msg timestamp="20201030 15:56:29.492" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['T!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:29.469" endtime="20201030 15:56:29.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:29.494" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['T!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:29.493" endtime="20201030 15:56:29.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:56:29.497" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:56:29.495" endtime="20201030 15:56:29.498"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:29.466" endtime="20201030 15:56:29.498"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:29.464" endtime="20201030 15:56:29.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.463" endtime="20201030 15:56:29.499"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:56:29.503" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:56:29.502" endtime="20201030 15:56:29.503"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.500" endtime="20201030 15:56:29.504"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.462" endtime="20201030 15:56:29.504"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.461" endtime="20201030 15:56:29.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:29.505" endtime="20201030 15:56:29.506"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.460" endtime="20201030 15:56:29.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:29.507" endtime="20201030 15:56:29.509"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.458" endtime="20201030 15:56:29.509"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.931" endtime="20201030 15:56:29.510"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:29.516" endtime="20201030 15:56:29.535"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.514" endtime="20201030 15:56:29.536"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:29.549" endtime="20201030 15:56:29.567"></status>
</kw>
<msg timestamp="20201030 15:56:29.568" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:29.547" endtime="20201030 15:56:29.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:29.570" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:29.569" endtime="20201030 15:56:29.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:56:29.574" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:56:29.571" endtime="20201030 15:56:29.575"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:29.544" endtime="20201030 15:56:29.575"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:29.542" endtime="20201030 15:56:29.576"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.541" endtime="20201030 15:56:29.576"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:56:29.580" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:56:29.579" endtime="20201030 15:56:29.580"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.577" endtime="20201030 15:56:29.580"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.540" endtime="20201030 15:56:29.581"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.539" endtime="20201030 15:56:29.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:29.582" endtime="20201030 15:56:29.583"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.538" endtime="20201030 15:56:29.584"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.536" endtime="20201030 15:56:29.584"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.513" endtime="20201030 15:56:29.584"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:29.593" endtime="20201030 15:56:35.697"></status>
</kw>
<msg timestamp="20201030 15:56:35.698" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:29.591" endtime="20201030 15:56:35.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:35.704" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:35.700" endtime="20201030 15:56:35.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:35.706" endtime="20201030 15:56:35.709"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.588" endtime="20201030 15:56:35.710"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.586" endtime="20201030 15:56:35.711"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:35.716" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 0}</msg>
<status status="PASS" starttime="20201030 15:56:35.713" endtime="20201030 15:56:35.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:35.725" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:56:35.723" endtime="20201030 15:56:35.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:35.729" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:56:35.728" endtime="20201030 15:56:35.730"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:35.718" endtime="20201030 15:56:35.731"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:35.739" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:56:35.737" endtime="20201030 15:56:35.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:35.744" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:56:35.742" endtime="20201030 15:56:35.745"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:35.733" endtime="20201030 15:56:35.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:35.750" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:56:35.749" endtime="20201030 15:56:35.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:35.752" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201030 15:56:35.751" endtime="20201030 15:56:35.753"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:35.747" endtime="20201030 15:56:35.753"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:35.759" endtime="20201030 15:56:36.062"></status>
</kw>
<msg timestamp="20201030 15:56:36.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067625708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.167305458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:35.758" endtime="20201030 15:56:36.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:36.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067625708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.167305458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:36.066" endtime="20201030 15:56:36.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:36.075" endtime="20201030 15:56:36.076"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:35.755" endtime="20201030 15:56:36.077"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:35.754" endtime="20201030 15:56:36.077"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:56:36.081" level="INFO">${FILTERED} = [{'diff': 0.09967974999999998}, {'diff': 0.09964875000000001}, {'diff': 0.09969061099999998}, {'diff': 0.09964736199999996}, {'diff': 0.09960932000000006}, {'diff': 0.09964558400000001}, {'diff': 0.09...</msg>
<status status="PASS" starttime="20201030 15:56:36.078" endtime="20201030 15:56:36.081"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:36.085" level="INFO">${RESULT} = {'diff': [0.09967974999999998, 0.09964875000000001, 0.09969061099999998, 0.09964736199999996, 0.09960932000000006, 0.09964558400000001, 0.099655139, 0.09964955500000006, 0.09965225, 0.0996354029999999...</msg>
<status status="PASS" starttime="20201030 15:56:36.082" endtime="20201030 15:56:36.085"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:36.089" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:56:36.088" endtime="20201030 15:56:36.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:36.091" level="INFO">VALUE: [0.09967974999999998, 0.09964875000000001, 0.09969061099999998, 0.09964736199999996, 0.09960932000000006, 0.09964558400000001, 0.099655139, 0.09964955500000006, 0.09965225, 0.09963540299999996, 0.09964550000000005, 0.09964919400000016, 0.09967368100000007, 0.09964501400000003, 0.09961347200000015, 0.09964465299999992, 0.09964601300000009, 0.09966634699999988, 0.09969186100000016, 0.0996459300000001, 0.09968865299999985, 0.09968597300000015, 0.09965102799999981, 0.09963784699999989, 0.09963845799999982, 0.0996906390000003, 0.09965293100000006, 0.09964493099999983, 0.09964661100000027, 0.09961752800000001, 0.09965537499999977, 0.09964237500000017, 0.09964844500000014, 0.09965680600000004, 0.09962373599999985, 0.09965572300000014, 0.09965579200000008, 0.0996923190000003, 0.09967061099999963, 0.09961954200000012, 0.09968048600000046, 0.09967511099999982, 0.09967416699999987, 0.09964686100000009, 0.09963811200000006, 0.09965426399999977, 0.09965220800000019, 0.09964788899999988, 0.09965462500000033, 0.09964626399999954, 0.09965272200000008]</msg>
<status status="PASS" starttime="20201030 15:56:36.090" endtime="20201030 15:56:36.092"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:36.086" endtime="20201030 15:56:36.092"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:36.096" endtime="20201030 15:56:36.116"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:36.095" endtime="20201030 15:56:36.116"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:36.094" endtime="20201030 15:56:36.117"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.585" endtime="20201030 15:56:36.117"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201030 15:56:29.510" endtime="20201030 15:56:36.117" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:36.124" endtime="20201030 15:56:36.143"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:36.122" endtime="20201030 15:56:36.144"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:36.158" endtime="20201030 15:56:36.174"></status>
</kw>
<msg timestamp="20201030 15:56:36.175" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:36.156" endtime="20201030 15:56:36.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:36.177" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:36.176" endtime="20201030 15:56:36.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:56:36.180" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:56:36.179" endtime="20201030 15:56:36.181"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:36.154" endtime="20201030 15:56:36.181"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:36.151" endtime="20201030 15:56:36.182"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:36.150" endtime="20201030 15:56:36.182"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:56:36.186" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:56:36.185" endtime="20201030 15:56:36.186"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:36.183" endtime="20201030 15:56:36.187"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:36.149" endtime="20201030 15:56:36.187"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:36.148" endtime="20201030 15:56:36.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:36.188" endtime="20201030 15:56:36.189"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:36.146" endtime="20201030 15:56:36.190"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:36.145" endtime="20201030 15:56:36.190"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:36.121" endtime="20201030 15:56:36.190"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:36.198" endtime="20201030 15:56:42.303"></status>
</kw>
<msg timestamp="20201030 15:56:42.304" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:36.197" endtime="20201030 15:56:42.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:42.309" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:42.306" endtime="20201030 15:56:42.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:42.312" endtime="20201030 15:56:42.316"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:36.194" endtime="20201030 15:56:42.317"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:36.192" endtime="20201030 15:56:42.318"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:42.323" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 5}</msg>
<status status="PASS" starttime="20201030 15:56:42.319" endtime="20201030 15:56:42.323"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:42.331" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:56:42.329" endtime="20201030 15:56:42.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:42.337" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:56:42.333" endtime="20201030 15:56:42.338"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.324" endtime="20201030 15:56:42.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:42.348" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:56:42.346" endtime="20201030 15:56:42.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:42.353" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:56:42.351" endtime="20201030 15:56:42.353"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.342" endtime="20201030 15:56:42.355"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:42.362" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:56:42.360" endtime="20201030 15:56:42.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:42.364" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201030 15:56:42.363" endtime="20201030 15:56:42.364"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.356" endtime="20201030 15:56:42.365"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:42.371" endtime="20201030 15:56:42.670"></status>
</kw>
<msg timestamp="20201030 15:56:42.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065953514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.165709347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:42.369" endtime="20201030 15:56:42.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:42.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065953514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.165709347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:42.674" endtime="20201030 15:56:42.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:42.683" endtime="20201030 15:56:42.684"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.367" endtime="20201030 15:56:42.685"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.365" endtime="20201030 15:56:42.685"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:56:42.689" level="INFO">${FILTERED} = [{'diff': 0.099755833}, {'diff': 0.099661}, {'diff': 0.099670013}, {'diff': 0.09964613900000002}, {'diff': 0.09964626399999998}, {'diff': 0.09961627799999995}, {'diff': 0.09964722199999998}, {'diff': ...</msg>
<status status="PASS" starttime="20201030 15:56:42.686" endtime="20201030 15:56:42.690"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:42.694" level="INFO">${RESULT} = {'diff': [0.099755833, 0.099661, 0.099670013, 0.09964613900000002, 0.09964626399999998, 0.09961627799999995, 0.09964722199999998, 0.09964376400000008, 0.09963695799999994, 0.09965629100000006, 0.09968...</msg>
<status status="PASS" starttime="20201030 15:56:42.690" endtime="20201030 15:56:42.695"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:42.699" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:56:42.698" endtime="20201030 15:56:42.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:42.701" level="INFO">VALUE: [0.099755833, 0.099661, 0.099670013, 0.09964613900000002, 0.09964626399999998, 0.09961627799999995, 0.09964722199999998, 0.09964376400000008, 0.09963695799999994, 0.09965629100000006, 0.09968654199999993, 0.09964048599999997, 0.09963833299999991, 0.09966705600000014, 0.09964470900000011, 0.09964191700000002, 0.09966562499999987, 0.09964072199999996, 0.09963866700000001, 0.09961161200000013, 0.09964137500000003, 0.09964598600000008, 0.09964088899999979, 0.09964294499999982, 0.09961563900000003, 0.09965063900000004, 0.09967452799999998, 0.09966236100000003, 0.09968393000000031, 0.0996537639999997, 0.09966958299999984, 0.0996356249999999, 0.09963619400000034, 0.09964477699999996, 0.09961740299999988, 0.09968611100000002, 0.09967777800000022, 0.09965309799999966, 0.09965555599999965, 0.09965141699999958, 0.09961530499999949, 0.09963859700000022, 0.09967070800000055, 0.09968984699999961, 0.09965819399999987, 0.09969469400000008, 0.09969209700000015, 0.09969112500000055, 0.099691097, 0.0996517370000003, 0.09965298599999972]</msg>
<status status="PASS" starttime="20201030 15:56:42.700" endtime="20201030 15:56:42.702"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.695" endtime="20201030 15:56:42.702"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:42.706" endtime="20201030 15:56:42.726"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.705" endtime="20201030 15:56:42.727"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.703" endtime="20201030 15:56:42.727"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:36.191" endtime="20201030 15:56:42.727"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201030 15:56:36.119" endtime="20201030 15:56:42.728" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:42.734" endtime="20201030 15:56:42.754"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.733" endtime="20201030 15:56:42.755"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:42.768" endtime="20201030 15:56:42.787"></status>
</kw>
<msg timestamp="20201030 15:56:42.787" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:42.767" endtime="20201030 15:56:42.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:42.790" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:42.788" endtime="20201030 15:56:42.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:56:42.793" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:56:42.791" endtime="20201030 15:56:42.793"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:42.764" endtime="20201030 15:56:42.794"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:42.761" endtime="20201030 15:56:42.795"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.760" endtime="20201030 15:56:42.795"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:56:42.799" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:56:42.798" endtime="20201030 15:56:42.799"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.796" endtime="20201030 15:56:42.799"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.759" endtime="20201030 15:56:42.800"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.758" endtime="20201030 15:56:42.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:42.801" endtime="20201030 15:56:42.802"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.757" endtime="20201030 15:56:42.803"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.755" endtime="20201030 15:56:42.803"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.732" endtime="20201030 15:56:42.803"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:42.814" endtime="20201030 15:56:48.921"></status>
</kw>
<msg timestamp="20201030 15:56:48.923" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:42.812" endtime="20201030 15:56:48.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:48.928" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:48.925" endtime="20201030 15:56:48.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:48.932" endtime="20201030 15:56:48.935"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.809" endtime="20201030 15:56:48.937"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.806" endtime="20201030 15:56:48.938"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:48.943" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 10}</msg>
<status status="PASS" starttime="20201030 15:56:48.939" endtime="20201030 15:56:48.944"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:48.952" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:56:48.950" endtime="20201030 15:56:48.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:48.957" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:56:48.955" endtime="20201030 15:56:48.958"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:48.945" endtime="20201030 15:56:48.959"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:48.968" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:56:48.965" endtime="20201030 15:56:48.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:48.972" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:56:48.970" endtime="20201030 15:56:48.973"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:48.960" endtime="20201030 15:56:48.974"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:48.983" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:56:48.981" endtime="20201030 15:56:48.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:48.988" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201030 15:56:48.985" endtime="20201030 15:56:48.988"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:48.976" endtime="20201030 15:56:48.989"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:49.004" endtime="20201030 15:56:49.307"></status>
</kw>
<msg timestamp="20201030 15:56:49.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072200681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.171885986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:49.000" endtime="20201030 15:56:49.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:49.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072200681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.171885986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:49.312" endtime="20201030 15:56:49.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:49.320" endtime="20201030 15:56:49.322"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:48.995" endtime="20201030 15:56:49.322"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:48.991" endtime="20201030 15:56:49.323"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:56:49.330" level="INFO">${FILTERED} = [{'diff': 0.09968530499999999}, {'diff': 0.09964681899999997}, {'diff': 0.09964954200000004}, {'diff': 0.09966690300000003}, {'diff': 0.09962700000000002}, {'diff': 0.09966748599999997}, {'diff': 0.09...</msg>
<status status="PASS" starttime="20201030 15:56:49.323" endtime="20201030 15:56:49.330"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:49.334" level="INFO">${RESULT} = {'diff': [0.09968530499999999, 0.09964681899999997, 0.09964954200000004, 0.09966690300000003, 0.09962700000000002, 0.09966748599999997, 0.09966025, 0.09966176400000004, 0.09968004200000002, 0.09964579...</msg>
<status status="PASS" starttime="20201030 15:56:49.331" endtime="20201030 15:56:49.334"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:49.338" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:56:49.337" endtime="20201030 15:56:49.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:49.341" level="INFO">VALUE: [0.09968530499999999, 0.09964681899999997, 0.09964954200000004, 0.09966690300000003, 0.09962700000000002, 0.09966748599999997, 0.09966025, 0.09966176400000004, 0.09968004200000002, 0.09964579100000004, 0.09965979199999997, 0.09969286099999985, 0.09967433300000006, 0.09965190300000004, 0.09962897199999987, 0.09965073699999993, 0.09964833399999984, 0.09966006999999988, 0.09965205599999982, 0.09962397200000028, 0.099647987, 0.09965362500000019, 0.09964463899999965, 0.09963834699999996, 0.0996136110000001, 0.09964544400000008, 0.09965998599999981, 0.09966077800000006, 0.0996871800000001, 0.09962437499999988, 0.09966398599999993, 0.09968156900000036, 0.09967137499999978, 0.09966287499999993, 0.09962961100000012, 0.099655555, 0.09965050000000009, 0.09969238899999988, 0.09965758400000002, 0.09963708399999982, 0.09966081999999954, 0.09963904099999965, 0.0996519720000002, 0.09964569400000034, 0.0996182499999998, 0.0996494160000001, 0.09964863900000065, 0.09965406900000051, 0.09967368000000043, 0.09962445800000008, 0.09964816700000068]</msg>
<status status="PASS" starttime="20201030 15:56:49.339" endtime="20201030 15:56:49.342"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.335" endtime="20201030 15:56:49.342"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:49.346" endtime="20201030 15:56:49.366"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.344" endtime="20201030 15:56:49.366"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.343" endtime="20201030 15:56:49.367"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.804" endtime="20201030 15:56:49.367"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201030 15:56:42.729" endtime="20201030 15:56:49.367" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:49.374" endtime="20201030 15:56:49.394"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.373" endtime="20201030 15:56:49.394"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:49.409" endtime="20201030 15:56:49.427"></status>
</kw>
<msg timestamp="20201030 15:56:49.428" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:49.407" endtime="20201030 15:56:49.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:49.430" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:49.429" endtime="20201030 15:56:49.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:56:49.434" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:56:49.432" endtime="20201030 15:56:49.434"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:49.404" endtime="20201030 15:56:49.435"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:49.401" endtime="20201030 15:56:49.435"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.400" endtime="20201030 15:56:49.436"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:56:49.440" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:56:49.439" endtime="20201030 15:56:49.440"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.437" endtime="20201030 15:56:49.440"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.399" endtime="20201030 15:56:49.440"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.398" endtime="20201030 15:56:49.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:49.441" endtime="20201030 15:56:49.443"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.397" endtime="20201030 15:56:49.443"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.395" endtime="20201030 15:56:49.444"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.371" endtime="20201030 15:56:49.444"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:49.453" endtime="20201030 15:56:55.558"></status>
</kw>
<msg timestamp="20201030 15:56:55.560" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:49.451" endtime="20201030 15:56:55.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:55.565" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:55.562" endtime="20201030 15:56:55.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:55.568" endtime="20201030 15:56:55.572"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.448" endtime="20201030 15:56:55.573"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.446" endtime="20201030 15:56:55.574"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:55.580" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 15}</msg>
<status status="PASS" starttime="20201030 15:56:55.576" endtime="20201030 15:56:55.580"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:55.589" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:56:55.587" endtime="20201030 15:56:55.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:55.594" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:56:55.592" endtime="20201030 15:56:55.595"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.582" endtime="20201030 15:56:55.596"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:55.605" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:56:55.602" endtime="20201030 15:56:55.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:55.609" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:56:55.607" endtime="20201030 15:56:55.610"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.597" endtime="20201030 15:56:55.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:55.620" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:56:55.617" endtime="20201030 15:56:55.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:55.624" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201030 15:56:55.622" endtime="20201030 15:56:55.625"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.612" endtime="20201030 15:56:55.626"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:55.643" endtime="20201030 15:56:55.951"></status>
</kw>
<msg timestamp="20201030 15:56:55.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069048833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.168775375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:55.640" endtime="20201030 15:56:55.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:55.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069048833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.168775375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:55.955" endtime="20201030 15:56:55.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:55.964" endtime="20201030 15:56:55.965"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.634" endtime="20201030 15:56:55.966"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.627" endtime="20201030 15:56:55.966"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:56:55.970" level="INFO">${FILTERED} = [{'diff': 0.099726542}, {'diff': 0.09966791600000002}, {'diff': 0.09967587499999997}, {'diff': 0.09965220800000002}, {'diff': 0.099624889}, {'diff': 0.09965780599999996}, {'diff': 0.099659987}, {'diff...</msg>
<status status="PASS" starttime="20201030 15:56:55.967" endtime="20201030 15:56:55.971"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:55.975" level="INFO">${RESULT} = {'diff': [0.099726542, 0.09966791600000002, 0.09967587499999997, 0.09965220800000002, 0.099624889, 0.09965780599999996, 0.099659987, 0.09969012499999996, 0.09966434700000004, 0.09961572200000002, 0.09...</msg>
<status status="PASS" starttime="20201030 15:56:55.971" endtime="20201030 15:56:55.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:55.979" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:56:55.978" endtime="20201030 15:56:55.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:55.981" level="INFO">VALUE: [0.099726542, 0.09966791600000002, 0.09967587499999997, 0.09965220800000002, 0.099624889, 0.09965780599999996, 0.099659987, 0.09969012499999996, 0.09966434700000004, 0.09961572200000002, 0.09964452699999993, 0.09964331999999998, 0.099640014, 0.09964294399999996, 0.09962818000000007, 0.099695847, 0.09966586100000008, 0.09965097199999984, 0.09965991600000002, 0.09964766700000016, 0.09965729199999984, 0.09966751400000007, 0.09967465300000011, 0.09969438900000016, 0.09966826399999995, 0.09961532000000028, 0.09965320899999996, 0.09964638900000011, 0.09964825, 0.09962287500000011, 0.09964940299999991, 0.0996498060000004, 0.09964694499999993, 0.09964467999999993, 0.09962283300000019, 0.09964197199999969, 0.099661958, 0.09965030500000038, 0.09964158299999992, 0.09962990299999985, 0.09964263899999981, 0.09965361099999992, 0.09965808299999956, 0.09965113899999967, 0.0996168199999996, 0.09966166700000034, 0.09964740200000044, 0.09965429200000031, 0.09965597299999995, 0.0996465139999998, 0.0996189300000001]</msg>
<status status="PASS" starttime="20201030 15:56:55.980" endtime="20201030 15:56:55.982"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.975" endtime="20201030 15:56:55.983"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:55.987" endtime="20201030 15:56:56.007"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.985" endtime="20201030 15:56:56.008"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.984" endtime="20201030 15:56:56.008"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.445" endtime="20201030 15:56:56.008"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201030 15:56:49.369" endtime="20201030 15:56:56.009" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:56.016" endtime="20201030 15:56:56.035"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.014" endtime="20201030 15:56:56.036"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:56.049" endtime="20201030 15:56:56.072"></status>
</kw>
<msg timestamp="20201030 15:56:56.073" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:56.048" endtime="20201030 15:56:56.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:56.075" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:56.074" endtime="20201030 15:56:56.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:56:56.078" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:56:56.076" endtime="20201030 15:56:56.079"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:56.045" endtime="20201030 15:56:56.079"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:56.043" endtime="20201030 15:56:56.080"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.041" endtime="20201030 15:56:56.080"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:56:56.084" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:56:56.083" endtime="20201030 15:56:56.085"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.081" endtime="20201030 15:56:56.085"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.040" endtime="20201030 15:56:56.085"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.040" endtime="20201030 15:56:56.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:56.086" endtime="20201030 15:56:56.087"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.038" endtime="20201030 15:56:56.088"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.036" endtime="20201030 15:56:56.088"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.013" endtime="20201030 15:56:56.089"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:56.099" endtime="20201030 15:57:02.202"></status>
</kw>
<msg timestamp="20201030 15:57:02.203" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:56.096" endtime="20201030 15:57:02.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:02.206" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:02.204" endtime="20201030 15:57:02.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:02.207" endtime="20201030 15:57:02.209"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.093" endtime="20201030 15:57:02.210"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.091" endtime="20201030 15:57:02.210"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:02.213" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 20}</msg>
<status status="PASS" starttime="20201030 15:57:02.211" endtime="20201030 15:57:02.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:02.217" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:57:02.216" endtime="20201030 15:57:02.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:02.219" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:57:02.218" endtime="20201030 15:57:02.219"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:02.214" endtime="20201030 15:57:02.220"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:02.224" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:57:02.223" endtime="20201030 15:57:02.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:02.226" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:57:02.225" endtime="20201030 15:57:02.227"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:02.221" endtime="20201030 15:57:02.227"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:02.231" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:57:02.230" endtime="20201030 15:57:02.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:02.233" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201030 15:57:02.232" endtime="20201030 15:57:02.234"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:02.228" endtime="20201030 15:57:02.234"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:02.241" endtime="20201030 15:57:02.563"></status>
</kw>
<msg timestamp="20201030 15:57:02.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074612903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.174327833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:02.239" endtime="20201030 15:57:02.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:02.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074612903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.174327833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:02.567" endtime="20201030 15:57:02.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:02.575" endtime="20201030 15:57:02.577"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:02.237" endtime="20201030 15:57:02.577"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:02.235" endtime="20201030 15:57:02.578"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:57:02.582" level="INFO">${FILTERED} = [{'diff': 0.09971493}, {'diff': 0.09968675000000002}, {'diff': 0.09966977699999996}, {'diff': 0.099694222}, {'diff': 0.09968305599999994}, {'diff': 0.09970854200000001}, {'diff': 0.09970083299999999},...</msg>
<status status="PASS" starttime="20201030 15:57:02.579" endtime="20201030 15:57:02.582"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:02.587" level="INFO">${RESULT} = {'diff': [0.09971493, 0.09968675000000002, 0.09966977699999996, 0.099694222, 0.09968305599999994, 0.09970854200000001, 0.09970083299999999, 0.09971405500000008, 0.09970077799999999, 0.0996335000000000...</msg>
<status status="PASS" starttime="20201030 15:57:02.583" endtime="20201030 15:57:02.587"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:02.591" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:57:02.590" endtime="20201030 15:57:02.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:02.594" level="INFO">VALUE: [0.09971493, 0.09968675000000002, 0.09966977699999996, 0.099694222, 0.09968305599999994, 0.09970854200000001, 0.09970083299999999, 0.09971405500000008, 0.09970077799999999, 0.09963350000000004, 0.09966848599999989, 0.0997042640000001, 0.09968794500000011, 0.09967356999999999, 0.09968224999999986, 0.09971149999999995, 0.0996834729999998, 0.0996696669999999, 0.0997013470000001, 0.09965613899999992, 0.09967063900000017, 0.09966916599999998, 0.09966708299999993, 0.09967048599999995, 0.09970727700000026, 0.09966162499999998, 0.09970956899999983, 0.0996854439999999, 0.09968698600000003, 0.09964687500000036, 0.09966738899999994, 0.09966398599999993, 0.09967333300000014, 0.09966350000000013, 0.09965668099999991, 0.0996855000000001, 0.09966908399999985, 0.09969311100000011, 0.09968325, 0.09964649999999997, 0.09968177799999989, 0.0996764300000006, 0.09967158300000012, 0.09970948600000007, 0.09964540300000024, 0.09969741700000068, 0.0997214719999997, 0.09970152699999968, 0.09968468100000027, 0.09967182000000019, 0.09965798599999953]</msg>
<status status="PASS" starttime="20201030 15:57:02.593" endtime="20201030 15:57:02.595"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:02.588" endtime="20201030 15:57:02.595"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:02.599" endtime="20201030 15:57:02.619"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:02.598" endtime="20201030 15:57:02.619"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:02.596" endtime="20201030 15:57:02.620"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.089" endtime="20201030 15:57:02.620"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201030 15:56:56.010" endtime="20201030 15:57:02.620" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:02.627" endtime="20201030 15:57:02.647"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:02.626" endtime="20201030 15:57:02.647"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:02.661" endtime="20201030 15:57:02.684"></status>
</kw>
<msg timestamp="20201030 15:57:02.685" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:02.659" endtime="20201030 15:57:02.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:02.687" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:02.686" endtime="20201030 15:57:02.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:57:02.690" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:57:02.688" endtime="20201030 15:57:02.691"></status>
</kw>
<status status="FAIL" starttime="20201030 15:57:02.657" endtime="20201030 15:57:02.691"></status>
</kw>
<status status="FAIL" starttime="20201030 15:57:02.654" endtime="20201030 15:57:02.692"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:02.653" endtime="20201030 15:57:02.692"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:57:02.696" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:57:02.695" endtime="20201030 15:57:02.697"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:02.693" endtime="20201030 15:57:02.697"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:02.652" endtime="20201030 15:57:02.697"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:02.651" endtime="20201030 15:57:02.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:02.698" endtime="20201030 15:57:02.700"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:02.650" endtime="20201030 15:57:02.700"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:02.648" endtime="20201030 15:57:02.701"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:02.624" endtime="20201030 15:57:02.701"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:02.710" endtime="20201030 15:57:08.819"></status>
</kw>
<msg timestamp="20201030 15:57:08.820" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:02.708" endtime="20201030 15:57:08.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:08.826" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:08.823" endtime="20201030 15:57:08.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:08.829" endtime="20201030 15:57:08.833"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:02.705" endtime="20201030 15:57:08.834"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:02.703" endtime="20201030 15:57:08.835"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:08.840" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 25}</msg>
<status status="PASS" starttime="20201030 15:57:08.837" endtime="20201030 15:57:08.841"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:08.850" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:57:08.848" endtime="20201030 15:57:08.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:08.855" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:57:08.853" endtime="20201030 15:57:08.856"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:08.842" endtime="20201030 15:57:08.857"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:08.866" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:57:08.864" endtime="20201030 15:57:08.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:08.872" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:57:08.869" endtime="20201030 15:57:08.872"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:08.859" endtime="20201030 15:57:08.874"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:08.883" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:57:08.880" endtime="20201030 15:57:08.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:08.892" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201030 15:57:08.889" endtime="20201030 15:57:08.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:08.875" endtime="20201030 15:57:08.895"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:08.912" endtime="20201030 15:57:09.213"></status>
</kw>
<msg timestamp="20201030 15:57:09.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074670764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.174443333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:08.908" endtime="20201030 15:57:09.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:09.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074670764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.174443333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:09.217" endtime="20201030 15:57:09.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:09.225" endtime="20201030 15:57:09.227"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:08.901" endtime="20201030 15:57:09.227"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:08.897" endtime="20201030 15:57:09.228"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:57:09.232" level="INFO">${FILTERED} = [{'diff': 0.099772569}, {'diff': 0.09962576399999998}, {'diff': 0.09967499999999996}, {'diff': 0.099707139}, {'diff': 0.09969294499999998}, {'diff': 0.09970341700000007}, {'diff': 0.09970154099999995}...</msg>
<status status="PASS" starttime="20201030 15:57:09.228" endtime="20201030 15:57:09.232"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:09.236" level="INFO">${RESULT} = {'diff': [0.099772569, 0.09962576399999998, 0.09967499999999996, 0.099707139, 0.09969294499999998, 0.09970341700000007, 0.09970154099999995, 0.09972362499999998, 0.09968313900000003, 0.099647222999999...</msg>
<status status="PASS" starttime="20201030 15:57:09.233" endtime="20201030 15:57:09.236"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:09.240" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:57:09.239" endtime="20201030 15:57:09.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:09.242" level="INFO">VALUE: [0.099772569, 0.09962576399999998, 0.09967499999999996, 0.099707139, 0.09969294499999998, 0.09970341700000007, 0.09970154099999995, 0.09972362499999998, 0.09968313900000003, 0.09964722299999995, 0.09969574999999997, 0.09968059699999987, 0.09969229099999999, 0.0997090140000001, 0.0996897080000001, 0.0996554999999999, 0.09970323599999986, 0.09968543099999994, 0.09966501399999994, 0.09968229200000023, 0.09970941699999969, 0.09967834700000022, 0.09970529199999989, 0.0997009160000002, 0.09965697200000001, 0.09968806899999993, 0.0996729580000002, 0.09968218099999993, 0.09967911099999993, 0.09967300000000012, 0.09970231899999993, 0.09970258300000001, 0.099695278, 0.09968109800000002, 0.09963998599999968, 0.09967040300000019, 0.0996852370000001, 0.09968168099999986, 0.09967940299999967, 0.09968358300000002, 0.09965965299999979, 0.09968912499999938, 0.09970169400000017, 0.09969118000000066, 0.09968545800000062, 0.09970801399999996, 0.09970659699999995, 0.09972572200000052, 0.09968837500000038, 0.09966900000000045, 0.09969915300000043]</msg>
<status status="PASS" starttime="20201030 15:57:09.241" endtime="20201030 15:57:09.243"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:09.236" endtime="20201030 15:57:09.244"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:09.247" endtime="20201030 15:57:09.267"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:09.246" endtime="20201030 15:57:09.267"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:09.244" endtime="20201030 15:57:09.267"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:02.702" endtime="20201030 15:57:09.268"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201030 15:57:02.622" endtime="20201030 15:57:09.268" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 15:56:27.891" endtime="20201030 15:57:09.275"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">frdm-kw41z</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201030 15:54:19.383" endtime="20201030 15:57:09.307"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="18" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="18" fail="0">BOARD_frdm-kw41z</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_ztimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_ztimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_ztimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
