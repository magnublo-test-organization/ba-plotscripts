<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201030 18:29:37.440" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:29:38.005" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:29:38.014" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:29:39.157" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:29:38.004" endtime="20201030 18:29:39.157"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:29:39.160" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 18:29:39.158" endtime="20201030 18:29:39.160"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.002" endtime="20201030 18:29:39.161"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:39.163" endtime="20201030 18:29:39.353"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.161" endtime="20201030 18:29:39.354"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:39.367" endtime="20201030 18:29:39.382"></status>
</kw>
<msg timestamp="20201030 18:29:39.383" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['(): This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'...</msg>
<status status="PASS" starttime="20201030 18:29:39.365" endtime="20201030 18:29:39.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:39.385" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['(): This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'...</msg>
<status status="PASS" starttime="20201030 18:29:39.384" endtime="20201030 18:29:39.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:29:39.388" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:29:39.386" endtime="20201030 18:29:39.389"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:39.363" endtime="20201030 18:29:39.389"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:39.360" endtime="20201030 18:29:39.390"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.359" endtime="20201030 18:29:39.390"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:29:39.395" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:29:39.394" endtime="20201030 18:29:39.395"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.391" endtime="20201030 18:29:39.396"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.358" endtime="20201030 18:29:39.396"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.358" endtime="20201030 18:29:39.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:39.397" endtime="20201030 18:29:39.398"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.356" endtime="20201030 18:29:39.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:39.399" endtime="20201030 18:29:39.401"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.355" endtime="20201030 18:29:39.402"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.001" endtime="20201030 18:29:39.402"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:39.408" endtime="20201030 18:29:39.427"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.406" endtime="20201030 18:29:39.428"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:39.441" endtime="20201030 18:29:39.460"></status>
</kw>
<msg timestamp="20201030 18:29:39.461" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:39.440" endtime="20201030 18:29:39.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:39.466" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:39.463" endtime="20201030 18:29:39.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:29:39.473" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:29:39.469" endtime="20201030 18:29:39.473"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:39.437" endtime="20201030 18:29:39.475"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:39.435" endtime="20201030 18:29:39.476"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.433" endtime="20201030 18:29:39.476"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:29:39.484" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:29:39.483" endtime="20201030 18:29:39.485"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.478" endtime="20201030 18:29:39.485"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.432" endtime="20201030 18:29:39.486"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.432" endtime="20201030 18:29:39.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:39.488" endtime="20201030 18:29:39.491"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.430" endtime="20201030 18:29:39.492"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.428" endtime="20201030 18:29:39.493"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.405" endtime="20201030 18:29:39.493"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:39.509" endtime="20201030 18:29:39.531"></status>
</kw>
<msg timestamp="20201030 18:29:39.532" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:39.504" endtime="20201030 18:29:39.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:39.537" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:39.534" endtime="20201030 18:29:39.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:39.540" endtime="20201030 18:29:39.544"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.499" endtime="20201030 18:29:39.546"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.495" endtime="20201030 18:29:39.547"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:39.555" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201030 18:29:39.553" endtime="20201030 18:29:39.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:39.557" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201030 18:29:39.556" endtime="20201030 18:29:39.558"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.549" endtime="20201030 18:29:39.558"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:29:39.402" endtime="20201030 18:29:39.559" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 18:29:37.553" endtime="20201030 18:29:39.561"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:29:39.616" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:29:39.625" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:29:40.753" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:29:39.615" endtime="20201030 18:29:40.754"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:29:40.756" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 18:29:40.755" endtime="20201030 18:29:40.756"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.614" endtime="20201030 18:29:40.757"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:40.759" endtime="20201030 18:29:40.986"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.758" endtime="20201030 18:29:40.987"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:41.013" endtime="20201030 18:29:41.038"></status>
</kw>
<msg timestamp="20201030 18:29:41.039" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [' RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:41.010" endtime="20201030 18:29:41.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:41.045" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [' RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:41.042" endtime="20201030 18:29:41.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:29:41.051" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:29:41.047" endtime="20201030 18:29:41.052"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:41.005" endtime="20201030 18:29:41.053"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:41.000" endtime="20201030 18:29:41.055"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.998" endtime="20201030 18:29:41.055"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:29:41.063" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:29:41.061" endtime="20201030 18:29:41.064"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.057" endtime="20201030 18:29:41.064"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.996" endtime="20201030 18:29:41.064"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.994" endtime="20201030 18:29:41.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:41.066" endtime="20201030 18:29:41.069"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.992" endtime="20201030 18:29:41.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:41.072" endtime="20201030 18:29:41.074"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.989" endtime="20201030 18:29:41.075"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.612" endtime="20201030 18:29:41.075"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:41.082" endtime="20201030 18:29:41.101"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.079" endtime="20201030 18:29:41.102"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:41.115" endtime="20201030 18:29:41.136"></status>
</kw>
<msg timestamp="20201030 18:29:41.136" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:41.113" endtime="20201030 18:29:41.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:41.139" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:41.138" endtime="20201030 18:29:41.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:29:41.142" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:29:41.140" endtime="20201030 18:29:41.142"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:41.110" endtime="20201030 18:29:41.143"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:41.108" endtime="20201030 18:29:41.144"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.107" endtime="20201030 18:29:41.144"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:29:41.148" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:29:41.147" endtime="20201030 18:29:41.148"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.145" endtime="20201030 18:29:41.148"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.106" endtime="20201030 18:29:41.148"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.105" endtime="20201030 18:29:41.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:41.149" endtime="20201030 18:29:41.151"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.104" endtime="20201030 18:29:41.151"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.102" endtime="20201030 18:29:41.152"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.078" endtime="20201030 18:29:41.152"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:41.161" endtime="20201030 18:29:41.174"></status>
</kw>
<msg timestamp="20201030 18:29:41.175" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:41.159" endtime="20201030 18:29:41.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:41.177" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:41.176" endtime="20201030 18:29:41.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:41.178" endtime="20201030 18:29:41.180"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.156" endtime="20201030 18:29:41.181"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.155" endtime="20201030 18:29:41.181"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:41.187" endtime="20201030 18:29:41.474"></status>
</kw>
<msg timestamp="20201030 18:29:41.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069157264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.06915775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:29:41.186" endtime="20201030 18:29:41.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:41.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069157264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.06915775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:29:41.478" endtime="20201030 18:29:41.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:41.487" endtime="20201030 18:29:41.488"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.183" endtime="20201030 18:29:41.489"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.182" endtime="20201030 18:29:41.489"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:29:41.513" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:29:41.490" endtime="20201030 18:29:41.513"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:41.514" endtime="20201030 18:29:41.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:41.520" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:29:41.519" endtime="20201030 18:29:41.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:41.524" level="INFO">VALUE: {'sourcetime': [0.069157264, 0.06915775, 0.069166944, 0.069167417, 0.069177514, 0.069177986, 0.069188208, 0.069188681, 0.069198083, 0.069198556, 0.069207319, 0.069207792, 0.069217889, 0.069218375, 0.069227264, 0.069227736, 0.069235264, 0.06923575, 0.069246292, 0.069246778, 0.069254833, 0.069255306, 0.069263875, 0.069264361, 0.069274403, 0.069274875, 0.069283625, 0.069284111, 0.069294014, 0.069294486, 0.069304708, 0.069305181, 0.069314778, 0.06931525, 0.069323083, 0.069323556, 0.069332528, 0.069333, 0.069343111, 0.069343583, 0.069354014, 0.069354486, 0.069362625, 0.069363111, 0.069370625, 0.069371097, 0.069379667, 0.069380139, 0.069388167, 0.069388639, 0.069396778, 0.069397264, 0.069404792, 0.069405264, 0.0694155, 0.069415972, 0.069426542, 0.069427014, 0.069437653, 0.069438125, 0.069447014, 0.069447486, 0.06945575, 0.069456222, 0.069466139, 0.069466625, 0.06947425, 0.069474722, 0.069484611, 0.069485097, 0.069494181, 0.069494653, 0.069504861, 0.069505333, 0.069514722, 0.069515194, 0.069525028, 0.0695255, 0.069534056, 0.069534528, 0.069543667, 0.069544139, 0.069554125, 0.069554611, 0.069563903, 0.069564389, 0.06957275, 0.069573222, 0.069583583, 0.069584056, 0.06959375, 0.069594236, 0.069602319, 0.069602792, 0.069612694, 0.069613167, 0.069623431, 0.069623903, 0.069634528, 0.069635], 'eventsource_diff': [0, 4.86000000007869e-07, 9.193999999990154e-06, 4.7300000000083386e-07, 1.0097000000000578e-05, 4.720000000013602e-07, 1.0222000000004172e-05, 4.7300000000083386e-07, 9.401999999991695e-06, 4.7300000000083386e-07, 8.763000000008847e-06, 4.7300000000083386e-07, 1.0097000000000578e-05, 4.859999999939912e-07, 8.888999999998037e-06, 4.720000000013602e-07, 7.5280000000066405e-06, 4.859999999939912e-07, 1.0542000000002272e-05, 4.859999999939912e-07, 8.055000000006807e-06, 4.7300000000083386e-07, 8.568999999999938e-06, 4.859999999939912e-07, 1.0042000000001772e-05, 4.720000000013602e-07, 8.750000000001812e-06, 4.859999999939912e-07, 9.903000000005546e-06, 4.720000000013602e-07, 1.0222000000004172e-05, 4.729999999869561e-07, 9.597000000000078e-06, 4.720000000013602e-07, 7.832999999998758e-06, 4.7300000000083386e-07, 8.972000000009861e-06, 4.720000000013602e-07, 1.0110999999993209e-05, 4.720000000013602e-07, 1.0431000000005186e-05, 4.720000000013602e-07, 8.138999999990348e-06, 4.86000000007869e-07, 7.514000000000132e-06, 4.720000000013602e-07, 8.569999999999411e-06, 4.7199999998748243e-07, 8.02800000000714e-06, 4.720000000013602e-07, 8.139000000004226e-06, 4.859999999939912e-07, 7.5280000000066405e-06, 4.7199999998748243e-07, 1.0236000000010681e-05, 4.720000000013602e-07, 1.0569999999987534e-05, 4.720000000013602e-07, 1.0639000000006726e-05, 4.720000000013602e-07, 8.888999999998037e-06, 4.720000000013602e-07, 8.263999999993943e-06, 4.720000000013602e-07, 9.916999999998177e-06, 4.86000000007869e-07, 7.624999999997217e-06, 4.720000000013602e-07, 9.888999999999037e-06, 4.859999999939912e-07, 9.08400000000642e-06, 4.720000000013602e-07, 1.0207999999997663e-05, 4.720000000013602e-07, 9.388999999998537e-06, 4.720000000013602e-07, 9.834000000000231e-06, 4.720000000013602e-07, 8.555999999992903e-06, 4.720000000013602e-07, 9.139000000005226e-06, 4.720000000013602e-07, 9.985999999989614e-06, 4.86000000007869e-07, 9.291999999994083e-06, 4.86000000007869e-07, 8.360999999998397e-06, 4.720000000013602e-07, 1.0361000000000398e-05, 4.7300000000083386e-07, 9.693999999990655e-06, 4.86000000007869e-07, 8.082999999992069e-06, 4.7300000000083386e-07, 9.902000000006073e-06, 4.7300000000083386e-07, 1.0263999999995943e-05, 4.720000000013602e-07, 1.0625000000000218e-05, 4.720000000013602e-07], 'diff': [0, 4.86000000007869e-07, 9.193999999990154e-06, 4.7300000000083386e-07, 1.0097000000000578e-05, 4.720000000013602e-07, 1.0222000000004172e-05, 4.7300000000083386e-07, 9.401999999991695e-06, 4.7300000000083386e-07, 8.763000000008847e-06, 4.7300000000083386e-07, 1.0097000000000578e-05, 4.859999999939912e-07, 8.888999999998037e-06, 4.720000000013602e-07, 7.5280000000066405e-06, 4.859999999939912e-07, 1.0542000000002272e-05, 4.859999999939912e-07, 8.055000000006807e-06, 4.7300000000083386e-07, 8.568999999999938e-06, 4.859999999939912e-07, 1.0042000000001772e-05, 4.720000000013602e-07, 8.750000000001812e-06, 4.859999999939912e-07, 9.903000000005546e-06, 4.720000000013602e-07, 1.0222000000004172e-05, 4.729999999869561e-07, 9.597000000000078e-06, 4.720000000013602e-07, 7.832999999998758e-06, 4.7300000000083386e-07, 8.972000000009861e-06, 4.720000000013602e-07, 1.0110999999993209e-05, 4.720000000013602e-07, 1.0431000000005186e-05, 4.720000000013602e-07, 8.138999999990348e-06, 4.86000000007869e-07, 7.514000000000132e-06, 4.720000000013602e-07, 8.569999999999411e-06, 4.7199999998748243e-07, 8.02800000000714e-06, 4.720000000013602e-07, 8.139000000004226e-06, 4.859999999939912e-07, 7.5280000000066405e-06, 4.7199999998748243e-07, 1.0236000000010681e-05, 4.720000000013602e-07, 1.0569999999987534e-05, 4.720000000013602e-07, 1.0639000000006726e-05, 4.720000000013602e-07, 8.888999999998037e-06, 4.720000000013602e-07, 8.263999999993943e-06, 4.720000000013602e-07, 9.916999999998177e-06, 4.86000000007869e-07, 7.624999999997217e-06, 4.720000000013602e-07, 9.888999999999037e-06, 4.859999999939912e-07, 9.08400000000642e-06, 4.720000000013602e-07, 1.0207999999997663e-05, 4.720000000013602e-07, 9.388999999998537e-06, 4.720000000013602e-07, 9.834000000000231e-06, 4.720000000013602e-07, 8.555999999992903e-06, 4.720000000013602e-07, 9.139000000005226e-06, 4.720000000013602e-07, 9.985999999989614e-06, 4.86000000007869e-07, 9.291999999994083e-06, 4.86000000007869e-07, 8.360999999998397e-06, 4.720000000013602e-07, 1.0361000000000398e-05, 4.7300000000083386e-07, 9.693999999990655e-06, 4.86000000007869e-07, 8.082999999992069e-06, 4.7300000000083386e-07, 9.902000000006073e-06, 4.7300000000083386e-07, 1.0263999999995943e-05, 4.720000000013602e-07, 1.0625000000000218e-05, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201030 18:29:41.521" endtime="20201030 18:29:41.525"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.517" endtime="20201030 18:29:41.525"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:41.529" level="INFO">${RESULT} = [{'diff': 4.86000000007869e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.7300000000083386e-07}...</msg>
<status status="PASS" starttime="20201030 18:29:41.526" endtime="20201030 18:29:41.530"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:29:41.534" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.86000000007869e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.8...</msg>
<status status="PASS" starttime="20201030 18:29:41.530" endtime="20201030 18:29:41.534"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:41.538" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:29:41.537" endtime="20201030 18:29:41.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:41.541" level="INFO">VALUE: [4.86000000007869e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.859999999939912e-07, 4.7300000000083386e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.729999999869561e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.86000000007869e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 18:29:41.539" endtime="20201030 18:29:41.541"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.535" endtime="20201030 18:29:41.542"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:41.545" endtime="20201030 18:29:41.565"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.544" endtime="20201030 18:29:41.565"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.543" endtime="20201030 18:29:41.566"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.154" endtime="20201030 18:29:41.566"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.153" endtime="20201030 18:29:41.566"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:41.574" endtime="20201030 18:29:41.592"></status>
</kw>
<msg timestamp="20201030 18:29:41.593" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:41.573" endtime="20201030 18:29:41.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:41.595" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:41.594" endtime="20201030 18:29:41.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:41.596" endtime="20201030 18:29:41.598"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.570" endtime="20201030 18:29:41.598"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.568" endtime="20201030 18:29:41.599"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:41.605" endtime="20201030 18:29:41.894"></status>
</kw>
<msg timestamp="20201030 18:29:41.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022396569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022397042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:41.604" endtime="20201030 18:29:41.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:41.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022396569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022397042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:41.898" endtime="20201030 18:29:41.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:41.907" endtime="20201030 18:29:41.909"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.601" endtime="20201030 18:29:41.909"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.599" endtime="20201030 18:29:41.910"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:29:41.934" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:29:41.910" endtime="20201030 18:29:41.935"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:41.935" endtime="20201030 18:29:41.937"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:41.941" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:29:41.940" endtime="20201030 18:29:41.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:41.947" level="INFO">VALUE: {'sourcetime': [0.022396569, 0.022397042, 0.022405917, 0.022406403, 0.022416222, 0.022416694, 0.022424333, 0.022424806, 0.022434097, 0.022434583, 0.022443361, 0.022443833, 0.022451375, 0.022451847, 0.022462069, 0.022462556, 0.0224705, 0.022470972, 0.022480583, 0.022481069, 0.022491583, 0.022492056, 0.022500569, 0.022501042, 0.022508861, 0.022509333, 0.022518306, 0.022518778, 0.022528681, 0.022529153, 0.022538431, 0.022538917, 0.022547583, 0.022548056, 0.022556931, 0.022557403, 0.022567097, 0.022567569, 0.022576472, 0.022576944, 0.022584764, 0.022585236, 0.022594431, 0.022594917, 0.022602875, 0.022603347, 0.022613056, 0.022613528, 0.022621167, 0.022621639, 0.022632292, 0.022632764, 0.022641722, 0.022642194, 0.022649819, 0.022650292, 0.022658375, 0.022658847, 0.022669347, 0.022669819, 0.022677639, 0.022678111, 0.022687514, 0.022687986, 0.022697583, 0.022698056, 0.022705806, 0.022706278, 0.022713708, 0.022714181, 0.022723486, 0.022723958, 0.022732222, 0.022732694, 0.022741361, 0.022741847, 0.022752375, 0.022752861, 0.022763069, 0.022763556, 0.022771903, 0.022772375, 0.022782403, 0.022782875, 0.022790792, 0.022791264, 0.022799819, 0.022800292, 0.022808556, 0.022809028, 0.022817986, 0.022818458, 0.022826486, 0.022826972, 0.022837181, 0.022837653, 0.022845833, 0.022846306, 0.022856389, 0.022856861], 'eventsource_diff': [0, 4.729999999973644e-07, 8.875000000001937e-06, 4.859999999974607e-07, 9.819000000001188e-06, 4.720000000013602e-07, 7.639000000000257e-06, 4.729999999973644e-07, 9.291000000001548e-06, 4.860000000009301e-07, 8.777999999997482e-06, 4.720000000013602e-07, 7.5419999999992715e-06, 4.720000000013602e-07, 1.0222000000000703e-05, 4.870000000004038e-07, 7.943999999999313e-06, 4.7199999999789077e-07, 9.610999999999648e-06, 4.860000000009301e-07, 1.0513999999999663e-05, 4.7300000000083386e-07, 8.513000000001658e-06, 4.729999999973644e-07, 7.819000000002657e-06, 4.7199999999789077e-07, 8.972999999998926e-06, 4.720000000013602e-07, 9.902999999998607e-06, 4.720000000013602e-07, 9.278000000001452e-06, 4.859999999974607e-07, 8.666000000000923e-06, 4.7300000000083386e-07, 8.874999999998467e-06, 4.720000000013602e-07, 9.694000000001063e-06, 4.7199999999789077e-07, 8.903000000001077e-06, 4.720000000013602e-07, 7.819999999998661e-06, 4.720000000013602e-07, 9.195000000000036e-06, 4.859999999974607e-07, 7.958000000002352e-06, 4.7199999999789077e-07, 9.709000000000106e-06, 4.720000000013602e-07, 7.639000000000257e-06, 4.7199999999789077e-07, 1.0652999999999357e-05, 4.720000000013602e-07, 8.957999999999883e-06, 4.720000000013602e-07, 7.625000000000687e-06, 4.729999999973644e-07, 8.083000000002477e-06, 4.7199999999789077e-07, 1.0500000000000093e-05, 4.720000000013602e-07, 7.819999999998661e-06, 4.720000000013602e-07, 9.402999999998107e-06, 4.720000000013602e-07, 9.597000000000078e-06, 4.7300000000083386e-07, 7.749999999997342e-06, 4.720000000013602e-07, 7.429999999999243e-06, 4.7300000000083386e-07, 9.305000000001118e-06, 4.7199999999789077e-07, 8.264000000000882e-06, 4.720000000013602e-07, 8.667000000000397e-06, 4.859999999974607e-07, 1.0527999999999232e-05, 4.860000000009301e-07, 1.0208000000001133e-05, 4.870000000004038e-07, 8.346999999998828e-06, 4.720000000013602e-07, 1.0027999999998732e-05, 4.720000000013602e-07, 7.916999999999647e-06, 4.7199999999789077e-07, 8.555000000000368e-06, 4.7300000000083386e-07, 8.264000000000882e-06, 4.7199999999789077e-07, 8.957999999999883e-06, 4.720000000013602e-07, 8.028000000000202e-06, 4.860000000009301e-07, 1.0209000000000606e-05, 4.7199999999789077e-07, 8.179999999999993e-06, 4.7300000000083386e-07, 1.0083000000001008e-05, 4.7199999999789077e-07], 'diff': [0, 4.729999999973644e-07, 8.875000000001937e-06, 4.859999999974607e-07, 9.819000000001188e-06, 4.720000000013602e-07, 7.639000000000257e-06, 4.729999999973644e-07, 9.291000000001548e-06, 4.860000000009301e-07, 8.777999999997482e-06, 4.720000000013602e-07, 7.5419999999992715e-06, 4.720000000013602e-07, 1.0222000000000703e-05, 4.870000000004038e-07, 7.943999999999313e-06, 4.7199999999789077e-07, 9.610999999999648e-06, 4.860000000009301e-07, 1.0513999999999663e-05, 4.7300000000083386e-07, 8.513000000001658e-06, 4.729999999973644e-07, 7.819000000002657e-06, 4.7199999999789077e-07, 8.972999999998926e-06, 4.720000000013602e-07, 9.902999999998607e-06, 4.720000000013602e-07, 9.278000000001452e-06, 4.859999999974607e-07, 8.666000000000923e-06, 4.7300000000083386e-07, 8.874999999998467e-06, 4.720000000013602e-07, 9.694000000001063e-06, 4.7199999999789077e-07, 8.903000000001077e-06, 4.720000000013602e-07, 7.819999999998661e-06, 4.720000000013602e-07, 9.195000000000036e-06, 4.859999999974607e-07, 7.958000000002352e-06, 4.7199999999789077e-07, 9.709000000000106e-06, 4.720000000013602e-07, 7.639000000000257e-06, 4.7199999999789077e-07, 1.0652999999999357e-05, 4.720000000013602e-07, 8.957999999999883e-06, 4.720000000013602e-07, 7.625000000000687e-06, 4.729999999973644e-07, 8.083000000002477e-06, 4.7199999999789077e-07, 1.0500000000000093e-05, 4.720000000013602e-07, 7.819999999998661e-06, 4.720000000013602e-07, 9.402999999998107e-06, 4.720000000013602e-07, 9.597000000000078e-06, 4.7300000000083386e-07, 7.749999999997342e-06, 4.720000000013602e-07, 7.429999999999243e-06, 4.7300000000083386e-07, 9.305000000001118e-06, 4.7199999999789077e-07, 8.264000000000882e-06, 4.720000000013602e-07, 8.667000000000397e-06, 4.859999999974607e-07, 1.0527999999999232e-05, 4.860000000009301e-07, 1.0208000000001133e-05, 4.870000000004038e-07, 8.346999999998828e-06, 4.720000000013602e-07, 1.0027999999998732e-05, 4.720000000013602e-07, 7.916999999999647e-06, 4.7199999999789077e-07, 8.555000000000368e-06, 4.7300000000083386e-07, 8.264000000000882e-06, 4.7199999999789077e-07, 8.957999999999883e-06, 4.720000000013602e-07, 8.028000000000202e-06, 4.860000000009301e-07, 1.0209000000000606e-05, 4.7199999999789077e-07, 8.179999999999993e-06, 4.7300000000083386e-07, 1.0083000000001008e-05, 4.7199999999789077e-07]}</msg>
<status status="PASS" starttime="20201030 18:29:41.943" endtime="20201030 18:29:41.949"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.938" endtime="20201030 18:29:41.949"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:41.956" level="INFO">${RESULT} = [{'diff': 4.729999999973644e-07}, {'diff': 4.859999999974607e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.729999999973644e-07}, {'diff': 4.860000000009301e-07}, {'diff': 4.720000000013602e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:29:41.950" endtime="20201030 18:29:41.956"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:29:41.961" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.729999999973644e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.7199...</msg>
<status status="PASS" starttime="20201030 18:29:41.957" endtime="20201030 18:29:41.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:41.968" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:29:41.966" endtime="20201030 18:29:41.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:41.971" level="INFO">VALUE: [4.729999999973644e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201030 18:29:41.969" endtime="20201030 18:29:41.971"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.962" endtime="20201030 18:29:41.972"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:41.976" endtime="20201030 18:29:41.995"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.974" endtime="20201030 18:29:41.996"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.973" endtime="20201030 18:29:41.996"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.567" endtime="20201030 18:29:41.996"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.566" endtime="20201030 18:29:41.996"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:42.005" endtime="20201030 18:29:42.019"></status>
</kw>
<msg timestamp="20201030 18:29:42.019" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:42.003" endtime="20201030 18:29:42.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:42.022" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:42.020" endtime="20201030 18:29:42.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:42.023" endtime="20201030 18:29:42.024"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.000" endtime="20201030 18:29:42.025"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.998" endtime="20201030 18:29:42.025"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:42.032" endtime="20201030 18:29:42.320"></status>
</kw>
<msg timestamp="20201030 18:29:42.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019355472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019355944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:42.030" endtime="20201030 18:29:42.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:42.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019355472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019355944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:42.324" endtime="20201030 18:29:42.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:42.333" endtime="20201030 18:29:42.334"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.028" endtime="20201030 18:29:42.335"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.026" endtime="20201030 18:29:42.335"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:29:42.362" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:29:42.336" endtime="20201030 18:29:42.363"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:42.364" endtime="20201030 18:29:42.366"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:42.371" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:29:42.369" endtime="20201030 18:29:42.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:42.377" level="INFO">VALUE: {'sourcetime': [0.019355472, 0.019355944, 0.019364486, 0.019364972, 0.019375194, 0.019375667, 0.019386333, 0.019386806, 0.019394819, 0.019395306, 0.019404667, 0.019405139, 0.019414375, 0.019414861, 0.019424056, 0.019424528, 0.019431958, 0.019432444, 0.019442986, 0.019443472, 0.019452194, 0.019452667, 0.019462819, 0.019463292, 0.019473097, 0.019473569, 0.019484014, 0.019484486, 0.019493333, 0.019493819, 0.019502986, 0.019503472, 0.01951225, 0.019512722, 0.019521264, 0.019521736, 0.019529875, 0.019530361, 0.019539014, 0.019539486, 0.019548361, 0.019548833, 0.019557194, 0.019557667, 0.019565069, 0.019565542, 0.019574431, 0.019574903, 0.019584514, 0.019585, 0.019595278, 0.01959575, 0.019603347, 0.019603819, 0.019613972, 0.019614444, 0.01962425, 0.019624736, 0.019632778, 0.01963325, 0.019642958, 0.019643431, 0.019653431, 0.019653903, 0.019661736, 0.019662208, 0.019669944, 0.019670417, 0.019677917, 0.019678403, 0.019687681, 0.019688153, 0.019696083, 0.019696569, 0.019707097, 0.019707569, 0.019716653, 0.019717125, 0.019727431, 0.019727917, 0.019735847, 0.019736319, 0.019744472, 0.019744944, 0.019755389, 0.019755861, 0.019765778, 0.01976625, 0.019776889, 0.019777375, 0.019786167, 0.019786639, 0.019795944, 0.019796417, 0.019804361, 0.019804833, 0.019815278, 0.01981575, 0.019825958, 0.019826431], 'eventsource_diff': [0, 4.720000000013602e-07, 8.542000000000272e-06, 4.860000000009301e-07, 1.0221999999997233e-05, 4.7300000000083386e-07, 1.0665999999999454e-05, 4.7300000000083386e-07, 8.013000000001158e-06, 4.870000000004038e-07, 9.360999999999398e-06, 4.7199999999789077e-07, 9.236000000002742e-06, 4.859999999974607e-07, 9.195000000000036e-06, 4.720000000013602e-07, 7.429999999999243e-06, 4.860000000009301e-07, 1.0541999999998802e-05, 4.860000000009301e-07, 8.721999999999203e-06, 4.7300000000083386e-07, 1.0151999999999384e-05, 4.7300000000083386e-07, 9.805000000001618e-06, 4.7199999999789077e-07, 1.0445000000001287e-05, 4.7199999999789077e-07, 8.847000000002797e-06, 4.859999999974607e-07, 9.167000000000897e-06, 4.860000000009301e-07, 8.777999999997482e-06, 4.720000000013602e-07, 8.542000000000272e-06, 4.720000000013602e-07, 8.138999999997287e-06, 4.860000000009301e-07, 8.653000000000827e-06, 4.7199999999789077e-07, 8.875000000001937e-06, 4.720000000013602e-07, 8.360999999998397e-06, 4.7300000000083386e-07, 7.402000000000103e-06, 4.729999999973644e-07, 8.889000000001507e-06, 4.720000000013602e-07, 9.610999999999648e-06, 4.860000000009301e-07, 1.0277999999998982e-05, 4.7199999999789077e-07, 7.597000000001547e-06, 4.720000000013602e-07, 1.0152999999998857e-05, 4.720000000013602e-07, 9.805999999997622e-06, 4.860000000009301e-07, 8.041999999999772e-06, 4.720000000013602e-07, 9.707999999997163e-06, 4.7300000000083386e-07, 9.999999999999593e-06, 4.720000000013602e-07, 7.832999999998758e-06, 4.720000000013602e-07, 7.736000000001242e-06, 4.729999999973644e-07, 7.500000000000562e-06, 4.860000000009301e-07, 9.277999999997982e-06, 4.720000000013602e-07, 7.929999999999743e-06, 4.860000000009301e-07, 1.0527999999999232e-05, 4.720000000013602e-07, 9.083999999999481e-06, 4.7199999999789077e-07, 1.0306000000001592e-05, 4.860000000009301e-07, 7.929999999999743e-06, 4.7199999999789077e-07, 8.153000000000327e-06, 4.720000000013602e-07, 1.0445000000001287e-05, 4.7199999999789077e-07, 9.917000000001647e-06, 4.7199999999789077e-07, 1.0638999999999788e-05, 4.860000000009301e-07, 8.792000000000522e-06, 4.720000000013602e-07, 9.304999999997648e-06, 4.7300000000083386e-07, 7.943999999999313e-06, 4.720000000013602e-07, 1.0444999999997817e-05, 4.720000000013602e-07, 1.0208000000001133e-05, 4.729999999973644e-07], 'diff': [0, 4.720000000013602e-07, 8.542000000000272e-06, 4.860000000009301e-07, 1.0221999999997233e-05, 4.7300000000083386e-07, 1.0665999999999454e-05, 4.7300000000083386e-07, 8.013000000001158e-06, 4.870000000004038e-07, 9.360999999999398e-06, 4.7199999999789077e-07, 9.236000000002742e-06, 4.859999999974607e-07, 9.195000000000036e-06, 4.720000000013602e-07, 7.429999999999243e-06, 4.860000000009301e-07, 1.0541999999998802e-05, 4.860000000009301e-07, 8.721999999999203e-06, 4.7300000000083386e-07, 1.0151999999999384e-05, 4.7300000000083386e-07, 9.805000000001618e-06, 4.7199999999789077e-07, 1.0445000000001287e-05, 4.7199999999789077e-07, 8.847000000002797e-06, 4.859999999974607e-07, 9.167000000000897e-06, 4.860000000009301e-07, 8.777999999997482e-06, 4.720000000013602e-07, 8.542000000000272e-06, 4.720000000013602e-07, 8.138999999997287e-06, 4.860000000009301e-07, 8.653000000000827e-06, 4.7199999999789077e-07, 8.875000000001937e-06, 4.720000000013602e-07, 8.360999999998397e-06, 4.7300000000083386e-07, 7.402000000000103e-06, 4.729999999973644e-07, 8.889000000001507e-06, 4.720000000013602e-07, 9.610999999999648e-06, 4.860000000009301e-07, 1.0277999999998982e-05, 4.7199999999789077e-07, 7.597000000001547e-06, 4.720000000013602e-07, 1.0152999999998857e-05, 4.720000000013602e-07, 9.805999999997622e-06, 4.860000000009301e-07, 8.041999999999772e-06, 4.720000000013602e-07, 9.707999999997163e-06, 4.7300000000083386e-07, 9.999999999999593e-06, 4.720000000013602e-07, 7.832999999998758e-06, 4.720000000013602e-07, 7.736000000001242e-06, 4.729999999973644e-07, 7.500000000000562e-06, 4.860000000009301e-07, 9.277999999997982e-06, 4.720000000013602e-07, 7.929999999999743e-06, 4.860000000009301e-07, 1.0527999999999232e-05, 4.720000000013602e-07, 9.083999999999481e-06, 4.7199999999789077e-07, 1.0306000000001592e-05, 4.860000000009301e-07, 7.929999999999743e-06, 4.7199999999789077e-07, 8.153000000000327e-06, 4.720000000013602e-07, 1.0445000000001287e-05, 4.7199999999789077e-07, 9.917000000001647e-06, 4.7199999999789077e-07, 1.0638999999999788e-05, 4.860000000009301e-07, 8.792000000000522e-06, 4.720000000013602e-07, 9.304999999997648e-06, 4.7300000000083386e-07, 7.943999999999313e-06, 4.720000000013602e-07, 1.0444999999997817e-05, 4.720000000013602e-07, 1.0208000000001133e-05, 4.729999999973644e-07]}</msg>
<status status="PASS" starttime="20201030 18:29:42.373" endtime="20201030 18:29:42.378"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.367" endtime="20201030 18:29:42.379"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:42.384" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.860000000009301e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.870000000004038e-07}, {'diff': 4.7199999999789077e-07}...</msg>
<status status="PASS" starttime="20201030 18:29:42.380" endtime="20201030 18:29:42.385"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:29:42.389" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.8...</msg>
<status status="PASS" starttime="20201030 18:29:42.385" endtime="20201030 18:29:42.389"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:42.393" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:29:42.392" endtime="20201030 18:29:42.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:42.395" level="INFO">VALUE: [4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07]</msg>
<status status="PASS" starttime="20201030 18:29:42.394" endtime="20201030 18:29:42.396"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.389" endtime="20201030 18:29:42.396"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:42.400" endtime="20201030 18:29:42.419"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.398" endtime="20201030 18:29:42.420"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.397" endtime="20201030 18:29:42.420"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.997" endtime="20201030 18:29:42.420"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.997" endtime="20201030 18:29:42.420"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:42.429" endtime="20201030 18:29:42.446"></status>
</kw>
<msg timestamp="20201030 18:29:42.446" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:42.428" endtime="20201030 18:29:42.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:42.449" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:42.447" endtime="20201030 18:29:42.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:42.450" endtime="20201030 18:29:42.452"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.424" endtime="20201030 18:29:42.452"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.423" endtime="20201030 18:29:42.453"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:42.459" endtime="20201030 18:29:42.747"></status>
</kw>
<msg timestamp="20201030 18:29:42.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022164083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022164556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:42.457" endtime="20201030 18:29:42.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:42.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022164083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022164556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:42.752" endtime="20201030 18:29:42.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:42.768" endtime="20201030 18:29:42.770"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.455" endtime="20201030 18:29:42.770"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.453" endtime="20201030 18:29:42.771"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:29:42.796" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:29:42.772" endtime="20201030 18:29:42.796"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:42.797" endtime="20201030 18:29:42.798"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:42.802" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:29:42.801" endtime="20201030 18:29:42.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:42.806" level="INFO">VALUE: {'sourcetime': [0.022164083, 0.022164556, 0.022171972, 0.022172444, 0.022181319, 0.022181792, 0.022192264, 0.022192736, 0.022201972, 0.022202458, 0.022211903, 0.022212375, 0.022222444, 0.022222917, 0.022233528, 0.022234, 0.022244528, 0.022245014, 0.022253889, 0.022254361, 0.022261903, 0.022262375, 0.022270542, 0.022271014, 0.022281597, 0.022282069, 0.022290097, 0.022290583, 0.022298833, 0.022299306, 0.022307861, 0.022308333, 0.022316694, 0.022317167, 0.022326236, 0.022326708, 0.022337236, 0.022337708, 0.022345972, 0.022346444, 0.022355028, 0.0223555, 0.022365639, 0.022366111, 0.022374583, 0.022375056, 0.022385069, 0.022385556, 0.022394639, 0.022395125, 0.022405556, 0.022406028, 0.022414083, 0.022414556, 0.022422167, 0.022422639, 0.02243275, 0.022433222, 0.022442875, 0.022443347, 0.022452681, 0.022453153, 0.022463472, 0.022463958, 0.022472292, 0.022472778, 0.022480306, 0.022480778, 0.022489319, 0.022489792, 0.022498486, 0.022498958, 0.022508542, 0.022509014, 0.022519, 0.022519486, 0.022530125, 0.022530597, 0.022538861, 0.022539333, 0.022548056, 0.022548528, 0.022556431, 0.022556917, 0.022566319, 0.022566792, 0.022575264, 0.022575736, 0.022586097, 0.022586569, 0.022596042, 0.022596514, 0.022604917, 0.022605389, 0.022614625, 0.022615097, 0.022622931, 0.022623403, 0.022631125, 0.022631597], 'eventsource_diff': [0, 4.729999999973644e-07, 7.416000000003142e-06, 4.7199999999789077e-07, 8.875000000001937e-06, 4.729999999973644e-07, 1.0472000000000953e-05, 4.720000000013602e-07, 9.235999999999273e-06, 4.860000000009301e-07, 9.445000000000286e-06, 4.7199999999789077e-07, 1.0069000000001438e-05, 4.729999999973644e-07, 1.0611000000000648e-05, 4.720000000013602e-07, 1.0527999999999232e-05, 4.860000000009301e-07, 8.874999999998467e-06, 4.720000000013602e-07, 7.5419999999992715e-06, 4.720000000013602e-07, 8.166999999999897e-06, 4.7199999999789077e-07, 1.0583000000001508e-05, 4.720000000013602e-07, 8.027999999996732e-06, 4.860000000009301e-07, 8.250000000001312e-06, 4.7300000000083386e-07, 8.554999999996898e-06, 4.720000000013602e-07, 8.361000000001867e-06, 4.729999999973644e-07, 9.069000000000438e-06, 4.720000000013602e-07, 1.0527999999999232e-05, 4.720000000013602e-07, 8.263999999997412e-06, 4.720000000013602e-07, 8.583999999998981e-06, 4.720000000013602e-07, 1.0138999999999287e-05, 4.720000000013602e-07, 8.471999999998953e-06, 4.7300000000083386e-07, 1.0012999999999689e-05, 4.870000000004038e-07, 9.083000000000008e-06, 4.859999999974607e-07, 1.0431000000001717e-05, 4.720000000013602e-07, 8.054999999999868e-06, 4.729999999973644e-07, 7.611000000001117e-06, 4.720000000013602e-07, 1.0111000000000148e-05, 4.7199999999789077e-07, 9.653000000001827e-06, 4.7199999999789077e-07, 9.333999999999731e-06, 4.720000000013602e-07, 1.0319000000001688e-05, 4.859999999974607e-07, 8.3340000000022e-06, 4.859999999974607e-07, 7.527999999999702e-06, 4.720000000013602e-07, 8.541000000000798e-06, 4.7300000000083386e-07, 8.694000000000063e-06, 4.7199999999789077e-07, 9.583999999999981e-06, 4.720000000013602e-07, 9.986000000000023e-06, 4.859999999974607e-07, 1.0639000000003257e-05, 4.7199999999789077e-07, 8.264000000000882e-06, 4.720000000013602e-07, 8.722999999998676e-06, 4.720000000013602e-07, 7.902999999996607e-06, 4.860000000009301e-07, 9.402000000002103e-06, 4.729999999973644e-07, 8.472000000002422e-06, 4.7199999999789077e-07, 1.0361000000000398e-05, 4.720000000013602e-07, 9.472999999999426e-06, 4.720000000013602e-07, 8.402999999997107e-06, 4.720000000013602e-07, 9.235999999999273e-06, 4.720000000013602e-07, 7.833999999998231e-06, 4.720000000013602e-07, 7.721999999998203e-06, 4.720000000013602e-07], 'diff': [0, 4.729999999973644e-07, 7.416000000003142e-06, 4.7199999999789077e-07, 8.875000000001937e-06, 4.729999999973644e-07, 1.0472000000000953e-05, 4.720000000013602e-07, 9.235999999999273e-06, 4.860000000009301e-07, 9.445000000000286e-06, 4.7199999999789077e-07, 1.0069000000001438e-05, 4.729999999973644e-07, 1.0611000000000648e-05, 4.720000000013602e-07, 1.0527999999999232e-05, 4.860000000009301e-07, 8.874999999998467e-06, 4.720000000013602e-07, 7.5419999999992715e-06, 4.720000000013602e-07, 8.166999999999897e-06, 4.7199999999789077e-07, 1.0583000000001508e-05, 4.720000000013602e-07, 8.027999999996732e-06, 4.860000000009301e-07, 8.250000000001312e-06, 4.7300000000083386e-07, 8.554999999996898e-06, 4.720000000013602e-07, 8.361000000001867e-06, 4.729999999973644e-07, 9.069000000000438e-06, 4.720000000013602e-07, 1.0527999999999232e-05, 4.720000000013602e-07, 8.263999999997412e-06, 4.720000000013602e-07, 8.583999999998981e-06, 4.720000000013602e-07, 1.0138999999999287e-05, 4.720000000013602e-07, 8.471999999998953e-06, 4.7300000000083386e-07, 1.0012999999999689e-05, 4.870000000004038e-07, 9.083000000000008e-06, 4.859999999974607e-07, 1.0431000000001717e-05, 4.720000000013602e-07, 8.054999999999868e-06, 4.729999999973644e-07, 7.611000000001117e-06, 4.720000000013602e-07, 1.0111000000000148e-05, 4.7199999999789077e-07, 9.653000000001827e-06, 4.7199999999789077e-07, 9.333999999999731e-06, 4.720000000013602e-07, 1.0319000000001688e-05, 4.859999999974607e-07, 8.3340000000022e-06, 4.859999999974607e-07, 7.527999999999702e-06, 4.720000000013602e-07, 8.541000000000798e-06, 4.7300000000083386e-07, 8.694000000000063e-06, 4.7199999999789077e-07, 9.583999999999981e-06, 4.720000000013602e-07, 9.986000000000023e-06, 4.859999999974607e-07, 1.0639000000003257e-05, 4.7199999999789077e-07, 8.264000000000882e-06, 4.720000000013602e-07, 8.722999999998676e-06, 4.720000000013602e-07, 7.902999999996607e-06, 4.860000000009301e-07, 9.402000000002103e-06, 4.729999999973644e-07, 8.472000000002422e-06, 4.7199999999789077e-07, 1.0361000000000398e-05, 4.720000000013602e-07, 9.472999999999426e-06, 4.720000000013602e-07, 8.402999999997107e-06, 4.720000000013602e-07, 9.235999999999273e-06, 4.720000000013602e-07, 7.833999999998231e-06, 4.720000000013602e-07, 7.721999999998203e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201030 18:29:42.803" endtime="20201030 18:29:42.807"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.799" endtime="20201030 18:29:42.808"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:42.811" level="INFO">${RESULT} = [{'diff': 4.729999999973644e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.729999999973644e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.860000000009301e-07}, {'diff': 4.7199999999789077e-07},...</msg>
<status status="PASS" starttime="20201030 18:29:42.808" endtime="20201030 18:29:42.812"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:29:42.816" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.729999999973644e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.86...</msg>
<status status="PASS" starttime="20201030 18:29:42.812" endtime="20201030 18:29:42.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:42.823" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:29:42.821" endtime="20201030 18:29:42.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:42.826" level="INFO">VALUE: [4.729999999973644e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.870000000004038e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 18:29:42.824" endtime="20201030 18:29:42.826"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.818" endtime="20201030 18:29:42.827"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:42.833" endtime="20201030 18:29:42.853"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.831" endtime="20201030 18:29:42.853"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.829" endtime="20201030 18:29:42.854"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.421" endtime="20201030 18:29:42.854"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.421" endtime="20201030 18:29:42.854"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:42.862" endtime="20201030 18:29:42.878"></status>
</kw>
<msg timestamp="20201030 18:29:42.878" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:42.860" endtime="20201030 18:29:42.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:42.881" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:42.879" endtime="20201030 18:29:42.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:42.882" endtime="20201030 18:29:42.884"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.858" endtime="20201030 18:29:42.884"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.856" endtime="20201030 18:29:42.885"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:42.891" endtime="20201030 18:29:43.176"></status>
</kw>
<msg timestamp="20201030 18:29:43.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020695681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020696153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:42.889" endtime="20201030 18:29:43.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:43.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020695681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020696153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:43.180" endtime="20201030 18:29:43.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:43.189" endtime="20201030 18:29:43.190"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.887" endtime="20201030 18:29:43.191"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.885" endtime="20201030 18:29:43.192"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:29:43.215" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:29:43.192" endtime="20201030 18:29:43.216"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:43.217" endtime="20201030 18:29:43.218"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:43.222" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:29:43.221" endtime="20201030 18:29:43.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:43.226" level="INFO">VALUE: {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'time': [0.020695681, 0.020696153, 0.020705208, 0.020705681, 0.020715903, 0.020716375, 0.020724819, 0.020725306, 0.020735625, 0.020736097, 0.020746222, 0.020746708, 0.020754958, 0.020755444, 0.020764028, 0.0207645, 0.020772014, 0.0207725, 0.020781792, 0.020782278, 0.020790319, 0.020790806, 0.020800014, 0.020800486, 0.020809069, 0.020809542, 0.020818611, 0.020819097, 0.020828931, 0.020829403, 0.020839097, 0.020839583, 0.020848986, 0.020849458, 0.020857556, 0.020858028, 0.020865625, 0.020866097, 0.020875681, 0.020876153, 0.020884708, 0.020885181, 0.020893875, 0.020894347, 0.020903181, 0.020903667, 0.020913361, 0.020913833, 0.020923014, 0.0209235, 0.020931444, 0.020931917, 0.020941222, 0.020941694, 0.020952347, 0.020952833, 0.020963264, 0.02096375, 0.020973042, 0.020973528, 0.020982431, 0.020982903, 0.020992597, 0.020993083, 0.021000611, 0.021001083, 0.021010181, 0.021010653, 0.021018806, 0.021019292, 0.021029, 0.021029486, 0.021040042, 0.021040514, 0.021049917, 0.021050389, 0.021058514, 0.021058986, 0.021066917, 0.021067403, 0.021075847, 0.021076333, 0.021085, 0.021085472, 0.021095681, 0.021096153, 0.021105861, 0.021106347, 0.021115958, 0.021116431, 0.02112625, 0.021126736, 0.021135111, 0.021135583, 0.021143514, 0.021144, 0.021151556, 0.021152028, 0.02116, 0.021160472], 'eventsource_diff': [0, 4.7199999999789077e-07, 9.055000000000868e-06, 4.7300000000083386e-07, 1.0222000000000703e-05, 4.7199999999789077e-07, 8.443999999999813e-06, 4.870000000004038e-07, 1.0319000000001688e-05, 4.7199999999789077e-07, 1.0125000000003187e-05, 4.859999999974607e-07, 8.250000000001312e-06, 4.860000000009301e-07, 8.583999999998981e-06, 4.720000000013602e-07, 7.513999999996662e-06, 4.860000000009301e-07, 9.292000000001022e-06, 4.860000000009301e-07, 8.041000000000298e-06, 4.869999999969343e-07, 9.208000000000133e-06, 4.720000000013602e-07, 8.582999999999508e-06, 4.7300000000083386e-07, 9.069000000000438e-06, 4.860000000009301e-07, 9.833999999996762e-06, 4.720000000013602e-07, 9.694000000001063e-06, 4.859999999974607e-07, 9.403000000001577e-06, 4.720000000013602e-07, 8.097999999998051e-06, 4.720000000013602e-07, 7.5969999999980775e-06, 4.720000000013602e-07, 9.583999999999981e-06, 4.720000000013602e-07, 8.554999999996898e-06, 4.7300000000083386e-07, 8.694000000000063e-06, 4.720000000013602e-07, 8.833999999999231e-06, 4.860000000009301e-07, 9.693999999997593e-06, 4.720000000013602e-07, 9.181000000000467e-06, 4.860000000009301e-07, 7.943999999999313e-06, 4.7300000000083386e-07, 9.304999999997648e-06, 4.720000000013602e-07, 1.0652999999999357e-05, 4.860000000009301e-07, 1.0430999999998247e-05, 4.860000000009301e-07, 9.292000000001022e-06, 4.860000000009301e-07, 8.902999999997607e-06, 4.720000000013602e-07, 9.694000000001063e-06, 4.859999999974607e-07, 7.527999999999702e-06, 4.720000000013602e-07, 9.097999999999051e-06, 4.720000000013602e-07, 8.153000000000327e-06, 4.859999999974607e-07, 9.708000000000633e-06, 4.860000000009301e-07, 1.0555999999998372e-05, 4.720000000013602e-07, 9.403000000001577e-06, 4.7199999999789077e-07, 8.125000000001187e-06, 4.7199999999789077e-07, 7.931000000002686e-06, 4.859999999974607e-07, 8.444000000003282e-06, 4.859999999974607e-07, 8.667000000000397e-06, 4.720000000013602e-07, 1.0209000000000606e-05, 4.7199999999789077e-07, 9.708000000000633e-06, 4.860000000009301e-07, 9.610999999999648e-06, 4.7300000000083386e-07, 9.818999999997718e-06, 4.860000000009301e-07, 8.375000000001437e-06, 4.7199999999789077e-07, 7.930999999999216e-06, 4.860000000009301e-07, 7.555999999998841e-06, 4.720000000013602e-07, 7.972000000001922e-06, 4.7199999999789077e-07], 'diff': [0, 4.7199999999789077e-07, 9.055000000000868e-06, 4.7300000000083386e-07, 1.0222000000000703e-05, 4.7199999999789077e-07, 8.443999999999813e-06, 4.870000000004038e-07, 1.0319000000001688e-05, 4.7199999999789077e-07, 1.0125000000003187e-05, 4.859999999974607e-07, 8.250000000001312e-06, 4.860000000009301e-07, 8.583999999998981e-06, 4.720000000013602e-07, 7.513999999996662e-06, 4.860000000009301e-07, 9.292000000001022e-06, 4.860000000009301e-07, 8.041000000000298e-06, 4.869999999969343e-07, 9.208000000000133e-06, 4.720000000013602e-07, 8.582999999999508e-06, 4.7300000000083386e-07, 9.069000000000438e-06, 4.860000000009301e-07, 9.833999999996762e-06, 4.720000000013602e-07, 9.694000000001063e-06, 4.859999999974607e-07, 9.403000000001577e-06, 4.720000000013602e-07, 8.097999999998051e-06, 4.720000000013602e-07, 7.5969999999980775e-06, 4.720000000013602e-07, 9.583999999999981e-06, 4.720000000013602e-07, 8.554999999996898e-06, 4.7300000000083386e-07, 8.694000000000063e-06, 4.720000000013602e-07, 8.833999999999231e-06, 4.860000000009301e-07, 9.693999999997593e-06, 4.720000000013602e-07, 9.181000000000467e-06, 4.860000000009301e-07, 7.943999999999313e-06, 4.7300000000083386e-07, 9.304999999997648e-06, 4.720000000013602e-07, 1.0652999999999357e-05, 4.860000000009301e-07, 1.0430999999998247e-05, 4.860000000009301e-07, 9.292000000001022e-06, 4.860000000009301e-07, 8.902999999997607e-06, 4.720000000013602e-07, 9.694000000001063e-06, 4.859999999974607e-07, 7.527999999999702e-06, 4.720000000013602e-07, 9.097999999999051e-06, 4.720000000013602e-07, 8.153000000000327e-06, 4.859999999974607e-07, 9.708000000000633e-06, 4.860000000009301e-07, 1.0555999999998372e-05, 4.720000000013602e-07, 9.403000000001577e-06, 4.7199999999789077e-07, 8.125000000001187e-06, 4.7199999999789077e-07, 7.931000000002686e-06, 4.859999999974607e-07, 8.444000000003282e-06, 4.859999999974607e-07, 8.667000000000397e-06, 4.720000000013602e-07, 1.0209000000000606e-05, 4.7199999999789077e-07, 9.708000000000633e-06, 4.860000000009301e-07, 9.610999999999648e-06, 4.7300000000083386e-07, 9.818999999997718e-06, 4.860000000009301e-07, 8.375000000001437e-06, 4.7199999999789077e-07, 7.930999999999216e-06, 4.860000000009301e-07, 7.555999999998841e-06, 4.720000000013602e-07, 7.972000000001922e-06, 4.7199999999789077e-07]}</msg>
<status status="PASS" starttime="20201030 18:29:43.223" endtime="20201030 18:29:43.227"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.219" endtime="20201030 18:29:43.227"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:43.231" level="INFO">${RESULT} = [{'diff': 4.7199999999789077e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.870000000004038e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.859999999974607e-07...</msg>
<status status="PASS" starttime="20201030 18:29:43.228" endtime="20201030 18:29:43.232"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:29:43.235" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4....</msg>
<status status="PASS" starttime="20201030 18:29:43.232" endtime="20201030 18:29:43.236"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:43.240" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:29:43.239" endtime="20201030 18:29:43.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:43.243" level="INFO">VALUE: [4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.869999999969343e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201030 18:29:43.241" endtime="20201030 18:29:43.243"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.236" endtime="20201030 18:29:43.244"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:43.247" endtime="20201030 18:29:43.267"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.246" endtime="20201030 18:29:43.267"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.245" endtime="20201030 18:29:43.268"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.855" endtime="20201030 18:29:43.268"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.854" endtime="20201030 18:29:43.268"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:43.276" endtime="20201030 18:29:43.289"></status>
</kw>
<msg timestamp="20201030 18:29:43.290" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:43.274" endtime="20201030 18:29:43.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:43.292" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:43.291" endtime="20201030 18:29:43.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:43.293" endtime="20201030 18:29:43.295"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.272" endtime="20201030 18:29:43.296"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.270" endtime="20201030 18:29:43.296"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:43.303" endtime="20201030 18:29:43.591"></status>
</kw>
<msg timestamp="20201030 18:29:43.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018537819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018538292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:43.301" endtime="20201030 18:29:43.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:43.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018537819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018538292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:43.595" endtime="20201030 18:29:43.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:43.604" endtime="20201030 18:29:43.605"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.298" endtime="20201030 18:29:43.606"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.297" endtime="20201030 18:29:43.606"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:29:43.631" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:29:43.607" endtime="20201030 18:29:43.631"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:43.632" endtime="20201030 18:29:43.634"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:43.637" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:29:43.636" endtime="20201030 18:29:43.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:43.641" level="INFO">VALUE: {'sourcetime': [0.018537819, 0.018538292, 0.018546556, 0.018547028, 0.018556306, 0.018556778, 0.018564708, 0.018565194, 0.018573347, 0.018573819, 0.018581958, 0.018582431, 0.018590875, 0.018591347, 0.018599083, 0.018599556, 0.018607903, 0.018608375, 0.018619028, 0.0186195, 0.018627861, 0.018628347, 0.018636208, 0.018636681, 0.018647097, 0.018647583, 0.01865625, 0.018656736, 0.018665417, 0.018665889, 0.018673847, 0.018674319, 0.018684403, 0.018684889, 0.018694056, 0.018694542, 0.018704444, 0.018704917, 0.018714208, 0.018714681, 0.018723958, 0.018724431, 0.018734125, 0.018734597, 0.018744708, 0.018745181, 0.018755306, 0.018755778, 0.018766292, 0.018766778, 0.018776986, 0.018777458, 0.018785708, 0.018786181, 0.018796722, 0.018797194, 0.018806306, 0.018806778, 0.018814403, 0.018814889, 0.018823875, 0.018824347, 0.018834694, 0.018835167, 0.018844153, 0.018844625, 0.018854958, 0.018855431, 0.018864514, 0.018864986, 0.018873889, 0.018874361, 0.018884347, 0.018884819, 0.018894917, 0.018895389, 0.018903125, 0.018903597, 0.018912875, 0.018913347, 0.01892325, 0.018923722, 0.018931347, 0.018931819, 0.018941319, 0.018941792, 0.018952417, 0.018952903, 0.018960639, 0.018961111, 0.018969236, 0.018969708, 0.018977347, 0.018977819, 0.018985903, 0.018986375, 0.018994403, 0.018994889, 0.019003875, 0.019004347], 'eventsource_diff': [0, 4.7300000000083386e-07, 8.263999999997412e-06, 4.720000000013602e-07, 9.278000000001452e-06, 4.7199999999789077e-07, 7.929999999999743e-06, 4.860000000009301e-07, 8.153000000000327e-06, 4.7199999999789077e-07, 8.139000000000757e-06, 4.7300000000083386e-07, 8.443999999999813e-06, 4.720000000013602e-07, 7.735999999997772e-06, 4.7300000000083386e-07, 8.346999999998828e-06, 4.720000000013602e-07, 1.0652999999999357e-05, 4.720000000013602e-07, 8.360999999998397e-06, 4.860000000009301e-07, 7.861000000001367e-06, 4.729999999973644e-07, 1.0416000000002673e-05, 4.859999999974607e-07, 8.667000000000397e-06, 4.860000000009301e-07, 8.680999999999967e-06, 4.720000000013602e-07, 7.957999999998883e-06, 4.720000000013602e-07, 1.0083999999997012e-05, 4.860000000009301e-07, 9.167000000000897e-06, 4.860000000009301e-07, 9.901999999999134e-06, 4.7300000000083386e-07, 9.290999999998079e-06, 4.7300000000083386e-07, 9.276999999998509e-06, 4.7300000000083386e-07, 9.694000000001063e-06, 4.7199999999789077e-07, 1.0111000000000148e-05, 4.7300000000083386e-07, 1.0124999999999718e-05, 4.720000000013602e-07, 1.0513999999999663e-05, 4.860000000009301e-07, 1.0207999999997663e-05, 4.720000000013602e-07, 8.250000000001312e-06, 4.729999999973644e-07, 1.0540999999999329e-05, 4.720000000013602e-07, 9.111999999998621e-06, 4.720000000013602e-07, 7.625000000000687e-06, 4.860000000009301e-07, 8.985999999999023e-06, 4.720000000013602e-07, 1.0346999999997358e-05, 4.7300000000083386e-07, 8.985999999999023e-06, 4.720000000013602e-07, 1.0333000000001258e-05, 4.729999999973644e-07, 9.083000000000008e-06, 4.720000000013602e-07, 8.903000000001077e-06, 4.7199999999789077e-07, 9.986000000000023e-06, 4.720000000013602e-07, 1.0098000000000051e-05, 4.7199999999789077e-07, 7.736000000001242e-06, 4.720000000013602e-07, 9.277999999997982e-06, 4.720000000013602e-07, 9.902999999998607e-06, 4.720000000013602e-07, 7.625000000000687e-06, 4.7199999999789077e-07, 9.500000000002562e-06, 4.729999999973644e-07, 1.0625000000000218e-05, 4.860000000009301e-07, 7.736000000001242e-06, 4.7199999999789077e-07, 8.125000000001187e-06, 4.7199999999789077e-07, 7.639000000000257e-06, 4.720000000013602e-07, 8.083999999998481e-06, 4.720000000013602e-07, 8.028000000000202e-06, 4.860000000009301e-07, 8.985999999999023e-06, 4.720000000013602e-07], 'diff': [0, 4.7300000000083386e-07, 8.263999999997412e-06, 4.720000000013602e-07, 9.278000000001452e-06, 4.7199999999789077e-07, 7.929999999999743e-06, 4.860000000009301e-07, 8.153000000000327e-06, 4.7199999999789077e-07, 8.139000000000757e-06, 4.7300000000083386e-07, 8.443999999999813e-06, 4.720000000013602e-07, 7.735999999997772e-06, 4.7300000000083386e-07, 8.346999999998828e-06, 4.720000000013602e-07, 1.0652999999999357e-05, 4.720000000013602e-07, 8.360999999998397e-06, 4.860000000009301e-07, 7.861000000001367e-06, 4.729999999973644e-07, 1.0416000000002673e-05, 4.859999999974607e-07, 8.667000000000397e-06, 4.860000000009301e-07, 8.680999999999967e-06, 4.720000000013602e-07, 7.957999999998883e-06, 4.720000000013602e-07, 1.0083999999997012e-05, 4.860000000009301e-07, 9.167000000000897e-06, 4.860000000009301e-07, 9.901999999999134e-06, 4.7300000000083386e-07, 9.290999999998079e-06, 4.7300000000083386e-07, 9.276999999998509e-06, 4.7300000000083386e-07, 9.694000000001063e-06, 4.7199999999789077e-07, 1.0111000000000148e-05, 4.7300000000083386e-07, 1.0124999999999718e-05, 4.720000000013602e-07, 1.0513999999999663e-05, 4.860000000009301e-07, 1.0207999999997663e-05, 4.720000000013602e-07, 8.250000000001312e-06, 4.729999999973644e-07, 1.0540999999999329e-05, 4.720000000013602e-07, 9.111999999998621e-06, 4.720000000013602e-07, 7.625000000000687e-06, 4.860000000009301e-07, 8.985999999999023e-06, 4.720000000013602e-07, 1.0346999999997358e-05, 4.7300000000083386e-07, 8.985999999999023e-06, 4.720000000013602e-07, 1.0333000000001258e-05, 4.729999999973644e-07, 9.083000000000008e-06, 4.720000000013602e-07, 8.903000000001077e-06, 4.7199999999789077e-07, 9.986000000000023e-06, 4.720000000013602e-07, 1.0098000000000051e-05, 4.7199999999789077e-07, 7.736000000001242e-06, 4.720000000013602e-07, 9.277999999997982e-06, 4.720000000013602e-07, 9.902999999998607e-06, 4.720000000013602e-07, 7.625000000000687e-06, 4.7199999999789077e-07, 9.500000000002562e-06, 4.729999999973644e-07, 1.0625000000000218e-05, 4.860000000009301e-07, 7.736000000001242e-06, 4.7199999999789077e-07, 8.125000000001187e-06, 4.7199999999789077e-07, 7.639000000000257e-06, 4.720000000013602e-07, 8.083999999998481e-06, 4.720000000013602e-07, 8.028000000000202e-06, 4.860000000009301e-07, 8.985999999999023e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201030 18:29:43.638" endtime="20201030 18:29:43.642"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.634" endtime="20201030 18:29:43.643"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:43.648" level="INFO">${RESULT} = [{'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.860000000009301e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.7300000000083386e-07...</msg>
<status status="PASS" starttime="20201030 18:29:43.645" endtime="20201030 18:29:43.648"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:29:43.652" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4...</msg>
<status status="PASS" starttime="20201030 18:29:43.649" endtime="20201030 18:29:43.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:43.656" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:29:43.655" endtime="20201030 18:29:43.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:43.659" level="INFO">VALUE: [4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 18:29:43.657" endtime="20201030 18:29:43.659"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.653" endtime="20201030 18:29:43.659"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:43.663" endtime="20201030 18:29:43.682"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.661" endtime="20201030 18:29:43.683"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.660" endtime="20201030 18:29:43.683"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.269" endtime="20201030 18:29:43.684"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.268" endtime="20201030 18:29:43.684"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:43.692" endtime="20201030 18:29:43.707"></status>
</kw>
<msg timestamp="20201030 18:29:43.708" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:43.691" endtime="20201030 18:29:43.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:43.710" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:43.709" endtime="20201030 18:29:43.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:43.711" endtime="20201030 18:29:43.713"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.687" endtime="20201030 18:29:43.713"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.686" endtime="20201030 18:29:43.714"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:43.720" endtime="20201030 18:29:44.017"></status>
</kw>
<msg timestamp="20201030 18:29:44.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019939569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019940056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:43.719" endtime="20201030 18:29:44.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:44.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019939569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019940056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:44.021" endtime="20201030 18:29:44.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:44.030" endtime="20201030 18:29:44.033"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.716" endtime="20201030 18:29:44.033"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.714" endtime="20201030 18:29:44.034"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:29:44.062" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:29:44.035" endtime="20201030 18:29:44.062"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:44.063" endtime="20201030 18:29:44.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:44.068" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:29:44.067" endtime="20201030 18:29:44.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:44.072" level="INFO">VALUE: {'sourcetime': [0.019939569, 0.019940056, 0.019950694, 0.019951167, 0.019961375, 0.019961861, 0.019971264, 0.019971736, 0.019980486, 0.019980958, 0.019988597, 0.019989069, 0.019997931, 0.019998403, 0.020006153, 0.020006625, 0.020015278, 0.02001575, 0.020023583, 0.020024056, 0.020033444, 0.020033917, 0.020041583, 0.020042056, 0.020050806, 0.020051278, 0.020061069, 0.020061542, 0.020072181, 0.020072653, 0.0200805, 0.020080972, 0.020089, 0.020089486, 0.020098458, 0.020098931, 0.020108042, 0.020108514, 0.020117458, 0.020117931, 0.020128472, 0.020128944, 0.020138958, 0.020139431, 0.020147472, 0.020147944, 0.020157542, 0.020158028, 0.020165847, 0.020166333, 0.020174694, 0.020175167, 0.020185333, 0.020185806, 0.020196278, 0.02019675, 0.020204486, 0.020204958, 0.020213333, 0.020213806, 0.020224319, 0.020224792, 0.020232306, 0.020232792, 0.020241861, 0.020242347, 0.020249972, 0.020250444, 0.020257861, 0.020258333, 0.020266056, 0.020266528, 0.020276347, 0.020276819, 0.020286819, 0.020287306, 0.020297417, 0.020297889, 0.020306667, 0.020307139, 0.020317764, 0.02031825, 0.020326903, 0.020327389, 0.020338014, 0.0203385, 0.020345917, 0.020346389, 0.02035425, 0.020354722, 0.020362347, 0.020362833, 0.020370278, 0.02037075, 0.020381111, 0.020381583, 0.020389194, 0.020389681, 0.020398875, 0.020399347], 'eventsource_diff': [0, 4.870000000004038e-07, 1.0638000000000314e-05, 4.729999999973644e-07, 1.0208000000001133e-05, 4.860000000009301e-07, 9.402999999998107e-06, 4.720000000013602e-07, 8.749999999998342e-06, 4.720000000013602e-07, 7.639000000000257e-06, 4.720000000013602e-07, 8.861999999998371e-06, 4.720000000013602e-07, 7.749999999997342e-06, 4.720000000013602e-07, 8.653000000000827e-06, 4.7199999999789077e-07, 7.833000000002227e-06, 4.729999999973644e-07, 9.388000000002533e-06, 4.729999999973644e-07, 7.666000000003392e-06, 4.729999999973644e-07, 8.750000000001812e-06, 4.7199999999789077e-07, 9.791000000002048e-06, 4.7300000000083386e-07, 1.0638999999999788e-05, 4.7199999999789077e-07, 7.847000000001797e-06, 4.7199999999789077e-07, 8.028000000000202e-06, 4.860000000009301e-07, 8.971999999999453e-06, 4.7300000000083386e-07, 9.110999999999148e-06, 4.720000000013602e-07, 8.944000000000313e-06, 4.729999999973644e-07, 1.0541000000002798e-05, 4.7199999999789077e-07, 1.0013999999999162e-05, 4.7300000000083386e-07, 8.041000000000298e-06, 4.720000000013602e-07, 9.597999999999551e-06, 4.860000000009301e-07, 7.818999999999188e-06, 4.860000000009301e-07, 8.360999999998397e-06, 4.7300000000083386e-07, 1.0165999999998954e-05, 4.7300000000083386e-07, 1.0472000000000953e-05, 4.7199999999789077e-07, 7.736000000001242e-06, 4.7199999999789077e-07, 8.375000000001437e-06, 4.7300000000083386e-07, 1.0513000000000189e-05, 4.729999999973644e-07, 7.514000000000132e-06, 4.860000000009301e-07, 9.069000000000438e-06, 4.860000000009301e-07, 7.625000000000687e-06, 4.7199999999789077e-07, 7.4169999999991465e-06, 4.720000000013602e-07, 7.723000000001146e-06, 4.7199999999789077e-07, 9.819000000001188e-06, 4.720000000013602e-07, 9.999999999999593e-06, 4.870000000004038e-07, 1.0111000000000148e-05, 4.7199999999789077e-07, 8.778000000000952e-06, 4.7199999999789077e-07, 1.0625000000000218e-05, 4.860000000009301e-07, 8.653000000000827e-06, 4.860000000009301e-07, 1.0625000000000218e-05, 4.859999999974607e-07, 7.417000000002616e-06, 4.7199999999789077e-07, 7.861000000001367e-06, 4.7199999999789077e-07, 7.625000000000687e-06, 4.860000000009301e-07, 7.444999999998286e-06, 4.720000000013602e-07, 1.0361000000000398e-05, 4.720000000013602e-07, 7.6109999999976474e-06, 4.870000000004038e-07, 9.194000000000563e-06, 4.720000000013602e-07], 'diff': [0, 4.870000000004038e-07, 1.0638000000000314e-05, 4.729999999973644e-07, 1.0208000000001133e-05, 4.860000000009301e-07, 9.402999999998107e-06, 4.720000000013602e-07, 8.749999999998342e-06, 4.720000000013602e-07, 7.639000000000257e-06, 4.720000000013602e-07, 8.861999999998371e-06, 4.720000000013602e-07, 7.749999999997342e-06, 4.720000000013602e-07, 8.653000000000827e-06, 4.7199999999789077e-07, 7.833000000002227e-06, 4.729999999973644e-07, 9.388000000002533e-06, 4.729999999973644e-07, 7.666000000003392e-06, 4.729999999973644e-07, 8.750000000001812e-06, 4.7199999999789077e-07, 9.791000000002048e-06, 4.7300000000083386e-07, 1.0638999999999788e-05, 4.7199999999789077e-07, 7.847000000001797e-06, 4.7199999999789077e-07, 8.028000000000202e-06, 4.860000000009301e-07, 8.971999999999453e-06, 4.7300000000083386e-07, 9.110999999999148e-06, 4.720000000013602e-07, 8.944000000000313e-06, 4.729999999973644e-07, 1.0541000000002798e-05, 4.7199999999789077e-07, 1.0013999999999162e-05, 4.7300000000083386e-07, 8.041000000000298e-06, 4.720000000013602e-07, 9.597999999999551e-06, 4.860000000009301e-07, 7.818999999999188e-06, 4.860000000009301e-07, 8.360999999998397e-06, 4.7300000000083386e-07, 1.0165999999998954e-05, 4.7300000000083386e-07, 1.0472000000000953e-05, 4.7199999999789077e-07, 7.736000000001242e-06, 4.7199999999789077e-07, 8.375000000001437e-06, 4.7300000000083386e-07, 1.0513000000000189e-05, 4.729999999973644e-07, 7.514000000000132e-06, 4.860000000009301e-07, 9.069000000000438e-06, 4.860000000009301e-07, 7.625000000000687e-06, 4.7199999999789077e-07, 7.4169999999991465e-06, 4.720000000013602e-07, 7.723000000001146e-06, 4.7199999999789077e-07, 9.819000000001188e-06, 4.720000000013602e-07, 9.999999999999593e-06, 4.870000000004038e-07, 1.0111000000000148e-05, 4.7199999999789077e-07, 8.778000000000952e-06, 4.7199999999789077e-07, 1.0625000000000218e-05, 4.860000000009301e-07, 8.653000000000827e-06, 4.860000000009301e-07, 1.0625000000000218e-05, 4.859999999974607e-07, 7.417000000002616e-06, 4.7199999999789077e-07, 7.861000000001367e-06, 4.7199999999789077e-07, 7.625000000000687e-06, 4.860000000009301e-07, 7.444999999998286e-06, 4.720000000013602e-07, 1.0361000000000398e-05, 4.720000000013602e-07, 7.6109999999976474e-06, 4.870000000004038e-07, 9.194000000000563e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201030 18:29:44.069" endtime="20201030 18:29:44.073"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.065" endtime="20201030 18:29:44.074"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:44.078" level="INFO">${RESULT} = [{'diff': 4.870000000004038e-07}, {'diff': 4.729999999973644e-07}, {'diff': 4.860000000009301e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:29:44.075" endtime="20201030 18:29:44.078"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:29:44.082" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.870000000004038e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199...</msg>
<status status="PASS" starttime="20201030 18:29:44.079" endtime="20201030 18:29:44.083"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:44.087" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:29:44.086" endtime="20201030 18:29:44.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:44.089" level="INFO">VALUE: [4.870000000004038e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.729999999973644e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 18:29:44.088" endtime="20201030 18:29:44.089"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.083" endtime="20201030 18:29:44.090"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:44.094" endtime="20201030 18:29:44.113"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.092" endtime="20201030 18:29:44.114"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.091" endtime="20201030 18:29:44.114"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.685" endtime="20201030 18:29:44.114"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.684" endtime="20201030 18:29:44.114"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:44.122" endtime="20201030 18:29:44.144"></status>
</kw>
<msg timestamp="20201030 18:29:44.144" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:44.121" endtime="20201030 18:29:44.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:44.146" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:44.145" endtime="20201030 18:29:44.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:44.148" endtime="20201030 18:29:44.149"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.118" endtime="20201030 18:29:44.150"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.116" endtime="20201030 18:29:44.150"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:44.156" endtime="20201030 18:29:44.448"></status>
</kw>
<msg timestamp="20201030 18:29:44.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021278403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021278875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:44.155" endtime="20201030 18:29:44.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:44.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021278403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021278875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:44.452" endtime="20201030 18:29:44.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:44.461" endtime="20201030 18:29:44.463"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.152" endtime="20201030 18:29:44.463"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.151" endtime="20201030 18:29:44.464"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:29:44.489" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:29:44.465" endtime="20201030 18:29:44.489"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:44.490" endtime="20201030 18:29:44.492"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:44.495" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:29:44.494" endtime="20201030 18:29:44.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:44.500" level="INFO">VALUE: {'sourcetime': [0.021278403, 0.021278875, 0.021288708, 0.021289194, 0.021299736, 0.021300208, 0.021310833, 0.021311306, 0.021321125, 0.021321597, 0.021331514, 0.021331986, 0.021339778, 0.02134025, 0.021348319, 0.021348792, 0.021359236, 0.021359722, 0.021368458, 0.021368931, 0.021379444, 0.021379917, 0.021388806, 0.021389278, 0.021398778, 0.021399264, 0.021409819, 0.021410292, 0.021418972, 0.021419444, 0.021427472, 0.021427944, 0.021436222, 0.021436694, 0.021445236, 0.021445708, 0.021454667, 0.021455153, 0.021464569, 0.021465042, 0.02147525, 0.021475722, 0.021485819, 0.021486306, 0.021494028, 0.0214945, 0.021504625, 0.021505097, 0.021515028, 0.0215155, 0.021524139, 0.021524625, 0.021533708, 0.021534181, 0.021543681, 0.021544153, 0.021551861, 0.021552347, 0.021562667, 0.021563139, 0.021573319, 0.021573792, 0.021581667, 0.021582153, 0.021591375, 0.021591847, 0.021600264, 0.021600736, 0.021609083, 0.021609556, 0.0216175, 0.021617972, 0.021627875, 0.021628361, 0.021636625, 0.021637097, 0.021646264, 0.021646736, 0.021656847, 0.021657333, 0.021666819, 0.021667292, 0.021675222, 0.021675708, 0.021684472, 0.021684944, 0.021693819, 0.021694292, 0.021701708, 0.021702181, 0.0217125, 0.021712986, 0.021723, 0.021723472, 0.021731819, 0.021732292, 0.021740125, 0.021740597, 0.021750875, 0.021751347], 'eventsource_diff': [0, 4.7199999999789077e-07, 9.833000000000758e-06, 4.860000000009301e-07, 1.0541999999998802e-05, 4.720000000013602e-07, 1.0625000000000218e-05, 4.729999999973644e-07, 9.819000000001188e-06, 4.720000000013602e-07, 9.916999999998177e-06, 4.720000000013602e-07, 7.791999999999522e-06, 4.720000000013602e-07, 8.068999999999438e-06, 4.729999999973644e-07, 1.0444000000001813e-05, 4.860000000009301e-07, 8.735999999998773e-06, 4.7300000000083386e-07, 1.0513000000000189e-05, 4.729999999973644e-07, 8.889000000001507e-06, 4.720000000013602e-07, 9.499999999999093e-06, 4.860000000009301e-07, 1.0554999999998899e-05, 4.7300000000083386e-07, 8.680000000000493e-06, 4.7199999999789077e-07, 8.028000000000202e-06, 4.720000000013602e-07, 8.278000000000452e-06, 4.7199999999789077e-07, 8.542000000000272e-06, 4.720000000013602e-07, 8.958999999999356e-06, 4.860000000009301e-07, 9.415999999998204e-06, 4.7300000000083386e-07, 1.0208000000001133e-05, 4.7199999999789077e-07, 1.0097000000000578e-05, 4.870000000004038e-07, 7.721999999998203e-06, 4.720000000013602e-07, 1.0124999999999718e-05, 4.720000000013602e-07, 9.930999999997747e-06, 4.720000000013602e-07, 8.639000000001257e-06, 4.859999999974607e-07, 9.083000000000008e-06, 4.7300000000083386e-07, 9.499999999999093e-06, 4.720000000013602e-07, 7.707999999998633e-06, 4.860000000009301e-07, 1.0320000000001162e-05, 4.7199999999789077e-07, 1.0180000000001993e-05, 4.7300000000083386e-07, 7.874999999997467e-06, 4.860000000009301e-07, 9.221999999999703e-06, 4.720000000013602e-07, 8.417000000000147e-06, 4.7199999999789077e-07, 8.347000000002297e-06, 4.729999999973644e-07, 7.944000000002782e-06, 4.7199999999789077e-07, 9.903000000002077e-06, 4.859999999974607e-07, 8.264000000000882e-06, 4.720000000013602e-07, 9.166999999997427e-06, 4.720000000013602e-07, 1.0111000000000148e-05, 4.860000000009301e-07, 9.485999999999523e-06, 4.7300000000083386e-07, 7.929999999999743e-06, 4.859999999974607e-07, 8.764000000001382e-06, 4.720000000013602e-07, 8.874999999998467e-06, 4.7300000000083386e-07, 7.415999999999673e-06, 4.7300000000083386e-07, 1.0318999999998218e-05, 4.860000000009301e-07, 1.0013999999999162e-05, 4.720000000013602e-07, 8.346999999998828e-06, 4.7300000000083386e-07, 7.832999999998758e-06, 4.720000000013602e-07, 1.0277999999998982e-05, 4.720000000013602e-07], 'diff': [0, 4.7199999999789077e-07, 9.833000000000758e-06, 4.860000000009301e-07, 1.0541999999998802e-05, 4.720000000013602e-07, 1.0625000000000218e-05, 4.729999999973644e-07, 9.819000000001188e-06, 4.720000000013602e-07, 9.916999999998177e-06, 4.720000000013602e-07, 7.791999999999522e-06, 4.720000000013602e-07, 8.068999999999438e-06, 4.729999999973644e-07, 1.0444000000001813e-05, 4.860000000009301e-07, 8.735999999998773e-06, 4.7300000000083386e-07, 1.0513000000000189e-05, 4.729999999973644e-07, 8.889000000001507e-06, 4.720000000013602e-07, 9.499999999999093e-06, 4.860000000009301e-07, 1.0554999999998899e-05, 4.7300000000083386e-07, 8.680000000000493e-06, 4.7199999999789077e-07, 8.028000000000202e-06, 4.720000000013602e-07, 8.278000000000452e-06, 4.7199999999789077e-07, 8.542000000000272e-06, 4.720000000013602e-07, 8.958999999999356e-06, 4.860000000009301e-07, 9.415999999998204e-06, 4.7300000000083386e-07, 1.0208000000001133e-05, 4.7199999999789077e-07, 1.0097000000000578e-05, 4.870000000004038e-07, 7.721999999998203e-06, 4.720000000013602e-07, 1.0124999999999718e-05, 4.720000000013602e-07, 9.930999999997747e-06, 4.720000000013602e-07, 8.639000000001257e-06, 4.859999999974607e-07, 9.083000000000008e-06, 4.7300000000083386e-07, 9.499999999999093e-06, 4.720000000013602e-07, 7.707999999998633e-06, 4.860000000009301e-07, 1.0320000000001162e-05, 4.7199999999789077e-07, 1.0180000000001993e-05, 4.7300000000083386e-07, 7.874999999997467e-06, 4.860000000009301e-07, 9.221999999999703e-06, 4.720000000013602e-07, 8.417000000000147e-06, 4.7199999999789077e-07, 8.347000000002297e-06, 4.729999999973644e-07, 7.944000000002782e-06, 4.7199999999789077e-07, 9.903000000002077e-06, 4.859999999974607e-07, 8.264000000000882e-06, 4.720000000013602e-07, 9.166999999997427e-06, 4.720000000013602e-07, 1.0111000000000148e-05, 4.860000000009301e-07, 9.485999999999523e-06, 4.7300000000083386e-07, 7.929999999999743e-06, 4.859999999974607e-07, 8.764000000001382e-06, 4.720000000013602e-07, 8.874999999998467e-06, 4.7300000000083386e-07, 7.415999999999673e-06, 4.7300000000083386e-07, 1.0318999999998218e-05, 4.860000000009301e-07, 1.0013999999999162e-05, 4.720000000013602e-07, 8.346999999998828e-06, 4.7300000000083386e-07, 7.832999999998758e-06, 4.720000000013602e-07, 1.0277999999998982e-05, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201030 18:29:44.497" endtime="20201030 18:29:44.501"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.492" endtime="20201030 18:29:44.502"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:44.506" level="INFO">${RESULT} = [{'diff': 4.7199999999789077e-07}, {'diff': 4.860000000009301e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.729999999973644e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, ...</msg>
<status status="PASS" starttime="20201030 18:29:44.502" endtime="20201030 18:29:44.506"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:29:44.510" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.860...</msg>
<status status="PASS" starttime="20201030 18:29:44.507" endtime="20201030 18:29:44.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:44.515" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:29:44.513" endtime="20201030 18:29:44.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:44.518" level="INFO">VALUE: [4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 18:29:44.516" endtime="20201030 18:29:44.518"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.511" endtime="20201030 18:29:44.519"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:44.522" endtime="20201030 18:29:44.542"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.521" endtime="20201030 18:29:44.543"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.520" endtime="20201030 18:29:44.543"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.115" endtime="20201030 18:29:44.543"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.115" endtime="20201030 18:29:44.543"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:44.552" endtime="20201030 18:29:44.565"></status>
</kw>
<msg timestamp="20201030 18:29:44.566" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:44.550" endtime="20201030 18:29:44.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:44.568" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:44.567" endtime="20201030 18:29:44.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:44.569" endtime="20201030 18:29:44.571"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.547" endtime="20201030 18:29:44.572"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.545" endtime="20201030 18:29:44.572"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:44.579" endtime="20201030 18:29:44.892"></status>
</kw>
<msg timestamp="20201030 18:29:44.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019480694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019481167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:44.577" endtime="20201030 18:29:44.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:44.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019480694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019481167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:44.897" endtime="20201030 18:29:44.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:44.906" endtime="20201030 18:29:44.907"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.575" endtime="20201030 18:29:44.908"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.573" endtime="20201030 18:29:44.908"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:29:44.934" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:29:44.909" endtime="20201030 18:29:44.934"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:44.935" endtime="20201030 18:29:44.937"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:44.940" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:29:44.939" endtime="20201030 18:29:44.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:44.945" level="INFO">VALUE: {'sourcetime': [0.019480694, 0.019481167, 0.019488597, 0.019489069, 0.01949975, 0.019500222, 0.019509306, 0.019509778, 0.019518667, 0.019519139, 0.019526861, 0.019527347, 0.019537556, 0.019538042, 0.019547736, 0.019548208, 0.019558431, 0.019558903, 0.019568667, 0.019569139, 0.019577319, 0.019577806, 0.019586458, 0.019586944, 0.019594347, 0.019594833, 0.019603278, 0.019603764, 0.01961275, 0.019613222, 0.019622597, 0.019623069, 0.019632194, 0.019632667, 0.019641694, 0.019642167, 0.019649708, 0.019650181, 0.019658542, 0.019659028, 0.019667694, 0.019668181, 0.019676556, 0.019677028, 0.019685278, 0.019685764, 0.019694139, 0.019694611, 0.019704417, 0.019704889, 0.019714917, 0.019715389, 0.019724472, 0.019724944, 0.019732347, 0.019732819, 0.019742208, 0.019742681, 0.019750722, 0.019751194, 0.019761306, 0.019761792, 0.019771292, 0.019771778, 0.019782431, 0.019782903, 0.019792569, 0.019793042, 0.019803347, 0.019803819, 0.019812069, 0.019812556, 0.019820597, 0.019821083, 0.019829014, 0.019829486, 0.019837528, 0.019838, 0.019845931, 0.019846417, 0.019855194, 0.019855667, 0.019866292, 0.019866764, 0.019876583, 0.019877056, 0.019886958, 0.019887431, 0.019895694, 0.019896167, 0.019906708, 0.019907194, 0.019916597, 0.019917069, 0.019925444, 0.019925917, 0.019933444, 0.019933931, 0.019943333, 0.019943806], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'source_diff': [0, 4.7300000000083386e-07, 7.429999999999243e-06, 4.720000000013602e-07, 1.0680999999998497e-05, 4.720000000013602e-07, 9.083999999999481e-06, 4.7199999999789077e-07, 8.889000000001507e-06, 4.720000000013602e-07, 7.721999999998203e-06, 4.860000000009301e-07, 1.0209000000000606e-05, 4.859999999974607e-07, 9.694000000001063e-06, 4.720000000013602e-07, 1.0223000000000176e-05, 4.7199999999789077e-07, 9.764000000002382e-06, 4.7199999999789077e-07, 8.179999999999993e-06, 4.870000000004038e-07, 8.652000000001353e-06, 4.859999999974607e-07, 7.403000000003046e-06, 4.859999999974607e-07, 8.444999999999286e-06, 4.860000000009301e-07, 8.986000000002492e-06, 4.7199999999789077e-07, 9.374999999998967e-06, 4.720000000013602e-07, 9.124999999998717e-06, 4.7300000000083386e-07, 9.027000000001728e-06, 4.729999999973644e-07, 7.540999999999798e-06, 4.7300000000083386e-07, 8.361000000001867e-06, 4.859999999974607e-07, 8.666000000000923e-06, 4.870000000004038e-07, 8.375000000001437e-06, 4.7199999999789077e-07, 8.250000000001312e-06, 4.860000000009301e-07, 8.374999999997967e-06, 4.720000000013602e-07, 9.805999999997622e-06, 4.720000000013602e-07, 1.0027999999998732e-05, 4.720000000013602e-07, 9.083000000000008e-06, 4.720000000013602e-07, 7.402999999999577e-06, 4.7199999999789077e-07, 9.389000000002007e-06, 4.7300000000083386e-07, 8.040999999996828e-06, 4.720000000013602e-07, 1.0111999999999621e-05, 4.860000000009301e-07, 9.499999999999093e-06, 4.860000000009301e-07, 1.0652999999999357e-05, 4.720000000013602e-07, 9.665999999998454e-06, 4.7300000000083386e-07, 1.0304999999998649e-05, 4.720000000013602e-07, 8.250000000001312e-06, 4.869999999969343e-07, 8.041000000000298e-06, 4.860000000009301e-07, 7.930999999999216e-06, 4.720000000013602e-07, 8.041999999999772e-06, 4.720000000013602e-07, 7.930999999999216e-06, 4.860000000009301e-07, 8.776999999998009e-06, 4.7300000000083386e-07, 1.0625000000000218e-05, 4.7199999999789077e-07, 9.819000000001188e-06, 4.7300000000083386e-07, 9.901999999999134e-06, 4.7300000000083386e-07, 8.262999999997939e-06, 4.7300000000083386e-07, 1.0540999999999329e-05, 4.860000000009301e-07, 9.403000000001577e-06, 4.7199999999789077e-07, 8.375000000001437e-06, 4.7300000000083386e-07, 7.527000000000228e-06, 4.869999999969343e-07, 9.402000000002103e-06, 4.7300000000083386e-07], 'diff': [0, 4.7300000000083386e-07, 7.429999999999243e-06, 4.720000000013602e-07, 1.0680999999998497e-05, 4.720000000013602e-07, 9.083999999999481e-06, 4.7199999999789077e-07, 8.889000000001507e-06, 4.720000000013602e-07, 7.721999999998203e-06, 4.860000000009301e-07, 1.0209000000000606e-05, 4.859999999974607e-07, 9.694000000001063e-06, 4.720000000013602e-07, 1.0223000000000176e-05, 4.7199999999789077e-07, 9.764000000002382e-06, 4.7199999999789077e-07, 8.179999999999993e-06, 4.870000000004038e-07, 8.652000000001353e-06, 4.859999999974607e-07, 7.403000000003046e-06, 4.859999999974607e-07, 8.444999999999286e-06, 4.860000000009301e-07, 8.986000000002492e-06, 4.7199999999789077e-07, 9.374999999998967e-06, 4.720000000013602e-07, 9.124999999998717e-06, 4.7300000000083386e-07, 9.027000000001728e-06, 4.729999999973644e-07, 7.540999999999798e-06, 4.7300000000083386e-07, 8.361000000001867e-06, 4.859999999974607e-07, 8.666000000000923e-06, 4.870000000004038e-07, 8.375000000001437e-06, 4.7199999999789077e-07, 8.250000000001312e-06, 4.860000000009301e-07, 8.374999999997967e-06, 4.720000000013602e-07, 9.805999999997622e-06, 4.720000000013602e-07, 1.0027999999998732e-05, 4.720000000013602e-07, 9.083000000000008e-06, 4.720000000013602e-07, 7.402999999999577e-06, 4.7199999999789077e-07, 9.389000000002007e-06, 4.7300000000083386e-07, 8.040999999996828e-06, 4.720000000013602e-07, 1.0111999999999621e-05, 4.860000000009301e-07, 9.499999999999093e-06, 4.860000000009301e-07, 1.0652999999999357e-05, 4.720000000013602e-07, 9.665999999998454e-06, 4.7300000000083386e-07, 1.0304999999998649e-05, 4.720000000013602e-07, 8.250000000001312e-06, 4.869999999969343e-07, 8.041000000000298e-06, 4.860000000009301e-07, 7.930999999999216e-06, 4.720000000013602e-07, 8.041999999999772e-06, 4.720000000013602e-07, 7.930999999999216e-06, 4.860000000009301e-07, 8.776999999998009e-06, 4.7300000000083386e-07, 1.0625000000000218e-05, 4.7199999999789077e-07, 9.819000000001188e-06, 4.7300000000083386e-07, 9.901999999999134e-06, 4.7300000000083386e-07, 8.262999999997939e-06, 4.7300000000083386e-07, 1.0540999999999329e-05, 4.860000000009301e-07, 9.403000000001577e-06, 4.7199999999789077e-07, 8.375000000001437e-06, 4.7300000000083386e-07, 7.527000000000228e-06, 4.869999999969343e-07, 9.402000000002103e-06, 4.7300000000083386e-07]}</msg>
<status status="PASS" starttime="20201030 18:29:44.942" endtime="20201030 18:29:44.946"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.937" endtime="20201030 18:29:44.947"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:44.951" level="INFO">${RESULT} = [{'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.860000000009301e-07},...</msg>
<status status="PASS" starttime="20201030 18:29:44.947" endtime="20201030 18:29:44.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:29:44.956" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.71...</msg>
<status status="PASS" starttime="20201030 18:29:44.952" endtime="20201030 18:29:44.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:44.960" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:29:44.959" endtime="20201030 18:29:44.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:44.963" level="INFO">VALUE: [4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.869999999969343e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.869999999969343e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201030 18:29:44.961" endtime="20201030 18:29:44.964"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.956" endtime="20201030 18:29:44.964"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:44.968" endtime="20201030 18:29:44.987"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.966" endtime="20201030 18:29:44.988"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.965" endtime="20201030 18:29:44.988"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.544" endtime="20201030 18:29:44.989"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.544" endtime="20201030 18:29:44.989"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:44.998" endtime="20201030 18:29:45.013"></status>
</kw>
<msg timestamp="20201030 18:29:45.014" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:44.996" endtime="20201030 18:29:45.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:45.017" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:45.015" endtime="20201030 18:29:45.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:45.018" endtime="20201030 18:29:45.020"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.993" endtime="20201030 18:29:45.020"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.991" endtime="20201030 18:29:45.021"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:45.027" endtime="20201030 18:29:45.317"></status>
</kw>
<msg timestamp="20201030 18:29:45.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021275264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021275736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:45.026" endtime="20201030 18:29:45.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:45.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021275264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021275736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:45.322" endtime="20201030 18:29:45.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:45.331" endtime="20201030 18:29:45.333"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.023" endtime="20201030 18:29:45.333"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.021" endtime="20201030 18:29:45.334"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:29:45.359" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:29:45.334" endtime="20201030 18:29:45.359"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:45.360" endtime="20201030 18:29:45.362"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:45.365" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:29:45.364" endtime="20201030 18:29:45.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:45.370" level="INFO">VALUE: {'sourcetime': [0.021275264, 0.021275736, 0.021284097, 0.021284583, 0.021294736, 0.021295208, 0.021304903, 0.021305389, 0.021315722, 0.021316208, 0.021324347, 0.021324819, 0.021333486, 0.021333958, 0.021343333, 0.021343819, 0.021351333, 0.021351806, 0.021359542, 0.021360014, 0.021370639, 0.021371111, 0.021379167, 0.021379639, 0.0213875, 0.021387972, 0.021396139, 0.021396611, 0.021404125, 0.021404611, 0.021412042, 0.021412514, 0.021421917, 0.021422389, 0.021431278, 0.02143175, 0.021441764, 0.02144225, 0.021452875, 0.021453361, 0.021462319, 0.021462806, 0.021472722, 0.021473194, 0.021481056, 0.021481528, 0.021490986, 0.021491458, 0.021499597, 0.021500069, 0.021509375, 0.021509847, 0.021518181, 0.021518653, 0.021527625, 0.021528097, 0.021536778, 0.02153725, 0.021544958, 0.021545444, 0.021555556, 0.021556028, 0.021566278, 0.02156675, 0.021575944, 0.021576417, 0.021585208, 0.021585681, 0.021594347, 0.021594819, 0.021604028, 0.0216045, 0.021613792, 0.021614278, 0.021623986, 0.021624458, 0.021633847, 0.021634319, 0.02164475, 0.021645222, 0.021654694, 0.021655181, 0.021663639, 0.021664111, 0.021671514, 0.021671986, 0.021679403, 0.021679889, 0.021688458, 0.021688931, 0.02169875, 0.021699222, 0.021708833, 0.021709319, 0.021717569, 0.021718056, 0.021726847, 0.021727319, 0.021735069, 0.021735542], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'source_diff': [0, 4.720000000013602e-07, 8.360999999998397e-06, 4.860000000009301e-07, 1.0153000000002327e-05, 4.7199999999789077e-07, 9.695000000000537e-06, 4.860000000009301e-07, 1.0332999999997788e-05, 4.860000000009301e-07, 8.139000000000757e-06, 4.7199999999789077e-07, 8.667000000000397e-06, 4.720000000013602e-07, 9.374999999998967e-06, 4.860000000009301e-07, 7.514000000000132e-06, 4.7300000000083386e-07, 7.735999999997772e-06, 4.720000000013602e-07, 1.0625000000000218e-05, 4.720000000013602e-07, 8.055999999999341e-06, 4.7199999999789077e-07, 7.861000000001367e-06, 4.720000000013602e-07, 8.166999999999897e-06, 4.7199999999789077e-07, 7.514000000000132e-06, 4.860000000009301e-07, 7.430999999998716e-06, 4.720000000013602e-07, 9.402999999998107e-06, 4.720000000013602e-07, 8.889000000001507e-06, 4.7199999999789077e-07, 1.0013999999999162e-05, 4.860000000009301e-07, 1.0625000000000218e-05, 4.860000000009301e-07, 8.957999999999883e-06, 4.870000000004038e-07, 9.915999999998704e-06, 4.720000000013602e-07, 7.861999999997371e-06, 4.720000000013602e-07, 9.458000000000383e-06, 4.720000000013602e-07, 8.138999999997287e-06, 4.720000000013602e-07, 9.306000000000592e-06, 4.7199999999789077e-07, 8.3340000000022e-06, 4.7199999999789077e-07, 8.972000000002922e-06, 4.7199999999789077e-07, 8.680999999999967e-06, 4.720000000013602e-07, 7.707999999998633e-06, 4.860000000009301e-07, 1.0111999999999621e-05, 4.720000000013602e-07, 1.0249999999999843e-05, 4.7199999999789077e-07, 9.194000000000563e-06, 4.7300000000083386e-07, 8.791000000001048e-06, 4.729999999973644e-07, 8.666000000000923e-06, 4.720000000013602e-07, 9.208999999999606e-06, 4.7199999999789077e-07, 9.292000000001022e-06, 4.860000000009301e-07, 9.708000000000633e-06, 4.7199999999789077e-07, 9.389000000002007e-06, 4.7199999999789077e-07, 1.0431000000001717e-05, 4.7199999999789077e-07, 9.471999999999953e-06, 4.870000000004038e-07, 8.457999999999383e-06, 4.720000000013602e-07, 7.402999999999577e-06, 4.720000000013602e-07, 7.4169999999991465e-06, 4.860000000009301e-07, 8.568999999999938e-06, 4.7300000000083386e-07, 9.818999999997718e-06, 4.720000000013602e-07, 9.610999999999648e-06, 4.860000000009301e-07, 8.249999999997842e-06, 4.870000000004038e-07, 8.791000000001048e-06, 4.7199999999789077e-07, 7.750000000000812e-06, 4.7300000000083386e-07], 'diff': [0, 4.720000000013602e-07, 8.360999999998397e-06, 4.860000000009301e-07, 1.0153000000002327e-05, 4.7199999999789077e-07, 9.695000000000537e-06, 4.860000000009301e-07, 1.0332999999997788e-05, 4.860000000009301e-07, 8.139000000000757e-06, 4.7199999999789077e-07, 8.667000000000397e-06, 4.720000000013602e-07, 9.374999999998967e-06, 4.860000000009301e-07, 7.514000000000132e-06, 4.7300000000083386e-07, 7.735999999997772e-06, 4.720000000013602e-07, 1.0625000000000218e-05, 4.720000000013602e-07, 8.055999999999341e-06, 4.7199999999789077e-07, 7.861000000001367e-06, 4.720000000013602e-07, 8.166999999999897e-06, 4.7199999999789077e-07, 7.514000000000132e-06, 4.860000000009301e-07, 7.430999999998716e-06, 4.720000000013602e-07, 9.402999999998107e-06, 4.720000000013602e-07, 8.889000000001507e-06, 4.7199999999789077e-07, 1.0013999999999162e-05, 4.860000000009301e-07, 1.0625000000000218e-05, 4.860000000009301e-07, 8.957999999999883e-06, 4.870000000004038e-07, 9.915999999998704e-06, 4.720000000013602e-07, 7.861999999997371e-06, 4.720000000013602e-07, 9.458000000000383e-06, 4.720000000013602e-07, 8.138999999997287e-06, 4.720000000013602e-07, 9.306000000000592e-06, 4.7199999999789077e-07, 8.3340000000022e-06, 4.7199999999789077e-07, 8.972000000002922e-06, 4.7199999999789077e-07, 8.680999999999967e-06, 4.720000000013602e-07, 7.707999999998633e-06, 4.860000000009301e-07, 1.0111999999999621e-05, 4.720000000013602e-07, 1.0249999999999843e-05, 4.7199999999789077e-07, 9.194000000000563e-06, 4.7300000000083386e-07, 8.791000000001048e-06, 4.729999999973644e-07, 8.666000000000923e-06, 4.720000000013602e-07, 9.208999999999606e-06, 4.7199999999789077e-07, 9.292000000001022e-06, 4.860000000009301e-07, 9.708000000000633e-06, 4.7199999999789077e-07, 9.389000000002007e-06, 4.7199999999789077e-07, 1.0431000000001717e-05, 4.7199999999789077e-07, 9.471999999999953e-06, 4.870000000004038e-07, 8.457999999999383e-06, 4.720000000013602e-07, 7.402999999999577e-06, 4.720000000013602e-07, 7.4169999999991465e-06, 4.860000000009301e-07, 8.568999999999938e-06, 4.7300000000083386e-07, 9.818999999997718e-06, 4.720000000013602e-07, 9.610999999999648e-06, 4.860000000009301e-07, 8.249999999997842e-06, 4.870000000004038e-07, 8.791000000001048e-06, 4.7199999999789077e-07, 7.750000000000812e-06, 4.7300000000083386e-07]}</msg>
<status status="PASS" starttime="20201030 18:29:45.367" endtime="20201030 18:29:45.371"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.363" endtime="20201030 18:29:45.372"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:45.376" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.860000000009301e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.860000000009301e-07}, {'diff': 4.860000000009301e-07}, {'diff': 4.7199999999789077e-07},...</msg>
<status status="PASS" starttime="20201030 18:29:45.372" endtime="20201030 18:29:45.376"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:29:45.381" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.73...</msg>
<status status="PASS" starttime="20201030 18:29:45.377" endtime="20201030 18:29:45.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:45.385" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:29:45.384" endtime="20201030 18:29:45.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:45.387" level="INFO">VALUE: [4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201030 18:29:45.386" endtime="20201030 18:29:45.388"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.381" endtime="20201030 18:29:45.388"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:45.392" endtime="20201030 18:29:45.412"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.391" endtime="20201030 18:29:45.412"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.389" endtime="20201030 18:29:45.413"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.989" endtime="20201030 18:29:45.413"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.989" endtime="20201030 18:29:45.413"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:45.421" endtime="20201030 18:29:45.435"></status>
</kw>
<msg timestamp="20201030 18:29:45.435" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:45.420" endtime="20201030 18:29:45.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:45.438" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:45.436" endtime="20201030 18:29:45.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:45.439" endtime="20201030 18:29:45.441"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.417" endtime="20201030 18:29:45.441"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.415" endtime="20201030 18:29:45.442"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:45.448" endtime="20201030 18:29:45.733"></status>
</kw>
<msg timestamp="20201030 18:29:45.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018946222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018946708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:45.447" endtime="20201030 18:29:45.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:45.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018946222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018946708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:45.739" endtime="20201030 18:29:45.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:45.750" endtime="20201030 18:29:45.752"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.444" endtime="20201030 18:29:45.753"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.442" endtime="20201030 18:29:45.753"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:29:45.786" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:29:45.755" endtime="20201030 18:29:45.787"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:45.788" endtime="20201030 18:29:45.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:45.793" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:29:45.792" endtime="20201030 18:29:45.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:45.797" level="INFO">VALUE: {'sourcetime': [0.018946222, 0.018946708, 0.018956417, 0.018956889, 0.018965125, 0.018965611, 0.018974292, 0.018974764, 0.018983236, 0.018983708, 0.018993528, 0.018994, 0.019003611, 0.019004097, 0.019013931, 0.019014403, 0.019024306, 0.019024792, 0.019033028, 0.019033514, 0.019043056, 0.019043528, 0.019051194, 0.019051681, 0.019062, 0.019062472, 0.019071972, 0.019072444, 0.019080167, 0.019080639, 0.019088917, 0.019089389, 0.019098778, 0.019099264, 0.01910825, 0.019108722, 0.019118125, 0.019118611, 0.019128014, 0.0191285, 0.019137208, 0.019137681, 0.019147042, 0.019147528, 0.019156083, 0.019156556, 0.019166042, 0.019166528, 0.019174667, 0.019175139, 0.019185056, 0.019185528, 0.019195333, 0.019195806, 0.019203944, 0.019204417, 0.019215069, 0.019215542, 0.019225333, 0.019225819, 0.019235611, 0.019236097, 0.019246, 0.019246472, 0.01925575, 0.019256236, 0.019263764, 0.019264236, 0.019273708, 0.019274194, 0.019284139, 0.019284611, 0.019292, 0.019292472, 0.019301778, 0.01930225, 0.019310889, 0.019311361, 0.019319597, 0.019320083, 0.019329236, 0.019329708, 0.019339181, 0.019339653, 0.019347903, 0.019348375, 0.019356097, 0.019356583, 0.019364847, 0.019365319, 0.019373833, 0.019374306, 0.019384611, 0.019385083, 0.019395403, 0.019395875, 0.019405681, 0.019406153, 0.019416583, 0.019417056], 'eventsource_diff': [0, 4.860000000009301e-07, 9.709000000000106e-06, 4.720000000013602e-07, 8.235999999998272e-06, 4.860000000009301e-07, 8.680999999999967e-06, 4.720000000013602e-07, 8.471999999998953e-06, 4.7199999999789077e-07, 9.820000000000662e-06, 4.720000000013602e-07, 9.610999999999648e-06, 4.860000000009301e-07, 9.834000000000231e-06, 4.7199999999789077e-07, 9.903000000002077e-06, 4.859999999974607e-07, 8.236000000001742e-06, 4.860000000009301e-07, 9.541999999997802e-06, 4.720000000013602e-07, 7.665999999999923e-06, 4.870000000004038e-07, 1.0318999999998218e-05, 4.720000000013602e-07, 9.499999999999093e-06, 4.720000000013602e-07, 7.722999999997676e-06, 4.720000000013602e-07, 8.278000000000452e-06, 4.7199999999789077e-07, 9.389000000002007e-06, 4.860000000009301e-07, 8.985999999999023e-06, 4.720000000013602e-07, 9.402999999998107e-06, 4.860000000009301e-07, 9.402999999998107e-06, 4.860000000009301e-07, 8.707999999999633e-06, 4.7300000000083386e-07, 9.360999999999398e-06, 4.860000000009301e-07, 8.555000000000368e-06, 4.7300000000083386e-07, 9.485999999999523e-06, 4.859999999974607e-07, 8.139000000000757e-06, 4.720000000013602e-07, 9.916999999998177e-06, 4.720000000013602e-07, 9.804999999998149e-06, 4.7300000000083386e-07, 8.138000000001283e-06, 4.7300000000083386e-07, 1.0651999999999884e-05, 4.729999999973644e-07, 9.791000000002048e-06, 4.860000000009301e-07, 9.791999999998052e-06, 4.860000000009301e-07, 9.902999999998607e-06, 4.720000000013602e-07, 9.277999999997982e-06, 4.860000000009301e-07, 7.527999999999702e-06, 4.720000000013602e-07, 9.471999999999953e-06, 4.860000000009301e-07, 9.944999999997317e-06, 4.720000000013602e-07, 7.389000000000007e-06, 4.720000000013602e-07, 9.305999999997122e-06, 4.720000000013602e-07, 8.639000000001257e-06, 4.7199999999789077e-07, 8.236000000001742e-06, 4.859999999974607e-07, 9.153000000001327e-06, 4.720000000013602e-07, 9.472999999999426e-06, 4.7199999999789077e-07, 8.250000000001312e-06, 4.720000000013602e-07, 7.721999999998203e-06, 4.860000000009301e-07, 8.264000000000882e-06, 4.7199999999789077e-07, 8.514000000001132e-06, 4.7300000000083386e-07, 1.0304999999998649e-05, 4.720000000013602e-07, 1.0319999999997692e-05, 4.720000000013602e-07, 9.806000000001092e-06, 4.7199999999789077e-07, 1.0430000000002243e-05, 4.729999999973644e-07], 'diff': [0, 4.860000000009301e-07, 9.709000000000106e-06, 4.720000000013602e-07, 8.235999999998272e-06, 4.860000000009301e-07, 8.680999999999967e-06, 4.720000000013602e-07, 8.471999999998953e-06, 4.7199999999789077e-07, 9.820000000000662e-06, 4.720000000013602e-07, 9.610999999999648e-06, 4.860000000009301e-07, 9.834000000000231e-06, 4.7199999999789077e-07, 9.903000000002077e-06, 4.859999999974607e-07, 8.236000000001742e-06, 4.860000000009301e-07, 9.541999999997802e-06, 4.720000000013602e-07, 7.665999999999923e-06, 4.870000000004038e-07, 1.0318999999998218e-05, 4.720000000013602e-07, 9.499999999999093e-06, 4.720000000013602e-07, 7.722999999997676e-06, 4.720000000013602e-07, 8.278000000000452e-06, 4.7199999999789077e-07, 9.389000000002007e-06, 4.860000000009301e-07, 8.985999999999023e-06, 4.720000000013602e-07, 9.402999999998107e-06, 4.860000000009301e-07, 9.402999999998107e-06, 4.860000000009301e-07, 8.707999999999633e-06, 4.7300000000083386e-07, 9.360999999999398e-06, 4.860000000009301e-07, 8.555000000000368e-06, 4.7300000000083386e-07, 9.485999999999523e-06, 4.859999999974607e-07, 8.139000000000757e-06, 4.720000000013602e-07, 9.916999999998177e-06, 4.720000000013602e-07, 9.804999999998149e-06, 4.7300000000083386e-07, 8.138000000001283e-06, 4.7300000000083386e-07, 1.0651999999999884e-05, 4.729999999973644e-07, 9.791000000002048e-06, 4.860000000009301e-07, 9.791999999998052e-06, 4.860000000009301e-07, 9.902999999998607e-06, 4.720000000013602e-07, 9.277999999997982e-06, 4.860000000009301e-07, 7.527999999999702e-06, 4.720000000013602e-07, 9.471999999999953e-06, 4.860000000009301e-07, 9.944999999997317e-06, 4.720000000013602e-07, 7.389000000000007e-06, 4.720000000013602e-07, 9.305999999997122e-06, 4.720000000013602e-07, 8.639000000001257e-06, 4.7199999999789077e-07, 8.236000000001742e-06, 4.859999999974607e-07, 9.153000000001327e-06, 4.720000000013602e-07, 9.472999999999426e-06, 4.7199999999789077e-07, 8.250000000001312e-06, 4.720000000013602e-07, 7.721999999998203e-06, 4.860000000009301e-07, 8.264000000000882e-06, 4.7199999999789077e-07, 8.514000000001132e-06, 4.7300000000083386e-07, 1.0304999999998649e-05, 4.720000000013602e-07, 1.0319999999997692e-05, 4.720000000013602e-07, 9.806000000001092e-06, 4.7199999999789077e-07, 1.0430000000002243e-05, 4.729999999973644e-07]}</msg>
<status status="PASS" starttime="20201030 18:29:45.794" endtime="20201030 18:29:45.798"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.790" endtime="20201030 18:29:45.798"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:45.802" level="INFO">${RESULT} = [{'diff': 4.860000000009301e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.860000000009301e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.720000000013602e-07}, ...</msg>
<status status="PASS" starttime="20201030 18:29:45.799" endtime="20201030 18:29:45.803"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:29:45.806" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.85...</msg>
<status status="PASS" starttime="20201030 18:29:45.803" endtime="20201030 18:29:45.807"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:45.811" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:29:45.810" endtime="20201030 18:29:45.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:45.814" level="INFO">VALUE: [4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.729999999973644e-07]</msg>
<status status="PASS" starttime="20201030 18:29:45.812" endtime="20201030 18:29:45.814"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.807" endtime="20201030 18:29:45.815"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:45.818" endtime="20201030 18:29:45.838"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.817" endtime="20201030 18:29:45.838"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.816" endtime="20201030 18:29:45.838"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.414" endtime="20201030 18:29:45.839"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.413" endtime="20201030 18:29:45.839"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:45.865" endtime="20201030 18:29:45.883"></status>
</kw>
<msg timestamp="20201030 18:29:45.885" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:45.861" endtime="20201030 18:29:45.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:45.890" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:45.887" endtime="20201030 18:29:45.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:45.893" endtime="20201030 18:29:45.897"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.843" endtime="20201030 18:29:45.899"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.841" endtime="20201030 18:29:45.900"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:45.916" endtime="20201030 18:29:46.204"></status>
</kw>
<msg timestamp="20201030 18:29:46.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040177611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040178083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:45.912" endtime="20201030 18:29:46.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:46.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040177611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040178083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:46.209" endtime="20201030 18:29:46.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:46.217" endtime="20201030 18:29:46.219"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.906" endtime="20201030 18:29:46.220"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.902" endtime="20201030 18:29:46.220"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:29:46.276" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:29:46.221" endtime="20201030 18:29:46.277"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:46.279" endtime="20201030 18:29:46.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:46.289" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:29:46.287" endtime="20201030 18:29:46.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:46.298" level="INFO">VALUE: {'sourcetime': [0.040177611, 0.040178083, 0.040186556, 0.040187028, 0.040195625, 0.040196097, 0.040205056, 0.040205528, 0.040214306, 0.040214778, 0.040224208, 0.040224681, 0.040235264, 0.04023575, 0.040246278, 0.04024675, 0.040256042, 0.040256514, 0.040265583, 0.040266056, 0.040276708, 0.040277181, 0.040284889, 0.040285375, 0.040294556, 0.040295028, 0.040305444, 0.040305931, 0.040316139, 0.040316611, 0.040326111, 0.040326583, 0.040335972, 0.040336444, 0.040346764, 0.04034725, 0.040355292, 0.040355764, 0.040363917, 0.040364389, 0.040374458, 0.040374931, 0.040385083, 0.040385556, 0.040394, 0.040394486, 0.040402847, 0.040403319, 0.040412694, 0.040413167, 0.040422347, 0.040422819, 0.04043075, 0.040431222, 0.040439569, 0.040440056, 0.040448931, 0.040449417, 0.040459861, 0.040460333, 0.040470889, 0.040471361, 0.040481292, 0.040481764, 0.040490958, 0.040491431, 0.040499708, 0.040500181, 0.040509458, 0.040509931, 0.040518597, 0.040519069, 0.040527625, 0.040528097, 0.040535722, 0.040536194, 0.040545889, 0.040546361, 0.040556389, 0.040556861, 0.040567375, 0.040567861, 0.040577792, 0.040578264, 0.040588861, 0.040589347, 0.040598528, 0.040599, 0.040609556, 0.040610028, 0.040620444, 0.040620917, 0.0406305, 0.040630972, 0.040639528, 0.04064, 0.040647542, 0.040648014, 0.040656347, 0.040656819], 'eventsource_diff': [0, 4.720000000013602e-07, 8.472999999994957e-06, 4.720000000013602e-07, 8.596999999999078e-06, 4.720000000013602e-07, 8.959000000002826e-06, 4.7199999999442133e-07, 8.778000000000952e-06, 4.720000000013602e-07, 9.429999999997773e-06, 4.7300000000083386e-07, 1.0583000000001508e-05, 4.860000000009301e-07, 1.0528000000002702e-05, 4.7199999999442133e-07, 9.292000000001022e-06, 4.720000000013602e-07, 9.069000000000438e-06, 4.7300000000083386e-07, 1.0651999999999884e-05, 4.7300000000083386e-07, 7.707999999995163e-06, 4.860000000009301e-07, 9.181000000003936e-06, 4.7199999999442133e-07, 1.0416000000006143e-05, 4.870000000004038e-07, 1.0207999999997663e-05, 4.720000000013602e-07, 9.499999999995623e-06, 4.720000000013602e-07, 9.388999999998537e-06, 4.720000000013602e-07, 1.0320000000001162e-05, 4.860000000009301e-07, 8.041999999999772e-06, 4.720000000013602e-07, 8.152999999996857e-06, 4.720000000013602e-07, 1.0069000000001438e-05, 4.7300000000083386e-07, 1.0151999999999384e-05, 4.7300000000083386e-07, 8.443999999996343e-06, 4.860000000009301e-07, 8.360999999998397e-06, 4.720000000013602e-07, 9.374999999998967e-06, 4.7300000000083386e-07, 9.179999999997523e-06, 4.720000000013602e-07, 7.931000000002686e-06, 4.720000000013602e-07, 8.346999999998828e-06, 4.870000000004038e-07, 8.874999999998467e-06, 4.860000000009301e-07, 1.0443999999998343e-05, 4.720000000013602e-07, 1.0556000000001842e-05, 4.7199999999442133e-07, 9.931000000004686e-06, 4.720000000013602e-07, 9.193999999997093e-06, 4.7300000000083386e-07, 8.277000000000978e-06, 4.7300000000083386e-07, 9.27699999999504e-06, 4.7300000000083386e-07, 8.666000000004392e-06, 4.7199999999442133e-07, 8.555999999999842e-06, 4.720000000013602e-07, 7.625000000004156e-06, 4.7199999999442133e-07, 9.695000000004006e-06, 4.720000000013602e-07, 1.0027999999995263e-05, 4.720000000013602e-07, 1.0514000000003132e-05, 4.859999999939912e-07, 9.931000000004686e-06, 4.720000000013602e-07, 1.0596999999994139e-05, 4.860000000009301e-07, 9.181000000003936e-06, 4.720000000013602e-07, 1.0555999999994903e-05, 4.720000000013602e-07, 1.0415999999999204e-05, 4.7300000000083386e-07, 9.583000000000508e-06, 4.720000000013602e-07, 8.555999999999842e-06, 4.720000000013602e-07, 7.5419999999992715e-06, 4.720000000013602e-07, 8.332999999999258e-06, 4.7199999999442133e-07], 'diff': [0, 4.720000000013602e-07, 8.472999999994957e-06, 4.720000000013602e-07, 8.596999999999078e-06, 4.720000000013602e-07, 8.959000000002826e-06, 4.7199999999442133e-07, 8.778000000000952e-06, 4.720000000013602e-07, 9.429999999997773e-06, 4.7300000000083386e-07, 1.0583000000001508e-05, 4.860000000009301e-07, 1.0528000000002702e-05, 4.7199999999442133e-07, 9.292000000001022e-06, 4.720000000013602e-07, 9.069000000000438e-06, 4.7300000000083386e-07, 1.0651999999999884e-05, 4.7300000000083386e-07, 7.707999999995163e-06, 4.860000000009301e-07, 9.181000000003936e-06, 4.7199999999442133e-07, 1.0416000000006143e-05, 4.870000000004038e-07, 1.0207999999997663e-05, 4.720000000013602e-07, 9.499999999995623e-06, 4.720000000013602e-07, 9.388999999998537e-06, 4.720000000013602e-07, 1.0320000000001162e-05, 4.860000000009301e-07, 8.041999999999772e-06, 4.720000000013602e-07, 8.152999999996857e-06, 4.720000000013602e-07, 1.0069000000001438e-05, 4.7300000000083386e-07, 1.0151999999999384e-05, 4.7300000000083386e-07, 8.443999999996343e-06, 4.860000000009301e-07, 8.360999999998397e-06, 4.720000000013602e-07, 9.374999999998967e-06, 4.7300000000083386e-07, 9.179999999997523e-06, 4.720000000013602e-07, 7.931000000002686e-06, 4.720000000013602e-07, 8.346999999998828e-06, 4.870000000004038e-07, 8.874999999998467e-06, 4.860000000009301e-07, 1.0443999999998343e-05, 4.720000000013602e-07, 1.0556000000001842e-05, 4.7199999999442133e-07, 9.931000000004686e-06, 4.720000000013602e-07, 9.193999999997093e-06, 4.7300000000083386e-07, 8.277000000000978e-06, 4.7300000000083386e-07, 9.27699999999504e-06, 4.7300000000083386e-07, 8.666000000004392e-06, 4.7199999999442133e-07, 8.555999999999842e-06, 4.720000000013602e-07, 7.625000000004156e-06, 4.7199999999442133e-07, 9.695000000004006e-06, 4.720000000013602e-07, 1.0027999999995263e-05, 4.720000000013602e-07, 1.0514000000003132e-05, 4.859999999939912e-07, 9.931000000004686e-06, 4.720000000013602e-07, 1.0596999999994139e-05, 4.860000000009301e-07, 9.181000000003936e-06, 4.720000000013602e-07, 1.0555999999994903e-05, 4.720000000013602e-07, 1.0415999999999204e-05, 4.7300000000083386e-07, 9.583000000000508e-06, 4.720000000013602e-07, 8.555999999999842e-06, 4.720000000013602e-07, 7.5419999999992715e-06, 4.720000000013602e-07, 8.332999999999258e-06, 4.7199999999442133e-07]}</msg>
<status status="PASS" starttime="20201030 18:29:46.291" endtime="20201030 18:29:46.300"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:46.283" endtime="20201030 18:29:46.302"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:46.310" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999442133e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07},...</msg>
<status status="PASS" starttime="20201030 18:29:46.303" endtime="20201030 18:29:46.311"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:29:46.319" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7199999999442133e-07, 4.7...</msg>
<status status="PASS" starttime="20201030 18:29:46.312" endtime="20201030 18:29:46.320"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:46.326" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:29:46.324" endtime="20201030 18:29:46.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:46.328" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7199999999442133e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07]</msg>
<status status="PASS" starttime="20201030 18:29:46.327" endtime="20201030 18:29:46.328"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:46.321" endtime="20201030 18:29:46.329"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:46.332" endtime="20201030 18:29:46.352"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:46.331" endtime="20201030 18:29:46.352"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:46.330" endtime="20201030 18:29:46.353"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.840" endtime="20201030 18:29:46.353"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.839" endtime="20201030 18:29:46.353"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:46.362" endtime="20201030 18:29:46.381"></status>
</kw>
<msg timestamp="20201030 18:29:46.381" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:46.361" endtime="20201030 18:29:46.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:46.384" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:46.382" endtime="20201030 18:29:46.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:46.385" endtime="20201030 18:29:46.386"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:46.358" endtime="20201030 18:29:46.387"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:46.355" endtime="20201030 18:29:46.387"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:46.394" endtime="20201030 18:29:46.683"></status>
</kw>
<msg timestamp="20201030 18:29:46.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023181042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023181514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:46.392" endtime="20201030 18:29:46.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:46.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023181042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023181514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:46.687" endtime="20201030 18:29:46.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:46.696" endtime="20201030 18:29:46.698"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:46.390" endtime="20201030 18:29:46.699"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:46.388" endtime="20201030 18:29:46.699"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:29:46.723" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:29:46.700" endtime="20201030 18:29:46.724"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:46.725" endtime="20201030 18:29:46.726"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:46.729" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:29:46.728" endtime="20201030 18:29:46.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:46.734" level="INFO">VALUE: {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'time': [0.023181042, 0.023181514, 0.023189708, 0.023190181, 0.023197653, 0.023198125, 0.023206472, 0.023206944, 0.023214472, 0.023214944, 0.023225236, 0.023225708, 0.023235347, 0.023235819, 0.023243847, 0.023244333, 0.023252694, 0.023253167, 0.023263167, 0.023263639, 0.023271486, 0.023271958, 0.023282472, 0.023282958, 0.023290569, 0.023291056, 0.023299083, 0.023299569, 0.023308028, 0.0233085, 0.023317583, 0.023318056, 0.023328597, 0.023329069, 0.023339167, 0.023339639, 0.023348292, 0.023348778, 0.023356806, 0.023357292, 0.023366597, 0.023367069, 0.023377708, 0.023378194, 0.023387861, 0.023388333, 0.023396125, 0.023396611, 0.023407056, 0.023407528, 0.023415181, 0.023415653, 0.023423486, 0.023423958, 0.023432431, 0.023432903, 0.023441444, 0.023441917, 0.023452306, 0.023452778, 0.023461278, 0.02346175, 0.02347, 0.023470472, 0.023480792, 0.023481264, 0.023490347, 0.023490819, 0.023501028, 0.023501514, 0.023510847, 0.023511319, 0.023521694, 0.023522167, 0.023532181, 0.023532653, 0.023540389, 0.023540861, 0.023549861, 0.023550333, 0.023560458, 0.023560931, 0.02357075, 0.023571236, 0.023581278, 0.02358175, 0.023590097, 0.023590583, 0.023599264, 0.023599736, 0.023608917, 0.023609403, 0.023617653, 0.023618125, 0.023626875, 0.023627361, 0.023637417, 0.023637889, 0.023647764, 0.023648236], 'eventsource_diff': [0, 4.720000000013602e-07, 8.193999999999563e-06, 4.7300000000083386e-07, 7.4719999999979525e-06, 4.720000000013602e-07, 8.346999999998828e-06, 4.720000000013602e-07, 7.527999999999702e-06, 4.720000000013602e-07, 1.0291999999998552e-05, 4.720000000013602e-07, 9.638999999998787e-06, 4.720000000013602e-07, 8.028000000000202e-06, 4.859999999974607e-07, 8.361000000001867e-06, 4.7300000000083386e-07, 9.999999999999593e-06, 4.7199999999789077e-07, 7.847000000001797e-06, 4.7199999999789077e-07, 1.0513999999999663e-05, 4.860000000009301e-07, 7.611000000001117e-06, 4.870000000004038e-07, 8.027000000000728e-06, 4.859999999974607e-07, 8.459000000002326e-06, 4.7199999999789077e-07, 9.083000000000008e-06, 4.7300000000083386e-07, 1.0540999999999329e-05, 4.720000000013602e-07, 1.0098000000000051e-05, 4.7199999999789077e-07, 8.653000000000827e-06, 4.860000000009301e-07, 8.028000000000202e-06, 4.860000000009301e-07, 9.304999999997648e-06, 4.720000000013602e-07, 1.0638999999999788e-05, 4.860000000009301e-07, 9.666999999997927e-06, 4.720000000013602e-07, 7.791999999999522e-06, 4.860000000009301e-07, 1.0444999999997817e-05, 4.720000000013602e-07, 7.652999999999827e-06, 4.720000000013602e-07, 7.832999999998758e-06, 4.720000000013602e-07, 8.472999999998426e-06, 4.720000000013602e-07, 8.540999999997329e-06, 4.7300000000083386e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 8.499999999998092e-06, 4.720000000013602e-07, 8.250000000001312e-06, 4.7199999999789077e-07, 1.0320000000001162e-05, 4.720000000013602e-07, 9.083000000000008e-06, 4.7199999999789077e-07, 1.0209000000000606e-05, 4.860000000009301e-07, 9.333000000000258e-06, 4.7199999999789077e-07, 1.0374999999999968e-05, 4.7300000000083386e-07, 1.0013999999999162e-05, 4.720000000013602e-07, 7.735999999997772e-06, 4.720000000013602e-07, 8.999999999998592e-06, 4.720000000013602e-07, 1.0124999999999718e-05, 4.7300000000083386e-07, 9.819000000001188e-06, 4.859999999974607e-07, 1.0042000000001772e-05, 4.7199999999789077e-07, 8.347000000002297e-06, 4.859999999974607e-07, 8.680999999999967e-06, 4.720000000013602e-07, 9.181000000000467e-06, 4.860000000009301e-07, 8.249999999997842e-06, 4.720000000013602e-07, 8.749999999998342e-06, 4.860000000009301e-07, 1.0056000000001342e-05, 4.7199999999789077e-07, 9.875000000002937e-06, 4.7199999999789077e-07], 'diff': [0, 4.720000000013602e-07, 8.193999999999563e-06, 4.7300000000083386e-07, 7.4719999999979525e-06, 4.720000000013602e-07, 8.346999999998828e-06, 4.720000000013602e-07, 7.527999999999702e-06, 4.720000000013602e-07, 1.0291999999998552e-05, 4.720000000013602e-07, 9.638999999998787e-06, 4.720000000013602e-07, 8.028000000000202e-06, 4.859999999974607e-07, 8.361000000001867e-06, 4.7300000000083386e-07, 9.999999999999593e-06, 4.7199999999789077e-07, 7.847000000001797e-06, 4.7199999999789077e-07, 1.0513999999999663e-05, 4.860000000009301e-07, 7.611000000001117e-06, 4.870000000004038e-07, 8.027000000000728e-06, 4.859999999974607e-07, 8.459000000002326e-06, 4.7199999999789077e-07, 9.083000000000008e-06, 4.7300000000083386e-07, 1.0540999999999329e-05, 4.720000000013602e-07, 1.0098000000000051e-05, 4.7199999999789077e-07, 8.653000000000827e-06, 4.860000000009301e-07, 8.028000000000202e-06, 4.860000000009301e-07, 9.304999999997648e-06, 4.720000000013602e-07, 1.0638999999999788e-05, 4.860000000009301e-07, 9.666999999997927e-06, 4.720000000013602e-07, 7.791999999999522e-06, 4.860000000009301e-07, 1.0444999999997817e-05, 4.720000000013602e-07, 7.652999999999827e-06, 4.720000000013602e-07, 7.832999999998758e-06, 4.720000000013602e-07, 8.472999999998426e-06, 4.720000000013602e-07, 8.540999999997329e-06, 4.7300000000083386e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 8.499999999998092e-06, 4.720000000013602e-07, 8.250000000001312e-06, 4.7199999999789077e-07, 1.0320000000001162e-05, 4.720000000013602e-07, 9.083000000000008e-06, 4.7199999999789077e-07, 1.0209000000000606e-05, 4.860000000009301e-07, 9.333000000000258e-06, 4.7199999999789077e-07, 1.0374999999999968e-05, 4.7300000000083386e-07, 1.0013999999999162e-05, 4.720000000013602e-07, 7.735999999997772e-06, 4.720000000013602e-07, 8.999999999998592e-06, 4.720000000013602e-07, 1.0124999999999718e-05, 4.7300000000083386e-07, 9.819000000001188e-06, 4.859999999974607e-07, 1.0042000000001772e-05, 4.7199999999789077e-07, 8.347000000002297e-06, 4.859999999974607e-07, 8.680999999999967e-06, 4.720000000013602e-07, 9.181000000000467e-06, 4.860000000009301e-07, 8.249999999997842e-06, 4.720000000013602e-07, 8.749999999998342e-06, 4.860000000009301e-07, 1.0056000000001342e-05, 4.7199999999789077e-07, 9.875000000002937e-06, 4.7199999999789077e-07]}</msg>
<status status="PASS" starttime="20201030 18:29:46.730" endtime="20201030 18:29:46.735"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:46.727" endtime="20201030 18:29:46.735"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:46.739" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, ...</msg>
<status status="PASS" starttime="20201030 18:29:46.736" endtime="20201030 18:29:46.739"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:29:46.744" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.730...</msg>
<status status="PASS" starttime="20201030 18:29:46.740" endtime="20201030 18:29:46.744"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:46.748" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:29:46.747" endtime="20201030 18:29:46.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:46.751" level="INFO">VALUE: [4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201030 18:29:46.749" endtime="20201030 18:29:46.751"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:46.745" endtime="20201030 18:29:46.752"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:46.755" endtime="20201030 18:29:46.775"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:46.754" endtime="20201030 18:29:46.775"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:46.753" endtime="20201030 18:29:46.776"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:46.354" endtime="20201030 18:29:46.776"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:46.354" endtime="20201030 18:29:46.776"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:46.784" endtime="20201030 18:29:46.802"></status>
</kw>
<msg timestamp="20201030 18:29:46.802" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:46.782" endtime="20201030 18:29:46.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:46.805" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:46.803" endtime="20201030 18:29:46.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:46.806" endtime="20201030 18:29:46.807"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:46.780" endtime="20201030 18:29:46.808"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:46.778" endtime="20201030 18:29:46.808"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:46.815" endtime="20201030 18:29:47.103"></status>
</kw>
<msg timestamp="20201030 18:29:47.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022398097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022398583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:46.813" endtime="20201030 18:29:47.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:47.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022398097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022398583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:47.107" endtime="20201030 18:29:47.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:47.116" endtime="20201030 18:29:47.118"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:46.811" endtime="20201030 18:29:47.118"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:46.809" endtime="20201030 18:29:47.119"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:29:47.143" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:29:47.120" endtime="20201030 18:29:47.143"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:47.144" endtime="20201030 18:29:47.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:47.149" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:29:47.148" endtime="20201030 18:29:47.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:47.153" level="INFO">VALUE: {'sourcetime': [0.022398097, 0.022398583, 0.022407653, 0.022408139, 0.022418139, 0.022418625, 0.022426556, 0.022427028, 0.022436097, 0.022436583, 0.022447, 0.022447486, 0.022455931, 0.022456403, 0.022465278, 0.02246575, 0.022474222, 0.022474694, 0.022483903, 0.022484375, 0.022493569, 0.022494056, 0.022503306, 0.022503778, 0.022511361, 0.022511833, 0.022522139, 0.022522611, 0.022531431, 0.022531903, 0.022542528, 0.022543014, 0.022553653, 0.022554125, 0.022562778, 0.02256325, 0.022573569, 0.022574056, 0.022584583, 0.022585056, 0.022594861, 0.022595333, 0.022605139, 0.022605611, 0.022614083, 0.022614556, 0.022623736, 0.022624208, 0.022631611, 0.022632083, 0.022642, 0.022642472, 0.022649986, 0.022650458, 0.022658778, 0.02265925, 0.022667153, 0.022667625, 0.022676111, 0.022676583, 0.022686611, 0.022687083, 0.022694514, 0.022694986, 0.022704403, 0.022704875, 0.022712944, 0.022713417, 0.022723292, 0.022723778, 0.022733486, 0.022733958, 0.022742833, 0.022743306, 0.022751333, 0.022751806, 0.022761083, 0.022761569, 0.022771681, 0.022772153, 0.022780389, 0.022780875, 0.022790361, 0.022790833, 0.022801417, 0.022801889, 0.022811847, 0.022812319, 0.022822222, 0.022822708, 0.022833236, 0.022833708, 0.022843111, 0.022843597, 0.022852681, 0.022853167, 0.022863597, 0.022864083, 0.022873903, 0.022874375], 'eventsource_diff': [0, 4.860000000009301e-07, 9.069999999999911e-06, 4.860000000009301e-07, 9.999999999999593e-06, 4.860000000009301e-07, 7.930999999999216e-06, 4.720000000013602e-07, 9.068999999996968e-06, 4.860000000009301e-07, 1.0417000000002147e-05, 4.859999999974607e-07, 8.444999999999286e-06, 4.720000000013602e-07, 8.875000000001937e-06, 4.7199999999789077e-07, 8.471999999998953e-06, 4.720000000013602e-07, 9.208999999999606e-06, 4.720000000013602e-07, 9.194000000000563e-06, 4.869999999969343e-07, 9.250000000002312e-06, 4.7199999999789077e-07, 7.583000000001977e-06, 4.7199999999789077e-07, 1.0306000000001592e-05, 4.720000000013602e-07, 8.819999999999661e-06, 4.7199999999789077e-07, 1.0625000000000218e-05, 4.860000000009301e-07, 1.0638999999999788e-05, 4.720000000013602e-07, 8.652999999997357e-06, 4.720000000013602e-07, 1.0319000000001688e-05, 4.869999999969343e-07, 1.0526999999999759e-05, 4.7300000000083386e-07, 9.805000000001618e-06, 4.7199999999789077e-07, 9.806000000001092e-06, 4.720000000013602e-07, 8.471999999998953e-06, 4.7300000000083386e-07, 9.179999999997523e-06, 4.720000000013602e-07, 7.402999999999577e-06, 4.720000000013602e-07, 9.916999999998177e-06, 4.720000000013602e-07, 7.514000000000132e-06, 4.7199999999789077e-07, 8.32000000000263e-06, 4.7199999999789077e-07, 7.903000000000077e-06, 4.720000000013602e-07, 8.485999999998523e-06, 4.720000000013602e-07, 1.0027999999998732e-05, 4.720000000013602e-07, 7.430999999998716e-06, 4.720000000013602e-07, 9.417000000001147e-06, 4.7199999999789077e-07, 8.068999999999438e-06, 4.7300000000083386e-07, 9.874999999999468e-06, 4.860000000009301e-07, 9.708000000000633e-06, 4.7199999999789077e-07, 8.875000000001937e-06, 4.7300000000083386e-07, 8.026999999997259e-06, 4.7300000000083386e-07, 9.277000000001978e-06, 4.859999999974607e-07, 1.0111999999999621e-05, 4.720000000013602e-07, 8.236000000001742e-06, 4.859999999974607e-07, 9.485999999999523e-06, 4.720000000013602e-07, 1.0584000000000982e-05, 4.7199999999789077e-07, 9.958000000000883e-06, 4.720000000013602e-07, 9.902999999998607e-06, 4.860000000009301e-07, 1.0527999999999232e-05, 4.720000000013602e-07, 9.402999999998107e-06, 4.860000000009301e-07, 9.083999999999481e-06, 4.860000000009301e-07, 1.0429999999998774e-05, 4.860000000009301e-07, 9.820000000000662e-06, 4.7199999999789077e-07], 'diff': [0, 4.860000000009301e-07, 9.069999999999911e-06, 4.860000000009301e-07, 9.999999999999593e-06, 4.860000000009301e-07, 7.930999999999216e-06, 4.720000000013602e-07, 9.068999999996968e-06, 4.860000000009301e-07, 1.0417000000002147e-05, 4.859999999974607e-07, 8.444999999999286e-06, 4.720000000013602e-07, 8.875000000001937e-06, 4.7199999999789077e-07, 8.471999999998953e-06, 4.720000000013602e-07, 9.208999999999606e-06, 4.720000000013602e-07, 9.194000000000563e-06, 4.869999999969343e-07, 9.250000000002312e-06, 4.7199999999789077e-07, 7.583000000001977e-06, 4.7199999999789077e-07, 1.0306000000001592e-05, 4.720000000013602e-07, 8.819999999999661e-06, 4.7199999999789077e-07, 1.0625000000000218e-05, 4.860000000009301e-07, 1.0638999999999788e-05, 4.720000000013602e-07, 8.652999999997357e-06, 4.720000000013602e-07, 1.0319000000001688e-05, 4.869999999969343e-07, 1.0526999999999759e-05, 4.7300000000083386e-07, 9.805000000001618e-06, 4.7199999999789077e-07, 9.806000000001092e-06, 4.720000000013602e-07, 8.471999999998953e-06, 4.7300000000083386e-07, 9.179999999997523e-06, 4.720000000013602e-07, 7.402999999999577e-06, 4.720000000013602e-07, 9.916999999998177e-06, 4.720000000013602e-07, 7.514000000000132e-06, 4.7199999999789077e-07, 8.32000000000263e-06, 4.7199999999789077e-07, 7.903000000000077e-06, 4.720000000013602e-07, 8.485999999998523e-06, 4.720000000013602e-07, 1.0027999999998732e-05, 4.720000000013602e-07, 7.430999999998716e-06, 4.720000000013602e-07, 9.417000000001147e-06, 4.7199999999789077e-07, 8.068999999999438e-06, 4.7300000000083386e-07, 9.874999999999468e-06, 4.860000000009301e-07, 9.708000000000633e-06, 4.7199999999789077e-07, 8.875000000001937e-06, 4.7300000000083386e-07, 8.026999999997259e-06, 4.7300000000083386e-07, 9.277000000001978e-06, 4.859999999974607e-07, 1.0111999999999621e-05, 4.720000000013602e-07, 8.236000000001742e-06, 4.859999999974607e-07, 9.485999999999523e-06, 4.720000000013602e-07, 1.0584000000000982e-05, 4.7199999999789077e-07, 9.958000000000883e-06, 4.720000000013602e-07, 9.902999999998607e-06, 4.860000000009301e-07, 1.0527999999999232e-05, 4.720000000013602e-07, 9.402999999998107e-06, 4.860000000009301e-07, 9.083999999999481e-06, 4.860000000009301e-07, 1.0429999999998774e-05, 4.860000000009301e-07, 9.820000000000662e-06, 4.7199999999789077e-07]}</msg>
<status status="PASS" starttime="20201030 18:29:47.150" endtime="20201030 18:29:47.154"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:47.146" endtime="20201030 18:29:47.155"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:47.159" level="INFO">${RESULT} = [{'diff': 4.860000000009301e-07}, {'diff': 4.860000000009301e-07}, {'diff': 4.860000000009301e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.860000000009301e-07}, {'diff': 4.859999999974607e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:29:47.155" endtime="20201030 18:29:47.159"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:29:47.163" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720...</msg>
<status status="PASS" starttime="20201030 18:29:47.160" endtime="20201030 18:29:47.163"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:47.168" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:29:47.167" endtime="20201030 18:29:47.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:47.171" level="INFO">VALUE: [4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.869999999969343e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.869999999969343e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201030 18:29:47.170" endtime="20201030 18:29:47.171"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:47.164" endtime="20201030 18:29:47.172"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:47.176" endtime="20201030 18:29:47.195"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:47.174" endtime="20201030 18:29:47.195"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:47.173" endtime="20201030 18:29:47.196"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:46.777" endtime="20201030 18:29:47.196"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:46.776" endtime="20201030 18:29:47.196"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:47.204" endtime="20201030 18:29:47.218"></status>
</kw>
<msg timestamp="20201030 18:29:47.219" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:47.203" endtime="20201030 18:29:47.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:47.221" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:47.220" endtime="20201030 18:29:47.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:47.222" endtime="20201030 18:29:47.224"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:47.200" endtime="20201030 18:29:47.224"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:47.198" endtime="20201030 18:29:47.225"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:47.231" endtime="20201030 18:29:47.515"></status>
</kw>
<msg timestamp="20201030 18:29:47.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019189458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019189931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:47.230" endtime="20201030 18:29:47.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:47.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019189458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019189931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:47.520" endtime="20201030 18:29:47.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:47.528" endtime="20201030 18:29:47.530"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:47.227" endtime="20201030 18:29:47.531"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:47.225" endtime="20201030 18:29:47.531"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:29:47.556" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:29:47.532" endtime="20201030 18:29:47.556"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:47.557" endtime="20201030 18:29:47.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:47.562" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:29:47.561" endtime="20201030 18:29:47.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:47.566" level="INFO">VALUE: {'sourcetime': [0.019189458, 0.019189931, 0.019199125, 0.019199597, 0.019207722, 0.019208208, 0.01921825, 0.019218722, 0.019226861, 0.019227347, 0.019235819, 0.019236292, 0.019246, 0.019246486, 0.019254028, 0.0192545, 0.019265056, 0.019265528, 0.019274167, 0.019274653, 0.019285069, 0.019285542, 0.019293583, 0.019294056, 0.019301986, 0.019302472, 0.019310139, 0.019310611, 0.019318597, 0.019319069, 0.019329292, 0.019329764, 0.019337278, 0.019337764, 0.019347569, 0.019348042, 0.019356806, 0.019357278, 0.019365306, 0.019365778, 0.019375931, 0.019376403, 0.019386486, 0.019386958, 0.019395014, 0.019395486, 0.019406181, 0.019406653, 0.019414667, 0.019415153, 0.019424972, 0.019425444, 0.019436111, 0.019436583, 0.019444625, 0.019445097, 0.019453278, 0.01945375, 0.019463208, 0.019463681, 0.019473278, 0.01947375, 0.019482306, 0.019482792, 0.019492694, 0.019493167, 0.019503486, 0.019503958, 0.019513861, 0.019514347, 0.019521861, 0.019522333, 0.019531958, 0.019532431, 0.019540542, 0.019541014, 0.019550889, 0.019551361, 0.019559125, 0.019559597, 0.019569, 0.019569472, 0.019579486, 0.019579958, 0.019590278, 0.01959075, 0.019599722, 0.019600194, 0.019609056, 0.019609528, 0.019617569, 0.019618042, 0.019626278, 0.019626764, 0.019634389, 0.019634861, 0.019642292, 0.019642778, 0.019651861, 0.019652347], 'eventsource_diff': [0, 4.7300000000083386e-07, 9.194000000000563e-06, 4.7199999999789077e-07, 8.125000000001187e-06, 4.860000000009301e-07, 1.0041999999998302e-05, 4.720000000013602e-07, 8.139000000000757e-06, 4.859999999974607e-07, 8.472000000002422e-06, 4.729999999973644e-07, 9.708000000000633e-06, 4.860000000009301e-07, 7.5419999999992715e-06, 4.720000000013602e-07, 1.0555999999998372e-05, 4.720000000013602e-07, 8.638999999997787e-06, 4.860000000009301e-07, 1.0415999999999204e-05, 4.7300000000083386e-07, 8.041000000000298e-06, 4.7300000000083386e-07, 7.929999999999743e-06, 4.860000000009301e-07, 7.666999999999397e-06, 4.7199999999789077e-07, 7.986000000001492e-06, 4.720000000013602e-07, 1.0223000000000176e-05, 4.7199999999789077e-07, 7.514000000000132e-06, 4.860000000009301e-07, 9.804999999998149e-06, 4.7300000000083386e-07, 8.764000000001382e-06, 4.7199999999789077e-07, 8.028000000000202e-06, 4.720000000013602e-07, 1.0152999999998857e-05, 4.720000000013602e-07, 1.0083000000001008e-05, 4.7199999999789077e-07, 8.055999999999341e-06, 4.720000000013602e-07, 1.0695000000001537e-05, 4.7199999999789077e-07, 8.014000000000632e-06, 4.860000000009301e-07, 9.818999999997718e-06, 4.720000000013602e-07, 1.0666999999998927e-05, 4.720000000013602e-07, 8.041999999999772e-06, 4.720000000013602e-07, 8.180999999999466e-06, 4.7199999999789077e-07, 9.458000000000383e-06, 4.7300000000083386e-07, 9.597000000000078e-06, 4.720000000013602e-07, 8.555999999999842e-06, 4.859999999974607e-07, 9.902000000002603e-06, 4.729999999973644e-07, 1.0319000000001688e-05, 4.7199999999789077e-07, 9.903000000002077e-06, 4.860000000009301e-07, 7.514000000000132e-06, 4.7199999999789077e-07, 9.624999999999218e-06, 4.7300000000083386e-07, 8.111000000001617e-06, 4.7199999999789077e-07, 9.874999999999468e-06, 4.720000000013602e-07, 7.764000000000382e-06, 4.720000000013602e-07, 9.402999999998107e-06, 4.720000000013602e-07, 1.0013999999999162e-05, 4.720000000013602e-07, 1.0319999999997692e-05, 4.720000000013602e-07, 8.971999999999453e-06, 4.720000000013602e-07, 8.861999999998371e-06, 4.720000000013602e-07, 8.041000000000298e-06, 4.729999999973644e-07, 8.236000000001742e-06, 4.860000000009301e-07, 7.624999999997217e-06, 4.720000000013602e-07, 7.430999999998716e-06, 4.860000000009301e-07, 9.083000000000008e-06, 4.860000000009301e-07], 'diff': [0, 4.7300000000083386e-07, 9.194000000000563e-06, 4.7199999999789077e-07, 8.125000000001187e-06, 4.860000000009301e-07, 1.0041999999998302e-05, 4.720000000013602e-07, 8.139000000000757e-06, 4.859999999974607e-07, 8.472000000002422e-06, 4.729999999973644e-07, 9.708000000000633e-06, 4.860000000009301e-07, 7.5419999999992715e-06, 4.720000000013602e-07, 1.0555999999998372e-05, 4.720000000013602e-07, 8.638999999997787e-06, 4.860000000009301e-07, 1.0415999999999204e-05, 4.7300000000083386e-07, 8.041000000000298e-06, 4.7300000000083386e-07, 7.929999999999743e-06, 4.860000000009301e-07, 7.666999999999397e-06, 4.7199999999789077e-07, 7.986000000001492e-06, 4.720000000013602e-07, 1.0223000000000176e-05, 4.7199999999789077e-07, 7.514000000000132e-06, 4.860000000009301e-07, 9.804999999998149e-06, 4.7300000000083386e-07, 8.764000000001382e-06, 4.7199999999789077e-07, 8.028000000000202e-06, 4.720000000013602e-07, 1.0152999999998857e-05, 4.720000000013602e-07, 1.0083000000001008e-05, 4.7199999999789077e-07, 8.055999999999341e-06, 4.720000000013602e-07, 1.0695000000001537e-05, 4.7199999999789077e-07, 8.014000000000632e-06, 4.860000000009301e-07, 9.818999999997718e-06, 4.720000000013602e-07, 1.0666999999998927e-05, 4.720000000013602e-07, 8.041999999999772e-06, 4.720000000013602e-07, 8.180999999999466e-06, 4.7199999999789077e-07, 9.458000000000383e-06, 4.7300000000083386e-07, 9.597000000000078e-06, 4.720000000013602e-07, 8.555999999999842e-06, 4.859999999974607e-07, 9.902000000002603e-06, 4.729999999973644e-07, 1.0319000000001688e-05, 4.7199999999789077e-07, 9.903000000002077e-06, 4.860000000009301e-07, 7.514000000000132e-06, 4.7199999999789077e-07, 9.624999999999218e-06, 4.7300000000083386e-07, 8.111000000001617e-06, 4.7199999999789077e-07, 9.874999999999468e-06, 4.720000000013602e-07, 7.764000000000382e-06, 4.720000000013602e-07, 9.402999999998107e-06, 4.720000000013602e-07, 1.0013999999999162e-05, 4.720000000013602e-07, 1.0319999999997692e-05, 4.720000000013602e-07, 8.971999999999453e-06, 4.720000000013602e-07, 8.861999999998371e-06, 4.720000000013602e-07, 8.041000000000298e-06, 4.729999999973644e-07, 8.236000000001742e-06, 4.860000000009301e-07, 7.624999999997217e-06, 4.720000000013602e-07, 7.430999999998716e-06, 4.860000000009301e-07, 9.083000000000008e-06, 4.860000000009301e-07]}</msg>
<status status="PASS" starttime="20201030 18:29:47.563" endtime="20201030 18:29:47.567"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:47.559" endtime="20201030 18:29:47.568"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:47.572" level="INFO">${RESULT} = [{'diff': 4.7300000000083386e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.860000000009301e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.859999999974607e-07}, {'diff': 4.729999999973644e-07},...</msg>
<status status="PASS" starttime="20201030 18:29:47.568" endtime="20201030 18:29:47.572"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:29:47.576" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.72...</msg>
<status status="PASS" starttime="20201030 18:29:47.573" endtime="20201030 18:29:47.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:47.580" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:29:47.579" endtime="20201030 18:29:47.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:47.582" level="INFO">VALUE: [4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07]</msg>
<status status="PASS" starttime="20201030 18:29:47.581" endtime="20201030 18:29:47.583"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:47.577" endtime="20201030 18:29:47.583"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:47.587" endtime="20201030 18:29:47.606"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:47.585" endtime="20201030 18:29:47.607"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:47.584" endtime="20201030 18:29:47.607"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:47.197" endtime="20201030 18:29:47.608"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:47.197" endtime="20201030 18:29:47.608"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:47.617" endtime="20201030 18:29:47.631"></status>
</kw>
<msg timestamp="20201030 18:29:47.631" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:47.615" endtime="20201030 18:29:47.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:47.634" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:47.632" endtime="20201030 18:29:47.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:47.635" endtime="20201030 18:29:47.637"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:47.612" endtime="20201030 18:29:47.637"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:47.610" endtime="20201030 18:29:47.638"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:47.644" endtime="20201030 18:29:47.931"></status>
</kw>
<msg timestamp="20201030 18:29:47.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019692778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01969325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:29:47.643" endtime="20201030 18:29:47.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:47.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019692778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01969325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:29:47.935" endtime="20201030 18:29:47.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:47.944" endtime="20201030 18:29:47.945"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:47.640" endtime="20201030 18:29:47.946"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:47.638" endtime="20201030 18:29:47.946"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:29:47.970" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:29:47.947" endtime="20201030 18:29:47.971"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:47.972" endtime="20201030 18:29:47.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:47.977" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:29:47.976" endtime="20201030 18:29:47.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:47.981" level="INFO">VALUE: {'sourcetime': [0.019692778, 0.01969325, 0.019701083, 0.019701569, 0.019709097, 0.019709569, 0.019719069, 0.019719542, 0.019728722, 0.019729194, 0.019739417, 0.019739889, 0.019748389, 0.019748861, 0.019756333, 0.019756806, 0.019765056, 0.019765528, 0.019775875, 0.019776347, 0.019785431, 0.019785917, 0.019793556, 0.019794028, 0.019802292, 0.019802764, 0.019811861, 0.019812333, 0.019822889, 0.019823361, 0.019831722, 0.019832208, 0.019839736, 0.019840208, 0.019849292, 0.019849764, 0.019859236, 0.019859722, 0.019869417, 0.019869889, 0.019879792, 0.019880278, 0.019890667, 0.019891139, 0.019900292, 0.019900764, 0.019911306, 0.019911778, 0.019919292, 0.019919764, 0.019927431, 0.019927903, 0.019938042, 0.019938514, 0.019946778, 0.01994725, 0.019956444, 0.019956917, 0.019967139, 0.019967611, 0.019977, 0.019977486, 0.019985514, 0.019986, 0.019996111, 0.019996583, 0.020005861, 0.020006347, 0.020014597, 0.020015069, 0.020022833, 0.020023306, 0.020033944, 0.020034417, 0.020044569, 0.020045042, 0.020053819, 0.020054292, 0.020062875, 0.020063347, 0.020073181, 0.020073653, 0.020083333, 0.020083819, 0.020094056, 0.020094528, 0.020103167, 0.020103653, 0.020113861, 0.020114347, 0.020122847, 0.020123319, 0.020133083, 0.020133556, 0.020143681, 0.020144153, 0.020153792, 0.020154264, 0.020162944, 0.020163417], 'eventsource_diff': [0, 4.7199999999789077e-07, 7.833000000002227e-06, 4.859999999974607e-07, 7.527999999999702e-06, 4.720000000013602e-07, 9.499999999999093e-06, 4.7300000000083386e-07, 9.180000000000993e-06, 4.7199999999789077e-07, 1.0223000000000176e-05, 4.720000000013602e-07, 8.500000000001562e-06, 4.7199999999789077e-07, 7.472000000001422e-06, 4.729999999973644e-07, 8.250000000001312e-06, 4.720000000013602e-07, 1.0346999999997358e-05, 4.720000000013602e-07, 9.083999999999481e-06, 4.860000000009301e-07, 7.639000000000257e-06, 4.720000000013602e-07, 8.263999999997412e-06, 4.720000000013602e-07, 9.096999999999578e-06, 4.720000000013602e-07, 1.0555999999998372e-05, 4.720000000013602e-07, 8.360999999998397e-06, 4.860000000009301e-07, 7.527999999999702e-06, 4.720000000013602e-07, 9.083999999999481e-06, 4.7199999999789077e-07, 9.471999999999953e-06, 4.860000000009301e-07, 9.695000000000537e-06, 4.720000000013602e-07, 9.902999999998607e-06, 4.860000000009301e-07, 1.0388999999999537e-05, 4.7199999999789077e-07, 9.153000000001327e-06, 4.720000000013602e-07, 1.0541999999998802e-05, 4.720000000013602e-07, 7.514000000000132e-06, 4.7199999999789077e-07, 7.666999999999397e-06, 4.720000000013602e-07, 1.0138999999999287e-05, 4.720000000013602e-07, 8.263999999997412e-06, 4.720000000013602e-07, 9.194000000000563e-06, 4.7300000000083386e-07, 1.0221999999997233e-05, 4.720000000013602e-07, 9.389000000002007e-06, 4.859999999974607e-07, 8.028000000000202e-06, 4.860000000009301e-07, 1.0111000000000148e-05, 4.7199999999789077e-07, 9.278000000001452e-06, 4.860000000009301e-07, 8.249999999997842e-06, 4.720000000013602e-07, 7.764000000000382e-06, 4.7300000000083386e-07, 1.0638000000000314e-05, 4.729999999973644e-07, 1.0152000000002853e-05, 4.729999999973644e-07, 8.777000000001478e-06, 4.7300000000083386e-07, 8.582999999999508e-06, 4.7199999999789077e-07, 9.834000000000231e-06, 4.720000000013602e-07, 9.679999999998024e-06, 4.860000000009301e-07, 1.0236999999999746e-05, 4.720000000013602e-07, 8.639000000001257e-06, 4.859999999974607e-07, 1.0208000000001133e-05, 4.860000000009301e-07, 8.499999999998092e-06, 4.720000000013602e-07, 9.763999999998912e-06, 4.7300000000083386e-07, 1.0124999999999718e-05, 4.720000000013602e-07, 9.638999999998787e-06, 4.720000000013602e-07, 8.679999999997023e-06, 4.7300000000083386e-07], 'diff': [0, 4.7199999999789077e-07, 7.833000000002227e-06, 4.859999999974607e-07, 7.527999999999702e-06, 4.720000000013602e-07, 9.499999999999093e-06, 4.7300000000083386e-07, 9.180000000000993e-06, 4.7199999999789077e-07, 1.0223000000000176e-05, 4.720000000013602e-07, 8.500000000001562e-06, 4.7199999999789077e-07, 7.472000000001422e-06, 4.729999999973644e-07, 8.250000000001312e-06, 4.720000000013602e-07, 1.0346999999997358e-05, 4.720000000013602e-07, 9.083999999999481e-06, 4.860000000009301e-07, 7.639000000000257e-06, 4.720000000013602e-07, 8.263999999997412e-06, 4.720000000013602e-07, 9.096999999999578e-06, 4.720000000013602e-07, 1.0555999999998372e-05, 4.720000000013602e-07, 8.360999999998397e-06, 4.860000000009301e-07, 7.527999999999702e-06, 4.720000000013602e-07, 9.083999999999481e-06, 4.7199999999789077e-07, 9.471999999999953e-06, 4.860000000009301e-07, 9.695000000000537e-06, 4.720000000013602e-07, 9.902999999998607e-06, 4.860000000009301e-07, 1.0388999999999537e-05, 4.7199999999789077e-07, 9.153000000001327e-06, 4.720000000013602e-07, 1.0541999999998802e-05, 4.720000000013602e-07, 7.514000000000132e-06, 4.7199999999789077e-07, 7.666999999999397e-06, 4.720000000013602e-07, 1.0138999999999287e-05, 4.720000000013602e-07, 8.263999999997412e-06, 4.720000000013602e-07, 9.194000000000563e-06, 4.7300000000083386e-07, 1.0221999999997233e-05, 4.720000000013602e-07, 9.389000000002007e-06, 4.859999999974607e-07, 8.028000000000202e-06, 4.860000000009301e-07, 1.0111000000000148e-05, 4.7199999999789077e-07, 9.278000000001452e-06, 4.860000000009301e-07, 8.249999999997842e-06, 4.720000000013602e-07, 7.764000000000382e-06, 4.7300000000083386e-07, 1.0638000000000314e-05, 4.729999999973644e-07, 1.0152000000002853e-05, 4.729999999973644e-07, 8.777000000001478e-06, 4.7300000000083386e-07, 8.582999999999508e-06, 4.7199999999789077e-07, 9.834000000000231e-06, 4.720000000013602e-07, 9.679999999998024e-06, 4.860000000009301e-07, 1.0236999999999746e-05, 4.720000000013602e-07, 8.639000000001257e-06, 4.859999999974607e-07, 1.0208000000001133e-05, 4.860000000009301e-07, 8.499999999998092e-06, 4.720000000013602e-07, 9.763999999998912e-06, 4.7300000000083386e-07, 1.0124999999999718e-05, 4.720000000013602e-07, 9.638999999998787e-06, 4.720000000013602e-07, 8.679999999997023e-06, 4.7300000000083386e-07]}</msg>
<status status="PASS" starttime="20201030 18:29:47.978" endtime="20201030 18:29:47.982"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:47.974" endtime="20201030 18:29:47.982"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:47.986" level="INFO">${RESULT} = [{'diff': 4.7199999999789077e-07}, {'diff': 4.859999999974607e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.720000000013602e-07}...</msg>
<status status="PASS" starttime="20201030 18:29:47.983" endtime="20201030 18:29:47.987"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:29:47.991" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999999789077e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4....</msg>
<status status="PASS" starttime="20201030 18:29:47.987" endtime="20201030 18:29:47.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:47.996" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:29:47.994" endtime="20201030 18:29:47.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:47.998" level="INFO">VALUE: [4.7199999999789077e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201030 18:29:47.997" endtime="20201030 18:29:47.998"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:47.992" endtime="20201030 18:29:47.999"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:48.003" endtime="20201030 18:29:48.022"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.001" endtime="20201030 18:29:48.023"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.000" endtime="20201030 18:29:48.023"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:47.608" endtime="20201030 18:29:48.023"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:47.608" endtime="20201030 18:29:48.023"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:48.031" endtime="20201030 18:29:48.049"></status>
</kw>
<msg timestamp="20201030 18:29:48.049" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:48.030" endtime="20201030 18:29:48.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:48.052" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:48.050" endtime="20201030 18:29:48.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:48.053" endtime="20201030 18:29:48.055"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.027" endtime="20201030 18:29:48.055"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.025" endtime="20201030 18:29:48.056"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:48.063" endtime="20201030 18:29:48.351"></status>
</kw>
<msg timestamp="20201030 18:29:48.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021036097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021036569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:48.061" endtime="20201030 18:29:48.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:48.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021036097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021036569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:48.356" endtime="20201030 18:29:48.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:48.365" endtime="20201030 18:29:48.367"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.058" endtime="20201030 18:29:48.367"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.057" endtime="20201030 18:29:48.368"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:29:48.393" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:29:48.369" endtime="20201030 18:29:48.393"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:48.394" endtime="20201030 18:29:48.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:48.399" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:29:48.398" endtime="20201030 18:29:48.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:48.403" level="INFO">VALUE: {'sourcetime': [0.021036097, 0.021036569, 0.021046931, 0.021047403, 0.021057792, 0.021058264, 0.021068917, 0.021069389, 0.021079806, 0.021080278, 0.021089347, 0.021089833, 0.021098389, 0.021098861, 0.021107417, 0.021107889, 0.021117583, 0.021118069, 0.021126111, 0.021126583, 0.021136694, 0.021137167, 0.02114675, 0.021147236, 0.021155486, 0.021155958, 0.021166097, 0.021166569, 0.021176458, 0.021176931, 0.021186931, 0.021187417, 0.021197528, 0.021198, 0.021208333, 0.021208806, 0.021219222, 0.021219694, 0.021227444, 0.021227917, 0.021236403, 0.021236875, 0.021246681, 0.021247153, 0.021255542, 0.021256014, 0.021265611, 0.021266083, 0.021276125, 0.021276597, 0.021285778, 0.02128625, 0.021293889, 0.021294361, 0.021302694, 0.021303167, 0.021311528, 0.021312, 0.021322653, 0.021323125, 0.021331139, 0.021331611, 0.021341111, 0.021341583, 0.021350444, 0.021350917, 0.021360319, 0.021360792, 0.021368514, 0.021368986, 0.021377431, 0.021377903, 0.021386778, 0.02138725, 0.021395694, 0.021396181, 0.021404014, 0.021404486, 0.021414514, 0.021415, 0.021423569, 0.021424042, 0.021431778, 0.021432264, 0.021441472, 0.021441944, 0.021449889, 0.021450361, 0.021459458, 0.021459931, 0.021469417, 0.021469903, 0.02147825, 0.021478722, 0.021489042, 0.021489514, 0.021498292, 0.021498764, 0.021507208, 0.021507681], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'source_diff': [0, 4.720000000013602e-07, 1.0361999999999871e-05, 4.7199999999789077e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 1.0652999999999357e-05, 4.720000000013602e-07, 1.0416999999998677e-05, 4.720000000013602e-07, 9.069000000000438e-06, 4.859999999974607e-07, 8.555999999999842e-06, 4.720000000013602e-07, 8.555999999999842e-06, 4.720000000013602e-07, 9.693999999997593e-06, 4.860000000009301e-07, 8.041999999999772e-06, 4.720000000013602e-07, 1.0111000000000148e-05, 4.729999999973644e-07, 9.583000000000508e-06, 4.860000000009301e-07, 8.250000000001312e-06, 4.7199999999789077e-07, 1.0138999999999287e-05, 4.720000000013602e-07, 9.888999999999037e-06, 4.7300000000083386e-07, 9.999999999999593e-06, 4.860000000009301e-07, 1.0111000000000148e-05, 4.720000000013602e-07, 1.0332999999997788e-05, 4.7300000000083386e-07, 1.0415999999999204e-05, 4.720000000013602e-07, 7.750000000000812e-06, 4.729999999973644e-07, 8.486000000001992e-06, 4.7199999999789077e-07, 9.806000000001092e-06, 4.720000000013602e-07, 8.388999999997537e-06, 4.720000000013602e-07, 9.597000000000078e-06, 4.720000000013602e-07, 1.0041999999998302e-05, 4.720000000013602e-07, 9.181000000000467e-06, 4.7199999999789077e-07, 7.639000000000257e-06, 4.720000000013602e-07, 8.332999999999258e-06, 4.7300000000083386e-07, 8.360999999998397e-06, 4.720000000013602e-07, 1.0652999999999357e-05, 4.7199999999789077e-07, 8.014000000000632e-06, 4.720000000013602e-07, 9.499999999999093e-06, 4.720000000013602e-07, 8.860999999998898e-06, 4.7300000000083386e-07, 9.401999999998634e-06, 4.7300000000083386e-07, 7.722000000001672e-06, 4.7199999999789077e-07, 8.444999999999286e-06, 4.720000000013602e-07, 8.874999999998467e-06, 4.720000000013602e-07, 8.443999999999813e-06, 4.870000000004038e-07, 7.832999999998758e-06, 4.720000000013602e-07, 1.0027999999998732e-05, 4.860000000009301e-07, 8.568999999999938e-06, 4.7300000000083386e-07, 7.735999999997772e-06, 4.860000000009301e-07, 9.208000000000133e-06, 4.720000000013602e-07, 7.944999999998786e-06, 4.720000000013602e-07, 9.096999999999578e-06, 4.7300000000083386e-07, 9.485999999999523e-06, 4.859999999974607e-07, 8.347000000002297e-06, 4.7199999999789077e-07, 1.0320000000001162e-05, 4.720000000013602e-07, 8.777999999997482e-06, 4.720000000013602e-07, 8.443999999999813e-06, 4.7300000000083386e-07], 'diff': [0, 4.720000000013602e-07, 1.0361999999999871e-05, 4.7199999999789077e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 1.0652999999999357e-05, 4.720000000013602e-07, 1.0416999999998677e-05, 4.720000000013602e-07, 9.069000000000438e-06, 4.859999999974607e-07, 8.555999999999842e-06, 4.720000000013602e-07, 8.555999999999842e-06, 4.720000000013602e-07, 9.693999999997593e-06, 4.860000000009301e-07, 8.041999999999772e-06, 4.720000000013602e-07, 1.0111000000000148e-05, 4.729999999973644e-07, 9.583000000000508e-06, 4.860000000009301e-07, 8.250000000001312e-06, 4.7199999999789077e-07, 1.0138999999999287e-05, 4.720000000013602e-07, 9.888999999999037e-06, 4.7300000000083386e-07, 9.999999999999593e-06, 4.860000000009301e-07, 1.0111000000000148e-05, 4.720000000013602e-07, 1.0332999999997788e-05, 4.7300000000083386e-07, 1.0415999999999204e-05, 4.720000000013602e-07, 7.750000000000812e-06, 4.729999999973644e-07, 8.486000000001992e-06, 4.7199999999789077e-07, 9.806000000001092e-06, 4.720000000013602e-07, 8.388999999997537e-06, 4.720000000013602e-07, 9.597000000000078e-06, 4.720000000013602e-07, 1.0041999999998302e-05, 4.720000000013602e-07, 9.181000000000467e-06, 4.7199999999789077e-07, 7.639000000000257e-06, 4.720000000013602e-07, 8.332999999999258e-06, 4.7300000000083386e-07, 8.360999999998397e-06, 4.720000000013602e-07, 1.0652999999999357e-05, 4.7199999999789077e-07, 8.014000000000632e-06, 4.720000000013602e-07, 9.499999999999093e-06, 4.720000000013602e-07, 8.860999999998898e-06, 4.7300000000083386e-07, 9.401999999998634e-06, 4.7300000000083386e-07, 7.722000000001672e-06, 4.7199999999789077e-07, 8.444999999999286e-06, 4.720000000013602e-07, 8.874999999998467e-06, 4.720000000013602e-07, 8.443999999999813e-06, 4.870000000004038e-07, 7.832999999998758e-06, 4.720000000013602e-07, 1.0027999999998732e-05, 4.860000000009301e-07, 8.568999999999938e-06, 4.7300000000083386e-07, 7.735999999997772e-06, 4.860000000009301e-07, 9.208000000000133e-06, 4.720000000013602e-07, 7.944999999998786e-06, 4.720000000013602e-07, 9.096999999999578e-06, 4.7300000000083386e-07, 9.485999999999523e-06, 4.859999999974607e-07, 8.347000000002297e-06, 4.7199999999789077e-07, 1.0320000000001162e-05, 4.720000000013602e-07, 8.777999999997482e-06, 4.720000000013602e-07, 8.443999999999813e-06, 4.7300000000083386e-07]}</msg>
<status status="PASS" starttime="20201030 18:29:48.400" endtime="20201030 18:29:48.405"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.396" endtime="20201030 18:29:48.405"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:48.409" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.859999999974607e-07}, ...</msg>
<status status="PASS" starttime="20201030 18:29:48.406" endtime="20201030 18:29:48.410"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:29:48.414" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860...</msg>
<status status="PASS" starttime="20201030 18:29:48.410" endtime="20201030 18:29:48.414"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:48.419" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:29:48.418" endtime="20201030 18:29:48.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:48.421" level="INFO">VALUE: [4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201030 18:29:48.420" endtime="20201030 18:29:48.422"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.415" endtime="20201030 18:29:48.422"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:48.426" endtime="20201030 18:29:48.447"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.425" endtime="20201030 18:29:48.448"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.423" endtime="20201030 18:29:48.449"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.024" endtime="20201030 18:29:48.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.024" endtime="20201030 18:29:48.450"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:48.468" endtime="20201030 18:29:48.487"></status>
</kw>
<msg timestamp="20201030 18:29:48.488" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:48.465" endtime="20201030 18:29:48.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:48.493" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:48.490" endtime="20201030 18:29:48.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:48.496" endtime="20201030 18:29:48.499"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.459" endtime="20201030 18:29:48.500"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.455" endtime="20201030 18:29:48.501"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:48.516" endtime="20201030 18:29:48.805"></status>
</kw>
<msg timestamp="20201030 18:29:48.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034537, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034537472, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:29:48.513" endtime="20201030 18:29:48.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:48.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034537, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034537472, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:29:48.810" endtime="20201030 18:29:48.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:48.819" endtime="20201030 18:29:48.820"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.506" endtime="20201030 18:29:48.821"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.503" endtime="20201030 18:29:48.821"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:29:48.847" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:29:48.822" endtime="20201030 18:29:48.847"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:48.848" endtime="20201030 18:29:48.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:48.853" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:29:48.852" endtime="20201030 18:29:48.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:48.857" level="INFO">VALUE: {'sourcetime': [0.034537, 0.034537472, 0.034547278, 0.03454775, 0.034555361, 0.034555833, 0.034565431, 0.034565903, 0.034576236, 0.034576708, 0.034586819, 0.034587292, 0.034597931, 0.034598403, 0.034605833, 0.034606306, 0.034614875, 0.034615347, 0.034625639, 0.034626125, 0.034634375, 0.034634847, 0.034643708, 0.034644181, 0.034654806, 0.034655292, 0.034662806, 0.034663278, 0.034672264, 0.034672736, 0.034680764, 0.034681236, 0.034689083, 0.034689556, 0.034700069, 0.034700542, 0.034710125, 0.034710597, 0.034719736, 0.034720208, 0.034728889, 0.034729361, 0.034740014, 0.0347405, 0.034750208, 0.034750694, 0.034761236, 0.034761722, 0.034770792, 0.034771264, 0.034781, 0.034781472, 0.034790306, 0.034790792, 0.034799639, 0.034800111, 0.034809972, 0.034810444, 0.034818958, 0.034819444, 0.034826958, 0.034827431, 0.034836306, 0.034836778, 0.034844194, 0.034844667, 0.034854153, 0.034854639, 0.0348635, 0.034863986, 0.034874611, 0.034875083, 0.034882847, 0.034883319, 0.034893472, 0.034893944, 0.034904528, 0.034905, 0.034914111, 0.034914583, 0.034922264, 0.034922736, 0.034930153, 0.034930625, 0.034940792, 0.034941264, 0.034949972, 0.034950444, 0.034958222, 0.034958694, 0.034966167, 0.034966639, 0.034974389, 0.034974861, 0.034984333, 0.034984806, 0.034993167, 0.034993639, 0.035002819, 0.035003292], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'source_diff': [0, 4.720000000013602e-07, 9.806000000001092e-06, 4.720000000013602e-07, 7.6109999999976474e-06, 4.720000000013602e-07, 9.597999999999551e-06, 4.720000000013602e-07, 1.0333000000001258e-05, 4.7199999999442133e-07, 1.0111000000000148e-05, 4.7300000000083386e-07, 1.0638999999999788e-05, 4.720000000013602e-07, 7.430000000002712e-06, 4.7300000000083386e-07, 8.568999999999938e-06, 4.7199999999442133e-07, 1.0292000000002022e-05, 4.860000000009301e-07, 8.250000000001312e-06, 4.720000000013602e-07, 8.860999999998898e-06, 4.7300000000083386e-07, 1.0625000000000218e-05, 4.859999999939912e-07, 7.514000000000132e-06, 4.720000000013602e-07, 8.986000000002492e-06, 4.720000000013602e-07, 8.028000000000202e-06, 4.7199999999442133e-07, 7.847000000005266e-06, 4.7300000000083386e-07, 1.051299999999672e-05, 4.7300000000083386e-07, 9.583000000000508e-06, 4.720000000013602e-07, 9.138999999998287e-06, 4.720000000013602e-07, 8.680999999996497e-06, 4.720000000013602e-07, 1.0652999999999357e-05, 4.860000000009301e-07, 9.707999999997163e-06, 4.860000000009301e-07, 1.0542000000002272e-05, 4.860000000009301e-07, 9.069999999999911e-06, 4.720000000013602e-07, 9.735999999996303e-06, 4.720000000013602e-07, 8.833999999999231e-06, 4.860000000009301e-07, 8.846999999999328e-06, 4.720000000013602e-07, 9.860999999999898e-06, 4.720000000013602e-07, 8.513999999994193e-06, 4.860000000009301e-07, 7.514000000000132e-06, 4.7300000000083386e-07, 8.874999999998467e-06, 4.720000000013602e-07, 7.416000000003142e-06, 4.7300000000083386e-07, 9.485999999996053e-06, 4.860000000009301e-07, 8.860999999998898e-06, 4.860000000009301e-07, 1.0625000000000218e-05, 4.720000000013602e-07, 7.764000000000382e-06, 4.720000000013602e-07, 1.0152999999998857e-05, 4.720000000013602e-07, 1.0583999999994043e-05, 4.720000000013602e-07, 9.110999999999148e-06, 4.720000000013602e-07, 7.681000000002436e-06, 4.720000000013602e-07, 7.416999999995677e-06, 4.720000000013602e-07, 1.0166999999998427e-05, 4.720000000013602e-07, 8.708000000003102e-06, 4.7199999999442133e-07, 7.777999999999952e-06, 4.720000000013602e-07, 7.473000000000896e-06, 4.720000000013602e-07, 7.750000000000812e-06, 4.720000000013602e-07, 9.471999999996483e-06, 4.7300000000083386e-07, 8.360999999998397e-06, 4.720000000013602e-07, 9.179999999997523e-06, 4.7300000000083386e-07], 'diff': [0, 4.720000000013602e-07, 9.806000000001092e-06, 4.720000000013602e-07, 7.6109999999976474e-06, 4.720000000013602e-07, 9.597999999999551e-06, 4.720000000013602e-07, 1.0333000000001258e-05, 4.7199999999442133e-07, 1.0111000000000148e-05, 4.7300000000083386e-07, 1.0638999999999788e-05, 4.720000000013602e-07, 7.430000000002712e-06, 4.7300000000083386e-07, 8.568999999999938e-06, 4.7199999999442133e-07, 1.0292000000002022e-05, 4.860000000009301e-07, 8.250000000001312e-06, 4.720000000013602e-07, 8.860999999998898e-06, 4.7300000000083386e-07, 1.0625000000000218e-05, 4.859999999939912e-07, 7.514000000000132e-06, 4.720000000013602e-07, 8.986000000002492e-06, 4.720000000013602e-07, 8.028000000000202e-06, 4.7199999999442133e-07, 7.847000000005266e-06, 4.7300000000083386e-07, 1.051299999999672e-05, 4.7300000000083386e-07, 9.583000000000508e-06, 4.720000000013602e-07, 9.138999999998287e-06, 4.720000000013602e-07, 8.680999999996497e-06, 4.720000000013602e-07, 1.0652999999999357e-05, 4.860000000009301e-07, 9.707999999997163e-06, 4.860000000009301e-07, 1.0542000000002272e-05, 4.860000000009301e-07, 9.069999999999911e-06, 4.720000000013602e-07, 9.735999999996303e-06, 4.720000000013602e-07, 8.833999999999231e-06, 4.860000000009301e-07, 8.846999999999328e-06, 4.720000000013602e-07, 9.860999999999898e-06, 4.720000000013602e-07, 8.513999999994193e-06, 4.860000000009301e-07, 7.514000000000132e-06, 4.7300000000083386e-07, 8.874999999998467e-06, 4.720000000013602e-07, 7.416000000003142e-06, 4.7300000000083386e-07, 9.485999999996053e-06, 4.860000000009301e-07, 8.860999999998898e-06, 4.860000000009301e-07, 1.0625000000000218e-05, 4.720000000013602e-07, 7.764000000000382e-06, 4.720000000013602e-07, 1.0152999999998857e-05, 4.720000000013602e-07, 1.0583999999994043e-05, 4.720000000013602e-07, 9.110999999999148e-06, 4.720000000013602e-07, 7.681000000002436e-06, 4.720000000013602e-07, 7.416999999995677e-06, 4.720000000013602e-07, 1.0166999999998427e-05, 4.720000000013602e-07, 8.708000000003102e-06, 4.7199999999442133e-07, 7.777999999999952e-06, 4.720000000013602e-07, 7.473000000000896e-06, 4.720000000013602e-07, 7.750000000000812e-06, 4.720000000013602e-07, 9.471999999996483e-06, 4.7300000000083386e-07, 8.360999999998397e-06, 4.720000000013602e-07, 9.179999999997523e-06, 4.7300000000083386e-07]}</msg>
<status status="PASS" starttime="20201030 18:29:48.854" endtime="20201030 18:29:48.858"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.850" endtime="20201030 18:29:48.859"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:48.863" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999442133e-07}, {'diff': 4.7300000000083386e-07},...</msg>
<status status="PASS" starttime="20201030 18:29:48.860" endtime="20201030 18:29:48.863"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:29:48.867" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7...</msg>
<status status="PASS" starttime="20201030 18:29:48.864" endtime="20201030 18:29:48.868"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:48.872" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:29:48.871" endtime="20201030 18:29:48.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:48.874" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201030 18:29:48.873" endtime="20201030 18:29:48.875"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.868" endtime="20201030 18:29:48.875"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:48.879" endtime="20201030 18:29:48.899"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.878" endtime="20201030 18:29:48.899"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.876" endtime="20201030 18:29:48.900"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.452" endtime="20201030 18:29:48.900"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.451" endtime="20201030 18:29:48.900"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:48.909" endtime="20201030 18:29:48.927"></status>
</kw>
<msg timestamp="20201030 18:29:48.927" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:48.908" endtime="20201030 18:29:48.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:48.930" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:48.928" endtime="20201030 18:29:48.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:48.931" endtime="20201030 18:29:48.933"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.905" endtime="20201030 18:29:48.933"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.902" endtime="20201030 18:29:48.934"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:48.940" endtime="20201030 18:29:49.226"></status>
</kw>
<msg timestamp="20201030 18:29:49.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023578167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023578639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:48.939" endtime="20201030 18:29:49.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:49.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023578167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023578639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:49.231" endtime="20201030 18:29:49.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:49.240" endtime="20201030 18:29:49.241"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.936" endtime="20201030 18:29:49.242"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.934" endtime="20201030 18:29:49.242"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:29:49.268" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:29:49.243" endtime="20201030 18:29:49.268"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:49.269" endtime="20201030 18:29:49.270"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:49.274" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:29:49.273" endtime="20201030 18:29:49.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:49.278" level="INFO">VALUE: {'sourcetime': [0.023578167, 0.023578639, 0.023589083, 0.023589569, 0.023598236, 0.023598722, 0.023609375, 0.023609847, 0.0236175, 0.023617972, 0.023628486, 0.023628972, 0.0236395, 0.023639972, 0.023647694, 0.023648167, 0.023657139, 0.023657611, 0.023665236, 0.023665708, 0.023676236, 0.023676722, 0.023684139, 0.023684611, 0.023693167, 0.023693639, 0.023701986, 0.023702458, 0.023711972, 0.023712444, 0.023720472, 0.023720944, 0.023729306, 0.023729778, 0.023739778, 0.02374025, 0.023750181, 0.023750653, 0.023761278, 0.02376175, 0.023772333, 0.023772819, 0.023783361, 0.023783847, 0.023793347, 0.023793833, 0.023804181, 0.023804653, 0.023814958, 0.023815431, 0.023825153, 0.023825625, 0.023834806, 0.023835278, 0.023843931, 0.023844403, 0.023854097, 0.023854583, 0.023862111, 0.023862583, 0.023872292, 0.023872764, 0.023882153, 0.023882625, 0.023891181, 0.023891653, 0.023902278, 0.02390275, 0.023910278, 0.02391075, 0.023918167, 0.023918639, 0.023926292, 0.023926764, 0.023934597, 0.023935069, 0.023943639, 0.023944125, 0.023954264, 0.023954736, 0.023964458, 0.023964931, 0.023972472, 0.023972944, 0.023982667, 0.023983139, 0.023991042, 0.023991514, 0.023998958, 0.023999444, 0.024006847, 0.024007333, 0.024017333, 0.024017819, 0.024027417, 0.024027889, 0.024038528, 0.024039, 0.024048903, 0.024049389], 'eventsource_diff': [0, 4.7199999999789077e-07, 1.0444000000001813e-05, 4.860000000009301e-07, 8.667000000000397e-06, 4.859999999974607e-07, 1.0652999999999357e-05, 4.720000000013602e-07, 7.652999999999827e-06, 4.720000000013602e-07, 1.0513999999999663e-05, 4.860000000009301e-07, 1.0527999999999232e-05, 4.7199999999789077e-07, 7.722000000001672e-06, 4.7300000000083386e-07, 8.971999999999453e-06, 4.7199999999789077e-07, 7.625000000000687e-06, 4.720000000013602e-07, 1.0527999999999232e-05, 4.860000000009301e-07, 7.4169999999991465e-06, 4.720000000013602e-07, 8.555999999999842e-06, 4.7199999999789077e-07, 8.347000000002297e-06, 4.7199999999789077e-07, 9.514000000002132e-06, 4.7199999999789077e-07, 8.028000000000202e-06, 4.720000000013602e-07, 8.361999999997871e-06, 4.720000000013602e-07, 9.999999999999593e-06, 4.720000000013602e-07, 9.930999999997747e-06, 4.720000000013602e-07, 1.0625000000000218e-05, 4.720000000013602e-07, 1.0582999999998038e-05, 4.860000000009301e-07, 1.0541999999998802e-05, 4.860000000009301e-07, 9.499999999999093e-06, 4.860000000009301e-07, 1.0348000000000301e-05, 4.7199999999789077e-07, 1.0305000000002118e-05, 4.7300000000083386e-07, 9.722000000000203e-06, 4.7199999999789077e-07, 9.181000000000467e-06, 4.720000000013602e-07, 8.652999999997357e-06, 4.720000000013602e-07, 9.694000000001063e-06, 4.859999999974607e-07, 7.527999999999702e-06, 4.720000000013602e-07, 9.709000000000106e-06, 4.720000000013602e-07, 9.388999999998537e-06, 4.720000000013602e-07, 8.555999999999842e-06, 4.7199999999789077e-07, 1.0625000000000218e-05, 4.720000000013602e-07, 7.527999999999702e-06, 4.720000000013602e-07, 7.4169999999991465e-06, 4.7199999999789077e-07, 7.652999999999827e-06, 4.720000000013602e-07, 7.832999999998758e-06, 4.720000000013602e-07, 8.569999999999411e-06, 4.860000000009301e-07, 1.0138999999999287e-05, 4.720000000013602e-07, 9.722000000000203e-06, 4.729999999973644e-07, 7.541000000003267e-06, 4.7199999999789077e-07, 9.722999999999676e-06, 4.720000000013602e-07, 7.903000000000077e-06, 4.7199999999789077e-07, 7.444000000002282e-06, 4.860000000009301e-07, 7.402999999999577e-06, 4.859999999974607e-07, 9.999999999999593e-06, 4.860000000009301e-07, 9.597999999999551e-06, 4.720000000013602e-07, 1.0638999999999788e-05, 4.720000000013602e-07, 9.902999999998607e-06, 4.860000000009301e-07], 'diff': [0, 4.7199999999789077e-07, 1.0444000000001813e-05, 4.860000000009301e-07, 8.667000000000397e-06, 4.859999999974607e-07, 1.0652999999999357e-05, 4.720000000013602e-07, 7.652999999999827e-06, 4.720000000013602e-07, 1.0513999999999663e-05, 4.860000000009301e-07, 1.0527999999999232e-05, 4.7199999999789077e-07, 7.722000000001672e-06, 4.7300000000083386e-07, 8.971999999999453e-06, 4.7199999999789077e-07, 7.625000000000687e-06, 4.720000000013602e-07, 1.0527999999999232e-05, 4.860000000009301e-07, 7.4169999999991465e-06, 4.720000000013602e-07, 8.555999999999842e-06, 4.7199999999789077e-07, 8.347000000002297e-06, 4.7199999999789077e-07, 9.514000000002132e-06, 4.7199999999789077e-07, 8.028000000000202e-06, 4.720000000013602e-07, 8.361999999997871e-06, 4.720000000013602e-07, 9.999999999999593e-06, 4.720000000013602e-07, 9.930999999997747e-06, 4.720000000013602e-07, 1.0625000000000218e-05, 4.720000000013602e-07, 1.0582999999998038e-05, 4.860000000009301e-07, 1.0541999999998802e-05, 4.860000000009301e-07, 9.499999999999093e-06, 4.860000000009301e-07, 1.0348000000000301e-05, 4.7199999999789077e-07, 1.0305000000002118e-05, 4.7300000000083386e-07, 9.722000000000203e-06, 4.7199999999789077e-07, 9.181000000000467e-06, 4.720000000013602e-07, 8.652999999997357e-06, 4.720000000013602e-07, 9.694000000001063e-06, 4.859999999974607e-07, 7.527999999999702e-06, 4.720000000013602e-07, 9.709000000000106e-06, 4.720000000013602e-07, 9.388999999998537e-06, 4.720000000013602e-07, 8.555999999999842e-06, 4.7199999999789077e-07, 1.0625000000000218e-05, 4.720000000013602e-07, 7.527999999999702e-06, 4.720000000013602e-07, 7.4169999999991465e-06, 4.7199999999789077e-07, 7.652999999999827e-06, 4.720000000013602e-07, 7.832999999998758e-06, 4.720000000013602e-07, 8.569999999999411e-06, 4.860000000009301e-07, 1.0138999999999287e-05, 4.720000000013602e-07, 9.722000000000203e-06, 4.729999999973644e-07, 7.541000000003267e-06, 4.7199999999789077e-07, 9.722999999999676e-06, 4.720000000013602e-07, 7.903000000000077e-06, 4.7199999999789077e-07, 7.444000000002282e-06, 4.860000000009301e-07, 7.402999999999577e-06, 4.859999999974607e-07, 9.999999999999593e-06, 4.860000000009301e-07, 9.597999999999551e-06, 4.720000000013602e-07, 1.0638999999999788e-05, 4.720000000013602e-07, 9.902999999998607e-06, 4.860000000009301e-07]}</msg>
<status status="PASS" starttime="20201030 18:29:49.275" endtime="20201030 18:29:49.279"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.271" endtime="20201030 18:29:49.280"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:49.284" level="INFO">${RESULT} = [{'diff': 4.7199999999789077e-07}, {'diff': 4.860000000009301e-07}, {'diff': 4.859999999974607e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.860000000009301e-07}, ...</msg>
<status status="PASS" starttime="20201030 18:29:49.281" endtime="20201030 18:29:49.284"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:29:49.289" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999999789077e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7...</msg>
<status status="PASS" starttime="20201030 18:29:49.285" endtime="20201030 18:29:49.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:49.294" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:29:49.293" endtime="20201030 18:29:49.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:49.296" level="INFO">VALUE: [4.7199999999789077e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07]</msg>
<status status="PASS" starttime="20201030 18:29:49.295" endtime="20201030 18:29:49.297"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.290" endtime="20201030 18:29:49.297"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:49.301" endtime="20201030 18:29:49.320"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.299" endtime="20201030 18:29:49.321"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.298" endtime="20201030 18:29:49.321"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.901" endtime="20201030 18:29:49.322"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.900" endtime="20201030 18:29:49.322"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:49.330" endtime="20201030 18:29:49.343"></status>
</kw>
<msg timestamp="20201030 18:29:49.344" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:49.328" endtime="20201030 18:29:49.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:49.346" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:49.345" endtime="20201030 18:29:49.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:49.347" endtime="20201030 18:29:49.349"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.326" endtime="20201030 18:29:49.350"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.324" endtime="20201030 18:29:49.350"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:49.357" endtime="20201030 18:29:49.642"></status>
</kw>
<msg timestamp="20201030 18:29:49.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018978222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018978694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:49.355" endtime="20201030 18:29:49.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:49.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018978222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018978694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:49.646" endtime="20201030 18:29:49.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:49.655" endtime="20201030 18:29:49.657"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.352" endtime="20201030 18:29:49.657"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.351" endtime="20201030 18:29:49.658"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:29:49.683" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:29:49.659" endtime="20201030 18:29:49.683"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:49.684" endtime="20201030 18:29:49.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:49.689" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:29:49.688" endtime="20201030 18:29:49.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:49.693" level="INFO">VALUE: {'sourcetime': [0.018978222, 0.018978694, 0.018986931, 0.018987417, 0.018997347, 0.018997819, 0.019006472, 0.019006958, 0.019017583, 0.019018069, 0.019027167, 0.019027639, 0.019037736, 0.019038208, 0.019048653, 0.019049125, 0.019057875, 0.019058361, 0.019065986, 0.019066458, 0.019075014, 0.0190755, 0.019085611, 0.019086083, 0.019095389, 0.019095861, 0.019105236, 0.019105708, 0.019115931, 0.019116417, 0.019125389, 0.019125861, 0.019134431, 0.019134903, 0.019142417, 0.019142889, 0.019152903, 0.019153375, 0.019163917, 0.019164389, 0.019173931, 0.019174403, 0.019184903, 0.019185375, 0.019192806, 0.019193292, 0.019201556, 0.019202028, 0.019209556, 0.019210042, 0.019220028, 0.0192205, 0.019228403, 0.019228875, 0.019237792, 0.019238264, 0.019247125, 0.019247597, 0.019255333, 0.019255806, 0.019265917, 0.019266389, 0.019274319, 0.019274792, 0.019285347, 0.019285819, 0.019294167, 0.019294639, 0.019302569, 0.019303042, 0.019310972, 0.019311458, 0.019320944, 0.019321417, 0.01932925, 0.019329722, 0.019337764, 0.019338236, 0.01934825, 0.019348722, 0.019357903, 0.019358389, 0.019366014, 0.019366486, 0.019376917, 0.019377389, 0.019386986, 0.019387458, 0.019397153, 0.019397639, 0.019408111, 0.019408583, 0.019418458, 0.019418931, 0.019428111, 0.019428583, 0.019438514, 0.019438986, 0.019448208, 0.019448681], 'eventsource_diff': [0, 4.720000000013602e-07, 8.236999999997746e-06, 4.860000000009301e-07, 9.930000000001743e-06, 4.7199999999789077e-07, 8.653000000000827e-06, 4.860000000009301e-07, 1.0625000000000218e-05, 4.859999999974607e-07, 9.09800000000252e-06, 4.7199999999789077e-07, 1.0097000000000578e-05, 4.720000000013602e-07, 1.0444999999997817e-05, 4.720000000013602e-07, 8.749999999998342e-06, 4.860000000009301e-07, 7.625000000000687e-06, 4.720000000013602e-07, 8.555999999999842e-06, 4.859999999974607e-07, 1.0111000000000148e-05, 4.720000000013602e-07, 9.306000000000592e-06, 4.7199999999789077e-07, 9.375000000002437e-06, 4.7199999999789077e-07, 1.0223000000000176e-05, 4.860000000009301e-07, 8.971999999999453e-06, 4.720000000013602e-07, 8.569999999999411e-06, 4.720000000013602e-07, 7.513999999996662e-06, 4.720000000013602e-07, 1.0013999999999162e-05, 4.720000000013602e-07, 1.0541999999998802e-05, 4.720000000013602e-07, 9.542000000001272e-06, 4.7199999999789077e-07, 1.0500000000000093e-05, 4.720000000013602e-07, 7.430999999998716e-06, 4.860000000009301e-07, 8.264000000000882e-06, 4.7199999999789077e-07, 7.527999999999702e-06, 4.860000000009301e-07, 9.986000000000023e-06, 4.720000000013602e-07, 7.903000000000077e-06, 4.7199999999789077e-07, 8.917000000000647e-06, 4.720000000013602e-07, 8.860999999998898e-06, 4.720000000013602e-07, 7.735999999997772e-06, 4.7300000000083386e-07, 1.0111000000000148e-05, 4.7199999999789077e-07, 7.930000000003212e-06, 4.729999999973644e-07, 1.0555000000002368e-05, 4.7199999999789077e-07, 8.34800000000177e-06, 4.7199999999789077e-07, 7.929999999999743e-06, 4.7300000000083386e-07, 7.929999999999743e-06, 4.860000000009301e-07, 9.485999999999523e-06, 4.7300000000083386e-07, 7.832999999998758e-06, 4.720000000013602e-07, 8.041999999999772e-06, 4.720000000013602e-07, 1.0013999999999162e-05, 4.7199999999789077e-07, 9.181000000000467e-06, 4.860000000009301e-07, 7.625000000000687e-06, 4.7199999999789077e-07, 1.0431000000001717e-05, 4.7199999999789077e-07, 9.597000000000078e-06, 4.720000000013602e-07, 9.695000000000537e-06, 4.860000000009301e-07, 1.0471999999997483e-05, 4.720000000013602e-07, 9.874999999999468e-06, 4.7300000000083386e-07, 9.180000000000993e-06, 4.7199999999789077e-07, 9.931000000001217e-06, 4.7199999999789077e-07, 9.222000000003172e-06, 4.729999999973644e-07], 'diff': [0, 4.720000000013602e-07, 8.236999999997746e-06, 4.860000000009301e-07, 9.930000000001743e-06, 4.7199999999789077e-07, 8.653000000000827e-06, 4.860000000009301e-07, 1.0625000000000218e-05, 4.859999999974607e-07, 9.09800000000252e-06, 4.7199999999789077e-07, 1.0097000000000578e-05, 4.720000000013602e-07, 1.0444999999997817e-05, 4.720000000013602e-07, 8.749999999998342e-06, 4.860000000009301e-07, 7.625000000000687e-06, 4.720000000013602e-07, 8.555999999999842e-06, 4.859999999974607e-07, 1.0111000000000148e-05, 4.720000000013602e-07, 9.306000000000592e-06, 4.7199999999789077e-07, 9.375000000002437e-06, 4.7199999999789077e-07, 1.0223000000000176e-05, 4.860000000009301e-07, 8.971999999999453e-06, 4.720000000013602e-07, 8.569999999999411e-06, 4.720000000013602e-07, 7.513999999996662e-06, 4.720000000013602e-07, 1.0013999999999162e-05, 4.720000000013602e-07, 1.0541999999998802e-05, 4.720000000013602e-07, 9.542000000001272e-06, 4.7199999999789077e-07, 1.0500000000000093e-05, 4.720000000013602e-07, 7.430999999998716e-06, 4.860000000009301e-07, 8.264000000000882e-06, 4.7199999999789077e-07, 7.527999999999702e-06, 4.860000000009301e-07, 9.986000000000023e-06, 4.720000000013602e-07, 7.903000000000077e-06, 4.7199999999789077e-07, 8.917000000000647e-06, 4.720000000013602e-07, 8.860999999998898e-06, 4.720000000013602e-07, 7.735999999997772e-06, 4.7300000000083386e-07, 1.0111000000000148e-05, 4.7199999999789077e-07, 7.930000000003212e-06, 4.729999999973644e-07, 1.0555000000002368e-05, 4.7199999999789077e-07, 8.34800000000177e-06, 4.7199999999789077e-07, 7.929999999999743e-06, 4.7300000000083386e-07, 7.929999999999743e-06, 4.860000000009301e-07, 9.485999999999523e-06, 4.7300000000083386e-07, 7.832999999998758e-06, 4.720000000013602e-07, 8.041999999999772e-06, 4.720000000013602e-07, 1.0013999999999162e-05, 4.7199999999789077e-07, 9.181000000000467e-06, 4.860000000009301e-07, 7.625000000000687e-06, 4.7199999999789077e-07, 1.0431000000001717e-05, 4.7199999999789077e-07, 9.597000000000078e-06, 4.720000000013602e-07, 9.695000000000537e-06, 4.860000000009301e-07, 1.0471999999997483e-05, 4.720000000013602e-07, 9.874999999999468e-06, 4.7300000000083386e-07, 9.180000000000993e-06, 4.7199999999789077e-07, 9.931000000001217e-06, 4.7199999999789077e-07, 9.222000000003172e-06, 4.729999999973644e-07]}</msg>
<status status="PASS" starttime="20201030 18:29:49.690" endtime="20201030 18:29:49.694"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.686" endtime="20201030 18:29:49.695"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:49.699" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.860000000009301e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.860000000009301e-07}, {'diff': 4.859999999974607e-07}, {'diff': 4.7199999999789077e-07},...</msg>
<status status="PASS" starttime="20201030 18:29:49.696" endtime="20201030 18:29:49.699"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:29:49.703" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.86...</msg>
<status status="PASS" starttime="20201030 18:29:49.700" endtime="20201030 18:29:49.704"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:49.708" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:29:49.707" endtime="20201030 18:29:49.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:49.711" level="INFO">VALUE: [4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.729999999973644e-07]</msg>
<status status="PASS" starttime="20201030 18:29:49.710" endtime="20201030 18:29:49.712"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.704" endtime="20201030 18:29:49.712"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:49.716" endtime="20201030 18:29:49.735"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.714" endtime="20201030 18:29:49.736"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.713" endtime="20201030 18:29:49.736"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.323" endtime="20201030 18:29:49.737"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.322" endtime="20201030 18:29:49.737"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.153" endtime="20201030 18:29:49.737"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:49.741" endtime="20201030 18:29:49.761"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.739" endtime="20201030 18:29:49.762"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.738" endtime="20201030 18:29:49.762"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:29:41.076" endtime="20201030 18:29:49.762" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:49.770" endtime="20201030 18:29:49.790"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.768" endtime="20201030 18:29:49.791"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:49.808" endtime="20201030 18:29:49.828"></status>
</kw>
<msg timestamp="20201030 18:29:49.828" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:49.807" endtime="20201030 18:29:49.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:49.831" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:49.830" endtime="20201030 18:29:49.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:29:49.835" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:29:49.833" endtime="20201030 18:29:49.836"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:49.804" endtime="20201030 18:29:49.836"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:49.802" endtime="20201030 18:29:49.837"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.800" endtime="20201030 18:29:49.837"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:29:49.842" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:29:49.840" endtime="20201030 18:29:49.843"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.838" endtime="20201030 18:29:49.843"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.798" endtime="20201030 18:29:49.843"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.797" endtime="20201030 18:29:49.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:49.844" endtime="20201030 18:29:49.846"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.795" endtime="20201030 18:29:49.846"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.792" endtime="20201030 18:29:49.847"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.766" endtime="20201030 18:29:49.847"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:49.856" endtime="20201030 18:29:49.872"></status>
</kw>
<msg timestamp="20201030 18:29:49.872" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:49.854" endtime="20201030 18:29:49.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:49.875" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:49.874" endtime="20201030 18:29:49.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:49.876" endtime="20201030 18:29:49.878"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.851" endtime="20201030 18:29:49.878"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.850" endtime="20201030 18:29:49.879"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:49.886" endtime="20201030 18:29:50.174"></status>
</kw>
<msg timestamp="20201030 18:29:50.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.077840278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.077845625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:49.884" endtime="20201030 18:29:50.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:50.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.077840278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.077845625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:50.178" endtime="20201030 18:29:50.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:50.187" endtime="20201030 18:29:50.188"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.881" endtime="20201030 18:29:50.189"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.879" endtime="20201030 18:29:50.189"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:50.194" level="INFO">${RESULT} = [{'diff': 5.347000000002766e-06}, {'diff': 5.333000000010135e-06}, {'diff': 5.305999999996591e-06}, {'diff': 5.332999999996257e-06}, {'diff': 5.319000000003626e-06}, {'diff': 5.319999999989222e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:29:50.190" endtime="20201030 18:29:50.194"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:29:50.199" level="INFO">${OVERHEAD} = {'diff': [5.347000000002766e-06, 5.333000000010135e-06, 5.305999999996591e-06, 5.332999999996257e-06, 5.319000000003626e-06, 5.319999999989222e-06, 5.318999999989749e-06, 5.334000000009609e-06, 5.3470...</msg>
<status status="PASS" starttime="20201030 18:29:50.195" endtime="20201030 18:29:50.200"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:50.204" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:29:50.203" endtime="20201030 18:29:50.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:50.207" level="INFO">VALUE: [5.347000000002766e-06, 5.333000000010135e-06, 5.305999999996591e-06, 5.332999999996257e-06, 5.319000000003626e-06, 5.319999999989222e-06, 5.318999999989749e-06, 5.334000000009609e-06, 5.347000000002766e-06, 5.332999999996257e-06, 5.333999999995731e-06, 5.291999999990082e-06, 5.333999999995731e-06, 5.3200000000031e-06, 5.318999999989749e-06, 5.304999999997118e-06, 5.346999999988888e-06, 5.333999999995731e-06, 5.332999999996257e-06, 5.346999999988888e-06, 5.360999999995397e-06, 5.347000000002766e-06, 5.332999999996257e-06, 5.347000000002766e-06, 5.375000000001906e-06, 5.360999999995397e-06, 5.388999999994537e-06, 5.306000000010469e-06, 5.334000000009609e-06, 5.332999999996257e-06, 5.332999999996257e-06, 5.388999999994537e-06, 5.347000000002766e-06, 5.34800000000224e-06, 5.277999999997451e-06, 5.403000000001046e-06, 5.375000000001906e-06, 5.333999999995731e-06, 5.361000000009275e-06, 5.304999999997118e-06, 5.3200000000031e-06, 5.347000000002766e-06, 5.332999999996257e-06, 5.333000000010135e-06, 5.318999999989749e-06, 5.29200000000396e-06, 5.2910000000044866e-06, 5.319000000003626e-06, 5.360999999995397e-06, 5.346999999988888e-06]</msg>
<status status="PASS" starttime="20201030 18:29:50.205" endtime="20201030 18:29:50.207"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:50.200" endtime="20201030 18:29:50.208"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:50.212" endtime="20201030 18:29:50.231"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:50.210" endtime="20201030 18:29:50.232"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:50.209" endtime="20201030 18:29:50.232"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.848" endtime="20201030 18:29:50.232"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.848" endtime="20201030 18:29:50.233"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:50.241" endtime="20201030 18:29:50.258"></status>
</kw>
<msg timestamp="20201030 18:29:50.259" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:50.239" endtime="20201030 18:29:50.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:50.261" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:50.260" endtime="20201030 18:29:50.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:50.263" endtime="20201030 18:29:50.264"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:50.236" endtime="20201030 18:29:50.265"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:50.235" endtime="20201030 18:29:50.265"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:50.272" endtime="20201030 18:29:50.560"></status>
</kw>
<msg timestamp="20201030 18:29:50.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022937458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022942792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:50.271" endtime="20201030 18:29:50.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:50.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022937458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022942792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:50.564" endtime="20201030 18:29:50.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:50.573" endtime="20201030 18:29:50.575"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:50.268" endtime="20201030 18:29:50.575"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:50.266" endtime="20201030 18:29:50.576"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:50.581" level="INFO">${RESULT} = [{'diff': 5.3339999999992005e-06}, {'diff': 5.290999999997548e-06}, {'diff': 5.306000000000061e-06}, {'diff': 5.374999999998437e-06}, {'diff': 5.319000000000157e-06}, {'diff': 5.332999999999727e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:29:50.576" endtime="20201030 18:29:50.581"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:29:50.586" level="INFO">${OVERHEAD} = {'diff': [5.3339999999992005e-06, 5.290999999997548e-06, 5.306000000000061e-06, 5.374999999998437e-06, 5.319000000000157e-06, 5.332999999999727e-06, 5.332999999999727e-06, 5.306000000000061e-06, 5.332...</msg>
<status status="PASS" starttime="20201030 18:29:50.582" endtime="20201030 18:29:50.586"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:50.590" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:29:50.589" endtime="20201030 18:29:50.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:50.592" level="INFO">VALUE: [5.3339999999992005e-06, 5.290999999997548e-06, 5.306000000000061e-06, 5.374999999998437e-06, 5.319000000000157e-06, 5.332999999999727e-06, 5.332999999999727e-06, 5.306000000000061e-06, 5.332999999999727e-06, 5.306000000000061e-06, 5.319999999999631e-06, 5.319999999999631e-06, 5.305000000000587e-06, 5.33400000000267e-06, 5.346999999999297e-06, 5.319000000000157e-06, 5.319000000000157e-06, 5.347000000002766e-06, 5.277000000001447e-06, 5.319000000000157e-06, 5.319000000000157e-06, 5.305000000000587e-06, 5.374999999998437e-06, 5.374999999998437e-06, 5.417000000000616e-06, 5.389000000001476e-06, 5.306000000000061e-06, 5.291999999997021e-06, 5.319999999999631e-06, 5.319999999999631e-06, 5.319000000000157e-06, 5.388000000002002e-06, 5.319000000000157e-06, 5.319999999999631e-06, 5.361000000002336e-06, 5.360999999998867e-06, 5.3189999999966875e-06, 5.291999999997021e-06, 5.389000000001476e-06, 5.402000000001572e-06, 5.319999999999631e-06, 5.346999999999297e-06, 5.3889999999980065e-06, 5.278000000000921e-06, 5.332999999999727e-06, 5.3200000000031e-06, 5.33400000000267e-06, 5.319999999999631e-06, 5.319000000000157e-06, 5.332999999999727e-06]</msg>
<status status="PASS" starttime="20201030 18:29:50.591" endtime="20201030 18:29:50.593"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:50.586" endtime="20201030 18:29:50.593"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:50.597" endtime="20201030 18:29:50.617"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:50.596" endtime="20201030 18:29:50.617"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:50.594" endtime="20201030 18:29:50.617"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:50.233" endtime="20201030 18:29:50.618"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:50.233" endtime="20201030 18:29:50.618"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:50.626" endtime="20201030 18:29:50.644"></status>
</kw>
<msg timestamp="20201030 18:29:50.645" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:50.625" endtime="20201030 18:29:50.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:50.647" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:50.646" endtime="20201030 18:29:50.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:50.648" endtime="20201030 18:29:50.650"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:50.622" endtime="20201030 18:29:50.650"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:50.620" endtime="20201030 18:29:50.651"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:50.659" endtime="20201030 18:29:50.947"></status>
</kw>
<msg timestamp="20201030 18:29:50.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019420806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019426139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:50.657" endtime="20201030 18:29:50.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:50.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019420806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019426139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:50.951" endtime="20201030 18:29:50.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:50.960" endtime="20201030 18:29:50.961"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:50.653" endtime="20201030 18:29:50.962"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:50.652" endtime="20201030 18:29:50.962"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:50.967" level="INFO">${RESULT} = [{'diff': 5.332999999999727e-06}, {'diff': 5.332999999999727e-06}, {'diff': 5.319000000000157e-06}, {'diff': 5.278000000000921e-06}, {'diff': 5.332999999999727e-06}, {'diff': 5.346999999999297e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:29:50.963" endtime="20201030 18:29:50.967"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:29:50.971" level="INFO">${OVERHEAD} = {'diff': [5.332999999999727e-06, 5.332999999999727e-06, 5.319000000000157e-06, 5.278000000000921e-06, 5.332999999999727e-06, 5.346999999999297e-06, 5.319999999999631e-06, 5.319999999999631e-06, 5.3469...</msg>
<status status="PASS" starttime="20201030 18:29:50.968" endtime="20201030 18:29:50.972"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:50.976" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:29:50.975" endtime="20201030 18:29:50.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:50.978" level="INFO">VALUE: [5.332999999999727e-06, 5.332999999999727e-06, 5.319000000000157e-06, 5.278000000000921e-06, 5.332999999999727e-06, 5.346999999999297e-06, 5.319999999999631e-06, 5.319999999999631e-06, 5.346999999999297e-06, 5.292000000000491e-06, 5.361000000002336e-06, 5.332999999999727e-06, 5.346999999999297e-06, 5.332999999999727e-06, 5.332999999999727e-06, 5.319000000000157e-06, 5.403000000001046e-06, 5.319000000000157e-06, 5.306000000000061e-06, 5.319999999999631e-06, 5.319000000000157e-06, 5.319000000000157e-06, 5.3189999999966875e-06, 5.319000000000157e-06, 5.3339999999992005e-06, 5.333000000003196e-06, 5.332999999999727e-06, 5.361000000002336e-06, 5.332999999999727e-06, 5.319000000000157e-06, 5.375000000001906e-06, 5.332999999999727e-06, 5.346999999999297e-06, 5.346999999999297e-06, 5.319999999999631e-06, 5.346999999999297e-06, 5.332999999999727e-06, 5.277000000001447e-06, 5.332999999999727e-06, 5.319999999999631e-06, 5.332999999999727e-06, 5.304999999997118e-06, 5.346999999999297e-06, 5.290999999997548e-06, 5.332999999999727e-06, 5.319000000000157e-06, 5.346999999999297e-06, 5.346999999999297e-06, 5.332999999999727e-06, 5.3339999999992005e-06]</msg>
<status status="PASS" starttime="20201030 18:29:50.977" endtime="20201030 18:29:50.979"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:50.972" endtime="20201030 18:29:50.979"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:50.983" endtime="20201030 18:29:51.003"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:50.982" endtime="20201030 18:29:51.003"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:50.980" endtime="20201030 18:29:51.004"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:50.619" endtime="20201030 18:29:51.004"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:50.618" endtime="20201030 18:29:51.004"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:51.013" endtime="20201030 18:29:51.028"></status>
</kw>
<msg timestamp="20201030 18:29:51.028" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:51.012" endtime="20201030 18:29:51.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:51.031" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:51.029" endtime="20201030 18:29:51.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:51.032" endtime="20201030 18:29:51.034"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.009" endtime="20201030 18:29:51.034"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.006" endtime="20201030 18:29:51.035"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:51.041" endtime="20201030 18:29:51.331"></status>
</kw>
<msg timestamp="20201030 18:29:51.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020205972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020211306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:51.040" endtime="20201030 18:29:51.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:51.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020205972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020211306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:51.335" endtime="20201030 18:29:51.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:51.344" endtime="20201030 18:29:51.346"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.037" endtime="20201030 18:29:51.347"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.035" endtime="20201030 18:29:51.347"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:51.351" level="INFO">${RESULT} = [{'diff': 5.3339999999992005e-06}, {'diff': 5.319999999999631e-06}, {'diff': 5.33400000000267e-06}, {'diff': 5.34799999999877e-06}, {'diff': 5.332999999999727e-06}, {'diff': 5.3200000000031e-06}, {'di...</msg>
<status status="PASS" starttime="20201030 18:29:51.348" endtime="20201030 18:29:51.351"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:29:51.356" level="INFO">${OVERHEAD} = {'diff': [5.3339999999992005e-06, 5.319999999999631e-06, 5.33400000000267e-06, 5.34799999999877e-06, 5.332999999999727e-06, 5.3200000000031e-06, 5.332999999999727e-06, 5.306000000000061e-06, 5.3329999...</msg>
<status status="PASS" starttime="20201030 18:29:51.352" endtime="20201030 18:29:51.356"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:51.360" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:29:51.359" endtime="20201030 18:29:51.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:51.363" level="INFO">VALUE: [5.3339999999992005e-06, 5.319999999999631e-06, 5.33400000000267e-06, 5.34799999999877e-06, 5.332999999999727e-06, 5.3200000000031e-06, 5.332999999999727e-06, 5.306000000000061e-06, 5.332999999999727e-06, 5.333000000003196e-06, 5.292000000000491e-06, 5.319000000000157e-06, 5.332999999999727e-06, 5.347000000002766e-06, 5.319000000000157e-06, 5.291000000001017e-06, 5.305000000000587e-06, 5.292000000000491e-06, 5.304999999997118e-06, 5.319999999999631e-06, 5.292000000000491e-06, 5.3339999999992005e-06, 5.34799999999877e-06, 5.332999999999727e-06, 5.375000000001906e-06, 5.304999999997118e-06, 5.277999999997451e-06, 5.3339999999992005e-06, 5.332999999999727e-06, 5.319999999999631e-06, 5.332999999999727e-06, 5.319000000000157e-06, 5.332999999999727e-06, 5.319999999999631e-06, 5.347000000002766e-06, 5.3339999999992005e-06, 5.3339999999992005e-06, 5.306000000000061e-06, 5.305000000000587e-06, 5.332999999999727e-06, 5.2639999999978815e-06, 5.319000000000157e-06, 5.347000000002766e-06, 5.347000000002766e-06, 5.360999999998867e-06, 5.361000000002336e-06, 5.292000000000491e-06, 5.306000000000061e-06, 5.3339999999992005e-06, 5.33400000000267e-06]</msg>
<status status="PASS" starttime="20201030 18:29:51.362" endtime="20201030 18:29:51.363"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.357" endtime="20201030 18:29:51.364"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:51.368" endtime="20201030 18:29:51.387"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.366" endtime="20201030 18:29:51.388"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.365" endtime="20201030 18:29:51.388"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.005" endtime="20201030 18:29:51.389"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.004" endtime="20201030 18:29:51.389"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:51.397" endtime="20201030 18:29:51.414"></status>
</kw>
<msg timestamp="20201030 18:29:51.415" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:51.396" endtime="20201030 18:29:51.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:51.417" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:51.416" endtime="20201030 18:29:51.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:51.418" endtime="20201030 18:29:51.420"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.393" endtime="20201030 18:29:51.421"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.391" endtime="20201030 18:29:51.421"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:51.428" endtime="20201030 18:29:51.715"></status>
</kw>
<msg timestamp="20201030 18:29:51.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022197986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022203319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:51.426" endtime="20201030 18:29:51.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:51.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022197986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022203319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:51.719" endtime="20201030 18:29:51.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:51.728" endtime="20201030 18:29:51.730"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.424" endtime="20201030 18:29:51.731"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.422" endtime="20201030 18:29:51.731"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:51.735" level="INFO">${RESULT} = [{'diff': 5.332999999999727e-06}, {'diff': 5.333000000003196e-06}, {'diff': 5.306000000000061e-06}, {'diff': 5.319999999999631e-06}, {'diff': 5.319000000000157e-06}, {'diff': 5.305000000000587e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:29:51.732" endtime="20201030 18:29:51.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:29:51.741" level="INFO">${OVERHEAD} = {'diff': [5.332999999999727e-06, 5.333000000003196e-06, 5.306000000000061e-06, 5.319999999999631e-06, 5.319000000000157e-06, 5.305000000000587e-06, 5.34799999999877e-06, 5.401999999998103e-06, 5.34699...</msg>
<status status="PASS" starttime="20201030 18:29:51.736" endtime="20201030 18:29:51.741"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:51.745" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:29:51.744" endtime="20201030 18:29:51.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:51.747" level="INFO">VALUE: [5.332999999999727e-06, 5.333000000003196e-06, 5.306000000000061e-06, 5.319999999999631e-06, 5.319000000000157e-06, 5.305000000000587e-06, 5.34799999999877e-06, 5.401999999998103e-06, 5.346999999999297e-06, 5.346999999999297e-06, 5.332999999999727e-06, 5.332999999999727e-06, 5.306000000000061e-06, 5.360999999998867e-06, 5.305000000000587e-06, 5.346999999999297e-06, 5.319000000000157e-06, 5.346999999999297e-06, 5.319000000000157e-06, 5.319999999999631e-06, 5.319000000000157e-06, 5.319000000000157e-06, 5.3339999999992005e-06, 5.332999999999727e-06, 5.306000000000061e-06, 5.3200000000031e-06, 5.3889999999980065e-06, 5.332999999999727e-06, 5.319000000000157e-06, 5.3189999999966875e-06, 5.361000000002336e-06, 5.291000000001017e-06, 5.319000000000157e-06, 5.389000000001476e-06, 5.319999999999631e-06, 5.3189999999966875e-06, 5.319999999999631e-06, 5.387999999998533e-06, 5.389000000001476e-06, 5.389000000001476e-06, 5.3339999999992005e-06, 5.360999999998867e-06, 5.389000000001476e-06, 5.36200000000181e-06, 5.332999999999727e-06, 5.36199999999834e-06, 5.346999999999297e-06, 5.374999999998437e-06, 5.346999999999297e-06, 5.264000000001351e-06]</msg>
<status status="PASS" starttime="20201030 18:29:51.746" endtime="20201030 18:29:51.748"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.742" endtime="20201030 18:29:51.748"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:51.752" endtime="20201030 18:29:51.772"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.751" endtime="20201030 18:29:51.772"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.749" endtime="20201030 18:29:51.773"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.390" endtime="20201030 18:29:51.773"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.389" endtime="20201030 18:29:51.773"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:51.781" endtime="20201030 18:29:51.796"></status>
</kw>
<msg timestamp="20201030 18:29:51.796" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:51.780" endtime="20201030 18:29:51.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:51.799" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:51.797" endtime="20201030 18:29:51.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:51.800" endtime="20201030 18:29:51.802"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.777" endtime="20201030 18:29:51.802"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.775" endtime="20201030 18:29:51.803"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:51.809" endtime="20201030 18:29:52.096"></status>
</kw>
<msg timestamp="20201030 18:29:52.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019723458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019728806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:51.808" endtime="20201030 18:29:52.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:52.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019723458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019728806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:52.101" endtime="20201030 18:29:52.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:52.109" endtime="20201030 18:29:52.111"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.805" endtime="20201030 18:29:52.112"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.803" endtime="20201030 18:29:52.113"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:52.117" level="INFO">${RESULT} = [{'diff': 5.34800000000224e-06}, {'diff': 5.34800000000224e-06}, {'diff': 5.34799999999877e-06}, {'diff': 5.346999999999297e-06}, {'diff': 5.389000000001476e-06}, {'diff': 5.319000000000157e-06}, {'di...</msg>
<status status="PASS" starttime="20201030 18:29:52.113" endtime="20201030 18:29:52.117"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:29:52.122" level="INFO">${OVERHEAD} = {'diff': [5.34800000000224e-06, 5.34800000000224e-06, 5.34799999999877e-06, 5.346999999999297e-06, 5.389000000001476e-06, 5.319000000000157e-06, 5.374999999998437e-06, 5.346999999999297e-06, 5.2920000...</msg>
<status status="PASS" starttime="20201030 18:29:52.118" endtime="20201030 18:29:52.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:52.126" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:29:52.125" endtime="20201030 18:29:52.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:52.129" level="INFO">VALUE: [5.34800000000224e-06, 5.34800000000224e-06, 5.34799999999877e-06, 5.346999999999297e-06, 5.389000000001476e-06, 5.319000000000157e-06, 5.374999999998437e-06, 5.346999999999297e-06, 5.292000000000491e-06, 5.305000000000587e-06, 5.346999999999297e-06, 5.319000000000157e-06, 5.292000000000491e-06, 5.291000000001017e-06, 5.319999999999631e-06, 5.319999999999631e-06, 5.306000000000061e-06, 5.332999999999727e-06, 5.306000000000061e-06, 5.292000000000491e-06, 5.319999999999631e-06, 5.346999999999297e-06, 5.346999999999297e-06, 5.3200000000031e-06, 5.34799999999877e-06, 5.332999999999727e-06, 5.346999999999297e-06, 5.319999999999631e-06, 5.33400000000267e-06, 5.319000000000157e-06, 5.304999999997118e-06, 5.319999999999631e-06, 5.319000000000157e-06, 5.306000000000061e-06, 5.305000000000587e-06, 5.306000000000061e-06, 5.375000000001906e-06, 5.3339999999992005e-06, 5.3339999999992005e-06, 5.3339999999992005e-06, 5.332999999999727e-06, 5.332999999999727e-06, 5.346999999999297e-06, 5.332999999999727e-06, 5.319999999999631e-06, 5.306000000000061e-06, 5.346999999999297e-06, 5.332999999999727e-06, 5.347000000002766e-06, 5.305000000000587e-06]</msg>
<status status="PASS" starttime="20201030 18:29:52.127" endtime="20201030 18:29:52.129"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.123" endtime="20201030 18:29:52.130"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:52.134" endtime="20201030 18:29:52.153"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.132" endtime="20201030 18:29:52.154"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.131" endtime="20201030 18:29:52.154"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.774" endtime="20201030 18:29:52.154"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.774" endtime="20201030 18:29:52.154"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:52.163" endtime="20201030 18:29:52.179"></status>
</kw>
<msg timestamp="20201030 18:29:52.179" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:52.161" endtime="20201030 18:29:52.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:52.182" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:52.180" endtime="20201030 18:29:52.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:52.183" endtime="20201030 18:29:52.184"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.158" endtime="20201030 18:29:52.185"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.156" endtime="20201030 18:29:52.185"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:52.193" endtime="20201030 18:29:52.481"></status>
</kw>
<msg timestamp="20201030 18:29:52.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0203155, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020320819, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:29:52.191" endtime="20201030 18:29:52.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:52.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0203155, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020320819, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:29:52.487" endtime="20201030 18:29:52.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:52.497" endtime="20201030 18:29:52.499"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.188" endtime="20201030 18:29:52.500"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.186" endtime="20201030 18:29:52.500"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:52.506" level="INFO">${RESULT} = [{'diff': 5.319000000000157e-06}, {'diff': 5.346999999999297e-06}, {'diff': 5.319999999999631e-06}, {'diff': 5.306000000000061e-06}, {'diff': 5.332999999999727e-06}, {'diff': 5.235999999998742e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:29:52.502" endtime="20201030 18:29:52.506"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:29:52.511" level="INFO">${OVERHEAD} = {'diff': [5.319000000000157e-06, 5.346999999999297e-06, 5.319999999999631e-06, 5.306000000000061e-06, 5.332999999999727e-06, 5.235999999998742e-06, 5.332999999999727e-06, 5.319999999999631e-06, 5.4159...</msg>
<status status="PASS" starttime="20201030 18:29:52.507" endtime="20201030 18:29:52.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:52.517" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:29:52.515" endtime="20201030 18:29:52.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:52.520" level="INFO">VALUE: [5.319000000000157e-06, 5.346999999999297e-06, 5.319999999999631e-06, 5.306000000000061e-06, 5.332999999999727e-06, 5.235999999998742e-06, 5.332999999999727e-06, 5.319999999999631e-06, 5.415999999997673e-06, 5.332999999999727e-06, 5.319000000000157e-06, 5.332999999999727e-06, 5.3200000000031e-06, 5.319000000000157e-06, 5.305000000000587e-06, 5.319999999999631e-06, 5.306000000000061e-06, 5.292000000000491e-06, 5.290999999997548e-06, 5.305000000000587e-06, 5.332999999999727e-06, 5.304999999997118e-06, 5.306000000000061e-06, 5.346999999999297e-06, 5.3339999999992005e-06, 5.347000000002766e-06, 5.306000000000061e-06, 5.291000000001017e-06, 5.346999999999297e-06, 5.250000000001781e-06, 5.306000000000061e-06, 5.306000000000061e-06, 5.319999999999631e-06, 5.332999999999727e-06, 5.292000000000491e-06, 5.346999999999297e-06, 5.360999999998867e-06, 5.375000000001906e-06, 5.319999999999631e-06, 5.306000000000061e-06, 5.360999999998867e-06, 5.332999999999727e-06, 5.319000000000157e-06, 5.306000000000061e-06, 5.3200000000031e-06, 5.346999999999297e-06, 5.332999999999727e-06, 5.250000000001781e-06, 5.305000000000587e-06, 5.319999999999631e-06]</msg>
<status status="PASS" starttime="20201030 18:29:52.519" endtime="20201030 18:29:52.522"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.512" endtime="20201030 18:29:52.522"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:52.526" endtime="20201030 18:29:52.546"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.525" endtime="20201030 18:29:52.546"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.523" endtime="20201030 18:29:52.546"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.155" endtime="20201030 18:29:52.547"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.155" endtime="20201030 18:29:52.547"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:52.555" endtime="20201030 18:29:52.570"></status>
</kw>
<msg timestamp="20201030 18:29:52.570" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:52.554" endtime="20201030 18:29:52.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:52.573" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:52.572" endtime="20201030 18:29:52.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:52.574" endtime="20201030 18:29:52.576"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.551" endtime="20201030 18:29:52.576"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.549" endtime="20201030 18:29:52.577"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:52.584" endtime="20201030 18:29:52.869"></status>
</kw>
<msg timestamp="20201030 18:29:52.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019637542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019642875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:52.583" endtime="20201030 18:29:52.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:52.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019637542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019642875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:52.874" endtime="20201030 18:29:52.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:52.883" endtime="20201030 18:29:52.884"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.580" endtime="20201030 18:29:52.885"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.578" endtime="20201030 18:29:52.885"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:52.889" level="INFO">${RESULT} = [{'diff': 5.332999999999727e-06}, {'diff': 5.306000000000061e-06}, {'diff': 5.347000000002766e-06}, {'diff': 5.374999999998437e-06}, {'diff': 5.319000000000157e-06}, {'diff': 5.389000000001476e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:29:52.886" endtime="20201030 18:29:52.890"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:29:52.895" level="INFO">${OVERHEAD} = {'diff': [5.332999999999727e-06, 5.306000000000061e-06, 5.347000000002766e-06, 5.374999999998437e-06, 5.319000000000157e-06, 5.389000000001476e-06, 5.374999999998437e-06, 5.306000000000061e-06, 5.3339...</msg>
<status status="PASS" starttime="20201030 18:29:52.890" endtime="20201030 18:29:52.895"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:52.899" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:29:52.898" endtime="20201030 18:29:52.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:52.902" level="INFO">VALUE: [5.332999999999727e-06, 5.306000000000061e-06, 5.347000000002766e-06, 5.374999999998437e-06, 5.319000000000157e-06, 5.389000000001476e-06, 5.374999999998437e-06, 5.306000000000061e-06, 5.3339999999992005e-06, 5.332999999999727e-06, 5.319000000000157e-06, 5.346999999999297e-06, 5.306000000000061e-06, 5.319999999999631e-06, 5.319999999999631e-06, 5.250000000001781e-06, 5.306000000000061e-06, 5.306000000000061e-06, 5.347000000002766e-06, 5.306000000000061e-06, 5.235999999998742e-06, 5.332999999999727e-06, 5.264000000001351e-06, 5.305000000000587e-06, 5.276999999997978e-06, 5.360999999998867e-06, 5.361000000002336e-06, 5.332999999999727e-06, 5.3339999999992005e-06, 5.2499999999983116e-06, 5.332999999999727e-06, 5.333000000003196e-06, 5.346999999999297e-06, 5.306000000000061e-06, 5.319000000000157e-06, 5.374999999998437e-06, 5.389000000001476e-06, 5.332999999999727e-06, 5.319999999999631e-06, 5.33400000000267e-06, 5.291000000001017e-06, 5.346999999999297e-06, 5.319000000000157e-06, 5.319999999999631e-06, 5.332999999999727e-06, 5.347000000002766e-06, 5.305000000000587e-06, 5.332999999999727e-06, 5.291000000001017e-06, 5.360999999998867e-06]</msg>
<status status="PASS" starttime="20201030 18:29:52.900" endtime="20201030 18:29:52.902"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.895" endtime="20201030 18:29:52.903"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:52.906" endtime="20201030 18:29:52.926"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.905" endtime="20201030 18:29:52.927"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.904" endtime="20201030 18:29:52.927"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.548" endtime="20201030 18:29:52.927"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.547" endtime="20201030 18:29:52.927"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:52.936" endtime="20201030 18:29:52.952"></status>
</kw>
<msg timestamp="20201030 18:29:52.952" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:52.934" endtime="20201030 18:29:52.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:52.954" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:52.953" endtime="20201030 18:29:52.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:52.960" endtime="20201030 18:29:52.961"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.931" endtime="20201030 18:29:52.962"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.929" endtime="20201030 18:29:52.963"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:52.970" endtime="20201030 18:29:53.259"></status>
</kw>
<msg timestamp="20201030 18:29:53.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021124222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021129583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:52.968" endtime="20201030 18:29:53.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:53.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021124222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021129583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:53.264" endtime="20201030 18:29:53.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:53.274" endtime="20201030 18:29:53.276"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.965" endtime="20201030 18:29:53.276"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.963" endtime="20201030 18:29:53.277"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:53.282" level="INFO">${RESULT} = [{'diff': 5.360999999998867e-06}, {'diff': 5.319999999999631e-06}, {'diff': 5.319999999999631e-06}, {'diff': 5.292000000000491e-06}, {'diff': 5.319000000000157e-06}, {'diff': 5.319999999999631e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:29:53.277" endtime="20201030 18:29:53.282"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:29:53.287" level="INFO">${OVERHEAD} = {'diff': [5.360999999998867e-06, 5.319999999999631e-06, 5.319999999999631e-06, 5.292000000000491e-06, 5.319000000000157e-06, 5.319999999999631e-06, 5.332999999999727e-06, 5.346999999999297e-06, 5.3190...</msg>
<status status="PASS" starttime="20201030 18:29:53.283" endtime="20201030 18:29:53.287"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:53.291" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:29:53.290" endtime="20201030 18:29:53.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:53.294" level="INFO">VALUE: [5.360999999998867e-06, 5.319999999999631e-06, 5.319999999999631e-06, 5.292000000000491e-06, 5.319000000000157e-06, 5.319999999999631e-06, 5.332999999999727e-06, 5.346999999999297e-06, 5.319000000000157e-06, 5.290999999997548e-06, 5.319999999999631e-06, 5.332999999999727e-06, 5.305000000000587e-06, 5.3339999999992005e-06, 5.319000000000157e-06, 5.319000000000157e-06, 5.319000000000157e-06, 5.319000000000157e-06, 5.277999999997451e-06, 5.319000000000157e-06, 5.403000000001046e-06, 5.319000000000157e-06, 5.306000000000061e-06, 5.3339999999992005e-06, 5.306000000000061e-06, 5.319999999999631e-06, 5.319999999999631e-06, 5.361000000002336e-06, 5.305000000000587e-06, 5.319999999999631e-06, 5.3339999999992005e-06, 5.3339999999992005e-06, 5.346999999999297e-06, 5.319999999999631e-06, 5.346999999999297e-06, 5.33400000000267e-06, 5.33400000000267e-06, 5.306000000000061e-06, 5.33400000000267e-06, 5.3339999999992005e-06, 5.319000000000157e-06, 5.374999999998437e-06, 5.319000000000157e-06, 5.389000000001476e-06, 5.34799999999877e-06, 5.3339999999992005e-06, 5.3339999999992005e-06, 5.3200000000031e-06, 5.291000000001017e-06, 5.332999999999727e-06]</msg>
<status status="PASS" starttime="20201030 18:29:53.293" endtime="20201030 18:29:53.295"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.288" endtime="20201030 18:29:53.295"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:53.300" endtime="20201030 18:29:53.321"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.298" endtime="20201030 18:29:53.322"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.297" endtime="20201030 18:29:53.322"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.928" endtime="20201030 18:29:53.322"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.928" endtime="20201030 18:29:53.322"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:53.330" endtime="20201030 18:29:53.348"></status>
</kw>
<msg timestamp="20201030 18:29:53.348" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:53.329" endtime="20201030 18:29:53.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:53.352" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:53.350" endtime="20201030 18:29:53.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:53.353" endtime="20201030 18:29:53.355"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.326" endtime="20201030 18:29:53.356"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.324" endtime="20201030 18:29:53.356"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:53.363" endtime="20201030 18:29:53.650"></status>
</kw>
<msg timestamp="20201030 18:29:53.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023169792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023175153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:53.361" endtime="20201030 18:29:53.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:53.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023169792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023175153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:53.655" endtime="20201030 18:29:53.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:53.663" endtime="20201030 18:29:53.665"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.359" endtime="20201030 18:29:53.665"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.357" endtime="20201030 18:29:53.666"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:53.670" level="INFO">${RESULT} = [{'diff': 5.360999999998867e-06}, {'diff': 5.347000000002766e-06}, {'diff': 5.319000000000157e-06}, {'diff': 5.332999999999727e-06}, {'diff': 5.305000000000587e-06}, {'diff': 5.319000000000157e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:29:53.667" endtime="20201030 18:29:53.670"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:29:53.674" level="INFO">${OVERHEAD} = {'diff': [5.360999999998867e-06, 5.347000000002766e-06, 5.319000000000157e-06, 5.332999999999727e-06, 5.305000000000587e-06, 5.319000000000157e-06, 5.3339999999992005e-06, 5.375000000001906e-06, 5.319...</msg>
<status status="PASS" starttime="20201030 18:29:53.671" endtime="20201030 18:29:53.675"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:53.681" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:29:53.679" endtime="20201030 18:29:53.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:53.683" level="INFO">VALUE: [5.360999999998867e-06, 5.347000000002766e-06, 5.319000000000157e-06, 5.332999999999727e-06, 5.305000000000587e-06, 5.319000000000157e-06, 5.3339999999992005e-06, 5.375000000001906e-06, 5.319999999999631e-06, 5.319999999999631e-06, 5.319000000000157e-06, 5.346999999999297e-06, 5.305000000000587e-06, 5.374999999998437e-06, 5.3889999999980065e-06, 5.346999999999297e-06, 5.332999999999727e-06, 5.292000000000491e-06, 5.319000000000157e-06, 5.292000000000491e-06, 5.305000000000587e-06, 5.361000000002336e-06, 5.319999999999631e-06, 5.346999999999297e-06, 5.319000000000157e-06, 5.319000000000157e-06, 5.34799999999877e-06, 5.319999999999631e-06, 5.347000000002766e-06, 5.306000000000061e-06, 5.33400000000267e-06, 5.305000000000587e-06, 5.305000000000587e-06, 5.319999999999631e-06, 5.403000000001046e-06, 5.34799999999877e-06, 5.346999999999297e-06, 5.304999999997118e-06, 5.346999999999297e-06, 5.374999999998437e-06, 5.374999999998437e-06, 5.319999999999631e-06, 5.346999999999297e-06, 5.291000000001017e-06, 5.319000000000157e-06, 5.346999999999297e-06, 5.332999999999727e-06, 5.332999999999727e-06, 5.319999999999631e-06, 5.346999999999297e-06]</msg>
<status status="PASS" starttime="20201030 18:29:53.682" endtime="20201030 18:29:53.686"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.675" endtime="20201030 18:29:53.687"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:53.690" endtime="20201030 18:29:53.710"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.689" endtime="20201030 18:29:53.710"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.688" endtime="20201030 18:29:53.711"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.323" endtime="20201030 18:29:53.711"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.323" endtime="20201030 18:29:53.711"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:53.719" endtime="20201030 18:29:53.737"></status>
</kw>
<msg timestamp="20201030 18:29:53.737" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:53.717" endtime="20201030 18:29:53.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:53.740" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:53.738" endtime="20201030 18:29:53.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:53.741" endtime="20201030 18:29:53.743"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.715" endtime="20201030 18:29:53.743"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.713" endtime="20201030 18:29:53.744"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:53.750" endtime="20201030 18:29:54.034"></status>
</kw>
<msg timestamp="20201030 18:29:54.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020839319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020844667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:53.748" endtime="20201030 18:29:54.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:54.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020839319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020844667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:54.038" endtime="20201030 18:29:54.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:54.047" endtime="20201030 18:29:54.048"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.746" endtime="20201030 18:29:54.049"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.744" endtime="20201030 18:29:54.049"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:54.053" level="INFO">${RESULT} = [{'diff': 5.34800000000224e-06}, {'diff': 5.361000000002336e-06}, {'diff': 5.306000000000061e-06}, {'diff': 5.34799999999877e-06}, {'diff': 5.319999999999631e-06}, {'diff': 5.319999999999631e-06}, {'d...</msg>
<status status="PASS" starttime="20201030 18:29:54.050" endtime="20201030 18:29:54.054"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:29:54.058" level="INFO">${OVERHEAD} = {'diff': [5.34800000000224e-06, 5.361000000002336e-06, 5.306000000000061e-06, 5.34799999999877e-06, 5.319999999999631e-06, 5.319999999999631e-06, 5.347000000002766e-06, 5.319000000000157e-06, 5.236999...</msg>
<status status="PASS" starttime="20201030 18:29:54.054" endtime="20201030 18:29:54.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:54.062" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:29:54.061" endtime="20201030 18:29:54.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:54.065" level="INFO">VALUE: [5.34800000000224e-06, 5.361000000002336e-06, 5.306000000000061e-06, 5.34799999999877e-06, 5.319999999999631e-06, 5.319999999999631e-06, 5.347000000002766e-06, 5.319000000000157e-06, 5.236999999998215e-06, 5.3189999999966875e-06, 5.347000000002766e-06, 5.332999999999727e-06, 5.306000000000061e-06, 5.332999999999727e-06, 5.292000000000491e-06, 5.346999999999297e-06, 5.319000000000157e-06, 5.306000000000061e-06, 5.375000000001906e-06, 5.332999999999727e-06, 5.347000000002766e-06, 5.346999999999297e-06, 5.347000000002766e-06, 5.305000000000587e-06, 5.319999999999631e-06, 5.34800000000224e-06, 5.34800000000224e-06, 5.319999999999631e-06, 5.319000000000157e-06, 5.292000000000491e-06, 5.319000000000157e-06, 5.319999999999631e-06, 5.375000000001906e-06, 5.2499999999983116e-06, 5.332999999999727e-06, 5.305000000000587e-06, 5.34799999999877e-06, 5.346999999999297e-06, 5.264000000001351e-06, 5.332999999999727e-06, 5.346999999999297e-06, 5.34800000000224e-06, 5.332999999999727e-06, 5.319000000000157e-06, 5.346999999999297e-06, 5.306000000000061e-06, 5.332999999999727e-06, 5.306000000000061e-06, 5.319000000000157e-06, 5.291000000001017e-06]</msg>
<status status="PASS" starttime="20201030 18:29:54.063" endtime="20201030 18:29:54.065"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:54.059" endtime="20201030 18:29:54.066"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:54.069" endtime="20201030 18:29:54.088"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:54.068" endtime="20201030 18:29:54.089"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:54.066" endtime="20201030 18:29:54.090"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.712" endtime="20201030 18:29:54.090"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.712" endtime="20201030 18:29:54.090"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:54.098" endtime="20201030 18:29:54.112"></status>
</kw>
<msg timestamp="20201030 18:29:54.113" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:54.097" endtime="20201030 18:29:54.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:54.115" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:54.114" endtime="20201030 18:29:54.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:54.116" endtime="20201030 18:29:54.118"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:54.094" endtime="20201030 18:29:54.118"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:54.093" endtime="20201030 18:29:54.119"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:54.125" endtime="20201030 18:29:54.426"></status>
</kw>
<msg timestamp="20201030 18:29:54.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019081417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01908675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:29:54.124" endtime="20201030 18:29:54.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:54.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019081417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01908675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:29:54.430" endtime="20201030 18:29:54.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:54.439" endtime="20201030 18:29:54.442"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:54.121" endtime="20201030 18:29:54.442"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:54.119" endtime="20201030 18:29:54.443"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:54.447" level="INFO">${RESULT} = [{'diff': 5.332999999999727e-06}, {'diff': 5.305000000000587e-06}, {'diff': 5.319999999999631e-06}, {'diff': 5.2639999999978815e-06}, {'diff': 5.306000000000061e-06}, {'diff': 5.3200000000031e-06}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:54.443" endtime="20201030 18:29:54.447"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:29:54.451" level="INFO">${OVERHEAD} = {'diff': [5.332999999999727e-06, 5.305000000000587e-06, 5.319999999999631e-06, 5.2639999999978815e-06, 5.306000000000061e-06, 5.3200000000031e-06, 5.375000000001906e-06, 5.319999999999631e-06, 5.29200...</msg>
<status status="PASS" starttime="20201030 18:29:54.448" endtime="20201030 18:29:54.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:54.455" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:29:54.454" endtime="20201030 18:29:54.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:54.458" level="INFO">VALUE: [5.332999999999727e-06, 5.305000000000587e-06, 5.319999999999631e-06, 5.2639999999978815e-06, 5.306000000000061e-06, 5.3200000000031e-06, 5.375000000001906e-06, 5.319999999999631e-06, 5.292000000000491e-06, 5.332999999999727e-06, 5.319000000000157e-06, 5.292000000000491e-06, 5.305000000000587e-06, 5.346999999999297e-06, 5.346999999999297e-06, 5.306000000000061e-06, 5.34800000000224e-06, 5.332999999999727e-06, 5.319999999999631e-06, 5.3200000000031e-06, 5.319000000000157e-06, 5.319000000000157e-06, 5.319999999999631e-06, 5.33400000000267e-06, 5.319000000000157e-06, 5.332999999999727e-06, 5.346999999999297e-06, 5.361000000002336e-06, 5.34799999999877e-06, 5.346999999999297e-06, 5.306000000000061e-06, 5.33400000000267e-06, 5.305000000000587e-06, 5.346999999999297e-06, 5.347000000002766e-06, 5.292000000000491e-06, 5.332999999999727e-06, 5.250000000001781e-06, 5.332999999999727e-06, 5.346999999999297e-06, 5.305000000000587e-06, 5.319999999999631e-06, 5.3889999999980065e-06, 5.2639999999978815e-06, 5.332999999999727e-06, 5.374999999998437e-06, 5.319999999999631e-06, 5.319000000000157e-06, 5.33400000000267e-06, 5.3339999999992005e-06]</msg>
<status status="PASS" starttime="20201030 18:29:54.457" endtime="20201030 18:29:54.458"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:54.452" endtime="20201030 18:29:54.459"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:54.463" endtime="20201030 18:29:54.482"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:54.461" endtime="20201030 18:29:54.483"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:54.460" endtime="20201030 18:29:54.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:54.091" endtime="20201030 18:29:54.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:54.090" endtime="20201030 18:29:54.484"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:54.492" endtime="20201030 18:29:54.509"></status>
</kw>
<msg timestamp="20201030 18:29:54.509" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:54.491" endtime="20201030 18:29:54.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:54.512" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:54.510" endtime="20201030 18:29:54.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:54.513" endtime="20201030 18:29:54.515"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:54.488" endtime="20201030 18:29:54.516"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:54.486" endtime="20201030 18:29:54.516"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:54.523" endtime="20201030 18:29:54.812"></status>
</kw>
<msg timestamp="20201030 18:29:54.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022121833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022127181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:54.522" endtime="20201030 18:29:54.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:54.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022121833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022127181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:54.816" endtime="20201030 18:29:54.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:54.825" endtime="20201030 18:29:54.827"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:54.519" endtime="20201030 18:29:54.828"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:54.517" endtime="20201030 18:29:54.828"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:54.832" level="INFO">${RESULT} = [{'diff': 5.34799999999877e-06}, {'diff': 5.332999999999727e-06}, {'diff': 5.36199999999834e-06}, {'diff': 5.319000000000157e-06}, {'diff': 5.332999999999727e-06}, {'diff': 5.306000000000061e-06}, {'d...</msg>
<status status="PASS" starttime="20201030 18:29:54.829" endtime="20201030 18:29:54.832"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:29:54.836" level="INFO">${OVERHEAD} = {'diff': [5.34799999999877e-06, 5.332999999999727e-06, 5.36199999999834e-06, 5.319000000000157e-06, 5.332999999999727e-06, 5.306000000000061e-06, 5.305000000000587e-06, 5.319000000000157e-06, 5.332999...</msg>
<status status="PASS" starttime="20201030 18:29:54.833" endtime="20201030 18:29:54.837"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:54.841" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:29:54.839" endtime="20201030 18:29:54.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:54.843" level="INFO">VALUE: [5.34799999999877e-06, 5.332999999999727e-06, 5.36199999999834e-06, 5.319000000000157e-06, 5.332999999999727e-06, 5.306000000000061e-06, 5.305000000000587e-06, 5.319000000000157e-06, 5.332999999999727e-06, 5.332999999999727e-06, 5.319000000000157e-06, 5.361000000002336e-06, 5.3189999999966875e-06, 5.332999999999727e-06, 5.305000000000587e-06, 5.276999999997978e-06, 5.319999999999631e-06, 5.332999999999727e-06, 5.319999999999631e-06, 5.319000000000157e-06, 5.332999999999727e-06, 5.319999999999631e-06, 5.306000000000061e-06, 5.306000000000061e-06, 5.3339999999992005e-06, 5.3200000000031e-06, 5.292000000000491e-06, 5.3339999999992005e-06, 5.319000000000157e-06, 5.346999999999297e-06, 5.3339999999992005e-06, 5.332999999999727e-06, 5.306000000000061e-06, 5.3339999999992005e-06, 5.389000000001476e-06, 5.417000000000616e-06, 5.332999999999727e-06, 5.319999999999631e-06, 5.346999999999297e-06, 5.306000000000061e-06, 5.332999999999727e-06, 5.389000000001476e-06, 5.292000000000491e-06, 5.401999999998103e-06, 5.305000000000587e-06, 5.332999999999727e-06, 5.375000000001906e-06, 5.319000000000157e-06, 5.346999999999297e-06, 5.389000000001476e-06]</msg>
<status status="PASS" starttime="20201030 18:29:54.842" endtime="20201030 18:29:54.844"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:54.837" endtime="20201030 18:29:54.845"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:54.849" endtime="20201030 18:29:54.869"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:54.848" endtime="20201030 18:29:54.869"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:54.846" endtime="20201030 18:29:54.869"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:54.485" endtime="20201030 18:29:54.870"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:54.484" endtime="20201030 18:29:54.870"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:54.878" endtime="20201030 18:29:54.899"></status>
</kw>
<msg timestamp="20201030 18:29:54.900" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:54.877" endtime="20201030 18:29:54.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:54.902" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:54.901" endtime="20201030 18:29:54.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:54.904" endtime="20201030 18:29:54.905"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:54.874" endtime="20201030 18:29:54.906"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:54.872" endtime="20201030 18:29:54.906"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:54.913" endtime="20201030 18:29:55.198"></status>
</kw>
<msg timestamp="20201030 18:29:55.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022674389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022679736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:54.911" endtime="20201030 18:29:55.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:55.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022674389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022679736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:55.203" endtime="20201030 18:29:55.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:55.211" endtime="20201030 18:29:55.213"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:54.909" endtime="20201030 18:29:55.213"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:54.907" endtime="20201030 18:29:55.214"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:55.218" level="INFO">${RESULT} = [{'diff': 5.346999999999297e-06}, {'diff': 5.34799999999877e-06}, {'diff': 5.346999999999297e-06}, {'diff': 5.278000000000921e-06}, {'diff': 5.319999999999631e-06}, {'diff': 5.278000000000921e-06}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:55.215" endtime="20201030 18:29:55.218"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:29:55.223" level="INFO">${OVERHEAD} = {'diff': [5.346999999999297e-06, 5.34799999999877e-06, 5.346999999999297e-06, 5.278000000000921e-06, 5.319999999999631e-06, 5.278000000000921e-06, 5.319999999999631e-06, 5.332999999999727e-06, 5.38900...</msg>
<status status="PASS" starttime="20201030 18:29:55.219" endtime="20201030 18:29:55.223"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:55.227" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:29:55.226" endtime="20201030 18:29:55.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:55.230" level="INFO">VALUE: [5.346999999999297e-06, 5.34799999999877e-06, 5.346999999999297e-06, 5.278000000000921e-06, 5.319999999999631e-06, 5.278000000000921e-06, 5.319999999999631e-06, 5.332999999999727e-06, 5.389000000001476e-06, 5.332999999999727e-06, 5.306000000000061e-06, 5.276999999997978e-06, 5.278000000000921e-06, 5.403000000001046e-06, 5.291000000001017e-06, 5.3339999999992005e-06, 5.306000000000061e-06, 5.3889999999980065e-06, 5.3889999999980065e-06, 5.306000000000061e-06, 5.360999999998867e-06, 5.3189999999966875e-06, 5.33400000000267e-06, 5.292000000000491e-06, 5.292000000000491e-06, 5.306000000000061e-06, 5.374999999998437e-06, 5.291000000001017e-06, 5.332999999999727e-06, 5.346999999999297e-06, 5.306000000000061e-06, 5.346999999999297e-06, 5.346999999999297e-06, 5.402999999997576e-06, 5.347000000002766e-06, 5.332999999999727e-06, 5.319000000000157e-06, 5.346999999999297e-06, 5.3339999999992005e-06, 5.332999999999727e-06, 5.332999999999727e-06, 5.304999999997118e-06, 5.3200000000031e-06, 5.332999999999727e-06, 5.332999999999727e-06, 5.332999999999727e-06, 5.34799999999877e-06, 5.332999999999727e-06, 5.305000000000587e-06, 5.319999999999631e-06]</msg>
<status status="PASS" starttime="20201030 18:29:55.229" endtime="20201030 18:29:55.231"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.224" endtime="20201030 18:29:55.231"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:55.235" endtime="20201030 18:29:55.255"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.234" endtime="20201030 18:29:55.255"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.232" endtime="20201030 18:29:55.256"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:54.871" endtime="20201030 18:29:55.256"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:54.870" endtime="20201030 18:29:55.256"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:55.264" endtime="20201030 18:29:55.283"></status>
</kw>
<msg timestamp="20201030 18:29:55.284" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:55.263" endtime="20201030 18:29:55.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:55.286" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:55.285" endtime="20201030 18:29:55.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:55.287" endtime="20201030 18:29:55.289"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.260" endtime="20201030 18:29:55.289"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.258" endtime="20201030 18:29:55.290"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:55.297" endtime="20201030 18:29:55.582"></status>
</kw>
<msg timestamp="20201030 18:29:55.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023364486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023369819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:55.295" endtime="20201030 18:29:55.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:55.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023364486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023369819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:55.586" endtime="20201030 18:29:55.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:55.595" endtime="20201030 18:29:55.598"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.292" endtime="20201030 18:29:55.598"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.290" endtime="20201030 18:29:55.599"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:55.603" level="INFO">${RESULT} = [{'diff': 5.332999999999727e-06}, {'diff': 5.346999999999297e-06}, {'diff': 5.332999999999727e-06}, {'diff': 5.346999999999297e-06}, {'diff': 5.332999999999727e-06}, {'diff': 5.34799999999877e-06}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:55.599" endtime="20201030 18:29:55.603"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:29:55.607" level="INFO">${OVERHEAD} = {'diff': [5.332999999999727e-06, 5.346999999999297e-06, 5.332999999999727e-06, 5.346999999999297e-06, 5.332999999999727e-06, 5.34799999999877e-06, 5.306000000000061e-06, 5.319000000000157e-06, 5.33299...</msg>
<status status="PASS" starttime="20201030 18:29:55.604" endtime="20201030 18:29:55.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:55.611" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:29:55.610" endtime="20201030 18:29:55.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:55.614" level="INFO">VALUE: [5.332999999999727e-06, 5.346999999999297e-06, 5.332999999999727e-06, 5.346999999999297e-06, 5.332999999999727e-06, 5.34799999999877e-06, 5.306000000000061e-06, 5.319000000000157e-06, 5.332999999999727e-06, 5.319000000000157e-06, 5.346999999999297e-06, 5.306000000000061e-06, 5.290999999997548e-06, 5.319999999999631e-06, 5.360999999998867e-06, 5.292000000000491e-06, 5.332999999999727e-06, 5.346999999999297e-06, 5.319999999999631e-06, 5.374999999998437e-06, 5.2499999999983116e-06, 5.417000000000616e-06, 5.36199999999834e-06, 5.360999999998867e-06, 5.277999999997451e-06, 5.332999999999727e-06, 5.346999999999297e-06, 5.319999999999631e-06, 5.3200000000031e-06, 5.305000000000587e-06, 5.347000000002766e-06, 5.319000000000157e-06, 5.319000000000157e-06, 5.346999999999297e-06, 5.332999999999727e-06, 5.332999999999727e-06, 5.319000000000157e-06, 5.319999999999631e-06, 5.346999999999297e-06, 5.374999999998437e-06, 5.332999999999727e-06, 5.347000000002766e-06, 5.3339999999992005e-06, 5.3339999999992005e-06, 5.374999999998437e-06, 5.319999999999631e-06, 5.319000000000157e-06, 5.319000000000157e-06, 5.319000000000157e-06, 5.319999999999631e-06]</msg>
<status status="PASS" starttime="20201030 18:29:55.612" endtime="20201030 18:29:55.615"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.608" endtime="20201030 18:29:55.615"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:55.619" endtime="20201030 18:29:55.639"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.617" endtime="20201030 18:29:55.639"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.616" endtime="20201030 18:29:55.639"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.257" endtime="20201030 18:29:55.640"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.257" endtime="20201030 18:29:55.640"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:55.648" endtime="20201030 18:29:55.665"></status>
</kw>
<msg timestamp="20201030 18:29:55.665" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:55.647" endtime="20201030 18:29:55.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:55.668" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:55.666" endtime="20201030 18:29:55.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:55.669" endtime="20201030 18:29:55.671"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.644" endtime="20201030 18:29:55.672"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.642" endtime="20201030 18:29:55.672"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:55.679" endtime="20201030 18:29:55.966"></status>
</kw>
<msg timestamp="20201030 18:29:55.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021421861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021427194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:55.678" endtime="20201030 18:29:55.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:55.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021421861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021427194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:55.971" endtime="20201030 18:29:55.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:55.979" endtime="20201030 18:29:55.981"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.675" endtime="20201030 18:29:55.982"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.673" endtime="20201030 18:29:55.982"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:55.986" level="INFO">${RESULT} = [{'diff': 5.332999999999727e-06}, {'diff': 5.319000000000157e-06}, {'diff': 5.292000000000491e-06}, {'diff': 5.332999999999727e-06}, {'diff': 5.306000000000061e-06}, {'diff': 5.250000000001781e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:29:55.983" endtime="20201030 18:29:55.986"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:29:55.990" level="INFO">${OVERHEAD} = {'diff': [5.332999999999727e-06, 5.319000000000157e-06, 5.292000000000491e-06, 5.332999999999727e-06, 5.306000000000061e-06, 5.250000000001781e-06, 5.360999999998867e-06, 5.375000000001906e-06, 5.3609...</msg>
<status status="PASS" starttime="20201030 18:29:55.987" endtime="20201030 18:29:55.991"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:55.995" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:29:55.994" endtime="20201030 18:29:55.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:55.997" level="INFO">VALUE: [5.332999999999727e-06, 5.319000000000157e-06, 5.292000000000491e-06, 5.332999999999727e-06, 5.306000000000061e-06, 5.250000000001781e-06, 5.360999999998867e-06, 5.375000000001906e-06, 5.360999999998867e-06, 5.319000000000157e-06, 5.3339999999992005e-06, 5.360999999998867e-06, 5.347000000002766e-06, 5.346999999999297e-06, 5.304999999997118e-06, 5.319000000000157e-06, 5.319999999999631e-06, 5.306000000000061e-06, 5.319999999999631e-06, 5.346999999999297e-06, 5.360999999998867e-06, 5.332999999999727e-06, 5.319999999999631e-06, 5.3339999999992005e-06, 5.319000000000157e-06, 5.34799999999877e-06, 5.34799999999877e-06, 5.319999999999631e-06, 5.347000000002766e-06, 5.319999999999631e-06, 5.319000000000157e-06, 5.346999999999297e-06, 5.305000000000587e-06, 5.319000000000157e-06, 5.3200000000031e-06, 5.319999999999631e-06, 5.319999999999631e-06, 5.346999999999297e-06, 5.346999999999297e-06, 5.306000000000061e-06, 5.332999999999727e-06, 5.290999999997548e-06, 5.3339999999992005e-06, 5.319000000000157e-06, 5.361000000002336e-06, 5.278000000000921e-06, 5.319999999999631e-06, 5.306000000000061e-06, 5.361000000002336e-06, 5.277999999997451e-06]</msg>
<status status="PASS" starttime="20201030 18:29:55.996" endtime="20201030 18:29:55.999"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.991" endtime="20201030 18:29:55.999"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:56.004" endtime="20201030 18:29:56.023"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.002" endtime="20201030 18:29:56.024"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.000" endtime="20201030 18:29:56.024"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.641" endtime="20201030 18:29:56.024"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.640" endtime="20201030 18:29:56.024"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:56.033" endtime="20201030 18:29:56.046"></status>
</kw>
<msg timestamp="20201030 18:29:56.047" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:56.031" endtime="20201030 18:29:56.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:56.049" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:56.048" endtime="20201030 18:29:56.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:56.050" endtime="20201030 18:29:56.052"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.028" endtime="20201030 18:29:56.053"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.027" endtime="20201030 18:29:56.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:56.060" endtime="20201030 18:29:56.345"></status>
</kw>
<msg timestamp="20201030 18:29:56.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018851083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018856403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:56.058" endtime="20201030 18:29:56.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:56.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018851083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018856403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:56.350" endtime="20201030 18:29:56.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:56.358" endtime="20201030 18:29:56.360"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.055" endtime="20201030 18:29:56.361"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.054" endtime="20201030 18:29:56.361"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:56.365" level="INFO">${RESULT} = [{'diff': 5.319999999999631e-06}, {'diff': 5.305000000000587e-06}, {'diff': 5.292000000000491e-06}, {'diff': 5.332999999999727e-06}, {'diff': 5.306000000000061e-06}, {'diff': 5.332999999999727e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:29:56.362" endtime="20201030 18:29:56.365"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:29:56.370" level="INFO">${OVERHEAD} = {'diff': [5.319999999999631e-06, 5.305000000000587e-06, 5.292000000000491e-06, 5.332999999999727e-06, 5.306000000000061e-06, 5.332999999999727e-06, 5.319000000000157e-06, 5.319000000000157e-06, 5.3199...</msg>
<status status="PASS" starttime="20201030 18:29:56.366" endtime="20201030 18:29:56.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:56.375" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:29:56.374" endtime="20201030 18:29:56.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:56.377" level="INFO">VALUE: [5.319999999999631e-06, 5.305000000000587e-06, 5.292000000000491e-06, 5.332999999999727e-06, 5.306000000000061e-06, 5.332999999999727e-06, 5.319000000000157e-06, 5.319000000000157e-06, 5.319999999999631e-06, 5.332999999999727e-06, 5.347000000002766e-06, 5.319000000000157e-06, 5.332999999999727e-06, 5.3889999999980065e-06, 5.360999999998867e-06, 5.332999999999727e-06, 5.374999999998437e-06, 5.332999999999727e-06, 5.306000000000061e-06, 5.319999999999631e-06, 5.375000000001906e-06, 5.346999999999297e-06, 5.34800000000224e-06, 5.346999999999297e-06, 5.361000000002336e-06, 5.346999999999297e-06, 5.319000000000157e-06, 5.319000000000157e-06, 5.346999999999297e-06, 5.319000000000157e-06, 5.306000000000061e-06, 5.332999999999727e-06, 5.319000000000157e-06, 5.347000000002766e-06, 5.361000000002336e-06, 5.332999999999727e-06, 5.319000000000157e-06, 5.250000000001781e-06, 5.306000000000061e-06, 5.319000000000157e-06, 5.319999999999631e-06, 5.360999999998867e-06, 5.290999999997548e-06, 5.332999999999727e-06, 5.319000000000157e-06, 5.374999999998437e-06, 5.319999999999631e-06, 5.3339999999992005e-06, 5.346999999999297e-06, 5.319999999999631e-06]</msg>
<status status="PASS" starttime="20201030 18:29:56.376" endtime="20201030 18:29:56.378"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.371" endtime="20201030 18:29:56.379"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:56.383" endtime="20201030 18:29:56.402"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.381" endtime="20201030 18:29:56.403"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.380" endtime="20201030 18:29:56.403"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.025" endtime="20201030 18:29:56.403"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.025" endtime="20201030 18:29:56.403"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:56.412" endtime="20201030 18:29:56.428"></status>
</kw>
<msg timestamp="20201030 18:29:56.428" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:56.410" endtime="20201030 18:29:56.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:56.431" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:56.429" endtime="20201030 18:29:56.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:56.432" endtime="20201030 18:29:56.434"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.407" endtime="20201030 18:29:56.434"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.405" endtime="20201030 18:29:56.435"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:56.441" endtime="20201030 18:29:56.734"></status>
</kw>
<msg timestamp="20201030 18:29:56.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021580667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021586, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:29:56.440" endtime="20201030 18:29:56.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:56.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021580667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021586, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:29:56.739" endtime="20201030 18:29:56.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:56.749" endtime="20201030 18:29:56.753"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.437" endtime="20201030 18:29:56.754"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.435" endtime="20201030 18:29:56.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:56.760" level="INFO">${RESULT} = [{'diff': 5.332999999999727e-06}, {'diff': 5.332999999999727e-06}, {'diff': 5.332999999999727e-06}, {'diff': 5.415999999997673e-06}, {'diff': 5.332999999999727e-06}, {'diff': 5.360999999998867e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:29:56.756" endtime="20201030 18:29:56.760"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:29:56.765" level="INFO">${OVERHEAD} = {'diff': [5.332999999999727e-06, 5.332999999999727e-06, 5.332999999999727e-06, 5.415999999997673e-06, 5.332999999999727e-06, 5.360999999998867e-06, 5.276999999997978e-06, 5.250000000001781e-06, 5.2909...</msg>
<status status="PASS" starttime="20201030 18:29:56.761" endtime="20201030 18:29:56.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:56.772" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:29:56.770" endtime="20201030 18:29:56.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:56.775" level="INFO">VALUE: [5.332999999999727e-06, 5.332999999999727e-06, 5.332999999999727e-06, 5.415999999997673e-06, 5.332999999999727e-06, 5.360999999998867e-06, 5.276999999997978e-06, 5.250000000001781e-06, 5.290999999997548e-06, 5.3339999999992005e-06, 5.389000000001476e-06, 5.388000000002002e-06, 5.319000000000157e-06, 5.360999999998867e-06, 5.277999999997451e-06, 5.3889999999980065e-06, 5.319999999999631e-06, 5.346999999999297e-06, 5.3200000000031e-06, 5.3339999999992005e-06, 5.319999999999631e-06, 5.319999999999631e-06, 5.332999999999727e-06, 5.346999999999297e-06, 5.306000000000061e-06, 5.319000000000157e-06, 5.346999999999297e-06, 5.3339999999992005e-06, 5.34799999999877e-06, 5.332999999999727e-06, 5.304999999997118e-06, 5.319999999999631e-06, 5.33400000000267e-06, 5.360999999998867e-06, 5.319999999999631e-06, 5.278000000000921e-06, 5.319999999999631e-06, 5.319999999999631e-06, 5.360999999998867e-06, 5.346999999999297e-06, 5.305000000000587e-06, 5.346999999999297e-06, 5.346999999999297e-06, 5.305000000000587e-06, 5.319000000000157e-06, 5.346999999999297e-06, 5.319999999999631e-06, 5.375000000001906e-06, 5.319000000000157e-06, 5.332999999999727e-06]</msg>
<status status="PASS" starttime="20201030 18:29:56.773" endtime="20201030 18:29:56.776"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.767" endtime="20201030 18:29:56.777"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:56.783" endtime="20201030 18:29:56.803"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.780" endtime="20201030 18:29:56.804"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.779" endtime="20201030 18:29:56.804"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.404" endtime="20201030 18:29:56.805"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.404" endtime="20201030 18:29:56.805"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:56.815" endtime="20201030 18:29:56.830"></status>
</kw>
<msg timestamp="20201030 18:29:56.831" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:56.814" endtime="20201030 18:29:56.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:56.834" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:56.832" endtime="20201030 18:29:56.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:56.835" endtime="20201030 18:29:56.837"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.811" endtime="20201030 18:29:56.838"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.808" endtime="20201030 18:29:56.838"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:56.845" endtime="20201030 18:29:57.134"></status>
</kw>
<msg timestamp="20201030 18:29:57.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022807583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022812917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:56.843" endtime="20201030 18:29:57.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:57.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022807583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022812917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:57.143" endtime="20201030 18:29:57.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:57.161" endtime="20201030 18:29:57.165"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.841" endtime="20201030 18:29:57.166"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.839" endtime="20201030 18:29:57.167"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:57.177" level="INFO">${RESULT} = [{'diff': 5.3339999999992005e-06}, {'diff': 5.319999999999631e-06}, {'diff': 5.319999999999631e-06}, {'diff': 5.305000000000587e-06}, {'diff': 5.250000000001781e-06}, {'diff': 5.291000000001017e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:29:57.168" endtime="20201030 18:29:57.177"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:29:57.187" level="INFO">${OVERHEAD} = {'diff': [5.3339999999992005e-06, 5.319999999999631e-06, 5.319999999999631e-06, 5.305000000000587e-06, 5.250000000001781e-06, 5.291000000001017e-06, 5.306000000000061e-06, 5.3200000000031e-06, 5.31999...</msg>
<status status="PASS" starttime="20201030 18:29:57.179" endtime="20201030 18:29:57.188"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:57.196" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:29:57.194" endtime="20201030 18:29:57.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:57.202" level="INFO">VALUE: [5.3339999999992005e-06, 5.319999999999631e-06, 5.319999999999631e-06, 5.305000000000587e-06, 5.250000000001781e-06, 5.291000000001017e-06, 5.306000000000061e-06, 5.3200000000031e-06, 5.319999999999631e-06, 5.347000000002766e-06, 5.319999999999631e-06, 5.292000000000491e-06, 5.389000000001476e-06, 5.3889999999980065e-06, 5.332999999999727e-06, 5.3339999999992005e-06, 5.292000000000491e-06, 5.306000000000061e-06, 5.346999999999297e-06, 5.319999999999631e-06, 5.304999999997118e-06, 5.346999999999297e-06, 5.319000000000157e-06, 5.306000000000061e-06, 5.319999999999631e-06, 5.305000000000587e-06, 5.306000000000061e-06, 5.250000000001781e-06, 5.332999999999727e-06, 5.319000000000157e-06, 5.319000000000157e-06, 5.306000000000061e-06, 5.3889999999980065e-06, 5.319000000000157e-06, 5.332999999999727e-06, 5.319999999999631e-06, 5.374999999998437e-06, 5.346999999999297e-06, 5.332999999999727e-06, 5.319999999999631e-06, 5.3200000000031e-06, 5.333000000003196e-06, 5.292000000000491e-06, 5.347000000002766e-06, 5.319999999999631e-06, 5.3339999999992005e-06, 5.332999999999727e-06, 5.319999999999631e-06, 5.319999999999631e-06, 5.332999999999727e-06]</msg>
<status status="PASS" starttime="20201030 18:29:57.199" endtime="20201030 18:29:57.209"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.189" endtime="20201030 18:29:57.210"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:57.219" endtime="20201030 18:29:57.239"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.215" endtime="20201030 18:29:57.239"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.213" endtime="20201030 18:29:57.240"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.806" endtime="20201030 18:29:57.240"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.806" endtime="20201030 18:29:57.240"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:57.248" endtime="20201030 18:29:57.262"></status>
</kw>
<msg timestamp="20201030 18:29:57.262" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:57.246" endtime="20201030 18:29:57.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:57.265" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:57.263" endtime="20201030 18:29:57.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:57.266" endtime="20201030 18:29:57.267"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.244" endtime="20201030 18:29:57.268"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.242" endtime="20201030 18:29:57.268"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:57.275" endtime="20201030 18:29:57.559"></status>
</kw>
<msg timestamp="20201030 18:29:57.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018797611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018802958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:57.273" endtime="20201030 18:29:57.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:57.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018797611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018802958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:57.563" endtime="20201030 18:29:57.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:57.572" endtime="20201030 18:29:57.573"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.271" endtime="20201030 18:29:57.574"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.269" endtime="20201030 18:29:57.574"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:57.578" level="INFO">${RESULT} = [{'diff': 5.347000000002766e-06}, {'diff': 5.374999999998437e-06}, {'diff': 5.347000000002766e-06}, {'diff': 5.292000000000491e-06}, {'diff': 5.319000000000157e-06}, {'diff': 5.34799999999877e-06}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:57.575" endtime="20201030 18:29:57.579"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:29:57.583" level="INFO">${OVERHEAD} = {'diff': [5.347000000002766e-06, 5.374999999998437e-06, 5.347000000002766e-06, 5.292000000000491e-06, 5.319000000000157e-06, 5.34799999999877e-06, 5.347000000002766e-06, 5.346999999999297e-06, 5.27800...</msg>
<status status="PASS" starttime="20201030 18:29:57.579" endtime="20201030 18:29:57.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:57.588" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:29:57.586" endtime="20201030 18:29:57.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:57.590" level="INFO">VALUE: [5.347000000002766e-06, 5.374999999998437e-06, 5.347000000002766e-06, 5.292000000000491e-06, 5.319000000000157e-06, 5.34799999999877e-06, 5.347000000002766e-06, 5.346999999999297e-06, 5.278000000000921e-06, 5.3339999999992005e-06, 5.319999999999631e-06, 5.360999999998867e-06, 5.304999999997118e-06, 5.319000000000157e-06, 5.416999999997146e-06, 5.34799999999877e-06, 5.332999999999727e-06, 5.33400000000267e-06, 5.332999999999727e-06, 5.306000000000061e-06, 5.332999999999727e-06, 5.346999999999297e-06, 5.347000000002766e-06, 5.2639999999978815e-06, 5.306000000000061e-06, 5.3339999999992005e-06, 5.36200000000181e-06, 5.402999999997576e-06, 5.361000000002336e-06, 5.332999999999727e-06, 5.319999999999631e-06, 5.346999999999297e-06, 5.332999999999727e-06, 5.305000000000587e-06, 5.346999999999297e-06, 5.36199999999834e-06, 5.319999999999631e-06, 5.360999999998867e-06, 5.332999999999727e-06, 5.332999999999727e-06, 5.346999999999297e-06, 5.319000000000157e-06, 5.332999999999727e-06, 5.292000000000491e-06, 5.347000000002766e-06, 5.346999999999297e-06, 5.319999999999631e-06, 5.347000000002766e-06, 5.332999999999727e-06, 5.332999999999727e-06]</msg>
<status status="PASS" starttime="20201030 18:29:57.589" endtime="20201030 18:29:57.591"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.584" endtime="20201030 18:29:57.591"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:57.595" endtime="20201030 18:29:57.614"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.593" endtime="20201030 18:29:57.615"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.592" endtime="20201030 18:29:57.615"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.241" endtime="20201030 18:29:57.616"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.240" endtime="20201030 18:29:57.616"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.847" endtime="20201030 18:29:57.616"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:57.620" endtime="20201030 18:29:57.639"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.618" endtime="20201030 18:29:57.640"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.617" endtime="20201030 18:29:57.640"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:29:49.764" endtime="20201030 18:29:57.640" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:57.647" endtime="20201030 18:29:57.666"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.645" endtime="20201030 18:29:57.667"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:57.680" endtime="20201030 18:29:57.704"></status>
</kw>
<msg timestamp="20201030 18:29:57.704" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:57.678" endtime="20201030 18:29:57.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:57.707" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:57.705" endtime="20201030 18:29:57.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:29:57.710" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:29:57.708" endtime="20201030 18:29:57.710"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:57.676" endtime="20201030 18:29:57.711"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:57.673" endtime="20201030 18:29:57.711"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.672" endtime="20201030 18:29:57.712"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:29:57.715" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:29:57.715" endtime="20201030 18:29:57.716"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.712" endtime="20201030 18:29:57.716"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.671" endtime="20201030 18:29:57.716"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.671" endtime="20201030 18:29:57.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:57.717" endtime="20201030 18:29:57.718"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.669" endtime="20201030 18:29:57.719"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.668" endtime="20201030 18:29:57.719"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.644" endtime="20201030 18:29:57.720"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:57.728" endtime="20201030 18:29:57.750"></status>
</kw>
<msg timestamp="20201030 18:29:57.751" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:57.727" endtime="20201030 18:29:57.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:57.754" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:57.752" endtime="20201030 18:29:57.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:57.755" endtime="20201030 18:29:57.756"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.724" endtime="20201030 18:29:57.757"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.722" endtime="20201030 18:29:57.757"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:57.759" endtime="20201030 18:29:57.761"></status>
</kw>
<msg timestamp="20201030 18:29:57.761" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 18:29:57.758" endtime="20201030 18:29:57.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:57.765" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:29:57.764" endtime="20201030 18:29:57.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:57.767" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:29:57.767" endtime="20201030 18:29:57.768"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.762" endtime="20201030 18:29:57.768"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:57.772" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:29:57.771" endtime="20201030 18:29:57.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:57.774" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:29:57.773" endtime="20201030 18:29:57.775"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.769" endtime="20201030 18:29:57.775"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:57.782" endtime="20201030 18:29:58.069"></status>
</kw>
<msg timestamp="20201030 18:29:58.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074406264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074424653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:57.780" endtime="20201030 18:29:58.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:58.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074406264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074424653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:58.073" endtime="20201030 18:29:58.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:58.081" endtime="20201030 18:29:58.083"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.777" endtime="20201030 18:29:58.084"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.776" endtime="20201030 18:29:58.084"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:58.088" level="INFO">${RESULT} = [{'diff': 1.838899999999366e-05}, {'diff': 2.234700000000589e-05}, {'diff': 2.236099999999852e-05}, {'diff': 2.2346999999992012e-05}, {'diff': 2.237500000000503e-05}, {'diff': 2.234700000000589e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:29:58.085" endtime="20201030 18:29:58.088"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:29:58.092" level="INFO">${OVERHEAD} = {'diff': [1.838899999999366e-05, 2.234700000000589e-05, 2.236099999999852e-05, 2.2346999999992012e-05, 2.237500000000503e-05, 2.234700000000589e-05, 2.2402999999990292e-05, 2.233299999999938e-05, 2.23...</msg>
<status status="PASS" starttime="20201030 18:29:58.089" endtime="20201030 18:29:58.092"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:58.097" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201030 18:29:58.096" endtime="20201030 18:29:58.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:58.104" level="INFO">VALUE: [1.838899999999366e-05, 2.234700000000589e-05, 2.236099999999852e-05, 2.2346999999992012e-05, 2.237500000000503e-05, 2.234700000000589e-05, 2.2402999999990292e-05, 2.233299999999938e-05, 2.231900000000675e-05, 2.2374999999991152e-05, 2.243100000000331e-05, 2.238900000001154e-05, 2.2263999999994066e-05, 2.234700000000589e-05, 2.233299999999938e-05, 2.2402999999990292e-05, 2.2402999999990292e-05, 2.233299999999938e-05, 2.236099999999852e-05, 2.233299999999938e-05, 2.233299999999938e-05, 2.2457999999989098e-05, 2.2415999999997327e-05, 2.240300000000417e-05, 2.2291999999993206e-05, 2.233299999999938e-05, 2.2305999999999715e-05, 2.2402999999990292e-05, 2.2374999999991152e-05, 2.240300000000417e-05, 2.2319999999992346e-05, 2.236099999999852e-05, 2.237500000000503e-05, 2.2402000000004696e-05, 2.236099999999852e-05, 2.2362000000011872e-05, 2.236099999999852e-05, 2.236099999999852e-05, 2.2346999999992012e-05, 2.236099999999852e-05, 2.2374999999991152e-05, 2.238899999999766e-05, 2.237500000000503e-05, 2.233299999999938e-05, 2.234700000000589e-05, 2.2347999999991486e-05, 2.243100000000331e-05, 2.238900000001154e-05, 2.241700000001068e-05, 2.233299999999938e-05]</msg>
<status status="PASS" starttime="20201030 18:29:58.098" endtime="20201030 18:29:58.104"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.093" endtime="20201030 18:29:58.105"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:58.108" endtime="20201030 18:29:58.128"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.107" endtime="20201030 18:29:58.128"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.106" endtime="20201030 18:29:58.129"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.720" endtime="20201030 18:29:58.129"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:29:57.642" endtime="20201030 18:29:58.130" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:58.136" endtime="20201030 18:29:58.156"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.135" endtime="20201030 18:29:58.156"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:58.170" endtime="20201030 18:29:58.187"></status>
</kw>
<msg timestamp="20201030 18:29:58.188" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:58.169" endtime="20201030 18:29:58.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:58.190" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:58.189" endtime="20201030 18:29:58.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:29:58.193" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:29:58.191" endtime="20201030 18:29:58.194"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:58.166" endtime="20201030 18:29:58.194"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:58.164" endtime="20201030 18:29:58.195"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.163" endtime="20201030 18:29:58.195"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:29:58.199" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:29:58.198" endtime="20201030 18:29:58.199"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.196" endtime="20201030 18:29:58.199"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.162" endtime="20201030 18:29:58.200"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.161" endtime="20201030 18:29:58.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:58.201" endtime="20201030 18:29:58.202"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.159" endtime="20201030 18:29:58.203"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.157" endtime="20201030 18:29:58.203"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.134" endtime="20201030 18:29:58.203"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:58.212" endtime="20201030 18:29:58.283"></status>
</kw>
<msg timestamp="20201030 18:29:58.283" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:58.210" endtime="20201030 18:29:58.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:58.286" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:58.284" endtime="20201030 18:29:58.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:58.287" endtime="20201030 18:29:58.289"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.208" endtime="20201030 18:29:58.289"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.205" endtime="20201030 18:29:58.290"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:58.292" endtime="20201030 18:29:58.293"></status>
</kw>
<msg timestamp="20201030 18:29:58.294" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 18:29:58.290" endtime="20201030 18:29:58.294"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:58.299" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:29:58.297" endtime="20201030 18:29:58.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:58.301" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:29:58.300" endtime="20201030 18:29:58.301"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.295" endtime="20201030 18:29:58.302"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:58.306" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:29:58.305" endtime="20201030 18:29:58.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:58.308" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:29:58.307" endtime="20201030 18:29:58.308"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.303" endtime="20201030 18:29:58.309"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:58.315" endtime="20201030 18:29:58.608"></status>
</kw>
<msg timestamp="20201030 18:29:58.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067912889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067933167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:58.314" endtime="20201030 18:29:58.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:58.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067912889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067933167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:58.614" endtime="20201030 18:29:58.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:58.626" endtime="20201030 18:29:58.628"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.311" endtime="20201030 18:29:58.628"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.309" endtime="20201030 18:29:58.629"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:58.634" level="INFO">${RESULT} = [{'diff': 2.0277999999998575e-05}, {'diff': 2.9610999999998833e-05}, {'diff': 2.9597999999991798e-05}, {'diff': 2.9624999999991464e-05}, {'diff': 2.9583999999999167e-05}, {'diff': 2.9582999999999693e-...</msg>
<status status="PASS" starttime="20201030 18:29:58.629" endtime="20201030 18:29:58.635"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:29:58.639" level="INFO">${OVERHEAD} = {'diff': [2.0277999999998575e-05, 2.9610999999998833e-05, 2.9597999999991798e-05, 2.9624999999991464e-05, 2.9583999999999167e-05, 2.9582999999999693e-05, 2.9569999999992658e-05, 2.9555000000000553e-05...</msg>
<status status="PASS" starttime="20201030 18:29:58.636" endtime="20201030 18:29:58.639"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:58.645" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201030 18:29:58.644" endtime="20201030 18:29:58.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:58.648" level="INFO">VALUE: [2.0277999999998575e-05, 2.9610999999998833e-05, 2.9597999999991798e-05, 2.9624999999991464e-05, 2.9583999999999167e-05, 2.9582999999999693e-05, 2.9569999999992658e-05, 2.9555000000000553e-05, 2.9582999999999693e-05, 2.9612000000012184e-05, 2.9596999999992324e-05, 2.9597999999991798e-05, 2.9582999999999693e-05, 2.9582999999999693e-05, 2.965300000000448e-05, 2.9569000000007062e-05, 2.9582999999999693e-05, 2.962500000000534e-05, 2.95970000000062e-05, 2.95970000000062e-05, 2.9596999999992324e-05, 2.9638999999997973e-05, 2.962500000000534e-05, 2.9652999999990604e-05, 2.965300000000448e-05, 2.9598000000005675e-05, 2.968100000000362e-05, 2.95970000000062e-05, 2.95970000000062e-05, 2.95970000000062e-05, 2.966700000001099e-05, 2.9569999999992658e-05, 2.9568999999993184e-05, 2.9568999999993184e-05, 2.9596999999992324e-05, 2.9597999999991798e-05, 2.95970000000062e-05, 2.9624999999991464e-05, 2.9610999999998833e-05, 2.968100000000362e-05, 2.9556000000000027e-05, 2.9556000000000027e-05, 2.9582999999999693e-05, 2.9582999999999693e-05, 2.9638999999997973e-05, 2.9652999999990604e-05, 2.9596999999992324e-05, 2.9624999999991464e-05, 2.9528000000000887e-05, 2.9598000000005675e-05]</msg>
<status status="PASS" starttime="20201030 18:29:58.646" endtime="20201030 18:29:58.648"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.640" endtime="20201030 18:29:58.648"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:58.652" endtime="20201030 18:29:58.672"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.651" endtime="20201030 18:29:58.672"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.649" endtime="20201030 18:29:58.672"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.204" endtime="20201030 18:29:58.673"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:29:58.131" endtime="20201030 18:29:58.673" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:58.680" endtime="20201030 18:29:58.700"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.679" endtime="20201030 18:29:58.700"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:58.713" endtime="20201030 18:29:58.729"></status>
</kw>
<msg timestamp="20201030 18:29:58.730" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:58.712" endtime="20201030 18:29:58.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:58.733" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:58.731" endtime="20201030 18:29:58.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:29:58.736" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:29:58.734" endtime="20201030 18:29:58.736"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:58.709" endtime="20201030 18:29:58.737"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:58.707" endtime="20201030 18:29:58.737"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.706" endtime="20201030 18:29:58.737"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:29:58.741" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:29:58.740" endtime="20201030 18:29:58.742"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.738" endtime="20201030 18:29:58.742"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.705" endtime="20201030 18:29:58.742"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.704" endtime="20201030 18:29:58.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:58.743" endtime="20201030 18:29:58.744"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.703" endtime="20201030 18:29:58.745"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.701" endtime="20201030 18:29:58.745"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.677" endtime="20201030 18:29:58.745"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:58.756" endtime="20201030 18:29:58.926"></status>
</kw>
<msg timestamp="20201030 18:29:58.927" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:58.754" endtime="20201030 18:29:58.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:58.929" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:58.928" endtime="20201030 18:29:58.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:58.930" endtime="20201030 18:29:58.932"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.750" endtime="20201030 18:29:58.932"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.748" endtime="20201030 18:29:58.933"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:58.935" endtime="20201030 18:29:58.937"></status>
</kw>
<msg timestamp="20201030 18:29:58.937" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 18:29:58.934" endtime="20201030 18:29:58.937"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:58.941" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:29:58.940" endtime="20201030 18:29:58.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:58.944" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:29:58.942" endtime="20201030 18:29:58.944"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.938" endtime="20201030 18:29:58.946"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:58.951" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:29:58.950" endtime="20201030 18:29:58.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:58.953" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:29:58.952" endtime="20201030 18:29:58.954"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.946" endtime="20201030 18:29:58.954"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:58.963" endtime="20201030 18:29:59.256"></status>
</kw>
<msg timestamp="20201030 18:29:59.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067979694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068012431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:58.961" endtime="20201030 18:29:59.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:59.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067979694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068012431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:59.260" endtime="20201030 18:29:59.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:59.269" endtime="20201030 18:29:59.270"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.958" endtime="20201030 18:29:59.271"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.955" endtime="20201030 18:29:59.271"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:59.275" level="INFO">${RESULT} = [{'diff': 3.27370000000049e-05}, {'diff': 4.994499999999569e-05}, {'diff': 4.9931000000003056e-05}, {'diff': 4.994499999999569e-05}, {'diff': 5.0014000000001e-05}, {'diff': 4.9915999999997074e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:59.272" endtime="20201030 18:29:59.275"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:29:59.280" level="INFO">${OVERHEAD} = {'diff': [3.27370000000049e-05, 4.994499999999569e-05, 4.9931000000003056e-05, 4.994499999999569e-05, 5.0014000000001e-05, 4.9915999999997074e-05, 4.994400000001009e-05, 4.9931000000003056e-05, 4.9874...</msg>
<status status="PASS" starttime="20201030 18:29:59.276" endtime="20201030 18:29:59.281"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:59.285" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201030 18:29:59.284" endtime="20201030 18:29:59.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:59.288" level="INFO">VALUE: [3.27370000000049e-05, 4.994499999999569e-05, 4.9931000000003056e-05, 4.994499999999569e-05, 5.0014000000001e-05, 4.9915999999997074e-05, 4.994400000001009e-05, 4.9931000000003056e-05, 4.98749999999909e-05, 5.002799999999363e-05, 4.9959000000002196e-05, 4.994499999999569e-05, 4.994499999999569e-05, 5.0014000000001e-05, 4.9943999999996214e-05, 4.9943999999996214e-05, 4.991699999999655e-05, 4.993099999998918e-05, 5.001300000000153e-05, 4.995800000000272e-05, 4.999999999999449e-05, 4.994400000002397e-05, 4.9931000000003056e-05, 4.99309999999753e-05, 4.998600000000186e-05, 5.000000000002225e-05, 4.9931000000003056e-05, 4.9943999999996214e-05, 4.997200000000923e-05, 4.999999999999449e-05, 4.987500000000478e-05, 4.993000000000358e-05, 5.0013000000015406e-05, 4.9957999999988845e-05, 4.991600000001095e-05, 4.9943999999996214e-05, 4.9957999999988845e-05, 5.001400000001488e-05, 5.002800000000751e-05, 4.991699999998267e-05, 5.002800000000751e-05, 4.993000000000358e-05, 5.004100000000067e-05, 4.993000000000358e-05, 4.993000000000358e-05, 4.998600000000186e-05, 4.988899999999741e-05, 4.990299999999004e-05, 4.998600000000186e-05, 5.0013999999987124e-05]</msg>
<status status="PASS" starttime="20201030 18:29:59.286" endtime="20201030 18:29:59.288"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.281" endtime="20201030 18:29:59.289"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:59.292" endtime="20201030 18:29:59.312"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.291" endtime="20201030 18:29:59.312"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.289" endtime="20201030 18:29:59.313"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.746" endtime="20201030 18:29:59.313"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:29:58.675" endtime="20201030 18:29:59.313" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:59.320" endtime="20201030 18:29:59.341"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.319" endtime="20201030 18:29:59.342"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:59.374" endtime="20201030 18:29:59.396"></status>
</kw>
<msg timestamp="20201030 18:29:59.397" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:59.371" endtime="20201030 18:29:59.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:59.402" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:59.399" endtime="20201030 18:29:59.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:29:59.408" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:29:59.404" endtime="20201030 18:29:59.409"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:59.365" endtime="20201030 18:29:59.410"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:59.358" endtime="20201030 18:29:59.412"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.354" endtime="20201030 18:29:59.412"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:29:59.420" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:29:59.418" endtime="20201030 18:29:59.420"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.414" endtime="20201030 18:29:59.421"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.352" endtime="20201030 18:29:59.421"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.350" endtime="20201030 18:29:59.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:59.423" endtime="20201030 18:29:59.426"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.347" endtime="20201030 18:29:59.427"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.343" endtime="20201030 18:29:59.428"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.317" endtime="20201030 18:29:59.429"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:59.444" endtime="20201030 18:29:59.472"></status>
</kw>
<msg timestamp="20201030 18:29:59.473" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:59.443" endtime="20201030 18:29:59.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:59.475" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:59.474" endtime="20201030 18:29:59.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:59.476" endtime="20201030 18:29:59.478"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.438" endtime="20201030 18:29:59.478"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.434" endtime="20201030 18:29:59.479"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:59.481" endtime="20201030 18:29:59.482"></status>
</kw>
<msg timestamp="20201030 18:29:59.483" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 18:29:59.479" endtime="20201030 18:29:59.483"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:59.487" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:29:59.486" endtime="20201030 18:29:59.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:59.489" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:29:59.488" endtime="20201030 18:29:59.489"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.484" endtime="20201030 18:29:59.490"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:59.493" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:29:59.492" endtime="20201030 18:29:59.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:59.495" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:29:59.495" endtime="20201030 18:29:59.496"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.490" endtime="20201030 18:29:59.496"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:59.503" endtime="20201030 18:29:59.800"></status>
</kw>
<msg timestamp="20201030 18:29:59.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.119702972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.119720903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:59.501" endtime="20201030 18:29:59.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:59.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.119702972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.119720903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:59.804" endtime="20201030 18:29:59.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:59.813" endtime="20201030 18:29:59.814"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.499" endtime="20201030 18:29:59.815"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.497" endtime="20201030 18:29:59.815"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:59.819" level="INFO">${RESULT} = [{'diff': 1.793099999999881e-05}, {'diff': 1.7917000000006178e-05}, {'diff': 1.786099999999402e-05}, {'diff': 1.7902000000000196e-05}, {'diff': 1.7972000000004984e-05}, {'diff': 1.79169999999923e-05},...</msg>
<status status="PASS" starttime="20201030 18:29:59.816" endtime="20201030 18:29:59.819"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:29:59.824" level="INFO">${OVERHEAD} = {'diff': [1.793099999999881e-05, 1.7917000000006178e-05, 1.786099999999402e-05, 1.7902000000000196e-05, 1.7972000000004984e-05, 1.79169999999923e-05, 1.7917000000006178e-05, 1.783299999999488e-05, 1.7...</msg>
<status status="PASS" starttime="20201030 18:29:59.820" endtime="20201030 18:29:59.824"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:59.828" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201030 18:29:59.827" endtime="20201030 18:29:59.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:59.831" level="INFO">VALUE: [1.793099999999881e-05, 1.7917000000006178e-05, 1.786099999999402e-05, 1.7902000000000196e-05, 1.7972000000004984e-05, 1.79169999999923e-05, 1.7917000000006178e-05, 1.783299999999488e-05, 1.7917000000006178e-05, 1.7944000000005844e-05, 1.788899999999316e-05, 1.7929999999999335e-05, 1.7916000000006704e-05, 1.7943999999991966e-05, 1.7971999999991106e-05, 1.788899999999316e-05, 1.788899999999316e-05, 1.7929999999999335e-05, 1.787500000000053e-05, 1.79169999999923e-05, 1.7902000000000196e-05, 1.7945000000005318e-05, 1.7916000000006704e-05, 1.790299999999967e-05, 1.788899999999316e-05, 1.7889000000007038e-05, 1.793099999999881e-05, 1.7889000000007038e-05, 1.790299999999967e-05, 1.7902000000000196e-05, 1.7972000000004984e-05, 1.7915999999992827e-05, 1.7916000000006704e-05, 1.790299999999967e-05, 1.7887999999993687e-05, 1.790299999999967e-05, 1.790299999999967e-05, 1.7929999999999335e-05, 1.783300000000876e-05, 1.787500000000053e-05, 1.7917000000006178e-05, 1.793099999999881e-05, 1.790299999999967e-05, 1.788899999999316e-05, 1.7889000000007038e-05, 1.7889000000007038e-05, 1.788899999999316e-05, 1.786099999999402e-05, 1.787500000000053e-05, 1.7957999999998475e-05]</msg>
<status status="PASS" starttime="20201030 18:29:59.829" endtime="20201030 18:29:59.831"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.825" endtime="20201030 18:29:59.832"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:59.835" endtime="20201030 18:29:59.855"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.834" endtime="20201030 18:29:59.855"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.833" endtime="20201030 18:29:59.856"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.430" endtime="20201030 18:29:59.856"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:29:59.315" endtime="20201030 18:29:59.857" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:59.863" endtime="20201030 18:29:59.883"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.862" endtime="20201030 18:29:59.883"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:59.897" endtime="20201030 18:29:59.915"></status>
</kw>
<msg timestamp="20201030 18:29:59.915" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:59.896" endtime="20201030 18:29:59.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:59.918" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:59.916" endtime="20201030 18:29:59.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:29:59.921" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:29:59.919" endtime="20201030 18:29:59.922"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:59.893" endtime="20201030 18:29:59.926"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:59.891" endtime="20201030 18:29:59.926"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.890" endtime="20201030 18:29:59.927"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:29:59.933" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:29:59.931" endtime="20201030 18:29:59.935"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.928" endtime="20201030 18:29:59.935"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.889" endtime="20201030 18:29:59.935"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.888" endtime="20201030 18:29:59.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:59.937" endtime="20201030 18:29:59.939"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.886" endtime="20201030 18:29:59.940"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.884" endtime="20201030 18:29:59.944"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.861" endtime="20201030 18:29:59.944"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:59.958" endtime="20201030 18:30:00.034"></status>
</kw>
<msg timestamp="20201030 18:30:00.034" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:59.956" endtime="20201030 18:30:00.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:00.037" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:00.035" endtime="20201030 18:30:00.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:00.038" endtime="20201030 18:30:00.039"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.950" endtime="20201030 18:30:00.040"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.947" endtime="20201030 18:30:00.040"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:00.042" endtime="20201030 18:30:00.044"></status>
</kw>
<msg timestamp="20201030 18:30:00.044" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 18:30:00.041" endtime="20201030 18:30:00.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:00.052" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:30:00.047" endtime="20201030 18:30:00.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:00.055" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:30:00.054" endtime="20201030 18:30:00.055"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.045" endtime="20201030 18:30:00.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:00.059" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:30:00.058" endtime="20201030 18:30:00.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:00.061" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:30:00.060" endtime="20201030 18:30:00.062"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.056" endtime="20201030 18:30:00.062"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:00.069" endtime="20201030 18:30:00.384"></status>
</kw>
<msg timestamp="20201030 18:30:00.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.089643278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.089672764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:00.067" endtime="20201030 18:30:00.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:00.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.089643278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.089672764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:00.388" endtime="20201030 18:30:00.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:00.396" endtime="20201030 18:30:00.398"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.065" endtime="20201030 18:30:00.399"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.063" endtime="20201030 18:30:00.399"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:00.403" level="INFO">${RESULT} = [{'diff': 2.9485999999995238e-05}, {'diff': 2.942999999999696e-05}, {'diff': 2.9500000000001747e-05}, {'diff': 2.9485999999995238e-05}, {'diff': 2.9485999999995238e-05}, {'diff': 2.9430000000010836e-0...</msg>
<status status="PASS" starttime="20201030 18:30:00.400" endtime="20201030 18:30:00.404"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:00.408" level="INFO">${OVERHEAD} = {'diff': [2.9485999999995238e-05, 2.942999999999696e-05, 2.9500000000001747e-05, 2.9485999999995238e-05, 2.9485999999995238e-05, 2.9430000000010836e-05, 2.9542000000007396e-05, 2.949999999998787e-05, ...</msg>
<status status="PASS" starttime="20201030 18:30:00.404" endtime="20201030 18:30:00.408"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:00.413" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201030 18:30:00.412" endtime="20201030 18:30:00.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:00.415" level="INFO">VALUE: [2.9485999999995238e-05, 2.942999999999696e-05, 2.9500000000001747e-05, 2.9485999999995238e-05, 2.9485999999995238e-05, 2.9430000000010836e-05, 2.9542000000007396e-05, 2.949999999998787e-05, 2.9360999999991644e-05, 2.944399999998959e-05, 2.9416999999989923e-05, 2.9458000000009976e-05, 2.944500000000294e-05, 2.9458999999995572e-05, 2.944399999998959e-05, 2.9444000000003467e-05, 2.942999999999696e-05, 2.9444000000003467e-05, 2.9388999999990784e-05, 2.94579999999961e-05, 2.94170000000038e-05, 2.9500000000001747e-05, 2.9430999999996432e-05, 2.9513999999994378e-05, 2.942999999999696e-05, 2.945900000000945e-05, 2.9500000000001747e-05, 2.9514000000008256e-05, 2.9430999999996432e-05, 2.9513999999994378e-05, 2.9500000000001747e-05, 2.947300000000208e-05, 2.9514000000008256e-05, 2.9444999999989063e-05, 2.9500000000001747e-05, 2.94579999999961e-05, 2.9430999999996432e-05, 2.94170000000038e-05, 2.944399999998959e-05, 2.9458000000009976e-05, 2.945799999998222e-05, 2.944399999998959e-05, 2.942999999999696e-05, 2.9486000000022994e-05, 2.9486999999994712e-05, 2.94170000000038e-05, 2.9430000000024714e-05, 2.94170000000038e-05, 2.942999999999696e-05, 2.9472000000002607e-05]</msg>
<status status="PASS" starttime="20201030 18:30:00.414" endtime="20201030 18:30:00.416"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.408" endtime="20201030 18:30:00.416"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:00.420" endtime="20201030 18:30:00.439"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.418" endtime="20201030 18:30:00.440"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.417" endtime="20201030 18:30:00.440"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.945" endtime="20201030 18:30:00.441"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:29:59.858" endtime="20201030 18:30:00.441" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:00.448" endtime="20201030 18:30:00.467"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.446" endtime="20201030 18:30:00.468"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:00.481" endtime="20201030 18:30:00.498"></status>
</kw>
<msg timestamp="20201030 18:30:00.499" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:00.479" endtime="20201030 18:30:00.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:00.501" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:00.500" endtime="20201030 18:30:00.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:30:00.504" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:30:00.502" endtime="20201030 18:30:00.505"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:00.477" endtime="20201030 18:30:00.505"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:00.474" endtime="20201030 18:30:00.506"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.473" endtime="20201030 18:30:00.506"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:30:00.510" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:30:00.509" endtime="20201030 18:30:00.511"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.507" endtime="20201030 18:30:00.511"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.472" endtime="20201030 18:30:00.511"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.472" endtime="20201030 18:30:00.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:00.512" endtime="20201030 18:30:00.514"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.470" endtime="20201030 18:30:00.514"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.469" endtime="20201030 18:30:00.514"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.445" endtime="20201030 18:30:00.515"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:00.524" endtime="20201030 18:30:00.700"></status>
</kw>
<msg timestamp="20201030 18:30:00.701" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:00.523" endtime="20201030 18:30:00.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:00.703" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:00.702" endtime="20201030 18:30:00.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:00.704" endtime="20201030 18:30:00.706"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.519" endtime="20201030 18:30:00.706"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.517" endtime="20201030 18:30:00.707"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:00.709" endtime="20201030 18:30:00.710"></status>
</kw>
<msg timestamp="20201030 18:30:00.711" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 18:30:00.708" endtime="20201030 18:30:00.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:00.715" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:30:00.714" endtime="20201030 18:30:00.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:00.717" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:30:00.716" endtime="20201030 18:30:00.717"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.712" endtime="20201030 18:30:00.718"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:00.722" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:30:00.721" endtime="20201030 18:30:00.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:00.724" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:30:00.723" endtime="20201030 18:30:00.724"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.718" endtime="20201030 18:30:00.725"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:00.731" endtime="20201030 18:30:01.040"></status>
</kw>
<msg timestamp="20201030 18:30:01.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074056347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074094194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:00.730" endtime="20201030 18:30:01.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:01.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074056347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074094194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:01.049" endtime="20201030 18:30:01.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:01.059" endtime="20201030 18:30:01.061"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.727" endtime="20201030 18:30:01.062"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.725" endtime="20201030 18:30:01.062"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:01.066" level="INFO">${RESULT} = [{'diff': 3.7847000000007514e-05}, {'diff': 3.773599999999655e-05}, {'diff': 3.772200000000392e-05}, {'diff': 3.7805000000001865e-05}, {'diff': 3.772199999999004e-05}, {'diff': 3.775000000000306e-05},...</msg>
<status status="PASS" starttime="20201030 18:30:01.063" endtime="20201030 18:30:01.066"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:01.071" level="INFO">${OVERHEAD} = {'diff': [3.7847000000007514e-05, 3.773599999999655e-05, 3.772200000000392e-05, 3.7805000000001865e-05, 3.772199999999004e-05, 3.775000000000306e-05, 3.773599999999655e-05, 3.7791000000009234e-05, 3.7...</msg>
<status status="PASS" starttime="20201030 18:30:01.067" endtime="20201030 18:30:01.071"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:01.076" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201030 18:30:01.075" endtime="20201030 18:30:01.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:01.078" level="INFO">VALUE: [3.7847000000007514e-05, 3.773599999999655e-05, 3.772200000000392e-05, 3.7805000000001865e-05, 3.772199999999004e-05, 3.775000000000306e-05, 3.773599999999655e-05, 3.7791000000009234e-05, 3.772200000000392e-05, 3.7805000000001865e-05, 3.780600000000134e-05, 3.775000000000306e-05, 3.7680999999997744e-05, 3.779199999999483e-05, 3.779199999999483e-05, 3.77780000000022e-05, 3.7818999999994496e-05, 3.780600000000134e-05, 3.779200000000871e-05, 3.775000000000306e-05, 3.773600000001043e-05, 3.776399999999569e-05, 3.775000000000306e-05, 3.772199999999004e-05, 3.780600000000134e-05, 3.7820000000021725e-05, 3.779200000000871e-05, 3.780600000000134e-05, 3.7847000000007514e-05, 3.775000000000306e-05, 3.775000000000306e-05, 3.775000000000306e-05, 3.7805000000001865e-05, 3.783300000001488e-05, 3.770799999999741e-05, 3.773600000001043e-05, 3.777799999998832e-05, 3.777799999998832e-05, 3.780600000000134e-05, 3.7805000000001865e-05, 3.775000000000306e-05, 3.779200000000871e-05, 3.777799999998832e-05, 3.775000000000306e-05, 3.7791000000009234e-05, 3.780600000000134e-05, 3.776399999999569e-05, 3.7818999999994496e-05, 3.772199999999004e-05, 3.7722999999989515e-05]</msg>
<status status="PASS" starttime="20201030 18:30:01.077" endtime="20201030 18:30:01.079"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:01.072" endtime="20201030 18:30:01.079"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:01.083" endtime="20201030 18:30:01.102"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:01.081" endtime="20201030 18:30:01.103"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:01.080" endtime="20201030 18:30:01.103"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.515" endtime="20201030 18:30:01.103"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:30:00.443" endtime="20201030 18:30:01.104" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:01.110" endtime="20201030 18:30:01.130"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:01.109" endtime="20201030 18:30:01.130"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:01.144" endtime="20201030 18:30:01.162"></status>
</kw>
<msg timestamp="20201030 18:30:01.162" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:01.142" endtime="20201030 18:30:01.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:01.165" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:01.163" endtime="20201030 18:30:01.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:30:01.168" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:30:01.166" endtime="20201030 18:30:01.168"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:01.139" endtime="20201030 18:30:01.169"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:01.137" endtime="20201030 18:30:01.169"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:01.136" endtime="20201030 18:30:01.170"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:30:01.174" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:30:01.173" endtime="20201030 18:30:01.174"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:01.171" endtime="20201030 18:30:01.174"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:01.135" endtime="20201030 18:30:01.174"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:01.134" endtime="20201030 18:30:01.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:01.175" endtime="20201030 18:30:01.177"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:01.133" endtime="20201030 18:30:01.177"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:01.131" endtime="20201030 18:30:01.178"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:01.108" endtime="20201030 18:30:01.178"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:30:01.182" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:30:01.190" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:30:02.337" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:30:01.180" endtime="20201030 18:30:02.338"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:30:02.341" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 18:30:02.339" endtime="20201030 18:30:02.341"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:01.179" endtime="20201030 18:30:02.342"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:02.351" endtime="20201030 18:30:02.362"></status>
</kw>
<msg timestamp="20201030 18:30:02.362" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:02.350" endtime="20201030 18:30:02.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:02.365" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:02.363" endtime="20201030 18:30:02.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:02.366" endtime="20201030 18:30:02.368"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:02.347" endtime="20201030 18:30:02.368"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:02.345" endtime="20201030 18:30:02.369"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:02.375" endtime="20201030 18:30:02.679"></status>
</kw>
<msg timestamp="20201030 18:30:02.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.169205528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.169212653, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 18:30:02.374" endtime="20201030 18:30:02.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:02.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.169205528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.169212653, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 18:30:02.684" endtime="20201030 18:30:02.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:02.694" endtime="20201030 18:30:02.696"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:02.371" endtime="20201030 18:30:02.697"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:02.369" endtime="20201030 18:30:02.697"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:02.702" level="INFO">${PHILIP_RES} = [{'diff': 0}, {'diff': 7.124999999996717e-06}, {'diff': 7.056000000060791e-06}, {'diff': 7.110999999948575e-06}, {'diff': 7.124999999996717e-06}, {'diff': 7.1390000000448595e-06}, {'diff': 7.096999999...</msg>
<status status="PASS" starttime="20201030 18:30:02.698" endtime="20201030 18:30:02.703"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:02.708" level="INFO">${RESULT} = {'diff': [0, 7.124999999996717e-06, 7.056000000060791e-06, 7.110999999948575e-06, 7.124999999996717e-06, 7.1390000000448595e-06, 7.096999999900433e-06, 7.1390000000448595e-06, 7.110999999948575e-06, 7...</msg>
<status status="PASS" starttime="20201030 18:30:02.704" endtime="20201030 18:30:02.709"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:02.714" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:02.713" endtime="20201030 18:30:02.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:02.718" level="INFO">VALUE: [0, 7.124999999996717e-06, 7.056000000060791e-06, 7.110999999948575e-06, 7.124999999996717e-06, 7.1390000000448595e-06, 7.096999999900433e-06, 7.1390000000448595e-06, 7.110999999948575e-06, 7.1660000000584034e-06, 7.1390000000448595e-06, 7.1390000000448595e-06, 7.124999999996717e-06, 7.124999999996717e-06, 0.06192431900000006, 1.8249999999886413e-05, 1.8263999999934555e-05, 1.8250000000108457e-05, 1.8250000000108457e-05, 1.829200000003084e-05, 1.8277999999982697e-05, 1.8236000000060315e-05, 1.8250000000108457e-05, 1.8250000000108457e-05, 1.8250000000108457e-05, 1.8305999999856937e-05, 1.8263999999934555e-05, 1.8320000000127123e-05, 1.8236000000060315e-05, 1.8223000000094913e-05, 1.830499999999624e-05, 1.8249999999886413e-05, 1.82640000001566e-05, 1.8277999999982697e-05, 1.82909999999481e-05, 1.8277000000122e-05, 1.8250000000108457e-05, 1.8221999999790128e-05, 1.8334000000175266e-05, 1.8263999999934555e-05, 1.8222000000012173e-05, 1.8277999999982697e-05, 1.8249999999886413e-05, 1.8249999999886413e-05, 1.8250000000108457e-05, 1.8263999999934555e-05, 1.8236000000060315e-05, 1.830600000007898e-05, 1.8263999999934555e-05, 1.82640000001566e-05, 1.826300000007386e-05, 1.823599999983827e-05, 1.8291999999808795e-05, 1.8277999999982697e-05, 1.82640000001566e-05, 1.8263999999934555e-05, 1.8277999999982697e-05, 1.8249999999886413e-05, 1.823599999983827e-05, 1.8346999999918623e-05, 1.833299999987048e-05, 1.8250000000108457e-05, 1.829200000003084e-05, 1.8277999999982697e-05]</msg>
<status status="PASS" starttime="20201030 18:30:02.716" endtime="20201030 18:30:02.718"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:02.710" endtime="20201030 18:30:02.719"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:02.723" endtime="20201030 18:30:02.742"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:02.721" endtime="20201030 18:30:02.743"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:02.720" endtime="20201030 18:30:02.743"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:02.343" endtime="20201030 18:30:02.744"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:02.343" endtime="20201030 18:30:02.744"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:02.752" endtime="20201030 18:30:02.768"></status>
</kw>
<msg timestamp="20201030 18:30:02.769" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:02.751" endtime="20201030 18:30:02.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:02.771" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:02.770" endtime="20201030 18:30:02.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:02.773" endtime="20201030 18:30:02.774"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:02.748" endtime="20201030 18:30:02.775"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:02.746" endtime="20201030 18:30:02.775"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:02.782" endtime="20201030 18:30:03.067"></status>
</kw>
<msg timestamp="20201030 18:30:03.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020650972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020678056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:02.780" endtime="20201030 18:30:03.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:03.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020650972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020678056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:03.072" endtime="20201030 18:30:03.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:03.080" endtime="20201030 18:30:03.082"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:02.778" endtime="20201030 18:30:03.082"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:02.776" endtime="20201030 18:30:03.083"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:03.087" level="INFO">${PHILIP_RES} = [{'diff': 2.7084000000000136e-05}, {'diff': 2.716699999999808e-05}, {'diff': 2.7222000000000357e-05}, {'diff': 2.7165999999998608e-05}, {'diff': 2.7138999999998942e-05}, {'diff': 2.7082999999997193e-0...</msg>
<status status="PASS" starttime="20201030 18:30:03.083" endtime="20201030 18:30:03.087"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:03.091" level="INFO">${RESULT} = {'diff': [2.7084000000000136e-05, 2.716699999999808e-05, 2.7222000000000357e-05, 2.7165999999998608e-05, 2.7138999999998942e-05, 2.7082999999997193e-05, 2.715300000000198e-05, 2.716699999999808e-05, 2...</msg>
<status status="PASS" starttime="20201030 18:30:03.088" endtime="20201030 18:30:03.092"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:03.096" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:03.095" endtime="20201030 18:30:03.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:03.098" level="INFO">VALUE: [2.7084000000000136e-05, 2.716699999999808e-05, 2.7222000000000357e-05, 2.7165999999998608e-05, 2.7138999999998942e-05, 2.7082999999997193e-05, 2.715300000000198e-05, 2.716699999999808e-05, 2.718099999999765e-05, 2.716700000000155e-05, 2.7138999999998942e-05, 2.715299999999851e-05, 2.716700000000155e-05, 2.715300000000198e-05, 2.715299999999851e-05, 2.7166000000002077e-05, 2.7208000000000787e-05, 2.7151999999999038e-05, 2.718100000000112e-05, 2.7221999999996888e-05, 2.716699999999808e-05, 2.7138999999998942e-05, 2.719500000000069e-05, 2.716700000000155e-05, 2.7084000000000136e-05, 2.7249999999999497e-05, 2.715300000000198e-05, 2.718100000000112e-05, 2.7235999999999927e-05, 2.7110999999999802e-05, 2.718100000000112e-05, 2.715300000000198e-05, 2.719499999999722e-05, 2.715299999999851e-05, 2.7208000000000787e-05, 2.7110999999999802e-05, 2.716700000000155e-05, 2.7151999999999038e-05, 2.7082999999997193e-05, 2.718100000000112e-05, 2.715299999999851e-05, 2.719499999999722e-05, 2.719500000000069e-05, 2.7208000000000787e-05, 2.7138999999998942e-05, 2.7222000000000357e-05, 2.7084000000000136e-05, 2.7207999999997318e-05, 2.716700000000155e-05, 2.7137999999999468e-05]</msg>
<status status="PASS" starttime="20201030 18:30:03.097" endtime="20201030 18:30:03.099"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.092" endtime="20201030 18:30:03.100"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:03.104" endtime="20201030 18:30:03.123"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.102" endtime="20201030 18:30:03.124"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.101" endtime="20201030 18:30:03.124"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:02.745" endtime="20201030 18:30:03.124"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:02.744" endtime="20201030 18:30:03.124"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:03.133" endtime="20201030 18:30:03.151"></status>
</kw>
<msg timestamp="20201030 18:30:03.151" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:03.131" endtime="20201030 18:30:03.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:03.154" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:03.152" endtime="20201030 18:30:03.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:03.155" endtime="20201030 18:30:03.156"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.129" endtime="20201030 18:30:03.157"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.127" endtime="20201030 18:30:03.157"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:03.164" endtime="20201030 18:30:03.466"></status>
</kw>
<msg timestamp="20201030 18:30:03.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021825333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021860972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:03.162" endtime="20201030 18:30:03.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:03.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021825333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021860972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:03.473" endtime="20201030 18:30:03.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:03.485" endtime="20201030 18:30:03.488"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.159" endtime="20201030 18:30:03.489"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.158" endtime="20201030 18:30:03.490"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:03.495" level="INFO">${PHILIP_RES} = [{'diff': 3.5639000000000504e-05}, {'diff': 3.568099999999921e-05}, {'diff': 3.567999999999974e-05}, {'diff': 3.5653000000000074e-05}, {'diff': 3.5652999999996604e-05}, {'diff': 3.568100000000268e-05}...</msg>
<status status="PASS" starttime="20201030 18:30:03.491" endtime="20201030 18:30:03.495"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:03.500" level="INFO">${RESULT} = {'diff': [3.5639000000000504e-05, 3.568099999999921e-05, 3.567999999999974e-05, 3.5653000000000074e-05, 3.5652999999996604e-05, 3.568100000000268e-05, 3.5653000000000074e-05, 3.569499999999878e-05, 3....</msg>
<status status="PASS" starttime="20201030 18:30:03.496" endtime="20201030 18:30:03.500"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:03.506" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:03.505" endtime="20201030 18:30:03.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:03.509" level="INFO">VALUE: [3.5639000000000504e-05, 3.568099999999921e-05, 3.567999999999974e-05, 3.5653000000000074e-05, 3.5652999999996604e-05, 3.568100000000268e-05, 3.5653000000000074e-05, 3.569499999999878e-05, 3.569399999999931e-05, 3.5653000000000074e-05, 3.570800000000235e-05, 3.573600000000149e-05, 3.569399999999931e-05, 3.5639000000000504e-05, 3.5666999999999643e-05, 3.573599999999802e-05, 3.573600000000149e-05, 3.568099999999921e-05, 3.567999999999974e-05, 3.5653000000000074e-05, 3.572200000000192e-05, 3.572199999999845e-05, 3.5666999999999643e-05, 3.573600000000149e-05, 3.568099999999921e-05, 3.5653000000000074e-05, 3.568099999999921e-05, 3.5639000000000504e-05, 3.568099999999921e-05, 3.570899999999835e-05, 3.569499999999878e-05, 3.572199999999845e-05, 3.5666999999999643e-05, 3.569500000000225e-05, 3.573599999999802e-05, 3.5639000000000504e-05, 3.572199999999845e-05, 3.56520000000006e-05, 3.569500000000225e-05, 3.579199999999977e-05, 3.5666999999999643e-05, 3.573599999999802e-05, 3.5639000000000504e-05, 3.569499999999878e-05, 3.5653000000000074e-05, 3.573599999999802e-05, 3.5639000000000504e-05, 3.566700000000311e-05, 3.5653000000000074e-05, 3.573600000000149e-05]</msg>
<status status="PASS" starttime="20201030 18:30:03.508" endtime="20201030 18:30:03.509"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.501" endtime="20201030 18:30:03.510"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:03.514" endtime="20201030 18:30:03.534"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.512" endtime="20201030 18:30:03.535"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.511" endtime="20201030 18:30:03.535"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.125" endtime="20201030 18:30:03.536"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.125" endtime="20201030 18:30:03.536"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:03.547" endtime="20201030 18:30:03.562"></status>
</kw>
<msg timestamp="20201030 18:30:03.563" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:03.545" endtime="20201030 18:30:03.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:03.565" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:03.564" endtime="20201030 18:30:03.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:03.566" endtime="20201030 18:30:03.568"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.542" endtime="20201030 18:30:03.569"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.539" endtime="20201030 18:30:03.569"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:03.576" endtime="20201030 18:30:03.862"></status>
</kw>
<msg timestamp="20201030 18:30:03.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022536389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022580736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:03.574" endtime="20201030 18:30:03.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:03.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022536389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022580736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:03.866" endtime="20201030 18:30:03.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:03.875" endtime="20201030 18:30:03.878"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.571" endtime="20201030 18:30:03.878"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.570" endtime="20201030 18:30:03.879"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:03.883" level="INFO">${PHILIP_RES} = [{'diff': 4.4347000000000136e-05}, {'diff': 4.445800000000069e-05}, {'diff': 4.448599999999983e-05}, {'diff': 4.448599999999983e-05}, {'diff': 4.4459000000000165e-05}, {'diff': 4.445799999999722e-05},...</msg>
<status status="PASS" starttime="20201030 18:30:03.880" endtime="20201030 18:30:03.883"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:03.887" level="INFO">${RESULT} = {'diff': [4.4347000000000136e-05, 4.445800000000069e-05, 4.448599999999983e-05, 4.448599999999983e-05, 4.4459000000000165e-05, 4.445799999999722e-05, 4.448599999999983e-05, 4.4444999999997126e-05, 4.4...</msg>
<status status="PASS" starttime="20201030 18:30:03.884" endtime="20201030 18:30:03.887"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:03.892" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:03.891" endtime="20201030 18:30:03.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:03.894" level="INFO">VALUE: [4.4347000000000136e-05, 4.445800000000069e-05, 4.448599999999983e-05, 4.448599999999983e-05, 4.4459000000000165e-05, 4.445799999999722e-05, 4.448599999999983e-05, 4.4444999999997126e-05, 4.451399999999897e-05, 4.441599999999851e-05, 4.444400000000112e-05, 4.4416999999997986e-05, 4.451400000000244e-05, 4.448599999999983e-05, 4.447200000000026e-05, 4.445799999999722e-05, 4.44999999999994e-05, 4.445800000000069e-05, 4.4402999999998416e-05, 4.4416999999997986e-05, 4.4445000000000595e-05, 4.448599999999983e-05, 4.4388999999998846e-05, 4.444400000000112e-05, 4.452699999999907e-05, 4.4431000000001025e-05, 4.4388999999998846e-05, 4.44999999999994e-05, 4.448599999999983e-05, 4.447200000000026e-05, 4.444400000000112e-05, 4.4431000000001025e-05, 4.44999999999994e-05, 4.4416999999997986e-05, 4.4431000000001025e-05, 4.4417000000001455e-05, 4.444399999999765e-05, 4.443000000000155e-05, 4.4416999999997986e-05, 4.4431000000001025e-05, 4.4445000000000595e-05, 4.4430999999997556e-05, 4.451399999999897e-05, 4.4459000000000165e-05, 4.44999999999994e-05, 4.445800000000069e-05, 4.4388999999998846e-05, 4.4459000000000165e-05, 4.444399999999765e-05, 4.44999999999994e-05]</msg>
<status status="PASS" starttime="20201030 18:30:03.893" endtime="20201030 18:30:03.895"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.888" endtime="20201030 18:30:03.895"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:03.899" endtime="20201030 18:30:03.918"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.897" endtime="20201030 18:30:03.919"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.896" endtime="20201030 18:30:03.919"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.537" endtime="20201030 18:30:03.920"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.536" endtime="20201030 18:30:03.920"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:03.930" endtime="20201030 18:30:03.954"></status>
</kw>
<msg timestamp="20201030 18:30:03.955" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:03.927" endtime="20201030 18:30:03.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:03.959" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:03.956" endtime="20201030 18:30:03.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:03.961" endtime="20201030 18:30:03.963"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.924" endtime="20201030 18:30:03.964"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.922" endtime="20201030 18:30:03.964"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:03.971" endtime="20201030 18:30:04.257"></status>
</kw>
<msg timestamp="20201030 18:30:04.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025192431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025245819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:03.969" endtime="20201030 18:30:04.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:04.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025192431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025245819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:04.262" endtime="20201030 18:30:04.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:04.270" endtime="20201030 18:30:04.272"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.966" endtime="20201030 18:30:04.272"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.965" endtime="20201030 18:30:04.273"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:04.277" level="INFO">${PHILIP_RES} = [{'diff': 5.3387999999997965e-05}, {'diff': 5.354200000000017e-05}, {'diff': 5.3471999999998854e-05}, {'diff': 5.341700000000005e-05}, {'diff': 5.3443999999999714e-05}, {'diff': 5.341700000000005e-05}...</msg>
<status status="PASS" starttime="20201030 18:30:04.274" endtime="20201030 18:30:04.277"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:04.281" level="INFO">${RESULT} = {'diff': [5.3387999999997965e-05, 5.354200000000017e-05, 5.3471999999998854e-05, 5.341700000000005e-05, 5.3443999999999714e-05, 5.341700000000005e-05, 5.3430000000000144e-05, 5.338900000000091e-05, 5....</msg>
<status status="PASS" starttime="20201030 18:30:04.278" endtime="20201030 18:30:04.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:04.286" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:04.285" endtime="20201030 18:30:04.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:04.288" level="INFO">VALUE: [5.3387999999997965e-05, 5.354200000000017e-05, 5.3471999999998854e-05, 5.341700000000005e-05, 5.3443999999999714e-05, 5.341700000000005e-05, 5.3430000000000144e-05, 5.338900000000091e-05, 5.352700000000113e-05, 5.354200000000017e-05, 5.354200000000017e-05, 5.354200000000017e-05, 5.343099999999962e-05, 5.3513999999997564e-05, 5.3499999999997994e-05, 5.3471999999998854e-05, 5.350000000000146e-05, 5.358399999999888e-05, 5.355599999999974e-05, 5.341700000000005e-05, 5.3499999999997994e-05, 5.3443999999999714e-05, 5.345899999999876e-05, 5.354200000000017e-05, 5.3527999999997133e-05, 5.34730000000018e-05, 5.351400000000103e-05, 5.3499999999997994e-05, 5.354200000000017e-05, 5.35280000000006e-05, 5.3457999999999284e-05, 5.3499999999997994e-05, 5.350000000000146e-05, 5.355599999999974e-05, 5.3485999999998424e-05, 5.354200000000017e-05, 5.344499999999919e-05, 5.345899999999876e-05, 5.351400000000103e-05, 5.344499999999919e-05, 5.3527999999997133e-05, 5.3499999999997994e-05, 5.35549999999968e-05, 5.3485999999998424e-05, 5.3430000000000144e-05, 5.3513999999997564e-05, 5.3443999999999714e-05, 5.352699999999766e-05, 5.3457999999999284e-05, 5.354200000000364e-05]</msg>
<status status="PASS" starttime="20201030 18:30:04.287" endtime="20201030 18:30:04.290"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.282" endtime="20201030 18:30:04.290"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:04.294" endtime="20201030 18:30:04.314"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.293" endtime="20201030 18:30:04.315"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.291" endtime="20201030 18:30:04.315"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.921" endtime="20201030 18:30:04.315"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.920" endtime="20201030 18:30:04.315"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:04.325" endtime="20201030 18:30:04.346"></status>
</kw>
<msg timestamp="20201030 18:30:04.347" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:04.323" endtime="20201030 18:30:04.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:04.349" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:04.348" endtime="20201030 18:30:04.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:04.351" endtime="20201030 18:30:04.352"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.320" endtime="20201030 18:30:04.353"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.318" endtime="20201030 18:30:04.353"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:04.360" endtime="20201030 18:30:04.646"></status>
</kw>
<msg timestamp="20201030 18:30:04.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021765486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021828139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:04.358" endtime="20201030 18:30:04.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:04.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021765486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021828139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:04.650" endtime="20201030 18:30:04.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:04.659" endtime="20201030 18:30:04.661"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.356" endtime="20201030 18:30:04.661"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.354" endtime="20201030 18:30:04.662"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:04.666" level="INFO">${PHILIP_RES} = [{'diff': 6.265299999999932e-05}, {'diff': 6.276399999999988e-05}, {'diff': 6.277799999999945e-05}, {'diff': 6.283399999999773e-05}, {'diff': 6.273599999999727e-05}, {'diff': 6.273700000000021e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:30:04.662" endtime="20201030 18:30:04.666"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:04.673" level="INFO">${RESULT} = {'diff': [6.265299999999932e-05, 6.276399999999988e-05, 6.277799999999945e-05, 6.283399999999773e-05, 6.273599999999727e-05, 6.273700000000021e-05, 6.272200000000117e-05, 6.27080000000016e-05, 6.27090...</msg>
<status status="PASS" starttime="20201030 18:30:04.667" endtime="20201030 18:30:04.674"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:04.678" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:04.677" endtime="20201030 18:30:04.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:04.681" level="INFO">VALUE: [6.265299999999932e-05, 6.276399999999988e-05, 6.277799999999945e-05, 6.283399999999773e-05, 6.273599999999727e-05, 6.273700000000021e-05, 6.272200000000117e-05, 6.27080000000016e-05, 6.270900000000107e-05, 6.277799999999945e-05, 6.279099999999954e-05, 6.280499999999911e-05, 6.290299999999957e-05, 6.280500000000258e-05, 6.265199999999985e-05, 6.272300000000064e-05, 6.279199999999902e-05, 6.279199999999902e-05, 6.280499999999911e-05, 6.273600000000074e-05, 6.273600000000074e-05, 6.27219999999977e-05, 6.27500000000003e-05, 6.281899999999868e-05, 6.270799999999813e-05, 6.26950000000015e-05, 6.279200000000248e-05, 6.268000000000246e-05, 6.280500000000258e-05, 6.270900000000107e-05, 6.279200000000248e-05, 6.280499999999911e-05, 6.282000000000162e-05, 6.276399999999988e-05, 6.27089999999976e-05, 6.277799999999945e-05, 6.283299999999825e-05, 6.27500000000003e-05, 6.273700000000021e-05, 6.276399999999988e-05, 6.277799999999945e-05, 6.283299999999825e-05, 6.266599999999942e-05, 6.280599999999859e-05, 6.26950000000015e-05, 6.279199999999902e-05, 6.269399999999856e-05, 6.283299999999825e-05, 6.281900000000215e-05, 6.27219999999977e-05]</msg>
<status status="PASS" starttime="20201030 18:30:04.679" endtime="20201030 18:30:04.681"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.674" endtime="20201030 18:30:04.682"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:04.685" endtime="20201030 18:30:04.705"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.684" endtime="20201030 18:30:04.705"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.683" endtime="20201030 18:30:04.706"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.316" endtime="20201030 18:30:04.706"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.316" endtime="20201030 18:30:04.706"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:04.720" endtime="20201030 18:30:04.743"></status>
</kw>
<msg timestamp="20201030 18:30:04.744" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:04.718" endtime="20201030 18:30:04.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:04.746" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:04.745" endtime="20201030 18:30:04.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:04.747" endtime="20201030 18:30:04.749"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.715" endtime="20201030 18:30:04.749"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.710" endtime="20201030 18:30:04.750"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:04.757" endtime="20201030 18:30:05.043"></status>
</kw>
<msg timestamp="20201030 18:30:05.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027642375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027714597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:04.755" endtime="20201030 18:30:05.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:05.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027642375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027714597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:05.047" endtime="20201030 18:30:05.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:05.055" endtime="20201030 18:30:05.057"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.753" endtime="20201030 18:30:05.058"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.750" endtime="20201030 18:30:05.058"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:05.062" level="INFO">${PHILIP_RES} = [{'diff': 7.222200000000026e-05}, {'diff': 7.219500000000059e-05}, {'diff': 7.219499999999712e-05}, {'diff': 7.216700000000145e-05}, {'diff': 7.227800000000201e-05}, {'diff': 7.216699999999798e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:30:05.059" endtime="20201030 18:30:05.062"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:05.066" level="INFO">${RESULT} = {'diff': [7.222200000000026e-05, 7.219500000000059e-05, 7.219499999999712e-05, 7.216700000000145e-05, 7.227800000000201e-05, 7.216699999999798e-05, 7.226399999999897e-05, 7.227799999999854e-05, 7.2208...</msg>
<status status="PASS" starttime="20201030 18:30:05.063" endtime="20201030 18:30:05.066"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:05.070" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:05.069" endtime="20201030 18:30:05.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:05.073" level="INFO">VALUE: [7.222200000000026e-05, 7.219500000000059e-05, 7.219499999999712e-05, 7.216700000000145e-05, 7.227800000000201e-05, 7.216699999999798e-05, 7.226399999999897e-05, 7.227799999999854e-05, 7.220800000000069e-05, 7.223599999999983e-05, 7.230600000000115e-05, 7.225000000000287e-05, 7.229199999999811e-05, 7.22499999999994e-05, 7.219399999999765e-05, 7.230500000000167e-05, 7.22629999999995e-05, 7.222199999999679e-05, 7.233300000000081e-05, 7.218100000000449e-05, 7.222199999999679e-05, 7.234700000000038e-05, 7.219399999999765e-05, 7.22639999999955e-05, 7.233300000000081e-05, 7.224999999999593e-05, 7.222200000000373e-05, 7.220799999999722e-05, 7.229200000000158e-05, 7.230600000000115e-05, 7.227800000000201e-05, 7.220900000000363e-05, 7.227800000000201e-05, 7.226400000000244e-05, 7.219400000000459e-05, 7.229099999999516e-05, 7.219400000000459e-05, 7.224999999999593e-05, 7.230500000000167e-05, 7.227799999999507e-05, 7.227700000000253e-05, 7.229199999999464e-05, 7.22360000000033e-05, 7.237499999999952e-05, 7.230600000000115e-05, 7.22360000000033e-05, 7.227799999999507e-05, 7.218000000000502e-05, 7.22639999999955e-05, 7.219400000000459e-05]</msg>
<status status="PASS" starttime="20201030 18:30:05.072" endtime="20201030 18:30:05.073"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.067" endtime="20201030 18:30:05.074"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:05.077" endtime="20201030 18:30:05.097"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.076" endtime="20201030 18:30:05.097"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.075" endtime="20201030 18:30:05.098"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.707" endtime="20201030 18:30:05.098"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.707" endtime="20201030 18:30:05.098"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:05.106" endtime="20201030 18:30:05.134"></status>
</kw>
<msg timestamp="20201030 18:30:05.134" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:05.105" endtime="20201030 18:30:05.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:05.137" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:05.135" endtime="20201030 18:30:05.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:05.138" endtime="20201030 18:30:05.140"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.102" endtime="20201030 18:30:05.140"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.100" endtime="20201030 18:30:05.141"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:05.147" endtime="20201030 18:30:05.444"></status>
</kw>
<msg timestamp="20201030 18:30:05.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022487542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022569514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:05.146" endtime="20201030 18:30:05.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:05.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022487542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022569514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:05.453" endtime="20201030 18:30:05.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:05.471" endtime="20201030 18:30:05.474"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.143" endtime="20201030 18:30:05.475"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.141" endtime="20201030 18:30:05.476"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:05.484" level="INFO">${PHILIP_RES} = [{'diff': 8.19719999999996e-05}, {'diff': 8.200000000000221e-05}, {'diff': 8.212499999999887e-05}, {'diff': 8.204199999999745e-05}, {'diff': 8.204199999999745e-05}, {'diff': 8.204200000000092e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:30:05.478" endtime="20201030 18:30:05.485"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:05.493" level="INFO">${RESULT} = {'diff': [8.19719999999996e-05, 8.200000000000221e-05, 8.212499999999887e-05, 8.204199999999745e-05, 8.204199999999745e-05, 8.204200000000092e-05, 8.202800000000135e-05, 8.201399999999831e-05, 8.20279...</msg>
<status status="PASS" starttime="20201030 18:30:05.486" endtime="20201030 18:30:05.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:05.498" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:05.497" endtime="20201030 18:30:05.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:05.501" level="INFO">VALUE: [8.19719999999996e-05, 8.200000000000221e-05, 8.212499999999887e-05, 8.204199999999745e-05, 8.204199999999745e-05, 8.204200000000092e-05, 8.202800000000135e-05, 8.201399999999831e-05, 8.202799999999788e-05, 8.202800000000135e-05, 8.208300000000016e-05, 8.201400000000178e-05, 8.199999999999874e-05, 8.201400000000178e-05, 8.200000000000221e-05, 8.205500000000102e-05, 8.201400000000178e-05, 8.201399999999831e-05, 8.202799999999788e-05, 8.202800000000135e-05, 8.204199999999745e-05, 8.201399999999831e-05, 8.204100000000145e-05, 8.205600000000049e-05, 8.208300000000016e-05, 8.205600000000049e-05, 8.20979999999992e-05, 8.204200000000092e-05, 8.195800000000003e-05, 8.206899999999712e-05, 8.21109999999993e-05, 8.200000000000221e-05, 8.202799999999788e-05, 8.206900000000059e-05, 8.204199999999745e-05, 8.205600000000049e-05, 8.197299999999907e-05, 8.202800000000482e-05, 8.212500000000234e-05, 8.205599999999702e-05, 8.20970000000032e-05, 8.199999999999874e-05, 8.209699999999626e-05, 8.205599999999702e-05, 8.211099999999583e-05, 8.21119999999953e-05, 8.201399999999831e-05, 8.202799999999788e-05, 8.201399999999831e-05, 8.211100000000277e-05]</msg>
<status status="PASS" starttime="20201030 18:30:05.499" endtime="20201030 18:30:05.502"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.495" endtime="20201030 18:30:05.503"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:05.506" endtime="20201030 18:30:05.525"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.505" endtime="20201030 18:30:05.526"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.504" endtime="20201030 18:30:05.526"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.099" endtime="20201030 18:30:05.527"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.098" endtime="20201030 18:30:05.527"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:05.535" endtime="20201030 18:30:05.566"></status>
</kw>
<msg timestamp="20201030 18:30:05.567" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:05.534" endtime="20201030 18:30:05.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:05.569" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:05.568" endtime="20201030 18:30:05.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:05.570" endtime="20201030 18:30:05.572"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.531" endtime="20201030 18:30:05.573"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.529" endtime="20201030 18:30:05.573"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:05.579" endtime="20201030 18:30:05.865"></status>
</kw>
<msg timestamp="20201030 18:30:05.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020763528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0208555, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:30:05.578" endtime="20201030 18:30:05.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:05.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020763528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0208555, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:30:05.869" endtime="20201030 18:30:05.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:05.878" endtime="20201030 18:30:05.879"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.575" endtime="20201030 18:30:05.880"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.574" endtime="20201030 18:30:05.880"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:05.885" level="INFO">${PHILIP_RES} = [{'diff': 9.19719999999992e-05}, {'diff': 9.202700000000147e-05}, {'diff': 9.202799999999747e-05}, {'diff': 9.20000000000018e-05}, {'diff': 9.20000000000018e-05}, {'diff': 9.211099999999889e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 18:30:05.881" endtime="20201030 18:30:05.885"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:05.890" level="INFO">${RESULT} = {'diff': [9.19719999999992e-05, 9.202700000000147e-05, 9.202799999999747e-05, 9.20000000000018e-05, 9.20000000000018e-05, 9.211099999999889e-05, 9.211099999999889e-05, 9.209699999999932e-05, 9.2069000...</msg>
<status status="PASS" starttime="20201030 18:30:05.886" endtime="20201030 18:30:05.890"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:05.894" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:05.893" endtime="20201030 18:30:05.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:05.897" level="INFO">VALUE: [9.19719999999992e-05, 9.202700000000147e-05, 9.202799999999747e-05, 9.20000000000018e-05, 9.20000000000018e-05, 9.211099999999889e-05, 9.211099999999889e-05, 9.209699999999932e-05, 9.206900000000018e-05, 9.201400000000137e-05, 9.202700000000147e-05, 9.212499999999846e-05, 9.199999999999833e-05, 9.195799999999962e-05, 9.20130000000019e-05, 9.205500000000061e-05, 9.198599999999876e-05, 9.199999999999833e-05, 9.190300000000082e-05, 9.199999999999833e-05, 9.208399999999922e-05, 9.202799999999747e-05, 9.218000000000073e-05, 9.209699999999932e-05, 9.199999999999833e-05, 9.198600000000223e-05, 9.198599999999876e-05, 9.199999999999833e-05, 9.198599999999876e-05, 9.212499999999846e-05, 9.209700000000279e-05, 9.20000000000018e-05, 9.211099999999889e-05, 9.198600000000223e-05, 9.199999999999833e-05, 9.202800000000094e-05, 9.204200000000051e-05, 9.204099999999757e-05, 9.201400000000137e-05, 9.205500000000061e-05, 9.195900000000257e-05, 9.202800000000094e-05, 9.212499999999846e-05, 9.202800000000094e-05, 9.1945000000003e-05, 9.204100000000104e-05, 9.205500000000061e-05, 9.205600000000008e-05, 9.208299999999975e-05, 9.197300000000214e-05]</msg>
<status status="PASS" starttime="20201030 18:30:05.896" endtime="20201030 18:30:05.897"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.891" endtime="20201030 18:30:05.898"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:05.902" endtime="20201030 18:30:05.921"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.900" endtime="20201030 18:30:05.922"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.899" endtime="20201030 18:30:05.922"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.528" endtime="20201030 18:30:05.922"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.527" endtime="20201030 18:30:05.923"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:05.931" endtime="20201030 18:30:05.959"></status>
</kw>
<msg timestamp="20201030 18:30:05.959" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:05.930" endtime="20201030 18:30:05.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:05.962" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:05.961" endtime="20201030 18:30:05.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:05.963" endtime="20201030 18:30:05.965"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.927" endtime="20201030 18:30:05.965"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.925" endtime="20201030 18:30:05.966"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:05.973" endtime="20201030 18:30:06.278"></status>
</kw>
<msg timestamp="20201030 18:30:06.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022084708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022186986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:05.971" endtime="20201030 18:30:06.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:06.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022084708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022186986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:06.287" endtime="20201030 18:30:06.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:06.304" endtime="20201030 18:30:06.307"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.968" endtime="20201030 18:30:06.308"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.967" endtime="20201030 18:30:06.308"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:06.312" level="INFO">${PHILIP_RES} = [{'diff': 0.00010227799999999732}, {'diff': 0.00010243100000000005}, {'diff': 0.00010234700000000263}, {'diff': 0.00010230599999999992}, {'diff': 0.00010243000000000058}, {'diff': 0.000102305999999999...</msg>
<status status="PASS" starttime="20201030 18:30:06.309" endtime="20201030 18:30:06.312"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:06.316" level="INFO">${RESULT} = {'diff': [0.00010227799999999732, 0.00010243100000000005, 0.00010234700000000263, 0.00010230599999999992, 0.00010243000000000058, 0.00010230599999999992, 0.00010243000000000058, 0.00010234700000000263...</msg>
<status status="PASS" starttime="20201030 18:30:06.313" endtime="20201030 18:30:06.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:06.321" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:06.320" endtime="20201030 18:30:06.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:06.323" level="INFO">VALUE: [0.00010227799999999732, 0.00010243100000000005, 0.00010234700000000263, 0.00010230599999999992, 0.00010243000000000058, 0.00010230599999999992, 0.00010243000000000058, 0.00010234700000000263, 0.0001023749999999983, 0.00010230599999999992, 0.000102416000000001, 0.00010231900000000002, 0.0001023480000000021, 0.00010238900000000134, 0.00010233299999999959, 0.00010241700000000048, 0.00010231900000000002, 0.00010240300000000091, 0.00010234699999999916, 0.00010238900000000134, 0.00010236099999999873, 0.00010234799999999863, 0.00010234799999999863, 0.00010236099999999873, 0.00010225000000000165, 0.00010233399999999906, 0.00010244400000000015, 0.00010230500000000045, 0.00010230599999999992, 0.00010241699999999701, 0.00010231999999999603, 0.00010236099999999526, 0.00010229199999999689, 0.00010243000000000058, 0.00010229200000000382, 0.0001023060000000034, 0.00010230500000000392, 0.00010233299999999612, 0.00010237499999999483, 0.00010226399999999775, 0.00010237500000000177, 0.00010229200000000382, 0.00010226399999999775, 0.0001023610000000022, 0.00010243100000000005, 0.00010234699999999569, 0.00010231899999999655, 0.0001023339999999956, 0.00010236200000000167, 0.00010222200000000597]</msg>
<status status="PASS" starttime="20201030 18:30:06.322" endtime="20201030 18:30:06.324"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:06.317" endtime="20201030 18:30:06.324"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:06.328" endtime="20201030 18:30:06.348"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:06.327" endtime="20201030 18:30:06.348"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:06.325" endtime="20201030 18:30:06.349"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.923" endtime="20201030 18:30:06.349"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.923" endtime="20201030 18:30:06.349"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:06.359" endtime="20201030 18:30:06.390"></status>
</kw>
<msg timestamp="20201030 18:30:06.390" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:06.357" endtime="20201030 18:30:06.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:06.393" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:06.391" endtime="20201030 18:30:06.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:06.394" endtime="20201030 18:30:06.396"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:06.355" endtime="20201030 18:30:06.396"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:06.352" endtime="20201030 18:30:06.397"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:06.404" endtime="20201030 18:30:06.690"></status>
</kw>
<msg timestamp="20201030 18:30:06.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022838556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022951361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:06.402" endtime="20201030 18:30:06.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:06.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022838556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022951361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:06.694" endtime="20201030 18:30:06.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:06.703" endtime="20201030 18:30:06.704"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:06.399" endtime="20201030 18:30:06.705"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:06.397" endtime="20201030 18:30:06.705"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:06.709" level="INFO">${PHILIP_RES} = [{'diff': 0.00011280500000000054}, {'diff': 0.00011284700000000272}, {'diff': 0.00011283399999999916}, {'diff': 0.00011288900000000143}, {'diff': 0.00011286099999999882}, {'diff': 0.000112846999999999...</msg>
<status status="PASS" starttime="20201030 18:30:06.706" endtime="20201030 18:30:06.710"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:06.714" level="INFO">${RESULT} = {'diff': [0.00011280500000000054, 0.00011284700000000272, 0.00011283399999999916, 0.00011288900000000143, 0.00011286099999999882, 0.00011284699999999925, 0.00011288900000000143, 0.0001128749999999984,...</msg>
<status status="PASS" starttime="20201030 18:30:06.710" endtime="20201030 18:30:06.714"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:06.718" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:06.717" endtime="20201030 18:30:06.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:06.721" level="INFO">VALUE: [0.00011280500000000054, 0.00011284700000000272, 0.00011283399999999916, 0.00011288900000000143, 0.00011286099999999882, 0.00011284699999999925, 0.00011288900000000143, 0.0001128749999999984, 0.0001127229999999986, 0.00011284699999999925, 0.0001127359999999987, 0.00011283299999999968, 0.00011286099999999882, 0.0001128749999999984, 0.00011286099999999882, 0.00011286100000000229, 0.00011280600000000002, 0.00011284799999999873, 0.00011287500000000186, 0.00011281900000000011, 0.0001128749999999984, 0.00011286100000000229, 0.00011288900000000143, 0.00011284699999999925, 0.000112903000000001, 0.00011283399999999916, 0.00011279200000000045, 0.0001128890000000049, 0.00011300000000000199, 0.0001128749999999984, 0.00011283300000000662, 0.00011280600000000002, 0.00011290300000000447, 0.00011291600000000457, 0.0001128749999999984, 0.00011276300000000183, 0.00011283299999999968, 0.0001128749999999984, 0.00011284699999999925, 0.00011279200000000045, 0.00011280600000000002, 0.0001128749999999984, 0.00011290199999999806, 0.0001128749999999984, 0.00011279100000000097, 0.00011286099999999882, 0.00011281999999999959, 0.00011284699999999925, 0.0001128749999999984, 0.00011284699999999925]</msg>
<status status="PASS" starttime="20201030 18:30:06.719" endtime="20201030 18:30:06.722"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:06.714" endtime="20201030 18:30:06.723"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:06.726" endtime="20201030 18:30:06.746"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:06.725" endtime="20201030 18:30:06.746"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:06.724" endtime="20201030 18:30:06.747"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:06.350" endtime="20201030 18:30:06.748"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:06.349" endtime="20201030 18:30:06.748"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:06.760" endtime="20201030 18:30:06.792"></status>
</kw>
<msg timestamp="20201030 18:30:06.793" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:06.758" endtime="20201030 18:30:06.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:06.795" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:06.794" endtime="20201030 18:30:06.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:06.797" endtime="20201030 18:30:06.798"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:06.755" endtime="20201030 18:30:06.799"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:06.752" endtime="20201030 18:30:06.799"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:06.806" endtime="20201030 18:30:07.092"></status>
</kw>
<msg timestamp="20201030 18:30:07.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026497556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026621083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:06.805" endtime="20201030 18:30:07.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:07.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026497556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026621083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:07.097" endtime="20201030 18:30:07.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:07.105" endtime="20201030 18:30:07.107"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:06.802" endtime="20201030 18:30:07.107"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:06.800" endtime="20201030 18:30:07.108"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:07.112" level="INFO">${PHILIP_RES} = [{'diff': 0.00012352700000000175}, {'diff': 0.000123568999999997}, {'diff': 0.0001234999999999986}, {'diff': 0.00012352800000000122}, {'diff': 0.00012358400000000297}, {'diff': 0.00012368100000000048}...</msg>
<status status="PASS" starttime="20201030 18:30:07.108" endtime="20201030 18:30:07.112"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:07.117" level="INFO">${RESULT} = {'diff': [0.00012352700000000175, 0.000123568999999997, 0.0001234999999999986, 0.00012352800000000122, 0.00012358400000000297, 0.00012368100000000048, 0.00012351400000000165, 0.00012361100000000264, 0...</msg>
<status status="PASS" starttime="20201030 18:30:07.113" endtime="20201030 18:30:07.117"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:07.121" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:07.120" endtime="20201030 18:30:07.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:07.124" level="INFO">VALUE: [0.00012352700000000175, 0.000123568999999997, 0.0001234999999999986, 0.00012352800000000122, 0.00012358400000000297, 0.00012368100000000048, 0.00012351400000000165, 0.00012361100000000264, 0.00012351399999999818, 0.00012361100000000264, 0.0001234999999999986, 0.00012361099999999917, 0.0001235420000000008, 0.00012362499999999527, 0.00012351399999999818, 0.00012361100000000264, 0.00012351399999999818, 0.00012361100000000264, 0.00012363899999999484, 0.0001234449999999998, 0.00012366700000000092, 0.0001235129999999987, 0.0001236250000000022, 0.00012352799999999775, 0.00012355500000000436, 0.0001236250000000022, 0.0001235700000000034, 0.00012348599999999904, 0.0001236250000000022, 0.00012351399999999818, 0.00012348599999999904, 0.0001236109999999957, 0.000123568999999997, 0.00012354099999999785, 0.00012365200000000187, 0.00012359700000000307, 0.00012361100000000264, 0.00012354200000000426, 0.00012366700000000092, 0.00012348599999999904, 0.00012355499999999742, 0.00012359699999999613, 0.0001236109999999957, 0.0001235559999999969, 0.00012363900000000178, 0.00012361100000000264, 0.00012348700000000545, 0.000123568999999997, 0.00012358299999999656, 0.00012348599999999904]</msg>
<status status="PASS" starttime="20201030 18:30:07.122" endtime="20201030 18:30:07.124"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.118" endtime="20201030 18:30:07.125"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:07.129" endtime="20201030 18:30:07.148"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.127" endtime="20201030 18:30:07.149"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.126" endtime="20201030 18:30:07.149"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:06.750" endtime="20201030 18:30:07.150"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:06.749" endtime="20201030 18:30:07.150"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:07.159" endtime="20201030 18:30:07.190"></status>
</kw>
<msg timestamp="20201030 18:30:07.190" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:07.157" endtime="20201030 18:30:07.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:07.193" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:07.192" endtime="20201030 18:30:07.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:07.194" endtime="20201030 18:30:07.196"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.154" endtime="20201030 18:30:07.196"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.152" endtime="20201030 18:30:07.197"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:07.204" endtime="20201030 18:30:07.490"></status>
</kw>
<msg timestamp="20201030 18:30:07.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020761972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020896542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:07.202" endtime="20201030 18:30:07.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:07.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020761972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020896542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:07.495" endtime="20201030 18:30:07.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:07.503" endtime="20201030 18:30:07.506"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.199" endtime="20201030 18:30:07.506"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.198" endtime="20201030 18:30:07.507"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:07.511" level="INFO">${PHILIP_RES} = [{'diff': 0.00013457000000000052}, {'diff': 0.00013463799999999942}, {'diff': 0.00013458300000000062}, {'diff': 0.0001345410000000019}, {'diff': 0.00013456900000000105}, {'diff': 0.0001345269999999988...</msg>
<status status="PASS" starttime="20201030 18:30:07.507" endtime="20201030 18:30:07.511"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:07.515" level="INFO">${RESULT} = {'diff': [0.00013457000000000052, 0.00013463799999999942, 0.00013458300000000062, 0.0001345410000000019, 0.00013456900000000105, 0.00013452699999999887, 0.00013454200000000138, 0.0001345840000000001, ...</msg>
<status status="PASS" starttime="20201030 18:30:07.512" endtime="20201030 18:30:07.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:07.519" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:07.518" endtime="20201030 18:30:07.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:07.522" level="INFO">VALUE: [0.00013457000000000052, 0.00013463799999999942, 0.00013458300000000062, 0.0001345410000000019, 0.00013456900000000105, 0.00013452699999999887, 0.00013454200000000138, 0.0001345840000000001, 0.00013458300000000062, 0.00013465299999999847, 0.00013451399999999877, 0.0001345970000000002, 0.00013461199999999923, 0.0001345970000000002, 0.00013459799999999966, 0.00013458299999999715, 0.00013461099999999976, 0.00013456900000000105, 0.00013454200000000138, 0.00013451400000000224, 0.0001345280000000018, 0.0001344999999999992, 0.00013450000000000267, 0.00013456899999999758, 0.00013461099999999976, 0.00013461099999999976, 0.0001345970000000002, 0.00013461099999999976, 0.00013455600000000095, 0.00013470799999999727, 0.0001345970000000002, 0.00013461099999999976, 0.0001345970000000002, 0.00013454099999999497, 0.00013454200000000138, 0.00013461099999999976, 0.00013463900000000584, 0.00013455499999999454, 0.00013473599999999641, 0.00013461099999999976, 0.00013463900000000584, 0.00013454200000000138, 0.00013461099999999976, 0.00013461099999999976, 0.0001346660000000055, 0.0001346389999999989, 0.00013455599999999401, 0.00013454200000000138, 0.0001346389999999989, 0.00013461099999999976]</msg>
<status status="PASS" starttime="20201030 18:30:07.520" endtime="20201030 18:30:07.523"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.516" endtime="20201030 18:30:07.523"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:07.527" endtime="20201030 18:30:07.546"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.525" endtime="20201030 18:30:07.547"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.524" endtime="20201030 18:30:07.548"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.151" endtime="20201030 18:30:07.548"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.150" endtime="20201030 18:30:07.548"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:07.557" endtime="20201030 18:30:07.591"></status>
</kw>
<msg timestamp="20201030 18:30:07.592" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:07.555" endtime="20201030 18:30:07.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:07.595" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:07.593" endtime="20201030 18:30:07.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:07.596" endtime="20201030 18:30:07.597"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.553" endtime="20201030 18:30:07.598"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.550" endtime="20201030 18:30:07.599"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:07.605" endtime="20201030 18:30:07.891"></status>
</kw>
<msg timestamp="20201030 18:30:07.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024590667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024736375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:07.604" endtime="20201030 18:30:07.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:07.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024590667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024736375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:07.895" endtime="20201030 18:30:07.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:07.903" endtime="20201030 18:30:07.905"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.601" endtime="20201030 18:30:07.906"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.599" endtime="20201030 18:30:07.906"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:07.910" level="INFO">${PHILIP_RES} = [{'diff': 0.00014570800000000134}, {'diff': 0.00014577799999999919}, {'diff': 0.00014588899999999974}, {'diff': 0.00014594400000000202}, {'diff': 0.00014594499999999802}, {'diff': 0.000145875000000000...</msg>
<status status="PASS" starttime="20201030 18:30:07.907" endtime="20201030 18:30:07.910"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:07.914" level="INFO">${RESULT} = {'diff': [0.00014570800000000134, 0.00014577799999999919, 0.00014588899999999974, 0.00014594400000000202, 0.00014594499999999802, 0.00014587500000000017, 0.00014583300000000146, 0.00014584799999999704...</msg>
<status status="PASS" starttime="20201030 18:30:07.911" endtime="20201030 18:30:07.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:07.919" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:07.918" endtime="20201030 18:30:07.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:07.921" level="INFO">VALUE: [0.00014570800000000134, 0.00014577799999999919, 0.00014588899999999974, 0.00014594400000000202, 0.00014594499999999802, 0.00014587500000000017, 0.00014583300000000146, 0.00014584799999999704, 0.00014576399999999962, 0.000145832999999998, 0.0001459029999999993, 0.00014573600000000048, 0.000145832999999998, 0.0001459029999999993, 0.00014580599999999833, 0.0001458060000000018, 0.00014583300000000493, 0.00014586099999999713, 0.00014586099999999713, 0.00014590300000000278, 0.00014581900000000536, 0.00014590300000000278, 0.00014576399999999962, 0.00014583399999999747, 0.00014577799999999919, 0.00014587500000000364, 0.00014586100000000407, 0.00014588899999999627, 0.000145832999999998, 0.0001458199999999979, 0.00014594400000000202, 0.0001458890000000032, 0.0001458199999999979, 0.00014588899999999627, 0.00014584799999999704, 0.00014576300000000014, 0.00014590299999999584, 0.00014576399999999962, 0.00014584699999999756, 0.00014576399999999962, 0.00014586099999999713, 0.0001458619999999966, 0.00014583399999999747, 0.00014586100000000407, 0.00014584699999999756, 0.00014587500000000364, 0.00014580599999999833, 0.0001458890000000032, 0.00014586200000000354, 0.0001458470000000045]</msg>
<status status="PASS" starttime="20201030 18:30:07.920" endtime="20201030 18:30:07.923"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.915" endtime="20201030 18:30:07.924"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:07.927" endtime="20201030 18:30:07.947"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.926" endtime="20201030 18:30:07.947"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.925" endtime="20201030 18:30:07.948"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.549" endtime="20201030 18:30:07.948"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.548" endtime="20201030 18:30:07.948"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:07.957" endtime="20201030 18:30:07.993"></status>
</kw>
<msg timestamp="20201030 18:30:07.994" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:07.956" endtime="20201030 18:30:07.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:07.996" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:07.995" endtime="20201030 18:30:07.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:07.997" endtime="20201030 18:30:07.999"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.953" endtime="20201030 18:30:08.000"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.951" endtime="20201030 18:30:08.000"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:08.007" endtime="20201030 18:30:08.294"></status>
</kw>
<msg timestamp="20201030 18:30:08.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021071083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0212285, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:30:08.005" endtime="20201030 18:30:08.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:08.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021071083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0212285, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:30:08.298" endtime="20201030 18:30:08.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:08.307" endtime="20201030 18:30:08.308"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.003" endtime="20201030 18:30:08.309"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.001" endtime="20201030 18:30:08.309"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:08.313" level="INFO">${PHILIP_RES} = [{'diff': 0.00015741699999999997}, {'diff': 0.0001574030000000004}, {'diff': 0.00015741699999999997}, {'diff': 0.00015744399999999964}, {'diff': 0.0001574030000000004}, {'diff': 0.00015734700000000212...</msg>
<status status="PASS" starttime="20201030 18:30:08.310" endtime="20201030 18:30:08.314"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:08.321" level="INFO">${RESULT} = {'diff': [0.00015741699999999997, 0.0001574030000000004, 0.00015741699999999997, 0.00015744399999999964, 0.0001574030000000004, 0.00015734700000000212, 0.00015730499999999994, 0.00015734700000000212, ...</msg>
<status status="PASS" starttime="20201030 18:30:08.314" endtime="20201030 18:30:08.321"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:08.325" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:08.324" endtime="20201030 18:30:08.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:08.328" level="INFO">VALUE: [0.00015741699999999997, 0.0001574030000000004, 0.00015741699999999997, 0.00015744399999999964, 0.0001574030000000004, 0.00015734700000000212, 0.00015730499999999994, 0.00015734700000000212, 0.0001574449999999991, 0.00015734700000000212, 0.0001574030000000004, 0.00015741699999999997, 0.0001574030000000004, 0.00015733300000000255, 0.00015741699999999997, 0.00015734700000000212, 0.0001573749999999978, 0.0001574449999999991, 0.0001574579999999992, 0.00015738900000000083, 0.00015738900000000083, 0.00015734799999999813, 0.00015738900000000083, 0.00015744399999999964, 0.00015738900000000083, 0.0001574579999999992, 0.00015750000000000486, 0.00015738900000000083, 0.00015743099999999954, 0.00015738900000000083, 0.0001574449999999991, 0.00015733400000000203, 0.00015740200000000093, 0.00015737500000000126, 0.0001573610000000017, 0.00015734699999999519, 0.00015741699999999997, 0.00015734799999999466, 0.0001573610000000017, 0.00015743000000000007, 0.00015730599999999595, 0.0001573339999999951, 0.00015729200000000332, 0.00015738900000000083, 0.00015737500000000126, 0.00015733300000000255, 0.00015733300000000255, 0.00015724999999999767, 0.00015726399999999724, 0.00015733300000000255]</msg>
<status status="PASS" starttime="20201030 18:30:08.326" endtime="20201030 18:30:08.329"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.322" endtime="20201030 18:30:08.329"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:08.333" endtime="20201030 18:30:08.353"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.332" endtime="20201030 18:30:08.353"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.330" endtime="20201030 18:30:08.354"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.949" endtime="20201030 18:30:08.354"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.949" endtime="20201030 18:30:08.354"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:08.363" endtime="20201030 18:30:08.405"></status>
</kw>
<msg timestamp="20201030 18:30:08.405" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:08.361" endtime="20201030 18:30:08.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:08.408" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:08.406" endtime="20201030 18:30:08.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:08.409" endtime="20201030 18:30:08.410"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.358" endtime="20201030 18:30:08.411"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.356" endtime="20201030 18:30:08.412"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:08.418" endtime="20201030 18:30:08.705"></status>
</kw>
<msg timestamp="20201030 18:30:08.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022277236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022446472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:08.417" endtime="20201030 18:30:08.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:08.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022277236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022446472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:08.709" endtime="20201030 18:30:08.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:08.717" endtime="20201030 18:30:08.719"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.414" endtime="20201030 18:30:08.720"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.412" endtime="20201030 18:30:08.720"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:08.725" level="INFO">${PHILIP_RES} = [{'diff': 0.0001692359999999997}, {'diff': 0.00016916699999999785}, {'diff': 0.0001691389999999987}, {'diff': 0.0001692359999999997}, {'diff': 0.00016912499999999914}, {'diff': 0.0001691250000000026},...</msg>
<status status="PASS" starttime="20201030 18:30:08.721" endtime="20201030 18:30:08.725"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:08.729" level="INFO">${RESULT} = {'diff': [0.0001692359999999997, 0.00016916699999999785, 0.0001691389999999987, 0.0001692359999999997, 0.00016912499999999914, 0.0001691250000000026, 0.000169097, 0.000169097, 0.00016915299999999828, ...</msg>
<status status="PASS" starttime="20201030 18:30:08.726" endtime="20201030 18:30:08.729"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:08.733" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:08.732" endtime="20201030 18:30:08.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:08.736" level="INFO">VALUE: [0.0001692359999999997, 0.00016916699999999785, 0.0001691389999999987, 0.0001692359999999997, 0.00016912499999999914, 0.0001691250000000026, 0.000169097, 0.000169097, 0.00016915299999999828, 0.00016930499999999807, 0.00016915200000000227, 0.0001691250000000026, 0.0001691389999999987, 0.00016916600000000184, 0.00016915300000000175, 0.00016911099999999957, 0.00016915300000000175, 0.00016922200000000012, 0.00016920799999999708, 0.00016923599999999622, 0.00016923600000000316, 0.0001691939999999975, 0.0001692220000000036, 0.00016925000000000273, 0.0001692499999999958, 0.00016927800000000187, 0.0001691389999999987, 0.00016923599999999622, 0.00016923600000000316, 0.00016926399999999536, 0.00016913900000000565, 0.00016929100000000197, 0.00016912499999999914, 0.00016919400000000445, 0.00016922199999999665, 0.00016906900000000086, 0.00016923599999999622, 0.00016923599999999622, 0.00016918099999999742, 0.00016922199999999665, 0.00016920800000000402, 0.0001691389999999987, 0.0001692640000000023, 0.00016925000000000273, 0.00016925000000000273, 0.00016912499999999914, 0.00016916599999999837, 0.00016916700000000479, 0.0001690839999999999, 0.00016917999999999794]</msg>
<status status="PASS" starttime="20201030 18:30:08.734" endtime="20201030 18:30:08.742"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.730" endtime="20201030 18:30:08.743"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:08.746" endtime="20201030 18:30:08.766"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.745" endtime="20201030 18:30:08.766"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.744" endtime="20201030 18:30:08.767"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.355" endtime="20201030 18:30:08.767"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.354" endtime="20201030 18:30:08.767"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:08.776" endtime="20201030 18:30:08.813"></status>
</kw>
<msg timestamp="20201030 18:30:08.813" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:08.774" endtime="20201030 18:30:08.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:08.816" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:08.814" endtime="20201030 18:30:08.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:08.817" endtime="20201030 18:30:08.819"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.772" endtime="20201030 18:30:08.819"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.770" endtime="20201030 18:30:08.820"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:08.826" endtime="20201030 18:30:09.113"></status>
</kw>
<msg timestamp="20201030 18:30:09.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021128847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021309944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:08.825" endtime="20201030 18:30:09.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:09.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021128847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021309944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:09.117" endtime="20201030 18:30:09.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:09.125" endtime="20201030 18:30:09.127"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.822" endtime="20201030 18:30:09.127"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.820" endtime="20201030 18:30:09.128"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:09.132" level="INFO">${PHILIP_RES} = [{'diff': 0.0001810970000000016}, {'diff': 0.00018115299999999987}, {'diff': 0.00018117999999999954}, {'diff': 0.00018111100000000116}, {'diff': 0.00018106899999999898}, {'diff': 0.0001812499999999973...</msg>
<status status="PASS" starttime="20201030 18:30:09.128" endtime="20201030 18:30:09.132"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:09.136" level="INFO">${RESULT} = {'diff': [0.0001810970000000016, 0.00018115299999999987, 0.00018117999999999954, 0.00018111100000000116, 0.00018106899999999898, 0.00018124999999999739, 0.00018112500000000073, 0.00018120800000000215,...</msg>
<status status="PASS" starttime="20201030 18:30:09.133" endtime="20201030 18:30:09.136"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:09.140" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:09.139" endtime="20201030 18:30:09.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:09.143" level="INFO">VALUE: [0.0001810970000000016, 0.00018115299999999987, 0.00018117999999999954, 0.00018111100000000116, 0.00018106899999999898, 0.00018124999999999739, 0.00018112500000000073, 0.00018120800000000215, 0.00018112500000000073, 0.0001811109999999977, 0.0001811390000000003, 0.00018115299999999987, 0.0001810139999999967, 0.0001811109999999977, 0.00018106899999999898, 0.0001811520000000004, 0.00018125000000000085, 0.00018112500000000073, 0.00018115299999999987, 0.0001811529999999964, 0.00018117999999999607, 0.0001811250000000042, 0.00018129199999999956, 0.00018111100000000463, 0.00018122199999999478, 0.00018122200000000172, 0.00018113899999999683, 0.00018111100000000463, 0.00018113900000000377, 0.00018126300000000095, 0.00018122200000000172, 0.00018120800000000215, 0.00018122200000000172, 0.00018122299999999425, 0.00018119500000000205, 0.00018111100000000463, 0.00018113799999999736, 0.00018112499999999726, 0.00018119400000000258, 0.0001811670000000029, 0.00018126400000000042, 0.0001811670000000029, 0.00018119400000000258, 0.00018112499999999726, 0.00018119400000000258, 0.00018136100000000488, 0.00018123600000000128, 0.00018125000000000085, 0.00018125000000000085, 0.00018113900000000377]</msg>
<status status="PASS" starttime="20201030 18:30:09.142" endtime="20201030 18:30:09.145"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:09.137" endtime="20201030 18:30:09.145"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:09.149" endtime="20201030 18:30:09.168"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:09.147" endtime="20201030 18:30:09.169"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:09.146" endtime="20201030 18:30:09.169"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.768" endtime="20201030 18:30:09.170"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.767" endtime="20201030 18:30:09.170"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:09.179" endtime="20201030 18:30:09.219"></status>
</kw>
<msg timestamp="20201030 18:30:09.220" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:09.177" endtime="20201030 18:30:09.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:09.222" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:09.221" endtime="20201030 18:30:09.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:09.224" endtime="20201030 18:30:09.225"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:09.174" endtime="20201030 18:30:09.226"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:09.172" endtime="20201030 18:30:09.226"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:09.233" endtime="20201030 18:30:09.520"></status>
</kw>
<msg timestamp="20201030 18:30:09.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020363458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020556736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:09.231" endtime="20201030 18:30:09.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:09.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020363458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020556736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:09.525" endtime="20201030 18:30:09.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:09.533" endtime="20201030 18:30:09.534"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:09.229" endtime="20201030 18:30:09.535"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:09.227" endtime="20201030 18:30:09.535"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:09.539" level="INFO">${PHILIP_RES} = [{'diff': 0.00019327799999999812}, {'diff': 0.00019334699999999996}, {'diff': 0.00019326400000000202}, {'diff': 0.00019331900000000082}, {'diff': 0.00019336099999999953}, {'diff': 0.000193333999999999...</msg>
<status status="PASS" starttime="20201030 18:30:09.536" endtime="20201030 18:30:09.539"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:09.544" level="INFO">${RESULT} = {'diff': [0.00019327799999999812, 0.00019334699999999996, 0.00019326400000000202, 0.00019331900000000082, 0.00019336099999999953, 0.00019333399999999987, 0.00019338899999999867, 0.0001933749999999991,...</msg>
<status status="PASS" starttime="20201030 18:30:09.540" endtime="20201030 18:30:09.545"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:09.549" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:09.548" endtime="20201030 18:30:09.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:09.552" level="INFO">VALUE: [0.00019327799999999812, 0.00019334699999999996, 0.00019326400000000202, 0.00019331900000000082, 0.00019336099999999953, 0.00019333399999999987, 0.00019338899999999867, 0.0001933749999999991, 0.0001933200000000003, 0.00019338899999999867, 0.00019338900000000214, 0.00019338900000000214, 0.0001932359999999994, 0.00019330600000000073, 0.0001933749999999991, 0.00019338899999999867, 0.000193361999999999, 0.0001932919999999977, 0.00019341700000000128, 0.0001932780000000016, 0.00019332000000000377, 0.0001932919999999977, 0.00019337499999999563, 0.0001933339999999964, 0.00019338900000000214, 0.00019334700000000343, 0.00019336099999999606, 0.00019329099999999821, 0.00019330499999999778, 0.00019340200000000224, 0.00019345800000000052, 0.000193459, 0.00019336200000000248, 0.0001934720000000001, 0.00019337499999999563, 0.00019336099999999606, 0.00019326399999999855, 0.00019324999999999898, 0.00019333300000000386, 0.00019337500000000257, 0.000193361000000003, 0.00019333400000000334, 0.0001933889999999952, 0.0001933469999999965, 0.00019326399999999855, 0.0001933469999999965, 0.00019338900000000214, 0.00019340200000000224, 0.00019326399999999855, 0.00019329099999999821]</msg>
<status status="PASS" starttime="20201030 18:30:09.550" endtime="20201030 18:30:09.552"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:09.545" endtime="20201030 18:30:09.553"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:09.557" endtime="20201030 18:30:09.576"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:09.555" endtime="20201030 18:30:09.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:09.554" endtime="20201030 18:30:09.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:09.171" endtime="20201030 18:30:09.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:09.170" endtime="20201030 18:30:09.578"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:09.586" endtime="20201030 18:30:09.626"></status>
</kw>
<msg timestamp="20201030 18:30:09.626" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:09.585" endtime="20201030 18:30:09.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:09.629" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:09.627" endtime="20201030 18:30:09.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:09.630" endtime="20201030 18:30:09.632"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:09.582" endtime="20201030 18:30:09.632"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:09.580" endtime="20201030 18:30:09.633"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:09.639" endtime="20201030 18:30:09.926"></status>
</kw>
<msg timestamp="20201030 18:30:09.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019508125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019713931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:09.638" endtime="20201030 18:30:09.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:09.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019508125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019713931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:09.930" endtime="20201030 18:30:09.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:09.938" endtime="20201030 18:30:09.941"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:09.635" endtime="20201030 18:30:09.941"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:09.633" endtime="20201030 18:30:09.942"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:09.946" level="INFO">${PHILIP_RES} = [{'diff': 0.00020580599999999935}, {'diff': 0.00020587499999999773}, {'diff': 0.00020587499999999773}, {'diff': 0.00020584700000000206}, {'diff': 0.00020576400000000064}, {'diff': 0.000205916999999999...</msg>
<status status="PASS" starttime="20201030 18:30:09.943" endtime="20201030 18:30:09.946"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:09.950" level="INFO">${RESULT} = {'diff': [0.00020580599999999935, 0.00020587499999999773, 0.00020587499999999773, 0.00020584700000000206, 0.00020576400000000064, 0.0002059169999999999, 0.00020587499999999773, 0.00020572200000000193,...</msg>
<status status="PASS" starttime="20201030 18:30:09.947" endtime="20201030 18:30:09.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:09.955" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:09.954" endtime="20201030 18:30:09.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:09.957" level="INFO">VALUE: [0.00020580599999999935, 0.00020587499999999773, 0.00020587499999999773, 0.00020584700000000206, 0.00020576400000000064, 0.0002059169999999999, 0.00020587499999999773, 0.00020572200000000193, 0.00020593099999999948, 0.00020591600000000043, 0.00020588900000000077, 0.0002059169999999999, 0.00020590300000000034, 0.00020586100000000163, 0.0002058620000000011, 0.00020584700000000206, 0.00020586099999999816, 0.00020590299999999687, 0.0002057780000000002, 0.00020588900000000077, 0.00020597200000000565, 0.00020577799999999674, 0.0002058200000000024, 0.00020593099999999948, 0.0002058750000000012, 0.00020579100000000378, 0.0002057640000000041, 0.00020587499999999426, 0.00020584699999999512, 0.00020590199999999392, 0.00020586100000000163, 0.00020588900000000077, 0.00020598699999999776, 0.0002059169999999999, 0.00020590200000000086, 0.00020590300000000034, 0.00020586100000000163, 0.0002058609999999947, 0.00020584700000000206, 0.00020590300000000034, 0.00020586199999999416, 0.00020593, 0.00020584800000000153, 0.00020573599999999803, 0.00020588900000000077, 0.00020587499999999426, 0.0002058750000000012, 0.0002057499999999976, 0.0002058049999999964, 0.00020586100000000163]</msg>
<status status="PASS" starttime="20201030 18:30:09.956" endtime="20201030 18:30:09.958"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:09.951" endtime="20201030 18:30:09.959"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:09.962" endtime="20201030 18:30:09.982"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:09.961" endtime="20201030 18:30:09.983"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:09.960" endtime="20201030 18:30:09.983"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:09.579" endtime="20201030 18:30:09.983"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:09.578" endtime="20201030 18:30:09.983"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:09.992" endtime="20201030 18:30:10.034"></status>
</kw>
<msg timestamp="20201030 18:30:10.034" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:09.990" endtime="20201030 18:30:10.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:10.037" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:10.035" endtime="20201030 18:30:10.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:10.038" endtime="20201030 18:30:10.040"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:09.988" endtime="20201030 18:30:10.040"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:09.986" endtime="20201030 18:30:10.041"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:10.047" endtime="20201030 18:30:10.333"></status>
</kw>
<msg timestamp="20201030 18:30:10.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020734792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020953361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:10.046" endtime="20201030 18:30:10.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:10.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020734792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020953361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:10.338" endtime="20201030 18:30:10.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:10.346" endtime="20201030 18:30:10.347"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.043" endtime="20201030 18:30:10.348"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.041" endtime="20201030 18:30:10.348"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:10.352" level="INFO">${PHILIP_RES} = [{'diff': 0.0002185690000000018}, {'diff': 0.00021872200000000105}, {'diff': 0.00021880599999999847}, {'diff': 0.00021867999999999888}, {'diff': 0.00021868099999999835}, {'diff': 0.0002186250000000000...</msg>
<status status="PASS" starttime="20201030 18:30:10.349" endtime="20201030 18:30:10.353"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:10.357" level="INFO">${RESULT} = {'diff': [0.0002185690000000018, 0.00021872200000000105, 0.00021880599999999847, 0.00021867999999999888, 0.00021868099999999835, 0.00021862500000000007, 0.00021867999999999888, 0.0002186950000000014, ...</msg>
<status status="PASS" starttime="20201030 18:30:10.354" endtime="20201030 18:30:10.357"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:10.361" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:10.360" endtime="20201030 18:30:10.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:10.364" level="INFO">VALUE: [0.0002185690000000018, 0.00021872200000000105, 0.00021880599999999847, 0.00021867999999999888, 0.00021868099999999835, 0.00021862500000000007, 0.00021867999999999888, 0.0002186950000000014, 0.00021870800000000148, 0.00021866700000000225, 0.00021872300000000053, 0.0002187780000000028, 0.00021873599999999715, 0.00021867999999999888, 0.0002187500000000002, 0.00021858300000000136, 0.0002187500000000002, 0.00021880500000000247, 0.00021872199999999759, 0.00021877799999999586, 0.00021872199999999759, 0.00021879200000000237, 0.0002186659999999993, 0.0002188330000000016, 0.0002187089999999975, 0.00021869500000000486, 0.00021876400000000323, 0.0002186529999999992, 0.0002187780000000028, 0.00021873599999999715, 0.00021863899999999964, 0.00021873599999999715, 0.00021880500000000247, 0.0002186810000000053, 0.00021874999999999672, 0.00021869499999999792, 0.0002187639999999963, 0.0002186659999999993, 0.00021874999999999672, 0.00021869500000000486, 0.00021870799999999802, 0.00021887500000000032, 0.00021879200000000237, 0.0002188889999999999, 0.00021876400000000323, 0.00021873699999999663, 0.00021881900000000204, 0.0002188200000000015, 0.0002186110000000005, 0.00021852699999999614]</msg>
<status status="PASS" starttime="20201030 18:30:10.362" endtime="20201030 18:30:10.365"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.358" endtime="20201030 18:30:10.366"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:10.370" endtime="20201030 18:30:10.389"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.368" endtime="20201030 18:30:10.390"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.367" endtime="20201030 18:30:10.390"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:09.984" endtime="20201030 18:30:10.390"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:09.984" endtime="20201030 18:30:10.391"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:10.399" endtime="20201030 18:30:10.445"></status>
</kw>
<msg timestamp="20201030 18:30:10.446" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:10.398" endtime="20201030 18:30:10.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:10.448" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:10.447" endtime="20201030 18:30:10.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:10.449" endtime="20201030 18:30:10.451"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.395" endtime="20201030 18:30:10.452"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.393" endtime="20201030 18:30:10.452"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:10.459" endtime="20201030 18:30:10.745"></status>
</kw>
<msg timestamp="20201030 18:30:10.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020401653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020633403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:10.457" endtime="20201030 18:30:10.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:10.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020401653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020633403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:10.749" endtime="20201030 18:30:10.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:10.757" endtime="20201030 18:30:10.759"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.455" endtime="20201030 18:30:10.760"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.453" endtime="20201030 18:30:10.760"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:10.764" level="INFO">${PHILIP_RES} = [{'diff': 0.0002317500000000028}, {'diff': 0.00023162500000000266}, {'diff': 0.00023170799999999714}, {'diff': 0.0002317080000000006}, {'diff': 0.0002317080000000006}, {'diff': 0.00023180499999999812}...</msg>
<status status="PASS" starttime="20201030 18:30:10.761" endtime="20201030 18:30:10.764"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:10.769" level="INFO">${RESULT} = {'diff': [0.0002317500000000028, 0.00023162500000000266, 0.00023170799999999714, 0.0002317080000000006, 0.0002317080000000006, 0.00023180499999999812, 0.0002318189999999977, 0.00023177800000000193, 0....</msg>
<status status="PASS" starttime="20201030 18:30:10.765" endtime="20201030 18:30:10.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:10.774" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:10.773" endtime="20201030 18:30:10.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:10.776" level="INFO">VALUE: [0.0002317500000000028, 0.00023162500000000266, 0.00023170799999999714, 0.0002317080000000006, 0.0002317080000000006, 0.00023180499999999812, 0.0002318189999999977, 0.00023177800000000193, 0.00023170900000000008, 0.0002318470000000003, 0.00023161200000000257, 0.00023163900000000223, 0.00023174999999999932, 0.00023182000000000064, 0.0002316950000000005, 0.00023168100000000094, 0.00023170799999999714, 0.00023168099999999747, 0.00023172299999999618, 0.00023170900000000355, 0.00023169499999999704, 0.0002317219999999967, 0.00023170799999999714, 0.00023168099999999747, 0.00023169399999999757, 0.00023172200000000365, 0.0002317920000000015, 0.00023168099999999747, 0.00023176300000000288, 0.00023174999999999585, 0.00023168099999999747, 0.00023173600000000322, 0.0002317920000000015, 0.00023173600000000322, 0.00023168099999999747, 0.0002318470000000003, 0.0002316249999999992, 0.0002317920000000015, 0.00023172200000000365, 0.00023172300000000312, 0.0002317219999999967, 0.0002317219999999967, 0.0002317219999999967, 0.0002318199999999937, 0.00023172300000000312, 0.00023169399999999757, 0.00023168099999999747, 0.0002317500000000028, 0.0002317089999999966, 0.00023163899999999876]</msg>
<status status="PASS" starttime="20201030 18:30:10.775" endtime="20201030 18:30:10.777"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.770" endtime="20201030 18:30:10.777"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:10.781" endtime="20201030 18:30:10.801"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.780" endtime="20201030 18:30:10.801"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.778" endtime="20201030 18:30:10.802"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.392" endtime="20201030 18:30:10.802"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.391" endtime="20201030 18:30:10.802"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:10.811" endtime="20201030 18:30:10.857"></status>
</kw>
<msg timestamp="20201030 18:30:10.857" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:10.809" endtime="20201030 18:30:10.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:10.860" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:10.858" endtime="20201030 18:30:10.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:10.861" endtime="20201030 18:30:10.863"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.807" endtime="20201030 18:30:10.863"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.805" endtime="20201030 18:30:10.864"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:10.870" endtime="20201030 18:30:11.156"></status>
</kw>
<msg timestamp="20201030 18:30:11.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020810528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021055292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:10.869" endtime="20201030 18:30:11.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:11.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020810528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021055292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:11.160" endtime="20201030 18:30:11.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:11.168" endtime="20201030 18:30:11.171"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.866" endtime="20201030 18:30:11.172"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.864" endtime="20201030 18:30:11.172"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:11.176" level="INFO">${PHILIP_RES} = [{'diff': 0.0002447640000000015}, {'diff': 0.0002448469999999994}, {'diff': 0.0002447219999999993}, {'diff': 0.000244860999999999}, {'diff': 0.00024487499999999857}, {'diff': 0.0002449449999999999}, {...</msg>
<status status="PASS" starttime="20201030 18:30:11.173" endtime="20201030 18:30:11.176"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:11.180" level="INFO">${RESULT} = {'diff': [0.0002447640000000015, 0.0002448469999999994, 0.0002447219999999993, 0.000244860999999999, 0.00024487499999999857, 0.0002449449999999999, 0.0002448469999999994, 0.000244860999999999, 0.00024...</msg>
<status status="PASS" starttime="20201030 18:30:11.177" endtime="20201030 18:30:11.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:11.185" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:11.184" endtime="20201030 18:30:11.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:11.187" level="INFO">VALUE: [0.0002447640000000015, 0.0002448469999999994, 0.0002447219999999993, 0.000244860999999999, 0.00024487499999999857, 0.0002449449999999999, 0.0002448469999999994, 0.000244860999999999, 0.000244860999999999, 0.00024497199999999955, 0.0002449310000000003, 0.00024491700000000075, 0.0002449169999999973, 0.0002448469999999994, 0.0002449030000000012, 0.0002449029999999977, 0.0002449159999999978, 0.00024500000000000216, 0.00024488899999999814, 0.00024495800000000345, 0.00024498599999999565, 0.000244860999999999, 0.0002449860000000026, 0.00024495800000000345, 0.0002449590000000029, 0.0002449170000000042, 0.0002449029999999977, 0.0002449029999999977, 0.0002449169999999973, 0.00024488899999999814, 0.0002449860000000026, 0.00024481999999999976, 0.00024502799999999436, 0.00024516700000000446, 0.0002449310000000038, 0.00024500000000000216, 0.0002449860000000026, 0.00024487499999999857, 0.0002448890000000051, 0.00024504200000000087, 0.000244972000000003, 0.00024501400000000173, 0.00024504200000000087, 0.0002449860000000026, 0.0002449860000000026, 0.0002449860000000026, 0.0002449999999999952, 0.00024494500000000335, 0.00024488899999999814, 0.0002449300000000043]</msg>
<status status="PASS" starttime="20201030 18:30:11.186" endtime="20201030 18:30:11.188"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.181" endtime="20201030 18:30:11.189"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:11.192" endtime="20201030 18:30:11.212"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.191" endtime="20201030 18:30:11.212"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.190" endtime="20201030 18:30:11.213"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.803" endtime="20201030 18:30:11.213"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.803" endtime="20201030 18:30:11.213"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:11.222" endtime="20201030 18:30:11.273"></status>
</kw>
<msg timestamp="20201030 18:30:11.273" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:11.220" endtime="20201030 18:30:11.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:11.276" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:11.275" endtime="20201030 18:30:11.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:11.277" endtime="20201030 18:30:11.279"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.218" endtime="20201030 18:30:11.279"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.216" endtime="20201030 18:30:11.280"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:11.287" endtime="20201030 18:30:11.573"></status>
</kw>
<msg timestamp="20201030 18:30:11.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021705153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021963542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:11.285" endtime="20201030 18:30:11.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:11.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021705153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021963542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:11.579" endtime="20201030 18:30:11.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:11.589" endtime="20201030 18:30:11.590"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.282" endtime="20201030 18:30:11.591"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.280" endtime="20201030 18:30:11.592"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:11.596" level="INFO">${PHILIP_RES} = [{'diff': 0.00025838899999999776}, {'diff': 0.00025844400000000003}, {'diff': 0.0002583199999999994}, {'diff': 0.0002584030000000008}, {'diff': 0.000258445000000003}, {'diff': 0.0002585420000000005}, ...</msg>
<status status="PASS" starttime="20201030 18:30:11.592" endtime="20201030 18:30:11.596"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:11.600" level="INFO">${RESULT} = {'diff': [0.00025838899999999776, 0.00025844400000000003, 0.0002583199999999994, 0.0002584030000000008, 0.000258445000000003, 0.0002585420000000005, 0.0002584719999999992, 0.00025852700000000145, 0.00...</msg>
<status status="PASS" starttime="20201030 18:30:11.597" endtime="20201030 18:30:11.600"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:11.604" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:11.603" endtime="20201030 18:30:11.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:11.607" level="INFO">VALUE: [0.00025838899999999776, 0.00025844400000000003, 0.0002583199999999994, 0.0002584030000000008, 0.000258445000000003, 0.0002585420000000005, 0.0002584719999999992, 0.00025852700000000145, 0.0002585000000000018, 0.00025844400000000003, 0.0002584030000000008, 0.0002584030000000008, 0.0002585700000000031, 0.0002585979999999988, 0.0002585839999999992, 0.0002584860000000022, 0.00025855600000000006, 0.0002585000000000018, 0.0002585000000000018, 0.00025852700000000145, 0.0002585550000000006, 0.0002584719999999957, 0.00025851400000000135, 0.00025847200000000264, 0.00025840300000000427, 0.0002583749999999982, 0.0002585130000000019, 0.000258527999999994, 0.0002585280000000009, 0.00025856900000000016, 0.0002585000000000018, 0.0002585420000000005, 0.0002585420000000005, 0.00025858299999999973, 0.000258541000000001, 0.0002585280000000009, 0.0002585280000000009, 0.0002583329999999995, 0.0002583749999999982, 0.0002583879999999983, 0.00025840299999999733, 0.0002583890000000047, 0.00025840299999999733, 0.0002583329999999995, 0.0002584859999999953, 0.0002583479999999985, 0.00025843000000000393, 0.00025845799999999614, 0.00025836100000000556, 0.0002584159999999974]</msg>
<status status="PASS" starttime="20201030 18:30:11.605" endtime="20201030 18:30:11.608"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.601" endtime="20201030 18:30:11.609"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:11.613" endtime="20201030 18:30:11.632"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.611" endtime="20201030 18:30:11.633"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.610" endtime="20201030 18:30:11.633"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.214" endtime="20201030 18:30:11.634"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.214" endtime="20201030 18:30:11.634"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:11.643" endtime="20201030 18:30:11.696"></status>
</kw>
<msg timestamp="20201030 18:30:11.697" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:11.641" endtime="20201030 18:30:11.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:11.699" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:11.698" endtime="20201030 18:30:11.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:11.700" endtime="20201030 18:30:11.702"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.638" endtime="20201030 18:30:11.703"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.636" endtime="20201030 18:30:11.703"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:11.710" endtime="20201030 18:30:11.996"></status>
</kw>
<msg timestamp="20201030 18:30:11.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023124583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02339675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:11.708" endtime="20201030 18:30:12.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:12.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023124583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02339675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:12.001" endtime="20201030 18:30:12.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:12.009" endtime="20201030 18:30:12.011"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.706" endtime="20201030 18:30:12.011"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.704" endtime="20201030 18:30:12.012"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:12.016" level="INFO">${PHILIP_RES} = [{'diff': 0.00027216700000000024}, {'diff': 0.0002722360000000021}, {'diff': 0.0002722910000000009}, {'diff': 0.00027222199999999905}, {'diff': 0.00027231900000000003}, {'diff': 0.0002722359999999986}...</msg>
<status status="PASS" starttime="20201030 18:30:12.012" endtime="20201030 18:30:12.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:12.023" level="INFO">${RESULT} = {'diff': [0.00027216700000000024, 0.0002722360000000021, 0.0002722910000000009, 0.00027222199999999905, 0.00027231900000000003, 0.0002722359999999986, 0.0002722079999999995, 0.0002723610000000022, 0.0...</msg>
<status status="PASS" starttime="20201030 18:30:12.017" endtime="20201030 18:30:12.023"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:12.028" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:12.026" endtime="20201030 18:30:12.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:12.030" level="INFO">VALUE: [0.00027216700000000024, 0.0002722360000000021, 0.0002722910000000009, 0.00027222199999999905, 0.00027231900000000003, 0.0002722359999999986, 0.0002722079999999995, 0.0002723610000000022, 0.00027229200000000037, 0.00027226399999999776, 0.0002723749999999983, 0.0002721670000000037, 0.00027219399999999644, 0.0002722360000000021, 0.00027231900000000003, 0.0002723329999999996, 0.0002721800000000038, 0.0002721529999999972, 0.00027226400000000123, 0.0002723329999999996, 0.0002723889999999979, 0.00027230500000000046, 0.0002723199999999995, 0.0002722360000000021, 0.0002722769999999944, 0.0002722220000000025, 0.00027226400000000123, 0.00027220800000000295, 0.00027225000000000166, 0.00027213899999999763, 0.00027223700000000156, 0.00027226400000000123, 0.00027231900000000003, 0.00027218099999999634, 0.0002723329999999996, 0.0002722360000000021, 0.00027226400000000123, 0.00027226400000000123, 0.00027227799999999386, 0.00027219500000000285, 0.0002722220000000025, 0.0002722360000000021, 0.0002721529999999972, 0.00027230599999999994, 0.0002723339999999991, 0.0002722780000000008, 0.00027231900000000003, 0.0002723339999999991, 0.00027215200000000467, 0.00027226400000000123]</msg>
<status status="PASS" starttime="20201030 18:30:12.029" endtime="20201030 18:30:12.031"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.024" endtime="20201030 18:30:12.031"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:12.035" endtime="20201030 18:30:12.055"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.034" endtime="20201030 18:30:12.055"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.032" endtime="20201030 18:30:12.056"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.635" endtime="20201030 18:30:12.056"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.634" endtime="20201030 18:30:12.056"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:12.065" endtime="20201030 18:30:12.118"></status>
</kw>
<msg timestamp="20201030 18:30:12.118" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:12.063" endtime="20201030 18:30:12.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:12.121" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:12.119" endtime="20201030 18:30:12.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:12.122" endtime="20201030 18:30:12.124"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.061" endtime="20201030 18:30:12.124"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.059" endtime="20201030 18:30:12.125"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:12.131" endtime="20201030 18:30:12.417"></status>
</kw>
<msg timestamp="20201030 18:30:12.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022920722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023206833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:12.130" endtime="20201030 18:30:12.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:12.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022920722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023206833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:12.421" endtime="20201030 18:30:12.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:12.429" endtime="20201030 18:30:12.432"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.127" endtime="20201030 18:30:12.433"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.125" endtime="20201030 18:30:12.433"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:12.438" level="INFO">${PHILIP_RES} = [{'diff': 0.0002861109999999986}, {'diff': 0.0002861949999999995}, {'diff': 0.0002861530000000008}, {'diff': 0.0002860970000000025}, {'diff': 0.0002860829999999995}, {'diff': 0.00028598600000000196}, ...</msg>
<status status="PASS" starttime="20201030 18:30:12.434" endtime="20201030 18:30:12.438"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:12.442" level="INFO">${RESULT} = {'diff': [0.0002861109999999986, 0.0002861949999999995, 0.0002861530000000008, 0.0002860970000000025, 0.0002860829999999995, 0.00028598600000000196, 0.0002862500000000018, 0.0002862499999999983, 0.000...</msg>
<status status="PASS" starttime="20201030 18:30:12.439" endtime="20201030 18:30:12.442"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:12.447" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:12.446" endtime="20201030 18:30:12.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:12.449" level="INFO">VALUE: [0.0002861109999999986, 0.0002861949999999995, 0.0002861530000000008, 0.0002860970000000025, 0.0002860829999999995, 0.00028598600000000196, 0.0002862500000000018, 0.0002862499999999983, 0.00028601399999999763, 0.00028618000000000046, 0.0002860560000000033, 0.0002860140000000011, 0.00028609699999999905, 0.0002861109999999986, 0.0002861249999999982, 0.0002860979999999985, 0.00028620800000000307, 0.0002860559999999998, 0.0002861250000000051, 0.00028616700000000383, 0.0002861390000000047, 0.00028609699999999905, 0.00028613899999999776, 0.0002860699999999994, 0.00028622200000000264, 0.0002860979999999985, 0.0002862219999999957, 0.0002860689999999999, 0.00028618099999999647, 0.00028605500000000034, 0.0002861109999999986, 0.00028616600000000436, 0.0002860979999999985, 0.0002861109999999986, 0.00028608399999999895, 0.0002860829999999995, 0.0002861250000000051, 0.0002861109999999986, 0.00028609699999999905, 0.0002861249999999982, 0.00028609699999999905, 0.0002860830000000064, 0.000285985999999995, 0.00028611100000000556, 0.00028609699999999905, 0.00028615300000000427, 0.00028619399999999656, 0.0002860829999999995, 0.0002860689999999999, 0.00028609699999999905]</msg>
<status status="PASS" starttime="20201030 18:30:12.448" endtime="20201030 18:30:12.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.443" endtime="20201030 18:30:12.451"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:12.455" endtime="20201030 18:30:12.474"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.453" endtime="20201030 18:30:12.475"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.452" endtime="20201030 18:30:12.475"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.057" endtime="20201030 18:30:12.475"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.056" endtime="20201030 18:30:12.476"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:12.484" endtime="20201030 18:30:12.539"></status>
</kw>
<msg timestamp="20201030 18:30:12.539" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:12.483" endtime="20201030 18:30:12.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:12.542" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:12.540" endtime="20201030 18:30:12.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:12.543" endtime="20201030 18:30:12.545"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.480" endtime="20201030 18:30:12.545"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.478" endtime="20201030 18:30:12.546"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:12.552" endtime="20201030 18:30:12.838"></status>
</kw>
<msg timestamp="20201030 18:30:12.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020360125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020660347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:12.551" endtime="20201030 18:30:12.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:12.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020360125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020660347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:12.842" endtime="20201030 18:30:12.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:12.850" endtime="20201030 18:30:12.852"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.548" endtime="20201030 18:30:12.853"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.546" endtime="20201030 18:30:12.853"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:12.857" level="INFO">${PHILIP_RES} = [{'diff': 0.0003002219999999993}, {'diff': 0.00030037500000000203}, {'diff': 0.000300458}, {'diff': 0.00030027800000000104}, {'diff': 0.00030033299999999985}, {'diff': 0.0003003890000000016}, {'diff':...</msg>
<status status="PASS" starttime="20201030 18:30:12.854" endtime="20201030 18:30:12.857"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:12.861" level="INFO">${RESULT} = {'diff': [0.0003002219999999993, 0.00030037500000000203, 0.000300458, 0.00030027800000000104, 0.00030033299999999985, 0.0003003890000000016, 0.0003003190000000003, 0.0003003890000000016, 0.00030027800...</msg>
<status status="PASS" starttime="20201030 18:30:12.858" endtime="20201030 18:30:12.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:12.866" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:12.865" endtime="20201030 18:30:12.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:12.868" level="INFO">VALUE: [0.0003002219999999993, 0.00030037500000000203, 0.000300458, 0.00030027800000000104, 0.00030033299999999985, 0.0003003890000000016, 0.0003003190000000003, 0.0003003890000000016, 0.00030027800000000104, 0.00030040300000000117, 0.0003003060000000002, 0.00030037499999999856, 0.000300360999999999, 0.00030037499999999856, 0.0003003479999999989, 0.0003004730000000025, 0.0003003060000000002, 0.0003005140000000017, 0.0003004310000000038, 0.000300360999999999, 0.00030037499999999856, 0.00030037499999999856, 0.0003004300000000043, 0.0003004860000000026, 0.00030037499999999856, 0.0003004170000000042, 0.000300360999999999, 0.0003004029999999977, 0.0003004449999999964, 0.0003003479999999989, 0.00030037499999999856, 0.00030037499999999856, 0.00030037499999999856, 0.00030050000000000215, 0.0003005269999999949, 0.00030029100000000114, 0.0003004860000000026, 0.00030043099999999684, 0.00030045800000000344, 0.0003004310000000038, 0.00030038900000000507, 0.00030041699999999727, 0.00030037499999999856, 0.00030040200000000516, 0.0003004449999999964, 0.0003004029999999977, 0.0003003469999999994, 0.00030043099999999684, 0.00030038799999999866, 0.000300360999999999]</msg>
<status status="PASS" starttime="20201030 18:30:12.867" endtime="20201030 18:30:12.870"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.862" endtime="20201030 18:30:12.871"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:12.874" endtime="20201030 18:30:12.894"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.873" endtime="20201030 18:30:12.894"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.872" endtime="20201030 18:30:12.895"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.477" endtime="20201030 18:30:12.895"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.476" endtime="20201030 18:30:12.895"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:12.904" endtime="20201030 18:30:12.962"></status>
</kw>
<msg timestamp="20201030 18:30:12.963" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:12.902" endtime="20201030 18:30:12.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:12.965" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:12.964" endtime="20201030 18:30:12.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:12.966" endtime="20201030 18:30:12.968"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.900" endtime="20201030 18:30:12.969"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.898" endtime="20201030 18:30:12.969"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:12.976" endtime="20201030 18:30:13.262"></status>
</kw>
<msg timestamp="20201030 18:30:13.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022784597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02309925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:12.974" endtime="20201030 18:30:13.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:13.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022784597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02309925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:13.266" endtime="20201030 18:30:13.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:13.274" endtime="20201030 18:30:13.276"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.971" endtime="20201030 18:30:13.276"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.970" endtime="20201030 18:30:13.277"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:13.281" level="INFO">${PHILIP_RES} = [{'diff': 0.00031465300000000154}, {'diff': 0.0003148879999999993}, {'diff': 0.00031490199999999885}, {'diff': 0.0003148890000000022}, {'diff': 0.00031488899999999875}, {'diff': 0.0003148479999999995}...</msg>
<status status="PASS" starttime="20201030 18:30:13.277" endtime="20201030 18:30:13.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:13.286" level="INFO">${RESULT} = {'diff': [0.00031465300000000154, 0.0003148879999999993, 0.00031490199999999885, 0.0003148890000000022, 0.00031488899999999875, 0.0003148479999999995, 0.0003148749999999992, 0.00031493000000000146, 0....</msg>
<status status="PASS" starttime="20201030 18:30:13.282" endtime="20201030 18:30:13.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:13.290" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:13.289" endtime="20201030 18:30:13.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:13.293" level="INFO">VALUE: [0.00031465300000000154, 0.0003148879999999993, 0.00031490199999999885, 0.0003148890000000022, 0.00031488899999999875, 0.0003148479999999995, 0.0003148749999999992, 0.00031493000000000146, 0.00031494399999999756, 0.0003148200000000004, 0.0003148190000000009, 0.00031495900000000354, 0.0003148060000000008, 0.00031486100000000655, 0.00031488899999999875, 0.00031490199999999885, 0.00031490199999999885, 0.00031490199999999885, 0.0003149169999999979, 0.0003148609999999996, 0.00031494399999999756, 0.00031491600000000536, 0.00031494499999999703, 0.0003148749999999992, 0.00031488899999999875, 0.00031497200000000364, 0.00031490300000000526, 0.0003148609999999996, 0.000314929999999998, 0.0003148060000000008, 0.00031479200000000124, 0.0003148609999999996, 0.0003148879999999993, 0.0003149169999999979, 0.0003149029999999983, 0.0003149159999999984, 0.0003148330000000005, 0.00031494499999999703, 0.0003149719999999967, 0.00031497200000000364, 0.0003148200000000004, 0.00031488899999999875, 0.00031493000000000493, 0.0003148749999999992, 0.0003149169999999979, 0.00031476399999999516, 0.0003149169999999979, 0.00031476399999999516, 0.00031481999999999344, 0.00031488899999999875]</msg>
<status status="PASS" starttime="20201030 18:30:13.291" endtime="20201030 18:30:13.294"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.287" endtime="20201030 18:30:13.294"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:13.298" endtime="20201030 18:30:13.318"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.297" endtime="20201030 18:30:13.318"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.295" endtime="20201030 18:30:13.319"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.896" endtime="20201030 18:30:13.319"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.896" endtime="20201030 18:30:13.319"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:13.328" endtime="20201030 18:30:13.385"></status>
</kw>
<msg timestamp="20201030 18:30:13.386" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:13.326" endtime="20201030 18:30:13.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:13.391" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:13.388" endtime="20201030 18:30:13.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:13.393" endtime="20201030 18:30:13.397"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.323" endtime="20201030 18:30:13.398"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.321" endtime="20201030 18:30:13.399"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:13.414" endtime="20201030 18:30:13.709"></status>
</kw>
<msg timestamp="20201030 18:30:13.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021028847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021358389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:13.410" endtime="20201030 18:30:13.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:13.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021028847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021358389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:13.713" endtime="20201030 18:30:13.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:13.721" endtime="20201030 18:30:13.724"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.404" endtime="20201030 18:30:13.724"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.400" endtime="20201030 18:30:13.725"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:13.729" level="INFO">${PHILIP_RES} = [{'diff': 0.00032954199999999864}, {'diff': 0.00032966699999999877}, {'diff': 0.0003296940000000019}, {'diff': 0.00032966700000000224}, {'diff': 0.00032965300000000267}, {'diff': 0.0003296810000000018...</msg>
<status status="PASS" starttime="20201030 18:30:13.725" endtime="20201030 18:30:13.729"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:13.733" level="INFO">${RESULT} = {'diff': [0.00032954199999999864, 0.00032966699999999877, 0.0003296940000000019, 0.00032966700000000224, 0.00032965300000000267, 0.0003296810000000018, 0.00032968099999999834, 0.00032966700000000224, ...</msg>
<status status="PASS" starttime="20201030 18:30:13.730" endtime="20201030 18:30:13.733"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:13.737" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:13.736" endtime="20201030 18:30:13.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:13.740" level="INFO">VALUE: [0.00032954199999999864, 0.00032966699999999877, 0.0003296940000000019, 0.00032966700000000224, 0.00032965300000000267, 0.0003296810000000018, 0.00032968099999999834, 0.00032966700000000224, 0.00032972200000000104, 0.00032949999999999993, 0.00032966699999999877, 0.00032966699999999877, 0.0003297499999999967, 0.000329596999999994, 0.0003296389999999996, 0.0003296110000000005, 0.00032967999999999886, 0.00032962500000000006, 0.0003295690000000018, 0.0003296389999999996, 0.0003297770000000033, 0.0003295690000000018, 0.00032961199999999996, 0.0003296529999999992, 0.00032962500000000006, 0.0003295840000000008, 0.0003295980000000004, 0.00032949999999999646, 0.0003295420000000021, 0.0003296110000000005, 0.0003296949999999979, 0.0003296659999999993, 0.00032952800000000254, 0.0003295970000000009, 0.0003295560000000017, 0.00032966699999999877, 0.0003295840000000008, 0.0003295420000000021, 0.00032951400000000297, 0.0003296389999999996, 0.00032967999999999886, 0.000329596999999994, 0.00032956899999999484, 0.0003295420000000021, 0.00032958300000000135, 0.0003297360000000041, 0.0003297089999999975, 0.00032969499999999097, 0.00032962500000000006, 0.00032961099999999355]</msg>
<status status="PASS" starttime="20201030 18:30:13.738" endtime="20201030 18:30:13.760"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.734" endtime="20201030 18:30:13.761"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:13.765" endtime="20201030 18:30:13.784"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.763" endtime="20201030 18:30:13.785"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.762" endtime="20201030 18:30:13.785"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.320" endtime="20201030 18:30:13.785"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.319" endtime="20201030 18:30:13.786"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:13.795" endtime="20201030 18:30:13.856"></status>
</kw>
<msg timestamp="20201030 18:30:13.857" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:13.793" endtime="20201030 18:30:13.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:13.861" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:13.858" endtime="20201030 18:30:13.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:13.862" endtime="20201030 18:30:13.864"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.790" endtime="20201030 18:30:13.865"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.788" endtime="20201030 18:30:13.865"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:13.871" endtime="20201030 18:30:14.157"></status>
</kw>
<msg timestamp="20201030 18:30:14.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021748764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022093542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:13.870" endtime="20201030 18:30:14.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:14.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021748764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022093542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:14.162" endtime="20201030 18:30:14.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:14.170" endtime="20201030 18:30:14.171"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.867" endtime="20201030 18:30:14.172"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.866" endtime="20201030 18:30:14.172"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:14.176" level="INFO">${PHILIP_RES} = [{'diff': 0.00034477800000000045}, {'diff': 0.00034488899999999753}, {'diff': 0.00034479100000000054}, {'diff': 0.0003448469999999988}, {'diff': 0.00034477800000000045}, {'diff': 0.0003447770000000009...</msg>
<status status="PASS" starttime="20201030 18:30:14.173" endtime="20201030 18:30:14.176"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:14.180" level="INFO">${RESULT} = {'diff': [0.00034477800000000045, 0.00034488899999999753, 0.00034479100000000054, 0.0003448469999999988, 0.00034477800000000045, 0.00034477700000000097, 0.0003448339999999987, 0.0003448330000000027, 0...</msg>
<status status="PASS" starttime="20201030 18:30:14.177" endtime="20201030 18:30:14.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:14.184" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:14.183" endtime="20201030 18:30:14.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:14.187" level="INFO">VALUE: [0.00034477800000000045, 0.00034488899999999753, 0.00034479100000000054, 0.0003448469999999988, 0.00034477800000000045, 0.00034477700000000097, 0.0003448339999999987, 0.0003448330000000027, 0.0003447080000000026, 0.00034481999999999915, 0.0003446660000000004, 0.0003448340000000022, 0.00034480499999999664, 0.00034480600000000305, 0.0003447219999999987, 0.00034483399999999526, 0.0003448059999999961, 0.0003446660000000004, 0.00034480499999999664, 0.0003447219999999987, 0.0003447219999999987, 0.0003446389999999938, 0.0003447370000000047, 0.000344777999999997, 0.0003447639999999974, 0.0003447219999999987, 0.0003447500000000048, 0.0003447500000000048, 0.00034476400000000434, 0.00034491600000000067, 0.0003447769999999975, 0.00034468099999999946, 0.00034469399999999956, 0.00034480499999999664, 0.0003446380000000013, 0.0003448470000000023, 0.00034474999999999784, 0.00034455500000000333, 0.0003447780000000039, 0.0003446530000000003, 0.00034480600000000305, 0.00034469499999999903, 0.00034484800000000176, 0.00034473600000001214, 0.0003448059999999892, 0.00034480600000000305, 0.0003447639999999974, 0.00034472200000000564, 0.00034493100000000665, 0.0003446939999999926]</msg>
<status status="PASS" starttime="20201030 18:30:14.185" endtime="20201030 18:30:14.188"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:14.181" endtime="20201030 18:30:14.189"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:14.193" endtime="20201030 18:30:14.215"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:14.191" endtime="20201030 18:30:14.216"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:14.190" endtime="20201030 18:30:14.217"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.786" endtime="20201030 18:30:14.218"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.786" endtime="20201030 18:30:14.218"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:14.235" endtime="20201030 18:30:14.303"></status>
</kw>
<msg timestamp="20201030 18:30:14.304" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:14.232" endtime="20201030 18:30:14.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:14.309" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:14.306" endtime="20201030 18:30:14.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:14.311" endtime="20201030 18:30:14.315"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:14.227" endtime="20201030 18:30:14.316"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:14.223" endtime="20201030 18:30:14.317"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:14.330" endtime="20201030 18:30:14.622"></status>
</kw>
<msg timestamp="20201030 18:30:14.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034414056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034773931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:14.327" endtime="20201030 18:30:14.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:14.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034414056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034773931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:14.626" endtime="20201030 18:30:14.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:14.633" endtime="20201030 18:30:14.635"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:14.321" endtime="20201030 18:30:14.636"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:14.318" endtime="20201030 18:30:14.636"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:14.640" level="INFO">${PHILIP_RES} = [{'diff': 0.00035987500000000255}, {'diff': 0.0003599999999999992}, {'diff': 0.00036002799999999835}, {'diff': 0.0003600139999999988}, {'diff': 0.00035993000000000136}, {'diff': 0.0003599999999999992}...</msg>
<status status="PASS" starttime="20201030 18:30:14.637" endtime="20201030 18:30:14.640"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:14.645" level="INFO">${RESULT} = {'diff': [0.00035987500000000255, 0.0003599999999999992, 0.00036002799999999835, 0.0003600139999999988, 0.00035993000000000136, 0.0003599999999999992, 0.00035994400000000093, 0.0003598890000000021, 0....</msg>
<status status="PASS" starttime="20201030 18:30:14.641" endtime="20201030 18:30:14.645"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:14.649" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:14.648" endtime="20201030 18:30:14.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:14.651" level="INFO">VALUE: [0.00035987500000000255, 0.0003599999999999992, 0.00036002799999999835, 0.0003600139999999988, 0.00035993000000000136, 0.0003599999999999992, 0.00035994400000000093, 0.0003598890000000021, 0.00035987500000000255, 0.0003598470000000034, 0.0003600269999999989, 0.0003599869999999991, 0.000359959, 0.00036011199999999577, 0.00035997200000000007, 0.0003599580000000005, 0.0003599580000000005, 0.00036011100000000323, 0.00035998599999999964, 0.00036008299999999716, 0.00036004200000000486, 0.00035987500000000255, 0.0003599999999999992, 0.00035998599999999964, 0.000360070000000004, 0.00036006999999999706, 0.00035991700000000126, 0.00035991700000000126, 0.00036002799999999835, 0.0003600410000000054, 0.00036002799999999835, 0.00036002799999999835, 0.0003599859999999927, 0.0003600559999999975, 0.0003600559999999975, 0.000360041999999991, 0.0003599999999999992, 0.00036004200000000486, 0.0003601949999999937, 0.00036002799999999835, 0.00035995800000000744, 0.00036002799999999835, 0.0003598749999999956, 0.00036002799999999835, 0.000360070000000004, 0.0003598749999999956, 0.000360054999999998, 0.0003601390000000093, 0.0003599860000000066, 0.00035994400000000093]</msg>
<status status="PASS" starttime="20201030 18:30:14.650" endtime="20201030 18:30:14.652"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:14.645" endtime="20201030 18:30:14.653"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:14.656" endtime="20201030 18:30:14.676"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:14.655" endtime="20201030 18:30:14.676"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:14.654" endtime="20201030 18:30:14.676"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:14.220" endtime="20201030 18:30:14.677"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:14.219" endtime="20201030 18:30:14.677"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:14.685" endtime="20201030 18:30:14.746"></status>
</kw>
<msg timestamp="20201030 18:30:14.746" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:14.684" endtime="20201030 18:30:14.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:14.749" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:14.747" endtime="20201030 18:30:14.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:14.750" endtime="20201030 18:30:14.752"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:14.681" endtime="20201030 18:30:14.752"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:14.679" endtime="20201030 18:30:14.753"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:14.759" endtime="20201030 18:30:15.045"></status>
</kw>
<msg timestamp="20201030 18:30:15.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019511056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019886278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:14.757" endtime="20201030 18:30:15.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:15.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019511056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019886278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:15.048" endtime="20201030 18:30:15.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:15.056" endtime="20201030 18:30:15.059"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:14.755" endtime="20201030 18:30:15.059"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:14.753" endtime="20201030 18:30:15.060"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:15.064" level="INFO">${PHILIP_RES} = [{'diff': 0.00037522200000000144}, {'diff': 0.0003753469999999981}, {'diff': 0.000375221999999998}, {'diff': 0.0003752919999999993}, {'diff': 0.0003752779999999997}, {'diff': 0.00037544500000000203}, ...</msg>
<status status="PASS" starttime="20201030 18:30:15.060" endtime="20201030 18:30:15.064"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:15.068" level="INFO">${RESULT} = {'diff': [0.00037522200000000144, 0.0003753469999999981, 0.000375221999999998, 0.0003752919999999993, 0.0003752779999999997, 0.00037544500000000203, 0.00037540299999999985, 0.0003754439999999991, 0.00...</msg>
<status status="PASS" starttime="20201030 18:30:15.065" endtime="20201030 18:30:15.068"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:15.072" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:15.071" endtime="20201030 18:30:15.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:15.074" level="INFO">VALUE: [0.00037522200000000144, 0.0003753469999999981, 0.000375221999999998, 0.0003752919999999993, 0.0003752779999999997, 0.00037544500000000203, 0.00037540299999999985, 0.0003754439999999991, 0.0003753890000000003, 0.00037531899999999896, 0.00037531899999999896, 0.00037534700000000157, 0.000375430000000003, 0.00037548600000000126, 0.0003754720000000017, 0.00037550000000000083, 0.00037547299999999423, 0.0003754159999999965, 0.00037532000000000537, 0.0003754580000000021, 0.00037536099999999767, 0.00037536099999999767, 0.00037544400000000255, 0.0003753889999999968, 0.00037548600000000126, 0.00037544400000000255, 0.0003754590000000016, 0.0003754590000000016, 0.00037544400000000255, 0.00037547199999999475, 0.00037548600000000126, 0.0003754580000000021, 0.0003753750000000042, 0.00037538900000000375, 0.0003754720000000017, 0.000375333999999998, 0.00037533299999999853, 0.0003752080000000019, 0.00037537499999999724, 0.0003755140000000004, 0.00037530599999999886, 0.0003753469999999981, 0.0003754170000000029, 0.0003754019999999969, 0.00037538900000000375, 0.0003754439999999887, 0.0003753610000000046, 0.0003754310000000094, 0.00037531899999999896, 0.0003753750000000111]</msg>
<status status="PASS" starttime="20201030 18:30:15.073" endtime="20201030 18:30:15.075"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:15.069" endtime="20201030 18:30:15.076"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:15.079" endtime="20201030 18:30:15.099"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:15.078" endtime="20201030 18:30:15.099"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:15.077" endtime="20201030 18:30:15.100"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:14.678" endtime="20201030 18:30:15.100"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:14.677" endtime="20201030 18:30:15.100"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:15.110" endtime="20201030 18:30:15.178"></status>
</kw>
<msg timestamp="20201030 18:30:15.179" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:15.107" endtime="20201030 18:30:15.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:15.184" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:15.181" endtime="20201030 18:30:15.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:15.186" endtime="20201030 18:30:15.189"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:15.104" endtime="20201030 18:30:15.191"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:15.102" endtime="20201030 18:30:15.192"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:15.205" endtime="20201030 18:30:15.506"></status>
</kw>
<msg timestamp="20201030 18:30:15.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023398778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023789792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:15.202" endtime="20201030 18:30:15.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:15.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023398778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023789792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:15.510" endtime="20201030 18:30:15.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:15.518" endtime="20201030 18:30:15.519"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:15.196" endtime="20201030 18:30:15.520"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:15.193" endtime="20201030 18:30:15.520"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:15.524" level="INFO">${PHILIP_RES} = [{'diff': 0.000391014000000002}, {'diff': 0.0003911389999999987}, {'diff': 0.0003912220000000001}, {'diff': 0.00039119500000000043}, {'diff': 0.00039105600000000074}, {'diff': 0.0003911670000000013}, ...</msg>
<status status="PASS" starttime="20201030 18:30:15.521" endtime="20201030 18:30:15.524"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:15.528" level="INFO">${RESULT} = {'diff': [0.000391014000000002, 0.0003911389999999987, 0.0003912220000000001, 0.00039119500000000043, 0.00039105600000000074, 0.0003911670000000013, 0.0003911249999999991, 0.0003910839999999999, 0.000...</msg>
<status status="PASS" starttime="20201030 18:30:15.525" endtime="20201030 18:30:15.528"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:15.532" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:15.531" endtime="20201030 18:30:15.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:15.535" level="INFO">VALUE: [0.000391014000000002, 0.0003911389999999987, 0.0003912220000000001, 0.00039119500000000043, 0.00039105600000000074, 0.0003911670000000013, 0.0003911249999999991, 0.0003910839999999999, 0.0003910280000000016, 0.00039105600000000074, 0.0003911249999999991, 0.0003909579999999968, 0.0003909860000000029, 0.0003911939999999975, 0.0003909999999999955, 0.0003911389999999987, 0.0003910830000000004, 0.0003911809999999974, 0.00039111099999999954, 0.0003911389999999987, 0.0003912920000000014, 0.00039127800000000185, 0.00039109699999999997, 0.00039111099999999954, 0.0003911519999999988, 0.00039120899999999653, 0.00039111099999999954, 0.00039115299999999825, 0.00039111099999999954, 0.0003910700000000003, 0.00039105600000000074, 0.0003910830000000004, 0.00039109699999999997, 0.00039111099999999954, 0.00039122200000000357, 0.00039109799999999945, 0.00039111099999999954, 0.0003911389999999987, 0.0003911249999999922, 0.0003911530000000052, 0.00039136099999999285, 0.00039104199999999423, 0.00039115199999999184, 0.00039104099999999475, 0.00039111099999999954, 0.0003911529999999913, 0.00039123599999998926, 0.00039101400000000897, 0.00039123600000000314, 0.0003911389999999987]</msg>
<status status="PASS" starttime="20201030 18:30:15.533" endtime="20201030 18:30:15.536"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:15.529" endtime="20201030 18:30:15.537"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:15.541" endtime="20201030 18:30:15.560"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:15.539" endtime="20201030 18:30:15.560"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:15.538" endtime="20201030 18:30:15.561"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:15.101" endtime="20201030 18:30:15.561"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:15.100" endtime="20201030 18:30:15.561"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:15.570" endtime="20201030 18:30:15.635"></status>
</kw>
<msg timestamp="20201030 18:30:15.636" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:15.568" endtime="20201030 18:30:15.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:15.638" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:15.637" endtime="20201030 18:30:15.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:15.639" endtime="20201030 18:30:15.641"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:15.566" endtime="20201030 18:30:15.641"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:15.564" endtime="20201030 18:30:15.642"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:15.648" endtime="20201030 18:30:15.933"></status>
</kw>
<msg timestamp="20201030 18:30:15.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019325278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019732319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:15.647" endtime="20201030 18:30:15.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:15.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019325278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019732319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:15.937" endtime="20201030 18:30:15.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:15.945" endtime="20201030 18:30:15.947"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:15.644" endtime="20201030 18:30:15.947"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:15.642" endtime="20201030 18:30:15.948"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:15.951" level="INFO">${PHILIP_RES} = [{'diff': 0.00040704100000000035}, {'diff': 0.00040713899999999734}, {'diff': 0.0004069719999999985}, {'diff': 0.00040719500000000255}, {'diff': 0.00040726400000000093}, {'diff': 0.0004070829999999990...</msg>
<status status="PASS" starttime="20201030 18:30:15.948" endtime="20201030 18:30:15.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:15.958" level="INFO">${RESULT} = {'diff': [0.00040704100000000035, 0.00040713899999999734, 0.0004069719999999985, 0.00040719500000000255, 0.00040726400000000093, 0.00040708299999999906, 0.00040712500000000124, 0.0004072220000000022, ...</msg>
<status status="PASS" starttime="20201030 18:30:15.952" endtime="20201030 18:30:15.959"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:15.963" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:15.962" endtime="20201030 18:30:15.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:15.965" level="INFO">VALUE: [0.00040704100000000035, 0.00040713899999999734, 0.0004069719999999985, 0.00040719500000000255, 0.00040726400000000093, 0.00040708299999999906, 0.00040712500000000124, 0.0004072220000000022, 0.0004070970000000021, 0.00040718000000000004, 0.0004070559999999994, 0.0004070139999999972, 0.0004071949999999991, 0.0004070420000000033, 0.0004071390000000008, 0.0004070000000000046, 0.0004070830000000025, 0.00040705600000000286, 0.0004070829999999956, 0.0004071109999999947, 0.0004069589999999984, 0.0004071809999999995, 0.0004070829999999956, 0.00040709699999999516, 0.00040712500000000124, 0.00040711200000000114, 0.00040711100000000167, 0.00040712500000000124, 0.0004070269999999973, 0.00040702700000000425, 0.0004070829999999956, 0.00040704199999999635, 0.0004071939999999996, 0.00040726399999999746, 0.00040706900000000296, 0.0004070420000000033, 0.00040711100000000167, 0.00040699999999999764, 0.00040711100000000167, 0.00040704199999999635, 0.00040702799999998984, 0.0004071249999999943, 0.0004070830000000025, 0.0004070280000000037, 0.0004069999999999907, 0.0004072359999999914, 0.0004070280000000037, 0.0004069999999999907, 0.00040702700000000425, 0.000407068999999996]</msg>
<status status="PASS" starttime="20201030 18:30:15.964" endtime="20201030 18:30:15.966"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:15.959" endtime="20201030 18:30:15.967"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:15.970" endtime="20201030 18:30:15.990"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:15.969" endtime="20201030 18:30:15.990"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:15.968" endtime="20201030 18:30:15.990"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:15.562" endtime="20201030 18:30:15.991"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:15.562" endtime="20201030 18:30:15.991"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:15.999" endtime="20201030 18:30:16.068"></status>
</kw>
<msg timestamp="20201030 18:30:16.069" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:15.998" endtime="20201030 18:30:16.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:16.074" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:16.072" endtime="20201030 18:30:16.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:16.077" endtime="20201030 18:30:16.080"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:15.995" endtime="20201030 18:30:16.081"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:15.993" endtime="20201030 18:30:16.082"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:16.095" endtime="20201030 18:30:16.400"></status>
</kw>
<msg timestamp="20201030 18:30:16.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021792722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022215986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:16.092" endtime="20201030 18:30:16.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:16.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021792722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022215986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:16.404" endtime="20201030 18:30:16.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:16.412" endtime="20201030 18:30:16.413"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.087" endtime="20201030 18:30:16.414"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.083" endtime="20201030 18:30:16.414"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:16.418" level="INFO">${PHILIP_RES} = [{'diff': 0.0004232639999999996}, {'diff': 0.0004232090000000008}, {'diff': 0.0004233609999999971}, {'diff': 0.00042333299999999796}, {'diff': 0.00042331999999999786}, {'diff': 0.00042325}, {'diff': 0...</msg>
<status status="PASS" starttime="20201030 18:30:16.415" endtime="20201030 18:30:16.418"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:16.422" level="INFO">${RESULT} = {'diff': [0.0004232639999999996, 0.0004232090000000008, 0.0004233609999999971, 0.00042333299999999796, 0.00042331999999999786, 0.00042325, 0.00042337500000000014, 0.0004233889999999997, 0.000423360999...</msg>
<status status="PASS" starttime="20201030 18:30:16.419" endtime="20201030 18:30:16.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:16.426" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:16.425" endtime="20201030 18:30:16.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:16.429" level="INFO">VALUE: [0.0004232639999999996, 0.0004232090000000008, 0.0004233609999999971, 0.00042333299999999796, 0.00042331999999999786, 0.00042325, 0.00042337500000000014, 0.0004233889999999997, 0.0004233609999999971, 0.00042323600000000045, 0.00042331900000000533, 0.00042331999999999786, 0.0004233189999999984, 0.00042322199999999394, 0.0004233890000000032, 0.0004233049999999988, 0.00042323600000000045, 0.0004233750000000036, 0.0004233189999999984, 0.00042337499999999667, 0.0004234169999999954, 0.00042350000000000027, 0.0004233340000000044, 0.0004234860000000007, 0.00042331999999999786, 0.0004233750000000036, 0.0004233750000000036, 0.00042334699999999753, 0.0004232769999999997, 0.000423444000000002, 0.0004234170000000023, 0.0004232919999999987, 0.00042333399999999743, 0.0004232630000000001, 0.00042344500000000146, 0.0004233059999999983, 0.0004233750000000036, 0.00042325, 0.00042327799999999915, 0.0004233200000000048, 0.00042331900000000533, 0.00042327799999999915, 0.00042340300000000275, 0.0004232769999999997, 0.0004231809999999947, 0.00042333399999999743, 0.00042326399999999265, 0.00042331900000000533, 0.0004233199999999909, 0.00042325]</msg>
<status status="PASS" starttime="20201030 18:30:16.427" endtime="20201030 18:30:16.429"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.423" endtime="20201030 18:30:16.430"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:16.434" endtime="20201030 18:30:16.453"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.432" endtime="20201030 18:30:16.454"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.431" endtime="20201030 18:30:16.454"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:15.992" endtime="20201030 18:30:16.454"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:15.991" endtime="20201030 18:30:16.454"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:16.463" endtime="20201030 18:30:16.533"></status>
</kw>
<msg timestamp="20201030 18:30:16.534" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:16.461" endtime="20201030 18:30:16.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:16.536" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:16.535" endtime="20201030 18:30:16.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:16.537" endtime="20201030 18:30:16.539"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.459" endtime="20201030 18:30:16.539"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.457" endtime="20201030 18:30:16.540"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:16.546" endtime="20201030 18:30:16.835"></status>
</kw>
<msg timestamp="20201030 18:30:16.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020470694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020910556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:16.545" endtime="20201030 18:30:16.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:16.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020470694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020910556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:16.839" endtime="20201030 18:30:16.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:16.847" endtime="20201030 18:30:16.849"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.542" endtime="20201030 18:30:16.849"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.540" endtime="20201030 18:30:16.850"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:16.854" level="INFO">${PHILIP_RES} = [{'diff': 0.0004398619999999992}, {'diff': 0.0004398330000000006}, {'diff': 0.00043988900000000233}, {'diff': 0.000439916999999998}, {'diff': 0.00043990299999999843}, {'diff': 0.0004399030000000019}, ...</msg>
<status status="PASS" starttime="20201030 18:30:16.850" endtime="20201030 18:30:16.854"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:16.858" level="INFO">${RESULT} = {'diff': [0.0004398619999999992, 0.0004398330000000006, 0.00043988900000000233, 0.000439916999999998, 0.00043990299999999843, 0.0004399030000000019, 0.00043993100000000104, 0.0004399170000000015, 0.00...</msg>
<status status="PASS" starttime="20201030 18:30:16.855" endtime="20201030 18:30:16.858"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:16.862" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:16.861" endtime="20201030 18:30:16.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:16.865" level="INFO">VALUE: [0.0004398619999999992, 0.0004398330000000006, 0.00043988900000000233, 0.000439916999999998, 0.00043990299999999843, 0.0004399030000000019, 0.00043993100000000104, 0.0004399170000000015, 0.00043993000000000157, 0.0004397359999999996, 0.0004398330000000006, 0.00043994399999999767, 0.00043980500000000144, 0.00043990299999999843, 0.0004399589999999967, 0.00043987500000000623, 0.0004397910000000019, 0.0004400970000000004, 0.0004400409999999952, 0.0004398330000000006, 0.00043986100000000666, 0.000439819000000001, 0.0004399020000000059, 0.00043990199999999896, 0.00043983400000000006, 0.00043997200000000375, 0.0004399450000000041, 0.0004398749999999993, 0.0004399450000000041, 0.00043972199999999656, 0.00043979200000000135, 0.0004398890000000058, 0.00043990299999999843, 0.00043973599999999613, 0.00043984700000000015, 0.00043970800000000393, 0.0004398060000000009, 0.00043973599999999613, 0.00044001400000000246, 0.0004398609999999997, 0.00043988899999999886, 0.0004398609999999997, 0.0004398060000000009, 0.00043995900000000365, 0.00043976399999999527, 0.00043967999999999785, 0.0004396669999999908, 0.00043980500000000144, 0.000439707999999997, 0.00043982000000000743]</msg>
<status status="PASS" starttime="20201030 18:30:16.864" endtime="20201030 18:30:16.867"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.859" endtime="20201030 18:30:16.867"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:16.871" endtime="20201030 18:30:16.891"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.869" endtime="20201030 18:30:16.891"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.868" endtime="20201030 18:30:16.892"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.455" endtime="20201030 18:30:16.892"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.455" endtime="20201030 18:30:16.892"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:16.901" endtime="20201030 18:30:16.973"></status>
</kw>
<msg timestamp="20201030 18:30:16.974" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:16.899" endtime="20201030 18:30:16.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:16.979" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:16.976" endtime="20201030 18:30:16.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:16.982" endtime="20201030 18:30:16.985"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.896" endtime="20201030 18:30:16.987"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.894" endtime="20201030 18:30:16.988"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:17.002" endtime="20201030 18:30:17.297"></status>
</kw>
<msg timestamp="20201030 18:30:17.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020096306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020552722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:16.998" endtime="20201030 18:30:17.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:17.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020096306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020552722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:17.301" endtime="20201030 18:30:17.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:17.309" endtime="20201030 18:30:17.310"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.993" endtime="20201030 18:30:17.311"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.989" endtime="20201030 18:30:17.311"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:17.315" level="INFO">${PHILIP_RES} = [{'diff': 0.0004564159999999977}, {'diff': 0.0004565560000000003}, {'diff': 0.0004565699999999999}, {'diff': 0.00045659699999999956}, {'diff': 0.00045663900000000174}, {'diff': 0.0004567080000000001},...</msg>
<status status="PASS" starttime="20201030 18:30:17.312" endtime="20201030 18:30:17.316"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:17.321" level="INFO">${RESULT} = {'diff': [0.0004564159999999977, 0.0004565560000000003, 0.0004565699999999999, 0.00045659699999999956, 0.00045663900000000174, 0.0004567080000000001, 0.0004565549999999974, 0.0004566530000000013, 0.00...</msg>
<status status="PASS" starttime="20201030 18:30:17.316" endtime="20201030 18:30:17.321"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:17.325" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:17.324" endtime="20201030 18:30:17.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:17.328" level="INFO">VALUE: [0.0004564159999999977, 0.0004565560000000003, 0.0004565699999999999, 0.00045659699999999956, 0.00045663900000000174, 0.0004567080000000001, 0.0004565549999999974, 0.0004566530000000013, 0.0004565549999999974, 0.00045662500000000217, 0.00045662500000000217, 0.0004565969999999961, 0.00045659700000000303, 0.0004567230000000061, 0.0004566660000000014, 0.00045681900000000414, 0.00045668100000000045, 0.0004565420000000042, 0.00045657000000000336, 0.000456485999999999, 0.0004565690000000039, 0.0004565829999999965, 0.0004565279999999977, 0.00045645799999999986, 0.0004566519999999949, 0.00045654100000000475, 0.0004565690000000039, 0.0004566110000000026, 0.0004566670000000009, 0.00045655599999999685, 0.0004565279999999977, 0.00045651299999999867, 0.00045663900000000174, 0.00045661099999999566, 0.0004567089999999996, 0.00045668100000000045, 0.00045668100000000045, 0.0004566670000000078, 0.00045659700000000303, 0.00045659699999998915, 0.00045661099999999566, 0.00045661099999999566, 0.00045655599999999685, 0.00045665299999998743, 0.00045661100000000954, 0.0004565829999999965, 0.00045657000000000336, 0.00045666599999999447, 0.0004565279999999977, 0.0004566390000000087]</msg>
<status status="PASS" starttime="20201030 18:30:17.326" endtime="20201030 18:30:17.328"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.322" endtime="20201030 18:30:17.329"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:17.333" endtime="20201030 18:30:17.352"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.331" endtime="20201030 18:30:17.353"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.330" endtime="20201030 18:30:17.353"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.893" endtime="20201030 18:30:17.353"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.892" endtime="20201030 18:30:17.354"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:17.362" endtime="20201030 18:30:17.437"></status>
</kw>
<msg timestamp="20201030 18:30:17.438" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:17.361" endtime="20201030 18:30:17.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:17.440" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:17.439" endtime="20201030 18:30:17.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:17.441" endtime="20201030 18:30:17.443"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.358" endtime="20201030 18:30:17.444"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.356" endtime="20201030 18:30:17.444"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:17.451" endtime="20201030 18:30:17.738"></status>
</kw>
<msg timestamp="20201030 18:30:17.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020626375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021099889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:17.449" endtime="20201030 18:30:17.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:17.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020626375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021099889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:17.742" endtime="20201030 18:30:17.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:17.750" endtime="20201030 18:30:17.753"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.446" endtime="20201030 18:30:17.755"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.445" endtime="20201030 18:30:17.756"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:17.764" level="INFO">${PHILIP_RES} = [{'diff': 0.00047351400000000127}, {'diff': 0.00047351400000000127}, {'diff': 0.00047369499999999967}, {'diff': 0.00047365300000000096}, {'diff': 0.0004736109999999988}, {'diff': 0.0004736250000000018...</msg>
<status status="PASS" starttime="20201030 18:30:17.757" endtime="20201030 18:30:17.765"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:17.773" level="INFO">${RESULT} = {'diff': [0.00047351400000000127, 0.00047351400000000127, 0.00047369499999999967, 0.00047365300000000096, 0.0004736109999999988, 0.0004736250000000018, 0.0004735130000000018, 0.0004735969999999992, 0....</msg>
<status status="PASS" starttime="20201030 18:30:17.766" endtime="20201030 18:30:17.774"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:17.783" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:17.780" endtime="20201030 18:30:17.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:17.788" level="INFO">VALUE: [0.00047351400000000127, 0.00047351400000000127, 0.00047369499999999967, 0.00047365300000000096, 0.0004736109999999988, 0.0004736250000000018, 0.0004735130000000018, 0.0004735969999999992, 0.00047370799999999977, 0.000473749999999995, 0.00047367999999999716, 0.000473651999999998, 0.000473556, 0.0004736659999999976, 0.0004736389999999979, 0.00047365300000000443, 0.0004734859999999952, 0.0004735830000000066, 0.0004736109999999988, 0.0004737079999999963, 0.000473667000000004, 0.00047356999999999955, 0.000473667000000004, 0.0004736109999999988, 0.00047349999999999476, 0.00047345900000000246, 0.00047366600000000453, 0.00047373599999999544, 0.0004735969999999992, 0.0004735279999999939, 0.0004735690000000001, 0.00047372199999999587, 0.000473556, 0.0004735979999999987, 0.0004735969999999923, 0.00047358299999999964, 0.0004736389999999979, 0.0004734440000000034, 0.00047366699999999706, 0.0004736250000000053, 0.0004735549999999866, 0.00047359700000000615, 0.0004735969999999923, 0.000473556, 0.0004735699999999926, 0.00047365299999999055, 0.00047351399999999433, 0.00047348700000000854, 0.0004736950000000101, 0.000473556]</msg>
<status status="PASS" starttime="20201030 18:30:17.785" endtime="20201030 18:30:17.790"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.775" endtime="20201030 18:30:17.791"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:17.799" endtime="20201030 18:30:17.821"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.796" endtime="20201030 18:30:17.823"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.793" endtime="20201030 18:30:17.823"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.355" endtime="20201030 18:30:17.824"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.354" endtime="20201030 18:30:17.825"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:17.843" endtime="20201030 18:30:17.921"></status>
</kw>
<msg timestamp="20201030 18:30:17.921" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:17.840" endtime="20201030 18:30:17.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:17.924" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:17.922" endtime="20201030 18:30:17.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:17.925" endtime="20201030 18:30:17.927"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.834" endtime="20201030 18:30:17.927"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.830" endtime="20201030 18:30:17.928"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:17.934" endtime="20201030 18:30:18.222"></status>
</kw>
<msg timestamp="20201030 18:30:18.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035611042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036101875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:17.933" endtime="20201030 18:30:18.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:18.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035611042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036101875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:18.226" endtime="20201030 18:30:18.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:18.235" endtime="20201030 18:30:18.237"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.930" endtime="20201030 18:30:18.237"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.928" endtime="20201030 18:30:18.238"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:18.242" level="INFO">${PHILIP_RES} = [{'diff': 0.0004908329999999961}, {'diff': 0.0004911800000000008}, {'diff': 0.000491125000000002}, {'diff': 0.0004910829999999963}, {'diff': 0.0004910970000000028}, {'diff': 0.0004909170000000004}, {'...</msg>
<status status="PASS" starttime="20201030 18:30:18.238" endtime="20201030 18:30:18.242"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:18.246" level="INFO">${RESULT} = {'diff': [0.0004908329999999961, 0.0004911800000000008, 0.000491125000000002, 0.0004910829999999963, 0.0004910970000000028, 0.0004909170000000004, 0.0004909449999999996, 0.0004909030000000009, 0.00049...</msg>
<status status="PASS" starttime="20201030 18:30:18.243" endtime="20201030 18:30:18.246"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:18.250" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:18.249" endtime="20201030 18:30:18.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:18.253" level="INFO">VALUE: [0.0004908329999999961, 0.0004911800000000008, 0.000491125000000002, 0.0004910829999999963, 0.0004910970000000028, 0.0004909170000000004, 0.0004909449999999996, 0.0004909030000000009, 0.0004910840000000027, 0.0004909170000000004, 0.0004909440000000001, 0.0004908329999999961, 0.0004911530000000011, 0.0004910689999999968, 0.0004910969999999959, 0.0004908749999999948, 0.0004910419999999971, 0.0004909170000000004, 0.0004909859999999988, 0.000491124999999995, 0.0004909019999999945, 0.0004907920000000038, 0.0004909579999999997, 0.0004909859999999988, 0.0004910690000000106, 0.0004910969999999959, 0.0004908609999999952, 0.0004908059999999964, 0.0004909859999999988, 0.000491013999999998, 0.0004908890000000082, 0.0004910550000000041, 0.0004910830000000033, 0.0004909170000000074, 0.0004907360000000055, 0.0004908340000000094, 0.0004907920000000038, 0.0004907640000000046, 0.0004908049999999969, 0.0004908329999999961, 0.0004908049999999969, 0.0004908059999999964, 0.0004909170000000074, 0.0004906939999999999, 0.0004906380000000016, 0.0004906380000000016, 0.0004905829999999889, 0.0004906939999999999, 0.000490721999999999, 0.0004907640000000046]</msg>
<status status="PASS" starttime="20201030 18:30:18.251" endtime="20201030 18:30:18.254"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.247" endtime="20201030 18:30:18.255"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:18.259" endtime="20201030 18:30:18.278"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.257" endtime="20201030 18:30:18.279"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.256" endtime="20201030 18:30:18.279"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.826" endtime="20201030 18:30:18.280"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.825" endtime="20201030 18:30:18.280"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:18.289" endtime="20201030 18:30:18.362"></status>
</kw>
<msg timestamp="20201030 18:30:18.363" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:18.287" endtime="20201030 18:30:18.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:18.365" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:18.364" endtime="20201030 18:30:18.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:18.366" endtime="20201030 18:30:18.368"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.284" endtime="20201030 18:30:18.369"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.282" endtime="20201030 18:30:18.369"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:18.376" endtime="20201030 18:30:18.682"></status>
</kw>
<msg timestamp="20201030 18:30:18.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018955597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019463708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:18.374" endtime="20201030 18:30:18.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:18.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018955597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019463708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:18.686" endtime="20201030 18:30:18.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:18.694" endtime="20201030 18:30:18.695"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.372" endtime="20201030 18:30:18.696"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.370" endtime="20201030 18:30:18.696"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:18.700" level="INFO">${PHILIP_RES} = [{'diff': 0.0005081109999999986}, {'diff': 0.0005083050000000006}, {'diff': 0.0005082779999999974}, {'diff': 0.0005084449999999997}, {'diff': 0.0005083610000000023}, {'diff': 0.0005082779999999974}, {...</msg>
<status status="PASS" starttime="20201030 18:30:18.697" endtime="20201030 18:30:18.700"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:18.705" level="INFO">${RESULT} = {'diff': [0.0005081109999999986, 0.0005083050000000006, 0.0005082779999999974, 0.0005084449999999997, 0.0005083610000000023, 0.0005082779999999974, 0.0005082500000000018, 0.0005081670000000003, 0.0005...</msg>
<status status="PASS" starttime="20201030 18:30:18.701" endtime="20201030 18:30:18.705"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:18.709" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:18.708" endtime="20201030 18:30:18.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:18.712" level="INFO">VALUE: [0.0005081109999999986, 0.0005083050000000006, 0.0005082779999999974, 0.0005084449999999997, 0.0005083610000000023, 0.0005082779999999974, 0.0005082500000000018, 0.0005081670000000003, 0.0005082639999999979, 0.0005083050000000006, 0.0005080689999999999, 0.0005083050000000006, 0.0005082500000000018, 0.0005083339999999992, 0.0005081940000000035, 0.0005081249999999982, 0.0005083339999999992, 0.0005082220000000026, 0.0005083609999999988, 0.0005083339999999992, 0.0005084030000000045, 0.0005082780000000009, 0.0005083469999999993, 0.000508306, 0.000508195000000003, 0.0005081530000000042, 0.0005082920000000005, 0.0005083479999999987, 0.0005082500000000018, 0.0005082360000000022, 0.0005081669999999969, 0.0005082920000000005, 0.0005081809999999964, 0.0005080689999999999, 0.0005081659999999905, 0.0005082090000000095, 0.0005083190000000071, 0.000508388999999998, 0.000508388999999998, 0.0005082359999999952, 0.0005084860000000024, 0.0005083469999999923, 0.0005082919999999935, 0.0005082920000000074, 0.000508290999999994, 0.0005082780000000009, 0.0005083750000000054, 0.0005083749999999915, 0.0005083609999999988, 0.0005083199999999927]</msg>
<status status="PASS" starttime="20201030 18:30:18.711" endtime="20201030 18:30:18.713"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.706" endtime="20201030 18:30:18.713"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:18.717" endtime="20201030 18:30:18.736"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.715" endtime="20201030 18:30:18.737"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.714" endtime="20201030 18:30:18.737"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.281" endtime="20201030 18:30:18.738"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.280" endtime="20201030 18:30:18.738"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:18.746" endtime="20201030 18:30:18.830"></status>
</kw>
<msg timestamp="20201030 18:30:18.830" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:18.745" endtime="20201030 18:30:18.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:18.833" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:18.831" endtime="20201030 18:30:18.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:18.834" endtime="20201030 18:30:18.835"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.742" endtime="20201030 18:30:18.836"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.740" endtime="20201030 18:30:18.836"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:18.843" endtime="20201030 18:30:19.130"></status>
</kw>
<msg timestamp="20201030 18:30:19.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023091042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023617222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:18.841" endtime="20201030 18:30:19.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:19.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023091042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023617222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:19.135" endtime="20201030 18:30:19.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:19.142" endtime="20201030 18:30:19.144"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.839" endtime="20201030 18:30:19.145"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.837" endtime="20201030 18:30:19.145"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:19.149" level="INFO">${PHILIP_RES} = [{'diff': 0.0005261800000000011}, {'diff': 0.0005261249999999988}, {'diff': 0.0005262499999999989}, {'diff': 0.0005263200000000003}, {'diff': 0.0005262500000000024}, {'diff': 0.0005261940000000007}, {...</msg>
<status status="PASS" starttime="20201030 18:30:19.146" endtime="20201030 18:30:19.149"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:19.153" level="INFO">${RESULT} = {'diff': [0.0005261800000000011, 0.0005261249999999988, 0.0005262499999999989, 0.0005263200000000003, 0.0005262500000000024, 0.0005261940000000007, 0.0005261529999999945, 0.0005263050000000047, 0.0005...</msg>
<status status="PASS" starttime="20201030 18:30:19.150" endtime="20201030 18:30:19.153"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:19.157" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:19.156" endtime="20201030 18:30:19.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:19.160" level="INFO">VALUE: [0.0005261800000000011, 0.0005261249999999988, 0.0005262499999999989, 0.0005263200000000003, 0.0005262500000000024, 0.0005261940000000007, 0.0005261529999999945, 0.0005263050000000047, 0.0005263329999999969, 0.0005261810000000006, 0.0005262779999999981, 0.0005260549999999975, 0.0005260550000000044, 0.0005262080000000002, 0.000526167000000001, 0.0005261529999999945, 0.0005262359999999994, 0.0005263059999999972, 0.0005261949999999932, 0.0005262359999999994, 0.0005262919999999977, 0.0005262080000000002, 0.0005263340000000033, 0.0005261949999999932, 0.0005260970000000031, 0.0005262219999999998, 0.0005262499999999989, 0.0005262639999999985, 0.0005263480000000029, 0.0005262359999999994, 0.0005261249999999884, 0.0005262359999999994, 0.0005262500000000059, 0.0005262639999999985, 0.0005262079999999864, 0.0005261109999999958, 0.000525957999999993, 0.0005261659999999946, 0.0005260420000000043, 0.0005260839999999961, 0.0005260140000000052, 0.0005259999999999987, 0.0005260549999999975, 0.0005261810000000006, 0.000526069000000004, 0.0005260140000000052, 0.000526069000000004, 0.0005262219999999929, 0.0005261800000000011, 0.0005259999999999987]</msg>
<status status="PASS" starttime="20201030 18:30:19.158" endtime="20201030 18:30:19.166"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.154" endtime="20201030 18:30:19.167"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:19.170" endtime="20201030 18:30:19.190"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.169" endtime="20201030 18:30:19.191"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.168" endtime="20201030 18:30:19.191"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.739" endtime="20201030 18:30:19.191"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.738" endtime="20201030 18:30:19.191"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:19.200" endtime="20201030 18:30:19.282"></status>
</kw>
<msg timestamp="20201030 18:30:19.282" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:19.198" endtime="20201030 18:30:19.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:19.285" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:19.283" endtime="20201030 18:30:19.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:19.286" endtime="20201030 18:30:19.287"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.196" endtime="20201030 18:30:19.288"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.194" endtime="20201030 18:30:19.288"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:19.295" endtime="20201030 18:30:19.596"></status>
</kw>
<msg timestamp="20201030 18:30:19.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021707472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022251375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:19.293" endtime="20201030 18:30:19.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:19.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021707472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022251375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:19.600" endtime="20201030 18:30:19.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:19.608" endtime="20201030 18:30:19.610"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.291" endtime="20201030 18:30:19.610"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.289" endtime="20201030 18:30:19.611"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:19.615" level="INFO">${PHILIP_RES} = [{'diff': 0.0005439030000000018}, {'diff': 0.0005440420000000015}, {'diff': 0.0005440700000000007}, {'diff': 0.0005440139999999989}, {'diff': 0.0005439580000000006}, {'diff': 0.0005439999999999993}, {...</msg>
<status status="PASS" starttime="20201030 18:30:19.612" endtime="20201030 18:30:19.615"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:19.619" level="INFO">${RESULT} = {'diff': [0.0005439030000000018, 0.0005440420000000015, 0.0005440700000000007, 0.0005440139999999989, 0.0005439580000000006, 0.0005439999999999993, 0.0005438470000000001, 0.0005439859999999963, 0.0005...</msg>
<status status="PASS" starttime="20201030 18:30:19.616" endtime="20201030 18:30:19.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:19.623" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:19.622" endtime="20201030 18:30:19.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:19.626" level="INFO">VALUE: [0.0005439030000000018, 0.0005440420000000015, 0.0005440700000000007, 0.0005440139999999989, 0.0005439580000000006, 0.0005439999999999993, 0.0005438470000000001, 0.0005439859999999963, 0.000544028000000002, 0.0005440000000000028, 0.0005440140000000024, 0.000544139000000006, 0.0005439860000000032, 0.0005438609999999997, 0.0005439159999999985, 0.0005438889999999988, 0.0005439590000000036, 0.0005440840000000002, 0.0005440000000000028, 0.0005439720000000037, 0.0005440830000000008, 0.0005440409999999951, 0.0005439159999999985, 0.0005439860000000032, 0.0005439860000000032, 0.000544138999999999, 0.0005440140000000024, 0.0005440690000000012, 0.0005440140000000024, 0.0005440970000000073, 0.0005441119999999994, 0.0005440689999999943, 0.0005440689999999943, 0.0005444160000000059, 0.0005442079999999905, 0.0005443890000000062, 0.0005441249999999925, 0.0005441949999999973, 0.0005442640000000026, 0.0005442080000000044, 0.0005441810000000047, 0.0005441529999999917, 0.0005443329999999941, 0.0005444030000000127, 0.0005443749999999997, 0.0005442920000000018, 0.0005443470000000006, 0.0005443470000000006, 0.0005441669999999982, 0.0005442360000000035]</msg>
<status status="PASS" starttime="20201030 18:30:19.624" endtime="20201030 18:30:19.627"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.619" endtime="20201030 18:30:19.628"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:19.631" endtime="20201030 18:30:19.651"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.630" endtime="20201030 18:30:19.651"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.629" endtime="20201030 18:30:19.652"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.192" endtime="20201030 18:30:19.652"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.192" endtime="20201030 18:30:19.652"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:19.660" endtime="20201030 18:30:19.739"></status>
</kw>
<msg timestamp="20201030 18:30:19.740" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:19.659" endtime="20201030 18:30:19.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:19.742" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:19.741" endtime="20201030 18:30:19.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:19.744" endtime="20201030 18:30:19.745"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.656" endtime="20201030 18:30:19.746"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.654" endtime="20201030 18:30:19.746"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:19.753" endtime="20201030 18:30:20.038"></status>
</kw>
<msg timestamp="20201030 18:30:20.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018060208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018622764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:19.751" endtime="20201030 18:30:20.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:20.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018060208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018622764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:20.042" endtime="20201030 18:30:20.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:20.050" endtime="20201030 18:30:20.052"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.748" endtime="20201030 18:30:20.052"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.747" endtime="20201030 18:30:20.053"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:20.056" level="INFO">${PHILIP_RES} = [{'diff': 0.0005625559999999988}, {'diff': 0.0005626110000000011}, {'diff': 0.0005624309999999987}, {'diff': 0.0005625419999999992}, {'diff': 0.0005627779999999999}, {'diff': 0.0005625279999999996}, {...</msg>
<status status="PASS" starttime="20201030 18:30:20.053" endtime="20201030 18:30:20.057"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:20.064" level="INFO">${RESULT} = {'diff': [0.0005625559999999988, 0.0005626110000000011, 0.0005624309999999987, 0.0005625419999999992, 0.0005627779999999999, 0.0005625279999999996, 0.000562402, 0.0005623339999999977, 0.00056230499999...</msg>
<status status="PASS" starttime="20201030 18:30:20.057" endtime="20201030 18:30:20.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:20.068" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:20.067" endtime="20201030 18:30:20.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:20.071" level="INFO">VALUE: [0.0005625559999999988, 0.0005626110000000011, 0.0005624309999999987, 0.0005625419999999992, 0.0005627779999999999, 0.0005625279999999996, 0.000562402, 0.0005623339999999977, 0.0005623049999999991, 0.0005622219999999976, 0.0005623890000000034, 0.0005623329999999982, 0.0005623749999999969, 0.0005622500000000002, 0.0005622639999999998, 0.0005622500000000002, 0.000562194000000002, 0.0005623609999999973, 0.0005623620000000037, 0.0005624310000000021, 0.0005623620000000037, 0.0005622080000000015, 0.0005623469999999978, 0.0005625270000000002, 0.0005625690000000058, 0.0005624580000000018, 0.0005625000000000005, 0.0005625549999999993, 0.0005626670000000028, 0.0005624860000000009, 0.0005625140000000001, 0.0005625559999999918, 0.0005626390000000037, 0.0005626389999999898, 0.0005625280000000066, 0.0005625280000000066, 0.0005625830000000054, 0.0005622220000000011, 0.0005622360000000076, 0.0005622640000000068, 0.0005621950000000014, 0.0005623329999999982, 0.0005623339999999977, 0.0005622769999999999, 0.0005624580000000018, 0.000562291999999992, 0.0005622779999999994, 0.0005623480000000042, 0.0005623609999999973, 0.0005623609999999973]</msg>
<status status="PASS" starttime="20201030 18:30:20.069" endtime="20201030 18:30:20.071"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.065" endtime="20201030 18:30:20.072"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:20.076" endtime="20201030 18:30:20.096"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.074" endtime="20201030 18:30:20.097"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.073" endtime="20201030 18:30:20.097"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.653" endtime="20201030 18:30:20.097"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.652" endtime="20201030 18:30:20.097"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:20.106" endtime="20201030 18:30:20.193"></status>
</kw>
<msg timestamp="20201030 18:30:20.194" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:20.104" endtime="20201030 18:30:20.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:20.199" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:20.196" endtime="20201030 18:30:20.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:20.201" endtime="20201030 18:30:20.204"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.102" endtime="20201030 18:30:20.205"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.100" endtime="20201030 18:30:20.206"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:20.220" endtime="20201030 18:30:20.514"></status>
</kw>
<msg timestamp="20201030 18:30:20.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019978569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020559306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:20.217" endtime="20201030 18:30:20.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:20.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019978569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020559306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:20.518" endtime="20201030 18:30:20.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:20.526" endtime="20201030 18:30:20.528"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.211" endtime="20201030 18:30:20.528"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.208" endtime="20201030 18:30:20.529"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:20.533" level="INFO">${PHILIP_RES} = [{'diff': 0.0005807369999999978}, {'diff': 0.0005807500000000014}, {'diff': 0.0005807360000000018}, {'diff': 0.0005808750000000015}, {'diff': 0.0005805969999999987}, {'diff': 0.0005806939999999997}, {...</msg>
<status status="PASS" starttime="20201030 18:30:20.530" endtime="20201030 18:30:20.533"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:20.537" level="INFO">${RESULT} = {'diff': [0.0005807369999999978, 0.0005807500000000014, 0.0005807360000000018, 0.0005808750000000015, 0.0005805969999999987, 0.0005806939999999997, 0.0005807089999999987, 0.0005808330000000028, 0.0005...</msg>
<status status="PASS" starttime="20201030 18:30:20.534" endtime="20201030 18:30:20.537"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:20.541" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:20.540" endtime="20201030 18:30:20.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:20.544" level="INFO">VALUE: [0.0005807369999999978, 0.0005807500000000014, 0.0005807360000000018, 0.0005808750000000015, 0.0005805969999999987, 0.0005806939999999997, 0.0005807089999999987, 0.0005808330000000028, 0.000580667, 0.0005806939999999997, 0.0005807919999999966, 0.0005806110000000017, 0.0005807500000000049, 0.000580762999999998, 0.000580555999999996, 0.0005806800000000001, 0.0005806809999999996, 0.0005808190000000032, 0.0005807089999999987, 0.0005807220000000057, 0.0005806530000000004, 0.0005806660000000005, 0.0005808889999999942, 0.0005806390000000008, 0.0005806809999999996, 0.0005805829999999956, 0.0005808339999999954, 0.0005808049999999967, 0.0005806389999999939, 0.0005807359999999984, 0.0005805969999999883, 0.0005807230000000052, 0.000580861000000002, 0.0005810420000000038, 0.0005810279999999973, 0.0005808470000000093, 0.0005808890000000011, 0.0005810420000000038, 0.0005809310000000067, 0.0005810970000000026, 0.0005810409999999905, 0.0005808890000000011, 0.0005809579999999925, 0.0005809999999999982, 0.000580861000000002, 0.0005810559999999965, 0.000581070000000003, 0.0005809309999999929, 0.0005810140000000047, 0.0005809170000000002]</msg>
<status status="PASS" starttime="20201030 18:30:20.542" endtime="20201030 18:30:20.545"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.538" endtime="20201030 18:30:20.545"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:20.549" endtime="20201030 18:30:20.569"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.547" endtime="20201030 18:30:20.569"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.546" endtime="20201030 18:30:20.570"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.098" endtime="20201030 18:30:20.570"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.098" endtime="20201030 18:30:20.570"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:20.580" endtime="20201030 18:30:20.669"></status>
</kw>
<msg timestamp="20201030 18:30:20.669" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:20.578" endtime="20201030 18:30:20.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:20.672" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:20.670" endtime="20201030 18:30:20.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:20.673" endtime="20201030 18:30:20.675"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.575" endtime="20201030 18:30:20.675"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.573" endtime="20201030 18:30:20.676"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:20.683" endtime="20201030 18:30:20.969"></status>
</kw>
<msg timestamp="20201030 18:30:20.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024776847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025376333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:20.681" endtime="20201030 18:30:20.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:20.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024776847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025376333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:20.973" endtime="20201030 18:30:20.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:20.981" endtime="20201030 18:30:20.983"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.678" endtime="20201030 18:30:20.983"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.676" endtime="20201030 18:30:20.984"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:20.988" level="INFO">${PHILIP_RES} = [{'diff': 0.0005994859999999998}, {'diff': 0.0005995420000000015}, {'diff': 0.000599541999999998}, {'diff': 0.000599541999999998}, {'diff': 0.0005995139999999989}, {'diff': 0.0005994860000000032}, {'d...</msg>
<status status="PASS" starttime="20201030 18:30:20.985" endtime="20201030 18:30:20.988"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:20.993" level="INFO">${RESULT} = {'diff': [0.0005994859999999998, 0.0005995420000000015, 0.000599541999999998, 0.000599541999999998, 0.0005995139999999989, 0.0005994860000000032, 0.0005996669999999982, 0.0005996109999999999, 0.000599...</msg>
<status status="PASS" starttime="20201030 18:30:20.989" endtime="20201030 18:30:20.993"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:21.002" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:21.000" endtime="20201030 18:30:21.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:21.008" level="INFO">VALUE: [0.0005994859999999998, 0.0005995420000000015, 0.000599541999999998, 0.000599541999999998, 0.0005995139999999989, 0.0005994860000000032, 0.0005996669999999982, 0.0005996109999999999, 0.0005995830000000008, 0.000599445000000004, 0.0005996669999999982, 0.000599638999999999, 0.0005995550000000016, 0.0005996669999999982, 0.0005996669999999982, 0.0005995840000000002, 0.000599638999999999, 0.000599541000000002, 0.0005994590000000036, 0.0005996249999999995, 0.0005995970000000003, 0.0005996670000000051, 0.0005995700000000007, 0.0005995700000000007, 0.0005996109999999999, 0.0005995840000000002, 0.0005994730000000031, 0.0005995550000000016, 0.000599528000000002, 0.0005995139999999954, 0.0005994730000000031, 0.0005995550000000016, 0.0005995549999999877, 0.0005994720000000037, 0.0005996250000000064, 0.0005995560000000011, 0.0005994439999999907, 0.0005993880000000062, 0.0005995840000000002, 0.0005995139999999954, 0.0005995560000000011, 0.0005997080000000043, 0.0005995830000000008, 0.0005996109999999999, 0.0005995000000000028, 0.000599528000000002, 0.0005995139999999954, 0.0005995969999999934, 0.0005995139999999954, 0.0005995000000000028]</msg>
<status status="PASS" starttime="20201030 18:30:21.005" endtime="20201030 18:30:21.011"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.995" endtime="20201030 18:30:21.012"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:21.020" endtime="20201030 18:30:21.043"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.017" endtime="20201030 18:30:21.044"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.014" endtime="20201030 18:30:21.045"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.571" endtime="20201030 18:30:21.045"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.570" endtime="20201030 18:30:21.046"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:21.064" endtime="20201030 18:30:21.156"></status>
</kw>
<msg timestamp="20201030 18:30:21.157" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:21.061" endtime="20201030 18:30:21.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:21.159" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:21.158" endtime="20201030 18:30:21.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:21.160" endtime="20201030 18:30:21.162"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.055" endtime="20201030 18:30:21.163"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.051" endtime="20201030 18:30:21.163"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:21.170" endtime="20201030 18:30:21.459"></status>
</kw>
<msg timestamp="20201030 18:30:21.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034943653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035562056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:21.168" endtime="20201030 18:30:21.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:21.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034943653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035562056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:21.463" endtime="20201030 18:30:21.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:21.471" endtime="20201030 18:30:21.472"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.165" endtime="20201030 18:30:21.473"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.164" endtime="20201030 18:30:21.473"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:21.477" level="INFO">${PHILIP_RES} = [{'diff': 0.0006184030000000035}, {'diff': 0.0006183609999999978}, {'diff': 0.0006184860000000014}, {'diff': 0.0006186519999999973}, {'diff': 0.0006185140000000006}, {'diff': 0.000618597999999998}, {'...</msg>
<status status="PASS" starttime="20201030 18:30:21.474" endtime="20201030 18:30:21.478"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:21.483" level="INFO">${RESULT} = {'diff': [0.0006184030000000035, 0.0006183609999999978, 0.0006184860000000014, 0.0006186519999999973, 0.0006185140000000006, 0.000618597999999998, 0.0006184860000000014, 0.0006184300000000031, 0.00061...</msg>
<status status="PASS" starttime="20201030 18:30:21.479" endtime="20201030 18:30:21.483"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:21.487" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:21.486" endtime="20201030 18:30:21.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:21.490" level="INFO">VALUE: [0.0006184030000000035, 0.0006183609999999978, 0.0006184860000000014, 0.0006186519999999973, 0.0006185140000000006, 0.000618597999999998, 0.0006184860000000014, 0.0006184300000000031, 0.0006185970000000054, 0.000618500000000001, 0.0006184860000000014, 0.0006184580000000023, 0.0006185280000000001, 0.0006186810000000029, 0.0006185419999999997, 0.0006185559999999993, 0.000618500000000001, 0.0006184590000000018, 0.0006185699999999988, 0.0006184720000000088, 0.0006184719999999949, 0.0006183200000000055, 0.0006183339999999982, 0.0006185280000000071, 0.0006185550000000067, 0.000618388999999997, 0.0006184030000000035, 0.0006185969999999985, 0.0006183750000000043, 0.0006184860000000014, 0.000618582999999992, 0.0006185560000000062, 0.0006184309999999887, 0.0006184580000000023, 0.0006184030000000035, 0.0006184719999999949, 0.0006184860000000014, 0.000618290999999993, 0.0006181660000000033, 0.0006186119999999906, 0.0006184860000000014, 0.0006183890000000108, 0.0006184719999999949, 0.0006184310000000026, 0.0006184030000000035, 0.0006184999999999941, 0.0006187500000000012, 0.0006185560000000062, 0.0006185000000000079, 0.0006186249999999976]</msg>
<status status="PASS" starttime="20201030 18:30:21.488" endtime="20201030 18:30:21.490"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.483" endtime="20201030 18:30:21.491"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:21.495" endtime="20201030 18:30:21.514"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.493" endtime="20201030 18:30:21.515"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.492" endtime="20201030 18:30:21.515"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.048" endtime="20201030 18:30:21.515"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.047" endtime="20201030 18:30:21.516"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:21.524" endtime="20201030 18:30:21.618"></status>
</kw>
<msg timestamp="20201030 18:30:21.619" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:21.523" endtime="20201030 18:30:21.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:21.622" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:21.620" endtime="20201030 18:30:21.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:21.623" endtime="20201030 18:30:21.624"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.520" endtime="20201030 18:30:21.625"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.518" endtime="20201030 18:30:21.625"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:21.632" endtime="20201030 18:30:21.943"></status>
</kw>
<msg timestamp="20201030 18:30:21.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023491778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024129347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:21.631" endtime="20201030 18:30:21.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:21.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023491778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024129347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:21.947" endtime="20201030 18:30:21.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:21.955" endtime="20201030 18:30:21.957"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.628" endtime="20201030 18:30:21.957"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.626" endtime="20201030 18:30:21.958"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:21.962" level="INFO">${PHILIP_RES} = [{'diff': 0.0006375689999999976}, {'diff': 0.0006378469999999969}, {'diff': 0.000637861}, {'diff': 0.000637666999999998}, {'diff': 0.0006378060000000012}, {'diff': 0.0006378749999999961}, {'diff': 0.0...</msg>
<status status="PASS" starttime="20201030 18:30:21.958" endtime="20201030 18:30:21.962"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:21.966" level="INFO">${RESULT} = {'diff': [0.0006375689999999976, 0.0006378469999999969, 0.000637861, 0.000637666999999998, 0.0006378060000000012, 0.0006378749999999961, 0.0006377779999999986, 0.0006377359999999999, 0.000637708000000...</msg>
<status status="PASS" starttime="20201030 18:30:21.963" endtime="20201030 18:30:21.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:21.970" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:21.969" endtime="20201030 18:30:21.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:21.973" level="INFO">VALUE: [0.0006375689999999976, 0.0006378469999999969, 0.000637861, 0.000637666999999998, 0.0006378060000000012, 0.0006378749999999961, 0.0006377779999999986, 0.0006377359999999999, 0.0006377080000000007, 0.0006376950000000006, 0.0006378340000000038, 0.0006377220000000003, 0.000637763999999999, 0.0006378749999999961, 0.0006376950000000006, 0.0006376110000000032, 0.0006378610000000035, 0.0006377919999999981, 0.0006376800000000016, 0.0006378330000000043, 0.0006376110000000032, 0.000637763999999999, 0.000637763999999999, 0.0006376940000000011, 0.000637875000000003, 0.0006376520000000024, 0.0006378189999999978, 0.000637763999999999, 0.000637763999999999, 0.0006378049999999913, 0.0006377079999999868, 0.0006379440000000014, 0.000637763999999999, 0.0006378050000000052, 0.0006377220000000072, 0.0006378479999999964, 0.0006377359999999999, 0.0006378330000000043, 0.000637763999999999, 0.0006378330000000043, 0.0006376250000000028, 0.0006378610000000035, 0.000637666000000009, 0.0006375689999999906, 0.0006377090000000002, 0.0006375829999999971, 0.0006375980000000031, 0.0006375970000000036, 0.0006377499999999925, 0.0006377080000000007]</msg>
<status status="PASS" starttime="20201030 18:30:21.971" endtime="20201030 18:30:21.974"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.967" endtime="20201030 18:30:21.974"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:21.978" endtime="20201030 18:30:21.997"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.976" endtime="20201030 18:30:21.998"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.975" endtime="20201030 18:30:21.998"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.517" endtime="20201030 18:30:21.999"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.516" endtime="20201030 18:30:21.999"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:22.008" endtime="20201030 18:30:22.101"></status>
</kw>
<msg timestamp="20201030 18:30:22.102" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:22.006" endtime="20201030 18:30:22.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:22.104" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:22.103" endtime="20201030 18:30:22.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:22.105" endtime="20201030 18:30:22.107"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.004" endtime="20201030 18:30:22.108"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.001" endtime="20201030 18:30:22.108"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:22.115" endtime="20201030 18:30:22.403"></status>
</kw>
<msg timestamp="20201030 18:30:22.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022641042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023298583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:22.113" endtime="20201030 18:30:22.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:22.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022641042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023298583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:22.407" endtime="20201030 18:30:22.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:22.415" endtime="20201030 18:30:22.417"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.110" endtime="20201030 18:30:22.418"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.109" endtime="20201030 18:30:22.418"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:22.422" level="INFO">${PHILIP_RES} = [{'diff': 0.0006575410000000011}, {'diff': 0.0006571800000000003}, {'diff': 0.0006570689999999997}, {'diff': 0.0006571250000000015}, {'diff': 0.0006571809999999997}, {'diff': 0.0006573199999999994}, {...</msg>
<status status="PASS" starttime="20201030 18:30:22.419" endtime="20201030 18:30:22.422"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:22.426" level="INFO">${RESULT} = {'diff': [0.0006575410000000011, 0.0006571800000000003, 0.0006570689999999997, 0.0006571250000000015, 0.0006571809999999997, 0.0006573199999999994, 0.0006572910000000043, 0.0006574169999999935, 0.0006...</msg>
<status status="PASS" starttime="20201030 18:30:22.423" endtime="20201030 18:30:22.426"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:22.431" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:22.430" endtime="20201030 18:30:22.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:22.433" level="INFO">VALUE: [0.0006575410000000011, 0.0006571800000000003, 0.0006570689999999997, 0.0006571250000000015, 0.0006571809999999997, 0.0006573199999999994, 0.0006572910000000043, 0.0006574169999999935, 0.0006573890000000013, 0.0006572919999999968, 0.000657221999999999, 0.0006573339999999955, 0.000657221999999999, 0.0006571250000000015, 0.0006573749999999948, 0.0006572360000000055, 0.000657221999999999, 0.0006574170000000004, 0.0006572920000000038, 0.0006572229999999984, 0.0006571939999999998, 0.0006571809999999997, 0.0006572779999999973, 0.0006572089999999989, 0.0006573190000000034, 0.000657139000000001, 0.000657415999999994, 0.0006573889999999943, 0.0006573049999999969, 0.0006573340000000094, 0.0006571250000000084, 0.0006569720000000057, 0.0006574030000000008, 0.0006570560000000031, 0.0006573750000000017, 0.0006573049999999969, 0.0006572920000000038, 0.0006571660000000007, 0.0006572499999999981, 0.0006570969999999954, 0.0006574030000000008, 0.0006573330000000099, 0.0006573609999999952, 0.0006571670000000002, 0.0006574859999999988, 0.0006571670000000002, 0.0006572629999999913, 0.0006573190000000034, 0.0006572090000000058, 0.0006573190000000034]</msg>
<status status="PASS" starttime="20201030 18:30:22.432" endtime="20201030 18:30:22.435"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.427" endtime="20201030 18:30:22.435"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:22.439" endtime="20201030 18:30:22.459"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.438" endtime="20201030 18:30:22.459"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.436" endtime="20201030 18:30:22.460"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.000" endtime="20201030 18:30:22.460"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.999" endtime="20201030 18:30:22.460"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:22.469" endtime="20201030 18:30:22.563"></status>
</kw>
<msg timestamp="20201030 18:30:22.563" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:22.467" endtime="20201030 18:30:22.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:22.566" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:22.564" endtime="20201030 18:30:22.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:22.567" endtime="20201030 18:30:22.568"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.465" endtime="20201030 18:30:22.569"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.463" endtime="20201030 18:30:22.569"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:22.576" endtime="20201030 18:30:22.887"></status>
</kw>
<msg timestamp="20201030 18:30:22.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018516653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019193806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:22.575" endtime="20201030 18:30:22.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:22.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018516653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019193806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:22.891" endtime="20201030 18:30:22.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:22.899" endtime="20201030 18:30:22.901"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.572" endtime="20201030 18:30:22.901"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.570" endtime="20201030 18:30:22.902"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:22.906" level="INFO">${PHILIP_RES} = [{'diff': 0.0006771529999999998}, {'diff': 0.0006772360000000012}, {'diff': 0.0006772640000000003}, {'diff': 0.0006771669999999994}, {'diff': 0.0006772779999999999}, {'diff': 0.0006771659999999999}, {...</msg>
<status status="PASS" starttime="20201030 18:30:22.903" endtime="20201030 18:30:22.906"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:22.911" level="INFO">${RESULT} = {'diff': [0.0006771529999999998, 0.0006772360000000012, 0.0006772640000000003, 0.0006771669999999994, 0.0006772779999999999, 0.0006771659999999999, 0.0006772360000000012, 0.0006772500000000008, 0.0006...</msg>
<status status="PASS" starttime="20201030 18:30:22.907" endtime="20201030 18:30:22.911"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:22.915" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:22.914" endtime="20201030 18:30:22.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:22.918" level="INFO">VALUE: [0.0006771529999999998, 0.0006772360000000012, 0.0006772640000000003, 0.0006771669999999994, 0.0006772779999999999, 0.0006771659999999999, 0.0006772360000000012, 0.0006772500000000008, 0.0006772359999999977, 0.0006771249999999937, 0.0006771110000000011, 0.000677193999999999, 0.0006771669999999994, 0.0006770550000000028, 0.0006770140000000036, 0.0006771120000000005, 0.0006772639999999969, 0.0006770420000000027, 0.0006772500000000042, 0.0006771109999999941, 0.0006772219999999982, 0.0006771799999999994, 0.0006769169999999991, 0.0006770139999999966, 0.0006768750000000004, 0.0006768330000000017, 0.0006767360000000042, 0.0006769579999999914, 0.000676889, 0.0006768610000000008, 0.0006767910000000099, 0.0006769439999999988, 0.0006770269999999967, 0.0006771250000000006, 0.0006772079999999986, 0.0006771659999999929, 0.0006771109999999941, 0.0006771390000000072, 0.0006771389999999933, 0.0006772500000000042, 0.0006773190000000096, 0.0006771529999999998, 0.0006771670000000063, 0.0006771250000000006, 0.0006770420000000027, 0.0006772780000000034, 0.0006770700000000018, 0.0006770690000000024, 0.0006772639999999969, 0.0006773330000000022]</msg>
<status status="PASS" starttime="20201030 18:30:22.916" endtime="20201030 18:30:22.919"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.912" endtime="20201030 18:30:22.919"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:22.923" endtime="20201030 18:30:22.943"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.922" endtime="20201030 18:30:22.943"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.920" endtime="20201030 18:30:22.943"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.461" endtime="20201030 18:30:22.944"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.460" endtime="20201030 18:30:22.944"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:22.953" endtime="20201030 18:30:23.050"></status>
</kw>
<msg timestamp="20201030 18:30:23.051" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:22.951" endtime="20201030 18:30:23.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:23.053" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:23.052" endtime="20201030 18:30:23.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:23.055" endtime="20201030 18:30:23.056"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.948" endtime="20201030 18:30:23.057"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.946" endtime="20201030 18:30:23.057"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:23.064" endtime="20201030 18:30:23.352"></status>
</kw>
<msg timestamp="20201030 18:30:23.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022016944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022713833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:23.062" endtime="20201030 18:30:23.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:23.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022016944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022713833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:23.356" endtime="20201030 18:30:23.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:23.364" endtime="20201030 18:30:23.366"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.060" endtime="20201030 18:30:23.366"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.058" endtime="20201030 18:30:23.367"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:23.371" level="INFO">${PHILIP_RES} = [{'diff': 0.0006968889999999991}, {'diff': 0.0006968749999999996}, {'diff': 0.0006969299999999984}, {'diff': 0.0006969310000000013}, {'diff': 0.0006968879999999997}, {'diff': 0.0006969019999999992}, {...</msg>
<status status="PASS" starttime="20201030 18:30:23.367" endtime="20201030 18:30:23.371"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:23.375" level="INFO">${RESULT} = {'diff': [0.0006968889999999991, 0.0006968749999999996, 0.0006969299999999984, 0.0006969310000000013, 0.0006968879999999997, 0.0006969019999999992, 0.0006969579999999975, 0.000696943999999998, 0.00069...</msg>
<status status="PASS" starttime="20201030 18:30:23.372" endtime="20201030 18:30:23.375"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:23.379" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:23.378" endtime="20201030 18:30:23.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:23.382" level="INFO">VALUE: [0.0006968889999999991, 0.0006968749999999996, 0.0006969299999999984, 0.0006969310000000013, 0.0006968879999999997, 0.0006969019999999992, 0.0006969579999999975, 0.000696943999999998, 0.0006968059999999943, 0.0006968330000000009, 0.000696972000000004, 0.000696958999999997, 0.0006970279999999954, 0.0006969299999999984, 0.0006970560000000015, 0.0006968340000000003, 0.0006967220000000038, 0.0006969860000000036, 0.0006969029999999987, 0.0006969579999999975, 0.0006968749999999996, 0.0006969299999999984, 0.0006969169999999983, 0.0006969170000000052, 0.0006969579999999975, 0.0006969309999999979, 0.0006969579999999975, 0.0006969450000000044, 0.0006969440000000049, 0.0006969309999999979, 0.000696972000000004, 0.0006969730000000035, 0.0006969859999999967, 0.0006969170000000052, 0.0006968479999999999, 0.0006968479999999999, 0.0006968890000000061, 0.0006969719999999902, 0.000696861000000007, 0.0006968049999999948, 0.0006967640000000025, 0.0006968190000000013, 0.0006969440000000049, 0.0006968190000000013, 0.0006968200000000008, 0.0006968749999999996, 0.0006968329999999939, 0.0006968190000000013, 0.0006968200000000008, 0.0006969029999999987]</msg>
<status status="PASS" starttime="20201030 18:30:23.380" endtime="20201030 18:30:23.383"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.376" endtime="20201030 18:30:23.383"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:23.387" endtime="20201030 18:30:23.406"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.385" endtime="20201030 18:30:23.407"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.384" endtime="20201030 18:30:23.407"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.945" endtime="20201030 18:30:23.408"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.944" endtime="20201030 18:30:23.408"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:23.417" endtime="20201030 18:30:23.517"></status>
</kw>
<msg timestamp="20201030 18:30:23.517" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:23.415" endtime="20201030 18:30:23.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:23.520" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:23.518" endtime="20201030 18:30:23.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:23.521" endtime="20201030 18:30:23.522"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.412" endtime="20201030 18:30:23.523"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.410" endtime="20201030 18:30:23.523"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:23.530" endtime="20201030 18:30:23.819"></status>
</kw>
<msg timestamp="20201030 18:30:23.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020320917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021037875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:23.529" endtime="20201030 18:30:23.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:23.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020320917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021037875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:23.823" endtime="20201030 18:30:23.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:23.831" endtime="20201030 18:30:23.833"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.526" endtime="20201030 18:30:23.833"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.524" endtime="20201030 18:30:23.834"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:23.838" level="INFO">${PHILIP_RES} = [{'diff': 0.0007169580000000002}, {'diff': 0.0007169440000000006}, {'diff': 0.0007170280000000015}, {'diff': 0.0007170130000000025}, {'diff': 0.000717027999999998}, {'diff': 0.0007171389999999986}, {'...</msg>
<status status="PASS" starttime="20201030 18:30:23.834" endtime="20201030 18:30:23.838"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:23.842" level="INFO">${RESULT} = {'diff': [0.0007169580000000002, 0.0007169440000000006, 0.0007170280000000015, 0.0007170130000000025, 0.000717027999999998, 0.0007171389999999986, 0.0007169580000000002, 0.0007170839999999998, 0.00071...</msg>
<status status="PASS" starttime="20201030 18:30:23.839" endtime="20201030 18:30:23.842"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:23.846" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:23.845" endtime="20201030 18:30:23.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:23.849" level="INFO">VALUE: [0.0007169580000000002, 0.0007169440000000006, 0.0007170280000000015, 0.0007170130000000025, 0.000717027999999998, 0.0007171389999999986, 0.0007169580000000002, 0.0007170839999999998, 0.0007171109999999994, 0.000717013999999995, 0.0007169730000000027, 0.000716931000000004, 0.0007169580000000036, 0.0007170280000000015, 0.0007171109999999994, 0.0007173470000000001, 0.0007172639999999952, 0.0007171109999999994, 0.000717416999999998, 0.0007171669999999977, 0.0007173330000000006, 0.000717124999999999, 0.0007170140000000019, 0.0007172780000000017, 0.0007169860000000028, 0.0007170969999999999, 0.0007170830000000072, 0.0007171940000000043, 0.0007172359999999961, 0.0007171389999999916, 0.0007170690000000007, 0.000717124999999999, 0.0007171519999999987, 0.0007170979999999993, 0.00071723600000001, 0.0007172219999999896, 0.0007172080000000108, 0.0007170419999999872, 0.0007172769999999884, 0.0007170969999999999, 0.0007171110000000064, 0.000717207999999997, 0.0007170969999999999, 0.0007171529999999982, 0.0007170840000000067, 0.0007171810000000112, 0.0007172500000000026, 0.0007172080000000108, 0.0007171669999999908, 0.000717138000000006]</msg>
<status status="PASS" starttime="20201030 18:30:23.847" endtime="20201030 18:30:23.850"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.843" endtime="20201030 18:30:23.851"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:23.855" endtime="20201030 18:30:23.874"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.853" endtime="20201030 18:30:23.875"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.852" endtime="20201030 18:30:23.875"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.409" endtime="20201030 18:30:23.876"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.408" endtime="20201030 18:30:23.876"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:02.342" endtime="20201030 18:30:23.876"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:23.880" endtime="20201030 18:30:23.900"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.878" endtime="20201030 18:30:23.900"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.877" endtime="20201030 18:30:23.900"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:30:01.105" endtime="20201030 18:30:23.901" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 18:29:39.567" endtime="20201030 18:30:23.910"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:30:23.984" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:30:23.993" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:30:25.161" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:30:23.983" endtime="20201030 18:30:25.162"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:30:25.164" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 18:30:25.163" endtime="20201030 18:30:25.165"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.982" endtime="20201030 18:30:25.165"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:25.167" endtime="20201030 18:30:25.351"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.166" endtime="20201030 18:30:25.352"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:25.364" endtime="20201030 18:30:25.382"></status>
</kw>
<msg timestamp="20201030 18:30:25.383" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['0.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:25.363" endtime="20201030 18:30:25.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:25.385" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['0.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:25.384" endtime="20201030 18:30:25.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:30:25.389" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:30:25.387" endtime="20201030 18:30:25.389"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:25.360" endtime="20201030 18:30:25.390"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:25.358" endtime="20201030 18:30:25.390"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.357" endtime="20201030 18:30:25.391"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:30:25.395" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:30:25.394" endtime="20201030 18:30:25.396"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.392" endtime="20201030 18:30:25.396"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.356" endtime="20201030 18:30:25.396"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.355" endtime="20201030 18:30:25.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:25.397" endtime="20201030 18:30:25.399"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.354" endtime="20201030 18:30:25.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:25.401" endtime="20201030 18:30:25.403"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.352" endtime="20201030 18:30:25.403"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.980" endtime="20201030 18:30:25.403"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:25.409" endtime="20201030 18:30:25.429"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.408" endtime="20201030 18:30:25.429"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:25.443" endtime="20201030 18:30:25.462"></status>
</kw>
<msg timestamp="20201030 18:30:25.463" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:25.442" endtime="20201030 18:30:25.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:25.466" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:25.464" endtime="20201030 18:30:25.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:30:25.469" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:30:25.467" endtime="20201030 18:30:25.469"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:25.439" endtime="20201030 18:30:25.470"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:25.436" endtime="20201030 18:30:25.470"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.435" endtime="20201030 18:30:25.470"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:30:25.474" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:30:25.474" endtime="20201030 18:30:25.475"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.471" endtime="20201030 18:30:25.475"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.434" endtime="20201030 18:30:25.475"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.434" endtime="20201030 18:30:25.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:25.476" endtime="20201030 18:30:25.478"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.432" endtime="20201030 18:30:25.478"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.430" endtime="20201030 18:30:25.479"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.407" endtime="20201030 18:30:25.479"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:25.490" endtime="20201030 18:30:25.528"></status>
</kw>
<msg timestamp="20201030 18:30:25.528" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:25.489" endtime="20201030 18:30:25.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:25.531" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:25.529" endtime="20201030 18:30:25.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:25.532" endtime="20201030 18:30:25.534"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.485" endtime="20201030 18:30:25.534"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.482" endtime="20201030 18:30:25.535"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:25.542" endtime="20201030 18:30:25.857"></status>
</kw>
<msg timestamp="20201030 18:30:25.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074432806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074785306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:25.540" endtime="20201030 18:30:25.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:25.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074432806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074785306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:25.861" endtime="20201030 18:30:25.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:25.869" endtime="20201030 18:30:25.871"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.537" endtime="20201030 18:30:25.872"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.536" endtime="20201030 18:30:25.872"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:25.876" level="INFO">${RESULT} = [{'diff': 0.0003524999999999917}, {'diff': 0.00033943100000000115}, {'diff': 0.00033851400000001197}, {'diff': 0.0003384730000000058}, {'diff': 0.0003393329999999972}, {'diff': 0.0003399030000000025},...</msg>
<status status="PASS" starttime="20201030 18:30:25.873" endtime="20201030 18:30:25.876"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:25.880" level="INFO">${ACCURACY} = {'diff': [0.0003524999999999917, 0.00033943100000000115, 0.00033851400000001197, 0.0003384730000000058, 0.0003393329999999972, 0.0003399030000000025, 0.0003384579999999998, 0.00033972200000000063, 0.0...</msg>
<status status="PASS" starttime="20201030 18:30:25.877" endtime="20201030 18:30:25.881"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:25.886" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201030 18:30:25.885" endtime="20201030 18:30:25.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:25.888" level="INFO">VALUE: [0.0003524999999999917, 0.00033943100000000115, 0.00033851400000001197, 0.0003384730000000058, 0.0003393329999999972, 0.0003399030000000025, 0.0003384579999999998, 0.00033972200000000063, 0.0003410280000000071, 0.00033811100000000205, 0.0003404720000000083, 0.0003400139999999996, 0.0003386249999999952, 0.00033990299999998863, 0.00033865199999999485, 0.00033850000000000546, 0.00033908299999999003, 0.0003408479999999908, 0.0003397499999999998, 0.0003385279999999907, 0.0003380139999999976, 0.00034047199999999445, 0.0003410140000000006, 0.00034005599999999137, 0.0003405140000000001, 0.00034048600000000095, 0.0003410840000000054, 0.00033841699999999364, 0.0003379579999999993, 0.0003379999999999911, 0.00033973699999999274, 0.0003404590000000013, 0.0003386529999999943, 0.0003410689999999994, 0.0003387779999999979, 0.0003395689999999979, 0.00033823599999999177, 0.00033923599999999277, 0.00033879100000000495, 0.0003400689999999984, 0.0003393190000000046, 0.00033861100000000255, 0.0003393329999999972, 0.0003402500000000003, 0.00033822199999999913, 0.00033891699999999414, 0.0003404580000000018, 0.0003386940000000005, 0.0003384440000000072, 0.0003380139999999976]</msg>
<status status="PASS" starttime="20201030 18:30:25.887" endtime="20201030 18:30:25.889"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.881" endtime="20201030 18:30:25.889"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:25.893" endtime="20201030 18:30:25.913"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.892" endtime="20201030 18:30:25.913"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.890" endtime="20201030 18:30:25.914"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.481" endtime="20201030 18:30:25.914"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.480" endtime="20201030 18:30:25.914"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:25.923" endtime="20201030 18:30:25.958"></status>
</kw>
<msg timestamp="20201030 18:30:25.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:25.921" endtime="20201030 18:30:25.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:25.961" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:25.960" endtime="20201030 18:30:25.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:25.963" endtime="20201030 18:30:25.965"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.919" endtime="20201030 18:30:25.965"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.917" endtime="20201030 18:30:25.966"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:25.972" endtime="20201030 18:30:26.259"></status>
</kw>
<msg timestamp="20201030 18:30:26.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022698389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023050875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:25.971" endtime="20201030 18:30:26.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:26.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022698389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023050875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:26.263" endtime="20201030 18:30:26.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:26.272" endtime="20201030 18:30:26.274"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.968" endtime="20201030 18:30:26.274"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.966" endtime="20201030 18:30:26.275"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:26.279" level="INFO">${RESULT} = [{'diff': 0.0003524859999999991}, {'diff': 0.0003398330000000012}, {'diff': 0.0003389030000000015}, {'diff': 0.00034122199999999867}, {'diff': 0.0003394999999999995}, {'diff': 0.00033991599999999914},...</msg>
<status status="PASS" starttime="20201030 18:30:26.275" endtime="20201030 18:30:26.279"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:26.284" level="INFO">${ACCURACY} = {'diff': [0.0003524859999999991, 0.0003398330000000012, 0.0003389030000000015, 0.00034122199999999867, 0.0003394999999999995, 0.00033991599999999914, 0.00034123599999999824, 0.0003385689999999969, 0.0...</msg>
<status status="PASS" starttime="20201030 18:30:26.280" endtime="20201030 18:30:26.284"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:26.289" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201030 18:30:26.288" endtime="20201030 18:30:26.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:26.291" level="INFO">VALUE: [0.0003524859999999991, 0.0003398330000000012, 0.0003389030000000015, 0.00034122199999999867, 0.0003394999999999995, 0.00033991599999999914, 0.00034123599999999824, 0.0003385689999999969, 0.00034086100000000133, 0.0003390000000000025, 0.00033838899999999797, 0.00034008300000000144, 0.00034090300000000004, 0.0003397780000000024, 0.0003388330000000002, 0.000339403000000002, 0.0003402500000000003, 0.00033981899999999815, 0.000338999999999999, 0.00033990299999999904, 0.00034102800000000016, 0.0003396110000000001, 0.0003409590000000018, 0.00033905499999999783, 0.0003412219999999952, 0.0003380280000000041, 0.0003397919999999985, 0.00034104199999999973, 0.0003408199999999986, 0.00033820799999999956, 0.00034087499999999743, 0.0003394450000000007, 0.00033915300000000176, 0.00034104199999999973, 0.0003412370000000012, 0.0003394300000000017, 0.00034061100000000455, 0.0003400689999999984, 0.00033838900000000144, 0.00033859699999999604, 0.0003405140000000001, 0.0003386800000000009, 0.00034080599999999905, 0.0003400699999999979, 0.0003405979999999975, 0.0003398339999999972, 0.00034066700000000283, 0.00033855499999999733, 0.0003406109999999976, 0.0003385840000000029]</msg>
<status status="PASS" starttime="20201030 18:30:26.290" endtime="20201030 18:30:26.292"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.285" endtime="20201030 18:30:26.292"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:26.296" endtime="20201030 18:30:26.315"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.294" endtime="20201030 18:30:26.316"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.293" endtime="20201030 18:30:26.316"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.915" endtime="20201030 18:30:26.317"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.914" endtime="20201030 18:30:26.317"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:26.326" endtime="20201030 18:30:26.361"></status>
</kw>
<msg timestamp="20201030 18:30:26.362" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:26.324" endtime="20201030 18:30:26.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:26.365" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:26.363" endtime="20201030 18:30:26.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:26.366" endtime="20201030 18:30:26.367"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.321" endtime="20201030 18:30:26.368"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.319" endtime="20201030 18:30:26.368"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:26.375" endtime="20201030 18:30:26.662"></status>
</kw>
<msg timestamp="20201030 18:30:26.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021817389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022165875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:26.374" endtime="20201030 18:30:26.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:26.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021817389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022165875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:26.667" endtime="20201030 18:30:26.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:26.676" endtime="20201030 18:30:26.677"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.371" endtime="20201030 18:30:26.678"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.369" endtime="20201030 18:30:26.678"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:26.683" level="INFO">${RESULT} = [{'diff': 0.000348486000000002}, {'diff': 0.0003399169999999986}, {'diff': 0.0003382770000000014}, {'diff': 0.00033793099999999965}, {'diff': 0.00034044400000000224}, {'diff': 0.0003392909999999985}, ...</msg>
<status status="PASS" starttime="20201030 18:30:26.679" endtime="20201030 18:30:26.683"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:26.687" level="INFO">${ACCURACY} = {'diff': [0.000348486000000002, 0.0003399169999999986, 0.0003382770000000014, 0.00033793099999999965, 0.00034044400000000224, 0.0003392909999999985, 0.0003392369999999992, 0.0003393330000000007, 0.000...</msg>
<status status="PASS" starttime="20201030 18:30:26.684" endtime="20201030 18:30:26.687"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:26.691" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201030 18:30:26.690" endtime="20201030 18:30:26.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:26.694" level="INFO">VALUE: [0.000348486000000002, 0.0003399169999999986, 0.0003382770000000014, 0.00033793099999999965, 0.00034044400000000224, 0.0003392909999999985, 0.0003392369999999992, 0.0003393330000000007, 0.0003410689999999994, 0.0003379310000000031, 0.00033991599999999914, 0.00033830500000000055, 0.0003385969999999995, 0.0003381389999999977, 0.000339790999999999, 0.0003394300000000017, 0.0003398330000000012, 0.00034005499999999883, 0.00034054099999999976, 0.0003399719999999974, 0.00033984800000000023, 0.00034033400000000116, 0.00034117999999999996, 0.0003399170000000021, 0.0003390559999999973, 0.00033852799999999766, 0.00034102800000000016, 0.000338612000000002, 0.0003389450000000002, 0.00034063899999999675, 0.00033893100000000065, 0.00033872199999999963, 0.0003408329999999987, 0.00034098600000000145, 0.0003411109999999981, 0.0003395689999999979, 0.00034074999999999384, 0.0003382359999999987, 0.00033956900000000484, 0.000338403000000001, 0.0003407639999999934, 0.00034054199999999923, 0.0003380700000000028, 0.0003388199999999966, 0.0003379860000000054, 0.00033998600000000045, 0.0003394590000000003, 0.00034088900000000394, 0.0003381390000000012, 0.0003385139999999981]</msg>
<status status="PASS" starttime="20201030 18:30:26.693" endtime="20201030 18:30:26.694"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.688" endtime="20201030 18:30:26.695"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:26.699" endtime="20201030 18:30:26.719"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.697" endtime="20201030 18:30:26.719"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.696" endtime="20201030 18:30:26.720"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.318" endtime="20201030 18:30:26.720"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.317" endtime="20201030 18:30:26.720"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:26.730" endtime="20201030 18:30:26.769"></status>
</kw>
<msg timestamp="20201030 18:30:26.770" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:26.728" endtime="20201030 18:30:26.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:26.772" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:26.771" endtime="20201030 18:30:26.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:26.773" endtime="20201030 18:30:26.775"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.725" endtime="20201030 18:30:26.776"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.723" endtime="20201030 18:30:26.776"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:26.783" endtime="20201030 18:30:27.068"></status>
</kw>
<msg timestamp="20201030 18:30:27.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025486708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02583275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:26.781" endtime="20201030 18:30:27.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:27.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025486708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02583275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:27.072" endtime="20201030 18:30:27.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:27.081" endtime="20201030 18:30:27.083"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.779" endtime="20201030 18:30:27.083"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.777" endtime="20201030 18:30:27.084"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:27.088" level="INFO">${RESULT} = [{'diff': 0.00034604200000000127}, {'diff': 0.00034099999999999756}, {'diff': 0.0003396940000000015}, {'diff': 0.00033802800000000063}, {'diff': 0.0003393200000000006}, {'diff': 0.0003390420000000012}...</msg>
<status status="PASS" starttime="20201030 18:30:27.084" endtime="20201030 18:30:27.088"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:27.092" level="INFO">${ACCURACY} = {'diff': [0.00034604200000000127, 0.00034099999999999756, 0.0003396940000000015, 0.00033802800000000063, 0.0003393200000000006, 0.0003390420000000012, 0.00033848699999999843, 0.0003377640000000008, 0....</msg>
<status status="PASS" starttime="20201030 18:30:27.089" endtime="20201030 18:30:27.092"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:27.096" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201030 18:30:27.095" endtime="20201030 18:30:27.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:27.099" level="INFO">VALUE: [0.00034604200000000127, 0.00034099999999999756, 0.0003396940000000015, 0.00033802800000000063, 0.0003393200000000006, 0.0003390420000000012, 0.00033848699999999843, 0.0003377640000000008, 0.0003380420000000002, 0.0003396529999999988, 0.00034117999999999996, 0.00034038899999999997, 0.0003379449999999992, 0.00034048600000000095, 0.0003402079999999981, 0.00034002799999999916, 0.00034016700000000233, 0.0003393610000000033, 0.00033802700000000463, 0.0003401390000000032, 0.0003400139999999996, 0.0003384449999999997, 0.0003400559999999983, 0.00033852799999999766, 0.0003396109999999966, 0.00033809699999999554, 0.0003406940000000025, 0.0003410140000000006, 0.00033859800000000245, 0.00033904099999999826, 0.00033937500000000287, 0.00033842999999999374, 0.00034040200000000354, 0.0003410699999999989, 0.000340291999999999, 0.00033998600000000045, 0.00033904099999999826, 0.0003384999999999985, 0.00033815300000000076, 0.0003403889999999965, 0.00034004199999999873, 0.00034059800000000445, 0.0003393329999999972, 0.00034022200000000113, 0.00033848599999999895, 0.0003390830000000039, 0.00034036099999999736, 0.0003393469999999968, 0.00034087500000000437, 0.0003409579999999954]</msg>
<status status="PASS" starttime="20201030 18:30:27.098" endtime="20201030 18:30:27.100"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.093" endtime="20201030 18:30:27.101"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:27.105" endtime="20201030 18:30:27.124"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.103" endtime="20201030 18:30:27.125"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.102" endtime="20201030 18:30:27.125"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.721" endtime="20201030 18:30:27.126"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.720" endtime="20201030 18:30:27.126"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:27.135" endtime="20201030 18:30:27.169"></status>
</kw>
<msg timestamp="20201030 18:30:27.170" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:27.133" endtime="20201030 18:30:27.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:27.173" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:27.171" endtime="20201030 18:30:27.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:27.174" endtime="20201030 18:30:27.175"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.131" endtime="20201030 18:30:27.176"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.128" endtime="20201030 18:30:27.176"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:27.183" endtime="20201030 18:30:27.469"></status>
</kw>
<msg timestamp="20201030 18:30:27.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022051361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022411139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:27.181" endtime="20201030 18:30:27.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:27.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022051361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022411139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:27.474" endtime="20201030 18:30:27.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:27.482" endtime="20201030 18:30:27.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.179" endtime="20201030 18:30:27.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.177" endtime="20201030 18:30:27.485"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:27.489" level="INFO">${RESULT} = [{'diff': 0.00035977800000000157}, {'diff': 0.00033965300000000226}, {'diff': 0.000338500000000002}, {'diff': 0.0003402500000000003}, {'diff': 0.000338403000000001}, {'diff': 0.0003384579999999998}, {...</msg>
<status status="PASS" starttime="20201030 18:30:27.485" endtime="20201030 18:30:27.489"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:27.494" level="INFO">${ACCURACY} = {'diff': [0.00035977800000000157, 0.00033965300000000226, 0.000338500000000002, 0.0003402500000000003, 0.000338403000000001, 0.0003384579999999998, 0.00034048600000000095, 0.00034017999999999896, 0.00...</msg>
<status status="PASS" starttime="20201030 18:30:27.490" endtime="20201030 18:30:27.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:27.498" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201030 18:30:27.497" endtime="20201030 18:30:27.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:27.501" level="INFO">VALUE: [0.00035977800000000157, 0.00033965300000000226, 0.000338500000000002, 0.0003402500000000003, 0.000338403000000001, 0.0003384579999999998, 0.00034048600000000095, 0.00034017999999999896, 0.00034122199999999867, 0.00033940199999999907, 0.00034072200000000163, 0.0003394999999999995, 0.00034017999999999896, 0.0003395550000000018, 0.00033898699999999893, 0.00033888900000000194, 0.00033926399999999884, 0.00034069500000000197, 0.0003411530000000003, 0.00033905499999999783, 0.00034016699999999886, 0.0003400560000000018, 0.00033973599999999674, 0.0003389170000000011, 0.0003394720000000004, 0.0003407919999999995, 0.00033954199999999823, 0.00033787500000000137, 0.0003382920000000039, 0.00033937500000000287, 0.00033998600000000045, 0.0003390280000000051, 0.0003412370000000012, 0.00033954099999999876, 0.0003406800000000029, 0.0003389450000000002, 0.00033820899999999904, 0.00033934700000000373, 0.0003406249999999972, 0.00034069500000000197, 0.00034034700000000473, 0.00033987500000000337, 0.00033848599999999895, 0.0003390559999999973, 0.0003391250000000026, 0.00033892999999999424, 0.0003404580000000018, 0.00034072200000000163, 0.0003411669999999964, 0.00034076300000000087]</msg>
<status status="PASS" starttime="20201030 18:30:27.500" endtime="20201030 18:30:27.501"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.495" endtime="20201030 18:30:27.502"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:27.506" endtime="20201030 18:30:27.526"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.505" endtime="20201030 18:30:27.526"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.503" endtime="20201030 18:30:27.526"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.127" endtime="20201030 18:30:27.527"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.126" endtime="20201030 18:30:27.527"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:27.536" endtime="20201030 18:30:27.571"></status>
</kw>
<msg timestamp="20201030 18:30:27.572" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:27.534" endtime="20201030 18:30:27.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:27.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:27.573" endtime="20201030 18:30:27.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:27.575" endtime="20201030 18:30:27.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.532" endtime="20201030 18:30:27.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.529" endtime="20201030 18:30:27.578"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:27.585" endtime="20201030 18:30:27.871"></status>
</kw>
<msg timestamp="20201030 18:30:27.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022439069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022781583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:27.583" endtime="20201030 18:30:27.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:27.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022439069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022781583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:27.875" endtime="20201030 18:30:27.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:27.884" endtime="20201030 18:30:27.885"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.580" endtime="20201030 18:30:27.886"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.578" endtime="20201030 18:30:27.886"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:27.890" level="INFO">${RESULT} = [{'diff': 0.0003425140000000021}, {'diff': 0.00034026399999999984}, {'diff': 0.0003393200000000006}, {'diff': 0.0003405559999999988}, {'diff': 0.0003406390000000002}, {'diff': 0.0003404439999999988}, ...</msg>
<status status="PASS" starttime="20201030 18:30:27.887" endtime="20201030 18:30:27.891"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:27.895" level="INFO">${ACCURACY} = {'diff': [0.0003425140000000021, 0.00034026399999999984, 0.0003393200000000006, 0.0003405559999999988, 0.0003406390000000002, 0.0003404439999999988, 0.0003401389999999997, 0.00034069500000000197, 0.00...</msg>
<status status="PASS" starttime="20201030 18:30:27.891" endtime="20201030 18:30:27.895"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:27.899" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201030 18:30:27.898" endtime="20201030 18:30:27.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:27.902" level="INFO">VALUE: [0.0003425140000000021, 0.00034026399999999984, 0.0003393200000000006, 0.0003405559999999988, 0.0003406390000000002, 0.0003404439999999988, 0.0003401389999999997, 0.00034069500000000197, 0.00034022200000000113, 0.0003379860000000019, 0.00034020899999999757, 0.0003406659999999999, 0.0003381109999999986, 0.00033980599999999805, 0.00033986100000000033, 0.0003405420000000027, 0.00033838900000000144, 0.00033940200000000253, 0.0003386390000000017, 0.00033919500000000047, 0.0003393749999999994, 0.0003387919999999975, 0.0003384999999999985, 0.00033834700000000273, 0.00033808299999999944, 0.0003384719999999994, 0.00034030599999999855, 0.00033798599999999845, 0.000339403000000002, 0.00034080599999999905, 0.0003395269999999992, 0.00033805499999999683, 0.00033955500000000527, 0.0003381390000000012, 0.00033947299999999986, 0.0003397360000000002, 0.00033865300000000126, 0.0003385139999999981, 0.00034094400000000274, 0.0003393060000000045, 0.00033872199999999963, 0.000341000000000001, 0.00033916600000000185, 0.0003378610000000018, 0.0003409580000000023, 0.00034033400000000463, 0.000341097999999998, 0.00034043100000000215, 0.0003406669999999959, 0.0003395139999999991]</msg>
<status status="PASS" starttime="20201030 18:30:27.900" endtime="20201030 18:30:27.903"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.895" endtime="20201030 18:30:27.903"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:27.907" endtime="20201030 18:30:27.926"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.905" endtime="20201030 18:30:27.927"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.904" endtime="20201030 18:30:27.927"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.528" endtime="20201030 18:30:27.928"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.527" endtime="20201030 18:30:27.928"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:27.937" endtime="20201030 18:30:27.973"></status>
</kw>
<msg timestamp="20201030 18:30:27.973" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:27.935" endtime="20201030 18:30:27.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:27.976" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:27.974" endtime="20201030 18:30:27.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:27.977" endtime="20201030 18:30:27.979"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.933" endtime="20201030 18:30:27.979"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.930" endtime="20201030 18:30:27.980"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:27.987" endtime="20201030 18:30:28.271"></status>
</kw>
<msg timestamp="20201030 18:30:28.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02348875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023847444, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:27.985" endtime="20201030 18:30:28.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:28.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02348875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023847444, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:28.276" endtime="20201030 18:30:28.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:28.284" endtime="20201030 18:30:28.286"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.982" endtime="20201030 18:30:28.287"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.980" endtime="20201030 18:30:28.287"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:28.291" level="INFO">${RESULT} = [{'diff': 0.0003586939999999997}, {'diff': 0.0003379300000000002}, {'diff': 0.0003384169999999971}, {'diff': 0.0003391109999999996}, {'diff': 0.0003398749999999999}, {'diff': 0.00034084700000000176}, ...</msg>
<status status="PASS" starttime="20201030 18:30:28.288" endtime="20201030 18:30:28.291"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:28.295" level="INFO">${ACCURACY} = {'diff': [0.0003586939999999997, 0.0003379300000000002, 0.0003384169999999971, 0.0003391109999999996, 0.0003398749999999999, 0.00034084700000000176, 0.0003397360000000002, 0.0003409170000000031, 0.000...</msg>
<status status="PASS" starttime="20201030 18:30:28.292" endtime="20201030 18:30:28.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:28.300" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201030 18:30:28.299" endtime="20201030 18:30:28.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:28.302" level="INFO">VALUE: [0.0003586939999999997, 0.0003379300000000002, 0.0003384169999999971, 0.0003391109999999996, 0.0003398749999999999, 0.00034084700000000176, 0.0003397360000000002, 0.0003409170000000031, 0.0003399439999999983, 0.0003406109999999976, 0.0003392230000000031, 0.00034098600000000145, 0.0003398330000000012, 0.00033866600000000135, 0.0003379719999999989, 0.00034067999999999946, 0.00034054199999999923, 0.00033957000000000084, 0.0003395269999999992, 0.00033955499999999833, 0.00033812499999999815, 0.00033858299999999647, 0.00034038900000000344, 0.0003389580000000003, 0.00034080599999999905, 0.00034016700000000233, 0.00033848599999999895, 0.00033788900000000094, 0.00034076400000000034, 0.00034018099999999496, 0.0003381250000000016, 0.000341097999999998, 0.00033954099999999876, 0.0003409030000000035, 0.00034116700000000333, 0.00034082000000000556, 0.00033881899999999715, 0.00033861100000000255, 0.0003385139999999981, 0.00033995899999999385, 0.0003379579999999993, 0.00033987500000000337, 0.0003379030000000005, 0.0003411119999999976, 0.0003407779999999999, 0.0003407779999999999, 0.00034126400000000084, 0.0003381800000000004, 0.00034098600000000145, 0.0003394300000000017]</msg>
<status status="PASS" starttime="20201030 18:30:28.301" endtime="20201030 18:30:28.306"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:28.296" endtime="20201030 18:30:28.307"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:28.310" endtime="20201030 18:30:28.330"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:28.309" endtime="20201030 18:30:28.331"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:28.308" endtime="20201030 18:30:28.331"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.929" endtime="20201030 18:30:28.331"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:27.928" endtime="20201030 18:30:28.331"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:28.340" endtime="20201030 18:30:28.376"></status>
</kw>
<msg timestamp="20201030 18:30:28.376" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:28.339" endtime="20201030 18:30:28.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:28.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:28.377" endtime="20201030 18:30:28.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:28.380" endtime="20201030 18:30:28.381"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:28.336" endtime="20201030 18:30:28.382"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:28.334" endtime="20201030 18:30:28.383"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:28.389" endtime="20201030 18:30:28.691"></status>
</kw>
<msg timestamp="20201030 18:30:28.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021897903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022229986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:28.388" endtime="20201030 18:30:28.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:28.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021897903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022229986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:28.701" endtime="20201030 18:30:28.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:28.718" endtime="20201030 18:30:28.720"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:28.385" endtime="20201030 18:30:28.720"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:28.383" endtime="20201030 18:30:28.721"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:28.725" level="INFO">${RESULT} = [{'diff': 0.0003320830000000004}, {'diff': 0.00033890199999999857}, {'diff': 0.00033812499999999815}, {'diff': 0.0003381390000000012}, {'diff': 0.0003389030000000015}, {'diff': 0.00033886099999999933}...</msg>
<status status="PASS" starttime="20201030 18:30:28.722" endtime="20201030 18:30:28.725"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:28.730" level="INFO">${ACCURACY} = {'diff': [0.0003320830000000004, 0.00033890199999999857, 0.00033812499999999815, 0.0003381390000000012, 0.0003389030000000015, 0.00033886099999999933, 0.0003409439999999993, 0.0003405689999999989, 0.0...</msg>
<status status="PASS" starttime="20201030 18:30:28.726" endtime="20201030 18:30:28.730"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:28.735" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201030 18:30:28.734" endtime="20201030 18:30:28.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:28.737" level="INFO">VALUE: [0.0003320830000000004, 0.00033890199999999857, 0.00033812499999999815, 0.0003381390000000012, 0.0003389030000000015, 0.00033886099999999933, 0.0003409439999999993, 0.0003405689999999989, 0.00033822199999999913, 0.00034022199999999767, 0.00033811100000000205, 0.00033988899999999947, 0.00033931899999999765, 0.00033820799999999956, 0.00033998600000000045, 0.00034076400000000034, 0.00034043100000000215, 0.00034006900000000187, 0.0003397360000000002, 0.0003393329999999972, 0.0003383879999999985, 0.00033865300000000126, 0.00034080599999999905, 0.00033838900000000144, 0.0003387359999999992, 0.0003401389999999997, 0.00033958399999999694, 0.0003393329999999972, 0.0003409309999999957, 0.00033844400000000024, 0.0003385410000000047, 0.00034087499999999743, 0.0003393889999999955, 0.00034020900000000104, 0.00034041699999999564, 0.0003408199999999986, 0.0003388610000000028, 0.0003405140000000001, 0.00033948599999999995, 0.00033870899999999954, 0.0003391390000000022, 0.0003407920000000064, 0.00033983300000000466, 0.00033969500000000097, 0.000341194000000003, 0.0003382640000000048, 0.0003384999999999985, 0.0003403469999999978, 0.00034088900000000394, 0.0003385269999999982]</msg>
<status status="PASS" starttime="20201030 18:30:28.736" endtime="20201030 18:30:28.738"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:28.731" endtime="20201030 18:30:28.739"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:28.743" endtime="20201030 18:30:28.762"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:28.741" endtime="20201030 18:30:28.763"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:28.740" endtime="20201030 18:30:28.763"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:28.332" endtime="20201030 18:30:28.763"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:28.332" endtime="20201030 18:30:28.763"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:28.773" endtime="20201030 18:30:28.808"></status>
</kw>
<msg timestamp="20201030 18:30:28.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:28.771" endtime="20201030 18:30:28.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:28.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:28.810" endtime="20201030 18:30:28.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:28.814" endtime="20201030 18:30:28.816"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:28.768" endtime="20201030 18:30:28.816"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:28.766" endtime="20201030 18:30:28.817"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:28.824" endtime="20201030 18:30:29.110"></status>
</kw>
<msg timestamp="20201030 18:30:29.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021827486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022170292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:28.822" endtime="20201030 18:30:29.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:29.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021827486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022170292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:29.114" endtime="20201030 18:30:29.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:29.124" endtime="20201030 18:30:29.126"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:28.819" endtime="20201030 18:30:29.127"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:28.817" endtime="20201030 18:30:29.127"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:29.139" level="INFO">${RESULT} = [{'diff': 0.00034280600000000105}, {'diff': 0.0003415000000000015}, {'diff': 0.0003381109999999986}, {'diff': 0.00033977699999999944}, {'diff': 0.00033994400000000174}, {'diff': 0.00034094400000000274...</msg>
<status status="PASS" starttime="20201030 18:30:29.128" endtime="20201030 18:30:29.140"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:29.148" level="INFO">${ACCURACY} = {'diff': [0.00034280600000000105, 0.0003415000000000015, 0.0003381109999999986, 0.00033977699999999944, 0.00033994400000000174, 0.00034094400000000274, 0.00033861199999999855, 0.0003389589999999998, 0...</msg>
<status status="PASS" starttime="20201030 18:30:29.143" endtime="20201030 18:30:29.149"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:29.153" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201030 18:30:29.152" endtime="20201030 18:30:29.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:29.157" level="INFO">VALUE: [0.00034280600000000105, 0.0003415000000000015, 0.0003381109999999986, 0.00033977699999999944, 0.00033994400000000174, 0.00034094400000000274, 0.00033861199999999855, 0.0003389589999999998, 0.00033862499999999865, 0.0003391109999999996, 0.0003405140000000001, 0.00034004199999999873, 0.0003412499999999978, 0.00034036100000000083, 0.0003397360000000002, 0.00033926399999999884, 0.0003395689999999979, 0.0003396110000000001, 0.0003411530000000003, 0.00034022200000000113, 0.0003399580000000013, 0.00034022200000000113, 0.00034034700000000126, 0.00034026399999999984, 0.0003388190000000006, 0.00033861100000000255, 0.0003394720000000004, 0.00034131899999999965, 0.00033926299999999937, 0.0003406810000000024, 0.00033840299999999407, 0.00033908399999999644, 0.0003379719999999989, 0.00033901400000000553, 0.0003382779999999974, 0.00034037499999999693, 0.00034043100000000215, 0.00034066700000000283, 0.0003406529999999963, 0.0003406249999999972, 0.00033970900000000054, 0.00033783400000000213, 0.0003387919999999975, 0.00033876399999999834, 0.0003403199999999981, 0.0003381390000000012, 0.0003390689999999974, 0.00034034700000000473, 0.0003410699999999989, 0.00033930599999999755]</msg>
<status status="PASS" starttime="20201030 18:30:29.155" endtime="20201030 18:30:29.158"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:29.149" endtime="20201030 18:30:29.159"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:29.163" endtime="20201030 18:30:29.183"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:29.161" endtime="20201030 18:30:29.184"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:29.160" endtime="20201030 18:30:29.184"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:28.764" endtime="20201030 18:30:29.185"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:28.764" endtime="20201030 18:30:29.185"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:29.194" endtime="20201030 18:30:29.229"></status>
</kw>
<msg timestamp="20201030 18:30:29.230" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:29.192" endtime="20201030 18:30:29.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:29.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:29.231" endtime="20201030 18:30:29.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:29.233" endtime="20201030 18:30:29.235"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:29.189" endtime="20201030 18:30:29.235"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:29.187" endtime="20201030 18:30:29.236"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:29.242" endtime="20201030 18:30:29.555"></status>
</kw>
<msg timestamp="20201030 18:30:29.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022774069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023133708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:29.241" endtime="20201030 18:30:29.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:29.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022774069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023133708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:29.559" endtime="20201030 18:30:29.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:29.569" endtime="20201030 18:30:29.572"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:29.238" endtime="20201030 18:30:29.573"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:29.236" endtime="20201030 18:30:29.573"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:29.578" level="INFO">${RESULT} = [{'diff': 0.0003596389999999984}, {'diff': 0.0003402079999999981}, {'diff': 0.00033836099999999883}, {'diff': 0.0003388749999999989}, {'diff': 0.000338306}, {'diff': 0.0003403049999999991}, {'diff': 0...</msg>
<status status="PASS" starttime="20201030 18:30:29.575" endtime="20201030 18:30:29.579"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:29.583" level="INFO">${ACCURACY} = {'diff': [0.0003596389999999984, 0.0003402079999999981, 0.00033836099999999883, 0.0003388749999999989, 0.000338306, 0.0003403049999999991, 0.00034004099999999926, 0.00033904100000000173, 0.00034111100...</msg>
<status status="PASS" starttime="20201030 18:30:29.579" endtime="20201030 18:30:29.583"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:29.587" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201030 18:30:29.586" endtime="20201030 18:30:29.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:29.590" level="INFO">VALUE: [0.0003596389999999984, 0.0003402079999999981, 0.00033836099999999883, 0.0003388749999999989, 0.000338306, 0.0003403049999999991, 0.00034004099999999926, 0.00033904100000000173, 0.0003411110000000016, 0.00034076400000000034, 0.00033793099999999965, 0.00034048600000000095, 0.00034066700000000283, 0.0003405000000000005, 0.00034102800000000016, 0.00034112500000000115, 0.0003391810000000009, 0.0003397640000000028, 0.00033855499999999733, 0.0003377640000000008, 0.0003395559999999978, 0.0003386390000000017, 0.0003408049999999996, 0.0003390420000000012, 0.0003404720000000014, 0.00033926399999999884, 0.0003401109999999971, 0.0003395559999999978, 0.00033988900000000294, 0.0003407779999999999, 0.0003384860000000059, 0.0003382779999999974, 0.00033938900000000244, 0.0003397360000000002, 0.0003399720000000009, 0.0003393190000000046, 0.0003391520000000023, 0.000338806000000004, 0.00033919500000000047, 0.00033804199999999673, 0.0003390559999999973, 0.0003400269999999997, 0.00034120800000000256, 0.00034115300000000376, 0.0003399300000000022, 0.0003385979999999955, 0.0003389160000000016, 0.0003403889999999965, 0.0003398339999999972, 0.00034080599999999905]</msg>
<status status="PASS" starttime="20201030 18:30:29.588" endtime="20201030 18:30:29.591"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:29.583" endtime="20201030 18:30:29.592"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:29.596" endtime="20201030 18:30:29.615"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:29.594" endtime="20201030 18:30:29.616"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:29.593" endtime="20201030 18:30:29.616"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:29.186" endtime="20201030 18:30:29.617"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:29.185" endtime="20201030 18:30:29.617"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:29.626" endtime="20201030 18:30:29.662"></status>
</kw>
<msg timestamp="20201030 18:30:29.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:29.624" endtime="20201030 18:30:29.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:29.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:29.664" endtime="20201030 18:30:29.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:29.666" endtime="20201030 18:30:29.668"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:29.622" endtime="20201030 18:30:29.668"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:29.619" endtime="20201030 18:30:29.669"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:29.676" endtime="20201030 18:30:29.963"></status>
</kw>
<msg timestamp="20201030 18:30:29.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022673944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023010944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:29.674" endtime="20201030 18:30:29.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:29.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022673944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023010944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:29.967" endtime="20201030 18:30:29.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:29.975" endtime="20201030 18:30:29.977"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:29.671" endtime="20201030 18:30:29.978"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:29.669" endtime="20201030 18:30:29.978"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:29.982" level="INFO">${RESULT} = [{'diff': 0.000336999999999997}, {'diff': 0.00033888899999999847}, {'diff': 0.000340291999999999}, {'diff': 0.00033984700000000076}, {'diff': 0.0003400689999999984}, {'diff': 0.0003387780000000014}, {...</msg>
<status status="PASS" starttime="20201030 18:30:29.979" endtime="20201030 18:30:29.983"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:29.987" level="INFO">${ACCURACY} = {'diff': [0.000336999999999997, 0.00033888899999999847, 0.000340291999999999, 0.00033984700000000076, 0.0003400689999999984, 0.0003387780000000014, 0.00033887500000000237, 0.0003387359999999992, 0.000...</msg>
<status status="PASS" starttime="20201030 18:30:29.983" endtime="20201030 18:30:29.988"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:29.992" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201030 18:30:29.991" endtime="20201030 18:30:29.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:29.995" level="INFO">VALUE: [0.000336999999999997, 0.00033888899999999847, 0.000340291999999999, 0.00033984700000000076, 0.0003400689999999984, 0.0003387780000000014, 0.00033887500000000237, 0.0003387359999999992, 0.00033870800000000006, 0.0003403049999999991, 0.00033901400000000206, 0.00034086099999999786, 0.0003382229999999986, 0.00033912499999999915, 0.00034090300000000004, 0.00034026399999999984, 0.0003391390000000022, 0.0003396389999999992, 0.0003390139999999986, 0.000339306000000001, 0.00033988899999999947, 0.0003393339999999967, 0.00033998600000000045, 0.0003389580000000038, 0.00034038900000000344, 0.00033880599999999705, 0.0003386800000000009, 0.0003405270000000002, 0.0003379160000000006, 0.00033879100000000495, 0.00033887499999999543, 0.0003387079999999931, 0.0003392779999999984, 0.0003411249999999977, 0.00033905499999999783, 0.00033872199999999963, 0.0003411800000000034, 0.0003394580000000008, 0.0003399170000000021, 0.00034040299999999607, 0.0003396250000000031, 0.00033911100000000305, 0.00034038900000000344, 0.0003407919999999995, 0.0003404580000000018, 0.00034026300000000037, 0.00033826399999999784, 0.0003383199999999961, 0.00033886200000000227, 0.0003381800000000004]</msg>
<status status="PASS" starttime="20201030 18:30:29.993" endtime="20201030 18:30:29.995"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:29.988" endtime="20201030 18:30:29.996"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:30.000" endtime="20201030 18:30:30.019"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:29.998" endtime="20201030 18:30:30.020"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:29.997" endtime="20201030 18:30:30.021"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:29.618" endtime="20201030 18:30:30.021"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:29.617" endtime="20201030 18:30:30.021"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:30.034" endtime="20201030 18:30:30.073"></status>
</kw>
<msg timestamp="20201030 18:30:30.074" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:30.032" endtime="20201030 18:30:30.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:30.076" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:30.075" endtime="20201030 18:30:30.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:30.077" endtime="20201030 18:30:30.079"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.028" endtime="20201030 18:30:30.080"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.025" endtime="20201030 18:30:30.080"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:30.087" endtime="20201030 18:30:30.374"></status>
</kw>
<msg timestamp="20201030 18:30:30.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025731917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026076667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:30.085" endtime="20201030 18:30:30.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:30.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025731917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026076667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:30.379" endtime="20201030 18:30:30.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:30.387" endtime="20201030 18:30:30.389"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.083" endtime="20201030 18:30:30.389"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.081" endtime="20201030 18:30:30.390"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:30.394" level="INFO">${RESULT} = [{'diff': 0.0003447500000000013}, {'diff': 0.0003400980000000005}, {'diff': 0.0003400689999999984}, {'diff': 0.0003394999999999995}, {'diff': 0.0003398749999999999}, {'diff': 0.00033922200000000013}, ...</msg>
<status status="PASS" starttime="20201030 18:30:30.391" endtime="20201030 18:30:30.394"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:30.398" level="INFO">${ACCURACY} = {'diff': [0.0003447500000000013, 0.0003400980000000005, 0.0003400689999999984, 0.0003394999999999995, 0.0003398749999999999, 0.00033922200000000013, 0.0003379160000000006, 0.0003380559999999998, 0.000...</msg>
<status status="PASS" starttime="20201030 18:30:30.395" endtime="20201030 18:30:30.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:30.403" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201030 18:30:30.402" endtime="20201030 18:30:30.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:30.405" level="INFO">VALUE: [0.0003447500000000013, 0.0003400980000000005, 0.0003400689999999984, 0.0003394999999999995, 0.0003398749999999999, 0.00033922200000000013, 0.0003379160000000006, 0.0003380559999999998, 0.00033943100000000115, 0.0003394999999999995, 0.00033790200000000103, 0.00034072199999999817, 0.00033934700000000026, 0.00033816700000000033, 0.00033837500000000187, 0.0003391109999999996, 0.0003392909999999985, 0.00033826399999999784, 0.0003405140000000001, 0.0003404170000000026, 0.00033858299999999647, 0.0003382779999999974, 0.0003402360000000007, 0.00034018099999999496, 0.0003392499999999993, 0.00033922200000000013, 0.00034066600000000336, 0.000340194000000002, 0.00033987499999999643, 0.00033805499999999683, 0.00033794399999999974, 0.0003386810000000004, 0.0003394450000000007, 0.0003403329999999982, 0.0003392909999999985, 0.0003397360000000002, 0.00034005499999999883, 0.0003409309999999957, 0.0003389030000000015, 0.0003385699999999964, 0.0003380559999999963, 0.00033861100000000255, 0.000337999999999998, 0.00033934700000000373, 0.0003379720000000058, 0.000338194, 0.00033894400000000074, 0.0003401529999999958, 0.00034104100000000026, 0.00034015300000000276]</msg>
<status status="PASS" starttime="20201030 18:30:30.404" endtime="20201030 18:30:30.406"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.399" endtime="20201030 18:30:30.407"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:30.410" endtime="20201030 18:30:30.430"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.409" endtime="20201030 18:30:30.430"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.408" endtime="20201030 18:30:30.431"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.023" endtime="20201030 18:30:30.431"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.022" endtime="20201030 18:30:30.431"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:30.440" endtime="20201030 18:30:30.475"></status>
</kw>
<msg timestamp="20201030 18:30:30.476" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:30.439" endtime="20201030 18:30:30.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:30.478" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:30.477" endtime="20201030 18:30:30.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:30.480" endtime="20201030 18:30:30.481"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.436" endtime="20201030 18:30:30.482"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.434" endtime="20201030 18:30:30.482"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:30.489" endtime="20201030 18:30:30.776"></status>
</kw>
<msg timestamp="20201030 18:30:30.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022114819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022472194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:30.487" endtime="20201030 18:30:30.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:30.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022114819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022472194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:30.781" endtime="20201030 18:30:30.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:30.789" endtime="20201030 18:30:30.791"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.485" endtime="20201030 18:30:30.791"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.483" endtime="20201030 18:30:30.792"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:30.796" level="INFO">${RESULT} = [{'diff': 0.00035737500000000005}, {'diff': 0.00034048600000000095}, {'diff': 0.0003411379999999978}, {'diff': 0.0003402500000000003}, {'diff': 0.0003410140000000006}, {'diff': 0.00033844400000000024}...</msg>
<status status="PASS" starttime="20201030 18:30:30.793" endtime="20201030 18:30:30.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:30.800" level="INFO">${ACCURACY} = {'diff': [0.00035737500000000005, 0.00034048600000000095, 0.0003411379999999978, 0.0003402500000000003, 0.0003410140000000006, 0.00033844400000000024, 0.0003389870000000024, 0.0003405970000000015, 0.0...</msg>
<status status="PASS" starttime="20201030 18:30:30.797" endtime="20201030 18:30:30.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:30.805" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201030 18:30:30.804" endtime="20201030 18:30:30.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:30.807" level="INFO">VALUE: [0.00035737500000000005, 0.00034048600000000095, 0.0003411379999999978, 0.0003402500000000003, 0.0003410140000000006, 0.00033844400000000024, 0.0003389870000000024, 0.0003405970000000015, 0.00034022200000000113, 0.000338597000000003, 0.00034072199999999817, 0.0003380130000000016, 0.00034099999999999756, 0.0003405699999999984, 0.0003401110000000006, 0.0003394170000000016, 0.0003380000000000015, 0.0003384300000000007, 0.00033994400000000174, 0.0003405979999999975, 0.0003391519999999988, 0.00033806899999999987, 0.0003389450000000002, 0.00034080599999999905, 0.00033816700000000033, 0.00034093100000000265, 0.0003406669999999959, 0.0003401529999999958, 0.0003400139999999996, 0.0003384170000000006, 0.0003401109999999971, 0.00034022200000000113, 0.00033826299999999837, 0.00033947299999999986, 0.00033832000000000306, 0.0003394580000000008, 0.0003381529999999938, 0.00033880599999999705, 0.000340888999999997, 0.00033972200000000063, 0.00033840299999999407, 0.00033870899999999954, 0.000338679999999994, 0.00034038800000000397, 0.0003400840000000044, 0.0003394579999999939, 0.00034038900000000344, 0.00033987500000000337, 0.0003384720000000063, 0.0003387359999999992]</msg>
<status status="PASS" starttime="20201030 18:30:30.806" endtime="20201030 18:30:30.809"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.801" endtime="20201030 18:30:30.810"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:30.813" endtime="20201030 18:30:30.833"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.812" endtime="20201030 18:30:30.833"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.811" endtime="20201030 18:30:30.834"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.432" endtime="20201030 18:30:30.834"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.432" endtime="20201030 18:30:30.834"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:30.843" endtime="20201030 18:30:30.877"></status>
</kw>
<msg timestamp="20201030 18:30:30.878" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:30.842" endtime="20201030 18:30:30.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:30.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:30.879" endtime="20201030 18:30:30.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:30.881" endtime="20201030 18:30:30.883"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.839" endtime="20201030 18:30:30.883"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.837" endtime="20201030 18:30:30.884"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:30.891" endtime="20201030 18:30:31.177"></status>
</kw>
<msg timestamp="20201030 18:30:31.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021007472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021348972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:30.889" endtime="20201030 18:30:31.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:31.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021007472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021348972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:31.181" endtime="20201030 18:30:31.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:31.190" endtime="20201030 18:30:31.191"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.886" endtime="20201030 18:30:31.192"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.885" endtime="20201030 18:30:31.192"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:31.196" level="INFO">${RESULT} = [{'diff': 0.0003415000000000015}, {'diff': 0.0003394720000000004}, {'diff': 0.0003385560000000003}, {'diff': 0.0003406110000000011}, {'diff': 0.00033963799999999975}, {'diff': 0.0003381250000000016}, ...</msg>
<status status="PASS" starttime="20201030 18:30:31.193" endtime="20201030 18:30:31.197"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:31.201" level="INFO">${ACCURACY} = {'diff': [0.0003415000000000015, 0.0003394720000000004, 0.0003385560000000003, 0.0003406110000000011, 0.00033963799999999975, 0.0003381250000000016, 0.0003401529999999993, 0.000339693999999998, 0.0003...</msg>
<status status="PASS" starttime="20201030 18:30:31.197" endtime="20201030 18:30:31.202"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:31.206" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201030 18:30:31.205" endtime="20201030 18:30:31.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:31.209" level="INFO">VALUE: [0.0003415000000000015, 0.0003394720000000004, 0.0003385560000000003, 0.0003406110000000011, 0.00033963799999999975, 0.0003381250000000016, 0.0003401529999999993, 0.000339693999999998, 0.0003400269999999997, 0.0003394170000000016, 0.0003394300000000017, 0.00033940200000000253, 0.0003411109999999981, 0.000338306, 0.00033972200000000063, 0.00033802700000000116, 0.0003379580000000028, 0.0003399169999999986, 0.00033829200000000045, 0.00033801400000000106, 0.0003389450000000002, 0.00033869499999999997, 0.000340194999999998, 0.00033934700000000026, 0.0003412780000000004, 0.0003386520000000018, 0.000341000000000001, 0.0003402780000000029, 0.0003406800000000029, 0.0003401250000000036, 0.0003386390000000017, 0.00034104100000000026, 0.0003391799999999945, 0.0003406380000000042, 0.0003387499999999988, 0.00033887499999999543, 0.0003398339999999972, 0.00034061100000000455, 0.0003392909999999985, 0.00033848599999999895, 0.0003403610000000043, 0.00033916700000000133, 0.000338194, 0.00033861100000000255, 0.0003388049999999976, 0.0003381250000000016, 0.00033920800000000056, 0.00033954099999999876, 0.0003382369999999982, 0.00033881899999999715]</msg>
<status status="PASS" starttime="20201030 18:30:31.207" endtime="20201030 18:30:31.209"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.202" endtime="20201030 18:30:31.210"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:31.214" endtime="20201030 18:30:31.233"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.212" endtime="20201030 18:30:31.234"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.211" endtime="20201030 18:30:31.234"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.835" endtime="20201030 18:30:31.235"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.835" endtime="20201030 18:30:31.235"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:31.249" endtime="20201030 18:30:31.285"></status>
</kw>
<msg timestamp="20201030 18:30:31.286" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:31.247" endtime="20201030 18:30:31.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:31.288" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:31.287" endtime="20201030 18:30:31.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:31.289" endtime="20201030 18:30:31.291"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.244" endtime="20201030 18:30:31.292"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.241" endtime="20201030 18:30:31.292"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:31.299" endtime="20201030 18:30:31.586"></status>
</kw>
<msg timestamp="20201030 18:30:31.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027574431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027913458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:31.297" endtime="20201030 18:30:31.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:31.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027574431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027913458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:31.590" endtime="20201030 18:30:31.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:31.598" endtime="20201030 18:30:31.600"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.295" endtime="20201030 18:30:31.601"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.293" endtime="20201030 18:30:31.601"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:31.605" level="INFO">${RESULT} = [{'diff': 0.0003390269999999987}, {'diff': 0.0003394720000000004}, {'diff': 0.000340291999999999}, {'diff': 0.00033865300000000126}, {'diff': 0.0003403339999999977}, {'diff': 0.00034022200000000113}, ...</msg>
<status status="PASS" starttime="20201030 18:30:31.602" endtime="20201030 18:30:31.605"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:31.609" level="INFO">${ACCURACY} = {'diff': [0.0003390269999999987, 0.0003394720000000004, 0.000340291999999999, 0.00033865300000000126, 0.0003403339999999977, 0.00034022200000000113, 0.000338790999999998, 0.00034116699999999986, 0.000...</msg>
<status status="PASS" starttime="20201030 18:30:31.606" endtime="20201030 18:30:31.610"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:31.614" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201030 18:30:31.613" endtime="20201030 18:30:31.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:31.616" level="INFO">VALUE: [0.0003390269999999987, 0.0003394720000000004, 0.000340291999999999, 0.00033865300000000126, 0.0003403339999999977, 0.00034022200000000113, 0.000338790999999998, 0.00034116699999999986, 0.00033806899999999987, 0.00034, 0.0003380689999999964, 0.00034052799999999966, 0.00034069500000000197, 0.00034104199999999973, 0.0003404439999999953, 0.0003384999999999985, 0.00034105499999999983, 0.00033873600000000614, 0.0003398050000000055, 0.0003405000000000005, 0.0003384719999999994, 0.0003384300000000007, 0.00034043100000000215, 0.00033805499999999683, 0.0003405140000000001, 0.0003387499999999988, 0.0003377359999999982, 0.0003404580000000018, 0.00034043100000000215, 0.0003390280000000051, 0.00033908399999999644, 0.00033998600000000045, 0.00033865300000000126, 0.0003382499999999983, 0.00033865300000000126, 0.000341000000000001, 0.0003388469999999963, 0.0003404720000000014, 0.0003386800000000009, 0.00034081899999999915, 0.00033915300000000176, 0.0003385700000000033, 0.0003383049999999971, 0.0003395280000000056, 0.00033980599999999805, 0.0003405000000000005, 0.00034038900000000344, 0.00034091599999999667, 0.0003411250000000046, 0.0003395700000000043]</msg>
<status status="PASS" starttime="20201030 18:30:31.615" endtime="20201030 18:30:31.617"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.610" endtime="20201030 18:30:31.618"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:31.622" endtime="20201030 18:30:31.641"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.620" endtime="20201030 18:30:31.642"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.619" endtime="20201030 18:30:31.642"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.236" endtime="20201030 18:30:31.642"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.235" endtime="20201030 18:30:31.643"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:31.652" endtime="20201030 18:30:31.687"></status>
</kw>
<msg timestamp="20201030 18:30:31.687" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:31.650" endtime="20201030 18:30:31.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:31.690" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:31.688" endtime="20201030 18:30:31.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:31.691" endtime="20201030 18:30:31.692"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.647" endtime="20201030 18:30:31.693"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.645" endtime="20201030 18:30:31.693"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:31.700" endtime="20201030 18:30:31.986"></status>
</kw>
<msg timestamp="20201030 18:30:31.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021626069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021969944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:31.699" endtime="20201030 18:30:31.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:31.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021626069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021969944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:31.990" endtime="20201030 18:30:31.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:31.999" endtime="20201030 18:30:32.002"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.696" endtime="20201030 18:30:32.002"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.694" endtime="20201030 18:30:32.003"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:32.008" level="INFO">${RESULT} = [{'diff': 0.00034387500000000043}, {'diff': 0.0003407079999999986}, {'diff': 0.0003411530000000003}, {'diff': 0.00033898599999999945}, {'diff': 0.0003394580000000008}, {'diff': 0.0003383190000000001},...</msg>
<status status="PASS" starttime="20201030 18:30:32.004" endtime="20201030 18:30:32.009"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:32.014" level="INFO">${ACCURACY} = {'diff': [0.00034387500000000043, 0.0003407079999999986, 0.0003411530000000003, 0.00033898599999999945, 0.0003394580000000008, 0.0003383190000000001, 0.000340194000000002, 0.000341097999999998, 0.0003...</msg>
<status status="PASS" starttime="20201030 18:30:32.010" endtime="20201030 18:30:32.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:32.020" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201030 18:30:32.018" endtime="20201030 18:30:32.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:32.028" level="INFO">VALUE: [0.00034387500000000043, 0.0003407079999999986, 0.0003411530000000003, 0.00033898599999999945, 0.0003394580000000008, 0.0003383190000000001, 0.000340194000000002, 0.000341097999999998, 0.0003404299999999992, 0.00033838900000000144, 0.0003394170000000016, 0.0003409439999999993, 0.00034026399999999984, 0.00033943100000000115, 0.0003381250000000016, 0.0003402360000000007, 0.00034098600000000145, 0.0003393749999999994, 0.0003391529999999983, 0.000338887999999999, 0.00033870800000000006, 0.00033812499999999815, 0.0003394450000000007, 0.00033806899999999987, 0.0003412499999999978, 0.00034066699999999936, 0.00033838899999999797, 0.0003401669999999954, 0.0003394170000000016, 0.00033836099999999536, 0.0003391800000000014, 0.0003404590000000013, 0.00033848699999999843, 0.000339291999999998, 0.00034040299999999607, 0.0003406249999999972, 0.0003380410000000042, 0.0003383339999999957, 0.00033970800000000106, 0.00033998600000000045, 0.0003387500000000057, 0.0003387359999999992, 0.00033830599999999655, 0.0003397360000000002, 0.000338403000000001, 0.00033994400000000174, 0.0003386250000000021, 0.00033838900000000144, 0.00033888900000000194, 0.00033988900000000294]</msg>
<status status="PASS" starttime="20201030 18:30:32.022" endtime="20201030 18:30:32.029"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.015" endtime="20201030 18:30:32.030"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:32.034" endtime="20201030 18:30:32.054"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.033" endtime="20201030 18:30:32.055"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.031" endtime="20201030 18:30:32.055"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.643" endtime="20201030 18:30:32.055"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.643" endtime="20201030 18:30:32.055"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:32.065" endtime="20201030 18:30:32.098"></status>
</kw>
<msg timestamp="20201030 18:30:32.099" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:32.063" endtime="20201030 18:30:32.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:32.101" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:32.100" endtime="20201030 18:30:32.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:32.102" endtime="20201030 18:30:32.104"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.060" endtime="20201030 18:30:32.105"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.058" endtime="20201030 18:30:32.105"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:32.112" endtime="20201030 18:30:32.398"></status>
</kw>
<msg timestamp="20201030 18:30:32.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020685639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021016958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:32.110" endtime="20201030 18:30:32.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:32.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020685639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021016958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:32.402" endtime="20201030 18:30:32.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:32.410" endtime="20201030 18:30:32.412"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.107" endtime="20201030 18:30:32.413"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.106" endtime="20201030 18:30:32.413"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:32.417" level="INFO">${RESULT} = [{'diff': 0.00033131900000000006}, {'diff': 0.0003382499999999983}, {'diff': 0.000338194}, {'diff': 0.0003380000000000015}, {'diff': 0.000338096999999999}, {'diff': 0.00033956900000000137}, {'diff': 0...</msg>
<status status="PASS" starttime="20201030 18:30:32.414" endtime="20201030 18:30:32.417"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:32.422" level="INFO">${ACCURACY} = {'diff': [0.00033131900000000006, 0.0003382499999999983, 0.000338194, 0.0003380000000000015, 0.000338096999999999, 0.00033956900000000137, 0.0003400139999999996, 0.00034004099999999926, 0.000338792000...</msg>
<status status="PASS" starttime="20201030 18:30:32.418" endtime="20201030 18:30:32.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:32.427" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201030 18:30:32.426" endtime="20201030 18:30:32.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:32.429" level="INFO">VALUE: [0.00033131900000000006, 0.0003382499999999983, 0.000338194, 0.0003380000000000015, 0.000338096999999999, 0.00033956900000000137, 0.0003400139999999996, 0.00034004099999999926, 0.00033879200000000095, 0.0003406390000000002, 0.0003384160000000011, 0.0003390420000000012, 0.0003401939999999985, 0.0003383610000000023, 0.0003386800000000009, 0.00033862499999999865, 0.00033829200000000045, 0.00033830500000000055, 0.00033806999999999934, 0.00034086099999999786, 0.000340097000000001, 0.0003387779999999979, 0.0003402779999999994, 0.000338999999999999, 0.00033852800000000113, 0.0003394450000000007, 0.00034102800000000016, 0.0003403330000000017, 0.0003401810000000019, 0.00033806900000000334, 0.0003405000000000005, 0.0003390139999999986, 0.0003397360000000002, 0.0003392359999999997, 0.00034077700000000044, 0.00034020800000000156, 0.0003397919999999985, 0.00034015199999999635, 0.0003407639999999934, 0.00033866600000000135, 0.00034004199999999873, 0.0003408610000000048, 0.00033934700000000373, 0.00034077700000000044, 0.0003395139999999991, 0.0003390280000000051, 0.00034020900000000104, 0.0003384170000000006, 0.00033980599999999805, 0.0003402360000000007]</msg>
<status status="PASS" starttime="20201030 18:30:32.428" endtime="20201030 18:30:32.430"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.423" endtime="20201030 18:30:32.431"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:32.434" endtime="20201030 18:30:32.454"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.433" endtime="20201030 18:30:32.454"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.432" endtime="20201030 18:30:32.455"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.056" endtime="20201030 18:30:32.455"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.056" endtime="20201030 18:30:32.455"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:32.464" endtime="20201030 18:30:32.501"></status>
</kw>
<msg timestamp="20201030 18:30:32.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:32.463" endtime="20201030 18:30:32.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:32.504" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:32.502" endtime="20201030 18:30:32.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:32.505" endtime="20201030 18:30:32.507"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.460" endtime="20201030 18:30:32.507"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.458" endtime="20201030 18:30:32.508"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:32.514" endtime="20201030 18:30:32.801"></status>
</kw>
<msg timestamp="20201030 18:30:32.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022793681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02313875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:32.513" endtime="20201030 18:30:32.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:32.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022793681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02313875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:32.806" endtime="20201030 18:30:32.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:32.814" endtime="20201030 18:30:32.816"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.510" endtime="20201030 18:30:32.816"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.508" endtime="20201030 18:30:32.817"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:32.821" level="INFO">${RESULT} = [{'diff': 0.00034506899999999993}, {'diff': 0.0003387919999999975}, {'diff': 0.0003409309999999992}, {'diff': 0.0003390139999999986}, {'diff': 0.0003382499999999983}, {'diff': 0.00033866700000000083},...</msg>
<status status="PASS" starttime="20201030 18:30:32.818" endtime="20201030 18:30:32.821"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:32.825" level="INFO">${ACCURACY} = {'diff': [0.00034506899999999993, 0.0003387919999999975, 0.0003409309999999992, 0.0003390139999999986, 0.0003382499999999983, 0.00033866700000000083, 0.0003379030000000005, 0.0003412639999999974, 0.00...</msg>
<status status="PASS" starttime="20201030 18:30:32.822" endtime="20201030 18:30:32.825"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:32.830" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201030 18:30:32.829" endtime="20201030 18:30:32.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:32.832" level="INFO">VALUE: [0.00034506899999999993, 0.0003387919999999975, 0.0003409309999999992, 0.0003390139999999986, 0.0003382499999999983, 0.00033866700000000083, 0.0003379030000000005, 0.0003412639999999974, 0.0003400560000000018, 0.00033836099999999883, 0.00034036099999999736, 0.00033972200000000063, 0.00033793099999999965, 0.0003410560000000028, 0.00033965300000000226, 0.00034054099999999976, 0.0003407500000000008, 0.000338096999999999, 0.00033888899999999847, 0.0003394720000000004, 0.0003399590000000008, 0.0003379030000000005, 0.00033890299999999804, 0.0003379450000000027, 0.0003394439999999943, 0.00033887499999999543, 0.00033966600000000235, 0.0003398329999999977, 0.00033859800000000245, 0.0003399439999999948, 0.00034105499999999983, 0.0003397640000000063, 0.0003411379999999978, 0.000338999999999999, 0.000339597000000004, 0.00033786099999999486, 0.00034088900000000394, 0.0003385689999999969, 0.000337806000000003, 0.0003395139999999991, 0.00034087500000000437, 0.0003411380000000047, 0.00033854099999999776, 0.00033972200000000063, 0.0003406940000000025, 0.00034104100000000026, 0.00034081899999999915, 0.0003391390000000022, 0.0003400699999999979, 0.0003394170000000016]</msg>
<status status="PASS" starttime="20201030 18:30:32.831" endtime="20201030 18:30:32.833"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.826" endtime="20201030 18:30:32.834"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:32.837" endtime="20201030 18:30:32.857"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.836" endtime="20201030 18:30:32.857"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.835" endtime="20201030 18:30:32.858"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.456" endtime="20201030 18:30:32.858"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.456" endtime="20201030 18:30:32.858"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:32.867" endtime="20201030 18:30:32.903"></status>
</kw>
<msg timestamp="20201030 18:30:32.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:32.866" endtime="20201030 18:30:32.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:32.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:32.904" endtime="20201030 18:30:32.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:32.907" endtime="20201030 18:30:32.908"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.863" endtime="20201030 18:30:32.909"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.861" endtime="20201030 18:30:32.909"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:32.916" endtime="20201030 18:30:33.203"></status>
</kw>
<msg timestamp="20201030 18:30:33.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021699597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022057722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:32.915" endtime="20201030 18:30:33.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:33.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021699597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022057722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:33.207" endtime="20201030 18:30:33.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:33.215" endtime="20201030 18:30:33.217"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.912" endtime="20201030 18:30:33.217"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.910" endtime="20201030 18:30:33.218"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:33.222" level="INFO">${RESULT} = [{'diff': 0.00035812499999999733}, {'diff': 0.0003380420000000002}, {'diff': 0.0003399299999999987}, {'diff': 0.0003378059999999995}, {'diff': 0.0003410559999999993}, {'diff': 0.00033811100000000205},...</msg>
<status status="PASS" starttime="20201030 18:30:33.219" endtime="20201030 18:30:33.222"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:33.226" level="INFO">${ACCURACY} = {'diff': [0.00035812499999999733, 0.0003380420000000002, 0.0003399299999999987, 0.0003378059999999995, 0.0003410559999999993, 0.00033811100000000205, 0.00033806900000000334, 0.00034076400000000034, 0....</msg>
<status status="PASS" starttime="20201030 18:30:33.223" endtime="20201030 18:30:33.226"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:33.231" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201030 18:30:33.229" endtime="20201030 18:30:33.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:33.233" level="INFO">VALUE: [0.00035812499999999733, 0.0003380420000000002, 0.0003399299999999987, 0.0003378059999999995, 0.0003410559999999993, 0.00033811100000000205, 0.00033806900000000334, 0.00034076400000000034, 0.00033967999999999846, 0.00034094499999999875, 0.00033811199999999805, 0.00034102800000000016, 0.0003401110000000006, 0.00034012500000000015, 0.0003391810000000009, 0.00034054099999999976, 0.0003403339999999977, 0.0003385969999999995, 0.00033869499999999997, 0.00033804100000000073, 0.00033804100000000073, 0.0003380830000000029, 0.00033919500000000047, 0.0003382640000000013, 0.000338306, 0.0003390550000000013, 0.00033938899999999897, 0.0003399170000000021, 0.0003389719999999999, 0.0003410699999999989, 0.00033892999999999424, 0.00033911100000000305, 0.0003400420000000057, 0.00033795800000000625, 0.00034120800000000256, 0.0003410559999999993, 0.00034113899999999725, 0.00034073599999999427, 0.0003400700000000048, 0.0003384579999999998, 0.00033872199999999963, 0.00034098600000000145, 0.00033887500000000237, 0.0003406109999999976, 0.0003411109999999981, 0.0003412219999999952, 0.00033848599999999895, 0.0003390139999999986, 0.0003378610000000018, 0.0003386940000000005]</msg>
<status status="PASS" starttime="20201030 18:30:33.232" endtime="20201030 18:30:33.235"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.227" endtime="20201030 18:30:33.235"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:33.239" endtime="20201030 18:30:33.259"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.238" endtime="20201030 18:30:33.259"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.236" endtime="20201030 18:30:33.260"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.859" endtime="20201030 18:30:33.260"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.859" endtime="20201030 18:30:33.260"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:33.269" endtime="20201030 18:30:33.304"></status>
</kw>
<msg timestamp="20201030 18:30:33.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:33.268" endtime="20201030 18:30:33.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:33.307" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:33.306" endtime="20201030 18:30:33.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:33.308" endtime="20201030 18:30:33.310"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.265" endtime="20201030 18:30:33.311"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.263" endtime="20201030 18:30:33.311"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:33.318" endtime="20201030 18:30:33.603"></status>
</kw>
<msg timestamp="20201030 18:30:33.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022170153, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:30:33.316" endtime="20201030 18:30:33.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:33.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022170153, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:30:33.607" endtime="20201030 18:30:33.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:33.616" endtime="20201030 18:30:33.617"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.314" endtime="20201030 18:30:33.618"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.312" endtime="20201030 18:30:33.618"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:33.622" level="INFO">${RESULT} = [{'diff': 0.0003511529999999999}, {'diff': 0.0003405000000000005}, {'diff': 0.00033870899999999954}, {'diff': 0.0003400269999999997}, {'diff': 0.000338096999999999}, {'diff': 0.00033966600000000235}, ...</msg>
<status status="PASS" starttime="20201030 18:30:33.619" endtime="20201030 18:30:33.623"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:33.627" level="INFO">${ACCURACY} = {'diff': [0.0003511529999999999, 0.0003405000000000005, 0.00033870899999999954, 0.0003400269999999997, 0.000338096999999999, 0.00033966600000000235, 0.0003386810000000004, 0.000338194, 0.0003401250000...</msg>
<status status="PASS" starttime="20201030 18:30:33.623" endtime="20201030 18:30:33.628"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:33.632" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201030 18:30:33.631" endtime="20201030 18:30:33.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:33.635" level="INFO">VALUE: [0.0003511529999999999, 0.0003405000000000005, 0.00033870899999999954, 0.0003400269999999997, 0.000338096999999999, 0.00033966600000000235, 0.0003386810000000004, 0.000338194, 0.00034012500000000015, 0.000341000000000001, 0.00034016700000000233, 0.00033862499999999865, 0.000339500000000003, 0.0003392499999999993, 0.0003385969999999995, 0.00033976299999999987, 0.0003401389999999997, 0.0003411110000000016, 0.00033886200000000227, 0.00033813799999999825, 0.00033920900000000004, 0.000338194, 0.00034141600000000064, 0.0003405140000000001, 0.00034120800000000256, 0.00033883300000000366, 0.000340888999999997, 0.00033976399999999934, 0.0003399590000000008, 0.00034098600000000145, 0.0003387359999999992, 0.0003407779999999999, 0.00033820899999999904, 0.00034033400000000463, 0.00034093100000000265, 0.000340791, 0.000339291999999998, 0.0003409030000000035, 0.00034072200000000163, 0.0003387499999999988, 0.00033963899999999575, 0.0003411799999999965, 0.00033827800000000435, 0.000339097999999996, 0.0003390269999999987, 0.0003382229999999986, 0.00033887500000000237, 0.0003394720000000004, 0.00033887500000000237, 0.00033943100000000115]</msg>
<status status="PASS" starttime="20201030 18:30:33.633" endtime="20201030 18:30:33.635"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.628" endtime="20201030 18:30:33.636"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:33.640" endtime="20201030 18:30:33.659"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.638" endtime="20201030 18:30:33.660"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.637" endtime="20201030 18:30:33.660"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.261" endtime="20201030 18:30:33.660"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.261" endtime="20201030 18:30:33.661"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:33.670" endtime="20201030 18:30:33.706"></status>
</kw>
<msg timestamp="20201030 18:30:33.706" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:33.668" endtime="20201030 18:30:33.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:33.709" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:33.708" endtime="20201030 18:30:33.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:33.710" endtime="20201030 18:30:33.712"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.665" endtime="20201030 18:30:33.713"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.663" endtime="20201030 18:30:33.713"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:33.720" endtime="20201030 18:30:34.007"></status>
</kw>
<msg timestamp="20201030 18:30:34.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023133236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023477667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:33.718" endtime="20201030 18:30:34.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:34.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023133236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023477667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:34.011" endtime="20201030 18:30:34.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:34.021" endtime="20201030 18:30:34.022"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.715" endtime="20201030 18:30:34.024"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.714" endtime="20201030 18:30:34.024"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:34.029" level="INFO">${RESULT} = [{'diff': 0.0003444309999999992}, {'diff': 0.0003407360000000012}, {'diff': 0.00034017999999999896}, {'diff': 0.0003386810000000004}, {'diff': 0.0003404170000000026}, {'diff': 0.0003410560000000028}, ...</msg>
<status status="PASS" starttime="20201030 18:30:34.025" endtime="20201030 18:30:34.030"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:34.035" level="INFO">${ACCURACY} = {'diff': [0.0003444309999999992, 0.0003407360000000012, 0.00034017999999999896, 0.0003386810000000004, 0.0003404170000000026, 0.0003410560000000028, 0.00034084700000000176, 0.00033866700000000083, 0.0...</msg>
<status status="PASS" starttime="20201030 18:30:34.030" endtime="20201030 18:30:34.035"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:34.040" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201030 18:30:34.039" endtime="20201030 18:30:34.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:34.044" level="INFO">VALUE: [0.0003444309999999992, 0.0003407360000000012, 0.00034017999999999896, 0.0003386810000000004, 0.0003404170000000026, 0.0003410560000000028, 0.00034084700000000176, 0.00033866700000000083, 0.00033986100000000033, 0.00033826399999999784, 0.00034061200000000055, 0.0003387780000000014, 0.0003391250000000026, 0.000339306000000001, 0.0003392359999999997, 0.00034107000000000234, 0.0003406110000000011, 0.0003408750000000009, 0.0003398330000000012, 0.0003398749999999999, 0.0003395139999999991, 0.0003409719999999984, 0.0003378329999999957, 0.0003412500000000013, 0.0003392359999999997, 0.0003409170000000031, 0.0003383190000000036, 0.0003382369999999982, 0.0003394999999999995, 0.0003383199999999961, 0.0003383889999999945, 0.00033898599999999945, 0.0003387499999999988, 0.000340679999999996, 0.00033933400000000363, 0.0003409720000000019, 0.0003396249999999962, 0.0003386669999999939, 0.0003400559999999983, 0.0003407219999999947, 0.000338291999999997, 0.0003379300000000002, 0.00033905600000000424, 0.00033970900000000054, 0.000339403000000002, 0.0003383060000000035, 0.0003402360000000007, 0.0003381520000000013, 0.0003389719999999999, 0.000338597000000003]</msg>
<status status="PASS" starttime="20201030 18:30:34.042" endtime="20201030 18:30:34.045"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.036" endtime="20201030 18:30:34.046"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:34.052" endtime="20201030 18:30:34.071"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.049" endtime="20201030 18:30:34.072"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.047" endtime="20201030 18:30:34.072"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.662" endtime="20201030 18:30:34.073"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.661" endtime="20201030 18:30:34.073"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:34.083" endtime="20201030 18:30:34.123"></status>
</kw>
<msg timestamp="20201030 18:30:34.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:34.082" endtime="20201030 18:30:34.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:34.126" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:34.124" endtime="20201030 18:30:34.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:34.127" endtime="20201030 18:30:34.129"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.079" endtime="20201030 18:30:34.129"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.076" endtime="20201030 18:30:34.130"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:34.138" endtime="20201030 18:30:34.425"></status>
</kw>
<msg timestamp="20201030 18:30:34.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028191306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028521694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:34.136" endtime="20201030 18:30:34.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:34.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028191306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028521694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:34.429" endtime="20201030 18:30:34.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:34.438" endtime="20201030 18:30:34.439"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.133" endtime="20201030 18:30:34.440"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.130" endtime="20201030 18:30:34.440"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:34.444" level="INFO">${RESULT} = [{'diff': 0.0003303880000000009}, {'diff': 0.00033965300000000226}, {'diff': 0.0003405000000000005}, {'diff': 0.00034130599999999955}, {'diff': 0.00033959699999999704}, {'diff': 0.00034026399999999984...</msg>
<status status="PASS" starttime="20201030 18:30:34.441" endtime="20201030 18:30:34.444"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:34.448" level="INFO">${ACCURACY} = {'diff': [0.0003303880000000009, 0.00033965300000000226, 0.0003405000000000005, 0.00034130599999999955, 0.00033959699999999704, 0.00034026399999999984, 0.0003396389999999992, 0.00033986100000000033, 0...</msg>
<status status="PASS" starttime="20201030 18:30:34.445" endtime="20201030 18:30:34.448"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:34.453" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201030 18:30:34.452" endtime="20201030 18:30:34.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:34.455" level="INFO">VALUE: [0.0003303880000000009, 0.00033965300000000226, 0.0003405000000000005, 0.00034130599999999955, 0.00033959699999999704, 0.00034026399999999984, 0.0003396389999999992, 0.00033986100000000033, 0.00034098600000000145, 0.0003411799999999965, 0.00033815300000000076, 0.00033833300000000316, 0.0003405000000000005, 0.00034063899999999675, 0.00033902799999999816, 0.0003401390000000032, 0.00034059699999999804, 0.0003391109999999961, 0.00034126400000000084, 0.0003399019999999961, 0.0003395559999999978, 0.00033872300000000605, 0.00034041699999999564, 0.0003402360000000007, 0.000338679999999994, 0.00033987499999999643, 0.00033819499999999947, 0.0003388190000000041, 0.00034138900000000444, 0.00034055499999999933, 0.00033837500000000187, 0.0003411810000000029, 0.00034040299999999607, 0.0003387920000000044, 0.0003411390000000042, 0.0003398329999999977, 0.0003389580000000003, 0.0003390420000000047, 0.0003404170000000026, 0.00033832000000000306, 0.0003391810000000009, 0.0003400699999999979, 0.0003399580000000013, 0.00034105499999999983, 0.0003382499999999983, 0.000339597000000004, 0.0003412780000000004, 0.0003402500000000003, 0.00034065300000000326, 0.00033952799999999866]</msg>
<status status="PASS" starttime="20201030 18:30:34.454" endtime="20201030 18:30:34.456"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.449" endtime="20201030 18:30:34.457"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:34.461" endtime="20201030 18:30:34.482"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.459" endtime="20201030 18:30:34.483"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.458" endtime="20201030 18:30:34.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.074" endtime="20201030 18:30:34.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.073" endtime="20201030 18:30:34.484"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:34.503" endtime="20201030 18:30:34.542"></status>
</kw>
<msg timestamp="20201030 18:30:34.543" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:34.499" endtime="20201030 18:30:34.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:34.548" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:34.545" endtime="20201030 18:30:34.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:34.550" endtime="20201030 18:30:34.553"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.494" endtime="20201030 18:30:34.555"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.489" endtime="20201030 18:30:34.556"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:34.569" endtime="20201030 18:30:34.857"></status>
</kw>
<msg timestamp="20201030 18:30:34.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036315611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036660764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:34.566" endtime="20201030 18:30:34.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:34.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036315611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036660764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:34.861" endtime="20201030 18:30:34.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:34.869" endtime="20201030 18:30:34.870"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.560" endtime="20201030 18:30:34.871"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.557" endtime="20201030 18:30:34.871"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:34.875" level="INFO">${RESULT} = [{'diff': 0.0003451530000000008}, {'diff': 0.0003382499999999983}, {'diff': 0.00033820799999999956}, {'diff': 0.00033838900000000144}, {'diff': 0.0003406940000000025}, {'diff': 0.00034026399999999984}...</msg>
<status status="PASS" starttime="20201030 18:30:34.872" endtime="20201030 18:30:34.876"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:34.880" level="INFO">${ACCURACY} = {'diff': [0.0003451530000000008, 0.0003382499999999983, 0.00033820799999999956, 0.00033838900000000144, 0.0003406940000000025, 0.00034026399999999984, 0.0003396249999999962, 0.00033888900000000194, 0....</msg>
<status status="PASS" starttime="20201030 18:30:34.876" endtime="20201030 18:30:34.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:34.885" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201030 18:30:34.884" endtime="20201030 18:30:34.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:34.887" level="INFO">VALUE: [0.0003451530000000008, 0.0003382499999999983, 0.00033820799999999956, 0.00033838900000000144, 0.0003406940000000025, 0.00034026399999999984, 0.0003396249999999962, 0.00033888900000000194, 0.0003397779999999989, 0.0003408469999999983, 0.0003410699999999989, 0.00034008399999999744, 0.0003389170000000011, 0.00034019399999999506, 0.00033816700000000033, 0.0003402779999999994, 0.0003391520000000023, 0.00033898599999999945, 0.0003381380000000017, 0.0003382920000000039, 0.0003413329999999992, 0.00034013899999999625, 0.0003385139999999981, 0.0003409720000000019, 0.00033820799999999956, 0.0003399300000000022, 0.00034080599999999905, 0.00033931899999999765, 0.00034076400000000034, 0.0003391249999999957, 0.0003395830000000044, 0.0003404170000000026, 0.00034087499999999743, 0.0003383469999999958, 0.00033793099999999965, 0.00033854199999999723, 0.0003391119999999956, 0.0003412230000000016, 0.000338403000000001, 0.0003384170000000006, 0.00034088900000000394, 0.00034058299999999847, 0.0003380840000000024, 0.00033806900000000334, 0.00033931899999999765, 0.00033980599999999805, 0.0003392909999999985, 0.0003395280000000056, 0.0003401529999999958, 0.0003399030000000025]</msg>
<status status="PASS" starttime="20201030 18:30:34.886" endtime="20201030 18:30:34.892"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.881" endtime="20201030 18:30:34.893"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:34.897" endtime="20201030 18:30:34.916"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.895" endtime="20201030 18:30:34.917"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.894" endtime="20201030 18:30:34.917"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.486" endtime="20201030 18:30:34.917"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.485" endtime="20201030 18:30:34.918"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:34.927" endtime="20201030 18:30:34.962"></status>
</kw>
<msg timestamp="20201030 18:30:34.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:34.925" endtime="20201030 18:30:34.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:34.966" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:34.964" endtime="20201030 18:30:34.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:34.967" endtime="20201030 18:30:34.969"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.922" endtime="20201030 18:30:34.969"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.920" endtime="20201030 18:30:34.970"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:34.977" endtime="20201030 18:30:35.264"></status>
</kw>
<msg timestamp="20201030 18:30:35.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022231444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02257125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:34.975" endtime="20201030 18:30:35.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:35.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022231444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02257125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:35.268" endtime="20201030 18:30:35.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:35.277" endtime="20201030 18:30:35.278"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.973" endtime="20201030 18:30:35.279"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.970" endtime="20201030 18:30:35.279"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:35.286" level="INFO">${RESULT} = [{'diff': 0.0003398060000000015}, {'diff': 0.0003412780000000004}, {'diff': 0.0003412360000000017}, {'diff': 0.00034036099999999736}, {'diff': 0.0003383619999999983}, {'diff': 0.0003402500000000003}, ...</msg>
<status status="PASS" starttime="20201030 18:30:35.280" endtime="20201030 18:30:35.286"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:35.295" level="INFO">${ACCURACY} = {'diff': [0.0003398060000000015, 0.0003412780000000004, 0.0003412360000000017, 0.00034036099999999736, 0.0003383619999999983, 0.0003402500000000003, 0.00034031899999999865, 0.000339194000000001, 0.000...</msg>
<status status="PASS" starttime="20201030 18:30:35.288" endtime="20201030 18:30:35.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:35.305" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201030 18:30:35.302" endtime="20201030 18:30:35.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:35.310" level="INFO">VALUE: [0.0003398060000000015, 0.0003412780000000004, 0.0003412360000000017, 0.00034036099999999736, 0.0003383619999999983, 0.0003402500000000003, 0.00034031899999999865, 0.000339194000000001, 0.00033802800000000063, 0.00033922200000000013, 0.0003396110000000001, 0.0003380839999999989, 0.0003404719999999979, 0.0003407779999999999, 0.00033843100000000015, 0.0003381250000000016, 0.0003386109999999991, 0.00033862499999999865, 0.00033957000000000084, 0.00033981899999999815, 0.0003394590000000003, 0.00033856999999999984, 0.00034034799999999726, 0.00034016699999999886, 0.00033961100000000355, 0.000338999999999999, 0.0003401810000000019, 0.000338806000000004, 0.0003406390000000037, 0.00034044400000000224, 0.00033826399999999784, 0.0003393060000000045, 0.0003396529999999953, 0.0003384019999999946, 0.0003387359999999992, 0.00033811100000000205, 0.00033809800000000195, 0.00034009800000000395, 0.0003395420000000052, 0.0003406669999999959, 0.00034070900000000154, 0.0003384170000000006, 0.0003407919999999995, 0.00034063899999999675, 0.00033822300000000555, 0.00033966600000000235, 0.0003402360000000007, 0.00033815300000000076, 0.00033922200000000013, 0.00033898599999999945]</msg>
<status status="PASS" starttime="20201030 18:30:35.307" endtime="20201030 18:30:35.312"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.297" endtime="20201030 18:30:35.313"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:35.321" endtime="20201030 18:30:35.343"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.318" endtime="20201030 18:30:35.345"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.315" endtime="20201030 18:30:35.345"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.918" endtime="20201030 18:30:35.346"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.918" endtime="20201030 18:30:35.346"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:35.366" endtime="20201030 18:30:35.404"></status>
</kw>
<msg timestamp="20201030 18:30:35.405" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:35.362" endtime="20201030 18:30:35.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:35.409" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:35.407" endtime="20201030 18:30:35.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:35.410" endtime="20201030 18:30:35.412"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.356" endtime="20201030 18:30:35.413"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.352" endtime="20201030 18:30:35.413"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:35.420" endtime="20201030 18:30:35.706"></status>
</kw>
<msg timestamp="20201030 18:30:35.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039107097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039448472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:35.418" endtime="20201030 18:30:35.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:35.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039107097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039448472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:35.710" endtime="20201030 18:30:35.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:35.719" endtime="20201030 18:30:35.720"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.415" endtime="20201030 18:30:35.721"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.414" endtime="20201030 18:30:35.721"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:35.725" level="INFO">${RESULT} = [{'diff': 0.00034137499999999793}, {'diff': 0.0003389860000000064}, {'diff': 0.00033833300000000316}, {'diff': 0.00033976299999999987}, {'diff': 0.0003381809999999999}, {'diff': 0.0003385689999999969}...</msg>
<status status="PASS" starttime="20201030 18:30:35.722" endtime="20201030 18:30:35.726"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:35.729" level="INFO">${ACCURACY} = {'diff': [0.00034137499999999793, 0.0003389860000000064, 0.00033833300000000316, 0.00033976299999999987, 0.0003381809999999999, 0.0003385689999999969, 0.0003390840000000034, 0.0003412780000000004, 0.0...</msg>
<status status="PASS" starttime="20201030 18:30:35.726" endtime="20201030 18:30:35.730"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:35.734" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201030 18:30:35.733" endtime="20201030 18:30:35.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:35.740" level="INFO">VALUE: [0.00034137499999999793, 0.0003389860000000064, 0.00033833300000000316, 0.00033976299999999987, 0.0003381809999999999, 0.0003385689999999969, 0.0003390840000000034, 0.0003412780000000004, 0.0003391379999999958, 0.0003390699999999969, 0.0003402500000000003, 0.0003381249999999947, 0.000340194000000002, 0.00033838900000000144, 0.000339888999999996, 0.00034115300000000376, 0.00034090299999999657, 0.0003398610000000038, 0.0003384170000000006, 0.00033943100000000115, 0.00034, 0.0003389030000000015, 0.00033954099999999876, 0.0003386940000000005, 0.00034011100000000405, 0.0003401249999999967, 0.00034009699999999754, 0.00033959699999999704, 0.00033919500000000047, 0.0003389030000000015, 0.00033993100000000165, 0.0003407500000000008, 0.0003411520000000043, 0.0003382779999999974, 0.0003403469999999978, 0.00033993100000000165, 0.00033920800000000056, 0.0003404580000000018, 0.00034005499999999883, 0.00033859699999999604, 0.0003407500000000008, 0.00033859699999999604, 0.0003411250000000046, 0.0003408469999999983, 0.00034008299999999797, 0.00034104100000000026, 0.00033865300000000126, 0.0003388610000000028, 0.0003391390000000022, 0.00033901400000000553]</msg>
<status status="PASS" starttime="20201030 18:30:35.735" endtime="20201030 18:30:35.741"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.730" endtime="20201030 18:30:35.742"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:35.745" endtime="20201030 18:30:35.765"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.744" endtime="20201030 18:30:35.765"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.743" endtime="20201030 18:30:35.766"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.348" endtime="20201030 18:30:35.766"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.347" endtime="20201030 18:30:35.766"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:35.775" endtime="20201030 18:30:35.815"></status>
</kw>
<msg timestamp="20201030 18:30:35.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:35.773" endtime="20201030 18:30:35.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:35.818" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:35.817" endtime="20201030 18:30:35.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:35.820" endtime="20201030 18:30:35.822"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.771" endtime="20201030 18:30:35.822"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.769" endtime="20201030 18:30:35.823"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:35.830" endtime="20201030 18:30:36.116"></status>
</kw>
<msg timestamp="20201030 18:30:36.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022703958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023046167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:35.828" endtime="20201030 18:30:36.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:36.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022703958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023046167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:36.121" endtime="20201030 18:30:36.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:36.130" endtime="20201030 18:30:36.131"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.826" endtime="20201030 18:30:36.132"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.823" endtime="20201030 18:30:36.132"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:36.137" level="INFO">${RESULT} = [{'diff': 0.00034220899999999957}, {'diff': 0.00033926299999999937}, {'diff': 0.0003387499999999988}, {'diff': 0.00034109699999999854}, {'diff': 0.0003397499999999998}, {'diff': 0.0003410689999999994}...</msg>
<status status="PASS" starttime="20201030 18:30:36.134" endtime="20201030 18:30:36.138"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:36.143" level="INFO">${ACCURACY} = {'diff': [0.00034220899999999957, 0.00033926299999999937, 0.0003387499999999988, 0.00034109699999999854, 0.0003397499999999998, 0.0003410689999999994, 0.0003399590000000008, 0.0003382640000000013, 0.0...</msg>
<status status="PASS" starttime="20201030 18:30:36.138" endtime="20201030 18:30:36.143"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:36.147" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201030 18:30:36.146" endtime="20201030 18:30:36.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:36.150" level="INFO">VALUE: [0.00034220899999999957, 0.00033926299999999937, 0.0003387499999999988, 0.00034109699999999854, 0.0003397499999999998, 0.0003410689999999994, 0.0003399590000000008, 0.0003382640000000013, 0.0003410140000000006, 0.00033943100000000115, 0.0003408469999999983, 0.0003398200000000011, 0.000338693999999997, 0.0003384170000000006, 0.00034104100000000026, 0.0003402500000000003, 0.0003384160000000011, 0.0003386109999999991, 0.0003409309999999992, 0.0003379719999999989, 0.000338999999999999, 0.00033934700000000026, 0.00034066699999999936, 0.0003391389999999987, 0.00033854199999999723, 0.00033872199999999963, 0.00034124999999999434, 0.0003412219999999952, 0.0003409579999999954, 0.00034002799999999916, 0.00033887500000000237, 0.000340679999999996, 0.00033870800000000006, 0.0003395139999999991, 0.0003381390000000012, 0.0003402500000000003, 0.0003394170000000016, 0.0003394999999999995, 0.0003378480000000017, 0.0003389860000000064, 0.00034090299999999657, 0.0003379579999999993, 0.0003399170000000021, 0.0003385700000000033, 0.00033986099999999686, 0.00033969499999999403, 0.000338999999999999, 0.000339305000000005, 0.00033938900000000244, 0.00033977699999999944]</msg>
<status status="PASS" starttime="20201030 18:30:36.148" endtime="20201030 18:30:36.150"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.143" endtime="20201030 18:30:36.151"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:36.155" endtime="20201030 18:30:36.174"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.153" endtime="20201030 18:30:36.175"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.152" endtime="20201030 18:30:36.175"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.767" endtime="20201030 18:30:36.176"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.766" endtime="20201030 18:30:36.176"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:36.185" endtime="20201030 18:30:36.223"></status>
</kw>
<msg timestamp="20201030 18:30:36.224" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:36.183" endtime="20201030 18:30:36.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:36.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:36.225" endtime="20201030 18:30:36.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:36.228" endtime="20201030 18:30:36.229"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.180" endtime="20201030 18:30:36.230"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.178" endtime="20201030 18:30:36.230"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:36.237" endtime="20201030 18:30:36.524"></status>
</kw>
<msg timestamp="20201030 18:30:36.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024972667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025328972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:36.235" endtime="20201030 18:30:36.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:36.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024972667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025328972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:36.529" endtime="20201030 18:30:36.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:36.537" endtime="20201030 18:30:36.539"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.233" endtime="20201030 18:30:36.540"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.231" endtime="20201030 18:30:36.540"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:36.544" level="INFO">${RESULT} = [{'diff': 0.0003563050000000012}, {'diff': 0.0003409719999999984}, {'diff': 0.0003379719999999989}, {'diff': 0.00034054199999999923}, {'diff': 0.0003406110000000011}, {'diff': 0.00033907000000000034},...</msg>
<status status="PASS" starttime="20201030 18:30:36.541" endtime="20201030 18:30:36.544"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:36.548" level="INFO">${ACCURACY} = {'diff': [0.0003563050000000012, 0.0003409719999999984, 0.0003379719999999989, 0.00034054199999999923, 0.0003406110000000011, 0.00033907000000000034, 0.0003387499999999988, 0.0003398749999999999, 0.00...</msg>
<status status="PASS" starttime="20201030 18:30:36.545" endtime="20201030 18:30:36.548"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:36.553" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201030 18:30:36.552" endtime="20201030 18:30:36.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:36.555" level="INFO">VALUE: [0.0003563050000000012, 0.0003409719999999984, 0.0003379719999999989, 0.00034054199999999923, 0.0003406110000000011, 0.00033907000000000034, 0.0003387499999999988, 0.0003398749999999999, 0.00034040299999999954, 0.0003384579999999998, 0.0003382359999999987, 0.00034070899999999807, 0.00034076400000000034, 0.0003408469999999983, 0.0003409589999999983, 0.0003395550000000018, 0.00034120899999999857, 0.00033831899999999665, 0.0003407500000000008, 0.00034041599999999617, 0.00034052799999999966, 0.0003383610000000023, 0.0003389719999999999, 0.00033965300000000226, 0.00033838900000000144, 0.00033988800000000347, 0.00033876399999999834, 0.0003391109999999961, 0.00033934700000000373, 0.0003412780000000004, 0.0003394170000000016, 0.00034108299999999897, 0.0003384449999999997, 0.0003412219999999952, 0.00033931899999999765, 0.0003407779999999999, 0.0003386940000000005, 0.00034055499999999933, 0.00033870800000000006, 0.0003402779999999994, 0.0003393469999999968, 0.00034092999999999624, 0.0003392779999999984, 0.00033938900000000244, 0.00034031899999999865, 0.00034069500000000197, 0.00033888900000000194, 0.00033920800000000056, 0.0003402500000000003, 0.0003382779999999974]</msg>
<status status="PASS" starttime="20201030 18:30:36.554" endtime="20201030 18:30:36.556"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.549" endtime="20201030 18:30:36.557"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:36.561" endtime="20201030 18:30:36.580"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.559" endtime="20201030 18:30:36.581"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.558" endtime="20201030 18:30:36.581"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.177" endtime="20201030 18:30:36.581"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.176" endtime="20201030 18:30:36.582"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:36.591" endtime="20201030 18:30:36.630"></status>
</kw>
<msg timestamp="20201030 18:30:36.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:36.589" endtime="20201030 18:30:36.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:36.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:36.632" endtime="20201030 18:30:36.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:36.634" endtime="20201030 18:30:36.636"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.586" endtime="20201030 18:30:36.636"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.584" endtime="20201030 18:30:36.637"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:36.644" endtime="20201030 18:30:36.930"></status>
</kw>
<msg timestamp="20201030 18:30:36.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026193458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026531278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:36.642" endtime="20201030 18:30:36.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:36.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026193458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026531278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:36.935" endtime="20201030 18:30:36.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:36.943" endtime="20201030 18:30:36.945"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.639" endtime="20201030 18:30:36.946"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.638" endtime="20201030 18:30:36.946"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:36.950" level="INFO">${RESULT} = [{'diff': 0.0003378199999999991}, {'diff': 0.0003406800000000029}, {'diff': 0.00034102800000000016}, {'diff': 0.0003397079999999976}, {'diff': 0.00033812499999999815}, {'diff': 0.00034068099999999893}...</msg>
<status status="PASS" starttime="20201030 18:30:36.947" endtime="20201030 18:30:36.950"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:36.954" level="INFO">${ACCURACY} = {'diff': [0.0003378199999999991, 0.0003406800000000029, 0.00034102800000000016, 0.0003397079999999976, 0.00033812499999999815, 0.00034068099999999893, 0.00034088900000000047, 0.00033984800000000023, 0...</msg>
<status status="PASS" starttime="20201030 18:30:36.951" endtime="20201030 18:30:36.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:36.961" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201030 18:30:36.959" endtime="20201030 18:30:36.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:36.964" level="INFO">VALUE: [0.0003378199999999991, 0.0003406800000000029, 0.00034102800000000016, 0.0003397079999999976, 0.00033812499999999815, 0.00034068099999999893, 0.00034088900000000047, 0.00033984800000000023, 0.00033804100000000073, 0.0003399439999999983, 0.00033943100000000115, 0.0003393749999999994, 0.0003402360000000007, 0.0003393200000000006, 0.00034098600000000145, 0.00033848599999999895, 0.0003381809999999999, 0.0003378469999999953, 0.00034083300000000566, 0.0003403469999999978, 0.00034045899999999435, 0.00033877699999999844, 0.00033976399999999934, 0.0003398469999999973, 0.0003395269999999992, 0.00033870800000000006, 0.00033986099999999686, 0.0003389170000000011, 0.0003392359999999997, 0.00033887499999999543, 0.00034036199999999683, 0.0003382499999999983, 0.00033937500000000287, 0.00034108299999999897, 0.00033859699999999604, 0.000340291999999999, 0.0003405699999999984, 0.0003409580000000023, 0.00033787500000000137, 0.0003395139999999991, 0.000340597000000005, 0.0003382499999999983, 0.00033937500000000287, 0.0003388610000000028, 0.0003396390000000027, 0.00033858299999999647, 0.0003405140000000001, 0.0003386249999999952, 0.00033981899999999815, 0.0003383469999999958]</msg>
<status status="PASS" starttime="20201030 18:30:36.963" endtime="20201030 18:30:36.966"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.956" endtime="20201030 18:30:36.967"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:36.970" endtime="20201030 18:30:36.992"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.969" endtime="20201030 18:30:36.992"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.968" endtime="20201030 18:30:36.993"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.583" endtime="20201030 18:30:36.993"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.582" endtime="20201030 18:30:36.993"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:37.005" endtime="20201030 18:30:37.042"></status>
</kw>
<msg timestamp="20201030 18:30:37.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:37.001" endtime="20201030 18:30:37.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:37.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:37.044" endtime="20201030 18:30:37.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:37.046" endtime="20201030 18:30:37.048"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.998" endtime="20201030 18:30:37.048"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.996" endtime="20201030 18:30:37.049"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:37.056" endtime="20201030 18:30:37.342"></status>
</kw>
<msg timestamp="20201030 18:30:37.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028183194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02851425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:37.054" endtime="20201030 18:30:37.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:37.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028183194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02851425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:37.346" endtime="20201030 18:30:37.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:37.355" endtime="20201030 18:30:37.357"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.051" endtime="20201030 18:30:37.357"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.049" endtime="20201030 18:30:37.358"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:37.362" level="INFO">${RESULT} = [{'diff': 0.0003310559999999997}, {'diff': 0.00033922200000000013}, {'diff': 0.0003387360000000027}, {'diff': 0.00033876399999999834}, {'diff': 0.00033887500000000237}, {'diff': 0.000340306000000002},...</msg>
<status status="PASS" starttime="20201030 18:30:37.358" endtime="20201030 18:30:37.362"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:37.367" level="INFO">${ACCURACY} = {'diff': [0.0003310559999999997, 0.00033922200000000013, 0.0003387360000000027, 0.00033876399999999834, 0.00033887500000000237, 0.000340306000000002, 0.00034122199999999867, 0.0003413050000000001, 0.0...</msg>
<status status="PASS" starttime="20201030 18:30:37.363" endtime="20201030 18:30:37.367"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:37.371" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201030 18:30:37.370" endtime="20201030 18:30:37.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:37.374" level="INFO">VALUE: [0.0003310559999999997, 0.00033922200000000013, 0.0003387360000000027, 0.00033876399999999834, 0.00033887500000000237, 0.000340306000000002, 0.00034122199999999867, 0.0003413050000000001, 0.00034116699999999986, 0.0003384160000000011, 0.0003406249999999972, 0.0003401390000000032, 0.0003410140000000006, 0.00034015300000000276, 0.0003408469999999983, 0.0003401390000000032, 0.0003411250000000046, 0.0003383339999999957, 0.00034091599999999667, 0.0003385700000000033, 0.00033856900000000384, 0.0003383190000000036, 0.0003399170000000021, 0.00033802799999999716, 0.0003382779999999974, 0.0003405000000000005, 0.00034072200000000163, 0.0003398469999999973, 0.0003390970000000035, 0.00034047199999999445, 0.00033943100000000115, 0.0003402079999999946, 0.0003401800000000024, 0.00034037499999999693, 0.00033870899999999954, 0.0003386940000000005, 0.00033916600000000185, 0.0003380970000000025, 0.0003381800000000004, 0.00034083300000000566, 0.00033886099999999586, 0.00033955500000000527, 0.0003407779999999999, 0.00033926399999999884, 0.00033882000000000356, 0.000339790999999999, 0.0003412779999999935, 0.00034072200000000163, 0.00033944400000000124, 0.0003399170000000021]</msg>
<status status="PASS" starttime="20201030 18:30:37.373" endtime="20201030 18:30:37.375"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.368" endtime="20201030 18:30:37.375"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:37.379" endtime="20201030 18:30:37.399"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.378" endtime="20201030 18:30:37.399"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.376" endtime="20201030 18:30:37.399"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.994" endtime="20201030 18:30:37.400"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.993" endtime="20201030 18:30:37.400"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:37.409" endtime="20201030 18:30:37.443"></status>
</kw>
<msg timestamp="20201030 18:30:37.444" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:37.407" endtime="20201030 18:30:37.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:37.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:37.445" endtime="20201030 18:30:37.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:37.447" endtime="20201030 18:30:37.449"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.405" endtime="20201030 18:30:37.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.403" endtime="20201030 18:30:37.450"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:37.457" endtime="20201030 18:30:37.744"></status>
</kw>
<msg timestamp="20201030 18:30:37.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021717736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022060833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:37.455" endtime="20201030 18:30:37.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:37.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021717736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022060833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:37.748" endtime="20201030 18:30:37.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:37.757" endtime="20201030 18:30:37.759"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.453" endtime="20201030 18:30:37.759"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.451" endtime="20201030 18:30:37.760"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:37.764" level="INFO">${RESULT} = [{'diff': 0.00034309699999999707}, {'diff': 0.00034054099999999976}, {'diff': 0.0003405970000000015}, {'diff': 0.00033819500000000294}, {'diff': 0.0003403469999999978}, {'diff': 0.0003391389999999987}...</msg>
<status status="PASS" starttime="20201030 18:30:37.760" endtime="20201030 18:30:37.764"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:37.768" level="INFO">${ACCURACY} = {'diff': [0.00034309699999999707, 0.00034054099999999976, 0.0003405970000000015, 0.00033819500000000294, 0.0003403469999999978, 0.0003391389999999987, 0.0003397360000000002, 0.0003400840000000009, 0.0...</msg>
<status status="PASS" starttime="20201030 18:30:37.765" endtime="20201030 18:30:37.768"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:37.772" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201030 18:30:37.771" endtime="20201030 18:30:37.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:37.775" level="INFO">VALUE: [0.00034309699999999707, 0.00034054099999999976, 0.0003405970000000015, 0.00033819500000000294, 0.0003403469999999978, 0.0003391389999999987, 0.0003397360000000002, 0.0003400840000000009, 0.00034062500000000065, 0.0003408750000000009, 0.00033888900000000194, 0.0003405140000000001, 0.00033966700000000183, 0.00033995799999999785, 0.0003391939999999975, 0.000339291999999998, 0.00033856900000000037, 0.00033984700000000076, 0.0003403469999999978, 0.0003384449999999997, 0.00033995799999999785, 0.00034030500000000255, 0.0003389299999999977, 0.00034136099999999836, 0.00034002799999999916, 0.00033916700000000133, 0.0003400000000000035, 0.0003412360000000017, 0.0003389030000000015, 0.0003403329999999982, 0.00033986099999999686, 0.0003387359999999992, 0.0003411390000000042, 0.00033943100000000115, 0.0003404309999999952, 0.0003388469999999963, 0.0003413329999999992, 0.0003412500000000013, 0.00034120900000000204, 0.000341276999999994, 0.0003397360000000002, 0.00033898599999999945, 0.0003383329999999962, 0.0003382499999999983, 0.0003390689999999974, 0.00033822199999999913, 0.0003396659999999954, 0.0003409170000000031, 0.0003412500000000013, 0.00034041699999999564]</msg>
<status status="PASS" starttime="20201030 18:30:37.774" endtime="20201030 18:30:37.776"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.769" endtime="20201030 18:30:37.776"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:37.780" endtime="20201030 18:30:37.799"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.778" endtime="20201030 18:30:37.800"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.777" endtime="20201030 18:30:37.800"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.401" endtime="20201030 18:30:37.801"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.400" endtime="20201030 18:30:37.801"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:37.810" endtime="20201030 18:30:37.846"></status>
</kw>
<msg timestamp="20201030 18:30:37.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:37.808" endtime="20201030 18:30:37.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:37.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:37.848" endtime="20201030 18:30:37.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:37.851" endtime="20201030 18:30:37.853"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.806" endtime="20201030 18:30:37.853"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.803" endtime="20201030 18:30:37.854"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:37.861" endtime="20201030 18:30:38.147"></status>
</kw>
<msg timestamp="20201030 18:30:38.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022655958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02300675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:37.859" endtime="20201030 18:30:38.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:38.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022655958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02300675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:38.152" endtime="20201030 18:30:38.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:38.160" endtime="20201030 18:30:38.162"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.857" endtime="20201030 18:30:38.163"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.855" endtime="20201030 18:30:38.163"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:38.167" level="INFO">${RESULT} = [{'diff': 0.0003507919999999991}, {'diff': 0.0003389030000000015}, {'diff': 0.0003385560000000003}, {'diff': 0.000338999999999999}, {'diff': 0.00034102800000000016}, {'diff': 0.00034108299999999897}, ...</msg>
<status status="PASS" starttime="20201030 18:30:38.164" endtime="20201030 18:30:38.167"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:38.171" level="INFO">${ACCURACY} = {'diff': [0.0003507919999999991, 0.0003389030000000015, 0.0003385560000000003, 0.000338999999999999, 0.00034102800000000016, 0.00034108299999999897, 0.00033819499999999947, 0.0003401389999999997, 0.00...</msg>
<status status="PASS" starttime="20201030 18:30:38.168" endtime="20201030 18:30:38.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:38.176" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201030 18:30:38.175" endtime="20201030 18:30:38.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:38.178" level="INFO">VALUE: [0.0003507919999999991, 0.0003389030000000015, 0.0003385560000000003, 0.000338999999999999, 0.00034102800000000016, 0.00034108299999999897, 0.00033819499999999947, 0.0003401389999999997, 0.0003397779999999989, 0.00033926299999999937, 0.00034040299999999954, 0.00033976299999999987, 0.0003396800000000019, 0.00033826399999999784, 0.00033784799999999823, 0.00033848599999999895, 0.0003403880000000005, 0.00033955499999999833, 0.00033916700000000133, 0.0003379860000000019, 0.000340403000000003, 0.00033815300000000076, 0.0003389719999999999, 0.00033888800000000247, 0.0003397360000000002, 0.0003402909999999995, 0.0003380280000000041, 0.00033965300000000226, 0.0003383329999999962, 0.00034065199999999685, 0.0003380970000000025, 0.00033998600000000045, 0.0003380559999999963, 0.00033938900000000244, 0.00034026399999999984, 0.0003403190000000056, 0.00033834700000000273, 0.0003404170000000026, 0.00034026399999999984, 0.0003380139999999976, 0.00034098600000000145, 0.00034065300000000326, 0.0003406800000000029, 0.00033837499999999493, 0.0003407219999999947, 0.0003389300000000012, 0.00033863899999999475, 0.0003396810000000014, 0.00033829100000000445, 0.0003395410000000057]</msg>
<status status="PASS" starttime="20201030 18:30:38.177" endtime="20201030 18:30:38.180"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.172" endtime="20201030 18:30:38.181"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:38.184" endtime="20201030 18:30:38.204"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.183" endtime="20201030 18:30:38.204"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.182" endtime="20201030 18:30:38.205"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.802" endtime="20201030 18:30:38.205"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.801" endtime="20201030 18:30:38.205"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:38.214" endtime="20201030 18:30:38.254"></status>
</kw>
<msg timestamp="20201030 18:30:38.254" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:38.213" endtime="20201030 18:30:38.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:38.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:38.256" endtime="20201030 18:30:38.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:38.258" endtime="20201030 18:30:38.260"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.210" endtime="20201030 18:30:38.260"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.208" endtime="20201030 18:30:38.261"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:38.268" endtime="20201030 18:30:38.554"></status>
</kw>
<msg timestamp="20201030 18:30:38.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025268153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025613236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:38.266" endtime="20201030 18:30:38.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:38.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025268153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025613236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:38.558" endtime="20201030 18:30:38.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:38.567" endtime="20201030 18:30:38.568"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.263" endtime="20201030 18:30:38.569"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.261" endtime="20201030 18:30:38.569"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:38.573" level="INFO">${RESULT} = [{'diff': 0.0003450829999999995}, {'diff': 0.0003398329999999977}, {'diff': 0.0003402779999999994}, {'diff': 0.0003386380000000022}, {'diff': 0.0003392780000000019}, {'diff': 0.00034030599999999855}, ...</msg>
<status status="PASS" starttime="20201030 18:30:38.570" endtime="20201030 18:30:38.574"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:38.578" level="INFO">${ACCURACY} = {'diff': [0.0003450829999999995, 0.0003398329999999977, 0.0003402779999999994, 0.0003386380000000022, 0.0003392780000000019, 0.00034030599999999855, 0.00033876399999999834, 0.00033823700000000165, 0.0...</msg>
<status status="PASS" starttime="20201030 18:30:38.574" endtime="20201030 18:30:38.579"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:38.583" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201030 18:30:38.582" endtime="20201030 18:30:38.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:38.586" level="INFO">VALUE: [0.0003450829999999995, 0.0003398329999999977, 0.0003402779999999994, 0.0003386380000000022, 0.0003392780000000019, 0.00034030599999999855, 0.00033876399999999834, 0.00033823700000000165, 0.00033938899999999897, 0.00033991599999999914, 0.0003388190000000006, 0.0003399439999999983, 0.0003393330000000007, 0.00033888900000000194, 0.0003402779999999994, 0.0003413199999999991, 0.0003409169999999996, 0.0003412780000000004, 0.00033987499999999643, 0.00033888900000000194, 0.0003381249999999947, 0.00033852799999999766, 0.0003379030000000005, 0.0003394450000000007, 0.0003399450000000012, 0.0003392920000000049, 0.0003404580000000018, 0.00033838900000000144, 0.0003395840000000039, 0.0003407500000000008, 0.00034009699999999754, 0.0003394999999999995, 0.0003405000000000005, 0.0003390269999999987, 0.0003391109999999961, 0.0003381390000000012, 0.00033802799999999716, 0.0003394450000000007, 0.00033866700000000083, 0.0003401810000000019, 0.00034031899999999865, 0.0003405000000000005, 0.00033894400000000074, 0.00034109699999999854, 0.0003386520000000018, 0.000340403000000003, 0.00033837499999999493, 0.00033870800000000006, 0.0003411250000000046, 0.00033911100000000305]</msg>
<status status="PASS" starttime="20201030 18:30:38.584" endtime="20201030 18:30:38.586"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.579" endtime="20201030 18:30:38.587"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:38.591" endtime="20201030 18:30:38.610"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.589" endtime="20201030 18:30:38.611"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.588" endtime="20201030 18:30:38.611"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.206" endtime="20201030 18:30:38.612"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.206" endtime="20201030 18:30:38.612"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:38.621" endtime="20201030 18:30:38.654"></status>
</kw>
<msg timestamp="20201030 18:30:38.655" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:38.619" endtime="20201030 18:30:38.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:38.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:38.656" endtime="20201030 18:30:38.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:38.658" endtime="20201030 18:30:38.660"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.616" endtime="20201030 18:30:38.661"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.614" endtime="20201030 18:30:38.661"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:38.668" endtime="20201030 18:30:38.958"></status>
</kw>
<msg timestamp="20201030 18:30:38.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020696528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021041931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:38.666" endtime="20201030 18:30:38.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:38.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020696528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021041931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:38.963" endtime="20201030 18:30:38.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:38.971" endtime="20201030 18:30:38.972"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.664" endtime="20201030 18:30:38.973"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.662" endtime="20201030 18:30:38.973"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:38.977" level="INFO">${RESULT} = [{'diff': 0.00034540300000000107}, {'diff': 0.00034020800000000156}, {'diff': 0.00033843100000000015}, {'diff': 0.0003411390000000007}, {'diff': 0.00034056900000000237}, {'diff': 0.000341000000000001}...</msg>
<status status="PASS" starttime="20201030 18:30:38.974" endtime="20201030 18:30:38.977"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:38.981" level="INFO">${ACCURACY} = {'diff': [0.00034540300000000107, 0.00034020800000000156, 0.00033843100000000015, 0.0003411390000000007, 0.00034056900000000237, 0.000341000000000001, 0.00034068099999999893, 0.0003409169999999996, 0....</msg>
<status status="PASS" starttime="20201030 18:30:38.978" endtime="20201030 18:30:38.981"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:38.986" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201030 18:30:38.985" endtime="20201030 18:30:38.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:38.988" level="INFO">VALUE: [0.00034540300000000107, 0.00034020800000000156, 0.00033843100000000015, 0.0003411390000000007, 0.00034056900000000237, 0.000341000000000001, 0.00034068099999999893, 0.0003409169999999996, 0.0003384719999999994, 0.0003404859999999975, 0.0003404590000000013, 0.0003404169999999991, 0.00033884699999999976, 0.0003381250000000016, 0.0003411939999999995, 0.00034076400000000034, 0.00034070800000000206, 0.0003405970000000015, 0.0003388749999999989, 0.0003411249999999977, 0.0003400689999999984, 0.00033945799999999735, 0.0003401939999999985, 0.0003392359999999997, 0.0003402500000000003, 0.00033851400000000156, 0.0003381800000000004, 0.00033941599999999864, 0.000338096999999999, 0.0003382359999999987, 0.0003406669999999959, 0.00033983300000000466, 0.00033981899999999815, 0.00034009699999999754, 0.0003402500000000003, 0.00033870800000000006, 0.00033898699999999893, 0.00033854199999999723, 0.0003392499999999993, 0.0003400559999999983, 0.000340791, 0.000337999999999998, 0.0003404720000000014, 0.0003403889999999965, 0.000341000000000001, 0.00033911100000000305, 0.0003382640000000048, 0.0003391659999999949, 0.0003395420000000052, 0.00033837500000000187]</msg>
<status status="PASS" starttime="20201030 18:30:38.987" endtime="20201030 18:30:38.989"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.982" endtime="20201030 18:30:38.989"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:38.993" endtime="20201030 18:30:39.012"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.991" endtime="20201030 18:30:39.013"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.990" endtime="20201030 18:30:39.013"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.613" endtime="20201030 18:30:39.014"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.612" endtime="20201030 18:30:39.014"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:39.022" endtime="20201030 18:30:39.061"></status>
</kw>
<msg timestamp="20201030 18:30:39.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:39.021" endtime="20201030 18:30:39.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:39.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:39.062" endtime="20201030 18:30:39.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:39.065" endtime="20201030 18:30:39.066"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.018" endtime="20201030 18:30:39.067"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.016" endtime="20201030 18:30:39.067"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:39.074" endtime="20201030 18:30:39.360"></status>
</kw>
<msg timestamp="20201030 18:30:39.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025541903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025883486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:39.072" endtime="20201030 18:30:39.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:39.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025541903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025883486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:39.364" endtime="20201030 18:30:39.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:39.372" endtime="20201030 18:30:39.373"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.070" endtime="20201030 18:30:39.374"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.068" endtime="20201030 18:30:39.374"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:39.378" level="INFO">${RESULT} = [{'diff': 0.00034158299999999947}, {'diff': 0.0003410689999999994}, {'diff': 0.00033966699999999836}, {'diff': 0.00033916700000000133}, {'diff': 0.0003387220000000031}, {'diff': 0.000338306}, {'diff':...</msg>
<status status="PASS" starttime="20201030 18:30:39.375" endtime="20201030 18:30:39.378"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:39.382" level="INFO">${ACCURACY} = {'diff': [0.00034158299999999947, 0.0003410689999999994, 0.00033966699999999836, 0.00033916700000000133, 0.0003387220000000031, 0.000338306, 0.00033825000000000174, 0.0003411110000000016, 0.0003386530...</msg>
<status status="PASS" starttime="20201030 18:30:39.379" endtime="20201030 18:30:39.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:39.387" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201030 18:30:39.386" endtime="20201030 18:30:39.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:39.392" level="INFO">VALUE: [0.00034158299999999947, 0.0003410689999999994, 0.00033966699999999836, 0.00033916700000000133, 0.0003387220000000031, 0.000338306, 0.00033825000000000174, 0.0003411110000000016, 0.00033865300000000126, 0.0003402500000000003, 0.00034020800000000156, 0.00034026399999999984, 0.0003393190000000011, 0.0003394720000000004, 0.00034099999999999756, 0.0003405560000000023, 0.0003380830000000029, 0.0003411799999999965, 0.00034063899999999675, 0.00033832000000000306, 0.000341194000000003, 0.00033833300000000316, 0.00033992999999999524, 0.0003399450000000012, 0.00034022200000000113, 0.00033998600000000045, 0.0003402360000000007, 0.0003406109999999976, 0.00033872199999999963, 0.0003400139999999996, 0.00033852799999999766, 0.00033811100000000205, 0.0003391250000000026, 0.00034123699999999424, 0.0003409300000000032, 0.0003407219999999947, 0.0003389719999999999, 0.00034054099999999976, 0.00033858299999999647, 0.00034120800000000256, 0.00033972200000000063, 0.0003404300000000027, 0.00033836199999999483, 0.0003392499999999993, 0.00034084799999999776, 0.0003405689999999989, 0.0003410130000000011, 0.00033827800000000435, 0.0003392499999999993, 0.0003392499999999993]</msg>
<status status="PASS" starttime="20201030 18:30:39.388" endtime="20201030 18:30:39.393"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.383" endtime="20201030 18:30:39.394"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:39.397" endtime="20201030 18:30:39.417"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.396" endtime="20201030 18:30:39.417"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.395" endtime="20201030 18:30:39.417"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.015" endtime="20201030 18:30:39.418"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.014" endtime="20201030 18:30:39.418"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:39.426" endtime="20201030 18:30:39.464"></status>
</kw>
<msg timestamp="20201030 18:30:39.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:39.425" endtime="20201030 18:30:39.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:39.467" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:39.465" endtime="20201030 18:30:39.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:39.468" endtime="20201030 18:30:39.469"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.422" endtime="20201030 18:30:39.470"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.420" endtime="20201030 18:30:39.470"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:39.477" endtime="20201030 18:30:39.777"></status>
</kw>
<msg timestamp="20201030 18:30:39.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023292181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023638833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:39.475" endtime="20201030 18:30:39.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:39.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023292181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023638833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:39.781" endtime="20201030 18:30:39.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:39.789" endtime="20201030 18:30:39.791"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.473" endtime="20201030 18:30:39.791"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.471" endtime="20201030 18:30:39.792"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:39.796" level="INFO">${RESULT} = [{'diff': 0.00034665200000000285}, {'diff': 0.00033984800000000023}, {'diff': 0.00033958299999999747}, {'diff': 0.0003413199999999991}, {'diff': 0.0003391120000000025}, {'diff': 0.0003394720000000004}...</msg>
<status status="PASS" starttime="20201030 18:30:39.792" endtime="20201030 18:30:39.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:39.800" level="INFO">${ACCURACY} = {'diff': [0.00034665200000000285, 0.00033984800000000023, 0.00033958299999999747, 0.0003413199999999991, 0.0003391120000000025, 0.0003394720000000004, 0.0003400130000000001, 0.00033865300000000126, 0....</msg>
<status status="PASS" starttime="20201030 18:30:39.797" endtime="20201030 18:30:39.801"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:39.805" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201030 18:30:39.804" endtime="20201030 18:30:39.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:39.807" level="INFO">VALUE: [0.00034665200000000285, 0.00033984800000000023, 0.00033958299999999747, 0.0003413199999999991, 0.0003391120000000025, 0.0003394720000000004, 0.0003400130000000001, 0.00033865300000000126, 0.00033832000000000306, 0.0003390839999999999, 0.00033990199999999957, 0.0003399299999999987, 0.00033966600000000235, 0.0003395550000000018, 0.0003394450000000007, 0.00033916700000000133, 0.00033893100000000065, 0.0003401389999999997, 0.00033943100000000115, 0.0003382499999999983, 0.0003411390000000007, 0.00033819400000000346, 0.0003409999999999941, 0.0003386800000000009, 0.00034034700000000473, 0.0003385559999999968, 0.00033961100000000355, 0.00033883300000000366, 0.000338291999999997, 0.00034108299999999897, 0.00034087499999999743, 0.00033883300000000366, 0.0003381809999999999, 0.00034065300000000326, 0.00033958299999999747, 0.0003405559999999988, 0.00034126300000000137, 0.00034076400000000034, 0.00034123599999999477, 0.000338790999999998, 0.00034119499999999553, 0.0003395840000000039, 0.0003410559999999993, 0.000340791, 0.0003389719999999999, 0.0003406800000000029, 0.00034052799999999966, 0.00033866700000000083, 0.0003392779999999984, 0.0003394999999999995]</msg>
<status status="PASS" starttime="20201030 18:30:39.806" endtime="20201030 18:30:39.808"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.801" endtime="20201030 18:30:39.808"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:39.812" endtime="20201030 18:30:39.832"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.811" endtime="20201030 18:30:39.832"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.809" endtime="20201030 18:30:39.832"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.419" endtime="20201030 18:30:39.833"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.418" endtime="20201030 18:30:39.833"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:39.841" endtime="20201030 18:30:39.876"></status>
</kw>
<msg timestamp="20201030 18:30:39.876" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:39.840" endtime="20201030 18:30:39.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:39.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:39.877" endtime="20201030 18:30:39.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:39.880" endtime="20201030 18:30:39.882"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.837" endtime="20201030 18:30:39.883"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.835" endtime="20201030 18:30:39.883"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:39.890" endtime="20201030 18:30:40.178"></status>
</kw>
<msg timestamp="20201030 18:30:40.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020275625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020631861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:39.888" endtime="20201030 18:30:40.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:40.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020275625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020631861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:40.182" endtime="20201030 18:30:40.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:40.190" endtime="20201030 18:30:40.192"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.886" endtime="20201030 18:30:40.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.884" endtime="20201030 18:30:40.193"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:40.197" level="INFO">${RESULT} = [{'diff': 0.00035623600000000283}, {'diff': 0.000338403000000001}, {'diff': 0.0003405560000000023}, {'diff': 0.0003405840000000014}, {'diff': 0.0003409720000000019}, {'diff': 0.0003383199999999996}, {...</msg>
<status status="PASS" starttime="20201030 18:30:40.194" endtime="20201030 18:30:40.197"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:40.201" level="INFO">${ACCURACY} = {'diff': [0.00035623600000000283, 0.000338403000000001, 0.0003405560000000023, 0.0003405840000000014, 0.0003409720000000019, 0.0003383199999999996, 0.00033852800000000113, 0.00033902800000000163, 0.00...</msg>
<status status="PASS" starttime="20201030 18:30:40.198" endtime="20201030 18:30:40.202"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:40.206" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201030 18:30:40.205" endtime="20201030 18:30:40.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:40.208" level="INFO">VALUE: [0.00035623600000000283, 0.000338403000000001, 0.0003405560000000023, 0.0003405840000000014, 0.0003409720000000019, 0.0003383199999999996, 0.00033852800000000113, 0.00033902800000000163, 0.00034090300000000004, 0.00034098700000000093, 0.00033954199999999823, 0.00033970800000000106, 0.00033941599999999864, 0.0003396810000000014, 0.00034034700000000126, 0.0003389160000000016, 0.0003395970000000005, 0.0003398330000000012, 0.00033912499999999915, 0.0003408469999999983, 0.00034070900000000154, 0.0003407639999999969, 0.00033790199999999757, 0.0003395689999999979, 0.00034081899999999915, 0.00033976299999999987, 0.00033852700000000166, 0.0003386810000000004, 0.00033943100000000115, 0.0003401810000000019, 0.0003388330000000002, 0.00034091699999999614, 0.0003399439999999948, 0.0003392229999999996, 0.0003397360000000002, 0.0003404300000000027, 0.0003406390000000037, 0.0003396390000000027, 0.0003396810000000014, 0.000338305000000004, 0.00033905500000000477, 0.00034019499999999453, 0.00034054199999999923, 0.0003381800000000004, 0.00034004199999999873, 0.00033854199999999723, 0.00033851400000000503, 0.000338387999999995, 0.000339679999999995, 0.00034077700000000044]</msg>
<status status="PASS" starttime="20201030 18:30:40.207" endtime="20201030 18:30:40.209"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:40.202" endtime="20201030 18:30:40.210"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:40.214" endtime="20201030 18:30:40.233"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:40.212" endtime="20201030 18:30:40.234"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:40.211" endtime="20201030 18:30:40.234"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.834" endtime="20201030 18:30:40.234"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.833" endtime="20201030 18:30:40.235"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:40.244" endtime="20201030 18:30:40.282"></status>
</kw>
<msg timestamp="20201030 18:30:40.283" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:40.242" endtime="20201030 18:30:40.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:40.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:40.284" endtime="20201030 18:30:40.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:40.286" endtime="20201030 18:30:40.288"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:40.239" endtime="20201030 18:30:40.289"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:40.237" endtime="20201030 18:30:40.289"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:40.296" endtime="20201030 18:30:40.602"></status>
</kw>
<msg timestamp="20201030 18:30:40.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02560325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025960042, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:40.294" endtime="20201030 18:30:40.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:40.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02560325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025960042, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:40.607" endtime="20201030 18:30:40.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:40.615" endtime="20201030 18:30:40.617"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:40.292" endtime="20201030 18:30:40.617"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:40.290" endtime="20201030 18:30:40.618"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:40.622" level="INFO">${RESULT} = [{'diff': 0.00035679199999999814}, {'diff': 0.0003402779999999994}, {'diff': 0.00034013800000000025}, {'diff': 0.00034062500000000065}, {'diff': 0.00033972200000000063}, {'diff': 0.0003394440000000012...</msg>
<status status="PASS" starttime="20201030 18:30:40.618" endtime="20201030 18:30:40.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:40.626" level="INFO">${ACCURACY} = {'diff': [0.00035679199999999814, 0.0003402779999999994, 0.00034013800000000025, 0.00034062500000000065, 0.00033972200000000063, 0.00033944400000000124, 0.0003406109999999976, 0.0003409719999999984, 0...</msg>
<status status="PASS" starttime="20201030 18:30:40.623" endtime="20201030 18:30:40.626"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:40.630" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201030 18:30:40.629" endtime="20201030 18:30:40.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:40.633" level="INFO">VALUE: [0.00035679199999999814, 0.0003402779999999994, 0.00034013800000000025, 0.00034062500000000065, 0.00033972200000000063, 0.00033944400000000124, 0.0003406109999999976, 0.0003409719999999984, 0.0003386109999999991, 0.0003384860000000024, 0.0003395840000000004, 0.0003395139999999991, 0.0003390139999999986, 0.0003401110000000006, 0.0003397499999999998, 0.00033951400000000256, 0.0003387500000000057, 0.00033970900000000054, 0.00033816700000000033, 0.0003405979999999975, 0.0003392359999999997, 0.0003394590000000003, 0.0003401529999999958, 0.000339194000000001, 0.00033904199999999773, 0.0003412079999999956, 0.00033983300000000466, 0.00033806900000000334, 0.00034016600000000285, 0.00034083400000000513, 0.00034052799999999966, 0.00033938900000000244, 0.0003399030000000025, 0.0003390970000000035, 0.00034044400000000224, 0.00033911100000000305, 0.0003402500000000003, 0.00033963899999999575, 0.000340194000000002, 0.000338597000000003, 0.0003382909999999975, 0.0003382369999999982, 0.0003400269999999997, 0.0003404590000000013, 0.00034009699999999754, 0.0003389719999999999, 0.0003401250000000036, 0.00033959699999999704, 0.0003402909999999995, 0.0003380559999999963]</msg>
<status status="PASS" starttime="20201030 18:30:40.632" endtime="20201030 18:30:40.635"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:40.627" endtime="20201030 18:30:40.635"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:40.639" endtime="20201030 18:30:40.658"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:40.637" endtime="20201030 18:30:40.659"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:40.636" endtime="20201030 18:30:40.659"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:40.235" endtime="20201030 18:30:40.660"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:40.235" endtime="20201030 18:30:40.660"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:40.669" endtime="20201030 18:30:40.704"></status>
</kw>
<msg timestamp="20201030 18:30:40.705" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:40.667" endtime="20201030 18:30:40.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:40.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:40.706" endtime="20201030 18:30:40.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:40.708" endtime="20201030 18:30:40.710"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:40.665" endtime="20201030 18:30:40.710"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:40.663" endtime="20201030 18:30:40.711"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:40.718" endtime="20201030 18:30:41.004"></status>
</kw>
<msg timestamp="20201030 18:30:41.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022290556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022643361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:40.716" endtime="20201030 18:30:41.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:41.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022290556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022643361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:41.008" endtime="20201030 18:30:41.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:41.016" endtime="20201030 18:30:41.018"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:40.713" endtime="20201030 18:30:41.019"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:40.712" endtime="20201030 18:30:41.019"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:41.023" level="INFO">${RESULT} = [{'diff': 0.0003528050000000012}, {'diff': 0.0003386389999999982}, {'diff': 0.00034049999999999706}, {'diff': 0.000338999999999999}, {'diff': 0.0003391529999999983}, {'diff': 0.0003384300000000007}, {...</msg>
<status status="PASS" starttime="20201030 18:30:41.020" endtime="20201030 18:30:41.023"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:41.028" level="INFO">${ACCURACY} = {'diff': [0.0003528050000000012, 0.0003386389999999982, 0.00034049999999999706, 0.000338999999999999, 0.0003391529999999983, 0.0003384300000000007, 0.0003403750000000004, 0.0003391659999999984, 0.0003...</msg>
<status status="PASS" starttime="20201030 18:30:41.024" endtime="20201030 18:30:41.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:41.033" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201030 18:30:41.032" endtime="20201030 18:30:41.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:41.035" level="INFO">VALUE: [0.0003528050000000012, 0.0003386389999999982, 0.00034049999999999706, 0.000338999999999999, 0.0003391529999999983, 0.0003384300000000007, 0.0003403750000000004, 0.0003391659999999984, 0.0003402909999999995, 0.0003379860000000019, 0.00034052799999999966, 0.0003394999999999995, 0.00033880500000000105, 0.0003384999999999985, 0.00034052799999999966, 0.000341194000000003, 0.0003379719999999989, 0.0003384170000000006, 0.0003386389999999982, 0.0003392360000000032, 0.00034072200000000163, 0.00034072299999999764, 0.00033891599999999814, 0.00033929200000000145, 0.0003401109999999971, 0.00033806900000000334, 0.00033811100000000205, 0.00033909699999999654, 0.0003395559999999978, 0.00033926399999999884, 0.00034026399999999984, 0.0003388469999999963, 0.00033833300000000316, 0.0003395139999999991, 0.0003394720000000004, 0.0003407360000000012, 0.0003394720000000004, 0.00033922200000000013, 0.0003382630000000053, 0.00033998600000000045, 0.00033940299999999507, 0.0003390280000000051, 0.00034086199999999733, 0.00033844400000000024, 0.00034097300000000136, 0.0003390139999999986, 0.0003394170000000016, 0.00033948599999999995, 0.000339403000000002, 0.00033798599999999845]</msg>
<status status="PASS" starttime="20201030 18:30:41.034" endtime="20201030 18:30:41.036"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.029" endtime="20201030 18:30:41.037"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:41.041" endtime="20201030 18:30:41.060"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.039" endtime="20201030 18:30:41.061"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.038" endtime="20201030 18:30:41.061"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:40.661" endtime="20201030 18:30:41.061"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:40.660" endtime="20201030 18:30:41.061"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:41.070" endtime="20201030 18:30:41.106"></status>
</kw>
<msg timestamp="20201030 18:30:41.106" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:41.069" endtime="20201030 18:30:41.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:41.109" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:41.107" endtime="20201030 18:30:41.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:41.110" endtime="20201030 18:30:41.111"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.066" endtime="20201030 18:30:41.112"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.064" endtime="20201030 18:30:41.113"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:41.119" endtime="20201030 18:30:41.408"></status>
</kw>
<msg timestamp="20201030 18:30:41.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022688972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023038944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:41.118" endtime="20201030 18:30:41.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:41.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022688972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023038944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:41.412" endtime="20201030 18:30:41.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:41.421" endtime="20201030 18:30:41.422"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.115" endtime="20201030 18:30:41.423"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.113" endtime="20201030 18:30:41.423"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:41.427" level="INFO">${RESULT} = [{'diff': 0.000349971999999997}, {'diff': 0.0003381519999999978}, {'diff': 0.00034026399999999984}, {'diff': 0.0003382780000000009}, {'diff': 0.0003401389999999997}, {'diff': 0.0003387779999999979}, {...</msg>
<status status="PASS" starttime="20201030 18:30:41.424" endtime="20201030 18:30:41.428"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:41.432" level="INFO">${ACCURACY} = {'diff': [0.000349971999999997, 0.0003381519999999978, 0.00034026399999999984, 0.0003382780000000009, 0.0003401389999999997, 0.0003387779999999979, 0.0003379160000000006, 0.0003384579999999998, 0.0003...</msg>
<status status="PASS" starttime="20201030 18:30:41.428" endtime="20201030 18:30:41.432"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:41.436" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201030 18:30:41.435" endtime="20201030 18:30:41.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:41.439" level="INFO">VALUE: [0.000349971999999997, 0.0003381519999999978, 0.00034026399999999984, 0.0003382780000000009, 0.0003401389999999997, 0.0003387779999999979, 0.0003379160000000006, 0.0003384579999999998, 0.00034069500000000197, 0.00033904100000000173, 0.0003396110000000001, 0.0003383049999999971, 0.0003379860000000019, 0.0003400420000000022, 0.00033965300000000226, 0.00033916699999999786, 0.0003409169999999996, 0.00033898599999999945, 0.0003395970000000005, 0.00034067999999999946, 0.0003400559999999983, 0.00034040200000000007, 0.00034004199999999873, 0.0003403330000000017, 0.0003380970000000025, 0.0003393190000000046, 0.0003383190000000036, 0.0003380840000000024, 0.0003394300000000017, 0.0003390139999999986, 0.0003401109999999971, 0.0003406390000000037, 0.0003392229999999996, 0.00033915300000000176, 0.00034093100000000265, 0.0003393049999999981, 0.00033931899999999765, 0.00034011100000000405, 0.00034120800000000256, 0.00033848599999999895, 0.0003405689999999989, 0.000340888999999997, 0.000338291999999997, 0.000338999999999999, 0.00033976399999999934, 0.00033898599999999945, 0.00033944400000000124, 0.00034104199999999973, 0.00034087499999999743, 0.0003396250000000031]</msg>
<status status="PASS" starttime="20201030 18:30:41.437" endtime="20201030 18:30:41.439"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.432" endtime="20201030 18:30:41.440"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:41.444" endtime="20201030 18:30:41.463"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.442" endtime="20201030 18:30:41.464"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.441" endtime="20201030 18:30:41.464"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.062" endtime="20201030 18:30:41.465"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.062" endtime="20201030 18:30:41.465"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:41.474" endtime="20201030 18:30:41.518"></status>
</kw>
<msg timestamp="20201030 18:30:41.519" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:41.472" endtime="20201030 18:30:41.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:41.521" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:41.520" endtime="20201030 18:30:41.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:41.523" endtime="20201030 18:30:41.524"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.469" endtime="20201030 18:30:41.525"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.467" endtime="20201030 18:30:41.525"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:41.532" endtime="20201030 18:30:41.818"></status>
</kw>
<msg timestamp="20201030 18:30:41.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026327181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026675583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:41.530" endtime="20201030 18:30:41.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:41.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026327181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026675583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:41.822" endtime="20201030 18:30:41.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:41.830" endtime="20201030 18:30:41.832"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.528" endtime="20201030 18:30:41.833"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.526" endtime="20201030 18:30:41.833"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:41.837" level="INFO">${RESULT} = [{'diff': 0.00034840199999999766}, {'diff': 0.00034072200000000163}, {'diff': 0.00033926399999999884}, {'diff': 0.00033958300000000094}, {'diff': 0.0003393879999999995}, {'diff': 0.0003378610000000018...</msg>
<status status="PASS" starttime="20201030 18:30:41.834" endtime="20201030 18:30:41.837"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:41.841" level="INFO">${ACCURACY} = {'diff': [0.00034840199999999766, 0.00034072200000000163, 0.00033926399999999884, 0.00033958300000000094, 0.0003393879999999995, 0.0003378610000000018, 0.0003386389999999982, 0.00034, 0.00034011100000...</msg>
<status status="PASS" starttime="20201030 18:30:41.838" endtime="20201030 18:30:41.842"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:41.846" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201030 18:30:41.845" endtime="20201030 18:30:41.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:41.848" level="INFO">VALUE: [0.00034840199999999766, 0.00034072200000000163, 0.00033926399999999884, 0.00033958300000000094, 0.0003393879999999995, 0.0003378610000000018, 0.0003386389999999982, 0.00034, 0.0003401110000000006, 0.00033890299999999804, 0.0003393749999999994, 0.00034062500000000065, 0.00033808299999999944, 0.0003386389999999982, 0.0003395689999999979, 0.0003385830000000034, 0.0003395139999999991, 0.0003384160000000011, 0.00033954199999999823, 0.0003382359999999987, 0.0003382499999999983, 0.00033801400000000453, 0.00034033300000000516, 0.00033834700000000273, 0.0003411659999999969, 0.0003384300000000007, 0.00033998600000000045, 0.00034026399999999984, 0.00033852799999999766, 0.00033937499999999593, 0.00034054099999999976, 0.0003407919999999995, 0.0003399170000000021, 0.00033787500000000137, 0.00034, 0.0003380689999999964, 0.0003397920000000054, 0.00034070800000000206, 0.00033872199999999963, 0.00034104199999999973, 0.0003389580000000003, 0.00033958299999999747, 0.0003399580000000013, 0.00033972200000000063, 0.00033804200000000367, 0.0003385420000000042, 0.00034072200000000163, 0.000340888999999997, 0.0003394170000000016, 0.000341000000000001]</msg>
<status status="PASS" starttime="20201030 18:30:41.847" endtime="20201030 18:30:41.850"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.842" endtime="20201030 18:30:41.851"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:41.855" endtime="20201030 18:30:41.874"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.853" endtime="20201030 18:30:41.875"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.852" endtime="20201030 18:30:41.875"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.466" endtime="20201030 18:30:41.875"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.465" endtime="20201030 18:30:41.875"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:41.884" endtime="20201030 18:30:41.920"></status>
</kw>
<msg timestamp="20201030 18:30:41.921" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:41.883" endtime="20201030 18:30:41.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:41.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:41.922" endtime="20201030 18:30:41.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:41.925" endtime="20201030 18:30:41.926"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.880" endtime="20201030 18:30:41.927"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.878" endtime="20201030 18:30:41.927"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:41.934" endtime="20201030 18:30:42.220"></status>
</kw>
<msg timestamp="20201030 18:30:42.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022585694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022930472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:41.933" endtime="20201030 18:30:42.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:42.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022585694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022930472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:42.224" endtime="20201030 18:30:42.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:42.232" endtime="20201030 18:30:42.234"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.930" endtime="20201030 18:30:42.234"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.928" endtime="20201030 18:30:42.235"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:42.239" level="INFO">${RESULT} = [{'diff': 0.00034477800000000045}, {'diff': 0.0003391389999999987}, {'diff': 0.00033822199999999913}, {'diff': 0.0003407779999999999}, {'diff': 0.00033966699999999836}, {'diff': 0.00033870899999999954...</msg>
<status status="PASS" starttime="20201030 18:30:42.236" endtime="20201030 18:30:42.239"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:42.244" level="INFO">${ACCURACY} = {'diff': [0.00034477800000000045, 0.0003391389999999987, 0.00033822199999999913, 0.0003407779999999999, 0.00033966699999999836, 0.00033870899999999954, 0.0003394450000000007, 0.0003406810000000024, 0....</msg>
<status status="PASS" starttime="20201030 18:30:42.240" endtime="20201030 18:30:42.244"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:42.249" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201030 18:30:42.248" endtime="20201030 18:30:42.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:42.251" level="INFO">VALUE: [0.00034477800000000045, 0.0003391389999999987, 0.00033822199999999913, 0.0003407779999999999, 0.00033966699999999836, 0.00033870899999999954, 0.0003394450000000007, 0.0003406810000000024, 0.0003384719999999994, 0.0003381390000000012, 0.00033958300000000094, 0.00033851400000000156, 0.00034130599999999955, 0.00033834699999999926, 0.0003388330000000002, 0.0003408750000000009, 0.00034016700000000233, 0.0003387910000000015, 0.0003397640000000028, 0.0003394580000000008, 0.00034086100000000133, 0.0003404450000000017, 0.0003396110000000001, 0.00033837500000000187, 0.0003391249999999957, 0.00034005500000000577, 0.0003407500000000008, 0.0003389719999999999, 0.0003382499999999983, 0.00033916700000000133, 0.0003397360000000002, 0.0003410130000000011, 0.0003405689999999989, 0.0003408049999999996, 0.00033838900000000144, 0.0003411529999999968, 0.00033908399999999644, 0.00034038900000000344, 0.0003401109999999971, 0.0003411529999999968, 0.0003401390000000032, 0.0003401109999999971, 0.0003393329999999972, 0.00034088900000000394, 0.00034093100000000265, 0.00033904199999999773, 0.00033916700000000133, 0.0003389719999999999, 0.0003384449999999997, 0.0003393339999999967]</msg>
<status status="PASS" starttime="20201030 18:30:42.250" endtime="20201030 18:30:42.252"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.245" endtime="20201030 18:30:42.252"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:42.256" endtime="20201030 18:30:42.276"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.255" endtime="20201030 18:30:42.276"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.253" endtime="20201030 18:30:42.277"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.876" endtime="20201030 18:30:42.277"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.876" endtime="20201030 18:30:42.277"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:42.286" endtime="20201030 18:30:42.322"></status>
</kw>
<msg timestamp="20201030 18:30:42.322" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:42.285" endtime="20201030 18:30:42.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:42.325" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:42.323" endtime="20201030 18:30:42.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:42.326" endtime="20201030 18:30:42.328"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.282" endtime="20201030 18:30:42.328"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.280" endtime="20201030 18:30:42.329"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:42.336" endtime="20201030 18:30:42.622"></status>
</kw>
<msg timestamp="20201030 18:30:42.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022829597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023182417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:42.334" endtime="20201030 18:30:42.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:42.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022829597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023182417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:42.627" endtime="20201030 18:30:42.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:42.635" endtime="20201030 18:30:42.636"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.331" endtime="20201030 18:30:42.637"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.329" endtime="20201030 18:30:42.637"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:42.641" level="INFO">${RESULT} = [{'diff': 0.0003528200000000002}, {'diff': 0.0003391389999999987}, {'diff': 0.0003394720000000004}, {'diff': 0.0003411530000000003}, {'diff': 0.00034131899999999965}, {'diff': 0.0003390000000000025}, ...</msg>
<status status="PASS" starttime="20201030 18:30:42.638" endtime="20201030 18:30:42.641"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:42.645" level="INFO">${ACCURACY} = {'diff': [0.0003528200000000002, 0.0003391389999999987, 0.0003394720000000004, 0.0003411530000000003, 0.00034131899999999965, 0.0003390000000000025, 0.0003405000000000005, 0.0003394580000000008, 0.000...</msg>
<status status="PASS" starttime="20201030 18:30:42.642" endtime="20201030 18:30:42.645"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:42.651" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201030 18:30:42.649" endtime="20201030 18:30:42.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:42.656" level="INFO">VALUE: [0.0003528200000000002, 0.0003391389999999987, 0.0003394720000000004, 0.0003411530000000003, 0.00034131899999999965, 0.0003390000000000025, 0.0003405000000000005, 0.0003394580000000008, 0.00033806899999999987, 0.00033811100000000205, 0.0003403469999999978, 0.00033859800000000245, 0.00034054099999999976, 0.0003398049999999986, 0.00033904199999999773, 0.0003384300000000007, 0.00034054100000000323, 0.0003405000000000005, 0.00034116699999999986, 0.00033968099999999793, 0.00033948599999999995, 0.00034099999999999756, 0.00033804199999999673, 0.000339306000000001, 0.00033943100000000115, 0.00033966700000000183, 0.0003390139999999986, 0.0003399580000000013, 0.0003408610000000048, 0.0003413329999999992, 0.00033877800000000485, 0.00033998600000000045, 0.00034004199999999873, 0.0003384160000000011, 0.0003402500000000003, 0.00033915300000000176, 0.00033940299999999507, 0.00033870800000000006, 0.00034, 0.0003411249999999977, 0.0003403610000000043, 0.0003385139999999981, 0.00034070800000000206, 0.00033816700000000033, 0.0003397499999999998, 0.0003407500000000008, 0.00033944400000000124, 0.0003396940000000015, 0.0003384160000000011, 0.000341000000000001]</msg>
<status status="PASS" starttime="20201030 18:30:42.653" endtime="20201030 18:30:42.657"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.646" endtime="20201030 18:30:42.659"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:42.666" endtime="20201030 18:30:42.688"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.663" endtime="20201030 18:30:42.689"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.661" endtime="20201030 18:30:42.690"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.278" endtime="20201030 18:30:42.691"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.278" endtime="20201030 18:30:42.691"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:42.709" endtime="20201030 18:30:42.751"></status>
</kw>
<msg timestamp="20201030 18:30:42.752" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:42.706" endtime="20201030 18:30:42.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:42.755" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:42.754" endtime="20201030 18:30:42.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:42.756" endtime="20201030 18:30:42.758"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.701" endtime="20201030 18:30:42.758"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.696" endtime="20201030 18:30:42.759"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:42.765" endtime="20201030 18:30:43.051"></status>
</kw>
<msg timestamp="20201030 18:30:43.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039165972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039500319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:42.764" endtime="20201030 18:30:43.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:43.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039165972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039500319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:43.055" endtime="20201030 18:30:43.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:43.064" endtime="20201030 18:30:43.065"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.761" endtime="20201030 18:30:43.066"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.759" endtime="20201030 18:30:43.066"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:43.070" level="INFO">${RESULT} = [{'diff': 0.00033434699999999873}, {'diff': 0.00034059699999999804}, {'diff': 0.0003394450000000007}, {'diff': 0.00033986099999999686}, {'diff': 0.00034058399999999794}, {'diff': 0.0003384160000000011...</msg>
<status status="PASS" starttime="20201030 18:30:43.067" endtime="20201030 18:30:43.071"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:43.075" level="INFO">${ACCURACY} = {'diff': [0.00033434699999999873, 0.00034059699999999804, 0.0003394450000000007, 0.00033986099999999686, 0.00034058399999999794, 0.0003384160000000011, 0.0003406249999999972, 0.0003382359999999987, 0....</msg>
<status status="PASS" starttime="20201030 18:30:43.071" endtime="20201030 18:30:43.075"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:43.079" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201030 18:30:43.078" endtime="20201030 18:30:43.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:43.085" level="INFO">VALUE: [0.00033434699999999873, 0.00034059699999999804, 0.0003394450000000007, 0.00033986099999999686, 0.00034058399999999794, 0.0003384160000000011, 0.0003406249999999972, 0.0003382359999999987, 0.00034044400000000224, 0.00033898599999999945, 0.00033981899999999815, 0.0003387920000000044, 0.00033909699999999654, 0.0003401810000000019, 0.0003407919999999995, 0.0003405140000000001, 0.0003411659999999969, 0.0003382770000000049, 0.00034031899999999865, 0.0003390700000000038, 0.00033861100000000255, 0.0003405140000000001, 0.00034115300000000376, 0.00033844400000000024, 0.0003383060000000035, 0.0003407079999999951, 0.00034027800000000635, 0.00033827800000000435, 0.0003403329999999982, 0.00033826399999999784, 0.0003399170000000021, 0.00033816700000000033, 0.000338999999999999, 0.00033811100000000205, 0.0003388480000000027, 0.00034051399999999316, 0.00034081899999999915, 0.0003401109999999971, 0.0003391249999999957, 0.0003395830000000044, 0.0003397360000000002, 0.00034083400000000513, 0.00034004199999999873, 0.00034048600000000095, 0.00033787500000000137, 0.0003394999999999995, 0.0003407779999999999, 0.0003412360000000017, 0.0003392359999999997, 0.00033984799999999676]</msg>
<status status="PASS" starttime="20201030 18:30:43.080" endtime="20201030 18:30:43.086"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.075" endtime="20201030 18:30:43.087"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:43.090" endtime="20201030 18:30:43.110"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.089" endtime="20201030 18:30:43.110"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.087" endtime="20201030 18:30:43.111"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.693" endtime="20201030 18:30:43.111"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.692" endtime="20201030 18:30:43.111"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:43.120" endtime="20201030 18:30:43.156"></status>
</kw>
<msg timestamp="20201030 18:30:43.157" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:43.119" endtime="20201030 18:30:43.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:43.159" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:43.158" endtime="20201030 18:30:43.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:43.160" endtime="20201030 18:30:43.162"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.116" endtime="20201030 18:30:43.163"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.114" endtime="20201030 18:30:43.163"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:43.170" endtime="20201030 18:30:43.455"></status>
</kw>
<msg timestamp="20201030 18:30:43.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022759792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023106403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:43.168" endtime="20201030 18:30:43.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:43.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022759792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023106403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:43.460" endtime="20201030 18:30:43.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:43.479" endtime="20201030 18:30:43.482"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.166" endtime="20201030 18:30:43.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.164" endtime="20201030 18:30:43.485"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:43.493" level="INFO">${RESULT} = [{'diff': 0.00034661100000000014}, {'diff': 0.0003396659999999989}, {'diff': 0.00033822199999999913}, {'diff': 0.00034058399999999794}, {'diff': 0.00034076400000000034}, {'diff': 0.0003382500000000017...</msg>
<status status="PASS" starttime="20201030 18:30:43.486" endtime="20201030 18:30:43.494"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:43.504" level="INFO">${ACCURACY} = {'diff': [0.00034661100000000014, 0.0003396659999999989, 0.00033822199999999913, 0.00034058399999999794, 0.00034076400000000034, 0.00033825000000000174, 0.00033980599999999805, 0.0003413469999999988, ...</msg>
<status status="PASS" starttime="20201030 18:30:43.496" endtime="20201030 18:30:43.505"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:43.514" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201030 18:30:43.512" endtime="20201030 18:30:43.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:43.520" level="INFO">VALUE: [0.00034661100000000014, 0.0003396659999999989, 0.00033822199999999913, 0.00034058399999999794, 0.00034076400000000034, 0.00033825000000000174, 0.00033980599999999805, 0.0003413469999999988, 0.0003387499999999988, 0.0003402779999999994, 0.00034144499999999925, 0.0003386519999999983, 0.0003413469999999988, 0.0003387359999999992, 0.0003399030000000025, 0.0003394719999999969, 0.00033866700000000083, 0.00033862499999999865, 0.00034119500000000247, 0.000338403000000001, 0.00033848599999999895, 0.0003387369999999987, 0.0003385839999999994, 0.0003379310000000031, 0.00033865199999999485, 0.0003402909999999995, 0.000340791, 0.0003398610000000038, 0.00034005499999999883, 0.0003401249999999967, 0.00033991599999999567, 0.0003399300000000022, 0.0003384589999999993, 0.0003411800000000034, 0.00034076400000000034, 0.0003386800000000009, 0.0003385139999999981, 0.0003398329999999977, 0.0003412360000000017, 0.00033933300000000416, 0.0003400689999999984, 0.00033966700000000183, 0.00033930599999999755, 0.0003392499999999993, 0.00034037499999999693, 0.0003382640000000048, 0.00033815300000000076, 0.00034093100000000265, 0.00034048600000000095, 0.0003384999999999985]</msg>
<status status="PASS" starttime="20201030 18:30:43.517" endtime="20201030 18:30:43.521"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.506" endtime="20201030 18:30:43.522"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:43.530" endtime="20201030 18:30:43.553"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.527" endtime="20201030 18:30:43.554"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.525" endtime="20201030 18:30:43.555"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.112" endtime="20201030 18:30:43.556"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.112" endtime="20201030 18:30:43.556"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:43.569" endtime="20201030 18:30:43.603"></status>
</kw>
<msg timestamp="20201030 18:30:43.603" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:43.567" endtime="20201030 18:30:43.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:43.606" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:43.605" endtime="20201030 18:30:43.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:43.607" endtime="20201030 18:30:43.609"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.564" endtime="20201030 18:30:43.609"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.561" endtime="20201030 18:30:43.610"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:43.617" endtime="20201030 18:30:43.905"></status>
</kw>
<msg timestamp="20201030 18:30:43.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028901639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029255681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:43.615" endtime="20201030 18:30:43.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:43.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028901639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029255681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:43.912" endtime="20201030 18:30:43.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:43.923" endtime="20201030 18:30:43.925"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.612" endtime="20201030 18:30:43.925"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.610" endtime="20201030 18:30:43.926"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:43.930" level="INFO">${RESULT} = [{'diff': 0.00035404199999999886}, {'diff': 0.0003403750000000004}, {'diff': 0.0003381250000000016}, {'diff': 0.0003405000000000005}, {'diff': 0.0003386389999999982}, {'diff': 0.00033936099999999983},...</msg>
<status status="PASS" starttime="20201030 18:30:43.927" endtime="20201030 18:30:43.930"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:43.935" level="INFO">${ACCURACY} = {'diff': [0.00035404199999999886, 0.0003403750000000004, 0.0003381250000000016, 0.0003405000000000005, 0.0003386389999999982, 0.00033936099999999983, 0.00034002800000000263, 0.0003406109999999976, 0.0...</msg>
<status status="PASS" starttime="20201030 18:30:43.931" endtime="20201030 18:30:43.935"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:43.940" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201030 18:30:43.938" endtime="20201030 18:30:43.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:43.943" level="INFO">VALUE: [0.00035404199999999886, 0.0003403750000000004, 0.0003381250000000016, 0.0003405000000000005, 0.0003386389999999982, 0.00033936099999999983, 0.00034002800000000263, 0.0003406109999999976, 0.00033883300000000366, 0.00033822199999999913, 0.00034030599999999855, 0.0003381250000000016, 0.00033998600000000045, 0.0003396940000000015, 0.00033811100000000205, 0.00033881899999999715, 0.0003390139999999986, 0.0003399580000000013, 0.00034088900000000394, 0.000338403000000001, 0.0003396940000000015, 0.00034104199999999973, 0.00034042999999999574, 0.00033820799999999956, 0.0003387359999999992, 0.00033815300000000076, 0.00033990299999999557, 0.0003402500000000003, 0.0003403049999999991, 0.0003396800000000019, 0.000339597000000004, 0.00033947199999999345, 0.0003406250000000041, 0.0003406940000000025, 0.00034, 0.00033866700000000083, 0.00033952799999999866, 0.000339194000000001, 0.00033980599999999805, 0.00034034799999999726, 0.000341000000000001, 0.0003387359999999992, 0.00034105499999999983, 0.0003406109999999976, 0.0003395410000000057, 0.0003392500000000062, 0.00033958299999999747, 0.00033861100000000255, 0.0003383199999999961, 0.00033834700000000273]</msg>
<status status="PASS" starttime="20201030 18:30:43.941" endtime="20201030 18:30:43.943"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.936" endtime="20201030 18:30:43.944"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:43.948" endtime="20201030 18:30:43.968"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.947" endtime="20201030 18:30:43.968"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.945" endtime="20201030 18:30:43.969"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.558" endtime="20201030 18:30:43.969"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.557" endtime="20201030 18:30:43.969"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:43.978" endtime="20201030 18:30:44.016"></status>
</kw>
<msg timestamp="20201030 18:30:44.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:43.977" endtime="20201030 18:30:44.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:44.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:44.018" endtime="20201030 18:30:44.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:44.020" endtime="20201030 18:30:44.022"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.974" endtime="20201030 18:30:44.023"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.972" endtime="20201030 18:30:44.023"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:44.030" endtime="20201030 18:30:44.329"></status>
</kw>
<msg timestamp="20201030 18:30:44.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023905139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024237444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:44.028" endtime="20201030 18:30:44.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:44.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023905139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024237444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:44.339" endtime="20201030 18:30:44.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:44.358" endtime="20201030 18:30:44.361"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.026" endtime="20201030 18:30:44.363"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.024" endtime="20201030 18:30:44.364"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:44.371" level="INFO">${RESULT} = [{'diff': 0.0003323050000000015}, {'diff': 0.00033913799999999925}, {'diff': 0.0003380420000000002}, {'diff': 0.00033820899999999904}, {'diff': 0.00033815300000000076}, {'diff': 0.00034026399999999984...</msg>
<status status="PASS" starttime="20201030 18:30:44.365" endtime="20201030 18:30:44.371"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:44.375" level="INFO">${ACCURACY} = {'diff': [0.0003323050000000015, 0.00033913799999999925, 0.0003380420000000002, 0.00033820899999999904, 0.00033815300000000076, 0.00034026399999999984, 0.00033919500000000047, 0.0003383329999999997, 0...</msg>
<status status="PASS" starttime="20201030 18:30:44.372" endtime="20201030 18:30:44.375"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:44.380" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201030 18:30:44.379" endtime="20201030 18:30:44.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:44.382" level="INFO">VALUE: [0.0003323050000000015, 0.00033913799999999925, 0.0003380420000000002, 0.00033820899999999904, 0.00033815300000000076, 0.00034026399999999984, 0.00033919500000000047, 0.0003383329999999997, 0.0003397369999999997, 0.0003403049999999991, 0.00034104199999999973, 0.0003399170000000021, 0.00034054199999999923, 0.0003388060000000005, 0.0003382640000000013, 0.00034116699999999986, 0.0003388329999999967, 0.000338999999999999, 0.0003403330000000017, 0.00034076400000000034, 0.00034033400000000463, 0.00033984700000000423, 0.00033893100000000065, 0.00033816600000000085, 0.0003404590000000013, 0.0003400699999999979, 0.0003380700000000028, 0.00033820799999999956, 0.00033938900000000244, 0.00034109699999999854, 0.0003398339999999972, 0.0003385420000000042, 0.00034048600000000095, 0.0003385410000000047, 0.00033869499999999997, 0.00033866700000000083, 0.0003389160000000016, 0.0003384300000000007, 0.00033838900000000144, 0.00034092999999999624, 0.00033993100000000165, 0.0003382920000000039, 0.0003389030000000015, 0.0003389030000000015, 0.00033901400000000553, 0.00033804199999999673, 0.00034109699999999854, 0.00033982000000000456, 0.0003409450000000022, 0.0003387220000000066]</msg>
<status status="PASS" starttime="20201030 18:30:44.381" endtime="20201030 18:30:44.384"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.376" endtime="20201030 18:30:44.384"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:44.388" endtime="20201030 18:30:44.408"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.387" endtime="20201030 18:30:44.408"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.385" endtime="20201030 18:30:44.409"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.970" endtime="20201030 18:30:44.409"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.969" endtime="20201030 18:30:44.409"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:44.418" endtime="20201030 18:30:44.452"></status>
</kw>
<msg timestamp="20201030 18:30:44.453" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:44.416" endtime="20201030 18:30:44.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:44.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:44.454" endtime="20201030 18:30:44.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:44.457" endtime="20201030 18:30:44.458"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.414" endtime="20201030 18:30:44.459"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.412" endtime="20201030 18:30:44.459"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:44.466" endtime="20201030 18:30:44.752"></status>
</kw>
<msg timestamp="20201030 18:30:44.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021068181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021421264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:44.464" endtime="20201030 18:30:44.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:44.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021068181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021421264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:44.757" endtime="20201030 18:30:44.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:44.765" endtime="20201030 18:30:44.767"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.462" endtime="20201030 18:30:44.767"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.460" endtime="20201030 18:30:44.768"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:44.772" level="INFO">${RESULT} = [{'diff': 0.00035308300000000056}, {'diff': 0.00034137499999999793}, {'diff': 0.0003412369999999977}, {'diff': 0.0003396110000000001}, {'diff': 0.0003397779999999989}, {'diff': 0.00033922200000000013}...</msg>
<status status="PASS" starttime="20201030 18:30:44.768" endtime="20201030 18:30:44.772"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:44.777" level="INFO">${ACCURACY} = {'diff': [0.00035308300000000056, 0.00034137499999999793, 0.0003412369999999977, 0.0003396110000000001, 0.0003397779999999989, 0.00033922200000000013, 0.00034080599999999905, 0.0003384449999999997, 0....</msg>
<status status="PASS" starttime="20201030 18:30:44.773" endtime="20201030 18:30:44.777"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:44.781" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201030 18:30:44.780" endtime="20201030 18:30:44.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:44.784" level="INFO">VALUE: [0.00035308300000000056, 0.00034137499999999793, 0.0003412369999999977, 0.0003396110000000001, 0.0003397779999999989, 0.00033922200000000013, 0.00034080599999999905, 0.0003384449999999997, 0.00034026399999999984, 0.00034056900000000237, 0.0003391810000000009, 0.00034008299999999797, 0.00034095799999999885, 0.0003381109999999986, 0.0003410559999999993, 0.0003395840000000004, 0.00034077700000000044, 0.000341000000000001, 0.0003393749999999994, 0.0003409590000000018, 0.00034137499999999793, 0.0003402500000000003, 0.00033954099999999876, 0.00034127799999999694, 0.00033958300000000094, 0.0003412780000000004, 0.00033966699999999836, 0.0003384160000000011, 0.0003392359999999997, 0.00033972200000000063, 0.0003392779999999984, 0.00034006900000000534, 0.0003384449999999997, 0.0003391109999999961, 0.0003386520000000018, 0.00033973599999999327, 0.00033837500000000187, 0.00034070900000000154, 0.00034119500000000247, 0.0003401250000000036, 0.00034040299999999607, 0.0003399030000000025, 0.0003412780000000004, 0.000338999999999999, 0.0003399720000000009, 0.00034123599999999477, 0.0003397499999999998, 0.000339403000000002, 0.00033993100000000165, 0.00033969499999999403]</msg>
<status status="PASS" starttime="20201030 18:30:44.783" endtime="20201030 18:30:44.785"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.778" endtime="20201030 18:30:44.785"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:44.789" endtime="20201030 18:30:44.808"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.787" endtime="20201030 18:30:44.809"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.786" endtime="20201030 18:30:44.809"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.410" endtime="20201030 18:30:44.810"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.409" endtime="20201030 18:30:44.810"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:44.819" endtime="20201030 18:30:44.854"></status>
</kw>
<msg timestamp="20201030 18:30:44.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:44.817" endtime="20201030 18:30:44.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:44.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:44.856" endtime="20201030 18:30:44.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:44.858" endtime="20201030 18:30:44.860"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.815" endtime="20201030 18:30:44.860"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.812" endtime="20201030 18:30:44.861"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:44.868" endtime="20201030 18:30:45.155"></status>
</kw>
<msg timestamp="20201030 18:30:45.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022136528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022475458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:44.866" endtime="20201030 18:30:45.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:45.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022136528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022475458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:45.160" endtime="20201030 18:30:45.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:45.168" endtime="20201030 18:30:45.170"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.863" endtime="20201030 18:30:45.171"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.862" endtime="20201030 18:30:45.171"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:45.175" level="INFO">${RESULT} = [{'diff': 0.0003389300000000012}, {'diff': 0.000339194000000001}, {'diff': 0.0003392359999999997}, {'diff': 0.00034116699999999986}, {'diff': 0.00033925000000000274}, {'diff': 0.0003392779999999984}, ...</msg>
<status status="PASS" starttime="20201030 18:30:45.172" endtime="20201030 18:30:45.175"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:45.179" level="INFO">${ACCURACY} = {'diff': [0.0003389300000000012, 0.000339194000000001, 0.0003392359999999997, 0.00034116699999999986, 0.00033925000000000274, 0.0003392779999999984, 0.0003396390000000027, 0.0003402500000000003, 0.000...</msg>
<status status="PASS" starttime="20201030 18:30:45.176" endtime="20201030 18:30:45.179"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:45.184" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201030 18:30:45.183" endtime="20201030 18:30:45.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:45.186" level="INFO">VALUE: [0.0003389300000000012, 0.000339194000000001, 0.0003392359999999997, 0.00034116699999999986, 0.00033925000000000274, 0.0003392779999999984, 0.0003396390000000027, 0.0003402500000000003, 0.0003382640000000013, 0.0003395139999999991, 0.0003397640000000028, 0.0003389300000000012, 0.00033926399999999884, 0.0003406110000000011, 0.0003408469999999983, 0.0003398749999999999, 0.000339790999999999, 0.0003383199999999996, 0.0003398749999999999, 0.00033887500000000237, 0.0003394999999999995, 0.000340194000000002, 0.0003404859999999975, 0.0003408049999999996, 0.00034072200000000163, 0.0003403610000000043, 0.0003401249999999967, 0.00034054199999999923, 0.00034011100000000405, 0.00034090299999999657, 0.00033787500000000137, 0.00033972200000000063, 0.000338999999999999, 0.000337999999999998, 0.00034108399999999844, 0.0003412500000000013, 0.00033958299999999747, 0.0003392920000000049, 0.0003409030000000035, 0.0003408469999999983, 0.0003388190000000041, 0.0003385830000000034, 0.0003394999999999995, 0.00033861100000000255, 0.00033870800000000006, 0.0003386249999999952, 0.0003410559999999993, 0.0003402779999999994, 0.0003394999999999995, 0.00033915300000000176]</msg>
<status status="PASS" starttime="20201030 18:30:45.185" endtime="20201030 18:30:45.187"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.180" endtime="20201030 18:30:45.188"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:45.191" endtime="20201030 18:30:45.211"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.190" endtime="20201030 18:30:45.212"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.189" endtime="20201030 18:30:45.212"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.811" endtime="20201030 18:30:45.212"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.810" endtime="20201030 18:30:45.212"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:45.221" endtime="20201030 18:30:45.256"></status>
</kw>
<msg timestamp="20201030 18:30:45.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:45.220" endtime="20201030 18:30:45.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:45.259" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:45.257" endtime="20201030 18:30:45.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:45.260" endtime="20201030 18:30:45.262"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.217" endtime="20201030 18:30:45.262"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.215" endtime="20201030 18:30:45.263"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:45.269" endtime="20201030 18:30:45.556"></status>
</kw>
<msg timestamp="20201030 18:30:45.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021558292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021894542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:45.268" endtime="20201030 18:30:45.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:45.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021558292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021894542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:45.560" endtime="20201030 18:30:45.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:45.569" endtime="20201030 18:30:45.570"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.265" endtime="20201030 18:30:45.571"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.263" endtime="20201030 18:30:45.572"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:45.576" level="INFO">${RESULT} = [{'diff': 0.00033624999999999974}, {'diff': 0.0003405000000000005}, {'diff': 0.0003409299999999997}, {'diff': 0.00033816600000000085}, {'diff': 0.0003402079999999981}, {'diff': 0.0003412639999999974},...</msg>
<status status="PASS" starttime="20201030 18:30:45.572" endtime="20201030 18:30:45.576"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:45.580" level="INFO">${ACCURACY} = {'diff': [0.00033624999999999974, 0.0003405000000000005, 0.0003409299999999997, 0.00033816600000000085, 0.0003402079999999981, 0.0003412639999999974, 0.000340598000000001, 0.000338194, 0.0003398059999...</msg>
<status status="PASS" starttime="20201030 18:30:45.577" endtime="20201030 18:30:45.580"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:45.584" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201030 18:30:45.583" endtime="20201030 18:30:45.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:45.587" level="INFO">VALUE: [0.00033624999999999974, 0.0003405000000000005, 0.0003409299999999997, 0.00033816600000000085, 0.0003402079999999981, 0.0003412639999999974, 0.000340598000000001, 0.000338194, 0.00033980599999999805, 0.0003409309999999992, 0.00034076400000000034, 0.0003397499999999998, 0.0003382360000000022, 0.00033804199999999673, 0.0003388060000000005, 0.00033986100000000033, 0.00034052799999999966, 0.0003401389999999997, 0.0003411249999999977, 0.0003391519999999988, 0.00033802799999999716, 0.00033984700000000076, 0.0003404309999999987, 0.0003404580000000018, 0.00033848599999999895, 0.00033819499999999947, 0.00033854100000000123, 0.0003390139999999986, 0.0003393190000000046, 0.0003406390000000037, 0.000338403000000001, 0.0003380830000000029, 0.0003395269999999992, 0.00033951400000000603, 0.00034058299999999847, 0.0003414170000000036, 0.00033802799999999716, 0.0003388469999999963, 0.0003412500000000013, 0.0003387359999999992, 0.000338291999999997, 0.00033970800000000106, 0.00034104199999999973, 0.00034037500000000387, 0.0003392779999999984, 0.00033866700000000083, 0.0003387359999999992, 0.0003406390000000037, 0.00034023599999999377, 0.00034055600000000574]</msg>
<status status="PASS" starttime="20201030 18:30:45.585" endtime="20201030 18:30:45.588"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.581" endtime="20201030 18:30:45.589"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:45.593" endtime="20201030 18:30:45.612"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.591" endtime="20201030 18:30:45.613"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.590" endtime="20201030 18:30:45.613"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.213" endtime="20201030 18:30:45.614"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.213" endtime="20201030 18:30:45.614"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:45.623" endtime="20201030 18:30:45.657"></status>
</kw>
<msg timestamp="20201030 18:30:45.658" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:45.621" endtime="20201030 18:30:45.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:45.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:45.659" endtime="20201030 18:30:45.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:45.662" endtime="20201030 18:30:45.663"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.618" endtime="20201030 18:30:45.664"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.616" endtime="20201030 18:30:45.664"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:45.671" endtime="20201030 18:30:45.957"></status>
</kw>
<msg timestamp="20201030 18:30:45.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022048389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022407542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:45.669" endtime="20201030 18:30:45.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:45.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022048389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022407542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:45.961" endtime="20201030 18:30:45.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:45.970" endtime="20201030 18:30:45.971"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.667" endtime="20201030 18:30:45.972"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.665" endtime="20201030 18:30:45.973"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:45.977" level="INFO">${RESULT} = [{'diff': 0.0003591529999999975}, {'diff': 0.0003385969999999995}, {'diff': 0.00034095799999999885}, {'diff': 0.00034038899999999997}, {'diff': 0.0003382499999999983}, {'diff': 0.000338403000000001}, ...</msg>
<status status="PASS" starttime="20201030 18:30:45.973" endtime="20201030 18:30:45.977"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:45.982" level="INFO">${ACCURACY} = {'diff': [0.0003591529999999975, 0.0003385969999999995, 0.00034095799999999885, 0.00034038899999999997, 0.0003382499999999983, 0.000338403000000001, 0.0003389450000000002, 0.00034038899999999997, 0.00...</msg>
<status status="PASS" starttime="20201030 18:30:45.978" endtime="20201030 18:30:45.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:45.987" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201030 18:30:45.986" endtime="20201030 18:30:45.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:45.989" level="INFO">VALUE: [0.0003591529999999975, 0.0003385969999999995, 0.00034095799999999885, 0.00034038899999999997, 0.0003382499999999983, 0.000338403000000001, 0.0003389450000000002, 0.00034038899999999997, 0.00033948699999999943, 0.00034058299999999847, 0.0003397779999999989, 0.0003385560000000003, 0.00034020900000000104, 0.0003389160000000016, 0.000341000000000001, 0.0003396810000000014, 0.00034022200000000113, 0.0003407230000000011, 0.00033912499999999915, 0.0003409719999999984, 0.000340791, 0.0003395269999999992, 0.00034040200000000007, 0.00033802799999999716, 0.0003381390000000012, 0.0003380280000000041, 0.0003394720000000004, 0.0003382779999999974, 0.0003406109999999976, 0.0003405699999999984, 0.00033920900000000004, 0.00033838900000000144, 0.00033816600000000085, 0.0003388329999999967, 0.0003407360000000012, 0.0003411109999999981, 0.00033905499999999783, 0.00033816700000000033, 0.00034048600000000095, 0.00034108299999999897, 0.00033951400000000603, 0.0003391249999999957, 0.00034073599999999427, 0.00034086099999999786, 0.0003411249999999977, 0.0003385139999999981, 0.00033838900000000144, 0.0003399580000000013, 0.00033872199999999963, 0.00033915300000000176]</msg>
<status status="PASS" starttime="20201030 18:30:45.988" endtime="20201030 18:30:45.990"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.983" endtime="20201030 18:30:45.991"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:45.995" endtime="20201030 18:30:46.014"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.993" endtime="20201030 18:30:46.015"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.992" endtime="20201030 18:30:46.015"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.615" endtime="20201030 18:30:46.016"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.614" endtime="20201030 18:30:46.016"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:46.025" endtime="20201030 18:30:46.060"></status>
</kw>
<msg timestamp="20201030 18:30:46.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:46.023" endtime="20201030 18:30:46.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:46.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:46.062" endtime="20201030 18:30:46.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:46.065" endtime="20201030 18:30:46.066"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.020" endtime="20201030 18:30:46.067"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.018" endtime="20201030 18:30:46.067"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:46.074" endtime="20201030 18:30:46.362"></status>
</kw>
<msg timestamp="20201030 18:30:46.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022178264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022521319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:46.072" endtime="20201030 18:30:46.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:46.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022178264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022521319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:46.366" endtime="20201030 18:30:46.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:46.374" endtime="20201030 18:30:46.376"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.070" endtime="20201030 18:30:46.377"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.068" endtime="20201030 18:30:46.377"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:46.381" level="INFO">${RESULT} = [{'diff': 0.00034305500000000183}, {'diff': 0.00033843100000000015}, {'diff': 0.0003408750000000009}, {'diff': 0.0003405140000000001}, {'diff': 0.0003391529999999983}, {'diff': 0.00033912499999999915}...</msg>
<status status="PASS" starttime="20201030 18:30:46.378" endtime="20201030 18:30:46.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:46.385" level="INFO">${ACCURACY} = {'diff': [0.00034305500000000183, 0.00033843100000000015, 0.0003408750000000009, 0.0003405140000000001, 0.0003391529999999983, 0.00033912499999999915, 0.0003386659999999979, 0.0003392499999999993, 0.0...</msg>
<status status="PASS" starttime="20201030 18:30:46.382" endtime="20201030 18:30:46.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:46.390" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201030 18:30:46.389" endtime="20201030 18:30:46.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:46.392" level="INFO">VALUE: [0.00034305500000000183, 0.00033843100000000015, 0.0003408750000000009, 0.0003405140000000001, 0.0003391529999999983, 0.00033912499999999915, 0.0003386659999999979, 0.0003392499999999993, 0.000339403000000002, 0.00034106900000000287, 0.00034108399999999844, 0.00034048600000000095, 0.0003388749999999989, 0.0003403330000000017, 0.0003384300000000007, 0.00034076300000000087, 0.00033988899999999947, 0.0003383329999999997, 0.00034012500000000015, 0.000340985999999998, 0.00033915300000000176, 0.0003395970000000005, 0.0003389589999999998, 0.0003386810000000004, 0.00033969500000000097, 0.00033987499999999643, 0.00034009699999999754, 0.0003401520000000033, 0.0003386810000000004, 0.0003389170000000011, 0.00033944400000000124, 0.00033983300000000466, 0.000338597000000003, 0.00033801400000000453, 0.00033981899999999815, 0.0003409579999999954, 0.0003382499999999983, 0.00033837500000000187, 0.00033990299999999557, 0.0003399160000000026, 0.0003412500000000013, 0.00033936099999999636, 0.0003402500000000003, 0.00033934700000000373, 0.0003382909999999975, 0.00034126400000000084, 0.0003380559999999963, 0.0003413889999999975, 0.00033952799999999866, 0.00033827800000000435]</msg>
<status status="PASS" starttime="20201030 18:30:46.391" endtime="20201030 18:30:46.393"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.386" endtime="20201030 18:30:46.394"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:46.398" endtime="20201030 18:30:46.417"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.396" endtime="20201030 18:30:46.418"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.395" endtime="20201030 18:30:46.418"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.017" endtime="20201030 18:30:46.418"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.016" endtime="20201030 18:30:46.418"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:46.428" endtime="20201030 18:30:46.467"></status>
</kw>
<msg timestamp="20201030 18:30:46.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:46.426" endtime="20201030 18:30:46.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:46.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:46.469" endtime="20201030 18:30:46.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:46.471" endtime="20201030 18:30:46.473"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.423" endtime="20201030 18:30:46.474"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.421" endtime="20201030 18:30:46.474"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:46.481" endtime="20201030 18:30:46.767"></status>
</kw>
<msg timestamp="20201030 18:30:46.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026322417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026679014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:46.479" endtime="20201030 18:30:46.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:46.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026322417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026679014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:46.771" endtime="20201030 18:30:46.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:46.779" endtime="20201030 18:30:46.781"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.476" endtime="20201030 18:30:46.782"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.475" endtime="20201030 18:30:46.782"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:46.786" level="INFO">${RESULT} = [{'diff': 0.00035659700000000016}, {'diff': 0.00033822199999999913}, {'diff': 0.00033829200000000045}, {'diff': 0.0003385839999999994}, {'diff': 0.00034068099999999893}, {'diff': 0.0003397499999999998...</msg>
<status status="PASS" starttime="20201030 18:30:46.783" endtime="20201030 18:30:46.786"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:46.790" level="INFO">${ACCURACY} = {'diff': [0.00035659700000000016, 0.00033822199999999913, 0.00033829200000000045, 0.0003385839999999994, 0.00034068099999999893, 0.0003397499999999998, 0.0003384160000000011, 0.0003395420000000017, 0....</msg>
<status status="PASS" starttime="20201030 18:30:46.787" endtime="20201030 18:30:46.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:46.795" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201030 18:30:46.794" endtime="20201030 18:30:46.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:46.801" level="INFO">VALUE: [0.00035659700000000016, 0.00033822199999999913, 0.00033829200000000045, 0.0003385839999999994, 0.00034068099999999893, 0.0003397499999999998, 0.0003384160000000011, 0.0003395420000000017, 0.0003389450000000002, 0.0003381250000000016, 0.00034138900000000097, 0.00034029200000000245, 0.0003399720000000009, 0.00033802800000000063, 0.0003393060000000045, 0.00033920800000000056, 0.00034102800000000016, 0.0003399030000000025, 0.0003405689999999989, 0.00034004099999999926, 0.00033820799999999956, 0.0003397499999999998, 0.0003410689999999994, 0.0003405140000000001, 0.0003380840000000024, 0.00033816700000000033, 0.00033876399999999834, 0.0003404720000000014, 0.00033961100000000355, 0.00034090299999999657, 0.00034136099999999836, 0.0003384999999999985, 0.0003410699999999989, 0.00033948599999999995, 0.0003389589999999998, 0.0003411810000000029, 0.0003399450000000012, 0.0003401810000000019, 0.0003395280000000056, 0.0003413050000000001, 0.00034054099999999976, 0.00034113899999999725, 0.00033902799999999816, 0.00033951400000000603, 0.00034004199999999873, 0.00033822199999999913, 0.00034119500000000247, 0.00033987500000000337, 0.0003411810000000029, 0.0003404450000000017]</msg>
<status status="PASS" starttime="20201030 18:30:46.796" endtime="20201030 18:30:46.802"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.791" endtime="20201030 18:30:46.802"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:46.806" endtime="20201030 18:30:46.825"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.805" endtime="20201030 18:30:46.826"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.803" endtime="20201030 18:30:46.826"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.419" endtime="20201030 18:30:46.827"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.419" endtime="20201030 18:30:46.827"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:46.836" endtime="20201030 18:30:46.874"></status>
</kw>
<msg timestamp="20201030 18:30:46.874" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:46.834" endtime="20201030 18:30:46.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:46.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:46.875" endtime="20201030 18:30:46.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:46.878" endtime="20201030 18:30:46.879"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.832" endtime="20201030 18:30:46.880"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.829" endtime="20201030 18:30:46.881"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:46.887" endtime="20201030 18:30:47.173"></status>
</kw>
<msg timestamp="20201030 18:30:47.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024752458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025083306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:46.886" endtime="20201030 18:30:47.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:47.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024752458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025083306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:47.177" endtime="20201030 18:30:47.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:47.186" endtime="20201030 18:30:47.188"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.883" endtime="20201030 18:30:47.188"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.881" endtime="20201030 18:30:47.189"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:47.193" level="INFO">${RESULT} = [{'diff': 0.00033084799999999817}, {'diff': 0.0003404169999999991}, {'diff': 0.0003401519999999998}, {'diff': 0.0003402500000000003}, {'diff': 0.0003390560000000008}, {'diff': 0.0003398619999999998}, ...</msg>
<status status="PASS" starttime="20201030 18:30:47.189" endtime="20201030 18:30:47.193"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:47.198" level="INFO">${ACCURACY} = {'diff': [0.00033084799999999817, 0.0003404169999999991, 0.0003401519999999998, 0.0003402500000000003, 0.0003390560000000008, 0.0003398619999999998, 0.0003390839999999999, 0.00034026399999999984, 0.00...</msg>
<status status="PASS" starttime="20201030 18:30:47.194" endtime="20201030 18:30:47.198"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:47.202" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201030 18:30:47.201" endtime="20201030 18:30:47.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:47.205" level="INFO">VALUE: [0.00033084799999999817, 0.0003404169999999991, 0.0003401519999999998, 0.0003402500000000003, 0.0003390560000000008, 0.0003398619999999998, 0.0003390839999999999, 0.00034026399999999984, 0.00034136099999999836, 0.00033908300000000044, 0.0003404719999999979, 0.0003394299999999982, 0.00034038899999999997, 0.00033879200000000095, 0.00034049999999999706, 0.00034122200000000213, 0.0003406520000000003, 0.0003399729999999969, 0.0003392920000000049, 0.00034048600000000095, 0.0003399300000000022, 0.0003394580000000008, 0.00033952799999999866, 0.0003395840000000039, 0.0003385699999999964, 0.00033937500000000287, 0.00033887500000000237, 0.00034037500000000387, 0.000338790999999998, 0.0003404580000000018, 0.0003410840000000054, 0.0003406109999999976, 0.00034022200000000113, 0.000340485999999994, 0.00034126400000000084, 0.0003388049999999976, 0.000338305000000004, 0.00033987500000000337, 0.0003400139999999996, 0.0003381109999999951, 0.0003403339999999977, 0.0003404720000000014, 0.00033837499999999493, 0.0003410270000000007, 0.0003406390000000037, 0.0003409030000000035, 0.0003406390000000037, 0.00033883400000000313, 0.0003390970000000035, 0.00033987500000000337]</msg>
<status status="PASS" starttime="20201030 18:30:47.204" endtime="20201030 18:30:47.206"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.199" endtime="20201030 18:30:47.206"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:47.210" endtime="20201030 18:30:47.229"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.208" endtime="20201030 18:30:47.230"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.207" endtime="20201030 18:30:47.230"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.828" endtime="20201030 18:30:47.231"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.827" endtime="20201030 18:30:47.231"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:47.240" endtime="20201030 18:30:47.280"></status>
</kw>
<msg timestamp="20201030 18:30:47.281" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:47.238" endtime="20201030 18:30:47.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:47.283" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:47.282" endtime="20201030 18:30:47.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:47.284" endtime="20201030 18:30:47.286"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.236" endtime="20201030 18:30:47.287"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.233" endtime="20201030 18:30:47.287"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:47.294" endtime="20201030 18:30:47.584"></status>
</kw>
<msg timestamp="20201030 18:30:47.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022732528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023082111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:47.292" endtime="20201030 18:30:47.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:47.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022732528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023082111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:47.589" endtime="20201030 18:30:47.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:47.598" endtime="20201030 18:30:47.602"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.290" endtime="20201030 18:30:47.602"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.288" endtime="20201030 18:30:47.603"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:47.607" level="INFO">${RESULT} = [{'diff': 0.00034958300000000053}, {'diff': 0.00034036100000000083}, {'diff': 0.000338096999999999}, {'diff': 0.0003384999999999985}, {'diff': 0.00034104100000000026}, {'diff': 0.00034099999999999756}...</msg>
<status status="PASS" starttime="20201030 18:30:47.603" endtime="20201030 18:30:47.607"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:47.612" level="INFO">${ACCURACY} = {'diff': [0.00034958300000000053, 0.00034036100000000083, 0.000338096999999999, 0.0003384999999999985, 0.00034104100000000026, 0.00034099999999999756, 0.0003384719999999994, 0.00033838900000000144, 0....</msg>
<status status="PASS" starttime="20201030 18:30:47.608" endtime="20201030 18:30:47.612"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:47.617" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201030 18:30:47.615" endtime="20201030 18:30:47.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:47.620" level="INFO">VALUE: [0.00034958300000000053, 0.00034036100000000083, 0.000338096999999999, 0.0003384999999999985, 0.00034104100000000026, 0.00034099999999999756, 0.0003384719999999994, 0.00033838900000000144, 0.0003403880000000005, 0.0003401810000000019, 0.0003389300000000012, 0.0003389580000000003, 0.00034012500000000015, 0.00034101299999999765, 0.00034034800000000073, 0.0003391810000000009, 0.00034023599999999724, 0.00034098600000000145, 0.00033902799999999816, 0.0003411390000000007, 0.00034063800000000075, 0.0003407779999999999, 0.00033794399999999974, 0.0003387220000000031, 0.0003399030000000025, 0.0003408469999999983, 0.00033911100000000305, 0.00033972200000000063, 0.0003398610000000038, 0.00034016600000000285, 0.0003404450000000017, 0.00034091699999999614, 0.00033988800000000347, 0.00034020800000000156, 0.0003393199999999971, 0.0003396810000000014, 0.00034004199999999873, 0.0003385139999999981, 0.0003384719999999994, 0.000337999999999998, 0.00034044400000000224, 0.0003405140000000001, 0.00034004199999999873, 0.0003387499999999988, 0.0003390139999999986, 0.0003401109999999971, 0.00034072200000000163, 0.00034052799999999966, 0.00034061100000000455, 0.0003395830000000044]</msg>
<status status="PASS" starttime="20201030 18:30:47.619" endtime="20201030 18:30:47.621"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.613" endtime="20201030 18:30:47.622"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:47.626" endtime="20201030 18:30:47.646"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.624" endtime="20201030 18:30:47.647"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.623" endtime="20201030 18:30:47.647"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.232" endtime="20201030 18:30:47.648"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.231" endtime="20201030 18:30:47.648"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:47.659" endtime="20201030 18:30:47.697"></status>
</kw>
<msg timestamp="20201030 18:30:47.698" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:47.658" endtime="20201030 18:30:47.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:47.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:47.699" endtime="20201030 18:30:47.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:47.703" endtime="20201030 18:30:47.705"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.655" endtime="20201030 18:30:47.706"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.651" endtime="20201030 18:30:47.706"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:47.714" endtime="20201030 18:30:48.022"></status>
</kw>
<msg timestamp="20201030 18:30:48.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028276694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028617375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:47.712" endtime="20201030 18:30:48.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:48.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028276694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028617375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:48.026" endtime="20201030 18:30:48.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:48.034" endtime="20201030 18:30:48.036"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.709" endtime="20201030 18:30:48.037"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.707" endtime="20201030 18:30:48.037"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:48.041" level="INFO">${RESULT} = [{'diff': 0.00034068099999999893}, {'diff': 0.0003398749999999999}, {'diff': 0.0003387360000000027}, {'diff': 0.00033962499999999965}, {'diff': 0.0003402360000000007}, {'diff': 0.0003382229999999986},...</msg>
<status status="PASS" starttime="20201030 18:30:48.038" endtime="20201030 18:30:48.041"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:48.045" level="INFO">${ACCURACY} = {'diff': [0.00034068099999999893, 0.0003398749999999999, 0.0003387360000000027, 0.00033962499999999965, 0.0003402360000000007, 0.0003382229999999986, 0.00033893100000000065, 0.0003410139999999971, 0.0...</msg>
<status status="PASS" starttime="20201030 18:30:48.042" endtime="20201030 18:30:48.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:48.050" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201030 18:30:48.049" endtime="20201030 18:30:48.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:48.053" level="INFO">VALUE: [0.00034068099999999893, 0.0003398749999999999, 0.0003387360000000027, 0.00033962499999999965, 0.0003402360000000007, 0.0003382229999999986, 0.00033893100000000065, 0.0003410139999999971, 0.0003392499999999993, 0.0003411669999999964, 0.0003395979999999965, 0.0003403339999999977, 0.0003383049999999971, 0.00034105499999999983, 0.000340291999999999, 0.000340888999999997, 0.0003384160000000011, 0.00033858299999999647, 0.00034044400000000224, 0.0003386800000000009, 0.00034004099999999926, 0.00033919500000000047, 0.0003395269999999992, 0.00033922200000000013, 0.0003404720000000014, 0.0003381390000000012, 0.0003386109999999956, 0.00033919499999999353, 0.0003401669999999954, 0.0003380139999999976, 0.0003401799999999955, 0.0003399450000000012, 0.000338305000000004, 0.000341000000000001, 0.00034011100000000405, 0.00033888900000000194, 0.0003386810000000004, 0.0003385830000000034, 0.0003403469999999978, 0.0003383469999999958, 0.0003386390000000017, 0.0003381520000000013, 0.0003408469999999983, 0.0003403329999999982, 0.00033852799999999766, 0.0003408049999999996, 0.0003387499999999988, 0.000338806000000004, 0.00033931899999999765, 0.0003410830000000059]</msg>
<status status="PASS" starttime="20201030 18:30:48.051" endtime="20201030 18:30:48.054"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.046" endtime="20201030 18:30:48.055"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:48.059" endtime="20201030 18:30:48.078"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.057" endtime="20201030 18:30:48.079"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.056" endtime="20201030 18:30:48.079"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.649" endtime="20201030 18:30:48.079"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.648" endtime="20201030 18:30:48.079"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:48.088" endtime="20201030 18:30:48.125"></status>
</kw>
<msg timestamp="20201030 18:30:48.125" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:48.087" endtime="20201030 18:30:48.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:48.128" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:48.127" endtime="20201030 18:30:48.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:48.129" endtime="20201030 18:30:48.131"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.084" endtime="20201030 18:30:48.131"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.082" endtime="20201030 18:30:48.132"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:48.139" endtime="20201030 18:30:48.425"></status>
</kw>
<msg timestamp="20201030 18:30:48.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023282167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02361775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:48.137" endtime="20201030 18:30:48.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:48.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023282167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02361775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:48.429" endtime="20201030 18:30:48.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:48.437" endtime="20201030 18:30:48.439"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.134" endtime="20201030 18:30:48.440"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.133" endtime="20201030 18:30:48.440"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:48.444" level="INFO">${RESULT} = [{'diff': 0.0003355830000000004}, {'diff': 0.00034090300000000004}, {'diff': 0.00033993100000000165}, {'diff': 0.0003398330000000012}, {'diff': 0.00034072200000000163}, {'diff': 0.0003386529999999978}...</msg>
<status status="PASS" starttime="20201030 18:30:48.441" endtime="20201030 18:30:48.444"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:48.449" level="INFO">${ACCURACY} = {'diff': [0.0003355830000000004, 0.00034090300000000004, 0.00033993100000000165, 0.0003398330000000012, 0.00034072200000000163, 0.0003386529999999978, 0.00034099999999999756, 0.0003397360000000002, 0....</msg>
<status status="PASS" starttime="20201030 18:30:48.445" endtime="20201030 18:30:48.449"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:48.454" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201030 18:30:48.453" endtime="20201030 18:30:48.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:48.456" level="INFO">VALUE: [0.0003355830000000004, 0.00034090300000000004, 0.00033993100000000165, 0.0003398330000000012, 0.00034072200000000163, 0.0003386529999999978, 0.00034099999999999756, 0.0003397360000000002, 0.00034123599999999824, 0.000341000000000001, 0.0003387359999999992, 0.0003398199999999976, 0.00033926399999999884, 0.0003387229999999991, 0.0003410140000000006, 0.0003396389999999992, 0.00033820899999999904, 0.0003403330000000017, 0.0003398469999999973, 0.0003391109999999996, 0.000340693999999999, 0.00033895799999999685, 0.0003381950000000064, 0.0003385699999999964, 0.0003401810000000019, 0.00033920800000000056, 0.0003411800000000034, 0.00033866600000000135, 0.000341097999999998, 0.0003400139999999996, 0.00033827699999999794, 0.00033927699999999894, 0.00033954099999999876, 0.00033908399999999644, 0.0003393329999999972, 0.0003381250000000016, 0.0003395689999999979, 0.0003408329999999987, 0.0003406249999999972, 0.0003394170000000016, 0.00033965300000000226, 0.0003391390000000022, 0.00034111100000000505, 0.00034076400000000034, 0.0003394720000000004, 0.00034098600000000145, 0.00033938900000000244, 0.0003383049999999971, 0.0003380970000000025, 0.0003402360000000007]</msg>
<status status="PASS" starttime="20201030 18:30:48.455" endtime="20201030 18:30:48.457"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.450" endtime="20201030 18:30:48.458"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:48.462" endtime="20201030 18:30:48.481"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.460" endtime="20201030 18:30:48.482"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.459" endtime="20201030 18:30:48.482"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.080" endtime="20201030 18:30:48.482"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.080" endtime="20201030 18:30:48.483"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:48.492" endtime="20201030 18:30:48.527"></status>
</kw>
<msg timestamp="20201030 18:30:48.528" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:48.490" endtime="20201030 18:30:48.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:48.530" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:48.529" endtime="20201030 18:30:48.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:48.531" endtime="20201030 18:30:48.533"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.487" endtime="20201030 18:30:48.534"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.485" endtime="20201030 18:30:48.534"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:48.541" endtime="20201030 18:30:48.828"></status>
</kw>
<msg timestamp="20201030 18:30:48.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022035333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022372542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:48.539" endtime="20201030 18:30:48.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:48.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022035333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022372542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:48.832" endtime="20201030 18:30:48.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:48.840" endtime="20201030 18:30:48.842"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.537" endtime="20201030 18:30:48.843"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.535" endtime="20201030 18:30:48.843"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:48.847" level="INFO">${RESULT} = [{'diff': 0.00033720899999999804}, {'diff': 0.0003382640000000013}, {'diff': 0.0003394299999999982}, {'diff': 0.0003397779999999989}, {'diff': 0.00033936099999999983}, {'diff': 0.00033998600000000045}...</msg>
<status status="PASS" starttime="20201030 18:30:48.844" endtime="20201030 18:30:48.847"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:48.851" level="INFO">${ACCURACY} = {'diff': [0.00033720899999999804, 0.0003382640000000013, 0.0003394299999999982, 0.0003397779999999989, 0.00033936099999999983, 0.00033998600000000045, 0.00033979200000000195, 0.00033806999999999934, 0...</msg>
<status status="PASS" starttime="20201030 18:30:48.848" endtime="20201030 18:30:48.851"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:48.856" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201030 18:30:48.855" endtime="20201030 18:30:48.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:48.858" level="INFO">VALUE: [0.00033720899999999804, 0.0003382640000000013, 0.0003394299999999982, 0.0003397779999999989, 0.00033936099999999983, 0.00033998600000000045, 0.00033979200000000195, 0.00033806999999999934, 0.0003380559999999998, 0.0003408330000000022, 0.000339790999999999, 0.00033869499999999997, 0.0003383199999999996, 0.0003395550000000018, 0.00034080599999999905, 0.0003384719999999994, 0.0003407779999999999, 0.0003405689999999989, 0.00033954199999999823, 0.00033912499999999915, 0.0003382359999999987, 0.0003402909999999995, 0.00033886200000000227, 0.000338887999999999, 0.0003393749999999994, 0.0003402079999999981, 0.0003404170000000026, 0.00033937500000000287, 0.0003394720000000004, 0.000339597000000004, 0.00033816700000000033, 0.00034072200000000163, 0.0003384719999999994, 0.00033833300000000316, 0.00034063899999999675, 0.00033802799999999716, 0.00033891699999999414, 0.00034131899999999965, 0.0003410559999999993, 0.00034042999999999574, 0.000338403000000001, 0.00033906900000000434, 0.00033963899999999575, 0.00033954099999999876, 0.00033938900000000244, 0.00033872199999999963, 0.0003408610000000048, 0.00033927699999999894, 0.0003383469999999958, 0.00034031899999999865]</msg>
<status status="PASS" starttime="20201030 18:30:48.857" endtime="20201030 18:30:48.859"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.852" endtime="20201030 18:30:48.860"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:48.864" endtime="20201030 18:30:48.883"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.862" endtime="20201030 18:30:48.884"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.861" endtime="20201030 18:30:48.884"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.483" endtime="20201030 18:30:48.884"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.483" endtime="20201030 18:30:48.885"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:48.894" endtime="20201030 18:30:48.928"></status>
</kw>
<msg timestamp="20201030 18:30:48.929" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:48.892" endtime="20201030 18:30:48.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:48.931" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:48.930" endtime="20201030 18:30:48.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:48.932" endtime="20201030 18:30:48.934"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.889" endtime="20201030 18:30:48.935"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.887" endtime="20201030 18:30:48.935"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:48.942" endtime="20201030 18:30:49.229"></status>
</kw>
<msg timestamp="20201030 18:30:49.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021917417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022269083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:48.940" endtime="20201030 18:30:49.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:49.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021917417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022269083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:49.234" endtime="20201030 18:30:49.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:49.242" endtime="20201030 18:30:49.244"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.938" endtime="20201030 18:30:49.244"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.936" endtime="20201030 18:30:49.245"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:49.249" level="INFO">${RESULT} = [{'diff': 0.000351665999999997}, {'diff': 0.0003395560000000013}, {'diff': 0.00034073599999999774}, {'diff': 0.0003409169999999996}, {'diff': 0.00033830500000000055}, {'diff': 0.00034072200000000163},...</msg>
<status status="PASS" starttime="20201030 18:30:49.245" endtime="20201030 18:30:49.249"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:49.253" level="INFO">${ACCURACY} = {'diff': [0.000351665999999997, 0.0003395560000000013, 0.00034073599999999774, 0.0003409169999999996, 0.00033830500000000055, 0.00034072200000000163, 0.00034022200000000113, 0.0003413199999999991, 0.0...</msg>
<status status="PASS" starttime="20201030 18:30:49.250" endtime="20201030 18:30:49.253"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:49.257" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201030 18:30:49.256" endtime="20201030 18:30:49.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:49.260" level="INFO">VALUE: [0.000351665999999997, 0.0003395560000000013, 0.00034073599999999774, 0.0003409169999999996, 0.00033830500000000055, 0.00034072200000000163, 0.00034022200000000113, 0.0003413199999999991, 0.00034070800000000206, 0.00033876299999999887, 0.0003388200000000001, 0.0003402779999999994, 0.0003397360000000002, 0.00033812499999999815, 0.000341194999999999, 0.000339693999999998, 0.0003394300000000017, 0.0003393049999999981, 0.00033958300000000094, 0.00034076300000000087, 0.00033998600000000045, 0.00034137499999999793, 0.00033884699999999976, 0.00033866700000000083, 0.0003392779999999984, 0.00034147199999999545, 0.0003404590000000013, 0.000341000000000001, 0.00034104199999999973, 0.0003400139999999996, 0.00034090299999999657, 0.00034009699999999754, 0.00033997300000000036, 0.0003412500000000013, 0.00034132000000000606, 0.00033905500000000477, 0.00033926399999999884, 0.00033936099999999636, 0.00033805600000000324, 0.00034063899999999675, 0.00033976399999999934, 0.0003382640000000048, 0.00034020800000000156, 0.00034081899999999915, 0.000341292, 0.00033987499999999643, 0.0003387640000000053, 0.00034131899999999965, 0.0003382359999999987, 0.00034122200000000213]</msg>
<status status="PASS" starttime="20201030 18:30:49.259" endtime="20201030 18:30:49.262"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.254" endtime="20201030 18:30:49.262"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:49.266" endtime="20201030 18:30:49.286"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.265" endtime="20201030 18:30:49.286"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.263" endtime="20201030 18:30:49.286"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.885" endtime="20201030 18:30:49.287"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.885" endtime="20201030 18:30:49.287"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:49.296" endtime="20201030 18:30:49.331"></status>
</kw>
<msg timestamp="20201030 18:30:49.332" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:49.294" endtime="20201030 18:30:49.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:49.334" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:49.333" endtime="20201030 18:30:49.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:49.335" endtime="20201030 18:30:49.337"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.292" endtime="20201030 18:30:49.338"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.289" endtime="20201030 18:30:49.338"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:49.345" endtime="20201030 18:30:49.630"></status>
</kw>
<msg timestamp="20201030 18:30:49.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021484556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021828792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:49.343" endtime="20201030 18:30:49.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:49.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021484556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021828792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:49.634" endtime="20201030 18:30:49.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:49.642" endtime="20201030 18:30:49.644"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.340" endtime="20201030 18:30:49.645"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.339" endtime="20201030 18:30:49.645"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:49.649" level="INFO">${RESULT} = [{'diff': 0.00034423600000000124}, {'diff': 0.0003391519999999988}, {'diff': 0.0003392359999999997}, {'diff': 0.0003403339999999977}, {'diff': 0.0003389170000000011}, {'diff': 0.0003411939999999995}, ...</msg>
<status status="PASS" starttime="20201030 18:30:49.646" endtime="20201030 18:30:49.649"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:49.654" level="INFO">${ACCURACY} = {'diff': [0.00034423600000000124, 0.0003391519999999988, 0.0003392359999999997, 0.0003403339999999977, 0.0003389170000000011, 0.0003411939999999995, 0.00034123599999999824, 0.00034088900000000047, 0.0...</msg>
<status status="PASS" starttime="20201030 18:30:49.650" endtime="20201030 18:30:49.654"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:49.659" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201030 18:30:49.658" endtime="20201030 18:30:49.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:49.661" level="INFO">VALUE: [0.00034423600000000124, 0.0003391519999999988, 0.0003392359999999997, 0.0003403339999999977, 0.0003389170000000011, 0.0003411939999999995, 0.00034123599999999824, 0.00034088900000000047, 0.0003411530000000003, 0.0003405970000000015, 0.0003384449999999997, 0.0003410139999999971, 0.0003384170000000006, 0.0003382090000000025, 0.00033804100000000073, 0.0003404580000000018, 0.00034112500000000115, 0.00034090300000000004, 0.0003394309999999977, 0.00033920900000000004, 0.0003410559999999993, 0.00033952800000000213, 0.0003407079999999986, 0.0003390139999999986, 0.00034040299999999954, 0.00034081899999999915, 0.00033993100000000165, 0.00033937499999999593, 0.00034077700000000044, 0.0003388190000000041, 0.0003391250000000026, 0.00033933400000000363, 0.00034004199999999873, 0.0003391800000000014, 0.0003378610000000018, 0.000339403000000002, 0.00033876399999999834, 0.0003396109999999966, 0.00033898699999999893, 0.0003409590000000018, 0.0003409030000000035, 0.00033920800000000056, 0.0003394160000000021, 0.00034011100000000405, 0.0003411800000000034, 0.0003401250000000036, 0.0003394720000000004, 0.00034094400000000274, 0.0003383339999999957, 0.00034083300000000566]</msg>
<status status="PASS" starttime="20201030 18:30:49.660" endtime="20201030 18:30:49.662"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.655" endtime="20201030 18:30:49.663"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:49.666" endtime="20201030 18:30:49.686"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.665" endtime="20201030 18:30:49.687"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.664" endtime="20201030 18:30:49.687"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.288" endtime="20201030 18:30:49.687"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.287" endtime="20201030 18:30:49.687"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:49.696" endtime="20201030 18:30:49.734"></status>
</kw>
<msg timestamp="20201030 18:30:49.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:49.695" endtime="20201030 18:30:49.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:49.737" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:49.736" endtime="20201030 18:30:49.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:49.738" endtime="20201030 18:30:49.740"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.692" endtime="20201030 18:30:49.741"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.690" endtime="20201030 18:30:49.741"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:49.748" endtime="20201030 18:30:50.036"></status>
</kw>
<msg timestamp="20201030 18:30:50.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023048444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023385736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:49.746" endtime="20201030 18:30:50.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:50.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023048444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023385736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:50.040" endtime="20201030 18:30:50.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:50.049" endtime="20201030 18:30:50.051"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.743" endtime="20201030 18:30:50.051"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.742" endtime="20201030 18:30:50.052"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:50.056" level="INFO">${RESULT} = [{'diff': 0.00033729199999999945}, {'diff': 0.0003401659999999994}, {'diff': 0.00033844400000000024}, {'diff': 0.0003396800000000019}, {'diff': 0.0003391109999999996}, {'diff': 0.0003401939999999985},...</msg>
<status status="PASS" starttime="20201030 18:30:50.052" endtime="20201030 18:30:50.056"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:50.060" level="INFO">${ACCURACY} = {'diff': [0.00033729199999999945, 0.0003401659999999994, 0.00033844400000000024, 0.0003396800000000019, 0.0003391109999999996, 0.0003401939999999985, 0.00033886099999999933, 0.0003395970000000005, 0.0...</msg>
<status status="PASS" starttime="20201030 18:30:50.057" endtime="20201030 18:30:50.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:50.065" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201030 18:30:50.063" endtime="20201030 18:30:50.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:50.067" level="INFO">VALUE: [0.00033729199999999945, 0.0003401659999999994, 0.00033844400000000024, 0.0003396800000000019, 0.0003391109999999996, 0.0003401939999999985, 0.00033886099999999933, 0.0003395970000000005, 0.0003412079999999991, 0.00034080599999999905, 0.0003395970000000005, 0.0003413750000000014, 0.0003399580000000013, 0.00033872199999999963, 0.0003407360000000012, 0.00033968099999999793, 0.0003392079999999971, 0.0003390420000000012, 0.0003398330000000012, 0.0003401529999999993, 0.0003403469999999978, 0.0003400980000000005, 0.00033883400000000313, 0.00033869399999999356, 0.00034091599999999667, 0.00033870800000000006, 0.00034002799999999916, 0.0003389030000000015, 0.0003392499999999993, 0.0003393329999999972, 0.0003400700000000048, 0.0003388190000000041, 0.00033988900000000294, 0.00033986099999999686, 0.00034102800000000016, 0.0003403329999999982, 0.00033906900000000434, 0.0003411810000000029, 0.0003396250000000031, 0.000340291999999999, 0.00033798599999999845, 0.0003381250000000016, 0.0003382499999999983, 0.00033819499999999947, 0.00034098600000000145, 0.0003403339999999977, 0.0003385139999999981, 0.0003384719999999994, 0.0003403889999999965, 0.00034052799999999966]</msg>
<status status="PASS" starttime="20201030 18:30:50.066" endtime="20201030 18:30:50.071"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.061" endtime="20201030 18:30:50.072"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:50.076" endtime="20201030 18:30:50.095"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.074" endtime="20201030 18:30:50.096"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.073" endtime="20201030 18:30:50.096"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.688" endtime="20201030 18:30:50.097"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.688" endtime="20201030 18:30:50.097"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:50.106" endtime="20201030 18:30:50.144"></status>
</kw>
<msg timestamp="20201030 18:30:50.145" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:50.104" endtime="20201030 18:30:50.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:50.147" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:50.146" endtime="20201030 18:30:50.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:50.148" endtime="20201030 18:30:50.150"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.102" endtime="20201030 18:30:50.151"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.099" endtime="20201030 18:30:50.151"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:50.158" endtime="20201030 18:30:50.444"></status>
</kw>
<msg timestamp="20201030 18:30:50.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025532472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025871861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:50.156" endtime="20201030 18:30:50.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:50.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025532472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025871861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:50.448" endtime="20201030 18:30:50.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:50.456" endtime="20201030 18:30:50.458"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.154" endtime="20201030 18:30:50.459"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.152" endtime="20201030 18:30:50.459"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:50.463" level="INFO">${RESULT} = [{'diff': 0.00033938899999999897}, {'diff': 0.0003404169999999991}, {'diff': 0.000338403000000001}, {'diff': 0.0003412369999999977}, {'diff': 0.0003385839999999994}, {'diff': 0.00034057000000000184}, ...</msg>
<status status="PASS" starttime="20201030 18:30:50.460" endtime="20201030 18:30:50.463"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:50.467" level="INFO">${ACCURACY} = {'diff': [0.00033938899999999897, 0.0003404169999999991, 0.000338403000000001, 0.0003412369999999977, 0.0003385839999999994, 0.00034057000000000184, 0.00033823700000000165, 0.0003385550000000008, 0.00...</msg>
<status status="PASS" starttime="20201030 18:30:50.464" endtime="20201030 18:30:50.467"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:50.472" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201030 18:30:50.471" endtime="20201030 18:30:50.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:50.477" level="INFO">VALUE: [0.00033938899999999897, 0.0003404169999999991, 0.000338403000000001, 0.0003412369999999977, 0.0003385839999999994, 0.00034057000000000184, 0.00033823700000000165, 0.0003385550000000008, 0.0003379170000000001, 0.000339693999999998, 0.0003392359999999997, 0.0003390129999999991, 0.000338291000000001, 0.0003388060000000005, 0.000337999999999998, 0.000339790999999999, 0.0003401390000000032, 0.00033794399999999974, 0.00034004199999999873, 0.0003390559999999973, 0.000338612000000002, 0.00033826399999999784, 0.00033798599999999845, 0.00033894400000000074, 0.0003397499999999998, 0.0003396390000000027, 0.000339888999999996, 0.0003386249999999952, 0.0003406800000000029, 0.0003396940000000015, 0.0003378469999999953, 0.00033886099999999586, 0.0003384860000000059, 0.0003405140000000001, 0.0003410559999999993, 0.0003409859999999945, 0.0003406669999999959, 0.00033856900000000384, 0.0003387920000000044, 0.00034072200000000163, 0.0003382359999999987, 0.00033866600000000135, 0.0003407919999999995, 0.0003409019999999971, 0.00034037500000000387, 0.0003381390000000012, 0.00034104100000000026, 0.0003392779999999984, 0.0003394449999999938, 0.00033998600000000045]</msg>
<status status="PASS" starttime="20201030 18:30:50.473" endtime="20201030 18:30:50.479"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.468" endtime="20201030 18:30:50.479"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:50.483" endtime="20201030 18:30:50.502"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.481" endtime="20201030 18:30:50.503"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.480" endtime="20201030 18:30:50.503"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.098" endtime="20201030 18:30:50.504"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.097" endtime="20201030 18:30:50.504"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:50.513" endtime="20201030 18:30:50.546"></status>
</kw>
<msg timestamp="20201030 18:30:50.546" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:50.511" endtime="20201030 18:30:50.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:50.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:50.548" endtime="20201030 18:30:50.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:50.550" endtime="20201030 18:30:50.552"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.508" endtime="20201030 18:30:50.553"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.506" endtime="20201030 18:30:50.553"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:50.560" endtime="20201030 18:30:50.847"></status>
</kw>
<msg timestamp="20201030 18:30:50.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020341194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020672153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:50.558" endtime="20201030 18:30:50.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:50.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020341194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020672153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:50.851" endtime="20201030 18:30:50.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:50.859" endtime="20201030 18:30:50.861"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.555" endtime="20201030 18:30:50.861"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.554" endtime="20201030 18:30:50.862"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:50.866" level="INFO">${RESULT} = [{'diff': 0.0003309589999999987}, {'diff': 0.0003402499999999968}, {'diff': 0.0003397499999999998}, {'diff': 0.0003390689999999974}, {'diff': 0.0003401659999999994}, {'diff': 0.00033988899999999947}, ...</msg>
<status status="PASS" starttime="20201030 18:30:50.863" endtime="20201030 18:30:50.866"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:50.871" level="INFO">${ACCURACY} = {'diff': [0.0003309589999999987, 0.0003402499999999968, 0.0003397499999999998, 0.0003390689999999974, 0.0003401659999999994, 0.00033988899999999947, 0.00033825000000000174, 0.0003386659999999979, 0.00...</msg>
<status status="PASS" starttime="20201030 18:30:50.867" endtime="20201030 18:30:50.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:50.876" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201030 18:30:50.875" endtime="20201030 18:30:50.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:50.878" level="INFO">VALUE: [0.0003309589999999987, 0.0003402499999999968, 0.0003397499999999998, 0.0003390689999999974, 0.0003401659999999994, 0.00033988899999999947, 0.00033825000000000174, 0.0003386659999999979, 0.00033976399999999934, 0.00034, 0.00033922200000000013, 0.0003412639999999974, 0.00033904099999999826, 0.0003387499999999988, 0.0003387780000000014, 0.0003385420000000007, 0.0003384999999999985, 0.00033872199999999963, 0.00033834699999999926, 0.0003392359999999997, 0.00033906900000000087, 0.00034088900000000047, 0.000338597999999999, 0.0003398469999999973, 0.0003380559999999998, 0.0003384170000000006, 0.00033890199999999857, 0.0003397499999999998, 0.00033916600000000185, 0.00034048600000000095, 0.00033894400000000074, 0.00033888800000000247, 0.0003402500000000003, 0.0003385979999999955, 0.0003394449999999938, 0.0003398469999999973, 0.00034119500000000247, 0.00034098600000000145, 0.0003387499999999988, 0.00033811100000000205, 0.0003397919999999985, 0.00033815300000000076, 0.00033976399999999934, 0.00033990200000000304, 0.00033972200000000063, 0.0003408199999999986, 0.0003410700000000058, 0.00034131899999999965, 0.0003410699999999989, 0.0003392359999999997]</msg>
<status status="PASS" starttime="20201030 18:30:50.877" endtime="20201030 18:30:50.879"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.872" endtime="20201030 18:30:50.879"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:50.883" endtime="20201030 18:30:50.903"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.882" endtime="20201030 18:30:50.903"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.880" endtime="20201030 18:30:50.904"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.505" endtime="20201030 18:30:50.904"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.504" endtime="20201030 18:30:50.904"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:50.913" endtime="20201030 18:30:50.948"></status>
</kw>
<msg timestamp="20201030 18:30:50.948" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:50.912" endtime="20201030 18:30:50.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:50.951" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:50.949" endtime="20201030 18:30:50.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:50.952" endtime="20201030 18:30:50.954"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.909" endtime="20201030 18:30:50.954"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.907" endtime="20201030 18:30:50.955"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:50.962" endtime="20201030 18:30:51.249"></status>
</kw>
<msg timestamp="20201030 18:30:51.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021899958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022257764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:50.960" endtime="20201030 18:30:51.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:51.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021899958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022257764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:51.254" endtime="20201030 18:30:51.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:51.262" endtime="20201030 18:30:51.264"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.957" endtime="20201030 18:30:51.264"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.955" endtime="20201030 18:30:51.265"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:51.269" level="INFO">${RESULT} = [{'diff': 0.0003578059999999987}, {'diff': 0.00034068099999999893}, {'diff': 0.0003396529999999988}, {'diff': 0.000338096999999999}, {'diff': 0.00034049999999999706}, {'diff': 0.0003380000000000015}, ...</msg>
<status status="PASS" starttime="20201030 18:30:51.265" endtime="20201030 18:30:51.269"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:51.273" level="INFO">${ACCURACY} = {'diff': [0.0003578059999999987, 0.00034068099999999893, 0.0003396529999999988, 0.000338096999999999, 0.00034049999999999706, 0.0003380000000000015, 0.00034005499999999883, 0.00033958300000000094, 0.0...</msg>
<status status="PASS" starttime="20201030 18:30:51.270" endtime="20201030 18:30:51.273"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:51.277" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201030 18:30:51.276" endtime="20201030 18:30:51.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:51.280" level="INFO">VALUE: [0.0003578059999999987, 0.00034068099999999893, 0.0003396529999999988, 0.000338096999999999, 0.00034049999999999706, 0.0003380000000000015, 0.00034005499999999883, 0.00033958300000000094, 0.00033858299999999994, 0.00033979200000000195, 0.0003397079999999976, 0.0003380420000000002, 0.00033954199999999823, 0.00034086100000000133, 0.000339306000000001, 0.00033820899999999904, 0.0003405689999999989, 0.0003389030000000015, 0.0003389719999999999, 0.0003391389999999987, 0.0003386109999999991, 0.0003403620000000003, 0.0003411520000000008, 0.0003386109999999991, 0.00034094400000000274, 0.00034008299999999797, 0.0003382640000000048, 0.00033915199999999535, 0.0003401800000000024, 0.00033890200000000203, 0.00033805499999999683, 0.0003409160000000036, 0.00033838900000000144, 0.00034069500000000197, 0.00033986099999999686, 0.0003410699999999989, 0.00034054199999999923, 0.00034113899999999725, 0.0003409170000000031, 0.0003407919999999995, 0.0003400559999999983, 0.0003389030000000015, 0.0003399579999999944, 0.0003390699999999969, 0.0003408469999999983, 0.0003406390000000037, 0.0003407500000000008, 0.00034122200000000213, 0.00034115300000000376, 0.0003381249999999947]</msg>
<status status="PASS" starttime="20201030 18:30:51.279" endtime="20201030 18:30:51.281"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.274" endtime="20201030 18:30:51.281"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:51.286" endtime="20201030 18:30:51.306"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.284" endtime="20201030 18:30:51.306"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.282" endtime="20201030 18:30:51.307"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.905" endtime="20201030 18:30:51.307"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.905" endtime="20201030 18:30:51.307"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:51.316" endtime="20201030 18:30:51.356"></status>
</kw>
<msg timestamp="20201030 18:30:51.356" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:51.315" endtime="20201030 18:30:51.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:51.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:51.357" endtime="20201030 18:30:51.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:51.360" endtime="20201030 18:30:51.361"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.312" endtime="20201030 18:30:51.362"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.310" endtime="20201030 18:30:51.363"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:51.369" endtime="20201030 18:30:51.656"></status>
</kw>
<msg timestamp="20201030 18:30:51.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025942292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026276583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:51.368" endtime="20201030 18:30:51.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:51.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025942292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026276583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:51.661" endtime="20201030 18:30:51.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:51.669" endtime="20201030 18:30:51.671"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.365" endtime="20201030 18:30:51.671"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.363" endtime="20201030 18:30:51.672"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:51.676" level="INFO">${RESULT} = [{'diff': 0.00033429100000000045}, {'diff': 0.0003401389999999997}, {'diff': 0.0003401110000000006}, {'diff': 0.00033902799999999816}, {'diff': 0.0003383199999999996}, {'diff': 0.00033977699999999944}...</msg>
<status status="PASS" starttime="20201030 18:30:51.673" endtime="20201030 18:30:51.676"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:51.680" level="INFO">${ACCURACY} = {'diff': [0.00033429100000000045, 0.0003401389999999997, 0.0003401110000000006, 0.00033902799999999816, 0.0003383199999999996, 0.00033977699999999944, 0.00034081899999999915, 0.00033976399999999934, 0...</msg>
<status status="PASS" starttime="20201030 18:30:51.677" endtime="20201030 18:30:51.680"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:51.685" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201030 18:30:51.684" endtime="20201030 18:30:51.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:51.687" level="INFO">VALUE: [0.00033429100000000045, 0.0003401389999999997, 0.0003401110000000006, 0.00033902799999999816, 0.0003383199999999996, 0.00033977699999999944, 0.00034081899999999915, 0.00033976399999999934, 0.0003404169999999991, 0.00034126400000000084, 0.00033986100000000033, 0.0003380839999999989, 0.00033893100000000065, 0.00033908300000000044, 0.00033897300000000283, 0.00033954199999999823, 0.00033998600000000045, 0.0003405000000000005, 0.0003391390000000022, 0.0003404300000000027, 0.0003405000000000005, 0.00033880599999999705, 0.00034098600000000145, 0.0003411800000000034, 0.0003394450000000007, 0.0003400139999999996, 0.00033816700000000033, 0.0003382499999999983, 0.0003383049999999971, 0.00033972200000000063, 0.0003396529999999953, 0.0003411109999999981, 0.00034033300000000516, 0.00033948599999999995, 0.0003397360000000002, 0.0003391810000000009, 0.00033811100000000205, 0.0003382920000000039, 0.00033866700000000083, 0.0003398610000000038, 0.0003386810000000004, 0.00033933400000000363, 0.00034065300000000326, 0.0003381800000000004, 0.00033911100000000305, 0.00033851400000000503, 0.00033820899999999904, 0.00034027699999999994, 0.0003403469999999978, 0.00034109699999999854]</msg>
<status status="PASS" starttime="20201030 18:30:51.686" endtime="20201030 18:30:51.689"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.681" endtime="20201030 18:30:51.689"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:51.693" endtime="20201030 18:30:51.713"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.692" endtime="20201030 18:30:51.713"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.690" endtime="20201030 18:30:51.714"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.308" endtime="20201030 18:30:51.714"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.308" endtime="20201030 18:30:51.714"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:51.723" endtime="20201030 18:30:51.757"></status>
</kw>
<msg timestamp="20201030 18:30:51.758" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:51.721" endtime="20201030 18:30:51.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:51.760" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:51.759" endtime="20201030 18:30:51.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:51.761" endtime="20201030 18:30:51.763"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.719" endtime="20201030 18:30:51.764"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.717" endtime="20201030 18:30:51.764"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:51.771" endtime="20201030 18:30:52.058"></status>
</kw>
<msg timestamp="20201030 18:30:52.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020906486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021244222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:51.769" endtime="20201030 18:30:52.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:52.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020906486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021244222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:52.062" endtime="20201030 18:30:52.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:52.071" endtime="20201030 18:30:52.073"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.766" endtime="20201030 18:30:52.074"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.765" endtime="20201030 18:30:52.074"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:52.078" level="INFO">${RESULT} = [{'diff': 0.0003377360000000017}, {'diff': 0.0003410550000000033}, {'diff': 0.0003405420000000027}, {'diff': 0.00033872199999999963}, {'diff': 0.0003395840000000004}, {'diff': 0.000339097}, {'diff': 0...</msg>
<status status="PASS" starttime="20201030 18:30:52.075" endtime="20201030 18:30:52.078"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:52.083" level="INFO">${ACCURACY} = {'diff': [0.0003377360000000017, 0.0003410550000000033, 0.0003405420000000027, 0.00033872199999999963, 0.0003395840000000004, 0.000339097, 0.00034058299999999847, 0.0003384579999999998, 0.000338999999...</msg>
<status status="PASS" starttime="20201030 18:30:52.079" endtime="20201030 18:30:52.083"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:52.088" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201030 18:30:52.087" endtime="20201030 18:30:52.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:52.090" level="INFO">VALUE: [0.0003377360000000017, 0.0003410550000000033, 0.0003405420000000027, 0.00033872199999999963, 0.0003395840000000004, 0.000339097, 0.00034058299999999847, 0.0003384579999999998, 0.000338999999999999, 0.0003405140000000001, 0.0003395970000000005, 0.00034016699999999886, 0.0003390420000000012, 0.0003386940000000005, 0.0003379719999999989, 0.00033833399999999916, 0.00034034700000000126, 0.0003399169999999986, 0.00033915300000000176, 0.0003391109999999996, 0.0003391109999999996, 0.0003402360000000007, 0.0003403199999999981, 0.000341000000000001, 0.0003408469999999983, 0.000340291999999999, 0.00033962499999999965, 0.0003408329999999987, 0.0003403620000000003, 0.0003384160000000011, 0.00034104199999999973, 0.0003399300000000022, 0.0003403480000000042, 0.0003399720000000009, 0.00033843100000000015, 0.0003391390000000022, 0.00033801400000000453, 0.0003391810000000009, 0.0003409309999999957, 0.00034127700000000094, 0.0003392359999999997, 0.0003396390000000027, 0.00033927800000000535, 0.0003406250000000041, 0.0003400830000000049, 0.0003380830000000029, 0.0003404579999999949, 0.0003410140000000006, 0.0003396800000000019, 0.0003389580000000003]</msg>
<status status="PASS" starttime="20201030 18:30:52.089" endtime="20201030 18:30:52.091"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.084" endtime="20201030 18:30:52.092"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:52.095" endtime="20201030 18:30:52.115"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.094" endtime="20201030 18:30:52.116"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.093" endtime="20201030 18:30:52.116"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.715" endtime="20201030 18:30:52.116"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.714" endtime="20201030 18:30:52.116"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:52.125" endtime="20201030 18:30:52.159"></status>
</kw>
<msg timestamp="20201030 18:30:52.160" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:52.124" endtime="20201030 18:30:52.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:52.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:52.161" endtime="20201030 18:30:52.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:52.163" endtime="20201030 18:30:52.165"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.121" endtime="20201030 18:30:52.165"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.119" endtime="20201030 18:30:52.166"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:52.173" endtime="20201030 18:30:52.459"></status>
</kw>
<msg timestamp="20201030 18:30:52.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020569611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02090725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:52.171" endtime="20201030 18:30:52.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:52.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020569611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02090725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:52.463" endtime="20201030 18:30:52.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:52.472" endtime="20201030 18:30:52.473"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.168" endtime="20201030 18:30:52.474"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.166" endtime="20201030 18:30:52.474"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:52.478" level="INFO">${RESULT} = [{'diff': 0.0003376389999999972}, {'diff': 0.0003400560000000018}, {'diff': 0.00033844400000000024}, {'diff': 0.0003387780000000014}, {'diff': 0.00033998600000000045}, {'diff': 0.0003401389999999997},...</msg>
<status status="PASS" starttime="20201030 18:30:52.475" endtime="20201030 18:30:52.478"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:52.482" level="INFO">${ACCURACY} = {'diff': [0.0003376389999999972, 0.0003400560000000018, 0.00033844400000000024, 0.0003387780000000014, 0.00033998600000000045, 0.0003401389999999997, 0.00033832000000000306, 0.0003391109999999996, 0.0...</msg>
<status status="PASS" starttime="20201030 18:30:52.479" endtime="20201030 18:30:52.483"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:52.487" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201030 18:30:52.486" endtime="20201030 18:30:52.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:52.490" level="INFO">VALUE: [0.0003376389999999972, 0.0003400560000000018, 0.00033844400000000024, 0.0003387780000000014, 0.00033998600000000045, 0.0003401389999999997, 0.00033832000000000306, 0.0003391109999999996, 0.0003386529999999978, 0.0003386800000000009, 0.000338194, 0.00033990199999999957, 0.00034059699999999804, 0.0003412230000000016, 0.0003389719999999999, 0.0003407500000000008, 0.00034090300000000004, 0.0003403469999999978, 0.0003386940000000005, 0.0003400699999999979, 0.00034040200000000007, 0.0003396810000000014, 0.00034083400000000166, 0.00033973599999999674, 0.0003393469999999968, 0.00034054099999999976, 0.0003412370000000012, 0.0003410699999999989, 0.00033883399999999966, 0.00034008300000000144, 0.0003389170000000011, 0.0003386390000000017, 0.00033948599999999995, 0.00034087499999999743, 0.00033811100000000205, 0.0003409439999999958, 0.0003401800000000024, 0.00033938900000000244, 0.0003384449999999997, 0.00034087500000000437, 0.0003394720000000004, 0.0003395139999999991, 0.000340291999999999, 0.00034054199999999923, 0.0003389439999999938, 0.0003383610000000023, 0.00034087499999999743, 0.00034008299999999797, 0.0003382779999999974, 0.0003397919999999985]</msg>
<status status="PASS" starttime="20201030 18:30:52.488" endtime="20201030 18:30:52.490"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.483" endtime="20201030 18:30:52.491"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:52.495" endtime="20201030 18:30:52.514"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.493" endtime="20201030 18:30:52.515"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.492" endtime="20201030 18:30:52.515"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.117" endtime="20201030 18:30:52.515"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.117" endtime="20201030 18:30:52.516"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:52.525" endtime="20201030 18:30:52.561"></status>
</kw>
<msg timestamp="20201030 18:30:52.561" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:52.523" endtime="20201030 18:30:52.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:52.564" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:52.562" endtime="20201030 18:30:52.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:52.565" endtime="20201030 18:30:52.566"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.520" endtime="20201030 18:30:52.567"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.518" endtime="20201030 18:30:52.567"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:52.574" endtime="20201030 18:30:52.861"></status>
</kw>
<msg timestamp="20201030 18:30:52.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023207764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023553486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:52.573" endtime="20201030 18:30:52.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:52.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023207764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023553486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:52.866" endtime="20201030 18:30:52.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:52.874" endtime="20201030 18:30:52.876"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.570" endtime="20201030 18:30:52.876"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.568" endtime="20201030 18:30:52.877"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:52.881" level="INFO">${RESULT} = [{'diff': 0.0003457219999999997}, {'diff': 0.00033845900000000276}, {'diff': 0.00033825000000000174}, {'diff': 0.00034062500000000065}, {'diff': 0.00033986100000000033}, {'diff': 0.0003407919999999995...</msg>
<status status="PASS" starttime="20201030 18:30:52.878" endtime="20201030 18:30:52.881"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:52.885" level="INFO">${ACCURACY} = {'diff': [0.0003457219999999997, 0.00033845900000000276, 0.00033825000000000174, 0.00034062500000000065, 0.00033986100000000033, 0.0003407919999999995, 0.0003394999999999995, 0.00034018099999999843, 0...</msg>
<status status="PASS" starttime="20201030 18:30:52.882" endtime="20201030 18:30:52.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:52.890" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201030 18:30:52.889" endtime="20201030 18:30:52.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:52.892" level="INFO">VALUE: [0.0003457219999999997, 0.00033845900000000276, 0.00033825000000000174, 0.00034062500000000065, 0.00033986100000000033, 0.0003407919999999995, 0.0003394999999999995, 0.00034018099999999843, 0.0003404439999999988, 0.0003397369999999997, 0.00034134800000000173, 0.0003396529999999988, 0.00033961199999999955, 0.0003409169999999996, 0.00033907000000000034, 0.0003386390000000017, 0.000341292, 0.00034108300000000244, 0.0003383749999999984, 0.00033948599999999995, 0.0003385560000000003, 0.0003386390000000017, 0.00033966699999999836, 0.0003384449999999997, 0.0003406659999999964, 0.0003406109999999976, 0.00034044400000000224, 0.0003410559999999993, 0.00034140299999999707, 0.00033966700000000183, 0.0003399580000000013, 0.0003389300000000012, 0.00033904199999999773, 0.00033856900000000384, 0.0003402909999999995, 0.00034048600000000095, 0.000338403000000001, 0.0003392779999999984, 0.0003391669999999944, 0.0003393199999999971, 0.0003384170000000006, 0.0003413329999999992, 0.00034116700000000333, 0.00034068099999999546, 0.0003383480000000022, 0.00033852799999999766, 0.0003407360000000012, 0.00033816600000000085, 0.00033815300000000076, 0.00033980599999999805]</msg>
<status status="PASS" starttime="20201030 18:30:52.891" endtime="20201030 18:30:52.894"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.886" endtime="20201030 18:30:52.894"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:52.898" endtime="20201030 18:30:52.918"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.897" endtime="20201030 18:30:52.918"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.895" endtime="20201030 18:30:52.919"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.517" endtime="20201030 18:30:52.919"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.516" endtime="20201030 18:30:52.919"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:52.928" endtime="20201030 18:30:52.967"></status>
</kw>
<msg timestamp="20201030 18:30:52.968" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:52.926" endtime="20201030 18:30:52.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:52.970" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:52.969" endtime="20201030 18:30:52.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:52.972" endtime="20201030 18:30:52.973"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.924" endtime="20201030 18:30:52.974"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.922" endtime="20201030 18:30:52.974"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:52.981" endtime="20201030 18:30:53.267"></status>
</kw>
<msg timestamp="20201030 18:30:53.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021676472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022033139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:52.979" endtime="20201030 18:30:53.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:53.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021676472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022033139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:53.271" endtime="20201030 18:30:53.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:53.280" endtime="20201030 18:30:53.281"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.977" endtime="20201030 18:30:53.282"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.975" endtime="20201030 18:30:53.282"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:53.286" level="INFO">${RESULT} = [{'diff': 0.0003566670000000015}, {'diff': 0.000338790999999998}, {'diff': 0.00034079200000000295}, {'diff': 0.0003398330000000012}, {'diff': 0.00034011200000000005}, {'diff': 0.0003408469999999983}, ...</msg>
<status status="PASS" starttime="20201030 18:30:53.283" endtime="20201030 18:30:53.287"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:53.291" level="INFO">${ACCURACY} = {'diff': [0.0003566670000000015, 0.000338790999999998, 0.00034079200000000295, 0.0003398330000000012, 0.00034011200000000005, 0.0003408469999999983, 0.0003382359999999987, 0.0003395139999999991, 0.000...</msg>
<status status="PASS" starttime="20201030 18:30:53.287" endtime="20201030 18:30:53.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:53.296" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201030 18:30:53.295" endtime="20201030 18:30:53.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:53.298" level="INFO">VALUE: [0.0003566670000000015, 0.000338790999999998, 0.00034079200000000295, 0.0003398330000000012, 0.00034011200000000005, 0.0003408469999999983, 0.0003382359999999987, 0.0003395139999999991, 0.00034105499999999983, 0.0003386390000000017, 0.00034054199999999923, 0.00034026399999999984, 0.00033847200000000285, 0.00033938900000000244, 0.0003391389999999987, 0.000338790999999998, 0.0003386389999999982, 0.0003409169999999996, 0.0003402230000000006, 0.000338291000000001, 0.0003399030000000025, 0.00033820899999999904, 0.0003393879999999995, 0.000341000000000001, 0.0003396520000000028, 0.0003386810000000004, 0.0003397230000000001, 0.0003406109999999976, 0.0003387229999999991, 0.0003388329999999967, 0.0003380139999999976, 0.0003402909999999995, 0.0003383610000000023, 0.00033937500000000287, 0.00033794399999999974, 0.0003405700000000053, 0.0003383060000000035, 0.000338597000000003, 0.00034056900000000584, 0.00033982000000000456, 0.00033844400000000024, 0.0003411249999999977, 0.0003394170000000016, 0.00034008399999999744, 0.0003402500000000003, 0.0003384160000000011, 0.0003398049999999986, 0.0003409449999999953, 0.0003397920000000054, 0.000338888999999995]</msg>
<status status="PASS" starttime="20201030 18:30:53.297" endtime="20201030 18:30:53.299"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.292" endtime="20201030 18:30:53.300"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:53.304" endtime="20201030 18:30:53.323"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.302" endtime="20201030 18:30:53.324"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.301" endtime="20201030 18:30:53.324"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.920" endtime="20201030 18:30:53.324"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.919" endtime="20201030 18:30:53.325"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:53.334" endtime="20201030 18:30:53.370"></status>
</kw>
<msg timestamp="20201030 18:30:53.371" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:53.332" endtime="20201030 18:30:53.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:53.373" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:53.372" endtime="20201030 18:30:53.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:53.374" endtime="20201030 18:30:53.376"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.329" endtime="20201030 18:30:53.377"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.327" endtime="20201030 18:30:53.377"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:53.384" endtime="20201030 18:30:53.672"></status>
</kw>
<msg timestamp="20201030 18:30:53.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023086667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023423403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:53.382" endtime="20201030 18:30:53.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:53.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023086667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023423403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:53.676" endtime="20201030 18:30:53.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:53.684" endtime="20201030 18:30:53.686"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.380" endtime="20201030 18:30:53.687"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.378" endtime="20201030 18:30:53.687"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:53.691" level="INFO">${RESULT} = [{'diff': 0.0003367359999999972}, {'diff': 0.0003402909999999995}, {'diff': 0.0003381109999999986}, {'diff': 0.000339403000000002}, {'diff': 0.0003408199999999986}, {'diff': 0.0003385420000000007}, {'...</msg>
<status status="PASS" starttime="20201030 18:30:53.688" endtime="20201030 18:30:53.691"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:53.695" level="INFO">${ACCURACY} = {'diff': [0.0003367359999999972, 0.0003402909999999995, 0.0003381109999999986, 0.000339403000000002, 0.0003408199999999986, 0.0003385420000000007, 0.0003390139999999986, 0.0003390000000000025, 0.00033...</msg>
<status status="PASS" starttime="20201030 18:30:53.692" endtime="20201030 18:30:53.696"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:53.700" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201030 18:30:53.699" endtime="20201030 18:30:53.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:53.702" level="INFO">VALUE: [0.0003367359999999972, 0.0003402909999999995, 0.0003381109999999986, 0.000339403000000002, 0.0003408199999999986, 0.0003385420000000007, 0.0003390139999999986, 0.0003390000000000025, 0.00033837500000000187, 0.0003397360000000002, 0.0003398329999999977, 0.00033880500000000105, 0.0003389030000000015, 0.00033843100000000015, 0.00034067999999999946, 0.00034012500000000015, 0.0003395139999999991, 0.0003410139999999971, 0.0003400840000000009, 0.000338194, 0.0003407360000000012, 0.0003392359999999997, 0.0003397220000000041, 0.0003413329999999992, 0.00034, 0.0003386940000000005, 0.0003403469999999978, 0.00034044400000000224, 0.00034091599999999667, 0.0003395269999999992, 0.00033909800000000295, 0.00033865300000000126, 0.0003389030000000015, 0.00033993100000000165, 0.0003394170000000016, 0.00033816700000000033, 0.00034091699999999614, 0.00034073599999999427, 0.0003393889999999955, 0.00034087499999999743, 0.0003397499999999998, 0.0003384589999999993, 0.0003386940000000005, 0.00033931899999999765, 0.00034130599999999955, 0.00034058399999999794, 0.0003405689999999989, 0.0003386249999999952, 0.00033866700000000083, 0.0003391249999999957]</msg>
<status status="PASS" starttime="20201030 18:30:53.701" endtime="20201030 18:30:53.703"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.696" endtime="20201030 18:30:53.704"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:53.708" endtime="20201030 18:30:53.727"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.706" endtime="20201030 18:30:53.728"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.705" endtime="20201030 18:30:53.728"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.326" endtime="20201030 18:30:53.728"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.325" endtime="20201030 18:30:53.729"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:53.738" endtime="20201030 18:30:53.777"></status>
</kw>
<msg timestamp="20201030 18:30:53.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:53.736" endtime="20201030 18:30:53.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:53.780" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:53.778" endtime="20201030 18:30:53.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:53.781" endtime="20201030 18:30:53.783"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.733" endtime="20201030 18:30:53.783"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.731" endtime="20201030 18:30:53.784"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:53.791" endtime="20201030 18:30:54.078"></status>
</kw>
<msg timestamp="20201030 18:30:54.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026118792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026456097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:53.789" endtime="20201030 18:30:54.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:54.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026118792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026456097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:54.082" endtime="20201030 18:30:54.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:54.091" endtime="20201030 18:30:54.093"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.786" endtime="20201030 18:30:54.094"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.784" endtime="20201030 18:30:54.095"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:54.099" level="INFO">${RESULT} = [{'diff': 0.000337305000000003}, {'diff': 0.0003381390000000012}, {'diff': 0.00034008300000000144}, {'diff': 0.0003399169999999986}, {'diff': 0.00034116699999999986}, {'diff': 0.00034109699999999854},...</msg>
<status status="PASS" starttime="20201030 18:30:54.095" endtime="20201030 18:30:54.099"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:54.104" level="INFO">${ACCURACY} = {'diff': [0.000337305000000003, 0.0003381390000000012, 0.00034008300000000144, 0.0003399169999999986, 0.00034116699999999986, 0.00034109699999999854, 0.0003395970000000005, 0.0003381250000000016, 0.00...</msg>
<status status="PASS" starttime="20201030 18:30:54.100" endtime="20201030 18:30:54.104"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:54.109" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201030 18:30:54.108" endtime="20201030 18:30:54.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:54.116" level="INFO">VALUE: [0.000337305000000003, 0.0003381390000000012, 0.00034008300000000144, 0.0003399169999999986, 0.00034116699999999986, 0.00034109699999999854, 0.0003395970000000005, 0.0003381250000000016, 0.00033994499999999775, 0.00034, 0.0003406110000000011, 0.000340097000000001, 0.00034041599999999964, 0.00033827699999999794, 0.0003409439999999993, 0.0003390139999999986, 0.00034059699999999804, 0.00033931899999999765, 0.0003397499999999998, 0.0003414580000000028, 0.00033834700000000273, 0.0003402779999999994, 0.00033898599999999945, 0.00033941699999999464, 0.00034027699999999994, 0.00033958299999999747, 0.00033866700000000083, 0.00034102800000000016, 0.0003391800000000014, 0.0003393060000000045, 0.00033941599999999517, 0.0003383190000000036, 0.0003410140000000006, 0.00034016700000000233, 0.0003383049999999971, 0.0003409030000000035, 0.00033859699999999604, 0.00033952799999999866, 0.0003399030000000025, 0.0003405699999999984, 0.0003386520000000018, 0.00034126400000000084, 0.00033837500000000187, 0.00034090200000000404, 0.0003406109999999976, 0.0003393889999999955, 0.00033976399999999934, 0.0003410840000000054, 0.00033969500000000097, 0.0003401810000000019]</msg>
<status status="PASS" starttime="20201030 18:30:54.110" endtime="20201030 18:30:54.117"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.105" endtime="20201030 18:30:54.117"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:54.121" endtime="20201030 18:30:54.141"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.119" endtime="20201030 18:30:54.141"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.118" endtime="20201030 18:30:54.142"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.730" endtime="20201030 18:30:54.142"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.729" endtime="20201030 18:30:54.142"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:54.151" endtime="20201030 18:30:54.189"></status>
</kw>
<msg timestamp="20201030 18:30:54.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:54.149" endtime="20201030 18:30:54.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:54.192" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:54.191" endtime="20201030 18:30:54.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:54.194" endtime="20201030 18:30:54.195"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.147" endtime="20201030 18:30:54.196"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.145" endtime="20201030 18:30:54.196"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:54.203" endtime="20201030 18:30:54.489"></status>
</kw>
<msg timestamp="20201030 18:30:54.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024592403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024951583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:54.202" endtime="20201030 18:30:54.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:54.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024592403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024951583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:54.493" endtime="20201030 18:30:54.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:54.502" endtime="20201030 18:30:54.504"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.199" endtime="20201030 18:30:54.504"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.197" endtime="20201030 18:30:54.504"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:54.508" level="INFO">${RESULT} = [{'diff': 0.0003591800000000006}, {'diff': 0.00033901400000000206}, {'diff': 0.00033893100000000065}, {'diff': 0.0003395550000000018}, {'diff': 0.0003406949999999985}, {'diff': 0.0003409439999999993},...</msg>
<status status="PASS" starttime="20201030 18:30:54.505" endtime="20201030 18:30:54.509"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:54.514" level="INFO">${ACCURACY} = {'diff': [0.0003591800000000006, 0.00033901400000000206, 0.00033893100000000065, 0.0003395550000000018, 0.0003406949999999985, 0.0003409439999999993, 0.00034036100000000083, 0.0003393049999999981, 0.0...</msg>
<status status="PASS" starttime="20201030 18:30:54.509" endtime="20201030 18:30:54.514"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:54.518" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201030 18:30:54.517" endtime="20201030 18:30:54.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:54.521" level="INFO">VALUE: [0.0003591800000000006, 0.00033901400000000206, 0.00033893100000000065, 0.0003395550000000018, 0.0003406949999999985, 0.0003409439999999993, 0.00034036100000000083, 0.0003393049999999981, 0.00033990299999999904, 0.0003394580000000008, 0.0003405559999999988, 0.00033983400000000066, 0.0003397499999999998, 0.00033894400000000074, 0.0003398060000000015, 0.0003397369999999997, 0.0003391659999999984, 0.00033998600000000045, 0.000338806000000004, 0.0003392499999999993, 0.0003379719999999989, 0.0003407230000000011, 0.00034020800000000156, 0.000338888999999995, 0.0003408329999999987, 0.0003397919999999985, 0.0003403199999999981, 0.0003381250000000016, 0.00033955499999999833, 0.00034104199999999973, 0.00033937499999999593, 0.00033831899999999665, 0.00033937499999999593, 0.0003400840000000044, 0.0003382229999999986, 0.00033952799999999866, 0.0003383610000000023, 0.00033937500000000287, 0.0003401800000000024, 0.00033898599999999945, 0.00033898599999999945, 0.0003382770000000049, 0.00034077700000000044, 0.0003393190000000046, 0.00034047199999999445, 0.0003411810000000029, 0.0003404720000000014, 0.00033856900000000384, 0.00033848599999999895, 0.00033940299999999507]</msg>
<status status="PASS" starttime="20201030 18:30:54.519" endtime="20201030 18:30:54.522"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.514" endtime="20201030 18:30:54.522"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:54.526" endtime="20201030 18:30:54.545"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.524" endtime="20201030 18:30:54.546"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.523" endtime="20201030 18:30:54.546"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.143" endtime="20201030 18:30:54.547"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.142" endtime="20201030 18:30:54.547"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:54.556" endtime="20201030 18:30:54.590"></status>
</kw>
<msg timestamp="20201030 18:30:54.591" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:54.554" endtime="20201030 18:30:54.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:54.593" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:54.592" endtime="20201030 18:30:54.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:54.594" endtime="20201030 18:30:54.596"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.552" endtime="20201030 18:30:54.597"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.549" endtime="20201030 18:30:54.597"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:54.604" endtime="20201030 18:30:54.891"></status>
</kw>
<msg timestamp="20201030 18:30:54.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021737, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022084444, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:30:54.602" endtime="20201030 18:30:54.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:54.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021737, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022084444, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:30:54.895" endtime="20201030 18:30:54.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:54.903" endtime="20201030 18:30:54.905"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.599" endtime="20201030 18:30:54.906"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.598" endtime="20201030 18:30:54.906"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:54.910" level="INFO">${RESULT} = [{'diff': 0.0003474440000000023}, {'diff': 0.00033933400000000016}, {'diff': 0.0003407919999999995}, {'diff': 0.00033970800000000106}, {'diff': 0.000341000000000001}, {'diff': 0.00034073599999999774},...</msg>
<status status="PASS" starttime="20201030 18:30:54.907" endtime="20201030 18:30:54.910"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:54.914" level="INFO">${ACCURACY} = {'diff': [0.0003474440000000023, 0.00033933400000000016, 0.0003407919999999995, 0.00033970800000000106, 0.000341000000000001, 0.00034073599999999774, 0.0003406949999999985, 0.0003399170000000021, 0.00...</msg>
<status status="PASS" starttime="20201030 18:30:54.911" endtime="20201030 18:30:54.914"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:54.919" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201030 18:30:54.918" endtime="20201030 18:30:54.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:54.921" level="INFO">VALUE: [0.0003474440000000023, 0.00033933400000000016, 0.0003407919999999995, 0.00033970800000000106, 0.000341000000000001, 0.00034073599999999774, 0.0003406949999999985, 0.0003399170000000021, 0.0003396110000000001, 0.00034057000000000184, 0.000339194000000001, 0.00034002799999999916, 0.0003408199999999986, 0.00034016699999999886, 0.00033976399999999934, 0.0003393749999999994, 0.0003406110000000011, 0.00034012500000000015, 0.0003402909999999995, 0.0003395139999999991, 0.0003388330000000002, 0.000338306, 0.0003386529999999978, 0.0003404580000000018, 0.000338194, 0.00034088900000000047, 0.00033969500000000444, 0.00034090299999999657, 0.0003407500000000008, 0.0003403339999999977, 0.0003407079999999951, 0.00034072200000000163, 0.0003394580000000008, 0.0003403329999999982, 0.0003387220000000066, 0.0003383339999999957, 0.00033833400000000263, 0.000338194, 0.0003390689999999974, 0.0003385280000000046, 0.00033877699999999844, 0.0003391250000000026, 0.0003388469999999963, 0.0003382920000000039, 0.0003407779999999999, 0.00034132000000000606, 0.0003397360000000002, 0.00034124999999999434, 0.0003387229999999991, 0.0003398610000000038]</msg>
<status status="PASS" starttime="20201030 18:30:54.920" endtime="20201030 18:30:54.922"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.915" endtime="20201030 18:30:54.923"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:54.927" endtime="20201030 18:30:54.946"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.925" endtime="20201030 18:30:54.947"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.924" endtime="20201030 18:30:54.947"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.548" endtime="20201030 18:30:54.947"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.547" endtime="20201030 18:30:54.947"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:54.957" endtime="20201030 18:30:54.993"></status>
</kw>
<msg timestamp="20201030 18:30:54.993" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:54.955" endtime="20201030 18:30:54.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:54.996" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:54.995" endtime="20201030 18:30:54.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:54.997" endtime="20201030 18:30:54.999"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.952" endtime="20201030 18:30:54.999"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.950" endtime="20201030 18:30:55.000"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:55.007" endtime="20201030 18:30:55.293"></status>
</kw>
<msg timestamp="20201030 18:30:55.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023039264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023374333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:55.005" endtime="20201030 18:30:55.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:55.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023039264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023374333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:55.297" endtime="20201030 18:30:55.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:55.306" endtime="20201030 18:30:55.307"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.002" endtime="20201030 18:30:55.308"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.000" endtime="20201030 18:30:55.308"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:55.312" level="INFO">${RESULT} = [{'diff': 0.00033506900000000034}, {'diff': 0.0003389860000000029}, {'diff': 0.0003393200000000006}, {'diff': 0.0003398330000000012}, {'diff': 0.00034040299999999954}, {'diff': 0.00033844400000000024}...</msg>
<status status="PASS" starttime="20201030 18:30:55.309" endtime="20201030 18:30:55.313"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:55.316" level="INFO">${ACCURACY} = {'diff': [0.00033506900000000034, 0.0003389860000000029, 0.0003393200000000006, 0.0003398330000000012, 0.00034040299999999954, 0.00033844400000000024, 0.0003384170000000006, 0.00034104199999999973, 0....</msg>
<status status="PASS" starttime="20201030 18:30:55.313" endtime="20201030 18:30:55.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:55.321" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201030 18:30:55.320" endtime="20201030 18:30:55.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:55.324" level="INFO">VALUE: [0.00033506900000000034, 0.0003389860000000029, 0.0003393200000000006, 0.0003398330000000012, 0.00034040299999999954, 0.00033844400000000024, 0.0003384170000000006, 0.00034104199999999973, 0.00033875000000000224, 0.00033798599999999845, 0.00034, 0.00033994499999999775, 0.0003407500000000008, 0.00033801400000000106, 0.00033984700000000076, 0.000340985999999998, 0.00033887500000000237, 0.0003382779999999974, 0.00033915300000000176, 0.0003409169999999996, 0.00033948599999999995, 0.0003408750000000009, 0.0003398469999999973, 0.00034119500000000247, 0.0003402779999999994, 0.00033976399999999934, 0.0003398339999999972, 0.00034, 0.0003385699999999964, 0.0003394590000000003, 0.00034115300000000376, 0.0003411249999999977, 0.00034052799999999966, 0.000338291999999997, 0.0003391810000000009, 0.000340791, 0.0003412910000000005, 0.0003384300000000007, 0.0003384719999999994, 0.00034019399999999506, 0.0003397779999999989, 0.00033809699999999554, 0.00033904199999999773, 0.0003411799999999965, 0.0003392909999999985, 0.0003387779999999979, 0.0003405689999999989, 0.0003403469999999978, 0.00034094400000000274, 0.000340791]</msg>
<status status="PASS" starttime="20201030 18:30:55.322" endtime="20201030 18:30:55.325"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.317" endtime="20201030 18:30:55.326"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:55.330" endtime="20201030 18:30:55.349"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.328" endtime="20201030 18:30:55.350"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.327" endtime="20201030 18:30:55.350"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.948" endtime="20201030 18:30:55.350"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.948" endtime="20201030 18:30:55.350"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:55.360" endtime="20201030 18:30:55.396"></status>
</kw>
<msg timestamp="20201030 18:30:55.397" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:55.358" endtime="20201030 18:30:55.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:55.399" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:55.398" endtime="20201030 18:30:55.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:55.400" endtime="20201030 18:30:55.402"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.355" endtime="20201030 18:30:55.403"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.353" endtime="20201030 18:30:55.403"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:55.410" endtime="20201030 18:30:55.695"></status>
</kw>
<msg timestamp="20201030 18:30:55.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021860444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022201736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:55.408" endtime="20201030 18:30:55.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:55.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021860444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022201736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:55.699" endtime="20201030 18:30:55.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:55.708" endtime="20201030 18:30:55.709"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.406" endtime="20201030 18:30:55.710"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.404" endtime="20201030 18:30:55.710"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:55.715" level="INFO">${RESULT} = [{'diff': 0.000341292}, {'diff': 0.00033815300000000076}, {'diff': 0.00034036100000000083}, {'diff': 0.00033984700000000076}, {'diff': 0.0003399170000000021}, {'diff': 0.00034104199999999973}, {'diff'...</msg>
<status status="PASS" starttime="20201030 18:30:55.711" endtime="20201030 18:30:55.715"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:55.720" level="INFO">${ACCURACY} = {'diff': [0.000341292, 0.00033815300000000076, 0.00034036100000000083, 0.00033984700000000076, 0.0003399170000000021, 0.00034104199999999973, 0.00033820899999999904, 0.00034077700000000044, 0.00033882...</msg>
<status status="PASS" starttime="20201030 18:30:55.716" endtime="20201030 18:30:55.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:55.724" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201030 18:30:55.723" endtime="20201030 18:30:55.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:55.727" level="INFO">VALUE: [0.000341292, 0.00033815300000000076, 0.00034036100000000083, 0.00033984700000000076, 0.0003399170000000021, 0.00034104199999999973, 0.00033820899999999904, 0.00034077700000000044, 0.0003388200000000001, 0.00034120899999999857, 0.00033894400000000074, 0.00034036099999999736, 0.00033865300000000126, 0.00034054199999999923, 0.00034076400000000034, 0.00034070800000000206, 0.00033934799999999973, 0.0003394299999999982, 0.00033897300000000283, 0.0003399170000000021, 0.00034038899999999997, 0.0003392359999999997, 0.00034008299999999797, 0.0003396659999999989, 0.00033827699999999794, 0.000341000000000001, 0.00034045899999999435, 0.00034068099999999546, 0.0003391250000000026, 0.00033836200000000177, 0.00034076400000000034, 0.00034041699999999564, 0.0003385269999999982, 0.00034076400000000034, 0.00034061100000000455, 0.0003394999999999995, 0.0003397230000000001, 0.00034088900000000394, 0.0003401529999999958, 0.00034022200000000113, 0.00033834700000000273, 0.0003399579999999944, 0.00034041699999999564, 0.0003389170000000011, 0.0003398610000000038, 0.0003393329999999972, 0.0003405559999999988, 0.00034119499999999553, 0.0003399030000000025, 0.0003384449999999997]</msg>
<status status="PASS" starttime="20201030 18:30:55.725" endtime="20201030 18:30:55.728"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.720" endtime="20201030 18:30:55.728"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:55.732" endtime="20201030 18:30:55.751"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.730" endtime="20201030 18:30:55.752"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.729" endtime="20201030 18:30:55.752"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.351" endtime="20201030 18:30:55.753"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.351" endtime="20201030 18:30:55.753"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:55.762" endtime="20201030 18:30:55.796"></status>
</kw>
<msg timestamp="20201030 18:30:55.797" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:55.760" endtime="20201030 18:30:55.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:55.799" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:55.798" endtime="20201030 18:30:55.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:55.800" endtime="20201030 18:30:55.802"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.758" endtime="20201030 18:30:55.803"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.755" endtime="20201030 18:30:55.803"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:55.810" endtime="20201030 18:30:56.097"></status>
</kw>
<msg timestamp="20201030 18:30:56.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021366667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021709444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:55.808" endtime="20201030 18:30:56.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:56.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021366667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021709444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:56.101" endtime="20201030 18:30:56.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:56.110" endtime="20201030 18:30:56.111"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.806" endtime="20201030 18:30:56.112"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.804" endtime="20201030 18:30:56.112"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:56.117" level="INFO">${RESULT} = [{'diff': 0.00034277700000000244}, {'diff': 0.0003393749999999994}, {'diff': 0.00034116699999999986}, {'diff': 0.0003394720000000004}, {'diff': 0.00033833400000000263}, {'diff': 0.00034070800000000206...</msg>
<status status="PASS" starttime="20201030 18:30:56.113" endtime="20201030 18:30:56.117"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:56.121" level="INFO">${ACCURACY} = {'diff': [0.00034277700000000244, 0.0003393749999999994, 0.00034116699999999986, 0.0003394720000000004, 0.00033833400000000263, 0.00034070800000000206, 0.0003388749999999989, 0.00034086099999999786, 0...</msg>
<status status="PASS" starttime="20201030 18:30:56.118" endtime="20201030 18:30:56.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:56.127" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201030 18:30:56.125" endtime="20201030 18:30:56.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:56.130" level="INFO">VALUE: [0.00034277700000000244, 0.0003393749999999994, 0.00034116699999999986, 0.0003394720000000004, 0.00033833400000000263, 0.00034070800000000206, 0.0003388749999999989, 0.00034086099999999786, 0.00033919500000000047, 0.00034076400000000034, 0.00033808299999999944, 0.00034031899999999865, 0.0003400139999999996, 0.0003390839999999999, 0.00034, 0.00033888900000000194, 0.0003379160000000006, 0.00033880500000000105, 0.0003408199999999986, 0.0003382640000000013, 0.0003381390000000012, 0.0003402079999999981, 0.0003392499999999993, 0.0003400560000000018, 0.0003392780000000019, 0.00034008299999999797, 0.00033934700000000026, 0.0003382920000000039, 0.0003387499999999988, 0.0003409580000000023, 0.0003403329999999982, 0.0003387500000000057, 0.00033958299999999747, 0.00034052799999999966, 0.0003397360000000002, 0.00034131899999999965, 0.000338999999999999, 0.0003412360000000017, 0.00034102800000000016, 0.0003404300000000027, 0.0003404019999999966, 0.0003388610000000028, 0.0003393329999999972, 0.00033856900000000384, 0.0003404170000000026, 0.00034127700000000094, 0.0003381800000000004, 0.0003382920000000039, 0.00034037499999999693, 0.0003381250000000016]</msg>
<status status="PASS" starttime="20201030 18:30:56.128" endtime="20201030 18:30:56.130"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.123" endtime="20201030 18:30:56.131"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:56.136" endtime="20201030 18:30:56.157"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.133" endtime="20201030 18:30:56.158"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.132" endtime="20201030 18:30:56.158"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.754" endtime="20201030 18:30:56.159"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.753" endtime="20201030 18:30:56.159"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:56.174" endtime="20201030 18:30:56.213"></status>
</kw>
<msg timestamp="20201030 18:30:56.213" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:56.172" endtime="20201030 18:30:56.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:56.216" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:56.214" endtime="20201030 18:30:56.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:56.217" endtime="20201030 18:30:56.219"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.167" endtime="20201030 18:30:56.219"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.163" endtime="20201030 18:30:56.220"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:56.227" endtime="20201030 18:30:56.514"></status>
</kw>
<msg timestamp="20201030 18:30:56.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03272975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033067083, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:56.225" endtime="20201030 18:30:56.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:56.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03272975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033067083, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:56.518" endtime="20201030 18:30:56.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:56.526" endtime="20201030 18:30:56.528"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.222" endtime="20201030 18:30:56.529"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.220" endtime="20201030 18:30:56.529"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:56.533" level="INFO">${RESULT} = [{'diff': 0.0003373329999999952}, {'diff': 0.0003396250000000031}, {'diff': 0.0003409160000000036}, {'diff': 0.00033887500000000237}, {'diff': 0.00033894400000000074}, {'diff': 0.0003388329999999967},...</msg>
<status status="PASS" starttime="20201030 18:30:56.530" endtime="20201030 18:30:56.533"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:56.537" level="INFO">${ACCURACY} = {'diff': [0.0003373329999999952, 0.0003396250000000031, 0.0003409160000000036, 0.00033887500000000237, 0.00033894400000000074, 0.0003388329999999967, 0.0003400139999999996, 0.0003388339999999962, 0.00...</msg>
<status status="PASS" starttime="20201030 18:30:56.534" endtime="20201030 18:30:56.537"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:56.542" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201030 18:30:56.541" endtime="20201030 18:30:56.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:56.544" level="INFO">VALUE: [0.0003373329999999952, 0.0003396250000000031, 0.0003409160000000036, 0.00033887500000000237, 0.00033894400000000074, 0.0003388329999999967, 0.0003400139999999996, 0.0003388339999999962, 0.00033898599999999945, 0.0003386669999999939, 0.0003396669999999949, 0.00034006900000000534, 0.00034094400000000274, 0.00033894400000000074, 0.0003398339999999972, 0.0003388190000000041, 0.00033872199999999963, 0.00034144400000000324, 0.00034, 0.0003385700000000033, 0.00034081899999999915, 0.0003399030000000025, 0.00033965300000000226, 0.00033833300000000316, 0.0003403199999999981, 0.00033926399999999884, 0.00033838900000000144, 0.0003386810000000004, 0.0003391390000000022, 0.0003386380000000022, 0.00033820799999999956, 0.00034098600000000145, 0.0003401529999999958, 0.0003406390000000037, 0.00033954099999999876, 0.0003408610000000048, 0.0003388329999999967, 0.0003409030000000035, 0.0003401800000000024, 0.0003407500000000008, 0.0003384589999999993, 0.00033997300000000036, 0.0003410559999999993, 0.000338597000000003, 0.00033819499999999947, 0.0003391380000000027, 0.00034008299999999797, 0.0003391109999999961, 0.00033856900000000384, 0.00033893100000000065]</msg>
<status status="PASS" starttime="20201030 18:30:56.543" endtime="20201030 18:30:56.546"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.538" endtime="20201030 18:30:56.547"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:56.550" endtime="20201030 18:30:56.570"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.549" endtime="20201030 18:30:56.571"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.548" endtime="20201030 18:30:56.571"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.160" endtime="20201030 18:30:56.571"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.159" endtime="20201030 18:30:56.571"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:56.580" endtime="20201030 18:30:56.616"></status>
</kw>
<msg timestamp="20201030 18:30:56.616" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:56.579" endtime="20201030 18:30:56.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:56.619" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:56.617" endtime="20201030 18:30:56.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:56.620" endtime="20201030 18:30:56.622"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.576" endtime="20201030 18:30:56.622"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.574" endtime="20201030 18:30:56.623"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:56.629" endtime="20201030 18:30:56.915"></status>
</kw>
<msg timestamp="20201030 18:30:56.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021896236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022230611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:56.628" endtime="20201030 18:30:56.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:56.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021896236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022230611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:56.920" endtime="20201030 18:30:56.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:56.928" endtime="20201030 18:30:56.930"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.625" endtime="20201030 18:30:56.930"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.623" endtime="20201030 18:30:56.931"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:56.935" level="INFO">${RESULT} = [{'diff': 0.00033437500000000134}, {'diff': 0.000338291000000001}, {'diff': 0.00033958300000000094}, {'diff': 0.00033958300000000094}, {'diff': 0.00034054199999999923}, {'diff': 0.00034007000000000134...</msg>
<status status="PASS" starttime="20201030 18:30:56.931" endtime="20201030 18:30:56.935"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:56.940" level="INFO">${ACCURACY} = {'diff': [0.00033437500000000134, 0.000338291000000001, 0.00033958300000000094, 0.00033958300000000094, 0.00034054199999999923, 0.00034007000000000134, 0.0003394170000000016, 0.000340791, 0.0003387080...</msg>
<status status="PASS" starttime="20201030 18:30:56.936" endtime="20201030 18:30:56.940"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:56.944" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201030 18:30:56.943" endtime="20201030 18:30:56.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:56.947" level="INFO">VALUE: [0.00033437500000000134, 0.000338291000000001, 0.00033958300000000094, 0.00033958300000000094, 0.00034054199999999923, 0.00034007000000000134, 0.0003394170000000016, 0.000340791, 0.00033870800000000006, 0.0003384860000000024, 0.0003392780000000019, 0.0003406110000000011, 0.00033962499999999965, 0.00033893100000000065, 0.000338306, 0.000338403000000001, 0.00034049999999999706, 0.00034076400000000034, 0.00034090300000000004, 0.0003401529999999993, 0.0003381390000000012, 0.00034108300000000244, 0.0003407919999999995, 0.00033945799999999735, 0.00034005499999999883, 0.0003411810000000029, 0.00033926399999999884, 0.00033959800000000345, 0.0003409450000000022, 0.000341194000000003, 0.0003387919999999975, 0.0003409030000000035, 0.00033963899999999575, 0.000341000000000001, 0.000339888999999996, 0.00033908399999999644, 0.0003402089999999941, 0.0003384579999999998, 0.00034008299999999797, 0.00034123599999999477, 0.00033913899999999525, 0.00033959699999999704, 0.0003395269999999992, 0.00034097300000000136, 0.00033997300000000036, 0.0003386810000000004, 0.0003407079999999951, 0.000339806000000005, 0.0003398199999999976, 0.00033901300000000606]</msg>
<status status="PASS" starttime="20201030 18:30:56.946" endtime="20201030 18:30:56.948"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.941" endtime="20201030 18:30:56.948"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:56.952" endtime="20201030 18:30:56.972"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.951" endtime="20201030 18:30:56.972"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.949" endtime="20201030 18:30:56.973"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.572" endtime="20201030 18:30:56.973"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.572" endtime="20201030 18:30:56.973"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:56.982" endtime="20201030 18:30:57.018"></status>
</kw>
<msg timestamp="20201030 18:30:57.018" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:56.980" endtime="20201030 18:30:57.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:57.021" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:57.019" endtime="20201030 18:30:57.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:57.022" endtime="20201030 18:30:57.024"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.978" endtime="20201030 18:30:57.024"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.976" endtime="20201030 18:30:57.025"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:57.031" endtime="20201030 18:30:57.318"></status>
</kw>
<msg timestamp="20201030 18:30:57.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022054319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022387958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:57.030" endtime="20201030 18:30:57.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:57.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022054319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022387958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:57.323" endtime="20201030 18:30:57.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:57.331" endtime="20201030 18:30:57.333"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.027" endtime="20201030 18:30:57.333"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.025" endtime="20201030 18:30:57.334"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:57.338" level="INFO">${RESULT} = [{'diff': 0.00033363900000000016}, {'diff': 0.00034004099999999926}, {'diff': 0.00034012500000000015}, {'diff': 0.00033838900000000144}, {'diff': 0.000341000000000001}, {'diff': 0.0003388190000000006}...</msg>
<status status="PASS" starttime="20201030 18:30:57.335" endtime="20201030 18:30:57.338"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:57.342" level="INFO">${ACCURACY} = {'diff': [0.00033363900000000016, 0.00034004099999999926, 0.00034012500000000015, 0.00033838900000000144, 0.000341000000000001, 0.0003388190000000006, 0.0003396390000000027, 0.0003381390000000012, 0.0...</msg>
<status status="PASS" starttime="20201030 18:30:57.339" endtime="20201030 18:30:57.342"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:57.347" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201030 18:30:57.346" endtime="20201030 18:30:57.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:57.349" level="INFO">VALUE: [0.00033363900000000016, 0.00034004099999999926, 0.00034012500000000015, 0.00033838900000000144, 0.000341000000000001, 0.0003388190000000006, 0.0003396390000000027, 0.0003381390000000012, 0.00034004099999999926, 0.00033952799999999866, 0.00034076400000000034, 0.0003387359999999992, 0.00034090300000000004, 0.0003409720000000019, 0.00033815300000000076, 0.0003411530000000003, 0.000338096999999999, 0.00033933400000000016, 0.0003382640000000013, 0.0003383610000000023, 0.0003404439999999988, 0.0003398060000000015, 0.00034055499999999933, 0.0003408329999999987, 0.00034086100000000133, 0.0003383190000000036, 0.00033836099999999536, 0.00033809699999999554, 0.0003384300000000007, 0.0003410699999999989, 0.0003380139999999976, 0.0003389309999999937, 0.000339612000000003, 0.0003397779999999989, 0.000339403000000002, 0.0003389730000000063, 0.0003385700000000033, 0.00034072200000000163, 0.00033966700000000183, 0.0003379170000000001, 0.00034108399999999844, 0.0003402779999999994, 0.0003385280000000046, 0.00034076400000000034, 0.0003398329999999977, 0.00034069499999999503, 0.00033926399999999884, 0.0003412780000000004, 0.0003379719999999989, 0.00034091699999999614]</msg>
<status status="PASS" starttime="20201030 18:30:57.348" endtime="20201030 18:30:57.350"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.343" endtime="20201030 18:30:57.351"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:57.355" endtime="20201030 18:30:57.374"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.353" endtime="20201030 18:30:57.375"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.352" endtime="20201030 18:30:57.375"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.974" endtime="20201030 18:30:57.375"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.973" endtime="20201030 18:30:57.375"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:57.385" endtime="20201030 18:30:57.424"></status>
</kw>
<msg timestamp="20201030 18:30:57.425" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:57.383" endtime="20201030 18:30:57.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:57.427" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:57.426" endtime="20201030 18:30:57.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:57.428" endtime="20201030 18:30:57.430"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.380" endtime="20201030 18:30:57.431"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.378" endtime="20201030 18:30:57.431"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:57.438" endtime="20201030 18:30:57.724"></status>
</kw>
<msg timestamp="20201030 18:30:57.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026550847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026886417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:57.436" endtime="20201030 18:30:57.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:57.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026550847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026886417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:57.728" endtime="20201030 18:30:57.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:57.737" endtime="20201030 18:30:57.738"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.434" endtime="20201030 18:30:57.739"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.432" endtime="20201030 18:30:57.739"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:57.743" level="INFO">${RESULT} = [{'diff': 0.0003355700000000003}, {'diff': 0.00033929200000000145}, {'diff': 0.0003388749999999989}, {'diff': 0.00034070900000000154}, {'diff': 0.00033852799999999766}, {'diff': 0.0003404439999999988}...</msg>
<status status="PASS" starttime="20201030 18:30:57.740" endtime="20201030 18:30:57.744"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:57.748" level="INFO">${ACCURACY} = {'diff': [0.0003355700000000003, 0.00033929200000000145, 0.0003388749999999989, 0.00034070900000000154, 0.00033852799999999766, 0.0003404439999999988, 0.0003402779999999994, 0.00033843100000000015, 0....</msg>
<status status="PASS" starttime="20201030 18:30:57.744" endtime="20201030 18:30:57.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:57.752" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201030 18:30:57.751" endtime="20201030 18:30:57.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:57.758" level="INFO">VALUE: [0.0003355700000000003, 0.00033929200000000145, 0.0003388749999999989, 0.00034070900000000154, 0.00033852799999999766, 0.0003404439999999988, 0.0003402779999999994, 0.00033843100000000015, 0.0003402360000000007, 0.00034, 0.0003378329999999992, 0.0003395560000000013, 0.0003392780000000019, 0.0003398049999999986, 0.000339194000000001, 0.0003380970000000025, 0.00033843100000000015, 0.00034022200000000113, 0.000340485999999994, 0.0003394999999999995, 0.00034066700000000283, 0.00033873600000000614, 0.0003405700000000053, 0.0003401250000000036, 0.00033984700000000423, 0.0003386390000000017, 0.00033916600000000185, 0.00033952799999999866, 0.0003410140000000006, 0.0003411109999999981, 0.000338291999999997, 0.00033952799999999866, 0.0003399859999999935, 0.0003389170000000011, 0.0003404720000000014, 0.0003382920000000039, 0.00034070800000000206, 0.000338597000000003, 0.00033998600000000045, 0.0003381390000000012, 0.0003407360000000012, 0.0003388610000000028, 0.0003396390000000027, 0.0003384160000000011, 0.0003384719999999994, 0.00033811100000000205, 0.0003408199999999986, 0.0003392359999999997, 0.00033981899999999815, 0.0003401250000000036]</msg>
<status status="PASS" starttime="20201030 18:30:57.753" endtime="20201030 18:30:57.759"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.748" endtime="20201030 18:30:57.760"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:57.764" endtime="20201030 18:30:57.783"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.762" endtime="20201030 18:30:57.784"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.761" endtime="20201030 18:30:57.784"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.376" endtime="20201030 18:30:57.784"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.376" endtime="20201030 18:30:57.784"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:57.793" endtime="20201030 18:30:57.831"></status>
</kw>
<msg timestamp="20201030 18:30:57.831" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:57.792" endtime="20201030 18:30:57.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:57.834" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:57.832" endtime="20201030 18:30:57.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:57.835" endtime="20201030 18:30:57.837"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.789" endtime="20201030 18:30:57.837"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.787" endtime="20201030 18:30:57.838"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:57.844" endtime="20201030 18:30:58.131"></status>
</kw>
<msg timestamp="20201030 18:30:58.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024621556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024951472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:57.843" endtime="20201030 18:30:58.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:58.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024621556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024951472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:58.135" endtime="20201030 18:30:58.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:58.144" endtime="20201030 18:30:58.146"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.840" endtime="20201030 18:30:58.146"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.838" endtime="20201030 18:30:58.147"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:58.151" level="INFO">${RESULT} = [{'diff': 0.00032991599999999954}, {'diff': 0.0003400139999999996}, {'diff': 0.0003402779999999994}, {'diff': 0.00033988899999999947}, {'diff': 0.0003405420000000027}, {'diff': 0.0003392359999999997},...</msg>
<status status="PASS" starttime="20201030 18:30:58.148" endtime="20201030 18:30:58.152"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:58.157" level="INFO">${ACCURACY} = {'diff': [0.00032991599999999954, 0.0003400139999999996, 0.0003402779999999994, 0.00033988899999999947, 0.0003405420000000027, 0.0003392359999999997, 0.0003396529999999988, 0.0003406390000000002, 0.00...</msg>
<status status="PASS" starttime="20201030 18:30:58.152" endtime="20201030 18:30:58.157"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:58.162" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201030 18:30:58.161" endtime="20201030 18:30:58.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:58.164" level="INFO">VALUE: [0.00032991599999999954, 0.0003400139999999996, 0.0003402779999999994, 0.00033988899999999947, 0.0003405420000000027, 0.0003392359999999997, 0.0003396529999999988, 0.0003406390000000002, 0.00034116699999999986, 0.0003398060000000015, 0.00033836099999999883, 0.00034004100000000273, 0.00034, 0.0003400560000000018, 0.0003400139999999996, 0.00033936099999999983, 0.00034004199999999873, 0.00034040299999999954, 0.00033833300000000316, 0.00033987499999999643, 0.0003401380000000037, 0.0003389589999999998, 0.0003395139999999991, 0.00033959699999999704, 0.0003382640000000048, 0.0003402909999999995, 0.00034063899999999675, 0.00034059699999999804, 0.00033908299999999697, 0.00033826399999999784, 0.00033986099999999686, 0.00034102800000000016, 0.0003391390000000022, 0.00033943100000000115, 0.0003406390000000037, 0.00033959699999999704, 0.00033836099999999536, 0.0003390139999999986, 0.0003383049999999971, 0.00033902700000000563, 0.0003412910000000005, 0.0003381390000000012, 0.00033848599999999895, 0.0003402079999999946, 0.00033882000000000356, 0.00034072200000000163, 0.0003405699999999984, 0.0003387369999999987, 0.00033926399999999884, 0.00034077700000000044]</msg>
<status status="PASS" starttime="20201030 18:30:58.163" endtime="20201030 18:30:58.165"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.158" endtime="20201030 18:30:58.166"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:58.169" endtime="20201030 18:30:58.189"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.168" endtime="20201030 18:30:58.190"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.167" endtime="20201030 18:30:58.190"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.785" endtime="20201030 18:30:58.190"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.785" endtime="20201030 18:30:58.190"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:58.200" endtime="20201030 18:30:58.237"></status>
</kw>
<msg timestamp="20201030 18:30:58.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:58.198" endtime="20201030 18:30:58.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:58.241" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:58.239" endtime="20201030 18:30:58.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:58.242" endtime="20201030 18:30:58.243"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.195" endtime="20201030 18:30:58.244"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.193" endtime="20201030 18:30:58.244"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:58.251" endtime="20201030 18:30:58.539"></status>
</kw>
<msg timestamp="20201030 18:30:58.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025586667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025931694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:58.250" endtime="20201030 18:30:58.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:58.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025586667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025931694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:58.543" endtime="20201030 18:30:58.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:58.552" endtime="20201030 18:30:58.553"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.247" endtime="20201030 18:30:58.554"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.245" endtime="20201030 18:30:58.554"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:58.558" level="INFO">${RESULT} = [{'diff': 0.0003450270000000012}, {'diff': 0.0003380269999999977}, {'diff': 0.00034008299999999797}, {'diff': 0.0003398749999999999}, {'diff': 0.0003409720000000019}, {'diff': 0.0003399170000000021}, ...</msg>
<status status="PASS" starttime="20201030 18:30:58.555" endtime="20201030 18:30:58.559"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:58.562" level="INFO">${ACCURACY} = {'diff': [0.0003450270000000012, 0.0003380269999999977, 0.00034008299999999797, 0.0003398749999999999, 0.0003409720000000019, 0.0003399170000000021, 0.000339306000000001, 0.0003395269999999992, 0.0003...</msg>
<status status="PASS" starttime="20201030 18:30:58.559" endtime="20201030 18:30:58.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:58.567" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201030 18:30:58.566" endtime="20201030 18:30:58.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:58.569" level="INFO">VALUE: [0.0003450270000000012, 0.0003380269999999977, 0.00034008299999999797, 0.0003398749999999999, 0.0003409720000000019, 0.0003399170000000021, 0.000339306000000001, 0.0003395269999999992, 0.00034016699999999886, 0.00033872199999999963, 0.0003387499999999988, 0.0003384999999999985, 0.0003394720000000004, 0.00033819499999999947, 0.00033925000000000274, 0.0003393329999999972, 0.0003384589999999993, 0.00033809699999999554, 0.0003405840000000049, 0.00033816600000000085, 0.00033865300000000126, 0.0003406529999999963, 0.0003380139999999976, 0.00033958299999999747, 0.00034084700000000523, 0.00034108299999999897, 0.00033937500000000287, 0.00033819499999999947, 0.0003389030000000015, 0.00033948599999999995, 0.00033819499999999947, 0.0003408190000000061, 0.000338194, 0.0003388329999999967, 0.00033800000000000496, 0.00033981899999999815, 0.000340791, 0.00033944400000000124, 0.00034055600000000574, 0.00034065300000000326, 0.0003385700000000033, 0.00033937500000000287, 0.00034011100000000405, 0.00034005499999999883, 0.0003384720000000063, 0.00033905499999999783, 0.0003389170000000011, 0.0003413469999999988, 0.0003393610000000033, 0.0003388480000000027]</msg>
<status status="PASS" starttime="20201030 18:30:58.568" endtime="20201030 18:30:58.570"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.563" endtime="20201030 18:30:58.571"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:58.575" endtime="20201030 18:30:58.594"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.573" endtime="20201030 18:30:58.595"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.572" endtime="20201030 18:30:58.595"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.191" endtime="20201030 18:30:58.596"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.191" endtime="20201030 18:30:58.596"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:58.605" endtime="20201030 18:30:58.640"></status>
</kw>
<msg timestamp="20201030 18:30:58.641" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:58.603" endtime="20201030 18:30:58.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:58.643" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:58.642" endtime="20201030 18:30:58.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:58.645" endtime="20201030 18:30:58.646"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.601" endtime="20201030 18:30:58.647"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.598" endtime="20201030 18:30:58.647"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:58.654" endtime="20201030 18:30:58.940"></status>
</kw>
<msg timestamp="20201030 18:30:58.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022206514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022556375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:58.653" endtime="20201030 18:30:58.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:58.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022206514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022556375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:58.945" endtime="20201030 18:30:58.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:58.953" endtime="20201030 18:30:58.955"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.650" endtime="20201030 18:30:58.955"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.648" endtime="20201030 18:30:58.956"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:58.960" level="INFO">${RESULT} = [{'diff': 0.0003498609999999999}, {'diff': 0.0003397779999999989}, {'diff': 0.00033854199999999723}, {'diff': 0.0003411520000000008}, {'diff': 0.00033884799999999923}, {'diff': 0.00034040299999999954}...</msg>
<status status="PASS" starttime="20201030 18:30:58.957" endtime="20201030 18:30:58.960"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:58.964" level="INFO">${ACCURACY} = {'diff': [0.0003498609999999999, 0.0003397779999999989, 0.00033854199999999723, 0.0003411520000000008, 0.00033884799999999923, 0.00034040299999999954, 0.0003399580000000013, 0.0003382499999999983, 0.0...</msg>
<status status="PASS" starttime="20201030 18:30:58.961" endtime="20201030 18:30:58.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:58.969" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201030 18:30:58.967" endtime="20201030 18:30:58.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:58.971" level="INFO">VALUE: [0.0003498609999999999, 0.0003397779999999989, 0.00033854199999999723, 0.0003411520000000008, 0.00033884799999999923, 0.00034040299999999954, 0.0003399580000000013, 0.0003382499999999983, 0.00034047300000000086, 0.0003410269999999972, 0.00034122200000000213, 0.0003400139999999996, 0.00033880500000000105, 0.000338291999999997, 0.000340888000000001, 0.0003408200000000021, 0.00033908300000000044, 0.00034138900000000097, 0.0003412079999999991, 0.00034033400000000116, 0.00033902800000000163, 0.00034094499999999875, 0.00034008299999999797, 0.000338194, 0.0003385840000000029, 0.00033858299999999647, 0.0003395269999999992, 0.0003404300000000027, 0.0003385269999999982, 0.00033888800000000247, 0.0003404170000000026, 0.00034130599999999955, 0.00033855600000000374, 0.00033820799999999956, 0.0003404170000000026, 0.0003411249999999977, 0.00033833300000000316, 0.00033794399999999974, 0.00033832000000000306, 0.0003399720000000009, 0.0003393610000000033, 0.0003405000000000005, 0.0003410559999999993, 0.00033916700000000133, 0.00033870800000000006, 0.0003403329999999982, 0.00034105499999999983, 0.0003387779999999979, 0.0003388610000000028, 0.0003409580000000023]</msg>
<status status="PASS" starttime="20201030 18:30:58.970" endtime="20201030 18:30:58.973"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.965" endtime="20201030 18:30:58.973"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:58.977" endtime="20201030 18:30:58.997"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.976" endtime="20201030 18:30:58.997"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.974" endtime="20201030 18:30:58.997"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.597" endtime="20201030 18:30:58.998"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.596" endtime="20201030 18:30:58.998"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:59.007" endtime="20201030 18:30:59.042"></status>
</kw>
<msg timestamp="20201030 18:30:59.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:59.006" endtime="20201030 18:30:59.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:59.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:59.044" endtime="20201030 18:30:59.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:59.046" endtime="20201030 18:30:59.048"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.003" endtime="20201030 18:30:59.049"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.001" endtime="20201030 18:30:59.049"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:59.056" endtime="20201030 18:30:59.341"></status>
</kw>
<msg timestamp="20201030 18:30:59.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021838431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022181319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:59.054" endtime="20201030 18:30:59.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:59.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021838431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022181319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:59.345" endtime="20201030 18:30:59.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:59.354" endtime="20201030 18:30:59.355"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.051" endtime="20201030 18:30:59.356"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.050" endtime="20201030 18:30:59.356"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:59.360" level="INFO">${RESULT} = [{'diff': 0.000342888000000003}, {'diff': 0.0003411379999999978}, {'diff': 0.00033901400000000206}, {'diff': 0.0003409439999999993}, {'diff': 0.0003386940000000005}, {'diff': 0.00033815300000000076}, ...</msg>
<status status="PASS" starttime="20201030 18:30:59.357" endtime="20201030 18:30:59.361"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:59.366" level="INFO">${ACCURACY} = {'diff': [0.000342888000000003, 0.0003411379999999978, 0.00033901400000000206, 0.0003409439999999993, 0.0003386940000000005, 0.00033815300000000076, 0.00033862499999999865, 0.00033936099999999983, 0.0...</msg>
<status status="PASS" starttime="20201030 18:30:59.362" endtime="20201030 18:30:59.366"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:59.370" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201030 18:30:59.369" endtime="20201030 18:30:59.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:59.373" level="INFO">VALUE: [0.000342888000000003, 0.0003411379999999978, 0.00033901400000000206, 0.0003409439999999993, 0.0003386940000000005, 0.00033815300000000076, 0.00033862499999999865, 0.00033936099999999983, 0.0003410840000000019, 0.000340194999999998, 0.0003391800000000014, 0.00033879200000000095, 0.00033856900000000037, 0.000341306000000003, 0.0003402360000000007, 0.00034037499999999693, 0.000341000000000001, 0.0003404300000000027, 0.00033886099999999933, 0.00033856999999999984, 0.00033995799999999785, 0.0003412500000000013, 0.0003399169999999986, 0.00033808299999999944, 0.00033862499999999865, 0.00034072199999999817, 0.00034019500000000147, 0.0003412910000000005, 0.00034020800000000156, 0.0003413469999999988, 0.0003394590000000003, 0.0003395139999999991, 0.000340888999999997, 0.00034004199999999873, 0.00033937499999999593, 0.00033887500000000237, 0.0003393610000000033, 0.00034, 0.0003411109999999981, 0.0003381390000000012, 0.0003409590000000018, 0.00033904199999999773, 0.0003398610000000038, 0.0003390970000000035, 0.0003385420000000042, 0.0003394999999999995, 0.000339790999999999, 0.00034020900000000104, 0.00033827800000000435, 0.00033988900000000294]</msg>
<status status="PASS" starttime="20201030 18:30:59.371" endtime="20201030 18:30:59.374"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.367" endtime="20201030 18:30:59.374"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:59.378" endtime="20201030 18:30:59.397"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.376" endtime="20201030 18:30:59.398"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.375" endtime="20201030 18:30:59.398"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.999" endtime="20201030 18:30:59.399"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.998" endtime="20201030 18:30:59.399"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:59.408" endtime="20201030 18:30:59.444"></status>
</kw>
<msg timestamp="20201030 18:30:59.444" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:59.406" endtime="20201030 18:30:59.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:59.447" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:59.445" endtime="20201030 18:30:59.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:59.448" endtime="20201030 18:30:59.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.404" endtime="20201030 18:30:59.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.402" endtime="20201030 18:30:59.451"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:59.457" endtime="20201030 18:30:59.744"></status>
</kw>
<msg timestamp="20201030 18:30:59.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022790139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023130306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:59.456" endtime="20201030 18:30:59.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:59.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022790139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023130306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:59.748" endtime="20201030 18:30:59.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:59.757" endtime="20201030 18:30:59.759"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.453" endtime="20201030 18:30:59.759"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.451" endtime="20201030 18:30:59.760"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:59.764" level="INFO">${RESULT} = [{'diff': 0.00034016699999999886}, {'diff': 0.000338597999999999}, {'diff': 0.0003382359999999987}, {'diff': 0.0003380970000000025}, {'diff': 0.0003407919999999995}, {'diff': 0.000339097}, {'diff': 0....</msg>
<status status="PASS" starttime="20201030 18:30:59.761" endtime="20201030 18:30:59.764"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:59.768" level="INFO">${ACCURACY} = {'diff': [0.00034016699999999886, 0.000338597999999999, 0.0003382359999999987, 0.0003380970000000025, 0.0003407919999999995, 0.000339097, 0.0003399299999999987, 0.0003383749999999984, 0.00033991699999...</msg>
<status status="PASS" starttime="20201030 18:30:59.765" endtime="20201030 18:30:59.768"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:59.773" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201030 18:30:59.772" endtime="20201030 18:30:59.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:59.775" level="INFO">VALUE: [0.00034016699999999886, 0.000338597999999999, 0.0003382359999999987, 0.0003380970000000025, 0.0003407919999999995, 0.000339097, 0.0003399299999999987, 0.0003383749999999984, 0.0003399169999999986, 0.00033948599999999995, 0.00033898599999999945, 0.0003394580000000008, 0.00033852800000000113, 0.0003409580000000023, 0.0003404859999999975, 0.00034009699999999754, 0.0003388060000000005, 0.00034016700000000233, 0.00034099999999999756, 0.0003398749999999999, 0.00033793099999999965, 0.0003405970000000015, 0.0003404439999999988, 0.0003391109999999996, 0.0003395139999999991, 0.0003404160000000031, 0.00033820799999999956, 0.00034063899999999675, 0.00034118099999999596, 0.0003396800000000019, 0.0003406249999999972, 0.0003396109999999966, 0.00033788900000000094, 0.0003385830000000034, 0.00034043100000000215, 0.0003392499999999993, 0.00034032000000000506, 0.0003393199999999971, 0.00034080599999999905, 0.0003387920000000044, 0.00034069399999999556, 0.00033938900000000244, 0.0003394590000000003, 0.00034054099999999976, 0.0003409300000000032, 0.00033827699999999794, 0.0003399450000000012, 0.0003386940000000005, 0.00034080599999999905, 0.0003405270000000002]</msg>
<status status="PASS" starttime="20201030 18:30:59.774" endtime="20201030 18:30:59.776"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.769" endtime="20201030 18:30:59.777"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:59.780" endtime="20201030 18:30:59.800"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.779" endtime="20201030 18:30:59.801"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.778" endtime="20201030 18:30:59.801"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.400" endtime="20201030 18:30:59.801"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.399" endtime="20201030 18:30:59.802"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:59.810" endtime="20201030 18:30:59.846"></status>
</kw>
<msg timestamp="20201030 18:30:59.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:59.809" endtime="20201030 18:30:59.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:59.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:59.848" endtime="20201030 18:30:59.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:59.850" endtime="20201030 18:30:59.852"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.806" endtime="20201030 18:30:59.853"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.804" endtime="20201030 18:30:59.853"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:59.860" endtime="20201030 18:31:00.147"></status>
</kw>
<msg timestamp="20201030 18:31:00.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022149125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022502833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:59.858" endtime="20201030 18:31:00.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:00.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022149125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022502833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:00.151" endtime="20201030 18:31:00.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:00.159" endtime="20201030 18:31:00.161"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.856" endtime="20201030 18:31:00.162"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.854" endtime="20201030 18:31:00.162"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:00.166" level="INFO">${RESULT} = [{'diff': 0.0003537080000000012}, {'diff': 0.0003388610000000028}, {'diff': 0.0003401659999999994}, {'diff': 0.00033968099999999793}, {'diff': 0.0003384860000000024}, {'diff': 0.00034084700000000176},...</msg>
<status status="PASS" starttime="20201030 18:31:00.163" endtime="20201030 18:31:00.166"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:00.170" level="INFO">${ACCURACY} = {'diff': [0.0003537080000000012, 0.0003388610000000028, 0.0003401659999999994, 0.00033968099999999793, 0.0003384860000000024, 0.00034084700000000176, 0.0003410140000000006, 0.0003399580000000013, 0.00...</msg>
<status status="PASS" starttime="20201030 18:31:00.167" endtime="20201030 18:31:00.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:00.175" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201030 18:31:00.174" endtime="20201030 18:31:00.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:00.178" level="INFO">VALUE: [0.0003537080000000012, 0.0003388610000000028, 0.0003401659999999994, 0.00033968099999999793, 0.0003384860000000024, 0.00034084700000000176, 0.0003410140000000006, 0.0003399580000000013, 0.00033862499999999865, 0.0003391810000000009, 0.0003408469999999983, 0.00034067999999999946, 0.0003385550000000008, 0.00033856999999999984, 0.00033994499999999775, 0.00033852800000000113, 0.0003390139999999986, 0.00033833400000000263, 0.0003403199999999981, 0.00033851400000000156, 0.00034004099999999926, 0.00033958300000000094, 0.00034090300000000004, 0.00033970800000000106, 0.00034087499999999743, 0.0003387919999999975, 0.0003405000000000005, 0.0003383329999999962, 0.0003412500000000013, 0.0003398329999999977, 0.000338806000000004, 0.0003379170000000001, 0.00033869499999999997, 0.00034091599999999667, 0.00034069399999999556, 0.0003387499999999988, 0.00033986099999999686, 0.0003404439999999953, 0.000340597000000005, 0.0003405140000000001, 0.000340485999999994, 0.00034087500000000437, 0.0003386390000000017, 0.00034033400000000463, 0.00033944400000000124, 0.00033887499999999543, 0.00034090299999999657, 0.00034009699999999754, 0.0003409450000000022, 0.0003410140000000006]</msg>
<status status="PASS" starttime="20201030 18:31:00.176" endtime="20201030 18:31:00.183"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.171" endtime="20201030 18:31:00.184"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:00.188" endtime="20201030 18:31:00.208"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.187" endtime="20201030 18:31:00.209"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.185" endtime="20201030 18:31:00.209"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.802" endtime="20201030 18:31:00.209"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.802" endtime="20201030 18:31:00.209"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:00.218" endtime="20201030 18:31:00.253"></status>
</kw>
<msg timestamp="20201030 18:31:00.254" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:00.217" endtime="20201030 18:31:00.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:00.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:00.255" endtime="20201030 18:31:00.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:00.257" endtime="20201030 18:31:00.259"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.214" endtime="20201030 18:31:00.259"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.212" endtime="20201030 18:31:00.260"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:00.267" endtime="20201030 18:31:00.553"></status>
</kw>
<msg timestamp="20201030 18:31:00.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021262764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021602972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:00.265" endtime="20201030 18:31:00.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:00.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021262764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021602972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:00.557" endtime="20201030 18:31:00.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:00.566" endtime="20201030 18:31:00.567"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.262" endtime="20201030 18:31:00.568"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.261" endtime="20201030 18:31:00.568"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:00.572" level="INFO">${RESULT} = [{'diff': 0.00034020800000000156}, {'diff': 0.00034062500000000065}, {'diff': 0.0003388330000000002}, {'diff': 0.00034022199999999767}, {'diff': 0.0003403190000000021}, {'diff': 0.0003404170000000026}...</msg>
<status status="PASS" starttime="20201030 18:31:00.569" endtime="20201030 18:31:00.573"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:00.577" level="INFO">${ACCURACY} = {'diff': [0.00034020800000000156, 0.00034062500000000065, 0.0003388330000000002, 0.00034022199999999767, 0.0003403190000000021, 0.0003404170000000026, 0.0003384999999999985, 0.00033938899999999897, 0....</msg>
<status status="PASS" starttime="20201030 18:31:00.573" endtime="20201030 18:31:00.578"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:00.582" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201030 18:31:00.581" endtime="20201030 18:31:00.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:00.585" level="INFO">VALUE: [0.00034020800000000156, 0.00034062500000000065, 0.0003388330000000002, 0.00034022199999999767, 0.0003403190000000021, 0.0003404170000000026, 0.0003384999999999985, 0.00033938899999999897, 0.0003411390000000007, 0.0003387779999999979, 0.000338500000000002, 0.0003391659999999984, 0.0003404590000000013, 0.0003394169999999981, 0.00034026399999999984, 0.00034052799999999966, 0.0003392909999999985, 0.0003384719999999994, 0.00033851400000000156, 0.00034116699999999986, 0.00033988899999999947, 0.00034066699999999936, 0.0003408469999999983, 0.0003391389999999987, 0.0003409299999999997, 0.00033965300000000226, 0.0003405270000000002, 0.00033820799999999956, 0.0003406940000000025, 0.0003389719999999999, 0.00033976399999999934, 0.00034016700000000233, 0.00033815300000000076, 0.0003401810000000019, 0.00034054099999999976, 0.0003403339999999977, 0.00034059699999999804, 0.0003386250000000021, 0.0003401529999999958, 0.0003399300000000022, 0.0003406659999999964, 0.0003382229999999986, 0.0003393889999999955, 0.0003390139999999986, 0.0003391800000000014, 0.00034108299999999897, 0.0003391249999999957, 0.00033855500000000427, 0.00034008399999999744, 0.00034130599999999955]</msg>
<status status="PASS" starttime="20201030 18:31:00.583" endtime="20201030 18:31:00.586"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.578" endtime="20201030 18:31:00.586"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:00.590" endtime="20201030 18:31:00.609"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.588" endtime="20201030 18:31:00.610"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.587" endtime="20201030 18:31:00.610"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.210" endtime="20201030 18:31:00.611"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.210" endtime="20201030 18:31:00.611"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:00.620" endtime="20201030 18:31:00.655"></status>
</kw>
<msg timestamp="20201030 18:31:00.655" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:00.618" endtime="20201030 18:31:00.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:00.658" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:00.656" endtime="20201030 18:31:00.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:00.659" endtime="20201030 18:31:00.661"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.616" endtime="20201030 18:31:00.661"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.613" endtime="20201030 18:31:00.662"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:00.668" endtime="20201030 18:31:00.956"></status>
</kw>
<msg timestamp="20201030 18:31:00.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021716167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022052222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:00.667" endtime="20201030 18:31:00.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:00.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021716167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022052222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:00.960" endtime="20201030 18:31:00.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:00.968" endtime="20201030 18:31:00.970"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.664" endtime="20201030 18:31:00.971"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.662" endtime="20201030 18:31:00.971"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:00.975" level="INFO">${RESULT} = [{'diff': 0.0003360549999999983}, {'diff': 0.0003399309999999982}, {'diff': 0.0003394170000000016}, {'diff': 0.00033986100000000033}, {'diff': 0.00033861100000000255}, {'diff': 0.00033866600000000135}...</msg>
<status status="PASS" starttime="20201030 18:31:00.972" endtime="20201030 18:31:00.975"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:00.979" level="INFO">${ACCURACY} = {'diff': [0.0003360549999999983, 0.0003399309999999982, 0.0003394170000000016, 0.00033986100000000033, 0.00033861100000000255, 0.00033866600000000135, 0.0003385839999999994, 0.00033866700000000083, 0....</msg>
<status status="PASS" starttime="20201030 18:31:00.976" endtime="20201030 18:31:00.979"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:00.984" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201030 18:31:00.983" endtime="20201030 18:31:00.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:00.986" level="INFO">VALUE: [0.0003360549999999983, 0.0003399309999999982, 0.0003394170000000016, 0.00033986100000000033, 0.00033861100000000255, 0.00033866600000000135, 0.0003385839999999994, 0.00033866700000000083, 0.00034108299999999897, 0.0003399169999999986, 0.0003409169999999996, 0.0003403469999999978, 0.00034138900000000097, 0.00034066699999999936, 0.00034018099999999843, 0.0003389719999999999, 0.0003412780000000004, 0.0003396940000000015, 0.0003396110000000001, 0.000338194, 0.00033888899999999847, 0.0003408329999999987, 0.00034081899999999915, 0.00033798599999999845, 0.0003385139999999981, 0.00033898599999999945, 0.0003383329999999997, 0.00034008299999999797, 0.00033922200000000013, 0.0003401659999999959, 0.000339806000000005, 0.0003388610000000028, 0.0003399030000000025, 0.0003387779999999979, 0.00033987499999999643, 0.0003402779999999994, 0.0003412360000000017, 0.0003406109999999976, 0.00034098600000000145, 0.00034044400000000224, 0.00034086199999999733, 0.0003409170000000031, 0.0003382909999999975, 0.00034095899999999485, 0.0003399590000000008, 0.00034054199999999923, 0.0003406810000000024, 0.0003383190000000036, 0.00033940200000000253, 0.00033934700000000373]</msg>
<status status="PASS" starttime="20201030 18:31:00.985" endtime="20201030 18:31:00.987"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.980" endtime="20201030 18:31:00.988"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:00.992" endtime="20201030 18:31:01.011"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.990" endtime="20201030 18:31:01.012"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.989" endtime="20201030 18:31:01.012"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.612" endtime="20201030 18:31:01.013"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.611" endtime="20201030 18:31:01.013"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:01.022" endtime="20201030 18:31:01.058"></status>
</kw>
<msg timestamp="20201030 18:31:01.059" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:01.020" endtime="20201030 18:31:01.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:01.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:01.060" endtime="20201030 18:31:01.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:01.062" endtime="20201030 18:31:01.064"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.017" endtime="20201030 18:31:01.065"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.015" endtime="20201030 18:31:01.065"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:01.072" endtime="20201030 18:31:01.358"></status>
</kw>
<msg timestamp="20201030 18:31:01.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021788139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022141028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:01.070" endtime="20201030 18:31:01.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:01.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021788139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022141028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:01.363" endtime="20201030 18:31:01.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:01.371" endtime="20201030 18:31:01.373"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.067" endtime="20201030 18:31:01.373"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.066" endtime="20201030 18:31:01.374"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:01.378" level="INFO">${RESULT} = [{'diff': 0.0003528889999999986}, {'diff': 0.0003405560000000023}, {'diff': 0.00033926399999999884}, {'diff': 0.0003411110000000016}, {'diff': 0.0003398200000000011}, {'diff': 0.0003391519999999988}, ...</msg>
<status status="PASS" starttime="20201030 18:31:01.374" endtime="20201030 18:31:01.378"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:01.382" level="INFO">${ACCURACY} = {'diff': [0.0003528889999999986, 0.0003405560000000023, 0.00033926399999999884, 0.0003411110000000016, 0.0003398200000000011, 0.0003391519999999988, 0.0003411530000000003, 0.00033893100000000065, 0.00...</msg>
<status status="PASS" starttime="20201030 18:31:01.379" endtime="20201030 18:31:01.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:01.386" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201030 18:31:01.385" endtime="20201030 18:31:01.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:01.392" level="INFO">VALUE: [0.0003528889999999986, 0.0003405560000000023, 0.00033926399999999884, 0.0003411110000000016, 0.0003398200000000011, 0.0003391519999999988, 0.0003411530000000003, 0.00033893100000000065, 0.0003408200000000021, 0.0003406390000000002, 0.0003403880000000005, 0.0003386109999999991, 0.0003391109999999996, 0.00033916600000000185, 0.0003407500000000008, 0.00034016699999999886, 0.0003409309999999992, 0.000338306, 0.0003400560000000018, 0.00033934700000000026, 0.00033837500000000187, 0.0003387919999999975, 0.00034076400000000034, 0.0003384999999999985, 0.000340097000000001, 0.00033887500000000237, 0.00033931899999999765, 0.00033913899999999525, 0.00033872199999999963, 0.0003394170000000016, 0.00034076400000000034, 0.00034119500000000247, 0.00034088900000000394, 0.00034036099999999736, 0.00034019500000000147, 0.00033988900000000294, 0.0003404579999999949, 0.0003381809999999999, 0.00033970800000000106, 0.00033934700000000373, 0.00034, 0.00033958399999999694, 0.00034069500000000197, 0.00033959800000000345, 0.00033966600000000235, 0.0003385139999999981, 0.0003391810000000009, 0.0003390970000000035, 0.0003411109999999981, 0.0003393329999999972]</msg>
<status status="PASS" starttime="20201030 18:31:01.388" endtime="20201030 18:31:01.393"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.383" endtime="20201030 18:31:01.394"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:01.398" endtime="20201030 18:31:01.417"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.396" endtime="20201030 18:31:01.418"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.395" endtime="20201030 18:31:01.418"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.014" endtime="20201030 18:31:01.418"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.013" endtime="20201030 18:31:01.419"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:01.428" endtime="20201030 18:31:01.463"></status>
</kw>
<msg timestamp="20201030 18:31:01.463" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:01.426" endtime="20201030 18:31:01.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:01.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:01.465" endtime="20201030 18:31:01.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:01.467" endtime="20201030 18:31:01.469"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.423" endtime="20201030 18:31:01.469"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.421" endtime="20201030 18:31:01.470"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:01.477" endtime="20201030 18:31:01.763"></status>
</kw>
<msg timestamp="20201030 18:31:01.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022738222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023071444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:01.475" endtime="20201030 18:31:01.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:01.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022738222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023071444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:01.767" endtime="20201030 18:31:01.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:01.776" endtime="20201030 18:31:01.778"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.472" endtime="20201030 18:31:01.778"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.470" endtime="20201030 18:31:01.779"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:01.783" level="INFO">${RESULT} = [{'diff': 0.00033322200000000107}, {'diff': 0.00033908300000000044}, {'diff': 0.0003399169999999986}, {'diff': 0.00034106900000000287}, {'diff': 0.00033870899999999954}, {'diff': 0.0003409030000000000...</msg>
<status status="PASS" starttime="20201030 18:31:01.779" endtime="20201030 18:31:01.783"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:01.788" level="INFO">${ACCURACY} = {'diff': [0.00033322200000000107, 0.00033908300000000044, 0.0003399169999999986, 0.00034106900000000287, 0.00033870899999999954, 0.00034090300000000004, 0.0003401110000000006, 0.00034102800000000016, ...</msg>
<status status="PASS" starttime="20201030 18:31:01.784" endtime="20201030 18:31:01.788"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:01.792" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201030 18:31:01.791" endtime="20201030 18:31:01.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:01.795" level="INFO">VALUE: [0.00033322200000000107, 0.00033908300000000044, 0.0003399169999999986, 0.00034106900000000287, 0.00033870899999999954, 0.00034090300000000004, 0.0003401110000000006, 0.00034102800000000016, 0.0003392359999999997, 0.0003397779999999989, 0.00033834700000000273, 0.00034101299999999765, 0.00034086099999999786, 0.00034138900000000097, 0.0003389169999999976, 0.0003396110000000001, 0.0003408200000000021, 0.0003413880000000015, 0.00033836099999999883, 0.00034137499999999793, 0.0003406390000000002, 0.0003396810000000014, 0.0003394309999999977, 0.00033920800000000056, 0.0003408610000000048, 0.0003392359999999997, 0.00034026300000000037, 0.0003388199999999966, 0.00033966700000000183, 0.0003412370000000012, 0.0003403480000000042, 0.00034122200000000213, 0.0003404720000000014, 0.0003384720000000063, 0.00033886199999999533, 0.0003384589999999993, 0.00033826399999999784, 0.0003396810000000014, 0.0003413610000000053, 0.00033976399999999934, 0.00034087499999999743, 0.0003406940000000025, 0.0003409450000000022, 0.00033909800000000295, 0.00033983300000000466, 0.0003411799999999965, 0.00034020900000000104, 0.0003391249999999957, 0.00034086099999999786, 0.00034130599999999955]</msg>
<status status="PASS" starttime="20201030 18:31:01.794" endtime="20201030 18:31:01.796"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.789" endtime="20201030 18:31:01.796"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:01.800" endtime="20201030 18:31:01.820"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.799" endtime="20201030 18:31:01.820"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.797" endtime="20201030 18:31:01.820"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.420" endtime="20201030 18:31:01.821"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.419" endtime="20201030 18:31:01.821"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:01.830" endtime="20201030 18:31:01.866"></status>
</kw>
<msg timestamp="20201030 18:31:01.866" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:01.828" endtime="20201030 18:31:01.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:01.870" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:01.867" endtime="20201030 18:31:01.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:01.873" endtime="20201030 18:31:01.875"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.826" endtime="20201030 18:31:01.876"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.824" endtime="20201030 18:31:01.877"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:01.886" endtime="20201030 18:31:02.188"></status>
</kw>
<msg timestamp="20201030 18:31:02.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022257667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022595153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:01.884" endtime="20201030 18:31:02.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:02.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022257667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022595153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:02.198" endtime="20201030 18:31:02.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:02.218" endtime="20201030 18:31:02.221"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.881" endtime="20201030 18:31:02.223"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.879" endtime="20201030 18:31:02.223"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:02.228" level="INFO">${RESULT} = [{'diff': 0.0003374860000000014}, {'diff': 0.0003380559999999998}, {'diff': 0.0003404859999999975}, {'diff': 0.00033930599999999755}, {'diff': 0.00033834700000000273}, {'diff': 0.0003406940000000025},...</msg>
<status status="PASS" starttime="20201030 18:31:02.224" endtime="20201030 18:31:02.228"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:02.232" level="INFO">${ACCURACY} = {'diff': [0.0003374860000000014, 0.0003380559999999998, 0.0003404859999999975, 0.00033930599999999755, 0.00033834700000000273, 0.0003406940000000025, 0.0003388749999999989, 0.00034038899999999997, 0.0...</msg>
<status status="PASS" starttime="20201030 18:31:02.229" endtime="20201030 18:31:02.232"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:02.237" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201030 18:31:02.236" endtime="20201030 18:31:02.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:02.239" level="INFO">VALUE: [0.0003374860000000014, 0.0003380559999999998, 0.0003404859999999975, 0.00033930599999999755, 0.00033834700000000273, 0.0003406940000000025, 0.0003388749999999989, 0.00034038899999999997, 0.0003408330000000022, 0.0003383329999999997, 0.0003395699999999974, 0.0003387910000000015, 0.0003405140000000001, 0.000338096999999999, 0.00034055499999999933, 0.00034055499999999933, 0.00033872199999999963, 0.0003404450000000017, 0.0003405979999999975, 0.00034088900000000047, 0.00033966700000000183, 0.0003407779999999999, 0.0003407500000000008, 0.000339194000000001, 0.00034015300000000276, 0.00034013899999999625, 0.0003390269999999987, 0.0003384019999999946, 0.00034037500000000387, 0.0003380410000000042, 0.00034069500000000197, 0.00034027699999999994, 0.0003406810000000024, 0.0003400139999999996, 0.000338999999999999, 0.000339194000000001, 0.00034093100000000265, 0.00033980599999999805, 0.0003389450000000002, 0.0003407919999999995, 0.0003387919999999975, 0.00033855600000000374, 0.00034069500000000197, 0.0003384589999999993, 0.00033798599999999845, 0.00033836099999999536, 0.00033861100000000255, 0.00034119399999999606, 0.0003411529999999968, 0.0003390689999999974]</msg>
<status status="PASS" starttime="20201030 18:31:02.238" endtime="20201030 18:31:02.240"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.233" endtime="20201030 18:31:02.241"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:02.245" endtime="20201030 18:31:02.264"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.243" endtime="20201030 18:31:02.265"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.242" endtime="20201030 18:31:02.265"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.822" endtime="20201030 18:31:02.265"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.821" endtime="20201030 18:31:02.265"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:02.274" endtime="20201030 18:31:02.313"></status>
</kw>
<msg timestamp="20201030 18:31:02.313" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:02.273" endtime="20201030 18:31:02.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:02.316" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:02.314" endtime="20201030 18:31:02.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:02.317" endtime="20201030 18:31:02.318"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.270" endtime="20201030 18:31:02.319"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.268" endtime="20201030 18:31:02.319"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:02.326" endtime="20201030 18:31:02.613"></status>
</kw>
<msg timestamp="20201030 18:31:02.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025003611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025352556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:02.325" endtime="20201030 18:31:02.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:02.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025003611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025352556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:02.617" endtime="20201030 18:31:02.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:02.626" endtime="20201030 18:31:02.628"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.322" endtime="20201030 18:31:02.628"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.320" endtime="20201030 18:31:02.629"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:02.633" level="INFO">${RESULT} = [{'diff': 0.0003489449999999998}, {'diff': 0.00033858299999999994}, {'diff': 0.0003411660000000004}, {'diff': 0.00033967999999999846}, {'diff': 0.0003394160000000021}, {'diff': 0.00034116699999999986}...</msg>
<status status="PASS" starttime="20201030 18:31:02.629" endtime="20201030 18:31:02.633"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:02.637" level="INFO">${ACCURACY} = {'diff': [0.0003489449999999998, 0.00033858299999999994, 0.0003411660000000004, 0.00033967999999999846, 0.0003394160000000021, 0.00034116699999999986, 0.0003383329999999997, 0.00033884699999999976, 0....</msg>
<status status="PASS" starttime="20201030 18:31:02.634" endtime="20201030 18:31:02.637"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:02.641" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201030 18:31:02.640" endtime="20201030 18:31:02.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:02.644" level="INFO">VALUE: [0.0003489449999999998, 0.00033858299999999994, 0.0003411660000000004, 0.00033967999999999846, 0.0003394160000000021, 0.00034116699999999986, 0.0003383329999999997, 0.00033884699999999976, 0.0003406529999999998, 0.0003391109999999996, 0.00034008300000000144, 0.000339097, 0.0003413330000000027, 0.00033848599999999895, 0.0003382499999999983, 0.0003403049999999991, 0.0003390560000000008, 0.0003404720000000014, 0.000339403000000002, 0.0003391249999999957, 0.0003398329999999977, 0.0003404450000000017, 0.0003405700000000053, 0.0003404439999999953, 0.0003399309999999947, 0.00034020800000000156, 0.000340888999999997, 0.0003406800000000029, 0.0003384719999999994, 0.0003389030000000015, 0.0003397779999999989, 0.0003409720000000019, 0.0003394730000000068, 0.0003388610000000028, 0.0003383480000000022, 0.0003381109999999951, 0.0003412079999999956, 0.00033987500000000337, 0.00033863899999999475, 0.00034002799999999916, 0.00033863899999999475, 0.0003407500000000008, 0.0003402360000000007, 0.00033976399999999934, 0.0003401249999999967, 0.00033844400000000024, 0.0003412780000000004, 0.00034020900000000104, 0.00033955500000000527, 0.00034038900000000344]</msg>
<status status="PASS" starttime="20201030 18:31:02.642" endtime="20201030 18:31:02.646"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.638" endtime="20201030 18:31:02.646"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:02.650" endtime="20201030 18:31:02.669"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.648" endtime="20201030 18:31:02.670"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.647" endtime="20201030 18:31:02.670"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.266" endtime="20201030 18:31:02.671"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.266" endtime="20201030 18:31:02.671"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:02.680" endtime="20201030 18:31:02.714"></status>
</kw>
<msg timestamp="20201030 18:31:02.715" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:02.678" endtime="20201030 18:31:02.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:02.717" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:02.716" endtime="20201030 18:31:02.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:02.718" endtime="20201030 18:31:02.720"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.676" endtime="20201030 18:31:02.721"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.673" endtime="20201030 18:31:02.721"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:02.728" endtime="20201030 18:31:03.014"></status>
</kw>
<msg timestamp="20201030 18:31:03.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021515625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021851278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:02.726" endtime="20201030 18:31:03.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:03.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021515625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021851278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:03.018" endtime="20201030 18:31:03.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:03.026" endtime="20201030 18:31:03.028"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.724" endtime="20201030 18:31:03.028"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.722" endtime="20201030 18:31:03.029"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:03.033" level="INFO">${RESULT} = [{'diff': 0.00033565299999999826}, {'diff': 0.00034090300000000004}, {'diff': 0.0003397919999999985}, {'diff': 0.0003413200000000026}, {'diff': 0.00033902700000000216}, {'diff': 0.0003399580000000013}...</msg>
<status status="PASS" starttime="20201030 18:31:03.030" endtime="20201030 18:31:03.033"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:03.038" level="INFO">${ACCURACY} = {'diff': [0.00033565299999999826, 0.00034090300000000004, 0.0003397919999999985, 0.0003413200000000026, 0.00033902700000000216, 0.0003399580000000013, 0.0003395550000000018, 0.00034140300000000054, 0....</msg>
<status status="PASS" starttime="20201030 18:31:03.034" endtime="20201030 18:31:03.038"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:03.043" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201030 18:31:03.042" endtime="20201030 18:31:03.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:03.045" level="INFO">VALUE: [0.00033565299999999826, 0.00034090300000000004, 0.0003397919999999985, 0.0003413200000000026, 0.00033902700000000216, 0.0003399580000000013, 0.0003395550000000018, 0.00034140300000000054, 0.00033851400000000156, 0.00033934700000000026, 0.0003397779999999989, 0.00033907000000000034, 0.000338887999999999, 0.0003394590000000003, 0.000337999999999998, 0.0003393200000000006, 0.0003379860000000019, 0.0003392780000000019, 0.0003394720000000004, 0.0003406109999999976, 0.0003411249999999977, 0.0003408469999999983, 0.00033962499999999965, 0.00034018099999999843, 0.00034036100000000083, 0.00033820899999999904, 0.00034048699999999696, 0.00034080599999999905, 0.00033837500000000187, 0.0003390830000000039, 0.0003406249999999972, 0.00034091599999999667, 0.0003399720000000009, 0.00034108299999999897, 0.0003380280000000041, 0.00033877699999999844, 0.00033981899999999815, 0.0003411249999999977, 0.00033802799999999716, 0.0003412500000000013, 0.00033827699999999794, 0.00034009699999999754, 0.0003402779999999994, 0.0003381520000000013, 0.0003402360000000007, 0.00033827800000000435, 0.0003398469999999973, 0.0003391380000000027, 0.0003405000000000005, 0.0003396250000000031]</msg>
<status status="PASS" starttime="20201030 18:31:03.044" endtime="20201030 18:31:03.046"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.039" endtime="20201030 18:31:03.047"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:03.050" endtime="20201030 18:31:03.070"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.049" endtime="20201030 18:31:03.070"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.048" endtime="20201030 18:31:03.071"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.672" endtime="20201030 18:31:03.071"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.671" endtime="20201030 18:31:03.071"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:03.080" endtime="20201030 18:31:03.120"></status>
</kw>
<msg timestamp="20201030 18:31:03.121" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:03.079" endtime="20201030 18:31:03.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:03.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:03.122" endtime="20201030 18:31:03.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:03.124" endtime="20201030 18:31:03.126"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.076" endtime="20201030 18:31:03.127"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.074" endtime="20201030 18:31:03.127"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:03.134" endtime="20201030 18:31:03.422"></status>
</kw>
<msg timestamp="20201030 18:31:03.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023013625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023343389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:03.132" endtime="20201030 18:31:03.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:03.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023013625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023343389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:03.426" endtime="20201030 18:31:03.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:03.435" endtime="20201030 18:31:03.436"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.130" endtime="20201030 18:31:03.437"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.128" endtime="20201030 18:31:03.437"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:03.441" level="INFO">${RESULT} = [{'diff': 0.00032976399999999975}, {'diff': 0.0003389719999999999}, {'diff': 0.0003382359999999987}, {'diff': 0.0003387499999999988}, {'diff': 0.000340306000000002}, {'diff': 0.0003405140000000001}, {...</msg>
<status status="PASS" starttime="20201030 18:31:03.438" endtime="20201030 18:31:03.442"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:03.446" level="INFO">${ACCURACY} = {'diff': [0.00032976399999999975, 0.0003389719999999999, 0.0003382359999999987, 0.0003387499999999988, 0.000340306000000002, 0.0003405140000000001, 0.0003394999999999995, 0.00034038899999999997, 0.000...</msg>
<status status="PASS" starttime="20201030 18:31:03.442" endtime="20201030 18:31:03.446"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:03.450" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201030 18:31:03.449" endtime="20201030 18:31:03.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:03.453" level="INFO">VALUE: [0.00032976399999999975, 0.0003389719999999999, 0.0003382359999999987, 0.0003387499999999988, 0.000340306000000002, 0.0003405140000000001, 0.0003394999999999995, 0.00034038899999999997, 0.00034058300000000194, 0.0003406529999999998, 0.0003403329999999982, 0.0003389870000000024, 0.00034054199999999923, 0.0003386800000000009, 0.00034034800000000073, 0.0003396940000000015, 0.0003395840000000004, 0.0003386940000000005, 0.0003390560000000008, 0.00033997300000000036, 0.000338693999999997, 0.0003397230000000001, 0.00034022200000000113, 0.000339291999999998, 0.0003410140000000006, 0.00033830599999999655, 0.00034037500000000387, 0.0003386940000000005, 0.0003386800000000009, 0.0003384999999999985, 0.0003409300000000032, 0.00033881899999999715, 0.0003403199999999981, 0.00033988900000000294, 0.0003385689999999969, 0.0003384160000000011, 0.0003400559999999983, 0.0003399720000000009, 0.00034004099999999926, 0.00033877800000000485, 0.00033993100000000165, 0.00033933300000000416, 0.0003395139999999991, 0.0003387640000000053, 0.00034052799999999966, 0.00034086099999999786, 0.00033877699999999844, 0.0003410140000000006, 0.0003407500000000008, 0.00034090299999999657]</msg>
<status status="PASS" starttime="20201030 18:31:03.451" endtime="20201030 18:31:03.454"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.446" endtime="20201030 18:31:03.454"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:03.458" endtime="20201030 18:31:03.477"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.456" endtime="20201030 18:31:03.478"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.455" endtime="20201030 18:31:03.478"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.072" endtime="20201030 18:31:03.479"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.072" endtime="20201030 18:31:03.479"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:03.488" endtime="20201030 18:31:03.524"></status>
</kw>
<msg timestamp="20201030 18:31:03.524" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:03.486" endtime="20201030 18:31:03.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:03.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:03.525" endtime="20201030 18:31:03.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:03.528" endtime="20201030 18:31:03.530"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.484" endtime="20201030 18:31:03.530"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.481" endtime="20201030 18:31:03.531"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:03.537" endtime="20201030 18:31:03.824"></status>
</kw>
<msg timestamp="20201030 18:31:03.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022364125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022701542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:03.536" endtime="20201030 18:31:03.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:03.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022364125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022701542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:03.828" endtime="20201030 18:31:03.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:03.836" endtime="20201030 18:31:03.838"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.533" endtime="20201030 18:31:03.839"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.531" endtime="20201030 18:31:03.839"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:03.843" level="INFO">${RESULT} = [{'diff': 0.00033741700000000305}, {'diff': 0.0003387229999999991}, {'diff': 0.0003382229999999986}, {'diff': 0.0003383199999999996}, {'diff': 0.00034031899999999865}, {'diff': 0.00033856900000000037}...</msg>
<status status="PASS" starttime="20201030 18:31:03.840" endtime="20201030 18:31:03.843"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:03.847" level="INFO">${ACCURACY} = {'diff': [0.00033741700000000305, 0.0003387229999999991, 0.0003382229999999986, 0.0003383199999999996, 0.00034031899999999865, 0.00033856900000000037, 0.0003410689999999994, 0.00034072200000000163, 0....</msg>
<status status="PASS" starttime="20201030 18:31:03.844" endtime="20201030 18:31:03.848"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:03.852" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201030 18:31:03.851" endtime="20201030 18:31:03.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:03.854" level="INFO">VALUE: [0.00033741700000000305, 0.0003387229999999991, 0.0003382229999999986, 0.0003383199999999996, 0.00034031899999999865, 0.00033856900000000037, 0.0003410689999999994, 0.00034072200000000163, 0.00033920900000000004, 0.0003394580000000008, 0.00033934700000000026, 0.00033898599999999945, 0.00034020900000000104, 0.0003406390000000002, 0.0003400139999999996, 0.0003396389999999992, 0.00033867999999999746, 0.0003393190000000011, 0.00034016700000000233, 0.0003388330000000002, 0.0003379719999999989, 0.00034019500000000147, 0.0003407499999999973, 0.00033825000000000174, 0.0003402360000000007, 0.00033822199999999913, 0.0003394999999999995, 0.0003409580000000023, 0.0003389160000000016, 0.00034115300000000376, 0.00033906900000000434, 0.0003405000000000005, 0.00034097300000000136, 0.00033833400000000263, 0.0003398339999999972, 0.00034048600000000095, 0.00034087499999999743, 0.00034013899999999625, 0.0003412780000000004, 0.0003394720000000004, 0.0003408329999999987, 0.00033961100000000355, 0.00033913899999999525, 0.00033916600000000185, 0.0003392079999999936, 0.00033976399999999934, 0.00033854199999999723, 0.0003397499999999998, 0.0003393199999999971, 0.0003389580000000003]</msg>
<status status="PASS" starttime="20201030 18:31:03.853" endtime="20201030 18:31:03.856"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.848" endtime="20201030 18:31:03.857"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:03.860" endtime="20201030 18:31:03.880"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.859" endtime="20201030 18:31:03.881"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.858" endtime="20201030 18:31:03.881"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.480" endtime="20201030 18:31:03.881"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.479" endtime="20201030 18:31:03.881"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:03.890" endtime="20201030 18:31:03.925"></status>
</kw>
<msg timestamp="20201030 18:31:03.926" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:03.889" endtime="20201030 18:31:03.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:03.928" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:03.927" endtime="20201030 18:31:03.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:03.930" endtime="20201030 18:31:03.931"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.886" endtime="20201030 18:31:03.932"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.884" endtime="20201030 18:31:03.932"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:03.939" endtime="20201030 18:31:04.224"></status>
</kw>
<msg timestamp="20201030 18:31:04.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021689639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022024944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:03.937" endtime="20201030 18:31:04.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:04.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021689639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022024944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:04.229" endtime="20201030 18:31:04.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:04.237" endtime="20201030 18:31:04.239"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.935" endtime="20201030 18:31:04.239"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.933" endtime="20201030 18:31:04.240"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:04.244" level="INFO">${RESULT} = [{'diff': 0.000335305000000001}, {'diff': 0.0003398749999999999}, {'diff': 0.00034033400000000116}, {'diff': 0.00034134800000000173}, {'diff': 0.00033808299999999944}, {'diff': 0.00034034700000000126}...</msg>
<status status="PASS" starttime="20201030 18:31:04.240" endtime="20201030 18:31:04.244"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:04.249" level="INFO">${ACCURACY} = {'diff': [0.000335305000000001, 0.0003398749999999999, 0.00034033400000000116, 0.00034134800000000173, 0.00033808299999999944, 0.00034034700000000126, 0.00033995799999999785, 0.00034041599999999964, 0...</msg>
<status status="PASS" starttime="20201030 18:31:04.245" endtime="20201030 18:31:04.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:04.254" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201030 18:31:04.253" endtime="20201030 18:31:04.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:04.257" level="INFO">VALUE: [0.000335305000000001, 0.0003398749999999999, 0.00034033400000000116, 0.00034134800000000173, 0.00033808299999999944, 0.00034034700000000126, 0.00033995799999999785, 0.00034041599999999964, 0.0003399720000000009, 0.0003403329999999982, 0.0003412780000000004, 0.00033934700000000026, 0.0003407639999999969, 0.0003405140000000001, 0.0003405000000000005, 0.00033930599999999755, 0.00034026399999999984, 0.00034007000000000134, 0.0003393329999999972, 0.0003380420000000002, 0.00033970899999999707, 0.00033888900000000194, 0.00033833400000000263, 0.00034034800000000073, 0.0003404169999999991, 0.000341000000000001, 0.00034106900000000287, 0.0003413199999999991, 0.0003389170000000011, 0.000338597000000003, 0.00033844500000000666, 0.0003409160000000036, 0.00033994400000000174, 0.00034037500000000387, 0.0003388610000000028, 0.0003410689999999994, 0.00034002799999999916, 0.0003386249999999952, 0.00033916600000000185, 0.00034108299999999897, 0.00033994400000000174, 0.00034031899999999865, 0.0003401250000000036, 0.00034108399999999844, 0.0003384170000000006, 0.00033938900000000244, 0.00033972200000000063, 0.000341194000000003, 0.00034109699999999854, 0.0003379719999999989]</msg>
<status status="PASS" starttime="20201030 18:31:04.255" endtime="20201030 18:31:04.258"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.250" endtime="20201030 18:31:04.259"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:04.263" endtime="20201030 18:31:04.282"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.261" endtime="20201030 18:31:04.283"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.260" endtime="20201030 18:31:04.283"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.882" endtime="20201030 18:31:04.283"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.882" endtime="20201030 18:31:04.284"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:04.293" endtime="20201030 18:31:04.327"></status>
</kw>
<msg timestamp="20201030 18:31:04.328" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:04.291" endtime="20201030 18:31:04.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:04.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:04.329" endtime="20201030 18:31:04.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:04.331" endtime="20201030 18:31:04.333"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.288" endtime="20201030 18:31:04.334"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.286" endtime="20201030 18:31:04.334"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:04.341" endtime="20201030 18:31:04.628"></status>
</kw>
<msg timestamp="20201030 18:31:04.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021357486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021711403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:04.339" endtime="20201030 18:31:04.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:04.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021357486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021711403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:04.632" endtime="20201030 18:31:04.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:04.640" endtime="20201030 18:31:04.642"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.337" endtime="20201030 18:31:04.643"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.335" endtime="20201030 18:31:04.643"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:04.647" level="INFO">${RESULT} = [{'diff': 0.0003539170000000022}, {'diff': 0.0003412499999999978}, {'diff': 0.00033970800000000106}, {'diff': 0.00033877699999999844}, {'diff': 0.00034038899999999997}, {'diff': 0.0003398330000000012}...</msg>
<status status="PASS" starttime="20201030 18:31:04.644" endtime="20201030 18:31:04.647"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:04.651" level="INFO">${ACCURACY} = {'diff': [0.0003539170000000022, 0.0003412499999999978, 0.00033970800000000106, 0.00033877699999999844, 0.00034038899999999997, 0.0003398330000000012, 0.0003382640000000013, 0.0003412360000000017, 0.0...</msg>
<status status="PASS" starttime="20201030 18:31:04.648" endtime="20201030 18:31:04.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:04.656" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201030 18:31:04.655" endtime="20201030 18:31:04.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:04.658" level="INFO">VALUE: [0.0003539170000000022, 0.0003412499999999978, 0.00033970800000000106, 0.00033877699999999844, 0.00034038899999999997, 0.0003398330000000012, 0.0003382640000000013, 0.0003412360000000017, 0.00033990299999999904, 0.0003411520000000008, 0.00033870800000000006, 0.0003408329999999987, 0.00033838899999999797, 0.0003412360000000017, 0.000338597999999999, 0.00033836099999999883, 0.0003383190000000001, 0.0003390689999999974, 0.0003382640000000013, 0.00034084800000000123, 0.0003393749999999994, 0.0003401939999999985, 0.00034040299999999954, 0.0003397779999999989, 0.0003412360000000017, 0.0003402500000000003, 0.0003394299999999982, 0.0003404439999999988, 0.0003394720000000004, 0.00033930599999999755, 0.0003400830000000049, 0.00033986099999999686, 0.0003381520000000013, 0.00033844400000000024, 0.0003399590000000008, 0.00033806900000000334, 0.0003387369999999987, 0.00033905500000000477, 0.00033877699999999844, 0.0003402360000000007, 0.0003388339999999962, 0.00034063899999999675, 0.0003408049999999996, 0.0003397779999999989, 0.0003380269999999977, 0.00033822199999999913, 0.0003393190000000046, 0.00033842999999999374, 0.0003396940000000015, 0.0003412500000000013]</msg>
<status status="PASS" starttime="20201030 18:31:04.657" endtime="20201030 18:31:04.659"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.652" endtime="20201030 18:31:04.660"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:04.664" endtime="20201030 18:31:04.683"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.662" endtime="20201030 18:31:04.684"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.661" endtime="20201030 18:31:04.684"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.285" endtime="20201030 18:31:04.684"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.284" endtime="20201030 18:31:04.685"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:04.694" endtime="20201030 18:31:04.729"></status>
</kw>
<msg timestamp="20201030 18:31:04.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:04.692" endtime="20201030 18:31:04.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:04.732" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:04.730" endtime="20201030 18:31:04.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:04.733" endtime="20201030 18:31:04.735"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.689" endtime="20201030 18:31:04.735"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.687" endtime="20201030 18:31:04.736"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:04.742" endtime="20201030 18:31:05.029"></status>
</kw>
<msg timestamp="20201030 18:31:05.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022338806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022678736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:04.741" endtime="20201030 18:31:05.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:05.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022338806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022678736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:05.034" endtime="20201030 18:31:05.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:05.042" endtime="20201030 18:31:05.044"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.738" endtime="20201030 18:31:05.044"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.736" endtime="20201030 18:31:05.045"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:05.049" level="INFO">${RESULT} = [{'diff': 0.0003399300000000022}, {'diff': 0.0003394999999999995}, {'diff': 0.0003384170000000006}, {'diff': 0.0003391109999999996}, {'diff': 0.0003393190000000011}, {'diff': 0.00034098600000000145}, ...</msg>
<status status="PASS" starttime="20201030 18:31:05.046" endtime="20201030 18:31:05.049"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:05.053" level="INFO">${ACCURACY} = {'diff': [0.0003399300000000022, 0.0003394999999999995, 0.0003384170000000006, 0.0003391109999999996, 0.0003393190000000011, 0.00034098600000000145, 0.0003407919999999995, 0.0003389169999999976, 0.000...</msg>
<status status="PASS" starttime="20201030 18:31:05.050" endtime="20201030 18:31:05.053"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:05.058" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201030 18:31:05.057" endtime="20201030 18:31:05.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:05.063" level="INFO">VALUE: [0.0003399300000000022, 0.0003394999999999995, 0.0003384170000000006, 0.0003391109999999996, 0.0003393190000000011, 0.00034098600000000145, 0.0003407919999999995, 0.0003389169999999976, 0.00034069500000000197, 0.0003407779999999999, 0.0003389030000000015, 0.00033862499999999865, 0.0003379170000000001, 0.0003389170000000011, 0.00034008399999999744, 0.0003411109999999981, 0.00033948599999999995, 0.0003388330000000002, 0.0003412079999999991, 0.00033986099999999686, 0.00033820799999999956, 0.0003386390000000017, 0.00034019500000000147, 0.00033934700000000026, 0.0003387499999999988, 0.00033965300000000226, 0.00034022200000000113, 0.0003390410000000052, 0.0003379170000000001, 0.00033926399999999884, 0.0003394450000000007, 0.0003406250000000041, 0.00034091599999999667, 0.00034098600000000145, 0.00034102800000000016, 0.00034104199999999973, 0.0003395700000000043, 0.0003396249999999962, 0.0003400689999999984, 0.00033805500000000377, 0.00033790200000000103, 0.00034005499999999883, 0.0003410559999999993, 0.00033802799999999716, 0.0003399580000000013, 0.0003393469999999968, 0.00034095899999999485, 0.0003406109999999976, 0.0003412230000000016, 0.0003400689999999984]</msg>
<status status="PASS" starttime="20201030 18:31:05.059" endtime="20201030 18:31:05.065"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.054" endtime="20201030 18:31:05.065"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:05.069" endtime="20201030 18:31:05.088"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.067" endtime="20201030 18:31:05.089"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.066" endtime="20201030 18:31:05.089"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.685" endtime="20201030 18:31:05.090"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.685" endtime="20201030 18:31:05.090"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:05.099" endtime="20201030 18:31:05.135"></status>
</kw>
<msg timestamp="20201030 18:31:05.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:05.097" endtime="20201030 18:31:05.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:05.138" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:05.137" endtime="20201030 18:31:05.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:05.139" endtime="20201030 18:31:05.141"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.095" endtime="20201030 18:31:05.142"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.092" endtime="20201030 18:31:05.142"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:05.149" endtime="20201030 18:31:05.435"></status>
</kw>
<msg timestamp="20201030 18:31:05.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024048681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024408139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:05.147" endtime="20201030 18:31:05.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:05.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024048681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024408139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:05.439" endtime="20201030 18:31:05.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:05.448" endtime="20201030 18:31:05.449"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.145" endtime="20201030 18:31:05.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.143" endtime="20201030 18:31:05.450"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:05.454" level="INFO">${RESULT} = [{'diff': 0.000359458}, {'diff': 0.0003387359999999992}, {'diff': 0.00034017999999999896}, {'diff': 0.00033998600000000045}, {'diff': 0.00034086100000000133}, {'diff': 0.0003382640000000013}, {'diff':...</msg>
<status status="PASS" starttime="20201030 18:31:05.451" endtime="20201030 18:31:05.455"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:05.459" level="INFO">${ACCURACY} = {'diff': [0.000359458, 0.0003387359999999992, 0.00034017999999999896, 0.00033998600000000045, 0.00034086100000000133, 0.0003382640000000013, 0.00033947299999999986, 0.000341194999999999, 0.00033840300...</msg>
<status status="PASS" starttime="20201030 18:31:05.455" endtime="20201030 18:31:05.460"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:05.464" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201030 18:31:05.463" endtime="20201030 18:31:05.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:05.467" level="INFO">VALUE: [0.000359458, 0.0003387359999999992, 0.00034017999999999896, 0.00033998600000000045, 0.00034086100000000133, 0.0003382640000000013, 0.00033947299999999986, 0.000341194999999999, 0.000338403000000001, 0.00034016699999999886, 0.00034090200000000057, 0.00033802800000000063, 0.000338999999999999, 0.00034044499999999825, 0.0003381800000000004, 0.0003384579999999998, 0.00034022200000000113, 0.000340387999999997, 0.00034002800000000263, 0.0003378749999999979, 0.0003403049999999991, 0.00033805500000000377, 0.0003406249999999972, 0.0003387499999999988, 0.00033813899999999425, 0.0003393339999999967, 0.0003397230000000001, 0.00033937500000000287, 0.0003383199999999961, 0.00034080599999999905, 0.00033986099999999686, 0.00034105499999999983, 0.000339888999999996, 0.00034090299999999657, 0.00033944400000000124, 0.0003404590000000013, 0.0003399309999999947, 0.0003410689999999994, 0.000338612000000002, 0.0003403889999999965, 0.0003406250000000041, 0.00034005499999999883, 0.00034015199999999635, 0.0003386250000000021, 0.0003385420000000042, 0.0003406109999999976, 0.000338403000000001, 0.00034038900000000344, 0.00034092999999999624, 0.0003378610000000018]</msg>
<status status="PASS" starttime="20201030 18:31:05.465" endtime="20201030 18:31:05.473"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.460" endtime="20201030 18:31:05.474"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:05.478" endtime="20201030 18:31:05.497"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.476" endtime="20201030 18:31:05.498"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.475" endtime="20201030 18:31:05.498"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.091" endtime="20201030 18:31:05.499"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.090" endtime="20201030 18:31:05.499"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:05.508" endtime="20201030 18:31:05.544"></status>
</kw>
<msg timestamp="20201030 18:31:05.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:05.506" endtime="20201030 18:31:05.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:05.547" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:05.546" endtime="20201030 18:31:05.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:05.548" endtime="20201030 18:31:05.550"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.504" endtime="20201030 18:31:05.551"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.501" endtime="20201030 18:31:05.551"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:05.558" endtime="20201030 18:31:05.845"></status>
</kw>
<msg timestamp="20201030 18:31:05.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021883611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022241556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:05.556" endtime="20201030 18:31:05.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:05.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021883611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022241556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:05.849" endtime="20201030 18:31:05.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:05.858" endtime="20201030 18:31:05.859"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.554" endtime="20201030 18:31:05.860"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.552" endtime="20201030 18:31:05.860"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:05.864" level="INFO">${RESULT} = [{'diff': 0.0003579449999999984}, {'diff': 0.0003394439999999978}, {'diff': 0.0003409299999999997}, {'diff': 0.00034034700000000126}, {'diff': 0.0003387360000000027}, {'diff': 0.000338500000000002}, {...</msg>
<status status="PASS" starttime="20201030 18:31:05.861" endtime="20201030 18:31:05.865"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:05.869" level="INFO">${ACCURACY} = {'diff': [0.0003579449999999984, 0.0003394439999999978, 0.0003409299999999997, 0.00034034700000000126, 0.0003387360000000027, 0.000338500000000002, 0.0003411530000000003, 0.0003396800000000019, 0.0003...</msg>
<status status="PASS" starttime="20201030 18:31:05.865" endtime="20201030 18:31:05.869"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:05.873" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201030 18:31:05.872" endtime="20201030 18:31:05.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:05.876" level="INFO">VALUE: [0.0003579449999999984, 0.0003394439999999978, 0.0003409299999999997, 0.00034034700000000126, 0.0003387360000000027, 0.000338500000000002, 0.0003411530000000003, 0.0003396800000000019, 0.0003383329999999997, 0.000338306, 0.00033947299999999986, 0.0003394439999999978, 0.000340693999999999, 0.00034072199999999817, 0.00033907000000000034, 0.0003394170000000016, 0.00033858299999999994, 0.00034122199999999867, 0.0003393749999999994, 0.0003412360000000017, 0.00033954199999999823, 0.00034038899999999997, 0.0003387640000000018, 0.0003407500000000008, 0.00033986100000000033, 0.0003405130000000006, 0.00033993100000000165, 0.0003386940000000005, 0.0003384019999999946, 0.00033920800000000056, 0.00034104199999999973, 0.00033826399999999784, 0.0003404720000000014, 0.0003404590000000013, 0.0003389170000000011, 0.00033820899999999904, 0.0003396529999999953, 0.0003410689999999994, 0.0003403329999999982, 0.0003394999999999995, 0.0003379170000000001, 0.0003394450000000007, 0.0003407500000000008, 0.00034095899999999485, 0.00033913899999999525, 0.0003391250000000026, 0.00033833300000000316, 0.000338999999999999, 0.0003384019999999946, 0.0003406800000000029]</msg>
<status status="PASS" starttime="20201030 18:31:05.874" endtime="20201030 18:31:05.877"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.869" endtime="20201030 18:31:05.877"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:05.881" endtime="20201030 18:31:05.900"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.879" endtime="20201030 18:31:05.901"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.878" endtime="20201030 18:31:05.901"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.500" endtime="20201030 18:31:05.902"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.499" endtime="20201030 18:31:05.902"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:05.911" endtime="20201030 18:31:05.950"></status>
</kw>
<msg timestamp="20201030 18:31:05.950" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:05.909" endtime="20201030 18:31:05.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:05.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:05.952" endtime="20201030 18:31:05.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:05.954" endtime="20201030 18:31:05.956"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.907" endtime="20201030 18:31:05.956"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.904" endtime="20201030 18:31:05.957"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:05.964" endtime="20201030 18:31:06.250"></status>
</kw>
<msg timestamp="20201030 18:31:06.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025986236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026319875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:05.962" endtime="20201030 18:31:06.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:06.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025986236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026319875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:06.254" endtime="20201030 18:31:06.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:06.262" endtime="20201030 18:31:06.264"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.959" endtime="20201030 18:31:06.264"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.957" endtime="20201030 18:31:06.265"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:06.268" level="INFO">${RESULT} = [{'diff': 0.00033363900000000016}, {'diff': 0.00033826399999999784}, {'diff': 0.0003411249999999977}, {'diff': 0.00033988899999999947}, {'diff': 0.0003402360000000007}, {'diff': 0.00034073599999999774...</msg>
<status status="PASS" starttime="20201030 18:31:06.265" endtime="20201030 18:31:06.269"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:06.272" level="INFO">${ACCURACY} = {'diff': [0.00033363900000000016, 0.00033826399999999784, 0.0003411249999999977, 0.00033988899999999947, 0.0003402360000000007, 0.00034073599999999774, 0.0003384999999999985, 0.00034058299999999847, 0...</msg>
<status status="PASS" starttime="20201030 18:31:06.269" endtime="20201030 18:31:06.273"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:06.277" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201030 18:31:06.276" endtime="20201030 18:31:06.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:06.280" level="INFO">VALUE: [0.00033363900000000016, 0.00033826399999999784, 0.0003411249999999977, 0.00033988899999999947, 0.0003402360000000007, 0.00034073599999999774, 0.0003384999999999985, 0.00034058299999999847, 0.0003401110000000006, 0.0003405000000000005, 0.0003412499999999978, 0.00034138900000000097, 0.0003394580000000008, 0.0003400550000000023, 0.00034115199999999735, 0.00034109699999999854, 0.0003394450000000007, 0.00034104199999999973, 0.00033870800000000006, 0.00033988900000000294, 0.00034008399999999744, 0.00034070800000000206, 0.000339097999999996, 0.00033963899999999575, 0.000340291999999999, 0.00034088900000000394, 0.0003390139999999986, 0.00034090299999999657, 0.00034101399999999366, 0.00034015300000000276, 0.00033890200000000203, 0.00034098700000000093, 0.00033954199999999823, 0.0003409720000000019, 0.0003389170000000011, 0.0003399720000000009, 0.0003392359999999997, 0.00033884700000000323, 0.00033786199999999433, 0.00033972200000000063, 0.0003405699999999984, 0.00033954099999999876, 0.00033887499999999543, 0.0003410140000000006, 0.0003383610000000023, 0.00034120800000000256, 0.00034109699999999854, 0.00033977699999999944, 0.0003395139999999991, 0.000338999999999999]</msg>
<status status="PASS" starttime="20201030 18:31:06.278" endtime="20201030 18:31:06.281"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.273" endtime="20201030 18:31:06.282"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:06.286" endtime="20201030 18:31:06.306"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.284" endtime="20201030 18:31:06.306"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.283" endtime="20201030 18:31:06.306"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.903" endtime="20201030 18:31:06.307"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.902" endtime="20201030 18:31:06.307"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.479" endtime="20201030 18:31:06.307"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:06.312" endtime="20201030 18:31:06.332"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.309" endtime="20201030 18:31:06.332"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.308" endtime="20201030 18:31:06.333"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201030 18:30:25.404" endtime="20201030 18:31:06.333" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:06.339" endtime="20201030 18:31:06.359"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.338" endtime="20201030 18:31:06.359"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:06.372" endtime="20201030 18:31:06.387"></status>
</kw>
<msg timestamp="20201030 18:31:06.388" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:06.371" endtime="20201030 18:31:06.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:06.390" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:06.389" endtime="20201030 18:31:06.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:31:06.393" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:31:06.391" endtime="20201030 18:31:06.393"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:06.368" endtime="20201030 18:31:06.394"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:06.366" endtime="20201030 18:31:06.395"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.365" endtime="20201030 18:31:06.395"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:31:06.399" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:31:06.398" endtime="20201030 18:31:06.399"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.396" endtime="20201030 18:31:06.399"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.364" endtime="20201030 18:31:06.399"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.363" endtime="20201030 18:31:06.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:06.400" endtime="20201030 18:31:06.402"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.362" endtime="20201030 18:31:06.402"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.360" endtime="20201030 18:31:06.403"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.337" endtime="20201030 18:31:06.403"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:06.414" endtime="20201030 18:31:06.452"></status>
</kw>
<msg timestamp="20201030 18:31:06.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:06.412" endtime="20201030 18:31:06.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:06.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:06.453" endtime="20201030 18:31:06.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:06.456" endtime="20201030 18:31:06.457"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.409" endtime="20201030 18:31:06.458"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.406" endtime="20201030 18:31:06.458"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:06.467" endtime="20201030 18:31:06.765"></status>
</kw>
<msg timestamp="20201030 18:31:06.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070090861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070474611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:06.464" endtime="20201030 18:31:06.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:06.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070090861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070474611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:06.769" endtime="20201030 18:31:06.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:06.777" endtime="20201030 18:31:06.779"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.461" endtime="20201030 18:31:06.780"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.459" endtime="20201030 18:31:06.780"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:06.784" level="INFO">${RESULT} = [{'diff': 0.00038375000000000214}, {'diff': 0.0003568750000000065}, {'diff': 0.0003553889999999976}, {'diff': 0.000355860999999999}, {'diff': 0.0003851389999999927}, {'diff': 0.0003554299999999899}, {...</msg>
<status status="PASS" starttime="20201030 18:31:06.781" endtime="20201030 18:31:06.784"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:06.789" level="INFO">${ACCURACY} = {'diff': [0.00038375000000000214, 0.0003568750000000065, 0.0003553889999999976, 0.000355860999999999, 0.0003851389999999927, 0.0003554299999999899, 0.0003851529999999992, 0.0003573610000000005, 0.0003...</msg>
<status status="PASS" starttime="20201030 18:31:06.785" endtime="20201030 18:31:06.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:06.793" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201030 18:31:06.792" endtime="20201030 18:31:06.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:06.796" level="INFO">VALUE: [0.00038375000000000214, 0.0003568750000000065, 0.0003553889999999976, 0.000355860999999999, 0.0003851389999999927, 0.0003554299999999899, 0.0003851529999999992, 0.0003573610000000005, 0.00035677800000000204, 0.00035559699999999916, 0.00035559699999999916, 0.00035573600000000927, 0.0003559860000000026, 0.00035716700000000545, 0.00035584700000000635, 0.00035604200000000086, 0.0003552359999999949, 0.0003557500000000019, 0.00035652700000000925, 0.00038479099999999544, 0.00035690299999999175, 0.00038536100000000073, 0.00038494400000001205, 0.0003850980000000004, 0.0003567359999999964, 0.0003555140000000012, 0.00035754200000000236, 0.00038513900000000656, 0.00035644399999999743, 0.00038523599999999714, 0.0003570550000000089, 0.00035629199999999417, 0.000355555999999993, 0.0003553190000000067, 0.00035748700000000355, 0.0003549300000000033, 0.0003554159999999973, 0.00035565200000001185, 0.000384693999999991, 0.00035690300000000563, 0.0003551249999999978, 0.00038499999999999646, 0.0003565410000000019, 0.00035715299999999894, 0.00035627800000000154, 0.0003568469999999935, 0.0003575700000000015, 0.00035727800000000254, 0.0003852639999999963, 0.0003563200000000072]</msg>
<status status="PASS" starttime="20201030 18:31:06.794" endtime="20201030 18:31:06.796"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.790" endtime="20201030 18:31:06.796"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:06.800" endtime="20201030 18:31:06.819"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.798" endtime="20201030 18:31:06.820"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.797" endtime="20201030 18:31:06.820"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.405" endtime="20201030 18:31:06.820"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.404" endtime="20201030 18:31:06.821"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:06.830" endtime="20201030 18:31:06.865"></status>
</kw>
<msg timestamp="20201030 18:31:06.865" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:06.828" endtime="20201030 18:31:06.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:06.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:06.866" endtime="20201030 18:31:06.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:06.869" endtime="20201030 18:31:06.870"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.826" endtime="20201030 18:31:06.871"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.823" endtime="20201030 18:31:06.871"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:06.878" endtime="20201030 18:31:07.162"></status>
</kw>
<msg timestamp="20201030 18:31:07.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021483111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021840792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:06.876" endtime="20201030 18:31:07.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:07.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021483111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021840792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:07.166" endtime="20201030 18:31:07.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:07.174" endtime="20201030 18:31:07.176"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.874" endtime="20201030 18:31:07.177"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.872" endtime="20201030 18:31:07.177"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:07.181" level="INFO">${RESULT} = [{'diff': 0.00035768100000000205}, {'diff': 0.0003575419999999989}, {'diff': 0.0003553609999999985}, {'diff': 0.00035733300000000134}, {'diff': 0.0003556949999999996}, {'diff': 0.0003573059999999982},...</msg>
<status status="PASS" starttime="20201030 18:31:07.178" endtime="20201030 18:31:07.181"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:07.186" level="INFO">${ACCURACY} = {'diff': [0.00035768100000000205, 0.0003575419999999989, 0.0003553609999999985, 0.00035733300000000134, 0.0003556949999999996, 0.0003573059999999982, 0.00035540300000000066, 0.0003574029999999992, 0.0...</msg>
<status status="PASS" starttime="20201030 18:31:07.182" endtime="20201030 18:31:07.186"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:07.190" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201030 18:31:07.189" endtime="20201030 18:31:07.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:07.193" level="INFO">VALUE: [0.00035768100000000205, 0.0003575419999999989, 0.0003553609999999985, 0.00035733300000000134, 0.0003556949999999996, 0.0003573059999999982, 0.00035540300000000066, 0.0003574029999999992, 0.00035605600000000043, 0.0003572639999999995, 0.00035737500000000005, 0.00035743099999999833, 0.0003566249999999993, 0.00035545800000000294, 0.00035695900000000044, 0.00035504199999999986, 0.0003562639999999985, 0.00035536100000000195, 0.0003576389999999999, 0.0003854439999999987, 0.0003573060000000017, 0.00035637499999999905, 0.000385304999999999, 0.00035706999999999753, 0.0003568060000000012, 0.00035583299999999984, 0.00035572299999999876, 0.0003556530000000044, 0.0003574589999999975, 0.00035711100000000023, 0.0003574029999999992, 0.00035754200000000236, 0.0003575129999999968, 0.000356181000000004, 0.00035698599999999664, 0.00035782000000000175, 0.00035770799999999825, 0.0003567500000000029, 0.000357070000000001, 0.00038517999999999886, 0.0003576389999999999, 0.0003574449999999979, 0.0003553609999999985, 0.0003576250000000003, 0.0003564999999999957, 0.000355166000000004, 0.00035537499999999805, 0.0003561939999999972, 0.0003560280000000013, 0.00038517999999999886]</msg>
<status status="PASS" starttime="20201030 18:31:07.192" endtime="20201030 18:31:07.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.187" endtime="20201030 18:31:07.194"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:07.197" endtime="20201030 18:31:07.217"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.196" endtime="20201030 18:31:07.218"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.195" endtime="20201030 18:31:07.218"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.822" endtime="20201030 18:31:07.218"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.821" endtime="20201030 18:31:07.218"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:07.227" endtime="20201030 18:31:07.261"></status>
</kw>
<msg timestamp="20201030 18:31:07.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:07.225" endtime="20201030 18:31:07.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:07.264" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:07.263" endtime="20201030 18:31:07.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:07.266" endtime="20201030 18:31:07.267"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.223" endtime="20201030 18:31:07.268"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.221" endtime="20201030 18:31:07.268"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:07.278" endtime="20201030 18:31:07.576"></status>
</kw>
<msg timestamp="20201030 18:31:07.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020992403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021374653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:07.275" endtime="20201030 18:31:07.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:07.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020992403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021374653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:07.580" endtime="20201030 18:31:07.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:07.588" endtime="20201030 18:31:07.590"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.270" endtime="20201030 18:31:07.591"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.269" endtime="20201030 18:31:07.591"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:07.595" level="INFO">${RESULT} = [{'diff': 0.00038225000000000064}, {'diff': 0.00035554200000000036}, {'diff': 0.00035690300000000216}, {'diff': 0.0003849859999999969}, {'diff': 0.0003849999999999999}, {'diff': 0.00035645899999999994...</msg>
<status status="PASS" starttime="20201030 18:31:07.592" endtime="20201030 18:31:07.595"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:07.599" level="INFO">${ACCURACY} = {'diff': [0.00038225000000000064, 0.00035554200000000036, 0.00035690300000000216, 0.0003849859999999969, 0.0003849999999999999, 0.00035645899999999994, 0.00038512500000000005, 0.00035632000000000025, ...</msg>
<status status="PASS" starttime="20201030 18:31:07.596" endtime="20201030 18:31:07.599"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:07.603" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201030 18:31:07.602" endtime="20201030 18:31:07.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:07.606" level="INFO">VALUE: [0.00038225000000000064, 0.00035554200000000036, 0.00035690300000000216, 0.0003849859999999969, 0.0003849999999999999, 0.00035645899999999994, 0.00038512500000000005, 0.00035632000000000025, 0.00035540300000000066, 0.00038493100000000155, 0.0003570830000000011, 0.00035555599999999993, 0.00038498600000000036, 0.00035780499999999923, 0.0003851110000000005, 0.0003569999999999997, 0.00035775000000000043, 0.0003850840000000008, 0.00035583299999999984, 0.00035647200000000004, 0.00038512500000000005, 0.00035715199999999947, 0.00035540300000000066, 0.0003850980000000004, 0.000385207999999998, 0.0003558469999999994, 0.0003566809999999976, 0.0003558469999999994, 0.0003575830000000016, 0.00035538900000000456, 0.0003571389999999994, 0.0003852639999999963, 0.00035772200000000476, 0.0003849580000000047, 0.0003854030000000064, 0.00038522199999999757, 0.0003576250000000003, 0.0003564999999999957, 0.00035773699999999686, 0.0003574720000000045, 0.0003563050000000012, 0.00035608399999999957, 0.00035676399999999553, 0.0003854859999999974, 0.00035644500000000384, 0.0003560410000000014, 0.0003564720000000035, 0.00035527800000000054, 0.00035722200000000426, 0.0003572359999999969]</msg>
<status status="PASS" starttime="20201030 18:31:07.604" endtime="20201030 18:31:07.606"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.600" endtime="20201030 18:31:07.607"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:07.610" endtime="20201030 18:31:07.630"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.609" endtime="20201030 18:31:07.630"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.608" endtime="20201030 18:31:07.631"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.219" endtime="20201030 18:31:07.631"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.219" endtime="20201030 18:31:07.631"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:07.641" endtime="20201030 18:31:07.678"></status>
</kw>
<msg timestamp="20201030 18:31:07.679" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:07.639" endtime="20201030 18:31:07.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:07.681" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:07.680" endtime="20201030 18:31:07.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:07.682" endtime="20201030 18:31:07.684"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.636" endtime="20201030 18:31:07.684"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.634" endtime="20201030 18:31:07.685"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:07.691" endtime="20201030 18:31:07.976"></status>
</kw>
<msg timestamp="20201030 18:31:07.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024845569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025208403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:07.689" endtime="20201030 18:31:07.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:07.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024845569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025208403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:07.980" endtime="20201030 18:31:07.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:07.988" endtime="20201030 18:31:07.990"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.687" endtime="20201030 18:31:07.991"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.685" endtime="20201030 18:31:07.991"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:07.995" level="INFO">${RESULT} = [{'diff': 0.0003628339999999994}, {'diff': 0.0003565410000000019}, {'diff': 0.0003571669999999985}, {'diff': 0.00035641700000000123}, {'diff': 0.0003575969999999977}, {'diff': 0.0003554029999999972}, ...</msg>
<status status="PASS" starttime="20201030 18:31:07.992" endtime="20201030 18:31:07.995"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:07.999" level="INFO">${ACCURACY} = {'diff': [0.0003628339999999994, 0.0003565410000000019, 0.0003571669999999985, 0.00035641700000000123, 0.0003575969999999977, 0.0003554029999999972, 0.00035595799999999997, 0.0003853329999999981, 0.00...</msg>
<status status="PASS" starttime="20201030 18:31:07.996" endtime="20201030 18:31:07.999"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:08.004" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201030 18:31:08.002" endtime="20201030 18:31:08.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:08.007" level="INFO">VALUE: [0.0003628339999999994, 0.0003565410000000019, 0.0003571669999999985, 0.00035641700000000123, 0.0003575969999999977, 0.0003554029999999972, 0.00035595799999999997, 0.0003853329999999981, 0.0003575280000000028, 0.0003575830000000016, 0.0003568329999999974, 0.0003568190000000013, 0.00038512500000000005, 0.00035748599999999714, 0.0003569860000000001, 0.0003558890000000016, 0.0003851800000000023, 0.00035616700000000445, 0.00035761100000000073, 0.00035729199999999517, 0.00035682000000000075, 0.00035626399999999503, 0.00035700000000000315, 0.0003561940000000041, 0.00035550000000000165, 0.0003569860000000036, 0.0003569579999999975, 0.00038512500000000005, 0.0003853189999999951, 0.0003559029999999977, 0.00035672300000000323, 0.00035659700000000016, 0.0003573610000000005, 0.0003556390000000048, 0.000356972000000004, 0.000357054999999995, 0.0003551249999999978, 0.0003569730000000035, 0.0003557080000000032, 0.00035569499999999615, 0.0003556940000000036, 0.00035533299999999934, 0.0003565410000000019, 0.0003852499999999967, 0.0003558880000000056, 0.0003570830000000011, 0.00035626400000000197, 0.0003575830000000016, 0.00035724999999999646, 0.00035544400000000337]</msg>
<status status="PASS" starttime="20201030 18:31:08.005" endtime="20201030 18:31:08.007"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.000" endtime="20201030 18:31:08.008"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:08.011" endtime="20201030 18:31:08.031"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.010" endtime="20201030 18:31:08.031"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.009" endtime="20201030 18:31:08.032"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.632" endtime="20201030 18:31:08.032"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.632" endtime="20201030 18:31:08.032"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:08.041" endtime="20201030 18:31:08.075"></status>
</kw>
<msg timestamp="20201030 18:31:08.075" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:08.039" endtime="20201030 18:31:08.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:08.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:08.076" endtime="20201030 18:31:08.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:08.080" endtime="20201030 18:31:08.083"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.037" endtime="20201030 18:31:08.084"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.035" endtime="20201030 18:31:08.085"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:08.098" endtime="20201030 18:31:08.390"></status>
</kw>
<msg timestamp="20201030 18:31:08.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020713681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021095375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:08.095" endtime="20201030 18:31:08.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:08.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020713681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021095375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:08.394" endtime="20201030 18:31:08.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:08.402" endtime="20201030 18:31:08.403"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.090" endtime="20201030 18:31:08.404"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.086" endtime="20201030 18:31:08.404"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:08.408" level="INFO">${RESULT} = [{'diff': 0.0003816939999999984}, {'diff': 0.0003562089999999997}, {'diff': 0.00035661099999999973}, {'diff': 0.0003557920000000006}, {'diff': 0.0003562089999999997}, {'diff': 0.00035744399999999843},...</msg>
<status status="PASS" starttime="20201030 18:31:08.405" endtime="20201030 18:31:08.408"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:08.413" level="INFO">${ACCURACY} = {'diff': [0.0003816939999999984, 0.0003562089999999997, 0.00035661099999999973, 0.0003557920000000006, 0.0003562089999999997, 0.00035744399999999843, 0.00035587499999999855, 0.00035643000000000133, 0....</msg>
<status status="PASS" starttime="20201030 18:31:08.409" endtime="20201030 18:31:08.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:08.417" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201030 18:31:08.416" endtime="20201030 18:31:08.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:08.420" level="INFO">VALUE: [0.0003816939999999984, 0.0003562089999999997, 0.00035661099999999973, 0.0003557920000000006, 0.0003562089999999997, 0.00035744399999999843, 0.00035587499999999855, 0.00035643000000000133, 0.0003551800000000001, 0.0003565140000000022, 0.0003571249999999998, 0.00035605600000000043, 0.0003847780000000023, 0.0003560410000000014, 0.0003557219999999993, 0.00035743099999999833, 0.00035724999999999993, 0.00035737500000000005, 0.000356763999999999, 0.0003561110000000027, 0.0003565140000000022, 0.0003560830000000001, 0.00038490199999999947, 0.0003848339999999971, 0.0003563609999999995, 0.00035640300000000166, 0.0003551249999999978, 0.00035513900000000084, 0.00035713799999999643, 0.0003557920000000006, 0.0003849589999999972, 0.0003565140000000022, 0.00038502800000000253, 0.0003551389999999974, 0.00038506900000000177, 0.00035558399999999907, 0.0003560830000000001, 0.00035522200000000226, 0.0003568060000000012, 0.00035505599999999943, 0.0003560270000000018, 0.00035704200000000186, 0.00035679100000000213, 0.00035591600000000473, 0.000355166000000004, 0.00035632000000000025, 0.0003850000000000034, 0.00035592999999999736, 0.0003850970000000009, 0.0003565700000000005]</msg>
<status status="PASS" starttime="20201030 18:31:08.419" endtime="20201030 18:31:08.421"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.414" endtime="20201030 18:31:08.421"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:08.425" endtime="20201030 18:31:08.444"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.423" endtime="20201030 18:31:08.445"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.422" endtime="20201030 18:31:08.445"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.033" endtime="20201030 18:31:08.445"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.033" endtime="20201030 18:31:08.445"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:08.454" endtime="20201030 18:31:08.496"></status>
</kw>
<msg timestamp="20201030 18:31:08.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:08.453" endtime="20201030 18:31:08.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:08.499" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:08.498" endtime="20201030 18:31:08.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:08.500" endtime="20201030 18:31:08.502"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.450" endtime="20201030 18:31:08.502"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.448" endtime="20201030 18:31:08.503"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:08.509" endtime="20201030 18:31:08.799"></status>
</kw>
<msg timestamp="20201030 18:31:08.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024347125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024729972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:08.507" endtime="20201030 18:31:08.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:08.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024347125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024729972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:08.803" endtime="20201030 18:31:08.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:08.811" endtime="20201030 18:31:08.813"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.505" endtime="20201030 18:31:08.813"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.503" endtime="20201030 18:31:08.814"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:08.818" level="INFO">${RESULT} = [{'diff': 0.00038284699999999866}, {'diff': 0.00035584800000000236}, {'diff': 0.00035552699999999784}, {'diff': 0.0003577220000000013}, {'diff': 0.0003575280000000028}, {'diff': 0.00035576400000000147...</msg>
<status status="PASS" starttime="20201030 18:31:08.814" endtime="20201030 18:31:08.818"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:08.822" level="INFO">${ACCURACY} = {'diff': [0.00038284699999999866, 0.00035584800000000236, 0.00035552699999999784, 0.0003577220000000013, 0.0003575280000000028, 0.00035576400000000147, 0.0003573889999999996, 0.0003553189999999998, 0....</msg>
<status status="PASS" starttime="20201030 18:31:08.819" endtime="20201030 18:31:08.822"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:08.826" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201030 18:31:08.825" endtime="20201030 18:31:08.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:08.829" level="INFO">VALUE: [0.00038284699999999866, 0.00035584800000000236, 0.00035552699999999784, 0.0003577220000000013, 0.0003575280000000028, 0.00035576400000000147, 0.0003573889999999996, 0.0003553189999999998, 0.0003561119999999987, 0.0003571799999999986, 0.00038540199999999997, 0.00035594499999999987, 0.0003560980000000026, 0.0003566249999999993, 0.0003572090000000007, 0.00035595899999999944, 0.00035515200000000094, 0.00035693000000000183, 0.00035693099999999783, 0.0003561249999999988, 0.00035659700000000016, 0.0003572920000000021, 0.00035541699999999676, 0.0003559860000000026, 0.0003853750000000003, 0.0003562359999999959, 0.0003555140000000012, 0.0003551939999999962, 0.00035692999999999836, 0.0003553189999999998, 0.00035682000000000075, 0.00035523600000000183, 0.00035759700000000116, 0.0003558190000000003, 0.00038520800000000494, 0.0003555139999999943, 0.000357569000000002, 0.0003564860000000031, 0.0003573610000000005, 0.0003556390000000048, 0.00035698599999999664, 0.0003554029999999972, 0.0003850980000000004, 0.00035511099999999823, 0.0003550140000000007, 0.0003571939999999982, 0.0003562500000000024, 0.00035722200000000426, 0.0003561389999999984, 0.0003551530000000039]</msg>
<status status="PASS" starttime="20201030 18:31:08.827" endtime="20201030 18:31:08.829"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.823" endtime="20201030 18:31:08.830"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:08.834" endtime="20201030 18:31:08.853"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.832" endtime="20201030 18:31:08.854"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.831" endtime="20201030 18:31:08.854"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.446" endtime="20201030 18:31:08.854"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.446" endtime="20201030 18:31:08.854"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:08.863" endtime="20201030 18:31:08.901"></status>
</kw>
<msg timestamp="20201030 18:31:08.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:08.861" endtime="20201030 18:31:08.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:08.907" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:08.904" endtime="20201030 18:31:08.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:08.909" endtime="20201030 18:31:08.913"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.859" endtime="20201030 18:31:08.914"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.857" endtime="20201030 18:31:08.916"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:08.932" endtime="20201030 18:31:09.226"></status>
</kw>
<msg timestamp="20201030 18:31:09.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022519111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022891042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:08.929" endtime="20201030 18:31:09.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:09.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022519111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022891042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:09.230" endtime="20201030 18:31:09.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:09.239" endtime="20201030 18:31:09.241"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.922" endtime="20201030 18:31:09.241"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.917" endtime="20201030 18:31:09.242"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:09.246" level="INFO">${RESULT} = [{'diff': 0.00037193099999999896}, {'diff': 0.00035677800000000204}, {'diff': 0.00035695900000000044}, {'diff': 0.0003561669999999975}, {'diff': 0.00035761100000000073}, {'diff': 0.0003557780000000010...</msg>
<status status="PASS" starttime="20201030 18:31:09.242" endtime="20201030 18:31:09.246"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:09.250" level="INFO">${ACCURACY} = {'diff': [0.00037193099999999896, 0.00035677800000000204, 0.00035695900000000044, 0.0003561669999999975, 0.00035761100000000073, 0.00035577800000000104, 0.00038472200000000054, 0.00035759700000000116,...</msg>
<status status="PASS" starttime="20201030 18:31:09.247" endtime="20201030 18:31:09.250"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:09.254" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201030 18:31:09.253" endtime="20201030 18:31:09.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:09.258" level="INFO">VALUE: [0.00037193099999999896, 0.00035677800000000204, 0.00035695900000000044, 0.0003561669999999975, 0.00035761100000000073, 0.00035577800000000104, 0.00038472200000000054, 0.00035759700000000116, 0.0003576389999999999, 0.00035577800000000104, 0.0003573340000000008, 0.0003850139999999995, 0.00035523599999999836, 0.0003563889999999986, 0.00035577799999999757, 0.00035527799999999707, 0.0003571800000000021, 0.00035581999999999975, 0.0003552500000000014, 0.0003566950000000006, 0.0003561950000000001, 0.00035643000000000133, 0.00035762499999999683, 0.0003557359999999954, 0.00038507000000000124, 0.00035600000000000215, 0.00038544499999999815, 0.00038533299999999465, 0.00038494499999999765, 0.00035574999999999496, 0.0003558469999999994, 0.00035529100000000063, 0.00035626400000000197, 0.00038518099999999833, 0.0003575700000000015, 0.00035624999999999546, 0.0003559170000000042, 0.00038507000000000124, 0.0003574999999999967, 0.0003550970000000056, 0.0003851389999999996, 0.0003555699999999995, 0.0003566119999999992, 0.00035742999999999886, 0.0003568190000000013, 0.00035670799999999725, 0.00035594399999999693, 0.0003551809999999961, 0.000384804999999995, 0.00035633300000000034]</msg>
<status status="PASS" starttime="20201030 18:31:09.256" endtime="20201030 18:31:09.260"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.251" endtime="20201030 18:31:09.261"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:09.266" endtime="20201030 18:31:09.287"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.264" endtime="20201030 18:31:09.287"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.262" endtime="20201030 18:31:09.287"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.855" endtime="20201030 18:31:09.288"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.855" endtime="20201030 18:31:09.288"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:09.297" endtime="20201030 18:31:09.331"></status>
</kw>
<msg timestamp="20201030 18:31:09.332" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:09.295" endtime="20201030 18:31:09.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:09.334" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:09.333" endtime="20201030 18:31:09.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:09.335" endtime="20201030 18:31:09.337"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.293" endtime="20201030 18:31:09.338"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.290" endtime="20201030 18:31:09.338"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:09.346" endtime="20201030 18:31:09.633"></status>
</kw>
<msg timestamp="20201030 18:31:09.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021169917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021527472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:09.344" endtime="20201030 18:31:09.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:09.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021169917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021527472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:09.637" endtime="20201030 18:31:09.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:09.645" endtime="20201030 18:31:09.647"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.341" endtime="20201030 18:31:09.648"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.339" endtime="20201030 18:31:09.648"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:09.653" level="INFO">${RESULT} = [{'diff': 0.000357554999999999}, {'diff': 0.00035615199999999847}, {'diff': 0.00035644500000000037}, {'diff': 0.00035594499999999987}, {'diff': 0.00035674999999999943}, {'diff': 0.00038518099999999833...</msg>
<status status="PASS" starttime="20201030 18:31:09.649" endtime="20201030 18:31:09.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:09.659" level="INFO">${ACCURACY} = {'diff': [0.000357554999999999, 0.00035615199999999847, 0.00035644500000000037, 0.00035594499999999987, 0.00035674999999999943, 0.00038518099999999833, 0.00035505599999999943, 0.00038481899999999805, ...</msg>
<status status="PASS" starttime="20201030 18:31:09.654" endtime="20201030 18:31:09.659"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:09.665" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201030 18:31:09.663" endtime="20201030 18:31:09.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:09.669" level="INFO">VALUE: [0.000357554999999999, 0.00035615199999999847, 0.00035644500000000037, 0.00035594499999999987, 0.00035674999999999943, 0.00038518099999999833, 0.00035505599999999943, 0.00038481899999999805, 0.0003851110000000005, 0.00035615199999999847, 0.00035624999999999893, 0.00035611099999999923, 0.0003553890000000011, 0.00038529200000000235, 0.00038504099999999916, 0.0003557920000000006, 0.00035537499999999805, 0.0003847910000000024, 0.0003553059999999997, 0.00035705600000000143, 0.0003560410000000014, 0.00038534700000000116, 0.0003575700000000015, 0.0003559310000000003, 0.0003570279999999988, 0.0003573610000000005, 0.00035633300000000034, 0.0003576250000000003, 0.00038527799999999585, 0.0003569579999999975, 0.00038490199999999947, 0.0003569590000000039, 0.0003555140000000012, 0.0003571389999999994, 0.00035526400000000097, 0.0003574449999999979, 0.00035511099999999823, 0.00035543099999999633, 0.00035676400000000247, 0.0003553189999999998, 0.00035687499999999955, 0.0003554860000000021, 0.0003854299999999991, 0.0003851389999999996, 0.000356457999999997, 0.00035527800000000054, 0.00038505499999999526, 0.0003572219999999973, 0.00035605500000000095, 0.0003567359999999964]</msg>
<status status="PASS" starttime="20201030 18:31:09.666" endtime="20201030 18:31:09.669"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.660" endtime="20201030 18:31:09.670"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:09.675" endtime="20201030 18:31:09.695"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.672" endtime="20201030 18:31:09.696"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.671" endtime="20201030 18:31:09.696"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.289" endtime="20201030 18:31:09.696"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.288" endtime="20201030 18:31:09.696"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:09.706" endtime="20201030 18:31:09.743"></status>
</kw>
<msg timestamp="20201030 18:31:09.744" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:09.704" endtime="20201030 18:31:09.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:09.746" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:09.745" endtime="20201030 18:31:09.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:09.747" endtime="20201030 18:31:09.749"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.701" endtime="20201030 18:31:09.749"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.699" endtime="20201030 18:31:09.750"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:09.757" endtime="20201030 18:31:10.044"></status>
</kw>
<msg timestamp="20201030 18:31:10.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024542458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024927083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:09.755" endtime="20201030 18:31:10.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:10.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024542458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024927083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:10.049" endtime="20201030 18:31:10.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:10.057" endtime="20201030 18:31:10.059"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.752" endtime="20201030 18:31:10.059"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.751" endtime="20201030 18:31:10.060"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:10.064" level="INFO">${RESULT} = [{'diff': 0.00038462499999999955}, {'diff': 0.00035694399999999793}, {'diff': 0.00035704200000000186}, {'diff': 0.0003551800000000001}, {'diff': 0.00035566599999999754}, {'diff': 0.0003559579999999999...</msg>
<status status="PASS" starttime="20201030 18:31:10.060" endtime="20201030 18:31:10.064"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:10.068" level="INFO">${ACCURACY} = {'diff': [0.00038462499999999955, 0.00035694399999999793, 0.00035704200000000186, 0.0003551800000000001, 0.00035566599999999754, 0.00035595799999999997, 0.00035768100000000205, 0.00035661099999999973,...</msg>
<status status="PASS" starttime="20201030 18:31:10.065" endtime="20201030 18:31:10.068"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:10.073" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201030 18:31:10.072" endtime="20201030 18:31:10.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:10.075" level="INFO">VALUE: [0.00038462499999999955, 0.00035694399999999793, 0.00035704200000000186, 0.0003551800000000001, 0.00035566599999999754, 0.00035595799999999997, 0.00035768100000000205, 0.00035661099999999973, 0.00035677799999999857, 0.0003561249999999988, 0.0003571249999999998, 0.00035687499999999955, 0.00035604200000000086, 0.0003552500000000014, 0.0003852500000000002, 0.0003576250000000003, 0.0003570279999999988, 0.00035555500000000045, 0.0003575839999999976, 0.00038538899999999987, 0.000356457999999997, 0.0003569170000000052, 0.0003853750000000003, 0.00035638799999999915, 0.0003559579999999965, 0.00035693099999999783, 0.0003575140000000032, 0.00035623600000000283, 0.00035624999999999546, 0.0003855970000000014, 0.00035574999999999496, 0.00035704200000000186, 0.0003563469999999999, 0.0003851389999999996, 0.0003570139999999958, 0.0003572219999999973, 0.00038516699999999876, 0.0003561249999999988, 0.0003557500000000019, 0.0003573050000000022, 0.00038501400000000296, 0.00035677700000000256, 0.000357473000000004, 0.0003560269999999949, 0.0003574029999999992, 0.0003573889999999996, 0.0003554170000000037, 0.0003576809999999986, 0.00035758299999999466, 0.0003570690000000015]</msg>
<status status="PASS" starttime="20201030 18:31:10.074" endtime="20201030 18:31:10.076"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.069" endtime="20201030 18:31:10.077"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:10.080" endtime="20201030 18:31:10.100"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.079" endtime="20201030 18:31:10.100"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.077" endtime="20201030 18:31:10.101"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.697" endtime="20201030 18:31:10.101"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.697" endtime="20201030 18:31:10.101"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:10.110" endtime="20201030 18:31:10.146"></status>
</kw>
<msg timestamp="20201030 18:31:10.146" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:10.109" endtime="20201030 18:31:10.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:10.150" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:10.148" endtime="20201030 18:31:10.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:10.152" endtime="20201030 18:31:10.154"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.106" endtime="20201030 18:31:10.155"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.104" endtime="20201030 18:31:10.155"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:10.162" endtime="20201030 18:31:10.451"></status>
</kw>
<msg timestamp="20201030 18:31:10.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021810764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022192, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:31:10.161" endtime="20201030 18:31:10.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:10.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021810764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022192, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:31:10.455" endtime="20201030 18:31:10.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:10.464" endtime="20201030 18:31:10.465"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.158" endtime="20201030 18:31:10.466"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.156" endtime="20201030 18:31:10.466"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:10.470" level="INFO">${RESULT} = [{'diff': 0.0003812360000000001}, {'diff': 0.0003573340000000008}, {'diff': 0.00035559699999999916}, {'diff': 0.0003561249999999988}, {'diff': 0.0003570419999999984}, {'diff': 0.00035591699999999726},...</msg>
<status status="PASS" starttime="20201030 18:31:10.467" endtime="20201030 18:31:10.471"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:10.475" level="INFO">${ACCURACY} = {'diff': [0.0003812360000000001, 0.0003573340000000008, 0.00035559699999999916, 0.0003561249999999988, 0.0003570419999999984, 0.00035591699999999726, 0.00035522200000000226, 0.0003571389999999994, 0.0...</msg>
<status status="PASS" starttime="20201030 18:31:10.472" endtime="20201030 18:31:10.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:10.479" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201030 18:31:10.478" endtime="20201030 18:31:10.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:10.482" level="INFO">VALUE: [0.0003812360000000001, 0.0003573340000000008, 0.00035559699999999916, 0.0003561249999999988, 0.0003570419999999984, 0.00035591699999999726, 0.00035522200000000226, 0.0003571389999999994, 0.00035700000000000315, 0.0003550560000000029, 0.00035515299999999694, 0.0003555699999999995, 0.0003558190000000003, 0.00035563900000000134, 0.00035618100000000055, 0.00035775000000000043, 0.00035504199999999986, 0.00035640300000000166, 0.00035526400000000097, 0.0003568470000000004, 0.00035543000000000033, 0.0003560830000000001, 0.0003568189999999978, 0.0003554309999999998, 0.0003852360000000006, 0.0003573189999999983, 0.0003851389999999996, 0.00035654099999999495, 0.0003556389999999979, 0.0003564999999999957, 0.0003577920000000026, 0.0003573340000000008, 0.0003572359999999969, 0.0003551390000000043, 0.0003553469999999989, 0.00035658400000000007, 0.0003572920000000021, 0.0003561249999999988, 0.00035544400000000337, 0.00038491599999999904, 0.0003569590000000039, 0.0003852360000000041, 0.0003574589999999975, 0.00035754200000000236, 0.0003551799999999966, 0.0003560830000000001, 0.00035661099999999973, 0.0003575269999999964, 0.0003551669999999965, 0.00035626399999999503]</msg>
<status status="PASS" starttime="20201030 18:31:10.480" endtime="20201030 18:31:10.490"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.476" endtime="20201030 18:31:10.490"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:10.494" endtime="20201030 18:31:10.514"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.493" endtime="20201030 18:31:10.514"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.491" endtime="20201030 18:31:10.515"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.102" endtime="20201030 18:31:10.515"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.101" endtime="20201030 18:31:10.515"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:10.524" endtime="20201030 18:31:10.562"></status>
</kw>
<msg timestamp="20201030 18:31:10.563" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:10.523" endtime="20201030 18:31:10.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:10.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:10.564" endtime="20201030 18:31:10.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:10.566" endtime="20201030 18:31:10.568"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.520" endtime="20201030 18:31:10.569"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.518" endtime="20201030 18:31:10.569"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:10.576" endtime="20201030 18:31:10.863"></status>
</kw>
<msg timestamp="20201030 18:31:10.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024826153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0251835, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:31:10.574" endtime="20201030 18:31:10.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:10.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024826153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0251835, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:31:10.868" endtime="20201030 18:31:10.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:10.876" endtime="20201030 18:31:10.878"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.572" endtime="20201030 18:31:10.878"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.570" endtime="20201030 18:31:10.879"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:10.883" level="INFO">${RESULT} = [{'diff': 0.0003573470000000009}, {'diff': 0.000356861}, {'diff': 0.0003851389999999996}, {'diff': 0.00035559699999999916}, {'diff': 0.000357070000000001}, {'diff': 0.0003553750000000015}, {'diff': 0....</msg>
<status status="PASS" starttime="20201030 18:31:10.879" endtime="20201030 18:31:10.883"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:10.888" level="INFO">${ACCURACY} = {'diff': [0.0003573470000000009, 0.000356861, 0.0003851389999999996, 0.00035559699999999916, 0.000357070000000001, 0.0003553750000000015, 0.0003563190000000008, 0.00035537499999999805, 0.0003564450000...</msg>
<status status="PASS" starttime="20201030 18:31:10.884" endtime="20201030 18:31:10.888"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:10.892" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201030 18:31:10.891" endtime="20201030 18:31:10.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:10.895" level="INFO">VALUE: [0.0003573470000000009, 0.000356861, 0.0003851389999999996, 0.00035559699999999916, 0.000357070000000001, 0.0003553750000000015, 0.0003563190000000008, 0.00035537499999999805, 0.00035644500000000037, 0.00035595799999999997, 0.0003854859999999974, 0.000356875000000003, 0.0003556250000000018, 0.0003852779999999993, 0.00035579100000000113, 0.0003573059999999982, 0.00035673599999999986, 0.0003573610000000005, 0.000355860999999999, 0.00035732000000000125, 0.0003577920000000026, 0.00035705600000000143, 0.00035543099999999633, 0.000356457999999997, 0.0003553889999999976, 0.0003556119999999982, 0.0003575419999999954, 0.00035705600000000143, 0.0003850550000000022, 0.00035609699999999966, 0.0003850840000000008, 0.00035705600000000143, 0.0003557920000000006, 0.0003566660000000055, 0.0003560280000000013, 0.00038530500000000245, 0.00035609699999999966, 0.0003560830000000001, 0.00035627800000000154, 0.0003554999999999947, 0.0003563190000000008, 0.00035766599999999954, 0.00035673600000000333, 0.00035754200000000236, 0.00035755500000000245, 0.00035743099999999833, 0.00035743099999999833, 0.000385416999999999, 0.0003564860000000031, 0.0003568479999999999]</msg>
<status status="PASS" starttime="20201030 18:31:10.894" endtime="20201030 18:31:10.896"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.889" endtime="20201030 18:31:10.896"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:10.900" endtime="20201030 18:31:10.919"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.898" endtime="20201030 18:31:10.920"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.897" endtime="20201030 18:31:10.920"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.516" endtime="20201030 18:31:10.921"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.515" endtime="20201030 18:31:10.921"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:10.930" endtime="20201030 18:31:10.965"></status>
</kw>
<msg timestamp="20201030 18:31:10.966" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:10.928" endtime="20201030 18:31:10.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:10.968" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:10.967" endtime="20201030 18:31:10.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:10.969" endtime="20201030 18:31:10.971"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.926" endtime="20201030 18:31:10.972"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.923" endtime="20201030 18:31:10.972"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:10.979" endtime="20201030 18:31:11.266"></status>
</kw>
<msg timestamp="20201030 18:31:11.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02102225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021378542, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:10.977" endtime="20201030 18:31:11.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:11.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02102225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021378542, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:11.270" endtime="20201030 18:31:11.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:11.278" endtime="20201030 18:31:11.280"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.975" endtime="20201030 18:31:11.280"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.973" endtime="20201030 18:31:11.281"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:11.285" level="INFO">${RESULT} = [{'diff': 0.0003562920000000011}, {'diff': 0.0003573060000000017}, {'diff': 0.00035558300000000306}, {'diff': 0.00035692999999999836}, {'diff': 0.0003850139999999995}, {'diff': 0.0003573610000000005},...</msg>
<status status="PASS" starttime="20201030 18:31:11.282" endtime="20201030 18:31:11.285"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:11.289" level="INFO">${ACCURACY} = {'diff': [0.0003562920000000011, 0.0003573060000000017, 0.00035558300000000306, 0.00035692999999999836, 0.0003850139999999995, 0.0003573610000000005, 0.0003570140000000027, 0.0003554860000000021, 0.00...</msg>
<status status="PASS" starttime="20201030 18:31:11.286" endtime="20201030 18:31:11.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:11.294" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201030 18:31:11.293" endtime="20201030 18:31:11.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:11.296" level="INFO">VALUE: [0.0003562920000000011, 0.0003573060000000017, 0.00035558300000000306, 0.00035692999999999836, 0.0003850139999999995, 0.0003573610000000005, 0.0003570140000000027, 0.0003554860000000021, 0.00035759700000000116, 0.0003558479999999989, 0.00035738800000000015, 0.00035711100000000023, 0.0003568880000000031, 0.00038538899999999987, 0.0003577080000000017, 0.0003854859999999974, 0.0003849720000000008, 0.00038554199999999914, 0.0003557920000000006, 0.00035711100000000023, 0.00038526399999999975, 0.000355763999999998, 0.00035755599999999846, 0.00035691700000000173, 0.0003850560000000017, 0.0003576389999999999, 0.00038480599999999796, 0.0003853329999999981, 0.00035752799999999585, 0.0003551530000000039, 0.000356861, 0.0003563050000000012, 0.0003563469999999999, 0.00038541700000000595, 0.0003552370000000013, 0.0003572359999999969, 0.0003555829999999996, 0.0003853750000000003, 0.00035691699999999826, 0.00038549999999999696, 0.00035545800000000294, 0.00035572200000000276, 0.00035774999999999696, 0.00038527799999999585, 0.00038517999999999886, 0.0003553469999999989, 0.00035576400000000147, 0.0003562500000000024, 0.0003553889999999976, 0.0003566799999999981]</msg>
<status status="PASS" starttime="20201030 18:31:11.295" endtime="20201030 18:31:11.297"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.290" endtime="20201030 18:31:11.298"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:11.301" endtime="20201030 18:31:11.321"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.300" endtime="20201030 18:31:11.322"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.299" endtime="20201030 18:31:11.322"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.922" endtime="20201030 18:31:11.322"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.921" endtime="20201030 18:31:11.322"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:11.331" endtime="20201030 18:31:11.373"></status>
</kw>
<msg timestamp="20201030 18:31:11.373" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:11.330" endtime="20201030 18:31:11.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:11.376" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:11.374" endtime="20201030 18:31:11.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:11.377" endtime="20201030 18:31:11.379"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.327" endtime="20201030 18:31:11.380"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.325" endtime="20201030 18:31:11.380"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:11.387" endtime="20201030 18:31:11.674"></status>
</kw>
<msg timestamp="20201030 18:31:11.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026463319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026822, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:31:11.386" endtime="20201030 18:31:11.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:11.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026463319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026822, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:31:11.678" endtime="20201030 18:31:11.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:11.686" endtime="20201030 18:31:11.688"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.383" endtime="20201030 18:31:11.688"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.381" endtime="20201030 18:31:11.689"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:11.693" level="INFO">${RESULT} = [{'diff': 0.0003586809999999996}, {'diff': 0.0003849169999999985}, {'diff': 0.00038483400000000056}, {'diff': 0.0003849580000000012}, {'diff': 0.00035643000000000133}, {'diff': 0.0003559310000000003},...</msg>
<status status="PASS" starttime="20201030 18:31:11.690" endtime="20201030 18:31:11.693"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:11.697" level="INFO">${ACCURACY} = {'diff': [0.0003586809999999996, 0.0003849169999999985, 0.00038483400000000056, 0.0003849580000000012, 0.00035643000000000133, 0.0003559310000000003, 0.00035743000000000233, 0.0003551949999999991, 0.0...</msg>
<status status="PASS" starttime="20201030 18:31:11.694" endtime="20201030 18:31:11.697"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:11.702" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201030 18:31:11.701" endtime="20201030 18:31:11.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:11.704" level="INFO">VALUE: [0.0003586809999999996, 0.0003849169999999985, 0.00038483400000000056, 0.0003849580000000012, 0.00035643000000000133, 0.0003559310000000003, 0.00035743000000000233, 0.0003551949999999991, 0.000356763999999999, 0.0003555280000000008, 0.0003562639999999985, 0.00035583299999999984, 0.00035509699999999866, 0.0003848190000000015, 0.00035623600000000283, 0.000356666999999998, 0.0003556390000000048, 0.00038499999999999646, 0.0003553330000000063, 0.0003563889999999986, 0.0003852770000000033, 0.000355181000000003, 0.0003571799999999986, 0.00035609699999999966, 0.00035565299999999744, 0.0003562500000000024, 0.0003553200000000062, 0.00035759700000000116, 0.0003575139999999963, 0.00035512500000000474, 0.000355972000000003, 0.0003550829999999991, 0.0003851670000000057, 0.00035505499999999995, 0.00035637499999999905, 0.00035637499999999905, 0.0003550140000000007, 0.0003573340000000008, 0.00038494499999999765, 0.00035544500000000284, 0.00035741699999999876, 0.0003849859999999969, 0.00035679199999999467, 0.00035637499999999905, 0.00035722200000000426, 0.00038534800000000063, 0.00035620900000000316, 0.0003552920000000001, 0.00035594399999999693, 0.0003556950000000031]</msg>
<status status="PASS" starttime="20201030 18:31:11.703" endtime="20201030 18:31:11.706"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.698" endtime="20201030 18:31:11.706"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:11.710" endtime="20201030 18:31:11.730"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.709" endtime="20201030 18:31:11.730"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.707" endtime="20201030 18:31:11.731"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.323" endtime="20201030 18:31:11.731"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.323" endtime="20201030 18:31:11.731"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:11.740" endtime="20201030 18:31:11.778"></status>
</kw>
<msg timestamp="20201030 18:31:11.779" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:11.739" endtime="20201030 18:31:11.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:11.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:11.780" endtime="20201030 18:31:11.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:11.783" endtime="20201030 18:31:11.784"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.736" endtime="20201030 18:31:11.785"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.734" endtime="20201030 18:31:11.785"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:11.792" endtime="20201030 18:31:12.078"></status>
</kw>
<msg timestamp="20201030 18:31:12.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024599375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024960958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:11.790" endtime="20201030 18:31:12.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:12.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024599375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024960958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:12.082" endtime="20201030 18:31:12.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:12.091" endtime="20201030 18:31:12.092"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.788" endtime="20201030 18:31:12.093"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.786" endtime="20201030 18:31:12.093"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:12.097" level="INFO">${RESULT} = [{'diff': 0.00036158299999999866}, {'diff': 0.0003573190000000018}, {'diff': 0.0003550280000000003}, {'diff': 0.00035679199999999814}, {'diff': 0.0003566110000000032}, {'diff': 0.00035679199999999814}...</msg>
<status status="PASS" starttime="20201030 18:31:12.094" endtime="20201030 18:31:12.098"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:12.102" level="INFO">${ACCURACY} = {'diff': [0.00036158299999999866, 0.0003573190000000018, 0.0003550280000000003, 0.00035679199999999814, 0.0003566110000000032, 0.00035679199999999814, 0.00035573600000000233, 0.0003558889999999981, 0....</msg>
<status status="PASS" starttime="20201030 18:31:12.098" endtime="20201030 18:31:12.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:12.107" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201030 18:31:12.106" endtime="20201030 18:31:12.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:12.110" level="INFO">VALUE: [0.00036158299999999866, 0.0003573190000000018, 0.0003550280000000003, 0.00035679199999999814, 0.0003566110000000032, 0.00035679199999999814, 0.00035573600000000233, 0.0003558889999999981, 0.00035659700000000016, 0.0003576809999999986, 0.0003553890000000011, 0.00035694500000000087, 0.0003576250000000003, 0.0003562920000000011, 0.0003570690000000015, 0.00035704200000000186, 0.00035708400000000057, 0.00035555599999999993, 0.00035665299999999844, 0.00035744399999999843, 0.000355375000000005, 0.00035705500000000195, 0.00035691699999999826, 0.0003568470000000004, 0.0003852640000000032, 0.00035511099999999823, 0.00035527700000000106, 0.00035765299999999944, 0.00035587499999999855, 0.00038538899999999987, 0.00035597199999999607, 0.0003569029999999987, 0.00035741699999999876, 0.00035705600000000143, 0.0003561950000000036, 0.00035595800000000344, 0.00038507000000000124, 0.00035716599999999904, 0.00038508300000000134, 0.0003560690000000005, 0.0003568190000000013, 0.00038507000000000124, 0.0003552500000000014, 0.0003574999999999967, 0.0003576250000000003, 0.0003571249999999998, 0.00035522200000000226, 0.0003551389999999974, 0.0003562920000000011, 0.0003553050000000002]</msg>
<status status="PASS" starttime="20201030 18:31:12.108" endtime="20201030 18:31:12.110"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.103" endtime="20201030 18:31:12.111"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:12.116" endtime="20201030 18:31:12.137"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.114" endtime="20201030 18:31:12.138"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.112" endtime="20201030 18:31:12.138"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.732" endtime="20201030 18:31:12.139"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.731" endtime="20201030 18:31:12.139"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:12.150" endtime="20201030 18:31:12.185"></status>
</kw>
<msg timestamp="20201030 18:31:12.186" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:12.148" endtime="20201030 18:31:12.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:12.188" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:12.187" endtime="20201030 18:31:12.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:12.189" endtime="20201030 18:31:12.191"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.146" endtime="20201030 18:31:12.192"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.143" endtime="20201030 18:31:12.192"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:12.199" endtime="20201030 18:31:12.492"></status>
</kw>
<msg timestamp="20201030 18:31:12.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024952556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025331569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:12.197" endtime="20201030 18:31:12.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:12.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024952556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025331569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:12.496" endtime="20201030 18:31:12.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:12.505" endtime="20201030 18:31:12.506"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.195" endtime="20201030 18:31:12.507"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.193" endtime="20201030 18:31:12.507"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:12.511" level="INFO">${RESULT} = [{'diff': 0.00037901300000000096}, {'diff': 0.0003571249999999998}, {'diff': 0.00035729099999999916}, {'diff': 0.0003567920000000016}, {'diff': 0.00035663900000000234}, {'diff': 0.00035594499999999987...</msg>
<status status="PASS" starttime="20201030 18:31:12.508" endtime="20201030 18:31:12.512"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:12.515" level="INFO">${ACCURACY} = {'diff': [0.00037901300000000096, 0.0003571249999999998, 0.00035729099999999916, 0.0003567920000000016, 0.00035663900000000234, 0.00035594499999999987, 0.0003557089999999992, 0.00035766599999999954, 0...</msg>
<status status="PASS" starttime="20201030 18:31:12.512" endtime="20201030 18:31:12.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:12.520" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201030 18:31:12.519" endtime="20201030 18:31:12.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:12.522" level="INFO">VALUE: [0.00037901300000000096, 0.0003571249999999998, 0.00035729099999999916, 0.0003567920000000016, 0.00035663900000000234, 0.00035594499999999987, 0.0003557089999999992, 0.00035766599999999954, 0.0003565700000000005, 0.0003850970000000009, 0.000356861, 0.00035744500000000137, 0.0003852500000000002, 0.0003557629999999985, 0.00038494400000000165, 0.00038527699999999984, 0.00035609700000000313, 0.0003556799999999971, 0.00035616599999999804, 0.0003563609999999995, 0.0003561249999999988, 0.00038497300000000373, 0.0003568050000000017, 0.0003574589999999975, 0.00035726399999999603, 0.00035683300000000084, 0.0003560140000000017, 0.00035540300000000413, 0.00035545800000000294, 0.00035704200000000186, 0.0003567229999999963, 0.0003849299999999986, 0.00038533400000000106, 0.00038495799999999775, 0.00035743100000000527, 0.0003574589999999975, 0.00035694400000000487, 0.00035679100000000213, 0.00035722200000000426, 0.0003567219999999968, 0.00038518100000000527, 0.0003565140000000022, 0.0003561379999999989, 0.00035722300000000373, 0.000357457999999998, 0.0003563889999999986, 0.0003567080000000042, 0.0003854859999999974, 0.0003848330000000011, 0.00035566599999999754]</msg>
<status status="PASS" starttime="20201030 18:31:12.521" endtime="20201030 18:31:12.523"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.516" endtime="20201030 18:31:12.524"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:12.528" endtime="20201030 18:31:12.547"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.526" endtime="20201030 18:31:12.548"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.525" endtime="20201030 18:31:12.548"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.140" endtime="20201030 18:31:12.548"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.139" endtime="20201030 18:31:12.548"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:12.557" endtime="20201030 18:31:12.597"></status>
</kw>
<msg timestamp="20201030 18:31:12.597" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:12.556" endtime="20201030 18:31:12.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:12.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:12.598" endtime="20201030 18:31:12.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:12.601" endtime="20201030 18:31:12.603"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.553" endtime="20201030 18:31:12.603"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.551" endtime="20201030 18:31:12.604"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:12.610" endtime="20201030 18:31:12.895"></status>
</kw>
<msg timestamp="20201030 18:31:12.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026119958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026486833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:12.609" endtime="20201030 18:31:12.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:12.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026119958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026486833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:12.899" endtime="20201030 18:31:12.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:12.908" endtime="20201030 18:31:12.909"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.606" endtime="20201030 18:31:12.910"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.604" endtime="20201030 18:31:12.910"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:12.914" level="INFO">${RESULT} = [{'diff': 0.0003668750000000026}, {'diff': 0.000355860999999999}, {'diff': 0.00035595799999999997}, {'diff': 0.0003562219999999998}, {'diff': 0.000357764}, {'diff': 0.00035669400000000115}, {'diff': 0...</msg>
<status status="PASS" starttime="20201030 18:31:12.911" endtime="20201030 18:31:12.915"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:12.918" level="INFO">${ACCURACY} = {'diff': [0.0003668750000000026, 0.000355860999999999, 0.00035595799999999997, 0.0003562219999999998, 0.000357764, 0.00035669400000000115, 0.0003556379999999984, 0.00035519399999999965, 0.000354985999...</msg>
<status status="PASS" starttime="20201030 18:31:12.915" endtime="20201030 18:31:12.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:12.923" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201030 18:31:12.922" endtime="20201030 18:31:12.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:12.926" level="INFO">VALUE: [0.0003668750000000026, 0.000355860999999999, 0.00035595799999999997, 0.0003562219999999998, 0.000357764, 0.00035669400000000115, 0.0003556379999999984, 0.00035519399999999965, 0.0003549859999999981, 0.00038516700000000223, 0.0003570830000000011, 0.0003561249999999988, 0.0003555280000000008, 0.0003550829999999991, 0.0003559170000000042, 0.0003572500000000034, 0.0003551939999999962, 0.00038501400000000296, 0.0003564029999999982, 0.0003557500000000019, 0.00035531999999999925, 0.00035720799999999775, 0.0003849589999999972, 0.00035587499999999855, 0.0003854719999999978, 0.0003556939999999967, 0.0003569449999999974, 0.00035554200000000036, 0.00035522200000000226, 0.0003571249999999998, 0.00035697199999999707, 0.00035672300000000323, 0.00035715299999999894, 0.0003570280000000023, 0.0003854309999999986, 0.0003851949999999979, 0.00035658400000000007, 0.0003851529999999992, 0.00038495799999999775, 0.00035659700000000016, 0.00035761100000000073, 0.0003568050000000017, 0.0003565419999999944, 0.0003567769999999956, 0.00035633300000000034, 0.00035711100000000023, 0.0003570419999999949, 0.0003572500000000034, 0.00035665299999999844, 0.0003850000000000034]</msg>
<status status="PASS" starttime="20201030 18:31:12.924" endtime="20201030 18:31:12.927"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.919" endtime="20201030 18:31:12.928"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:12.932" endtime="20201030 18:31:12.951"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.930" endtime="20201030 18:31:12.952"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.929" endtime="20201030 18:31:12.952"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.549" endtime="20201030 18:31:12.952"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.549" endtime="20201030 18:31:12.953"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:12.962" endtime="20201030 18:31:13.003"></status>
</kw>
<msg timestamp="20201030 18:31:13.004" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:12.960" endtime="20201030 18:31:13.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:13.006" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:13.005" endtime="20201030 18:31:13.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:13.007" endtime="20201030 18:31:13.009"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.957" endtime="20201030 18:31:13.009"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.955" endtime="20201030 18:31:13.010"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:13.017" endtime="20201030 18:31:13.305"></status>
</kw>
<msg timestamp="20201030 18:31:13.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024012833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024392028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:13.015" endtime="20201030 18:31:13.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:13.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024012833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024392028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:13.309" endtime="20201030 18:31:13.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:13.317" endtime="20201030 18:31:13.319"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.013" endtime="20201030 18:31:13.320"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.010" endtime="20201030 18:31:13.320"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:13.324" level="INFO">${RESULT} = [{'diff': 0.00037919499999999884}, {'diff': 0.0003850550000000022}, {'diff': 0.00038516699999999876}, {'diff': 0.00035723699999999983}, {'diff': 0.00035545799999999947}, {'diff': 0.000355666000000001}...</msg>
<status status="PASS" starttime="20201030 18:31:13.321" endtime="20201030 18:31:13.324"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:13.329" level="INFO">${ACCURACY} = {'diff': [0.00037919499999999884, 0.0003850550000000022, 0.00038516699999999876, 0.00035723699999999983, 0.00035545799999999947, 0.000355666000000001, 0.0003566670000000015, 0.00038519500000000137, 0....</msg>
<status status="PASS" starttime="20201030 18:31:13.325" endtime="20201030 18:31:13.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:13.334" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201030 18:31:13.333" endtime="20201030 18:31:13.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:13.336" level="INFO">VALUE: [0.00037919499999999884, 0.0003850550000000022, 0.00038516699999999876, 0.00035723699999999983, 0.00035545799999999947, 0.000355666000000001, 0.0003566670000000015, 0.00038519500000000137, 0.00035591600000000126, 0.00035761100000000073, 0.00038516699999999876, 0.00035752699999999984, 0.00035563900000000134, 0.000355473000000002, 0.0003575419999999989, 0.00035727800000000254, 0.0003551800000000001, 0.000356861, 0.0003562080000000002, 0.0003559029999999977, 0.00035540200000000466, 0.0003556799999999971, 0.0003566249999999993, 0.0003573470000000009, 0.00035720799999999775, 0.00035758400000000107, 0.00035758400000000107, 0.0003561799999999976, 0.0003565139999999953, 0.0003576799999999991, 0.0003561530000000049, 0.0003556530000000044, 0.0003576389999999999, 0.0003563469999999999, 0.0003854719999999978, 0.0003564860000000031, 0.0003552370000000013, 0.000356861, 0.00038512500000000005, 0.0003848749999999998, 0.0003573610000000005, 0.0003852910000000029, 0.00035537499999999805, 0.0003551809999999961, 0.0003570830000000011, 0.0003573340000000008, 0.0003567500000000029, 0.00035659799999999964, 0.0003553889999999976, 0.00038501400000000296]</msg>
<status status="PASS" starttime="20201030 18:31:13.335" endtime="20201030 18:31:13.337"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.330" endtime="20201030 18:31:13.338"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:13.342" endtime="20201030 18:31:13.361"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.340" endtime="20201030 18:31:13.362"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.339" endtime="20201030 18:31:13.362"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.954" endtime="20201030 18:31:13.362"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.953" endtime="20201030 18:31:13.363"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:13.372" endtime="20201030 18:31:13.405"></status>
</kw>
<msg timestamp="20201030 18:31:13.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:13.370" endtime="20201030 18:31:13.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:13.409" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:13.407" endtime="20201030 18:31:13.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:13.410" endtime="20201030 18:31:13.412"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.367" endtime="20201030 18:31:13.413"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.365" endtime="20201030 18:31:13.413"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:13.420" endtime="20201030 18:31:13.708"></status>
</kw>
<msg timestamp="20201030 18:31:13.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020989667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021371236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:13.418" endtime="20201030 18:31:13.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:13.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020989667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021371236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:13.712" endtime="20201030 18:31:13.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:13.721" endtime="20201030 18:31:13.722"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.416" endtime="20201030 18:31:13.723"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.414" endtime="20201030 18:31:13.723"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:13.727" level="INFO">${RESULT} = [{'diff': 0.00038156899999999827}, {'diff': 0.00038504199999999864}, {'diff': 0.0003849299999999986}, {'diff': 0.00035697200000000054}, {'diff': 0.00035558400000000254}, {'diff': 0.000355167}, {'diff'...</msg>
<status status="PASS" starttime="20201030 18:31:13.724" endtime="20201030 18:31:13.728"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:13.732" level="INFO">${ACCURACY} = {'diff': [0.00038156899999999827, 0.00038504199999999864, 0.0003849299999999986, 0.00035697200000000054, 0.00035558400000000254, 0.000355167, 0.00035533299999999934, 0.0003848879999999999, 0.000384915...</msg>
<status status="PASS" starttime="20201030 18:31:13.728" endtime="20201030 18:31:13.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:13.736" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201030 18:31:13.735" endtime="20201030 18:31:13.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:13.739" level="INFO">VALUE: [0.00038156899999999827, 0.00038504199999999864, 0.0003849299999999986, 0.00035697200000000054, 0.00035558400000000254, 0.000355167, 0.00035533299999999934, 0.0003848879999999999, 0.00038491599999999904, 0.0003849309999999981, 0.0003851659999999993, 0.00035509799999999814, 0.0003575279999999993, 0.0003570830000000011, 0.00038522200000000104, 0.0003570280000000023, 0.0003572090000000007, 0.0003563890000000021, 0.0003569440000000014, 0.00035733300000000134, 0.00038522200000000104, 0.0003571389999999994, 0.0003849720000000008, 0.00035565299999999744, 0.00038483400000000056, 0.0003550689999999995, 0.0003853750000000003, 0.00035607, 0.0003552080000000027, 0.00035601300000000224, 0.0003562080000000037, 0.00038512500000000005, 0.00038517999999999886, 0.00035559699999999916, 0.00035682000000000075, 0.0003854439999999987, 0.0003571950000000046, 0.00035577800000000104, 0.00035511099999999823, 0.0003564019999999987, 0.0003565139999999953, 0.0003555699999999995, 0.00038486100000000023, 0.0003853750000000003, 0.0003849860000000038, 0.0003852910000000029, 0.0003850970000000009, 0.00035627800000000154, 0.0003559999999999952, 0.0003572219999999973]</msg>
<status status="PASS" starttime="20201030 18:31:13.737" endtime="20201030 18:31:13.740"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.732" endtime="20201030 18:31:13.740"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:13.744" endtime="20201030 18:31:13.764"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.742" endtime="20201030 18:31:13.764"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.741" endtime="20201030 18:31:13.764"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.363" endtime="20201030 18:31:13.765"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.363" endtime="20201030 18:31:13.765"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:13.774" endtime="20201030 18:31:13.813"></status>
</kw>
<msg timestamp="20201030 18:31:13.814" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:13.772" endtime="20201030 18:31:13.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:13.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:13.815" endtime="20201030 18:31:13.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:13.817" endtime="20201030 18:31:13.819"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.770" endtime="20201030 18:31:13.819"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.767" endtime="20201030 18:31:13.820"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:13.827" endtime="20201030 18:31:14.113"></status>
</kw>
<msg timestamp="20201030 18:31:14.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025617917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025977139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:13.825" endtime="20201030 18:31:14.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:14.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025617917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025977139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:14.117" endtime="20201030 18:31:14.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:14.125" endtime="20201030 18:31:14.127"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.822" endtime="20201030 18:31:14.128"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.820" endtime="20201030 18:31:14.128"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:14.132" level="INFO">${RESULT} = [{'diff': 0.0003592219999999993}, {'diff': 0.0003854309999999986}, {'diff': 0.0003572220000000008}, {'diff': 0.0003550829999999991}, {'diff': 0.00035595799999999997}, {'diff': 0.00035609699999999966},...</msg>
<status status="PASS" starttime="20201030 18:31:14.129" endtime="20201030 18:31:14.133"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:14.136" level="INFO">${ACCURACY} = {'diff': [0.0003592219999999993, 0.0003854309999999986, 0.0003572220000000008, 0.0003550829999999991, 0.00035595799999999997, 0.00035609699999999966, 0.00035577800000000104, 0.0003851940000000019, 0.0...</msg>
<status status="PASS" starttime="20201030 18:31:14.133" endtime="20201030 18:31:14.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:14.141" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201030 18:31:14.140" endtime="20201030 18:31:14.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:14.144" level="INFO">VALUE: [0.0003592219999999993, 0.0003854309999999986, 0.0003572220000000008, 0.0003550829999999991, 0.00035595799999999997, 0.00035609699999999966, 0.00035577800000000104, 0.0003851940000000019, 0.000356861, 0.00035529099999999716, 0.00035629099999999816, 0.0003561530000000014, 0.0003571809999999981, 0.000385416999999999, 0.0003559860000000026, 0.0003568190000000013, 0.0003851110000000005, 0.00035598700000000205, 0.0003558050000000007, 0.00035661099999999973, 0.0003557219999999958, 0.00035626400000000197, 0.0003560280000000013, 0.0003551940000000031, 0.00035527800000000054, 0.00035609699999999966, 0.00035580599999999324, 0.0003554159999999973, 0.0003576120000000002, 0.0003563469999999999, 0.00035576400000000147, 0.0003573190000000018, 0.00038486100000000023, 0.00035604200000000086, 0.00035647199999999657, 0.0003551390000000043, 0.0003555419999999934, 0.0003559159999999978, 0.00035697199999999707, 0.00038531999999999456, 0.0003556249999999983, 0.00035711100000000023, 0.00038516699999999876, 0.00035588799999999865, 0.0003570140000000027, 0.0003568470000000004, 0.000356958999999997, 0.0003850550000000022, 0.00035526399999999403, 0.0003568470000000004]</msg>
<status status="PASS" starttime="20201030 18:31:14.142" endtime="20201030 18:31:14.147"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.137" endtime="20201030 18:31:14.147"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:14.153" endtime="20201030 18:31:14.173"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.151" endtime="20201030 18:31:14.174"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.149" endtime="20201030 18:31:14.175"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.766" endtime="20201030 18:31:14.175"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.765" endtime="20201030 18:31:14.176"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:14.190" endtime="20201030 18:31:14.225"></status>
</kw>
<msg timestamp="20201030 18:31:14.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:14.187" endtime="20201030 18:31:14.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:14.228" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:14.227" endtime="20201030 18:31:14.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:14.229" endtime="20201030 18:31:14.231"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.184" endtime="20201030 18:31:14.232"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.180" endtime="20201030 18:31:14.232"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:14.239" endtime="20201030 18:31:14.526"></status>
</kw>
<msg timestamp="20201030 18:31:14.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028158542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028524931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:14.237" endtime="20201030 18:31:14.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:14.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028158542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028524931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:14.530" endtime="20201030 18:31:14.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:14.539" endtime="20201030 18:31:14.541"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.235" endtime="20201030 18:31:14.541"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.233" endtime="20201030 18:31:14.542"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:14.546" level="INFO">${RESULT} = [{'diff': 0.0003663889999999982}, {'diff': 0.0003573329999999979}, {'diff': 0.00035677700000000256}, {'diff': 0.0003555829999999996}, {'diff': 0.00035561099999999873}, {'diff': 0.00035747200000000104}...</msg>
<status status="PASS" starttime="20201030 18:31:14.542" endtime="20201030 18:31:14.546"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:14.551" level="INFO">${ACCURACY} = {'diff': [0.0003663889999999982, 0.0003573329999999979, 0.00035677700000000256, 0.0003555829999999996, 0.00035561099999999873, 0.00035747200000000104, 0.0003558050000000007, 0.0003575839999999976, 0.0...</msg>
<status status="PASS" starttime="20201030 18:31:14.547" endtime="20201030 18:31:14.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:14.555" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201030 18:31:14.554" endtime="20201030 18:31:14.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:14.558" level="INFO">VALUE: [0.0003663889999999982, 0.0003573329999999979, 0.00035677700000000256, 0.0003555829999999996, 0.00035561099999999873, 0.00035747200000000104, 0.0003558050000000007, 0.0003575839999999976, 0.0003851379999999967, 0.00035665199999999897, 0.00035655500000000145, 0.00038541700000000595, 0.00035579100000000113, 0.00035655600000000093, 0.00038538899999999987, 0.0003559029999999977, 0.000356457999999997, 0.0003556809999999966, 0.00035755600000000193, 0.00035697199999999707, 0.00035676400000000247, 0.00035665199999999897, 0.0003559159999999978, 0.00038547200000000476, 0.000356666999999998, 0.00035588900000000506, 0.00035543099999999633, 0.0003576250000000003, 0.0003572080000000047, 0.00035682000000000075, 0.0003561389999999984, 0.00035655500000000145, 0.00035694400000000487, 0.0003577359999999974, 0.0003551520000000044, 0.0003567920000000016, 0.00035547299999999504, 0.0003558190000000003, 0.00035616599999999804, 0.0003560690000000005, 0.0003573190000000018, 0.0003560830000000001, 0.00035755600000000193, 0.0003563889999999986, 0.00035765299999999944, 0.0003557219999999958, 0.00035672200000000376, 0.00035600000000000215, 0.00038512500000000005, 0.0003554860000000021]</msg>
<status status="PASS" starttime="20201030 18:31:14.557" endtime="20201030 18:31:14.559"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.552" endtime="20201030 18:31:14.559"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:14.563" endtime="20201030 18:31:14.583"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.562" endtime="20201030 18:31:14.583"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.560" endtime="20201030 18:31:14.584"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.177" endtime="20201030 18:31:14.584"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.176" endtime="20201030 18:31:14.584"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:14.593" endtime="20201030 18:31:14.631"></status>
</kw>
<msg timestamp="20201030 18:31:14.632" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:14.591" endtime="20201030 18:31:14.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:14.634" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:14.633" endtime="20201030 18:31:14.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:14.635" endtime="20201030 18:31:14.637"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.589" endtime="20201030 18:31:14.638"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.587" endtime="20201030 18:31:14.638"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:14.645" endtime="20201030 18:31:14.932"></status>
</kw>
<msg timestamp="20201030 18:31:14.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025315597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025671708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:14.643" endtime="20201030 18:31:14.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:14.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025315597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025671708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:14.936" endtime="20201030 18:31:14.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:14.944" endtime="20201030 18:31:14.946"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.640" endtime="20201030 18:31:14.947"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.639" endtime="20201030 18:31:14.947"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:14.951" level="INFO">${RESULT} = [{'diff': 0.0003561110000000027}, {'diff': 0.0003561379999999989}, {'diff': 0.00035647200000000004}, {'diff': 0.0003569159999999988}, {'diff': 0.0003849580000000012}, {'diff': 0.0003573889999999996}, ...</msg>
<status status="PASS" starttime="20201030 18:31:14.948" endtime="20201030 18:31:14.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:14.955" level="INFO">${ACCURACY} = {'diff': [0.0003561110000000027, 0.0003561379999999989, 0.00035647200000000004, 0.0003569159999999988, 0.0003849580000000012, 0.0003573889999999996, 0.0003552920000000001, 0.0003851810000000018, 0.000...</msg>
<status status="PASS" starttime="20201030 18:31:14.952" endtime="20201030 18:31:14.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:14.960" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201030 18:31:14.959" endtime="20201030 18:31:14.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:14.962" level="INFO">VALUE: [0.0003561110000000027, 0.0003561379999999989, 0.00035647200000000004, 0.0003569159999999988, 0.0003849580000000012, 0.0003573889999999996, 0.0003552920000000001, 0.0003851810000000018, 0.00035515200000000094, 0.0003558060000000002, 0.0003572220000000008, 0.0003573189999999983, 0.0003556250000000018, 0.0003557500000000019, 0.0003573610000000005, 0.000356861, 0.0003555279999999973, 0.00035500000000000115, 0.00035724999999999646, 0.0003564029999999982, 0.00035609699999999966, 0.00035526400000000097, 0.00038480500000000195, 0.00035744400000000537, 0.0003566390000000058, 0.0003566799999999981, 0.00035543100000000327, 0.00038522199999999757, 0.000356958999999997, 0.0003562219999999963, 0.0003561669999999975, 0.0003570140000000027, 0.0003568889999999991, 0.0003554590000000024, 0.00038512500000000005, 0.00035541699999999676, 0.00038483400000000056, 0.00035676400000000247, 0.00035627700000000206, 0.0003570270000000028, 0.00035587499999999855, 0.0003550689999999995, 0.0003851389999999996, 0.00035772200000000476, 0.0003554029999999972, 0.00035633300000000034, 0.00035543100000000327, 0.0003560280000000013, 0.00035519499999999565, 0.0003563190000000008]</msg>
<status status="PASS" starttime="20201030 18:31:14.961" endtime="20201030 18:31:14.963"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.956" endtime="20201030 18:31:14.964"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:14.968" endtime="20201030 18:31:14.987"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.966" endtime="20201030 18:31:14.988"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.965" endtime="20201030 18:31:14.988"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.585" endtime="20201030 18:31:14.988"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.584" endtime="20201030 18:31:14.988"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:14.998" endtime="20201030 18:31:15.033"></status>
</kw>
<msg timestamp="20201030 18:31:15.034" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:14.996" endtime="20201030 18:31:15.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:15.036" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:15.035" endtime="20201030 18:31:15.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:15.037" endtime="20201030 18:31:15.039"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.993" endtime="20201030 18:31:15.039"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.991" endtime="20201030 18:31:15.040"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:15.047" endtime="20201030 18:31:15.333"></status>
</kw>
<msg timestamp="20201030 18:31:15.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022792361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023165306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:15.045" endtime="20201030 18:31:15.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:15.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022792361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023165306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:15.337" endtime="20201030 18:31:15.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:15.346" endtime="20201030 18:31:15.347"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.042" endtime="20201030 18:31:15.348"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.041" endtime="20201030 18:31:15.348"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:15.352" level="INFO">${RESULT} = [{'diff': 0.0003729449999999995}, {'diff': 0.000355875000000002}, {'diff': 0.00038538899999999987}, {'diff': 0.000385611000000001}, {'diff': 0.0003553469999999989}, {'diff': 0.00035661099999999973}, {...</msg>
<status status="PASS" starttime="20201030 18:31:15.349" endtime="20201030 18:31:15.353"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:15.357" level="INFO">${ACCURACY} = {'diff': [0.0003729449999999995, 0.000355875000000002, 0.00038538899999999987, 0.000385611000000001, 0.0003553469999999989, 0.00035661099999999973, 0.0003857079999999985, 0.00035722300000000026, 0.000...</msg>
<status status="PASS" starttime="20201030 18:31:15.353" endtime="20201030 18:31:15.357"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:15.361" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201030 18:31:15.360" endtime="20201030 18:31:15.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:15.364" level="INFO">VALUE: [0.0003729449999999995, 0.000355875000000002, 0.00038538899999999987, 0.000385611000000001, 0.0003553469999999989, 0.00035661099999999973, 0.0003857079999999985, 0.00035722300000000026, 0.000356861, 0.00038544400000000215, 0.00035607, 0.000355972999999999, 0.0003555280000000008, 0.00035787500000000055, 0.00038548600000000086, 0.00035533299999999934, 0.00035679199999999814, 0.00035507000000000247, 0.00038493100000000155, 0.00038558299999999837, 0.0003851659999999993, 0.0003849999999999999, 0.00038506900000000177, 0.00035597199999999607, 0.00035730499999999527, 0.00035554200000000036, 0.0003553189999999998, 0.0003853330000000016, 0.0003576939999999987, 0.0003560140000000017, 0.0003576530000000064, 0.0003551950000000026, 0.0003571530000000059, 0.0003563190000000008, 0.0003556799999999971, 0.00035672200000000376, 0.0003573749999999931, 0.00038502800000000253, 0.0003571249999999998, 0.00038534800000000063, 0.0003568469999999935, 0.00035652799999999485, 0.0003853890000000068, 0.00035583299999999984, 0.0003565700000000005, 0.0003560410000000014, 0.00035765199999999997, 0.00035640300000000513, 0.0003855279999999961, 0.00035581999999999975]</msg>
<status status="PASS" starttime="20201030 18:31:15.362" endtime="20201030 18:31:15.365"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.357" endtime="20201030 18:31:15.366"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:15.370" endtime="20201030 18:31:15.389"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.368" endtime="20201030 18:31:15.390"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.367" endtime="20201030 18:31:15.390"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.989" endtime="20201030 18:31:15.391"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.989" endtime="20201030 18:31:15.391"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:15.400" endtime="20201030 18:31:15.436"></status>
</kw>
<msg timestamp="20201030 18:31:15.436" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:15.398" endtime="20201030 18:31:15.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:15.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:15.438" endtime="20201030 18:31:15.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:15.440" endtime="20201030 18:31:15.442"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.395" endtime="20201030 18:31:15.443"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.393" endtime="20201030 18:31:15.443"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:15.450" endtime="20201030 18:31:15.738"></status>
</kw>
<msg timestamp="20201030 18:31:15.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022539819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022908597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:15.449" endtime="20201030 18:31:15.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:15.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022539819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022908597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:15.742" endtime="20201030 18:31:15.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:15.750" endtime="20201030 18:31:15.752"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.446" endtime="20201030 18:31:15.752"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.444" endtime="20201030 18:31:15.753"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:15.757" level="INFO">${RESULT} = [{'diff': 0.00036877800000000016}, {'diff': 0.00035701399999999925}, {'diff': 0.0003854309999999986}, {'diff': 0.00038544499999999815}, {'diff': 0.00035700000000000315}, {'diff': 0.0003575970000000011...</msg>
<status status="PASS" starttime="20201030 18:31:15.754" endtime="20201030 18:31:15.757"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:15.762" level="INFO">${ACCURACY} = {'diff': [0.00036877800000000016, 0.00035701399999999925, 0.0003854309999999986, 0.00038544499999999815, 0.00035700000000000315, 0.00035759700000000116, 0.0003559859999999991, 0.0003568189999999978, 0...</msg>
<status status="PASS" starttime="20201030 18:31:15.758" endtime="20201030 18:31:15.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:15.766" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201030 18:31:15.765" endtime="20201030 18:31:15.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:15.769" level="INFO">VALUE: [0.00036877800000000016, 0.00035701399999999925, 0.0003854309999999986, 0.00038544499999999815, 0.00035700000000000315, 0.00035759700000000116, 0.0003559859999999991, 0.0003568189999999978, 0.0003557500000000019, 0.0003553479999999984, 0.0003564999999999992, 0.00035627800000000154, 0.0003568470000000004, 0.0003851939999999984, 0.00035655599999999746, 0.00035590300000000116, 0.0003575000000000002, 0.00038483400000000056, 0.0003577359999999974, 0.0003578890000000001, 0.00038505499999999873, 0.0003854580000000017, 0.0003568189999999978, 0.0003556800000000006, 0.0003850550000000022, 0.00035666700000000495, 0.0003556379999999984, 0.0003575830000000016, 0.0003576389999999999, 0.0003563479999999994, 0.0003563889999999986, 0.0003571799999999986, 0.00035737500000000005, 0.000357070000000001, 0.000357054999999995, 0.00038545799999999825, 0.00035758400000000107, 0.00038518099999999833, 0.00035576400000000147, 0.0003564590000000034, 0.000357666999999999, 0.00035758299999999466, 0.00035682000000000075, 0.0003855829999999949, 0.00035587499999999855, 0.00035574999999999496, 0.0003560830000000001, 0.00035543100000000327, 0.00035672200000000376, 0.0003572500000000034]</msg>
<status status="PASS" starttime="20201030 18:31:15.767" endtime="20201030 18:31:15.773"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.763" endtime="20201030 18:31:15.774"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:15.778" endtime="20201030 18:31:15.797"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.776" endtime="20201030 18:31:15.798"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.775" endtime="20201030 18:31:15.798"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.392" endtime="20201030 18:31:15.798"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.391" endtime="20201030 18:31:15.799"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:15.807" endtime="20201030 18:31:15.842"></status>
</kw>
<msg timestamp="20201030 18:31:15.843" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:15.806" endtime="20201030 18:31:15.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:15.845" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:15.844" endtime="20201030 18:31:15.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:15.846" endtime="20201030 18:31:15.848"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.803" endtime="20201030 18:31:15.848"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.801" endtime="20201030 18:31:15.849"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:15.855" endtime="20201030 18:31:16.163"></status>
</kw>
<msg timestamp="20201030 18:31:16.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021518319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021875889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:15.854" endtime="20201030 18:31:16.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:16.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021518319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021875889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:16.167" endtime="20201030 18:31:16.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:16.176" endtime="20201030 18:31:16.177"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.851" endtime="20201030 18:31:16.178"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.849" endtime="20201030 18:31:16.178"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:16.182" level="INFO">${RESULT} = [{'diff': 0.00035756999999999803}, {'diff': 0.00035682000000000075}, {'diff': 0.0003561110000000027}, {'diff': 0.0003572359999999969}, {'diff': 0.00038522200000000104}, {'diff': 0.00035677800000000204...</msg>
<status status="PASS" starttime="20201030 18:31:16.179" endtime="20201030 18:31:16.182"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:16.186" level="INFO">${ACCURACY} = {'diff': [0.00035756999999999803, 0.00035682000000000075, 0.0003561110000000027, 0.0003572359999999969, 0.00038522200000000104, 0.00035677800000000204, 0.0003558469999999994, 0.0003574860000000006, 0....</msg>
<status status="PASS" starttime="20201030 18:31:16.183" endtime="20201030 18:31:16.186"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:16.190" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201030 18:31:16.189" endtime="20201030 18:31:16.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:16.193" level="INFO">VALUE: [0.00035756999999999803, 0.00035682000000000075, 0.0003561110000000027, 0.0003572359999999969, 0.00038522200000000104, 0.00035677800000000204, 0.0003558469999999994, 0.0003574860000000006, 0.0003564310000000008, 0.00035672299999999976, 0.0003564019999999987, 0.00035572200000000276, 0.0003570410000000024, 0.0003574029999999992, 0.00035644399999999743, 0.00035724999999999993, 0.0003553750000000015, 0.0003563609999999995, 0.0003561660000000015, 0.00038484800000000013, 0.0003571660000000025, 0.0003556949999999996, 0.0003851940000000019, 0.00038520800000000147, 0.000357764, 0.0003557500000000019, 0.0003565279999999983, 0.00038488899999999937, 0.00035508399999999857, 0.0003556390000000048, 0.0003574999999999967, 0.00035520900000000216, 0.0003563469999999999, 0.00038530500000000245, 0.0003853330000000016, 0.0003573470000000009, 0.0003852369999999966, 0.0003577500000000039, 0.0003848879999999999, 0.0003849169999999985, 0.000357457999999998, 0.0003566389999999989, 0.0003553889999999976, 0.00035650000000000265, 0.0003571669999999985, 0.0003557779999999941, 0.000385207999999998, 0.00035555500000000045, 0.00035642999999999786, 0.0003566799999999981]</msg>
<status status="PASS" starttime="20201030 18:31:16.191" endtime="20201030 18:31:16.194"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.187" endtime="20201030 18:31:16.194"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:16.198" endtime="20201030 18:31:16.217"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.196" endtime="20201030 18:31:16.218"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.195" endtime="20201030 18:31:16.218"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.799" endtime="20201030 18:31:16.218"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.799" endtime="20201030 18:31:16.218"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:16.227" endtime="20201030 18:31:16.264"></status>
</kw>
<msg timestamp="20201030 18:31:16.264" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:16.225" endtime="20201030 18:31:16.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:16.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:16.265" endtime="20201030 18:31:16.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:16.268" endtime="20201030 18:31:16.269"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.223" endtime="20201030 18:31:16.270"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.221" endtime="20201030 18:31:16.270"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:16.277" endtime="20201030 18:31:16.563"></status>
</kw>
<msg timestamp="20201030 18:31:16.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023642278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024006056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:16.275" endtime="20201030 18:31:16.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:16.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023642278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024006056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:16.567" endtime="20201030 18:31:16.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:16.575" endtime="20201030 18:31:16.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.273" endtime="20201030 18:31:16.578"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.271" endtime="20201030 18:31:16.578"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:16.582" level="INFO">${RESULT} = [{'diff': 0.0003637780000000021}, {'diff': 0.00038488899999999937}, {'diff': 0.0003554729999999985}, {'diff': 0.0003562769999999986}, {'diff': 0.0003848749999999998}, {'diff': 0.000357569000000002}, {...</msg>
<status status="PASS" starttime="20201030 18:31:16.579" endtime="20201030 18:31:16.582"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:16.586" level="INFO">${ACCURACY} = {'diff': [0.0003637780000000021, 0.00038488899999999937, 0.0003554729999999985, 0.0003562769999999986, 0.0003848749999999998, 0.000357569000000002, 0.0003565829999999971, 0.00035604200000000086, 0.000...</msg>
<status status="PASS" starttime="20201030 18:31:16.583" endtime="20201030 18:31:16.586"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:16.591" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201030 18:31:16.590" endtime="20201030 18:31:16.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:16.593" level="INFO">VALUE: [0.0003637780000000021, 0.00038488899999999937, 0.0003554729999999985, 0.0003562769999999986, 0.0003848749999999998, 0.000357569000000002, 0.0003565829999999971, 0.00035604200000000086, 0.00038518099999999833, 0.0003573480000000004, 0.0003560280000000013, 0.00035636199999999896, 0.0003563190000000008, 0.0003560830000000001, 0.0003563190000000008, 0.0003572639999999995, 0.00035573600000000233, 0.00035590300000000116, 0.00035765299999999944, 0.0003561120000000022, 0.0003567220000000003, 0.000355473000000002, 0.00035695800000000444, 0.000356181000000004, 0.0003565280000000018, 0.0003554999999999947, 0.0003557370000000018, 0.00038512500000000005, 0.00035761100000000073, 0.0003553189999999998, 0.0003577229999999973, 0.0003570270000000028, 0.0003571939999999982, 0.00035529100000000063, 0.00035611099999999923, 0.00035659700000000016, 0.00035711100000000023, 0.00035692999999999836, 0.00035605600000000043, 0.0003560270000000018, 0.00035533299999999934, 0.000357555999999995, 0.0003560139999999948, 0.00035709800000000014, 0.00035711100000000023, 0.00035627800000000154, 0.0003560280000000013, 0.0003552920000000001, 0.0003554720000000025, 0.00035744500000000484]</msg>
<status status="PASS" starttime="20201030 18:31:16.592" endtime="20201030 18:31:16.595"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.587" endtime="20201030 18:31:16.596"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:16.599" endtime="20201030 18:31:16.619"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.598" endtime="20201030 18:31:16.620"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.597" endtime="20201030 18:31:16.620"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.219" endtime="20201030 18:31:16.620"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.219" endtime="20201030 18:31:16.620"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:16.629" endtime="20201030 18:31:16.666"></status>
</kw>
<msg timestamp="20201030 18:31:16.666" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:16.628" endtime="20201030 18:31:16.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:16.669" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:16.667" endtime="20201030 18:31:16.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:16.670" endtime="20201030 18:31:16.672"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.625" endtime="20201030 18:31:16.672"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.623" endtime="20201030 18:31:16.673"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:16.679" endtime="20201030 18:31:16.989"></status>
</kw>
<msg timestamp="20201030 18:31:16.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023770417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024131069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:16.678" endtime="20201030 18:31:16.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:17.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023770417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024131069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:16.994" endtime="20201030 18:31:17.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:17.002" endtime="20201030 18:31:17.004"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.675" endtime="20201030 18:31:17.004"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.673" endtime="20201030 18:31:17.005"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:17.009" level="INFO">${RESULT} = [{'diff': 0.00036065200000000297}, {'diff': 0.00038520800000000147}, {'diff': 0.00038538900000000334}, {'diff': 0.00038538899999999987}, {'diff': 0.00035530499999999673}, {'diff': 0.000357612000000000...</msg>
<status status="PASS" starttime="20201030 18:31:17.005" endtime="20201030 18:31:17.009"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:17.014" level="INFO">${ACCURACY} = {'diff': [0.00036065200000000297, 0.00038520800000000147, 0.00038538900000000334, 0.00038538899999999987, 0.00035530499999999673, 0.0003576120000000002, 0.0003556800000000006, 0.0003573329999999979, 0...</msg>
<status status="PASS" starttime="20201030 18:31:17.010" endtime="20201030 18:31:17.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:17.019" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201030 18:31:17.017" endtime="20201030 18:31:17.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:17.021" level="INFO">VALUE: [0.00036065200000000297, 0.00038520800000000147, 0.00038538900000000334, 0.00038538899999999987, 0.00035530499999999673, 0.0003576120000000002, 0.0003556800000000006, 0.0003573329999999979, 0.00035748599999999714, 0.00035769400000000215, 0.0003572639999999995, 0.0003558060000000002, 0.0003554020000000012, 0.0003561389999999984, 0.00035763799999999693, 0.00035659700000000016, 0.0003560280000000013, 0.00035706899999999805, 0.000355569, 0.0003558339999999993, 0.00035720900000000416, 0.0003575410000000029, 0.0003568050000000017, 0.00035570799999999625, 0.0003562920000000011, 0.00035682000000000075, 0.00035711100000000023, 0.00035688799999999965, 0.0003562500000000024, 0.00035769499999999815, 0.00035605600000000043, 0.00035520799999999575, 0.00035641699999999776, 0.00038484800000000013, 0.00035583299999999984, 0.0003565129999999958, 0.0003847910000000024, 0.0003561379999999989, 0.0003566379999999994, 0.0003557920000000006, 0.000385207999999998, 0.00038538899999999987, 0.00035670900000000366, 0.0003563469999999999, 0.00035554099999999395, 0.0003568329999999939, 0.000356861, 0.00035644400000000437, 0.00038491599999999904, 0.0003568050000000017]</msg>
<status status="PASS" starttime="20201030 18:31:17.020" endtime="20201030 18:31:17.022"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.015" endtime="20201030 18:31:17.022"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:17.026" endtime="20201030 18:31:17.046"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.025" endtime="20201030 18:31:17.046"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.023" endtime="20201030 18:31:17.047"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.621" endtime="20201030 18:31:17.047"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.621" endtime="20201030 18:31:17.047"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:17.056" endtime="20201030 18:31:17.095"></status>
</kw>
<msg timestamp="20201030 18:31:17.096" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:17.055" endtime="20201030 18:31:17.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:17.099" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:17.097" endtime="20201030 18:31:17.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:17.100" endtime="20201030 18:31:17.103"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.052" endtime="20201030 18:31:17.106"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.050" endtime="20201030 18:31:17.107"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:17.116" endtime="20201030 18:31:17.405"></status>
</kw>
<msg timestamp="20201030 18:31:17.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024086681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024459389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:17.115" endtime="20201030 18:31:17.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:17.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024086681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024459389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:17.409" endtime="20201030 18:31:17.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:17.417" endtime="20201030 18:31:17.418"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.112" endtime="20201030 18:31:17.419"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.108" endtime="20201030 18:31:17.419"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:17.423" level="INFO">${RESULT} = [{'diff': 0.00037270800000000284}, {'diff': 0.0003565830000000006}, {'diff': 0.00035533299999999934}, {'diff': 0.0003565830000000006}, {'diff': 0.0003855000000000004}, {'diff': 0.00035583299999999984}...</msg>
<status status="PASS" starttime="20201030 18:31:17.420" endtime="20201030 18:31:17.423"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:17.427" level="INFO">${ACCURACY} = {'diff': [0.00037270800000000284, 0.0003565830000000006, 0.00035533299999999934, 0.0003565830000000006, 0.0003855000000000004, 0.00035583299999999984, 0.0003553609999999985, 0.00035637499999999905, 0....</msg>
<status status="PASS" starttime="20201030 18:31:17.424" endtime="20201030 18:31:17.427"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:17.432" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201030 18:31:17.431" endtime="20201030 18:31:17.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:17.434" level="INFO">VALUE: [0.00037270800000000284, 0.0003565830000000006, 0.00035533299999999934, 0.0003565830000000006, 0.0003855000000000004, 0.00035583299999999984, 0.0003553609999999985, 0.00035637499999999905, 0.0003569860000000001, 0.0003851949999999979, 0.0003555279999999973, 0.00035643000000000133, 0.0003552500000000014, 0.0003853750000000003, 0.0003852780000000028, 0.0003565419999999979, 0.00038516699999999876, 0.00035737500000000005, 0.0003850689999999983, 0.00038552799999999957, 0.0003569449999999974, 0.0003855560000000022, 0.00035520799999999575, 0.00035687499999999955, 0.00038515300000000613, 0.0003556939999999967, 0.00035661099999999973, 0.0003561249999999988, 0.0003854859999999974, 0.00035732000000000125, 0.00035609699999999966, 0.00035698599999999664, 0.0003559579999999965, 0.00038536100000000073, 0.00035715299999999894, 0.00038507000000000124, 0.0003562219999999963, 0.00035673600000000333, 0.000357666999999999, 0.00035600000000000215, 0.0003576250000000003, 0.0003553059999999997, 0.0003553050000000002, 0.00035727800000000254, 0.0003557500000000019, 0.0003849439999999982, 0.00038538899999999987, 0.00038508300000000134, 0.0003852369999999966, 0.00035665299999999844]</msg>
<status status="PASS" starttime="20201030 18:31:17.433" endtime="20201030 18:31:17.435"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.428" endtime="20201030 18:31:17.435"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:17.439" endtime="20201030 18:31:17.458"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.438" endtime="20201030 18:31:17.459"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.436" endtime="20201030 18:31:17.459"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.048" endtime="20201030 18:31:17.460"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.047" endtime="20201030 18:31:17.460"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:17.469" endtime="20201030 18:31:17.510"></status>
</kw>
<msg timestamp="20201030 18:31:17.511" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:17.468" endtime="20201030 18:31:17.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:17.513" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:17.512" endtime="20201030 18:31:17.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:17.514" endtime="20201030 18:31:17.516"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.465" endtime="20201030 18:31:17.516"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.463" endtime="20201030 18:31:17.517"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:17.523" endtime="20201030 18:31:17.823"></status>
</kw>
<msg timestamp="20201030 18:31:17.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023301958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023680569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:17.522" endtime="20201030 18:31:17.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:17.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023301958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023680569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:17.827" endtime="20201030 18:31:17.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:17.835" endtime="20201030 18:31:17.837"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.519" endtime="20201030 18:31:17.838"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.517" endtime="20201030 18:31:17.838"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:17.842" level="INFO">${RESULT} = [{'diff': 0.00037861099999999745}, {'diff': 0.0003573199999999978}, {'diff': 0.00035736199999999996}, {'diff': 0.0003573470000000009}, {'diff': 0.0003854030000000029}, {'diff': 0.00035533299999999934}...</msg>
<status status="PASS" starttime="20201030 18:31:17.839" endtime="20201030 18:31:17.842"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:17.846" level="INFO">${ACCURACY} = {'diff': [0.00037861099999999745, 0.0003573199999999978, 0.00035736199999999996, 0.0003573470000000009, 0.0003854030000000029, 0.00035533299999999934, 0.0003555279999999973, 0.0003559859999999991, 0.0...</msg>
<status status="PASS" starttime="20201030 18:31:17.843" endtime="20201030 18:31:17.846"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:17.850" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201030 18:31:17.849" endtime="20201030 18:31:17.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:17.853" level="INFO">VALUE: [0.00037861099999999745, 0.0003573199999999978, 0.00035736199999999996, 0.0003573470000000009, 0.0003854030000000029, 0.00035533299999999934, 0.0003555279999999973, 0.0003559859999999991, 0.00038531899999999855, 0.0003578060000000022, 0.00035770799999999825, 0.0003553750000000015, 0.0003564999999999992, 0.00035609699999999966, 0.0003559859999999991, 0.00035693000000000183, 0.0003565419999999979, 0.00035697200000000054, 0.0003559999999999987, 0.0003572639999999995, 0.0003562920000000011, 0.00035682000000000075, 0.00035704200000000186, 0.0003561390000000053, 0.00038568099999999883, 0.00035537499999999805, 0.0003852090000000044, 0.0003855970000000014, 0.0003579449999999984, 0.0003575140000000032, 0.00035658400000000007, 0.0003573470000000009, 0.00035711100000000023, 0.00035566700000000395, 0.00038536100000000073, 0.00035779100000000313, 0.00038536100000000073, 0.0003855550000000027, 0.0003574999999999967, 0.0003576799999999991, 0.0003562359999999959, 0.00035654200000000136, 0.00035537499999999805, 0.0003561799999999976, 0.0003568470000000004, 0.0003571249999999998, 0.0003564170000000047, 0.0003556249999999983, 0.00035774999999999696, 0.00035723699999999636]</msg>
<status status="PASS" starttime="20201030 18:31:17.851" endtime="20201030 18:31:17.854"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.847" endtime="20201030 18:31:17.855"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:17.858" endtime="20201030 18:31:17.878"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.857" endtime="20201030 18:31:17.878"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.856" endtime="20201030 18:31:17.879"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.461" endtime="20201030 18:31:17.879"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.460" endtime="20201030 18:31:17.879"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:17.888" endtime="20201030 18:31:17.922"></status>
</kw>
<msg timestamp="20201030 18:31:17.922" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:17.886" endtime="20201030 18:31:17.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:17.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:17.923" endtime="20201030 18:31:17.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:17.926" endtime="20201030 18:31:17.927"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.884" endtime="20201030 18:31:17.928"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.882" endtime="20201030 18:31:17.928"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:17.935" endtime="20201030 18:31:18.221"></status>
</kw>
<msg timestamp="20201030 18:31:18.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020874403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021257306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:17.933" endtime="20201030 18:31:18.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:18.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020874403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021257306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:18.225" endtime="20201030 18:31:18.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:18.233" endtime="20201030 18:31:18.234"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.931" endtime="20201030 18:31:18.235"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.929" endtime="20201030 18:31:18.235"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:18.239" level="INFO">${RESULT} = [{'diff': 0.0003829030000000004}, {'diff': 0.0003564999999999992}, {'diff': 0.00035644500000000037}, {'diff': 0.0003554860000000021}, {'diff': 0.0003552639999999975}, {'diff': 0.00035643099999999733},...</msg>
<status status="PASS" starttime="20201030 18:31:18.236" endtime="20201030 18:31:18.239"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:18.244" level="INFO">${ACCURACY} = {'diff': [0.0003829030000000004, 0.0003564999999999992, 0.00035644500000000037, 0.0003554860000000021, 0.0003552639999999975, 0.00035643099999999733, 0.00035688799999999965, 0.0003552920000000001, 0.0...</msg>
<status status="PASS" starttime="20201030 18:31:18.240" endtime="20201030 18:31:18.244"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:18.249" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201030 18:31:18.248" endtime="20201030 18:31:18.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:18.251" level="INFO">VALUE: [0.0003829030000000004, 0.0003564999999999992, 0.00035644500000000037, 0.0003554860000000021, 0.0003552639999999975, 0.00035643099999999733, 0.00035688799999999965, 0.0003552920000000001, 0.00035602699999999834, 0.000356861, 0.0003557089999999992, 0.0003852230000000005, 0.0003572639999999995, 0.0003554439999999999, 0.00035715299999999894, 0.0003551530000000004, 0.00035650000000000265, 0.00035536100000000195, 0.0003557079999999997, 0.000355569, 0.00035773700000000033, 0.0003563889999999986, 0.00035545799999999947, 0.00035544499999999937, 0.00038522200000000104, 0.0003569860000000001, 0.0003555280000000008, 0.000356763999999999, 0.0003562359999999959, 0.00035533299999999934, 0.00035641699999999776, 0.00035744399999999843, 0.00035602799999999435, 0.00035715199999999947, 0.0003569019999999992, 0.0003554300000000038, 0.0003553059999999997, 0.00035715199999999947, 0.00038516699999999876, 0.00035744400000000537, 0.0003561389999999984, 0.00035644500000000384, 0.0003853750000000003, 0.00038538899999999987, 0.00035694500000000434, 0.0003849439999999982, 0.0003849309999999981, 0.0003570140000000027, 0.0003570830000000011, 0.00035727700000000306]</msg>
<status status="PASS" starttime="20201030 18:31:18.250" endtime="20201030 18:31:18.252"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.245" endtime="20201030 18:31:18.252"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:18.256" endtime="20201030 18:31:18.275"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.254" endtime="20201030 18:31:18.276"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.253" endtime="20201030 18:31:18.276"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.880" endtime="20201030 18:31:18.276"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.879" endtime="20201030 18:31:18.277"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:18.285" endtime="20201030 18:31:18.319"></status>
</kw>
<msg timestamp="20201030 18:31:18.319" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:18.284" endtime="20201030 18:31:18.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:18.322" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:18.320" endtime="20201030 18:31:18.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:18.323" endtime="20201030 18:31:18.324"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.281" endtime="20201030 18:31:18.325"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.279" endtime="20201030 18:31:18.325"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:18.332" endtime="20201030 18:31:18.618"></status>
</kw>
<msg timestamp="20201030 18:31:18.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020346264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020703597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:18.330" endtime="20201030 18:31:18.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:18.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020346264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020703597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:18.623" endtime="20201030 18:31:18.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:18.631" endtime="20201030 18:31:18.632"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.327" endtime="20201030 18:31:18.633"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.326" endtime="20201030 18:31:18.633"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:18.637" level="INFO">${RESULT} = [{'diff': 0.00035733300000000134}, {'diff': 0.00035623599999999936}, {'diff': 0.000385319999999998}, {'diff': 0.00035623599999999936}, {'diff': 0.00035529100000000063}, {'diff': 0.00038543100000000205...</msg>
<status status="PASS" starttime="20201030 18:31:18.634" endtime="20201030 18:31:18.637"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:18.641" level="INFO">${ACCURACY} = {'diff': [0.00035733300000000134, 0.00035623599999999936, 0.000385319999999998, 0.00035623599999999936, 0.00035529100000000063, 0.00038543100000000205, 0.0003849999999999999, 0.0003575409999999994, 0....</msg>
<status status="PASS" starttime="20201030 18:31:18.638" endtime="20201030 18:31:18.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:18.645" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201030 18:31:18.644" endtime="20201030 18:31:18.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:18.648" level="INFO">VALUE: [0.00035733300000000134, 0.00035623599999999936, 0.000385319999999998, 0.00035623599999999936, 0.00035529100000000063, 0.00038543100000000205, 0.0003849999999999999, 0.0003575409999999994, 0.00038534700000000116, 0.0003565419999999979, 0.00035577799999999757, 0.00035629199999999764, 0.0003573890000000031, 0.0003853750000000003, 0.00035623599999999936, 0.0003559440000000004, 0.00035747199999999757, 0.00035759700000000116, 0.00035561099999999873, 0.0003850420000000021, 0.0003563469999999999, 0.0003563889999999986, 0.00035759800000000064, 0.00035554200000000036, 0.00035747200000000104, 0.00038504100000000263, 0.0003553609999999985, 0.00038508300000000134, 0.0003554869999999981, 0.0003560140000000017, 0.0003568470000000004, 0.00035641699999999776, 0.00038536100000000073, 0.0003851110000000005, 0.00035659700000000016, 0.00035526400000000097, 0.00035722300000000373, 0.0003573060000000017, 0.0003565700000000005, 0.00035704099999999545, 0.0003854309999999986, 0.0003564449999999969, 0.0003554860000000021, 0.0003564590000000034, 0.00035505599999999943, 0.00038527799999999585, 0.00035711100000000023, 0.0003549579999999955, 0.0003853469999999942, 0.0003570689999999946]</msg>
<status status="PASS" starttime="20201030 18:31:18.647" endtime="20201030 18:31:18.649"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.642" endtime="20201030 18:31:18.649"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:18.653" endtime="20201030 18:31:18.672"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.651" endtime="20201030 18:31:18.673"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.650" endtime="20201030 18:31:18.673"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.277" endtime="20201030 18:31:18.673"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.277" endtime="20201030 18:31:18.674"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:18.682" endtime="20201030 18:31:18.722"></status>
</kw>
<msg timestamp="20201030 18:31:18.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:18.681" endtime="20201030 18:31:18.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:18.725" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:18.724" endtime="20201030 18:31:18.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:18.726" endtime="20201030 18:31:18.728"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.678" endtime="20201030 18:31:18.728"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.676" endtime="20201030 18:31:18.729"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:18.735" endtime="20201030 18:31:19.022"></status>
</kw>
<msg timestamp="20201030 18:31:19.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025205847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025569861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:18.734" endtime="20201030 18:31:19.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:19.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025205847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025569861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:19.027" endtime="20201030 18:31:19.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:19.035" endtime="20201030 18:31:19.037"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.731" endtime="20201030 18:31:19.037"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.729" endtime="20201030 18:31:19.038"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:19.042" level="INFO">${RESULT} = [{'diff': 0.0003640139999999993}, {'diff': 0.0003568190000000013}, {'diff': 0.0003553890000000011}, {'diff': 0.0003555140000000012}, {'diff': 0.0003570279999999988}, {'diff': 0.00035518099999999955}, ...</msg>
<status status="PASS" starttime="20201030 18:31:19.038" endtime="20201030 18:31:19.042"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:19.046" level="INFO">${ACCURACY} = {'diff': [0.0003640139999999993, 0.0003568190000000013, 0.0003553890000000011, 0.0003555140000000012, 0.0003570279999999988, 0.00035518099999999955, 0.0003577219999999978, 0.0003560280000000013, 0.000...</msg>
<status status="PASS" starttime="20201030 18:31:19.043" endtime="20201030 18:31:19.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:19.050" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201030 18:31:19.049" endtime="20201030 18:31:19.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:19.052" level="INFO">VALUE: [0.0003640139999999993, 0.0003568190000000013, 0.0003553890000000011, 0.0003555140000000012, 0.0003570279999999988, 0.00035518099999999955, 0.0003577219999999978, 0.0003560280000000013, 0.0003568329999999974, 0.00035558400000000254, 0.0003852230000000005, 0.00035597199999999954, 0.00035576400000000147, 0.00035722300000000026, 0.0003563190000000008, 0.0003571250000000033, 0.0003554020000000012, 0.00035663800000000634, 0.00038495799999999775, 0.0003852919999999954, 0.0003554860000000021, 0.00035736199999999996, 0.000355569, 0.0003562219999999963, 0.0003554860000000021, 0.00035633300000000034, 0.0003563339999999998, 0.0003557080000000032, 0.0003555549999999935, 0.00035647199999999657, 0.00035565199999999797, 0.0003569449999999974, 0.0003853330000000016, 0.00035509799999999814, 0.0003565830000000006, 0.0003574019999999997, 0.00035548700000000155, 0.0003853880000000004, 0.0003566810000000045, 0.0003854309999999986, 0.0003560830000000001, 0.0003576250000000003, 0.00035677800000000204, 0.00035520799999999575, 0.00035516700000000345, 0.0003557769999999946, 0.00035594400000000387, 0.00035779199999999567, 0.00038529200000000235, 0.0003576389999999999]</msg>
<status status="PASS" starttime="20201030 18:31:19.051" endtime="20201030 18:31:19.054"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.046" endtime="20201030 18:31:19.055"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:19.058" endtime="20201030 18:31:19.078"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.057" endtime="20201030 18:31:19.078"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.056" endtime="20201030 18:31:19.078"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.674" endtime="20201030 18:31:19.079"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.674" endtime="20201030 18:31:19.079"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:19.088" endtime="20201030 18:31:19.123"></status>
</kw>
<msg timestamp="20201030 18:31:19.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:19.086" endtime="20201030 18:31:19.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:19.126" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:19.125" endtime="20201030 18:31:19.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:19.127" endtime="20201030 18:31:19.129"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.083" endtime="20201030 18:31:19.129"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.081" endtime="20201030 18:31:19.130"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:19.136" endtime="20201030 18:31:19.440"></status>
</kw>
<msg timestamp="20201030 18:31:19.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021879375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022245861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:19.135" endtime="20201030 18:31:19.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:19.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021879375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022245861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:19.444" endtime="20201030 18:31:19.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:19.452" endtime="20201030 18:31:19.454"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.132" endtime="20201030 18:31:19.455"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.130" endtime="20201030 18:31:19.455"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:19.459" level="INFO">${RESULT} = [{'diff': 0.0003664859999999992}, {'diff': 0.00035559700000000263}, {'diff': 0.0003553189999999998}, {'diff': 0.0003556249999999983}, {'diff': 0.0003575000000000002}, {'diff': 0.00035627799999999807},...</msg>
<status status="PASS" starttime="20201030 18:31:19.456" endtime="20201030 18:31:19.459"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:19.464" level="INFO">${ACCURACY} = {'diff': [0.0003664859999999992, 0.00035559700000000263, 0.0003553189999999998, 0.0003556249999999983, 0.0003575000000000002, 0.00035627799999999807, 0.0003569860000000001, 0.00035573599999999886, 0.0...</msg>
<status status="PASS" starttime="20201030 18:31:19.460" endtime="20201030 18:31:19.464"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:19.468" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201030 18:31:19.467" endtime="20201030 18:31:19.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:19.471" level="INFO">VALUE: [0.0003664859999999992, 0.00035559700000000263, 0.0003553189999999998, 0.0003556249999999983, 0.0003575000000000002, 0.00035627799999999807, 0.0003569860000000001, 0.00035573599999999886, 0.0003852370000000001, 0.00038490299999999894, 0.0003852779999999993, 0.00035565199999999797, 0.0003567500000000029, 0.0003565830000000006, 0.0003560830000000001, 0.00038545799999999825, 0.0003556949999999996, 0.0003557079999999997, 0.0003855000000000004, 0.00038526399999999975, 0.00035563900000000134, 0.0003572639999999995, 0.00035741700000000223, 0.00038548600000000086, 0.00035547199999999904, 0.00035637499999999905, 0.0003566390000000058, 0.0003574449999999979, 0.00035577800000000104, 0.0003572779999999956, 0.0003573889999999996, 0.00035761100000000073, 0.0003563889999999986, 0.00038493000000000555, 0.0003573889999999996, 0.0003850970000000009, 0.0003560280000000013, 0.00035590200000000516, 0.00035781899999999534, 0.0003568479999999999, 0.00038502700000000306, 0.00035692999999999836, 0.0003558050000000007, 0.0003847919999999949, 0.000355860999999999, 0.00035516700000000345, 0.0003551390000000043, 0.00038529200000000235, 0.00038530500000000245, 0.0003563190000000008]</msg>
<status status="PASS" starttime="20201030 18:31:19.469" endtime="20201030 18:31:19.471"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.465" endtime="20201030 18:31:19.472"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:19.475" endtime="20201030 18:31:19.495"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.474" endtime="20201030 18:31:19.496"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.473" endtime="20201030 18:31:19.496"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.080" endtime="20201030 18:31:19.496"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.079" endtime="20201030 18:31:19.496"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:19.506" endtime="20201030 18:31:19.540"></status>
</kw>
<msg timestamp="20201030 18:31:19.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:19.504" endtime="20201030 18:31:19.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:19.543" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:19.541" endtime="20201030 18:31:19.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:19.544" endtime="20201030 18:31:19.545"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.502" endtime="20201030 18:31:19.546"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.499" endtime="20201030 18:31:19.546"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:19.553" endtime="20201030 18:31:19.842"></status>
</kw>
<msg timestamp="20201030 18:31:19.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021538542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021903125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:19.551" endtime="20201030 18:31:19.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:19.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021538542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021903125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:19.846" endtime="20201030 18:31:19.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:19.854" endtime="20201030 18:31:19.855"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.549" endtime="20201030 18:31:19.856"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.547" endtime="20201030 18:31:19.856"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:19.860" level="INFO">${RESULT} = [{'diff': 0.0003645829999999982}, {'diff': 0.0003577090000000012}, {'diff': 0.0003566530000000019}, {'diff': 0.00035619400000000065}, {'diff': 0.0003552920000000001}, {'diff': 0.00035727799999999907},...</msg>
<status status="PASS" starttime="20201030 18:31:19.857" endtime="20201030 18:31:19.860"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:19.864" level="INFO">${ACCURACY} = {'diff': [0.0003645829999999982, 0.0003577090000000012, 0.0003566530000000019, 0.00035619400000000065, 0.0003552920000000001, 0.00035727799999999907, 0.00035682000000000075, 0.00035620799999999675, 0....</msg>
<status status="PASS" starttime="20201030 18:31:19.861" endtime="20201030 18:31:19.864"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:19.868" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201030 18:31:19.867" endtime="20201030 18:31:19.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:19.871" level="INFO">VALUE: [0.0003645829999999982, 0.0003577090000000012, 0.0003566530000000019, 0.00035619400000000065, 0.0003552920000000001, 0.00035727799999999907, 0.00035682000000000075, 0.00035620799999999675, 0.00035745800000000147, 0.00038504099999999916, 0.0003573199999999978, 0.000385514, 0.00035600000000000215, 0.0003565419999999979, 0.0003564859999999996, 0.00035545799999999947, 0.0003559999999999987, 0.000357764, 0.00035591700000000073, 0.0003567080000000007, 0.0003564440000000009, 0.0003850139999999995, 0.0003562219999999998, 0.0003559590000000029, 0.0003573889999999996, 0.000356861, 0.0003555969999999957, 0.00035674999999999596, 0.0003577359999999974, 0.00038540199999999997, 0.0003559019999999982, 0.000385305999999995, 0.0003576389999999999, 0.0003560140000000017, 0.0003557920000000006, 0.00035758400000000107, 0.00035533299999999934, 0.0003561940000000041, 0.000357555999999995, 0.0003559029999999977, 0.00035540200000000466, 0.00038508300000000134, 0.00035577800000000104, 0.00035783300000000184, 0.00035742999999999886, 0.00035644399999999743, 0.00035645800000000394, 0.0003554029999999972, 0.0003563060000000007, 0.00035759700000000116]</msg>
<status status="PASS" starttime="20201030 18:31:19.869" endtime="20201030 18:31:19.872"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.865" endtime="20201030 18:31:19.872"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:19.876" endtime="20201030 18:31:19.895"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.874" endtime="20201030 18:31:19.896"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.873" endtime="20201030 18:31:19.896"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.497" endtime="20201030 18:31:19.896"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.497" endtime="20201030 18:31:19.896"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:19.905" endtime="20201030 18:31:19.941"></status>
</kw>
<msg timestamp="20201030 18:31:19.942" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:19.904" endtime="20201030 18:31:19.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:19.944" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:19.943" endtime="20201030 18:31:19.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:19.945" endtime="20201030 18:31:19.947"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.901" endtime="20201030 18:31:19.948"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.899" endtime="20201030 18:31:19.948"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:19.954" endtime="20201030 18:31:20.259"></status>
</kw>
<msg timestamp="20201030 18:31:20.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023154708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023533639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:19.953" endtime="20201030 18:31:20.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:20.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023154708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023533639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:20.263" endtime="20201030 18:31:20.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:20.271" endtime="20201030 18:31:20.272"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.950" endtime="20201030 18:31:20.273"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.949" endtime="20201030 18:31:20.273"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:20.277" level="INFO">${RESULT} = [{'diff': 0.000378930999999999}, {'diff': 0.0003562089999999997}, {'diff': 0.0003577630000000005}, {'diff': 0.0003853329999999981}, {'diff': 0.00035658400000000007}, {'diff': 0.00035679199999999814}, ...</msg>
<status status="PASS" starttime="20201030 18:31:20.274" endtime="20201030 18:31:20.277"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:20.281" level="INFO">${ACCURACY} = {'diff': [0.000378930999999999, 0.0003562089999999997, 0.0003577630000000005, 0.0003853329999999981, 0.00035658400000000007, 0.00035679199999999814, 0.0003575000000000002, 0.00035592999999999736, 0.00...</msg>
<status status="PASS" starttime="20201030 18:31:20.278" endtime="20201030 18:31:20.281"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:20.286" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201030 18:31:20.285" endtime="20201030 18:31:20.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:20.288" level="INFO">VALUE: [0.000378930999999999, 0.0003562089999999997, 0.0003577630000000005, 0.0003853329999999981, 0.00035658400000000007, 0.00035679199999999814, 0.0003575000000000002, 0.00035592999999999736, 0.0003572090000000007, 0.00035755599999999846, 0.0003851939999999984, 0.00035769499999999815, 0.0003851110000000005, 0.0003578059999999987, 0.0003851800000000023, 0.00038488899999999937, 0.0003578190000000023, 0.00035679099999999866, 0.00038533400000000106, 0.00035751399999999975, 0.000355860999999999, 0.000356666000000002, 0.00035676399999999553, 0.00035772200000000476, 0.0003555140000000012, 0.00035543100000000327, 0.0003563889999999986, 0.00035688799999999965, 0.00038508300000000134, 0.0003849309999999981, 0.0003571809999999981, 0.0003553609999999985, 0.00035573600000000233, 0.00035608399999999957, 0.00035566599999999754, 0.00035754200000000236, 0.0003554170000000037, 0.00035623600000000283, 0.00035540300000000413, 0.0003559999999999952, 0.00035665299999999844, 0.0003560830000000001, 0.0003572779999999956, 0.0003575419999999954, 0.0003557219999999958, 0.0003565280000000018, 0.0003849860000000038, 0.0003555280000000008, 0.0003573610000000005, 0.000357070000000001]</msg>
<status status="PASS" starttime="20201030 18:31:20.287" endtime="20201030 18:31:20.290"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.282" endtime="20201030 18:31:20.290"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:20.294" endtime="20201030 18:31:20.313"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.292" endtime="20201030 18:31:20.314"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.291" endtime="20201030 18:31:20.314"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.897" endtime="20201030 18:31:20.315"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.897" endtime="20201030 18:31:20.315"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:20.323" endtime="20201030 18:31:20.359"></status>
</kw>
<msg timestamp="20201030 18:31:20.360" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:20.322" endtime="20201030 18:31:20.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:20.362" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:20.361" endtime="20201030 18:31:20.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:20.363" endtime="20201030 18:31:20.365"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.319" endtime="20201030 18:31:20.365"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.317" endtime="20201030 18:31:20.366"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:20.372" endtime="20201030 18:31:20.669"></status>
</kw>
<msg timestamp="20201030 18:31:20.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022000986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022368472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:20.371" endtime="20201030 18:31:20.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:20.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022000986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022368472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:20.673" endtime="20201030 18:31:20.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:20.681" endtime="20201030 18:31:20.683"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.368" endtime="20201030 18:31:20.683"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.366" endtime="20201030 18:31:20.684"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:20.687" level="INFO">${RESULT} = [{'diff': 0.0003674860000000002}, {'diff': 0.000356861}, {'diff': 0.00035594399999999693}, {'diff': 0.0003570549999999985}, {'diff': 0.0003850139999999995}, {'diff': 0.0003553050000000002}, {'diff': 0...</msg>
<status status="PASS" starttime="20201030 18:31:20.684" endtime="20201030 18:31:20.688"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:20.692" level="INFO">${ACCURACY} = {'diff': [0.0003674860000000002, 0.000356861, 0.00035594399999999693, 0.0003570549999999985, 0.0003850139999999995, 0.0003553050000000002, 0.00035609799999999914, 0.00035630499999999773, 0.00035691599...</msg>
<status status="PASS" starttime="20201030 18:31:20.688" endtime="20201030 18:31:20.693"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:20.697" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201030 18:31:20.696" endtime="20201030 18:31:20.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:20.699" level="INFO">VALUE: [0.0003674860000000002, 0.000356861, 0.00035594399999999693, 0.0003570549999999985, 0.0003850139999999995, 0.0003553050000000002, 0.00035609799999999914, 0.00035630499999999773, 0.0003569159999999988, 0.00035626400000000197, 0.0003556110000000022, 0.00035611099999999923, 0.0003558469999999994, 0.0003574440000000019, 0.0003853330000000016, 0.00035561099999999873, 0.00035679100000000213, 0.00035618100000000055, 0.0003578890000000001, 0.00038552799999999957, 0.0003852360000000006, 0.0003576809999999986, 0.00038558300000000184, 0.00035600000000000215, 0.00035768100000000205, 0.00038523700000000355, 0.0003551799999999966, 0.0003554019999999977, 0.00038520899999999747, 0.00035573600000000233, 0.0003574589999999975, 0.00035698599999999664, 0.00035738800000000015, 0.00035600000000000215, 0.00035594400000000387, 0.00035692999999999836, 0.00035609699999999966, 0.00035672200000000376, 0.00035537499999999805, 0.0003557500000000019, 0.0003571249999999998, 0.0003563050000000012, 0.0003573610000000005, 0.00035554200000000036, 0.00035561200000000515, 0.00038540299999999944, 0.00035542999999999686, 0.0003578470000000014, 0.0003556389999999979, 0.00035679100000000213]</msg>
<status status="PASS" starttime="20201030 18:31:20.698" endtime="20201030 18:31:20.700"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.693" endtime="20201030 18:31:20.700"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:20.704" endtime="20201030 18:31:20.723"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.703" endtime="20201030 18:31:20.724"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.701" endtime="20201030 18:31:20.724"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.316" endtime="20201030 18:31:20.725"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.315" endtime="20201030 18:31:20.725"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:20.733" endtime="20201030 18:31:20.771"></status>
</kw>
<msg timestamp="20201030 18:31:20.772" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:20.732" endtime="20201030 18:31:20.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:20.774" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:20.773" endtime="20201030 18:31:20.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:20.775" endtime="20201030 18:31:20.777"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.729" endtime="20201030 18:31:20.777"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.727" endtime="20201030 18:31:20.778"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:20.784" endtime="20201030 18:31:21.071"></status>
</kw>
<msg timestamp="20201030 18:31:21.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023841736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024200931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:20.782" endtime="20201030 18:31:21.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023841736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024200931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:21.076" endtime="20201030 18:31:21.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:21.084" endtime="20201030 18:31:21.085"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.780" endtime="20201030 18:31:21.086"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.778" endtime="20201030 18:31:21.086"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:21.090" level="INFO">${RESULT} = [{'diff': 0.00035919499999999965}, {'diff': 0.000354972000000002}, {'diff': 0.00035706899999999805}, {'diff': 0.0003558060000000002}, {'diff': 0.0003562219999999998}, {'diff': 0.0003553889999999976}, ...</msg>
<status status="PASS" starttime="20201030 18:31:21.087" endtime="20201030 18:31:21.090"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:21.094" level="INFO">${ACCURACY} = {'diff': [0.00035919499999999965, 0.000354972000000002, 0.00035706899999999805, 0.0003558060000000002, 0.0003562219999999998, 0.0003553889999999976, 0.00038506900000000177, 0.0003551110000000017, 0.00...</msg>
<status status="PASS" starttime="20201030 18:31:21.091" endtime="20201030 18:31:21.094"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.099" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201030 18:31:21.097" endtime="20201030 18:31:21.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.101" level="INFO">VALUE: [0.00035919499999999965, 0.000354972000000002, 0.00035706899999999805, 0.0003558060000000002, 0.0003562219999999998, 0.0003553889999999976, 0.00038506900000000177, 0.0003551110000000017, 0.00035623699999999883, 0.0003852360000000006, 0.0003562089999999997, 0.00035531999999999925, 0.0003553609999999985, 0.00035734699999999744, 0.0003847079999999975, 0.0003852919999999989, 0.0003849720000000008, 0.00035550000000000165, 0.00038495799999999775, 0.00035647200000000004, 0.0003572359999999969, 0.0003560280000000013, 0.0003850980000000004, 0.0003553339999999988, 0.0003566119999999992, 0.00035566700000000395, 0.0003847499999999962, 0.0003574159999999993, 0.000356666999999998, 0.00038490299999999894, 0.0003565830000000006, 0.0003573889999999996, 0.0003552080000000027, 0.0003552500000000014, 0.0003571939999999982, 0.0003571939999999982, 0.0003551520000000044, 0.00038522199999999757, 0.0003556249999999983, 0.0003552920000000001, 0.0003571950000000046, 0.00038504100000000263, 0.0003852499999999967, 0.00035758299999999466, 0.0003853469999999942, 0.0003563469999999999, 0.0003851939999999984, 0.0003575700000000015, 0.0003573060000000017, 0.00035595800000000344]</msg>
<status status="PASS" starttime="20201030 18:31:21.100" endtime="20201030 18:31:21.106"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.095" endtime="20201030 18:31:21.107"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:21.110" endtime="20201030 18:31:21.130"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.109" endtime="20201030 18:31:21.130"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.108" endtime="20201030 18:31:21.131"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.726" endtime="20201030 18:31:21.131"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.725" endtime="20201030 18:31:21.131"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:21.140" endtime="20201030 18:31:21.178"></status>
</kw>
<msg timestamp="20201030 18:31:21.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:21.138" endtime="20201030 18:31:21.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:21.179" endtime="20201030 18:31:21.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:21.182" endtime="20201030 18:31:21.183"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.136" endtime="20201030 18:31:21.184"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.133" endtime="20201030 18:31:21.184"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:21.190" endtime="20201030 18:31:21.477"></status>
</kw>
<msg timestamp="20201030 18:31:21.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024499569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024857778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:21.189" endtime="20201030 18:31:21.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024499569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024857778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:21.482" endtime="20201030 18:31:21.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:21.490" endtime="20201030 18:31:21.492"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.186" endtime="20201030 18:31:21.492"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.185" endtime="20201030 18:31:21.493"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:21.497" level="INFO">${RESULT} = [{'diff': 0.0003582090000000017}, {'diff': 0.0003559860000000026}, {'diff': 0.00035593000000000083}, {'diff': 0.0003561530000000014}, {'diff': 0.0003561669999999975}, {'diff': 0.0003563609999999995}, ...</msg>
<status status="PASS" starttime="20201030 18:31:21.494" endtime="20201030 18:31:21.497"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:21.501" level="INFO">${ACCURACY} = {'diff': [0.0003582090000000017, 0.0003559860000000026, 0.00035593000000000083, 0.0003561530000000014, 0.0003561669999999975, 0.0003563609999999995, 0.0003563469999999999, 0.00035647200000000004, 0.00...</msg>
<status status="PASS" starttime="20201030 18:31:21.498" endtime="20201030 18:31:21.501"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.506" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201030 18:31:21.505" endtime="20201030 18:31:21.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.508" level="INFO">VALUE: [0.0003582090000000017, 0.0003559860000000026, 0.00035593000000000083, 0.0003561530000000014, 0.0003561669999999975, 0.0003563609999999995, 0.0003563469999999999, 0.00035647200000000004, 0.0003553889999999976, 0.00035701399999999925, 0.0003560690000000005, 0.0003555129999999983, 0.00035507000000000247, 0.00035733300000000134, 0.00035632000000000025, 0.00035518099999999955, 0.00035523600000000183, 0.0003574029999999992, 0.0003574860000000041, 0.00035543100000000327, 0.0003553189999999998, 0.0003553050000000002, 0.00035769499999999815, 0.0003557500000000019, 0.0003852780000000028, 0.0003556389999999979, 0.0003561389999999984, 0.0003853060000000019, 0.00035591699999999726, 0.0003572769999999961, 0.00035607, 0.0003560280000000013, 0.0003849859999999969, 0.000356861, 0.0003573470000000009, 0.00035559699999999916, 0.00035662500000000624, 0.00038504100000000263, 0.00035737500000000005, 0.0003846949999999974, 0.0003563050000000012, 0.0003561389999999984, 0.0003850840000000008, 0.0003550829999999991, 0.00038484700000000066, 0.00035688799999999965, 0.0003575689999999951, 0.0003574589999999975, 0.00035687499999999955, 0.0003572229999999968]</msg>
<status status="PASS" starttime="20201030 18:31:21.507" endtime="20201030 18:31:21.510"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.502" endtime="20201030 18:31:21.510"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:21.517" endtime="20201030 18:31:21.540"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.514" endtime="20201030 18:31:21.541"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.512" endtime="20201030 18:31:21.542"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.132" endtime="20201030 18:31:21.543"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.131" endtime="20201030 18:31:21.543"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:21.564" endtime="20201030 18:31:21.601"></status>
</kw>
<msg timestamp="20201030 18:31:21.602" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:21.560" endtime="20201030 18:31:21.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.607" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:21.604" endtime="20201030 18:31:21.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:21.610" endtime="20201030 18:31:21.613"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.554" endtime="20201030 18:31:21.614"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.549" endtime="20201030 18:31:21.614"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:21.621" endtime="20201030 18:31:21.907"></status>
</kw>
<msg timestamp="20201030 18:31:21.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038423931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038809167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:21.619" endtime="20201030 18:31:21.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038423931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038809167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:21.911" endtime="20201030 18:31:21.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:21.919" endtime="20201030 18:31:21.921"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.617" endtime="20201030 18:31:21.922"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.615" endtime="20201030 18:31:21.922"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:21.926" level="INFO">${RESULT} = [{'diff': 0.00038523599999999714}, {'diff': 0.0003576939999999987}, {'diff': 0.0003576109999999938}, {'diff': 0.0003574019999999997}, {'diff': 0.0003557229999999953}, {'diff': 0.00035659700000000016},...</msg>
<status status="PASS" starttime="20201030 18:31:21.923" endtime="20201030 18:31:21.926"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:21.931" level="INFO">${ACCURACY} = {'diff': [0.00038523599999999714, 0.0003576939999999987, 0.0003576109999999938, 0.0003574019999999997, 0.0003557229999999953, 0.00035659700000000016, 0.0003557359999999954, 0.0003564860000000031, 0.00...</msg>
<status status="PASS" starttime="20201030 18:31:21.927" endtime="20201030 18:31:21.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.936" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201030 18:31:21.935" endtime="20201030 18:31:21.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.938" level="INFO">VALUE: [0.00038523599999999714, 0.0003576939999999987, 0.0003576109999999938, 0.0003574019999999997, 0.0003557229999999953, 0.00035659700000000016, 0.0003557359999999954, 0.0003564860000000031, 0.00035611099999999923, 0.0003562630000000025, 0.0003566249999999993, 0.00035704200000000186, 0.00035724999999999646, 0.0003572089999999972, 0.00035633300000000034, 0.0003565140000000022, 0.00038541599999999954, 0.00038502700000000306, 0.0003850550000000022, 0.000356861, 0.0003853620000000002, 0.0003571799999999986, 0.0003556520000000049, 0.00035661099999999973, 0.00035720799999999775, 0.0003553479999999984, 0.0003567219999999968, 0.00035520900000000216, 0.0003554590000000024, 0.0003576389999999999, 0.0003559449999999964, 0.0003576940000000056, 0.00035651300000000274, 0.000357666999999999, 0.0003558889999999981, 0.00038534700000000116, 0.0003574590000000044, 0.00035516599999999704, 0.00035724999999999646, 0.00035577800000000104, 0.00035722300000000373, 0.0003563889999999986, 0.0003849719999999973, 0.0003559730000000025, 0.000355166000000004, 0.0003573050000000022, 0.0003852639999999963, 0.00035754099999999595, 0.0003564170000000047, 0.00035687499999999955]</msg>
<status status="PASS" starttime="20201030 18:31:21.937" endtime="20201030 18:31:21.939"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.932" endtime="20201030 18:31:21.940"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:21.944" endtime="20201030 18:31:21.963"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.942" endtime="20201030 18:31:21.964"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.941" endtime="20201030 18:31:21.964"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.545" endtime="20201030 18:31:21.964"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.544" endtime="20201030 18:31:21.965"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:21.974" endtime="20201030 18:31:22.012"></status>
</kw>
<msg timestamp="20201030 18:31:22.013" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:21.972" endtime="20201030 18:31:22.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.015" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:22.014" endtime="20201030 18:31:22.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:22.016" endtime="20201030 18:31:22.018"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.969" endtime="20201030 18:31:22.019"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.967" endtime="20201030 18:31:22.019"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:22.026" endtime="20201030 18:31:22.313"></status>
</kw>
<msg timestamp="20201030 18:31:22.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025013528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025392958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:22.024" endtime="20201030 18:31:22.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025013528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025392958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:22.317" endtime="20201030 18:31:22.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:22.325" endtime="20201030 18:31:22.327"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.022" endtime="20201030 18:31:22.328"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.020" endtime="20201030 18:31:22.328"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:22.332" level="INFO">${RESULT} = [{'diff': 0.00037943000000000005}, {'diff': 0.00035541700000000023}, {'diff': 0.0003574860000000006}, {'diff': 0.0003574860000000006}, {'diff': 0.0003569999999999997}, {'diff': 0.00035755599999999846}...</msg>
<status status="PASS" starttime="20201030 18:31:22.329" endtime="20201030 18:31:22.332"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:22.336" level="INFO">${ACCURACY} = {'diff': [0.00037943000000000005, 0.00035541700000000023, 0.0003574860000000006, 0.0003574860000000006, 0.0003569999999999997, 0.00035755599999999846, 0.00038557000000000174, 0.0003559999999999987, 0....</msg>
<status status="PASS" starttime="20201030 18:31:22.333" endtime="20201030 18:31:22.337"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.341" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201030 18:31:22.340" endtime="20201030 18:31:22.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.344" level="INFO">VALUE: [0.00037943000000000005, 0.00035541700000000023, 0.0003574860000000006, 0.0003574860000000006, 0.0003569999999999997, 0.00035755599999999846, 0.00038557000000000174, 0.0003559999999999987, 0.0003574019999999997, 0.000355473000000002, 0.0003557079999999997, 0.00035709700000000066, 0.0003857360000000011, 0.00035730499999999873, 0.0003562500000000024, 0.0003559440000000004, 0.00035602800000000476, 0.0003561389999999984, 0.00038523599999999714, 0.0003553059999999997, 0.0003567909999999952, 0.00035672200000000376, 0.00035759800000000064, 0.00035533299999999934, 0.00035527800000000054, 0.0003569999999999962, 0.0003564720000000035, 0.0003561950000000036, 0.00035611099999999923, 0.00038555499999999576, 0.00035793100000000577, 0.0003853189999999951, 0.0003852369999999966, 0.00038533400000000106, 0.0003568889999999991, 0.00035705500000000195, 0.000356958999999997, 0.0003852360000000041, 0.00035759700000000116, 0.0003563339999999998, 0.00035594400000000387, 0.0003855000000000039, 0.00035522200000000226, 0.0003555829999999996, 0.00035759700000000116, 0.0003571939999999982, 0.00035622200000000326, 0.0003559449999999964, 0.0003568340000000003, 0.0003561389999999984]</msg>
<status status="PASS" starttime="20201030 18:31:22.342" endtime="20201030 18:31:22.344"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.337" endtime="20201030 18:31:22.345"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:22.349" endtime="20201030 18:31:22.368"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.347" endtime="20201030 18:31:22.369"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.346" endtime="20201030 18:31:22.369"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.965" endtime="20201030 18:31:22.369"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.965" endtime="20201030 18:31:22.370"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:22.379" endtime="20201030 18:31:22.414"></status>
</kw>
<msg timestamp="20201030 18:31:22.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:22.377" endtime="20201030 18:31:22.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.417" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:22.415" endtime="20201030 18:31:22.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:22.418" endtime="20201030 18:31:22.420"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.374" endtime="20201030 18:31:22.420"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.372" endtime="20201030 18:31:22.421"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:22.427" endtime="20201030 18:31:22.713"></status>
</kw>
<msg timestamp="20201030 18:31:22.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021929194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022304764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:22.426" endtime="20201030 18:31:22.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021929194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022304764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:22.718" endtime="20201030 18:31:22.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:22.726" endtime="20201030 18:31:22.728"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.423" endtime="20201030 18:31:22.728"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.421" endtime="20201030 18:31:22.729"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:22.733" level="INFO">${RESULT} = [{'diff': 0.00037557000000000215}, {'diff': 0.00038538899999999987}, {'diff': 0.00035677799999999857}, {'diff': 0.00035627800000000154}, {'diff': 0.00035615200000000194}, {'diff': 0.000357486000000000...</msg>
<status status="PASS" starttime="20201030 18:31:22.730" endtime="20201030 18:31:22.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:22.737" level="INFO">${ACCURACY} = {'diff': [0.00037557000000000215, 0.00038538899999999987, 0.00035677799999999857, 0.00035627800000000154, 0.00035615200000000194, 0.0003574860000000006, 0.00035732000000000125, 0.00038516700000000223,...</msg>
<status status="PASS" starttime="20201030 18:31:22.734" endtime="20201030 18:31:22.737"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.742" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201030 18:31:22.741" endtime="20201030 18:31:22.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.744" level="INFO">VALUE: [0.00037557000000000215, 0.00038538899999999987, 0.00035677799999999857, 0.00035627800000000154, 0.00035615200000000194, 0.0003574860000000006, 0.00035732000000000125, 0.00038516700000000223, 0.00035723600000000036, 0.0003574159999999993, 0.00035700000000000315, 0.00035595899999999944, 0.00035644500000000037, 0.00035709700000000066, 0.0003563469999999999, 0.00035632000000000025, 0.000357263, 0.00035755600000000193, 0.0003558890000000016, 0.0003567090000000002, 0.000355473000000002, 0.0003552079999999992, 0.00035673599999999986, 0.0003576670000000025, 0.0003575130000000003, 0.0003568470000000004, 0.0003852640000000032, 0.00035683300000000084, 0.00035579199999999367, 0.0003573480000000004, 0.0003558469999999994, 0.00035611099999999923, 0.0003567500000000029, 0.00038518099999999833, 0.00035566700000000395, 0.0003851389999999996, 0.0003571389999999994, 0.0003570830000000011, 0.00035659700000000016, 0.0003557089999999957, 0.00035730499999999527, 0.0003562779999999946, 0.00035627800000000154, 0.0003572500000000034, 0.00038484700000000066, 0.0003854719999999978, 0.0003557359999999954, 0.0003563190000000008, 0.00035765199999999997, 0.0003556389999999979]</msg>
<status status="PASS" starttime="20201030 18:31:22.743" endtime="20201030 18:31:22.746"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.738" endtime="20201030 18:31:22.747"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:22.750" endtime="20201030 18:31:22.770"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.749" endtime="20201030 18:31:22.770"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.748" endtime="20201030 18:31:22.771"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.370" endtime="20201030 18:31:22.771"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.370" endtime="20201030 18:31:22.771"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:22.780" endtime="20201030 18:31:22.815"></status>
</kw>
<msg timestamp="20201030 18:31:22.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:22.779" endtime="20201030 18:31:22.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.818" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:22.817" endtime="20201030 18:31:22.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:22.820" endtime="20201030 18:31:22.821"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.776" endtime="20201030 18:31:22.822"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.774" endtime="20201030 18:31:22.822"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:22.829" endtime="20201030 18:31:23.115"></status>
</kw>
<msg timestamp="20201030 18:31:23.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022204111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022565, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:31:22.827" endtime="20201030 18:31:23.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:23.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022204111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022565, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:31:23.119" endtime="20201030 18:31:23.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:23.127" endtime="20201030 18:31:23.129"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.825" endtime="20201030 18:31:23.130"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.823" endtime="20201030 18:31:23.130"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:23.134" level="INFO">${RESULT} = [{'diff': 0.0003608890000000031}, {'diff': 0.00035523599999999836}, {'diff': 0.00035698700000000305}, {'diff': 0.0003851659999999993}, {'diff': 0.0003577080000000017}, {'diff': 0.00035609700000000313}...</msg>
<status status="PASS" starttime="20201030 18:31:23.131" endtime="20201030 18:31:23.134"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:23.139" level="INFO">${ACCURACY} = {'diff': [0.0003608890000000031, 0.00035523599999999836, 0.00035698700000000305, 0.0003851659999999993, 0.0003577080000000017, 0.00035609700000000313, 0.0003852919999999989, 0.0003573470000000009, 0.0...</msg>
<status status="PASS" starttime="20201030 18:31:23.135" endtime="20201030 18:31:23.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:23.144" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201030 18:31:23.143" endtime="20201030 18:31:23.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:23.146" level="INFO">VALUE: [0.0003608890000000031, 0.00035523599999999836, 0.00035698700000000305, 0.0003851659999999993, 0.0003577080000000017, 0.00035609700000000313, 0.0003852919999999989, 0.0003573470000000009, 0.0003851110000000005, 0.0003554860000000021, 0.00035545800000000294, 0.00035775000000000043, 0.00035541700000000023, 0.00035727799999999907, 0.00035742999999999886, 0.00035795900000000144, 0.0003556389999999979, 0.00035788800000000065, 0.000356875000000003, 0.0003576250000000003, 0.0003559859999999991, 0.0003850840000000008, 0.0003564999999999992, 0.0003852360000000006, 0.00035595899999999944, 0.00035644399999999743, 0.0003558060000000002, 0.00038557000000000174, 0.0003568060000000012, 0.00035665299999999844, 0.0003555829999999996, 0.0003550140000000007, 0.0003570139999999958, 0.0003853750000000003, 0.0003558750000000055, 0.00038518099999999833, 0.00038516699999999876, 0.00035587499999999855, 0.000384916000000006, 0.00038506900000000177, 0.0003559029999999977, 0.0003849589999999972, 0.00035574999999999496, 0.0003575700000000015, 0.0003573470000000009, 0.00035555599999999993, 0.00035761100000000073, 0.00035676399999999553, 0.0003851389999999996, 0.0003854440000000056]</msg>
<status status="PASS" starttime="20201030 18:31:23.145" endtime="20201030 18:31:23.147"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.140" endtime="20201030 18:31:23.148"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:23.152" endtime="20201030 18:31:23.171"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.150" endtime="20201030 18:31:23.172"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.149" endtime="20201030 18:31:23.172"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.772" endtime="20201030 18:31:23.172"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.772" endtime="20201030 18:31:23.172"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:23.182" endtime="20201030 18:31:23.218"></status>
</kw>
<msg timestamp="20201030 18:31:23.219" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:23.180" endtime="20201030 18:31:23.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:23.221" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:23.220" endtime="20201030 18:31:23.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:23.222" endtime="20201030 18:31:23.224"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.177" endtime="20201030 18:31:23.225"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.175" endtime="20201030 18:31:23.225"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:23.232" endtime="20201030 18:31:23.521"></status>
</kw>
<msg timestamp="20201030 18:31:23.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022843167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023215806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:23.230" endtime="20201030 18:31:23.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:23.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022843167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023215806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:23.525" endtime="20201030 18:31:23.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:23.533" endtime="20201030 18:31:23.535"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.227" endtime="20201030 18:31:23.535"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.226" endtime="20201030 18:31:23.536"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:23.540" level="INFO">${RESULT} = [{'diff': 0.00037263899999999753}, {'diff': 0.00035591700000000073}, {'diff': 0.00035637499999999905}, {'diff': 0.0003551949999999991}, {'diff': 0.000385416999999999}, {'diff': 0.0003557219999999993},...</msg>
<status status="PASS" starttime="20201030 18:31:23.537" endtime="20201030 18:31:23.540"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:23.544" level="INFO">${ACCURACY} = {'diff': [0.00037263899999999753, 0.00035591700000000073, 0.00035637499999999905, 0.0003551949999999991, 0.000385416999999999, 0.0003557219999999993, 0.00035655600000000093, 0.0003570829999999976, 0.0...</msg>
<status status="PASS" starttime="20201030 18:31:23.541" endtime="20201030 18:31:23.544"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:23.549" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201030 18:31:23.548" endtime="20201030 18:31:23.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:23.551" level="INFO">VALUE: [0.00037263899999999753, 0.00035591700000000073, 0.00035637499999999905, 0.0003551949999999991, 0.000385416999999999, 0.0003557219999999993, 0.00035655600000000093, 0.0003570829999999976, 0.0003554309999999998, 0.00035605500000000095, 0.00035700000000000315, 0.00035647200000000004, 0.00035758400000000107, 0.00038538899999999987, 0.0003558190000000003, 0.00035663900000000234, 0.00035711100000000023, 0.0003578059999999987, 0.00035655600000000093, 0.00035723600000000036, 0.0003567920000000016, 0.00035770799999999825, 0.0003568060000000012, 0.0003574999999999967, 0.000356666999999998, 0.0003854870000000038, 0.00035691699999999826, 0.0003578050000000027, 0.0003578480000000009, 0.0003566809999999976, 0.0003562500000000024, 0.0003572500000000034, 0.0003563609999999995, 0.0003575139999999963, 0.0003563609999999995, 0.0003574029999999992, 0.0003566249999999993, 0.00035537499999999805, 0.0003577500000000039, 0.00035720799999999775, 0.0003563609999999995, 0.00035605600000000043, 0.00035523600000000183, 0.0003558190000000003, 0.00035732000000000125, 0.0003853750000000003, 0.0003578329999999949, 0.0003573889999999996, 0.00038534800000000063, 0.0003575280000000028]</msg>
<status status="PASS" starttime="20201030 18:31:23.550" endtime="20201030 18:31:23.552"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.545" endtime="20201030 18:31:23.553"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:23.556" endtime="20201030 18:31:23.576"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.555" endtime="20201030 18:31:23.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.554" endtime="20201030 18:31:23.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.173" endtime="20201030 18:31:23.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.173" endtime="20201030 18:31:23.577"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:23.587" endtime="20201030 18:31:23.670"></status>
</kw>
<msg timestamp="20201030 18:31:23.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:23.586" endtime="20201030 18:31:23.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:23.673" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:23.672" endtime="20201030 18:31:23.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:23.674" endtime="20201030 18:31:23.677"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.583" endtime="20201030 18:31:23.678"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.580" endtime="20201030 18:31:23.678"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:23.685" endtime="20201030 18:31:23.970"></status>
</kw>
<msg timestamp="20201030 18:31:23.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070318222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070693097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:23.683" endtime="20201030 18:31:23.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:23.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070318222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070693097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:23.974" endtime="20201030 18:31:23.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:23.982" endtime="20201030 18:31:23.984"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.681" endtime="20201030 18:31:23.984"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.679" endtime="20201030 18:31:23.985"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:23.988" level="INFO">${RESULT} = [{'diff': 0.00037487499999999674}, {'diff': 0.0003577909999999962}, {'diff': 0.0003571799999999986}, {'diff': 0.00035751399999998934}, {'diff': 0.00038512500000000005}, {'diff': 0.0003573190000000087}...</msg>
<status status="PASS" starttime="20201030 18:31:23.985" endtime="20201030 18:31:23.989"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:23.993" level="INFO">${ACCURACY} = {'diff': [0.00037487499999999674, 0.0003577909999999962, 0.0003571799999999986, 0.00035751399999998934, 0.00038512500000000005, 0.0003573190000000087, 0.00035772200000000476, 0.0003850980000000004, 0....</msg>
<status status="PASS" starttime="20201030 18:31:23.989" endtime="20201030 18:31:23.993"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:23.997" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201030 18:31:23.996" endtime="20201030 18:31:23.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:24.000" level="INFO">VALUE: [0.00037487499999999674, 0.0003577909999999962, 0.0003571799999999986, 0.00035751399999998934, 0.00038512500000000005, 0.0003573190000000087, 0.00035772200000000476, 0.0003850980000000004, 0.00038525000000000365, 0.00038555599999999524, 0.00035741699999999876, 0.00035577799999998716, 0.0003576949999999912, 0.0003553609999999985, 0.0003853329999999877, 0.00035731899999999484, 0.0003555699999999995, 0.00035540300000000413, 0.0003558749999999916, 0.0003854720000000117, 0.0003553480000000053, 0.00035661100000000667, 0.00038549999999999696, 0.00038522199999999063, 0.0003566799999999981, 0.0003553609999999985, 0.0003554999999999947, 0.0003559859999999887, 0.00035733300000000134, 0.00035754200000000236, 0.0003854439999999987, 0.0003570140000000027, 0.00035541700000001064, 0.00035651300000000274, 0.0003564999999999957, 0.0003577359999999974, 0.00035572200000000276, 0.00035626299999999556, 0.00035570799999999625, 0.0003571390000000063, 0.00035527800000000054, 0.0003569860000000036, 0.0003578480000000078, 0.000355749999999988, 0.0003570699999999871, 0.0003571669999999916, 0.00035633300000000034, 0.00035594399999999693, 0.00035681899999999434, 0.00035547200000000945]</msg>
<status status="PASS" starttime="20201030 18:31:23.998" endtime="20201030 18:31:24.001"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.994" endtime="20201030 18:31:24.001"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:24.005" endtime="20201030 18:31:24.024"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.003" endtime="20201030 18:31:24.025"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.002" endtime="20201030 18:31:24.026"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.578" endtime="20201030 18:31:24.026"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.578" endtime="20201030 18:31:24.026"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:24.037" endtime="20201030 18:31:24.072"></status>
</kw>
<msg timestamp="20201030 18:31:24.072" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:24.036" endtime="20201030 18:31:24.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:24.075" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:24.073" endtime="20201030 18:31:24.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:24.076" endtime="20201030 18:31:24.077"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.032" endtime="20201030 18:31:24.078"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.030" endtime="20201030 18:31:24.078"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:24.085" endtime="20201030 18:31:24.371"></status>
</kw>
<msg timestamp="20201030 18:31:24.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023861069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024221458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:24.083" endtime="20201030 18:31:24.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:24.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023861069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024221458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:24.375" endtime="20201030 18:31:24.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:24.383" endtime="20201030 18:31:24.385"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.081" endtime="20201030 18:31:24.385"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.079" endtime="20201030 18:31:24.386"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:24.389" level="INFO">${RESULT} = [{'diff': 0.0003603890000000026}, {'diff': 0.0003556389999999979}, {'diff': 0.00038488899999999937}, {'diff': 0.0003567629999999995}, {'diff': 0.0003551660000000005}, {'diff': 0.00038530599999999846},...</msg>
<status status="PASS" starttime="20201030 18:31:24.386" endtime="20201030 18:31:24.390"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:24.394" level="INFO">${ACCURACY} = {'diff': [0.0003603890000000026, 0.0003556389999999979, 0.00038488899999999937, 0.0003567629999999995, 0.0003551660000000005, 0.00038530599999999846, 0.0003556389999999979, 0.0003558050000000007, 0.00...</msg>
<status status="PASS" starttime="20201030 18:31:24.390" endtime="20201030 18:31:24.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:24.399" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201030 18:31:24.398" endtime="20201030 18:31:24.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:24.401" level="INFO">VALUE: [0.0003603890000000026, 0.0003556389999999979, 0.00038488899999999937, 0.0003567629999999995, 0.0003551660000000005, 0.00038530599999999846, 0.0003556389999999979, 0.0003558050000000007, 0.00035593000000000083, 0.0003574029999999992, 0.00035561099999999873, 0.0003560690000000005, 0.0003556800000000006, 0.0003561249999999988, 0.0003557079999999997, 0.0003562500000000024, 0.000356569000000001, 0.00035706999999999753, 0.00035577800000000104, 0.00035769400000000215, 0.0003554029999999972, 0.0003553609999999985, 0.0003560140000000017, 0.00035520799999999575, 0.00035515199999999747, 0.0003850840000000008, 0.0003557080000000032, 0.0003847640000000027, 0.0003853049999999955, 0.00035519499999999565, 0.00038534700000000116, 0.0003573889999999996, 0.00038499999999999646, 0.0003852770000000033, 0.00038527799999999585, 0.00035659799999999964, 0.0003572920000000021, 0.00035758299999999466, 0.00035605500000000095, 0.0003572500000000034, 0.00035623600000000283, 0.00035505600000000637, 0.00035640300000000513, 0.000355375000000005, 0.00035744399999999843, 0.0003553469999999989, 0.00035572200000000276, 0.00035611100000000617, 0.000355166000000004, 0.0003853060000000019]</msg>
<status status="PASS" starttime="20201030 18:31:24.400" endtime="20201030 18:31:24.402"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.395" endtime="20201030 18:31:24.403"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:24.406" endtime="20201030 18:31:24.426"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.405" endtime="20201030 18:31:24.426"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.404" endtime="20201030 18:31:24.426"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.027" endtime="20201030 18:31:24.427"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.026" endtime="20201030 18:31:24.427"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:24.435" endtime="20201030 18:31:24.473"></status>
</kw>
<msg timestamp="20201030 18:31:24.474" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:24.434" endtime="20201030 18:31:24.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:24.476" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:24.475" endtime="20201030 18:31:24.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:24.477" endtime="20201030 18:31:24.479"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.431" endtime="20201030 18:31:24.479"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.429" endtime="20201030 18:31:24.480"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:24.487" endtime="20201030 18:31:24.773"></status>
</kw>
<msg timestamp="20201030 18:31:24.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024385875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024743472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:24.485" endtime="20201030 18:31:24.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:24.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024385875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024743472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:24.777" endtime="20201030 18:31:24.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:24.785" endtime="20201030 18:31:24.787"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.482" endtime="20201030 18:31:24.787"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.480" endtime="20201030 18:31:24.788"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:24.792" level="INFO">${RESULT} = [{'diff': 0.0003575969999999977}, {'diff': 0.00035581999999999975}, {'diff': 0.0003555140000000012}, {'diff': 0.000357554999999999}, {'diff': 0.00035581999999999975}, {'diff': 0.000385416999999999}, {...</msg>
<status status="PASS" starttime="20201030 18:31:24.788" endtime="20201030 18:31:24.792"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:24.796" level="INFO">${ACCURACY} = {'diff': [0.0003575969999999977, 0.00035581999999999975, 0.0003555140000000012, 0.000357554999999999, 0.00035581999999999975, 0.000385416999999999, 0.0003849999999999999, 0.00035779199999999914, 0.000...</msg>
<status status="PASS" starttime="20201030 18:31:24.793" endtime="20201030 18:31:24.796"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:24.800" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201030 18:31:24.799" endtime="20201030 18:31:24.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:24.802" level="INFO">VALUE: [0.0003575969999999977, 0.00035581999999999975, 0.0003555140000000012, 0.000357554999999999, 0.00035581999999999975, 0.000385416999999999, 0.0003849999999999999, 0.00035779199999999914, 0.0003567090000000002, 0.00035683300000000084, 0.0003550140000000007, 0.0003559019999999982, 0.0003558469999999994, 0.0003576950000000016, 0.0003566389999999989, 0.00035706899999999805, 0.0003553339999999988, 0.0003559440000000004, 0.00035561099999999873, 0.0003849860000000038, 0.0003573610000000005, 0.00035604200000000086, 0.0003849299999999986, 0.0003562500000000024, 0.00038483299999999415, 0.0003552080000000027, 0.0003852919999999954, 0.0003558190000000003, 0.000356555999999994, 0.00038538899999999987, 0.0003569590000000039, 0.00038522199999999757, 0.00035626299999999556, 0.00035741699999999876, 0.00035626400000000197, 0.00035550000000000165, 0.00035644500000000384, 0.0003573340000000008, 0.0003563889999999986, 0.0003571249999999998, 0.0003567920000000016, 0.00035654200000000136, 0.00035545800000000294, 0.0003557359999999954, 0.0003559170000000042, 0.0003559019999999982, 0.00035654200000000136, 0.00035559699999999916, 0.0003562920000000011, 0.00035776400000000347]</msg>
<status status="PASS" starttime="20201030 18:31:24.801" endtime="20201030 18:31:24.803"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.796" endtime="20201030 18:31:24.804"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:24.807" endtime="20201030 18:31:24.827"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.806" endtime="20201030 18:31:24.827"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.805" endtime="20201030 18:31:24.827"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.428" endtime="20201030 18:31:24.828"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.427" endtime="20201030 18:31:24.828"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:24.837" endtime="20201030 18:31:24.875"></status>
</kw>
<msg timestamp="20201030 18:31:24.875" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:24.836" endtime="20201030 18:31:24.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:24.878" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:24.876" endtime="20201030 18:31:24.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:24.879" endtime="20201030 18:31:24.880"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.833" endtime="20201030 18:31:24.881"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.830" endtime="20201030 18:31:24.881"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:24.888" endtime="20201030 18:31:25.179"></status>
</kw>
<msg timestamp="20201030 18:31:25.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025268514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02564225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:24.886" endtime="20201030 18:31:25.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:25.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025268514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02564225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:25.188" endtime="20201030 18:31:25.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:25.207" endtime="20201030 18:31:25.210"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.884" endtime="20201030 18:31:25.211"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.882" endtime="20201030 18:31:25.212"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:25.220" level="INFO">${RESULT} = [{'diff': 0.0003737359999999995}, {'diff': 0.000356666000000002}, {'diff': 0.0003555279999999973}, {'diff': 0.00035747200000000104}, {'diff': 0.00035772300000000076}, {'diff': 0.0003567220000000003}, ...</msg>
<status status="PASS" starttime="20201030 18:31:25.213" endtime="20201030 18:31:25.220"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:25.230" level="INFO">${ACCURACY} = {'diff': [0.0003737359999999995, 0.000356666000000002, 0.0003555279999999973, 0.00035747200000000104, 0.00035772300000000076, 0.0003567220000000003, 0.000355167, 0.0003558889999999981, 0.0003568889999...</msg>
<status status="PASS" starttime="20201030 18:31:25.222" endtime="20201030 18:31:25.230"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:25.239" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201030 18:31:25.237" endtime="20201030 18:31:25.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:25.244" level="INFO">VALUE: [0.0003737359999999995, 0.000356666000000002, 0.0003555279999999973, 0.00035747200000000104, 0.00035772300000000076, 0.0003567220000000003, 0.000355167, 0.0003558889999999981, 0.0003568889999999991, 0.00035673699999999933, 0.00035724999999999993, 0.0003556949999999996, 0.00035554200000000036, 0.0003854299999999991, 0.0003576120000000002, 0.00038530599999999846, 0.0003571530000000024, 0.0003560830000000001, 0.0003554860000000021, 0.000355666999999997, 0.00035593100000000377, 0.00035611099999999923, 0.0003570140000000027, 0.0003560690000000005, 0.0003848749999999998, 0.000356861, 0.00035676399999999553, 0.00038516699999999876, 0.0003553189999999998, 0.0003567920000000016, 0.00035770799999999825, 0.00035665199999999897, 0.00035687499999999955, 0.00035598700000000205, 0.0003558050000000007, 0.00038498699999999636, 0.0003557219999999958, 0.0003566940000000046, 0.0003571950000000046, 0.0003576389999999999, 0.0003853200000000015, 0.000385416999999999, 0.0003553189999999998, 0.00035776399999999653, 0.0003556940000000036, 0.00035611099999999923, 0.0003853609999999938, 0.0003554860000000021, 0.00035777800000000304, 0.00035754200000000236]</msg>
<status status="PASS" starttime="20201030 18:31:25.241" endtime="20201030 18:31:25.246"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.232" endtime="20201030 18:31:25.247"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:25.254" endtime="20201030 18:31:25.273"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.251" endtime="20201030 18:31:25.274"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.249" endtime="20201030 18:31:25.274"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.829" endtime="20201030 18:31:25.274"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.828" endtime="20201030 18:31:25.274"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:25.283" endtime="20201030 18:31:25.322"></status>
</kw>
<msg timestamp="20201030 18:31:25.322" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:25.281" endtime="20201030 18:31:25.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:25.325" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:25.323" endtime="20201030 18:31:25.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:25.326" endtime="20201030 18:31:25.327"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.279" endtime="20201030 18:31:25.328"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.277" endtime="20201030 18:31:25.328"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:25.335" endtime="20201030 18:31:25.621"></status>
</kw>
<msg timestamp="20201030 18:31:25.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020857597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021221722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:25.333" endtime="20201030 18:31:25.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:25.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020857597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021221722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:25.625" endtime="20201030 18:31:25.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:25.633" endtime="20201030 18:31:25.635"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.331" endtime="20201030 18:31:25.635"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.329" endtime="20201030 18:31:25.636"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:25.639" level="INFO">${RESULT} = [{'diff': 0.00036412499999999987}, {'diff': 0.0003849450000000011}, {'diff': 0.00035723699999999983}, {'diff': 0.0003564859999999996}, {'diff': 0.00035615299999999794}, {'diff': 0.00035637499999999905...</msg>
<status status="PASS" starttime="20201030 18:31:25.636" endtime="20201030 18:31:25.640"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:25.644" level="INFO">${ACCURACY} = {'diff': [0.00036412499999999987, 0.0003849450000000011, 0.00035723699999999983, 0.0003564859999999996, 0.00035615299999999794, 0.00035637499999999905, 0.000356167000000001, 0.0003558890000000016, 0.0...</msg>
<status status="PASS" starttime="20201030 18:31:25.640" endtime="20201030 18:31:25.645"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:25.649" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201030 18:31:25.648" endtime="20201030 18:31:25.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:25.651" level="INFO">VALUE: [0.00036412499999999987, 0.0003849450000000011, 0.00035723699999999983, 0.0003564859999999996, 0.00035615299999999794, 0.00035637499999999905, 0.000356167000000001, 0.0003558890000000016, 0.00035659700000000016, 0.0003574159999999993, 0.0003563750000000025, 0.000356554999999998, 0.000385319000000002, 0.00035529099999999716, 0.000384917000000002, 0.00038504199999999864, 0.00035673599999999986, 0.00035754200000000236, 0.0003574860000000006, 0.0003567220000000003, 0.0003852360000000006, 0.0003562920000000011, 0.00035655500000000145, 0.0003576250000000003, 0.00035627799999999807, 0.00035624999999999893, 0.00035691699999999826, 0.0003556800000000006, 0.0003572500000000034, 0.000385207999999998, 0.0003565830000000006, 0.00035670799999999725, 0.00035724999999999646, 0.00035732000000000125, 0.0003550280000000003, 0.0003551669999999965, 0.00038518099999999833, 0.00038486100000000023, 0.00038523599999999714, 0.00035705600000000143, 0.00035774999999999696, 0.00035545800000000294, 0.0003561389999999984, 0.0003566950000000041, 0.00035683300000000084, 0.000355860999999999, 0.000357070000000001, 0.0003577219999999978, 0.00035716599999999904, 0.0003575269999999964]</msg>
<status status="PASS" starttime="20201030 18:31:25.650" endtime="20201030 18:31:25.652"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.645" endtime="20201030 18:31:25.653"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:25.656" endtime="20201030 18:31:25.676"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.655" endtime="20201030 18:31:25.676"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.654" endtime="20201030 18:31:25.676"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.275" endtime="20201030 18:31:25.677"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.275" endtime="20201030 18:31:25.677"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:25.685" endtime="20201030 18:31:25.719"></status>
</kw>
<msg timestamp="20201030 18:31:25.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:25.684" endtime="20201030 18:31:25.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:25.722" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:25.721" endtime="20201030 18:31:25.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:25.723" endtime="20201030 18:31:25.725"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.681" endtime="20201030 18:31:25.726"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.679" endtime="20201030 18:31:25.726"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:25.732" endtime="20201030 18:31:26.031"></status>
</kw>
<msg timestamp="20201030 18:31:26.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020365069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020725972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:25.731" endtime="20201030 18:31:26.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020365069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020725972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:26.041" endtime="20201030 18:31:26.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.059" endtime="20201030 18:31:26.062"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.728" endtime="20201030 18:31:26.063"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.727" endtime="20201030 18:31:26.064"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:26.067" level="INFO">${RESULT} = [{'diff': 0.0003609029999999992}, {'diff': 0.0003850139999999995}, {'diff': 0.00035651399999999875}, {'diff': 0.000385319000000002}, {'diff': 0.0003574730000000005}, {'diff': 0.00035554200000000036}, ...</msg>
<status status="PASS" starttime="20201030 18:31:26.064" endtime="20201030 18:31:26.068"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:26.071" level="INFO">${ACCURACY} = {'diff': [0.0003609029999999992, 0.0003850139999999995, 0.00035651399999999875, 0.000385319000000002, 0.0003574730000000005, 0.00035554200000000036, 0.0003562639999999985, 0.00035623599999999936, 0.00...</msg>
<status status="PASS" starttime="20201030 18:31:26.068" endtime="20201030 18:31:26.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.076" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201030 18:31:26.075" endtime="20201030 18:31:26.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.078" level="INFO">VALUE: [0.0003609029999999992, 0.0003850139999999995, 0.00035651399999999875, 0.000385319000000002, 0.0003574730000000005, 0.00035554200000000036, 0.0003562639999999985, 0.00035623599999999936, 0.0003851940000000019, 0.00035581999999999975, 0.00035645800000000047, 0.00035645800000000047, 0.0003850139999999995, 0.00035737500000000005, 0.00035727799999999907, 0.00035679199999999814, 0.00035513900000000084, 0.0003566249999999993, 0.00035527800000000054, 0.00035590300000000116, 0.00038520800000000147, 0.00035590300000000116, 0.0003559310000000003, 0.00035624999999999893, 0.000355860999999999, 0.00035695900000000044, 0.00038526399999999975, 0.00035659700000000016, 0.00035611099999999923, 0.00035644399999999743, 0.0003552229999999948, 0.00038512500000000005, 0.00038479200000000185, 0.00035700000000000315, 0.0003572909999999957, 0.0003577219999999978, 0.00035559699999999916, 0.0003551939999999962, 0.0003552370000000013, 0.00035522300000000173, 0.00038534700000000116, 0.000355958999999996, 0.0003556940000000036, 0.0003555410000000009, 0.000355457999999996, 0.00035676400000000247, 0.00035647299999999604, 0.00035745800000000494, 0.0003556809999999966, 0.0003563190000000008]</msg>
<status status="PASS" starttime="20201030 18:31:26.077" endtime="20201030 18:31:26.079"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.072" endtime="20201030 18:31:26.079"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:26.083" endtime="20201030 18:31:26.102"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.082" endtime="20201030 18:31:26.103"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.080" endtime="20201030 18:31:26.103"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.678" endtime="20201030 18:31:26.104"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.677" endtime="20201030 18:31:26.104"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.113" endtime="20201030 18:31:26.151"></status>
</kw>
<msg timestamp="20201030 18:31:26.152" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:26.112" endtime="20201030 18:31:26.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:26.153" endtime="20201030 18:31:26.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.155" endtime="20201030 18:31:26.157"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.108" endtime="20201030 18:31:26.157"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.106" endtime="20201030 18:31:26.158"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.164" endtime="20201030 18:31:26.449"></status>
</kw>
<msg timestamp="20201030 18:31:26.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025490931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025869597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:26.162" endtime="20201030 18:31:26.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025490931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025869597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:26.453" endtime="20201030 18:31:26.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.461" endtime="20201030 18:31:26.463"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.160" endtime="20201030 18:31:26.464"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.158" endtime="20201030 18:31:26.464"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:26.468" level="INFO">${RESULT} = [{'diff': 0.0003786659999999997}, {'diff': 0.00035655599999999746}, {'diff': 0.00035727799999999907}, {'diff': 0.00035523599999999836}, {'diff': 0.00035676400000000247}, {'diff': 0.0003560000000000021...</msg>
<status status="PASS" starttime="20201030 18:31:26.465" endtime="20201030 18:31:26.468"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:26.472" level="INFO">${ACCURACY} = {'diff': [0.0003786659999999997, 0.00035655599999999746, 0.00035727799999999907, 0.00035523599999999836, 0.00035676400000000247, 0.00035600000000000215, 0.0003569860000000001, 0.0003576809999999986, 0...</msg>
<status status="PASS" starttime="20201030 18:31:26.469" endtime="20201030 18:31:26.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.477" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201030 18:31:26.476" endtime="20201030 18:31:26.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.479" level="INFO">VALUE: [0.0003786659999999997, 0.00035655599999999746, 0.00035727799999999907, 0.00035523599999999836, 0.00035676400000000247, 0.00035600000000000215, 0.0003569860000000001, 0.0003576809999999986, 0.0003556800000000006, 0.0003573610000000005, 0.00035508399999999857, 0.00035747199999999757, 0.00035577799999999757, 0.0003568189999999978, 0.00035526400000000097, 0.0003560140000000017, 0.0003850000000000034, 0.00035711100000000023, 0.0003567920000000016, 0.0003551389999999974, 0.0003848619999999997, 0.00038523599999999714, 0.0003569029999999987, 0.0003568060000000012, 0.00038525000000000365, 0.0003553469999999989, 0.0003570139999999958, 0.00038538899999999987, 0.0003557920000000006, 0.00035559699999999916, 0.00035543100000000327, 0.0003552080000000027, 0.000356861, 0.0003577080000000052, 0.000355860999999999, 0.0003569029999999987, 0.00035662500000000624, 0.0003561119999999987, 0.0003550140000000007, 0.0003569999999999962, 0.00035661099999999973, 0.00035719499999999765, 0.0003566809999999976, 0.000356457999999997, 0.0003572779999999956, 0.00035759700000000116, 0.0003558050000000007, 0.00038486100000000023, 0.0003558880000000056, 0.0003850560000000017]</msg>
<status status="PASS" starttime="20201030 18:31:26.478" endtime="20201030 18:31:26.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.473" endtime="20201030 18:31:26.485"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:26.489" endtime="20201030 18:31:26.508"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.487" endtime="20201030 18:31:26.509"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.486" endtime="20201030 18:31:26.509"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.105" endtime="20201030 18:31:26.509"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.104" endtime="20201030 18:31:26.509"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.518" endtime="20201030 18:31:26.554"></status>
</kw>
<msg timestamp="20201030 18:31:26.555" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:26.516" endtime="20201030 18:31:26.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.557" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:26.556" endtime="20201030 18:31:26.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.558" endtime="20201030 18:31:26.560"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.514" endtime="20201030 18:31:26.560"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.512" endtime="20201030 18:31:26.561"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.567" endtime="20201030 18:31:26.868"></status>
</kw>
<msg timestamp="20201030 18:31:26.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021788056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022147583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:26.566" endtime="20201030 18:31:26.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021788056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022147583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:26.875" endtime="20201030 18:31:26.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.883" endtime="20201030 18:31:26.885"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.563" endtime="20201030 18:31:26.885"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.561" endtime="20201030 18:31:26.886"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:26.889" level="INFO">${RESULT} = [{'diff': 0.0003595269999999984}, {'diff': 0.00035595799999999997}, {'diff': 0.00035522300000000173}, {'diff': 0.00035723600000000036}, {'diff': 0.0003552920000000001}, {'diff': 0.0003849309999999981}...</msg>
<status status="PASS" starttime="20201030 18:31:26.886" endtime="20201030 18:31:26.890"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:26.894" level="INFO">${ACCURACY} = {'diff': [0.0003595269999999984, 0.00035595799999999997, 0.00035522300000000173, 0.00035723600000000036, 0.0003552920000000001, 0.0003849309999999981, 0.000357861000000001, 0.000357070000000001, 0.000...</msg>
<status status="PASS" starttime="20201030 18:31:26.890" endtime="20201030 18:31:26.895"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.899" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201030 18:31:26.898" endtime="20201030 18:31:26.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.901" level="INFO">VALUE: [0.0003595269999999984, 0.00035595799999999997, 0.00035522300000000173, 0.00035723600000000036, 0.0003552920000000001, 0.0003849309999999981, 0.000357861000000001, 0.000357070000000001, 0.0003577359999999974, 0.0003562630000000025, 0.0003575000000000002, 0.0003553189999999998, 0.0003852919999999989, 0.0003573060000000017, 0.0003551530000000004, 0.00035773600000000086, 0.00035641700000000123, 0.0003560690000000005, 0.0003575419999999989, 0.0003562089999999997, 0.00035695800000000097, 0.0003551119999999977, 0.00035523599999999836, 0.00035505599999999943, 0.0003853200000000015, 0.0003571250000000033, 0.0003561389999999984, 0.00035590300000000463, 0.00035604200000000086, 0.0003560690000000005, 0.0003556940000000036, 0.0003572769999999961, 0.00035655600000000093, 0.000355181000000003, 0.00035576400000000147, 0.00035572200000000276, 0.0003577359999999974, 0.00035720900000000416, 0.00035577800000000104, 0.000385416999999999, 0.0003555140000000012, 0.00035758400000000107, 0.0003852640000000032, 0.00035597199999999607, 0.0003556660000000045, 0.00035533299999999934, 0.0003568060000000012, 0.0003560830000000001, 0.0003559019999999982, 0.00035650000000000265]</msg>
<status status="PASS" starttime="20201030 18:31:26.900" endtime="20201030 18:31:26.902"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.895" endtime="20201030 18:31:26.903"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:26.906" endtime="20201030 18:31:26.925"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.905" endtime="20201030 18:31:26.926"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.904" endtime="20201030 18:31:26.926"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.510" endtime="20201030 18:31:26.927"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.510" endtime="20201030 18:31:26.927"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.935" endtime="20201030 18:31:26.971"></status>
</kw>
<msg timestamp="20201030 18:31:26.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:26.934" endtime="20201030 18:31:26.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:26.972" endtime="20201030 18:31:26.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.975" endtime="20201030 18:31:26.976"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.931" endtime="20201030 18:31:26.977"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.929" endtime="20201030 18:31:26.977"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.983" endtime="20201030 18:31:27.270"></status>
</kw>
<msg timestamp="20201030 18:31:27.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021341625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021708361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:26.982" endtime="20201030 18:31:27.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:27.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021341625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021708361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:27.274" endtime="20201030 18:31:27.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:27.282" endtime="20201030 18:31:27.284"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.979" endtime="20201030 18:31:27.284"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.978" endtime="20201030 18:31:27.285"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:27.289" level="INFO">${RESULT} = [{'diff': 0.00036673599999999945}, {'diff': 0.00038522199999999757}, {'diff': 0.00035609699999999966}, {'diff': 0.00035640300000000166}, {'diff': 0.0003574440000000019}, {'diff': 0.0003559300000000008...</msg>
<status status="PASS" starttime="20201030 18:31:27.286" endtime="20201030 18:31:27.289"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:27.293" level="INFO">${ACCURACY} = {'diff': [0.00036673599999999945, 0.00038522199999999757, 0.00035609699999999966, 0.00035640300000000166, 0.0003574440000000019, 0.00035593000000000083, 0.0003567769999999991, 0.00035587499999999855, ...</msg>
<status status="PASS" starttime="20201030 18:31:27.290" endtime="20201030 18:31:27.293"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:27.297" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201030 18:31:27.296" endtime="20201030 18:31:27.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:27.299" level="INFO">VALUE: [0.00036673599999999945, 0.00038522199999999757, 0.00035609699999999966, 0.00035640300000000166, 0.0003574440000000019, 0.00035593000000000083, 0.0003567769999999991, 0.00035587499999999855, 0.0003552920000000001, 0.00035663900000000234, 0.0003554860000000021, 0.00038494400000000165, 0.000356861, 0.00038507000000000124, 0.00035574999999999843, 0.0003850970000000009, 0.000357457999999998, 0.000356569000000001, 0.00035743099999999833, 0.00035666599999999854, 0.0003575969999999977, 0.00035744500000000137, 0.00035645800000000047, 0.00035650000000000265, 0.0003574029999999992, 0.00035511099999999823, 0.00035732000000000125, 0.00035523600000000183, 0.0003555270000000013, 0.0003560140000000017, 0.00035633300000000034, 0.0003848060000000014, 0.0003567089999999967, 0.000385207999999998, 0.00035605600000000043, 0.00035573600000000233, 0.0003567769999999956, 0.0003551950000000026, 0.0003562089999999962, 0.0003854309999999986, 0.0003563610000000064, 0.0003551809999999961, 0.0003854309999999986, 0.00038534800000000063, 0.0003572920000000021, 0.0003570690000000015, 0.000356861, 0.00035779100000000313, 0.00038486200000000664, 0.0003853060000000019]</msg>
<status status="PASS" starttime="20201030 18:31:27.298" endtime="20201030 18:31:27.300"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.294" endtime="20201030 18:31:27.301"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:27.304" endtime="20201030 18:31:27.324"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.303" endtime="20201030 18:31:27.324"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.302" endtime="20201030 18:31:27.325"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.928" endtime="20201030 18:31:27.325"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.927" endtime="20201030 18:31:27.325"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:27.334" endtime="20201030 18:31:27.372"></status>
</kw>
<msg timestamp="20201030 18:31:27.373" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:27.332" endtime="20201030 18:31:27.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:27.375" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:27.374" endtime="20201030 18:31:27.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:27.376" endtime="20201030 18:31:27.378"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.330" endtime="20201030 18:31:27.379"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.328" endtime="20201030 18:31:27.379"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:27.385" endtime="20201030 18:31:27.672"></status>
</kw>
<msg timestamp="20201030 18:31:27.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024918986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025288764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:27.384" endtime="20201030 18:31:27.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:27.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024918986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025288764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:27.677" endtime="20201030 18:31:27.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:27.685" endtime="20201030 18:31:27.686"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.381" endtime="20201030 18:31:27.687"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.380" endtime="20201030 18:31:27.687"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:27.691" level="INFO">${RESULT} = [{'diff': 0.0003697779999999977}, {'diff': 0.000356861}, {'diff': 0.00038512500000000005}, {'diff': 0.0003562630000000025}, {'diff': 0.0003561939999999972}, {'diff': 0.0003852779999999993}, {'diff': 0...</msg>
<status status="PASS" starttime="20201030 18:31:27.688" endtime="20201030 18:31:27.691"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:27.695" level="INFO">${ACCURACY} = {'diff': [0.0003697779999999977, 0.000356861, 0.00038512500000000005, 0.0003562630000000025, 0.0003561939999999972, 0.0003852779999999993, 0.0003564729999999995, 0.0003568890000000026, 0.0003571519999...</msg>
<status status="PASS" starttime="20201030 18:31:27.692" endtime="20201030 18:31:27.695"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:27.699" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201030 18:31:27.698" endtime="20201030 18:31:27.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:27.702" level="INFO">VALUE: [0.0003697779999999977, 0.000356861, 0.00038512500000000005, 0.0003562630000000025, 0.0003561939999999972, 0.0003852779999999993, 0.0003564729999999995, 0.0003568890000000026, 0.00035715199999999947, 0.0003854299999999991, 0.00035492999999999983, 0.0003577220000000013, 0.0003564999999999992, 0.0003575409999999994, 0.0003553200000000027, 0.00035607, 0.00035677799999999857, 0.00038502800000000253, 0.0003575700000000015, 0.00035552799999999385, 0.00038506900000000177, 0.00035690300000000563, 0.00035550000000000165, 0.0003849870000000033, 0.00035579100000000113, 0.0003853189999999951, 0.0003852919999999954, 0.00035516599999999704, 0.0003849439999999982, 0.00035737500000000005, 0.0003574449999999979, 0.00035573600000000233, 0.0003850000000000034, 0.0003559159999999978, 0.00035583299999999984, 0.0003575140000000032, 0.00035609699999999966, 0.00035590200000000516, 0.00035774999999999696, 0.0003574999999999967, 0.0003558190000000003, 0.00035641699999999776, 0.0003556810000000035, 0.00035672200000000376, 0.00035694399999999793, 0.00038525000000000365, 0.000356555999999994, 0.00035744399999999843, 0.0003553609999999985, 0.00035518000000000355]</msg>
<status status="PASS" starttime="20201030 18:31:27.700" endtime="20201030 18:31:27.703"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.696" endtime="20201030 18:31:27.704"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:27.708" endtime="20201030 18:31:27.727"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.706" endtime="20201030 18:31:27.728"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.705" endtime="20201030 18:31:27.728"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.326" endtime="20201030 18:31:27.728"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.325" endtime="20201030 18:31:27.728"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:27.737" endtime="20201030 18:31:27.775"></status>
</kw>
<msg timestamp="20201030 18:31:27.776" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:27.735" endtime="20201030 18:31:27.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:27.778" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:27.777" endtime="20201030 18:31:27.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:27.779" endtime="20201030 18:31:27.781"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.733" endtime="20201030 18:31:27.781"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.731" endtime="20201030 18:31:27.782"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:27.788" endtime="20201030 18:31:28.074"></status>
</kw>
<msg timestamp="20201030 18:31:28.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023726528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024103458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:27.787" endtime="20201030 18:31:28.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023726528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024103458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:28.078" endtime="20201030 18:31:28.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.086" endtime="20201030 18:31:28.088"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.784" endtime="20201030 18:31:28.088"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.782" endtime="20201030 18:31:28.089"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:28.093" level="INFO">${RESULT} = [{'diff': 0.000376930000000001}, {'diff': 0.0003556119999999982}, {'diff': 0.00035495799999999897}, {'diff': 0.0003555140000000012}, {'diff': 0.0003563750000000025}, {'diff': 0.00035697200000000054}, ...</msg>
<status status="PASS" starttime="20201030 18:31:28.090" endtime="20201030 18:31:28.093"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:28.098" level="INFO">${ACCURACY} = {'diff': [0.000376930000000001, 0.0003556119999999982, 0.00035495799999999897, 0.0003555140000000012, 0.0003563750000000025, 0.00035697200000000054, 0.0003565419999999979, 0.00038530599999999846, 0.00...</msg>
<status status="PASS" starttime="20201030 18:31:28.094" endtime="20201030 18:31:28.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.102" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201030 18:31:28.101" endtime="20201030 18:31:28.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.104" level="INFO">VALUE: [0.000376930000000001, 0.0003556119999999982, 0.00035495799999999897, 0.0003555140000000012, 0.0003563750000000025, 0.00035697200000000054, 0.0003565419999999979, 0.00038530599999999846, 0.0003563339999999998, 0.0003553189999999998, 0.00038498699999999983, 0.00035577700000000156, 0.0003566389999999989, 0.00038490299999999894, 0.00035756899999999855, 0.00035691699999999826, 0.0003573199999999978, 0.00035738800000000015, 0.0003565279999999983, 0.00035724999999999993, 0.00035522200000000226, 0.0003557500000000019, 0.0003847780000000023, 0.0003850970000000009, 0.00035620799999999675, 0.000355763000000002, 0.0003565139999999953, 0.0003550140000000007, 0.0003848749999999998, 0.00035527800000000054, 0.00038517999999999886, 0.0003573889999999996, 0.00035595800000000344, 0.0003558330000000068, 0.00035554200000000036, 0.00035776400000000347, 0.0003573329999999944, 0.0003558479999999989, 0.00035523600000000183, 0.00035544399999999643, 0.00038572199999999807, 0.0003576939999999987, 0.0003851110000000005, 0.00035687499999999955, 0.0003554720000000025, 0.00038497200000000426, 0.0003564170000000047, 0.00035720799999999775, 0.0003573470000000009, 0.000355181000000003]</msg>
<status status="PASS" starttime="20201030 18:31:28.103" endtime="20201030 18:31:28.105"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.098" endtime="20201030 18:31:28.106"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:28.109" endtime="20201030 18:31:28.129"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.108" endtime="20201030 18:31:28.129"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.107" endtime="20201030 18:31:28.129"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.729" endtime="20201030 18:31:28.130"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.729" endtime="20201030 18:31:28.130"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.139" endtime="20201030 18:31:28.177"></status>
</kw>
<msg timestamp="20201030 18:31:28.177" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:28.137" endtime="20201030 18:31:28.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:28.178" endtime="20201030 18:31:28.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.181" endtime="20201030 18:31:28.182"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.135" endtime="20201030 18:31:28.183"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.132" endtime="20201030 18:31:28.183"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.189" endtime="20201030 18:31:28.476"></status>
</kw>
<msg timestamp="20201030 18:31:28.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023978764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024345278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:28.188" endtime="20201030 18:31:28.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023978764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024345278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:28.480" endtime="20201030 18:31:28.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.489" endtime="20201030 18:31:28.490"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.185" endtime="20201030 18:31:28.491"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.184" endtime="20201030 18:31:28.491"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:28.495" level="INFO">${RESULT} = [{'diff': 0.0003665140000000018}, {'diff': 0.00035650000000000265}, {'diff': 0.0003559019999999982}, {'diff': 0.00035680499999999823}, {'diff': 0.00035595799999999997}, {'diff': 0.0003570419999999984}...</msg>
<status status="PASS" starttime="20201030 18:31:28.492" endtime="20201030 18:31:28.495"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:28.499" level="INFO">${ACCURACY} = {'diff': [0.0003665140000000018, 0.00035650000000000265, 0.0003559019999999982, 0.00035680499999999823, 0.00035595799999999997, 0.0003570419999999984, 0.00035745800000000147, 0.0003565140000000022, 0....</msg>
<status status="PASS" starttime="20201030 18:31:28.496" endtime="20201030 18:31:28.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.503" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201030 18:31:28.502" endtime="20201030 18:31:28.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.506" level="INFO">VALUE: [0.0003665140000000018, 0.00035650000000000265, 0.0003559019999999982, 0.00035680499999999823, 0.00035595799999999997, 0.0003570419999999984, 0.00035745800000000147, 0.0003565140000000022, 0.0003570419999999984, 0.000385611000000001, 0.00038558299999999837, 0.00035709800000000014, 0.000356861, 0.00035780499999999923, 0.00035559700000000263, 0.0003555410000000009, 0.0003568889999999991, 0.000357764, 0.00038526399999999975, 0.0003567500000000029, 0.0003551669999999965, 0.00038495799999999775, 0.0003851529999999992, 0.00035668000000000505, 0.00035741699999999876, 0.0003577080000000052, 0.0003554029999999972, 0.00035741699999999876, 0.0003559300000000043, 0.000357457999999998, 0.0003578470000000014, 0.00038529200000000235, 0.0003571249999999998, 0.00035780499999999577, 0.0003559019999999982, 0.000357763000000004, 0.00035722200000000426, 0.00035615299999999794, 0.00035591699999999726, 0.00035555599999999993, 0.00035687499999999955, 0.00035654200000000136, 0.0003554999999999947, 0.0003572359999999969, 0.00035648599999999614, 0.00035559799999999864, 0.0003576250000000003, 0.0003579029999999997, 0.00035655600000000093, 0.0003552219999999953]</msg>
<status status="PASS" starttime="20201030 18:31:28.505" endtime="20201030 18:31:28.507"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.500" endtime="20201030 18:31:28.507"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:28.511" endtime="20201030 18:31:28.530"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.509" endtime="20201030 18:31:28.531"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.508" endtime="20201030 18:31:28.531"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.131" endtime="20201030 18:31:28.531"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.130" endtime="20201030 18:31:28.531"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.540" endtime="20201030 18:31:28.578"></status>
</kw>
<msg timestamp="20201030 18:31:28.579" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:28.538" endtime="20201030 18:31:28.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.581" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:28.580" endtime="20201030 18:31:28.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.582" endtime="20201030 18:31:28.584"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.536" endtime="20201030 18:31:28.584"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.534" endtime="20201030 18:31:28.585"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.591" endtime="20201030 18:31:28.876"></status>
</kw>
<msg timestamp="20201030 18:31:28.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024343264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024706722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:28.590" endtime="20201030 18:31:28.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024343264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024706722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:28.880" endtime="20201030 18:31:28.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.888" endtime="20201030 18:31:28.890"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.587" endtime="20201030 18:31:28.890"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.585" endtime="20201030 18:31:28.891"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:28.895" level="INFO">${RESULT} = [{'diff': 0.00036345800000000053}, {'diff': 0.00038534700000000116}, {'diff': 0.00035573599999999886}, {'diff': 0.0003553189999999998}, {'diff': 0.00038530599999999846}, {'diff': 0.0003578189999999988...</msg>
<status status="PASS" starttime="20201030 18:31:28.892" endtime="20201030 18:31:28.895"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:28.899" level="INFO">${ACCURACY} = {'diff': [0.00036345800000000053, 0.00038534700000000116, 0.00035573599999999886, 0.0003553189999999998, 0.00038530599999999846, 0.0003578189999999988, 0.00035613900000000184, 0.0003561950000000001, 0...</msg>
<status status="PASS" starttime="20201030 18:31:28.896" endtime="20201030 18:31:28.899"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.903" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201030 18:31:28.902" endtime="20201030 18:31:28.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.906" level="INFO">VALUE: [0.00036345800000000053, 0.00038534700000000116, 0.00035573599999999886, 0.0003553189999999998, 0.00038530599999999846, 0.0003578189999999988, 0.00035613900000000184, 0.0003561950000000001, 0.0003571249999999998, 0.00035559799999999864, 0.00035700000000000315, 0.00035523599999999836, 0.00035541699999999676, 0.00035523699999999783, 0.00035543000000000033, 0.0003558190000000003, 0.0003571249999999998, 0.0003576389999999999, 0.00038552800000000303, 0.00038534700000000116, 0.00035647199999999657, 0.0003551249999999978, 0.0003561809999999971, 0.0003566950000000041, 0.000356666999999998, 0.00038501400000000296, 0.00038534700000000116, 0.0003566390000000058, 0.0003852360000000041, 0.0003566249999999993, 0.0003577219999999978, 0.0003573050000000022, 0.00035673600000000333, 0.0003551799999999966, 0.00035700000000000315, 0.0003854439999999987, 0.00035615299999999794, 0.0003567500000000029, 0.0003568190000000013, 0.0003569579999999975, 0.0003848469999999937, 0.0003571669999999985, 0.0003571940000000051, 0.00035702799999999535, 0.0003553609999999985, 0.0003575700000000015, 0.0003572630000000035, 0.0003570690000000015, 0.0003564170000000047, 0.00035559699999999916]</msg>
<status status="PASS" starttime="20201030 18:31:28.904" endtime="20201030 18:31:28.907"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.899" endtime="20201030 18:31:28.908"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:28.911" endtime="20201030 18:31:28.931"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.910" endtime="20201030 18:31:28.931"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.909" endtime="20201030 18:31:28.932"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.532" endtime="20201030 18:31:28.932"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.532" endtime="20201030 18:31:28.932"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.940" endtime="20201030 18:31:28.975"></status>
</kw>
<msg timestamp="20201030 18:31:28.976" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:28.939" endtime="20201030 18:31:28.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.978" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:28.977" endtime="20201030 18:31:28.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.979" endtime="20201030 18:31:28.981"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.936" endtime="20201030 18:31:28.981"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.934" endtime="20201030 18:31:28.982"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.988" endtime="20201030 18:31:29.273"></status>
</kw>
<msg timestamp="20201030 18:31:29.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020776819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021148014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:28.986" endtime="20201030 18:31:29.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:29.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020776819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021148014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:29.277" endtime="20201030 18:31:29.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:29.285" endtime="20201030 18:31:29.287"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.984" endtime="20201030 18:31:29.287"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.982" endtime="20201030 18:31:29.288"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:29.291" level="INFO">${RESULT} = [{'diff': 0.00037119500000000125}, {'diff': 0.0003849589999999972}, {'diff': 0.0003560830000000001}, {'diff': 0.00035609699999999966}, {'diff': 0.0003569579999999975}, {'diff': 0.00035734699999999744}...</msg>
<status status="PASS" starttime="20201030 18:31:29.288" endtime="20201030 18:31:29.292"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:29.296" level="INFO">${ACCURACY} = {'diff': [0.00037119500000000125, 0.0003849589999999972, 0.0003560830000000001, 0.00035609699999999966, 0.0003569579999999975, 0.00035734699999999744, 0.0003562080000000002, 0.00035583299999999984, 0....</msg>
<status status="PASS" starttime="20201030 18:31:29.292" endtime="20201030 18:31:29.296"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:29.301" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201030 18:31:29.300" endtime="20201030 18:31:29.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:29.303" level="INFO">VALUE: [0.00037119500000000125, 0.0003849589999999972, 0.0003560830000000001, 0.00035609699999999966, 0.0003569579999999975, 0.00035734699999999744, 0.0003562080000000002, 0.00035583299999999984, 0.00035688799999999965, 0.00035677799999999857, 0.00035584800000000236, 0.0003556950000000031, 0.00038491599999999904, 0.0003556110000000022, 0.0003849169999999985, 0.0003567080000000007, 0.0003562920000000011, 0.00035704200000000186, 0.00035641700000000123, 0.00035702699999999934, 0.00035700000000000315, 0.00035705599999999796, 0.00035619400000000065, 0.00035747200000000104, 0.0003568889999999991, 0.0003850420000000021, 0.00035626400000000197, 0.0003851659999999993, 0.00035673600000000333, 0.0003561249999999988, 0.00035593099999999683, 0.00035516700000000345, 0.000385207999999998, 0.0003569999999999962, 0.0003566249999999993, 0.0003572359999999969, 0.0003557219999999958, 0.0003566660000000055, 0.0003846519999999992, 0.0003557359999999954, 0.00038506899999999483, 0.0003846949999999974, 0.00035726400000000297, 0.00035640300000000513, 0.0003849589999999972, 0.00035620799999999675, 0.00035647199999999657, 0.0003848330000000011, 0.00035511099999999823, 0.00035654200000000136]</msg>
<status status="PASS" starttime="20201030 18:31:29.302" endtime="20201030 18:31:29.305"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.297" endtime="20201030 18:31:29.306"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:29.309" endtime="20201030 18:31:29.329"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.308" endtime="20201030 18:31:29.329"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.307" endtime="20201030 18:31:29.330"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.933" endtime="20201030 18:31:29.330"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.932" endtime="20201030 18:31:29.330"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:29.339" endtime="20201030 18:31:29.377"></status>
</kw>
<msg timestamp="20201030 18:31:29.377" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:29.337" endtime="20201030 18:31:29.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:29.380" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:29.378" endtime="20201030 18:31:29.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:29.381" endtime="20201030 18:31:29.382"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.335" endtime="20201030 18:31:29.383"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.333" endtime="20201030 18:31:29.383"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:29.390" endtime="20201030 18:31:29.677"></status>
</kw>
<msg timestamp="20201030 18:31:29.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024592139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024957028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:29.388" endtime="20201030 18:31:29.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:29.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024592139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024957028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:29.681" endtime="20201030 18:31:29.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:29.689" endtime="20201030 18:31:29.690"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.385" endtime="20201030 18:31:29.691"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.384" endtime="20201030 18:31:29.692"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:29.695" level="INFO">${RESULT} = [{'diff': 0.0003648890000000002}, {'diff': 0.00035651399999999875}, {'diff': 0.00035523599999999836}, {'diff': 0.0003570279999999988}, {'diff': 0.0003575419999999989}, {'diff': 0.00038530500000000245}...</msg>
<status status="PASS" starttime="20201030 18:31:29.692" endtime="20201030 18:31:29.696"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:29.699" level="INFO">${ACCURACY} = {'diff': [0.0003648890000000002, 0.00035651399999999875, 0.00035523599999999836, 0.0003570279999999988, 0.0003575419999999989, 0.00038530500000000245, 0.00035761100000000073, 0.0003575130000000003, 0....</msg>
<status status="PASS" starttime="20201030 18:31:29.696" endtime="20201030 18:31:29.699"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:29.704" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201030 18:31:29.703" endtime="20201030 18:31:29.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:29.706" level="INFO">VALUE: [0.0003648890000000002, 0.00035651399999999875, 0.00035523599999999836, 0.0003570279999999988, 0.0003575419999999989, 0.00038530500000000245, 0.00035761100000000073, 0.0003575130000000003, 0.0003569860000000001, 0.0003562500000000024, 0.00035642999999999786, 0.000356167000000001, 0.0003556800000000006, 0.00035644500000000037, 0.0003852779999999993, 0.00038506900000000177, 0.0003557219999999993, 0.00035630499999999773, 0.00035737500000000005, 0.00038487500000000674, 0.0003559730000000025, 0.00035715299999999894, 0.00035527800000000054, 0.00038506900000000177, 0.000357457999999998, 0.00035515299999999694, 0.0003561939999999972, 0.0003564999999999957, 0.0003569999999999962, 0.00035741699999999876, 0.0003847780000000023, 0.0003575140000000032, 0.0003551940000000031, 0.0003556249999999983, 0.00035523600000000183, 0.0003568889999999991, 0.0003570830000000011, 0.00038488899999999937, 0.00035743099999999833, 0.00035677800000000204, 0.00038488899999999937, 0.0003559579999999965, 0.00035709700000000066, 0.0003566809999999976, 0.00035755500000000245, 0.0003550280000000003, 0.00035776399999999653, 0.00035693099999999783, 0.0003562920000000011, 0.00035723600000000383]</msg>
<status status="PASS" starttime="20201030 18:31:29.705" endtime="20201030 18:31:29.707"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.700" endtime="20201030 18:31:29.708"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:29.711" endtime="20201030 18:31:29.731"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.710" endtime="20201030 18:31:29.731"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.708" endtime="20201030 18:31:29.732"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.331" endtime="20201030 18:31:29.732"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.330" endtime="20201030 18:31:29.732"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:29.740" endtime="20201030 18:31:29.783"></status>
</kw>
<msg timestamp="20201030 18:31:29.783" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:29.739" endtime="20201030 18:31:29.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:29.786" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:29.784" endtime="20201030 18:31:29.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:29.787" endtime="20201030 18:31:29.788"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.736" endtime="20201030 18:31:29.789"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.734" endtime="20201030 18:31:29.789"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:29.796" endtime="20201030 18:31:30.081"></status>
</kw>
<msg timestamp="20201030 18:31:30.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024656778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025041972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:29.794" endtime="20201030 18:31:30.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024656778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025041972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:30.085" endtime="20201030 18:31:30.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.093" endtime="20201030 18:31:30.095"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.792" endtime="20201030 18:31:30.096"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.790" endtime="20201030 18:31:30.096"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:30.100" level="INFO">${RESULT} = [{'diff': 0.0003851939999999984}, {'diff': 0.0003573050000000022}, {'diff': 0.0003573190000000018}, {'diff': 0.0003566530000000019}, {'diff': 0.00035609699999999966}, {'diff': 0.0003567220000000003}, ...</msg>
<status status="PASS" starttime="20201030 18:31:30.097" endtime="20201030 18:31:30.100"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:30.104" level="INFO">${ACCURACY} = {'diff': [0.0003851939999999984, 0.0003573050000000022, 0.0003573190000000018, 0.0003566530000000019, 0.00035609699999999966, 0.0003567220000000003, 0.00035520900000000216, 0.0003571530000000024, 0.00...</msg>
<status status="PASS" starttime="20201030 18:31:30.101" endtime="20201030 18:31:30.104"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.108" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201030 18:31:30.107" endtime="20201030 18:31:30.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.111" level="INFO">VALUE: [0.0003851939999999984, 0.0003573050000000022, 0.0003573190000000018, 0.0003566530000000019, 0.00035609699999999966, 0.0003567220000000003, 0.00035520900000000216, 0.0003571530000000024, 0.00035540300000000066, 0.0003851529999999992, 0.0003852360000000006, 0.0003849160000000025, 0.000385013, 0.00035706999999999753, 0.0003559999999999987, 0.00035513900000000084, 0.0003571950000000011, 0.00038508300000000134, 0.0003576799999999991, 0.00035577800000000104, 0.0003567500000000029, 0.00035598700000000205, 0.0003551520000000044, 0.0003561389999999984, 0.0003562219999999963, 0.00035742999999999886, 0.00035679100000000213, 0.00035505599999999943, 0.0003573480000000004, 0.0003557080000000032, 0.0003847230000000035, 0.0003553609999999985, 0.00035588900000000506, 0.0003575969999999942, 0.0003848749999999998, 0.000355584000000006, 0.00035509699999999866, 0.00038479099999999544, 0.00035677700000000256, 0.00038512500000000005, 0.00035595800000000344, 0.0003567219999999968, 0.00035505599999999943, 0.0003557500000000019, 0.0003574029999999992, 0.00035565299999999744, 0.00035604200000000086, 0.000355860999999999, 0.00035543099999999633, 0.00035677800000000204]</msg>
<status status="PASS" starttime="20201030 18:31:30.109" endtime="20201030 18:31:30.112"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.105" endtime="20201030 18:31:30.113"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:30.116" endtime="20201030 18:31:30.136"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.115" endtime="20201030 18:31:30.136"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.114" endtime="20201030 18:31:30.136"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.733" endtime="20201030 18:31:30.137"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.732" endtime="20201030 18:31:30.137"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.145" endtime="20201030 18:31:30.180"></status>
</kw>
<msg timestamp="20201030 18:31:30.181" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:30.144" endtime="20201030 18:31:30.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.183" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:30.182" endtime="20201030 18:31:30.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.184" endtime="20201030 18:31:30.186"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.141" endtime="20201030 18:31:30.186"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.139" endtime="20201030 18:31:30.187"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.193" endtime="20201030 18:31:30.495"></status>
</kw>
<msg timestamp="20201030 18:31:30.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021611847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021968306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:30.192" endtime="20201030 18:31:30.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021611847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021968306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:30.504" endtime="20201030 18:31:30.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.517" endtime="20201030 18:31:30.519"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.189" endtime="20201030 18:31:30.519"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.187" endtime="20201030 18:31:30.520"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:30.524" level="INFO">${RESULT} = [{'diff': 0.00035645899999999994}, {'diff': 0.00035587499999999855}, {'diff': 0.00035756999999999803}, {'diff': 0.00038554199999999914}, {'diff': 0.00035708400000000057}, {'diff': 0.000355694999999999...</msg>
<status status="PASS" starttime="20201030 18:31:30.520" endtime="20201030 18:31:30.524"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:30.528" level="INFO">${ACCURACY} = {'diff': [0.00035645899999999994, 0.00035587499999999855, 0.00035756999999999803, 0.00038554199999999914, 0.00035708400000000057, 0.0003556949999999996, 0.00035573600000000233, 0.00038520900000000094,...</msg>
<status status="PASS" starttime="20201030 18:31:30.525" endtime="20201030 18:31:30.529"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.533" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201030 18:31:30.532" endtime="20201030 18:31:30.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.535" level="INFO">VALUE: [0.00035645899999999994, 0.00035587499999999855, 0.00035756999999999803, 0.00038554199999999914, 0.00035708400000000057, 0.0003556949999999996, 0.00035573600000000233, 0.00038520900000000094, 0.00035600000000000215, 0.0003563889999999986, 0.0003563329999999969, 0.0003560409999999979, 0.00035673599999999986, 0.0003562639999999985, 0.00035559699999999916, 0.0003558469999999994, 0.0003850139999999995, 0.0003564310000000008, 0.00038520800000000147, 0.0003553050000000002, 0.0003568050000000017, 0.0003575419999999989, 0.0003575419999999989, 0.00035611099999999923, 0.00035581999999999975, 0.0003850550000000022, 0.0003573889999999996, 0.00035637499999999905, 0.00035726400000000297, 0.00035561100000000567, 0.00035615199999999847, 0.0003566389999999989, 0.00035587499999999855, 0.0003853060000000019, 0.0003555549999999935, 0.00035727800000000254, 0.0003553469999999989, 0.00038516699999999876, 0.0003562920000000011, 0.0003560830000000001, 0.00035565199999999797, 0.0003572219999999973, 0.00038501400000000296, 0.00035734799999999345, 0.0003850550000000022, 0.0003576389999999999, 0.00035516700000000345, 0.00038525000000000365, 0.000355860999999999, 0.0003562219999999963]</msg>
<status status="PASS" starttime="20201030 18:31:30.534" endtime="20201030 18:31:30.536"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.529" endtime="20201030 18:31:30.537"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:30.540" endtime="20201030 18:31:30.559"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.539" endtime="20201030 18:31:30.560"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.537" endtime="20201030 18:31:30.560"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.138" endtime="20201030 18:31:30.561"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.137" endtime="20201030 18:31:30.561"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.569" endtime="20201030 18:31:30.608"></status>
</kw>
<msg timestamp="20201030 18:31:30.608" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:30.568" endtime="20201030 18:31:30.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.611" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:30.609" endtime="20201030 18:31:30.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.612" endtime="20201030 18:31:30.614"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.565" endtime="20201030 18:31:30.614"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.563" endtime="20201030 18:31:30.615"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.621" endtime="20201030 18:31:30.908"></status>
</kw>
<msg timestamp="20201030 18:31:30.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024728333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025096639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:30.619" endtime="20201030 18:31:30.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024728333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025096639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:30.912" endtime="20201030 18:31:30.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.920" endtime="20201030 18:31:30.922"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.617" endtime="20201030 18:31:30.922"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.615" endtime="20201030 18:31:30.923"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:30.927" level="INFO">${RESULT} = [{'diff': 0.0003683059999999988}, {'diff': 0.0003562639999999985}, {'diff': 0.000356763999999999}, {'diff': 0.00035627800000000154}, {'diff': 0.0003562500000000024}, {'diff': 0.00038486100000000023}, ...</msg>
<status status="PASS" starttime="20201030 18:31:30.924" endtime="20201030 18:31:30.927"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:30.931" level="INFO">${ACCURACY} = {'diff': [0.0003683059999999988, 0.0003562639999999985, 0.000356763999999999, 0.00035627800000000154, 0.0003562500000000024, 0.00038486100000000023, 0.00035747299999999704, 0.00035624999999999893, 0.0...</msg>
<status status="PASS" starttime="20201030 18:31:30.928" endtime="20201030 18:31:30.931"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.935" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201030 18:31:30.934" endtime="20201030 18:31:30.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.937" level="INFO">VALUE: [0.0003683059999999988, 0.0003562639999999985, 0.000356763999999999, 0.00035627800000000154, 0.0003562500000000024, 0.00038486100000000023, 0.00035747299999999704, 0.00035624999999999893, 0.0003564310000000008, 0.00038543100000000205, 0.0003565280000000018, 0.00038484700000000066, 0.00035551300000000174, 0.00035673599999999986, 0.00038488899999999937, 0.0003854590000000012, 0.00035659700000000016, 0.00035755599999999846, 0.0003558060000000002, 0.00038512500000000005, 0.00035748599999999714, 0.00035752799999999585, 0.0003567909999999952, 0.0003563469999999999, 0.00035755600000000193, 0.00035672300000000323, 0.0003570419999999949, 0.00038512500000000005, 0.0003550140000000007, 0.000355666999999997, 0.00035627800000000154, 0.00035744500000000484, 0.0003550689999999995, 0.00035726400000000297, 0.0003551389999999974, 0.0003552080000000027, 0.0003567500000000029, 0.0003850269999999961, 0.0003565980000000066, 0.0003557219999999958, 0.0003576940000000056, 0.0003851949999999979, 0.00035644400000000437, 0.00035748599999999714, 0.00035669499999999715, 0.00035652799999999485, 0.000357054999999995, 0.0003551389999999974, 0.0003556389999999979, 0.00035526400000000097]</msg>
<status status="PASS" starttime="20201030 18:31:30.936" endtime="20201030 18:31:30.938"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.932" endtime="20201030 18:31:30.939"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:30.942" endtime="20201030 18:31:30.962"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.941" endtime="20201030 18:31:30.962"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.940" endtime="20201030 18:31:30.963"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.562" endtime="20201030 18:31:30.963"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.561" endtime="20201030 18:31:30.963"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.972" endtime="20201030 18:31:31.010"></status>
</kw>
<msg timestamp="20201030 18:31:31.011" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:30.970" endtime="20201030 18:31:31.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.013" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:31.012" endtime="20201030 18:31:31.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:31.014" endtime="20201030 18:31:31.016"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.968" endtime="20201030 18:31:31.016"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.965" endtime="20201030 18:31:31.017"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:31.023" endtime="20201030 18:31:31.308"></status>
</kw>
<msg timestamp="20201030 18:31:31.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024336625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024702833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:31.022" endtime="20201030 18:31:31.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024336625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024702833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:31.312" endtime="20201030 18:31:31.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:31.320" endtime="20201030 18:31:31.322"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.019" endtime="20201030 18:31:31.323"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.017" endtime="20201030 18:31:31.323"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:31.327" level="INFO">${RESULT} = [{'diff': 0.0003662079999999998}, {'diff': 0.0003563190000000008}, {'diff': 0.0003576799999999991}, {'diff': 0.0003575829999999981}, {'diff': 0.0003553889999999976}, {'diff': 0.0003849999999999999}, {...</msg>
<status status="PASS" starttime="20201030 18:31:31.324" endtime="20201030 18:31:31.327"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:31.331" level="INFO">${ACCURACY} = {'diff': [0.0003662079999999998, 0.0003563190000000008, 0.0003576799999999991, 0.0003575829999999981, 0.0003553889999999976, 0.0003849999999999999, 0.0003552089999999987, 0.0003554999999999982, 0.0003...</msg>
<status status="PASS" starttime="20201030 18:31:31.328" endtime="20201030 18:31:31.331"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.335" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201030 18:31:31.334" endtime="20201030 18:31:31.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.337" level="INFO">VALUE: [0.0003662079999999998, 0.0003563190000000008, 0.0003576799999999991, 0.0003575829999999981, 0.0003553889999999976, 0.0003849999999999999, 0.0003552089999999987, 0.0003554999999999982, 0.00035695800000000097, 0.0003574310000000018, 0.0003849859999999969, 0.000385304999999999, 0.00035574999999999843, 0.00035740300000000266, 0.00038522199999999757, 0.0003575000000000002, 0.00038548600000000086, 0.00035545799999999947, 0.00035593099999999683, 0.00035682000000000075, 0.00035650000000000265, 0.000357569000000002, 0.0003853200000000015, 0.00035644399999999743, 0.0003576380000000004, 0.00035655500000000145, 0.000357181000000005, 0.0003571950000000046, 0.00035761100000000073, 0.00035711100000000023, 0.0003568060000000012, 0.0003554860000000021, 0.0003564860000000031, 0.0003553059999999997, 0.0003573889999999996, 0.0003564029999999982, 0.0003553339999999988, 0.0003851660000000062, 0.00035737500000000005, 0.00035581999999999975, 0.00035691699999999826, 0.00035687499999999955, 0.00035611099999999923, 0.0003578060000000022, 0.00035672300000000323, 0.00035591699999999726, 0.00035659799999999964, 0.00035508399999999857, 0.00035683300000000084, 0.0003850550000000022]</msg>
<status status="PASS" starttime="20201030 18:31:31.336" endtime="20201030 18:31:31.339"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.332" endtime="20201030 18:31:31.340"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:31.343" endtime="20201030 18:31:31.363"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.342" endtime="20201030 18:31:31.364"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.340" endtime="20201030 18:31:31.365"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.964" endtime="20201030 18:31:31.365"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.963" endtime="20201030 18:31:31.365"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:31.376" endtime="20201030 18:31:31.411"></status>
</kw>
<msg timestamp="20201030 18:31:31.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:31.375" endtime="20201030 18:31:31.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:31.413" endtime="20201030 18:31:31.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:31.415" endtime="20201030 18:31:31.417"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.372" endtime="20201030 18:31:31.417"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.369" endtime="20201030 18:31:31.418"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:31.424" endtime="20201030 18:31:31.709"></status>
</kw>
<msg timestamp="20201030 18:31:31.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025497222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025870681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:31.423" endtime="20201030 18:31:31.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025497222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025870681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:31.713" endtime="20201030 18:31:31.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:31.721" endtime="20201030 18:31:31.723"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.420" endtime="20201030 18:31:31.724"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.418" endtime="20201030 18:31:31.724"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:31.728" level="INFO">${RESULT} = [{'diff': 0.0003734589999999996}, {'diff': 0.0003572769999999996}, {'diff': 0.00035609699999999966}, {'diff': 0.00035718100000000155}, {'diff': 0.0003567219999999968}, {'diff': 0.0003552080000000027},...</msg>
<status status="PASS" starttime="20201030 18:31:31.725" endtime="20201030 18:31:31.728"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:31.733" level="INFO">${ACCURACY} = {'diff': [0.0003734589999999996, 0.0003572769999999996, 0.00035609699999999966, 0.00035718100000000155, 0.0003567219999999968, 0.0003552080000000027, 0.0003561249999999988, 0.00035643000000000133, 0.0...</msg>
<status status="PASS" starttime="20201030 18:31:31.729" endtime="20201030 18:31:31.733"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.737" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201030 18:31:31.736" endtime="20201030 18:31:31.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.739" level="INFO">VALUE: [0.0003734589999999996, 0.0003572769999999996, 0.00035609699999999966, 0.00035718100000000155, 0.0003567219999999968, 0.0003552080000000027, 0.0003561249999999988, 0.00035643000000000133, 0.0003571669999999985, 0.0003851110000000005, 0.00035591699999999726, 0.0003553339999999988, 0.00038486099999999676, 0.0003557920000000006, 0.00038480599999999796, 0.00035652699999999884, 0.00035659700000000016, 0.00035677800000000204, 0.00035533299999999934, 0.0003565140000000022, 0.0003575140000000032, 0.0003561390000000053, 0.0003550139999999938, 0.00038540199999999997, 0.0003569730000000035, 0.00035626400000000197, 0.0003560690000000005, 0.00035661099999999973, 0.0003852919999999954, 0.0003550689999999995, 0.00035715299999999894, 0.0003571389999999994, 0.0003556249999999983, 0.00035759800000000064, 0.0003565410000000019, 0.00035697199999999707, 0.00035677800000000204, 0.0003566249999999993, 0.00035513800000000484, 0.00035661099999999973, 0.0003560140000000017, 0.0003567359999999964, 0.00035715299999999894, 0.00035608399999999957, 0.0003571249999999998, 0.0003558190000000003, 0.00035666700000000495, 0.00035523600000000183, 0.0003571249999999998, 0.00035655500000000145]</msg>
<status status="PASS" starttime="20201030 18:31:31.738" endtime="20201030 18:31:31.744"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.734" endtime="20201030 18:31:31.744"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:31.748" endtime="20201030 18:31:31.768"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.747" endtime="20201030 18:31:31.768"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.745" endtime="20201030 18:31:31.768"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.367" endtime="20201030 18:31:31.769"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.366" endtime="20201030 18:31:31.769"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:31.777" endtime="20201030 18:31:31.814"></status>
</kw>
<msg timestamp="20201030 18:31:31.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:31.776" endtime="20201030 18:31:31.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.817" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:31.816" endtime="20201030 18:31:31.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:31.818" endtime="20201030 18:31:31.820"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.773" endtime="20201030 18:31:31.820"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.771" endtime="20201030 18:31:31.820"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:31.827" endtime="20201030 18:31:32.113"></status>
</kw>
<msg timestamp="20201030 18:31:32.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022379708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022745194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:31.825" endtime="20201030 18:31:32.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022379708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022745194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:32.118" endtime="20201030 18:31:32.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.126" endtime="20201030 18:31:32.127"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.823" endtime="20201030 18:31:32.128"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.821" endtime="20201030 18:31:32.128"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:32.132" level="INFO">${RESULT} = [{'diff': 0.0003654859999999982}, {'diff': 0.00035665299999999844}, {'diff': 0.00035654200000000136}, {'diff': 0.00035597199999999954}, {'diff': 0.0003575280000000028}, {'diff': 0.00035537499999999805...</msg>
<status status="PASS" starttime="20201030 18:31:32.129" endtime="20201030 18:31:32.132"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:32.136" level="INFO">${ACCURACY} = {'diff': [0.0003654859999999982, 0.00035665299999999844, 0.00035654200000000136, 0.00035597199999999954, 0.0003575280000000028, 0.00035537499999999805, 0.0003575419999999989, 0.00035586100000000245, 0...</msg>
<status status="PASS" starttime="20201030 18:31:32.133" endtime="20201030 18:31:32.136"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.140" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201030 18:31:32.139" endtime="20201030 18:31:32.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.143" level="INFO">VALUE: [0.0003654859999999982, 0.00035665299999999844, 0.00035654200000000136, 0.00035597199999999954, 0.0003575280000000028, 0.00035537499999999805, 0.0003575419999999989, 0.00035586100000000245, 0.0003853200000000015, 0.00038522200000000104, 0.00035601399999999825, 0.00035563900000000134, 0.0003850420000000021, 0.0003574029999999992, 0.00035558399999999907, 0.00035643000000000133, 0.00038516700000000223, 0.00035601399999999825, 0.0003850840000000008, 0.0003561809999999971, 0.0003575000000000002, 0.0003852230000000005, 0.0003566670000000015, 0.00035652699999999884, 0.0003849860000000038, 0.00035672200000000376, 0.0003566379999999994, 0.00035650000000000265, 0.00035665299999999844, 0.0003553469999999989, 0.00035540300000000413, 0.0003554720000000025, 0.00035537499999999805, 0.0003551379999999979, 0.0003853469999999942, 0.0003566939999999977, 0.0003564029999999982, 0.00035727800000000254, 0.0003560269999999949, 0.00038497200000000426, 0.00038495799999999775, 0.0003551249999999978, 0.00035702799999999535, 0.00035743099999999833, 0.00035632000000000025, 0.00035698599999999664, 0.00035619499999999665, 0.0003557500000000019, 0.00035765299999999944, 0.00035609699999999966]</msg>
<status status="PASS" starttime="20201030 18:31:32.142" endtime="20201030 18:31:32.144"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.137" endtime="20201030 18:31:32.144"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:32.148" endtime="20201030 18:31:32.167"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.146" endtime="20201030 18:31:32.168"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.145" endtime="20201030 18:31:32.168"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.770" endtime="20201030 18:31:32.168"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.769" endtime="20201030 18:31:32.169"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.177" endtime="20201030 18:31:32.217"></status>
</kw>
<msg timestamp="20201030 18:31:32.218" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:32.176" endtime="20201030 18:31:32.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.220" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:32.219" endtime="20201030 18:31:32.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.221" endtime="20201030 18:31:32.223"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.173" endtime="20201030 18:31:32.224"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.171" endtime="20201030 18:31:32.224"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.230" endtime="20201030 18:31:32.516"></status>
</kw>
<msg timestamp="20201030 18:31:32.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024646583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025025694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:32.229" endtime="20201030 18:31:32.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024646583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025025694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:32.520" endtime="20201030 18:31:32.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.528" endtime="20201030 18:31:32.530"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.226" endtime="20201030 18:31:32.530"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.225" endtime="20201030 18:31:32.531"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:32.535" level="INFO">${RESULT} = [{'diff': 0.0003791110000000014}, {'diff': 0.00035524999999999793}, {'diff': 0.00035573600000000233}, {'diff': 0.0003553479999999984}, {'diff': 0.0003556949999999996}, {'diff': 0.0003573479999999969},...</msg>
<status status="PASS" starttime="20201030 18:31:32.531" endtime="20201030 18:31:32.535"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:32.538" level="INFO">${ACCURACY} = {'diff': [0.0003791110000000014, 0.00035524999999999793, 0.00035573600000000233, 0.0003553479999999984, 0.0003556949999999996, 0.0003573479999999969, 0.0003851389999999996, 0.00035536100000000195, 0.0...</msg>
<status status="PASS" starttime="20201030 18:31:32.535" endtime="20201030 18:31:32.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.543" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201030 18:31:32.542" endtime="20201030 18:31:32.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.545" level="INFO">VALUE: [0.0003791110000000014, 0.00035524999999999793, 0.00035573600000000233, 0.0003553479999999984, 0.0003556949999999996, 0.0003573479999999969, 0.0003851389999999996, 0.00035536100000000195, 0.00035772300000000076, 0.00038534700000000116, 0.00035765299999999944, 0.0003854590000000012, 0.0003558890000000016, 0.0003554029999999972, 0.0003569029999999987, 0.00035727799999999907, 0.00035655600000000093, 0.0003554999999999982, 0.000357666999999999, 0.0003557920000000006, 0.00035673600000000333, 0.00035627800000000154, 0.00035576400000000147, 0.000356861, 0.00038551400000000347, 0.00035605500000000095, 0.0003571389999999994, 0.00038525000000000365, 0.0003850699999999943, 0.0003574449999999979, 0.00035732000000000125, 0.00035694500000000434, 0.0003553189999999998, 0.00035715299999999894, 0.00035626400000000197, 0.00038512500000000005, 0.0003565139999999953, 0.00038561099999999404, 0.00035677800000000204, 0.0003852919999999954, 0.00035741699999999876, 0.00035624999999999546, 0.000355569, 0.0003564170000000047, 0.0003555139999999943, 0.00038541700000000595, 0.00035520799999999575, 0.0003574159999999993, 0.0003559449999999964, 0.0003556810000000035]</msg>
<status status="PASS" starttime="20201030 18:31:32.544" endtime="20201030 18:31:32.547"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.539" endtime="20201030 18:31:32.547"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:32.551" endtime="20201030 18:31:32.570"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.550" endtime="20201030 18:31:32.571"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.548" endtime="20201030 18:31:32.571"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.169" endtime="20201030 18:31:32.572"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.169" endtime="20201030 18:31:32.572"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.580" endtime="20201030 18:31:32.617"></status>
</kw>
<msg timestamp="20201030 18:31:32.618" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:32.579" endtime="20201030 18:31:32.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.620" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:32.619" endtime="20201030 18:31:32.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.621" endtime="20201030 18:31:32.623"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.576" endtime="20201030 18:31:32.624"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.574" endtime="20201030 18:31:32.624"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.630" endtime="20201030 18:31:32.915"></status>
</kw>
<msg timestamp="20201030 18:31:32.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023367792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023744861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:32.629" endtime="20201030 18:31:32.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023367792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023744861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:32.920" endtime="20201030 18:31:32.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.928" endtime="20201030 18:31:32.929"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.626" endtime="20201030 18:31:32.930"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.625" endtime="20201030 18:31:32.930"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:32.934" level="INFO">${RESULT} = [{'diff': 0.0003770690000000007}, {'diff': 0.0003850970000000009}, {'diff': 0.000357666999999999}, {'diff': 0.0003565280000000018}, {'diff': 0.0003567220000000003}, {'diff': 0.00038508399999999735}, {...</msg>
<status status="PASS" starttime="20201030 18:31:32.931" endtime="20201030 18:31:32.934"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:32.939" level="INFO">${ACCURACY} = {'diff': [0.0003770690000000007, 0.0003850970000000009, 0.000357666999999999, 0.0003565280000000018, 0.0003567220000000003, 0.00038508399999999735, 0.0003573470000000009, 0.00038509699999999744, 0.000...</msg>
<status status="PASS" starttime="20201030 18:31:32.935" endtime="20201030 18:31:32.939"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.943" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201030 18:31:32.942" endtime="20201030 18:31:32.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.946" level="INFO">VALUE: [0.0003770690000000007, 0.0003850970000000009, 0.000357666999999999, 0.0003565280000000018, 0.0003567220000000003, 0.00038508399999999735, 0.0003573470000000009, 0.00038509699999999744, 0.00035692999999999836, 0.00035743099999999833, 0.00035686199999999946, 0.0003852919999999989, 0.0003848749999999998, 0.000384820000000001, 0.00035744500000000137, 0.00035494400000000287, 0.0003568470000000004, 0.00035573599999999886, 0.0003847499999999997, 0.000355763999999998, 0.00038504199999999864, 0.0003554860000000021, 0.0003561249999999988, 0.0003851529999999992, 0.0003575700000000015, 0.00038520899999999747, 0.0003573060000000017, 0.00035677800000000204, 0.00035720799999999775, 0.0003558339999999993, 0.0003852220000000045, 0.0003571939999999982, 0.00035593099999999683, 0.0003854030000000064, 0.00035691699999999826, 0.00035561099999999873, 0.0003551389999999974, 0.000356457999999997, 0.00035666599999999854, 0.00035629100000000163, 0.000385416999999999, 0.00038540299999999944, 0.00035729199999999517, 0.0003855409999999962, 0.00035659700000000016, 0.00035687499999999955, 0.00035515299999999694, 0.00035654200000000136, 0.0003568610000000069, 0.00035527700000000106]</msg>
<status status="PASS" starttime="20201030 18:31:32.944" endtime="20201030 18:31:32.947"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.940" endtime="20201030 18:31:32.947"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:32.951" endtime="20201030 18:31:32.970"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.949" endtime="20201030 18:31:32.971"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.948" endtime="20201030 18:31:32.971"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.573" endtime="20201030 18:31:32.971"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.572" endtime="20201030 18:31:32.971"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.980" endtime="20201030 18:31:33.014"></status>
</kw>
<msg timestamp="20201030 18:31:33.015" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:32.978" endtime="20201030 18:31:33.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:33.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:33.016" endtime="20201030 18:31:33.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:33.018" endtime="20201030 18:31:33.020"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.976" endtime="20201030 18:31:33.020"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.974" endtime="20201030 18:31:33.020"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:33.027" endtime="20201030 18:31:33.313"></status>
</kw>
<msg timestamp="20201030 18:31:33.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020632028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020992931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:33.025" endtime="20201030 18:31:33.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:33.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020632028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020992931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:33.317" endtime="20201030 18:31:33.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:33.325" endtime="20201030 18:31:33.327"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.023" endtime="20201030 18:31:33.328"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.021" endtime="20201030 18:31:33.328"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:33.332" level="INFO">${RESULT} = [{'diff': 0.0003609029999999992}, {'diff': 0.00038538900000000334}, {'diff': 0.00038567999999999936}, {'diff': 0.0003574440000000019}, {'diff': 0.0003571800000000021}, {'diff': 0.0003565280000000018},...</msg>
<status status="PASS" starttime="20201030 18:31:33.329" endtime="20201030 18:31:33.332"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:33.336" level="INFO">${ACCURACY} = {'diff': [0.0003609029999999992, 0.00038538900000000334, 0.00038567999999999936, 0.0003574440000000019, 0.0003571800000000021, 0.0003565280000000018, 0.0003851800000000023, 0.00038552799999999957, 0.0...</msg>
<status status="PASS" starttime="20201030 18:31:33.333" endtime="20201030 18:31:33.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:33.340" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201030 18:31:33.339" endtime="20201030 18:31:33.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:33.343" level="INFO">VALUE: [0.0003609029999999992, 0.00038538900000000334, 0.00038567999999999936, 0.0003574440000000019, 0.0003571800000000021, 0.0003565280000000018, 0.0003851800000000023, 0.00038552799999999957, 0.0003578190000000023, 0.0003557219999999993, 0.0003563889999999986, 0.00035745900000000094, 0.0003564019999999987, 0.00035680499999999823, 0.0003573610000000005, 0.00035645800000000047, 0.00035659700000000016, 0.00038527699999999984, 0.00035723600000000036, 0.000355860999999999, 0.00038536099999999726, 0.00035633300000000034, 0.00035607, 0.0003852919999999989, 0.00035627800000000154, 0.0003566249999999993, 0.0003575279999999993, 0.0003852779999999993, 0.00035708400000000057, 0.0003555139999999943, 0.0003559029999999977, 0.0003557359999999954, 0.0003570140000000027, 0.00035715199999999947, 0.0003853339999999941, 0.0003560139999999948, 0.0003559999999999952, 0.00035629199999999417, 0.00035734799999999345, 0.00035608399999999957, 0.00038497200000000426, 0.00038505599999999474, 0.00035650000000000265, 0.00035516599999999704, 0.0003572500000000034, 0.0003849859999999969, 0.00038518099999999833, 0.00035765299999999944, 0.00035644500000000384, 0.0003560139999999948]</msg>
<status status="PASS" starttime="20201030 18:31:33.341" endtime="20201030 18:31:33.343"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.337" endtime="20201030 18:31:33.344"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:33.348" endtime="20201030 18:31:33.367"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.346" endtime="20201030 18:31:33.368"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.345" endtime="20201030 18:31:33.368"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.972" endtime="20201030 18:31:33.368"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.972" endtime="20201030 18:31:33.368"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:33.377" endtime="20201030 18:31:33.416"></status>
</kw>
<msg timestamp="20201030 18:31:33.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:33.375" endtime="20201030 18:31:33.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:33.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:33.417" endtime="20201030 18:31:33.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:33.420" endtime="20201030 18:31:33.421"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.373" endtime="20201030 18:31:33.422"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.371" endtime="20201030 18:31:33.422"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:33.429" endtime="20201030 18:31:33.714"></status>
</kw>
<msg timestamp="20201030 18:31:33.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025725792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026109222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:33.427" endtime="20201030 18:31:33.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:33.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025725792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026109222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:33.718" endtime="20201030 18:31:33.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:33.727" endtime="20201030 18:31:33.728"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.425" endtime="20201030 18:31:33.729"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.423" endtime="20201030 18:31:33.730"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:33.733" level="INFO">${RESULT} = [{'diff': 0.0003834300000000006}, {'diff': 0.0003566670000000015}, {'diff': 0.00038505499999999873}, {'diff': 0.00035755600000000193}, {'diff': 0.00035695800000000097}, {'diff': 0.00035551399999999775...</msg>
<status status="PASS" starttime="20201030 18:31:33.730" endtime="20201030 18:31:33.734"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:33.737" level="INFO">${ACCURACY} = {'diff': [0.0003834300000000006, 0.0003566670000000015, 0.00038505499999999873, 0.00035755600000000193, 0.00035695800000000097, 0.00035551399999999775, 0.00035542999999999686, 0.00035577800000000104, ...</msg>
<status status="PASS" starttime="20201030 18:31:33.734" endtime="20201030 18:31:33.738"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:33.742" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201030 18:31:33.741" endtime="20201030 18:31:33.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:33.744" level="INFO">VALUE: [0.0003834300000000006, 0.0003566670000000015, 0.00038505499999999873, 0.00035755600000000193, 0.00035695800000000097, 0.00035551399999999775, 0.00035542999999999686, 0.00035577800000000104, 0.0003849720000000008, 0.00035572299999999876, 0.00035740300000000266, 0.0003554590000000024, 0.00035641600000000176, 0.0003850559999999982, 0.0003561950000000036, 0.0003852090000000044, 0.00035534700000000585, 0.0003563609999999995, 0.0003851389999999996, 0.00035544500000000284, 0.0003561669999999975, 0.0003551249999999978, 0.00038475000000000315, 0.0003563889999999986, 0.0003556249999999983, 0.00035674999999999596, 0.0003563060000000007, 0.00035655500000000145, 0.00038518099999999833, 0.00035537499999999805, 0.0003560140000000017, 0.00035520799999999575, 0.00035611099999999923, 0.00035577800000000104, 0.00035611099999999923, 0.0003849299999999986, 0.00035666599999999854, 0.0003558889999999981, 0.0003561950000000036, 0.00035608399999999957, 0.000357569000000002, 0.0003561939999999972, 0.0003565140000000022, 0.0003555140000000012, 0.00035555599999999993, 0.00038512500000000005, 0.0003850130000000035, 0.00035727700000000306, 0.0003564999999999957, 0.0003571389999999994]</msg>
<status status="PASS" starttime="20201030 18:31:33.743" endtime="20201030 18:31:33.746"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.738" endtime="20201030 18:31:33.746"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:33.750" endtime="20201030 18:31:33.769"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.749" endtime="20201030 18:31:33.770"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.747" endtime="20201030 18:31:33.770"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.369" endtime="20201030 18:31:33.771"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.369" endtime="20201030 18:31:33.771"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:33.779" endtime="20201030 18:31:33.814"></status>
</kw>
<msg timestamp="20201030 18:31:33.814" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:33.778" endtime="20201030 18:31:33.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:33.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:33.815" endtime="20201030 18:31:33.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:33.818" endtime="20201030 18:31:33.820"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.775" endtime="20201030 18:31:33.821"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.773" endtime="20201030 18:31:33.822"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:33.829" endtime="20201030 18:31:34.116"></status>
</kw>
<msg timestamp="20201030 18:31:34.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020153583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0205165, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:31:33.828" endtime="20201030 18:31:34.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:34.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020153583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0205165, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:31:34.120" endtime="20201030 18:31:34.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.128" endtime="20201030 18:31:34.129"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.825" endtime="20201030 18:31:34.130"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.823" endtime="20201030 18:31:34.130"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:34.134" level="INFO">${RESULT} = [{'diff': 0.0003629170000000008}, {'diff': 0.00035618100000000055}, {'diff': 0.0003555279999999973}, {'diff': 0.0003854300000000026}, {'diff': 0.00035758400000000107}, {'diff': 0.00035619400000000065}...</msg>
<status status="PASS" starttime="20201030 18:31:34.131" endtime="20201030 18:31:34.135"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:34.139" level="INFO">${ACCURACY} = {'diff': [0.0003629170000000008, 0.00035618100000000055, 0.0003555279999999973, 0.0003854300000000026, 0.00035758400000000107, 0.00035619400000000065, 0.00035541600000000076, 0.00035705599999999796, 0...</msg>
<status status="PASS" starttime="20201030 18:31:34.135" endtime="20201030 18:31:34.140"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:34.144" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201030 18:31:34.143" endtime="20201030 18:31:34.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:34.146" level="INFO">VALUE: [0.0003629170000000008, 0.00035618100000000055, 0.0003555279999999973, 0.0003854300000000026, 0.00035758400000000107, 0.00035619400000000065, 0.00035541600000000076, 0.00035705599999999796, 0.0003559859999999991, 0.0003848330000000011, 0.00035666599999999854, 0.0003575000000000002, 0.0003849720000000008, 0.0003549029999999967, 0.0003852370000000001, 0.00035579100000000113, 0.00035619400000000065, 0.00035536100000000195, 0.0003563060000000007, 0.00035674999999999943, 0.0003552500000000014, 0.0003567769999999991, 0.00035724999999999993, 0.00035715299999999894, 0.00035622299999999926, 0.00035504199999999986, 0.000355860999999999, 0.0003561389999999984, 0.00035704200000000186, 0.00035711100000000023, 0.0003565140000000022, 0.00035623600000000283, 0.0003573470000000009, 0.0003573470000000009, 0.000357457999999998, 0.00035633300000000034, 0.00035693099999999783, 0.00035648599999999614, 0.00038520899999999747, 0.00035518000000000355, 0.00038536100000000073, 0.0003572500000000034, 0.0003558889999999981, 0.00035540300000000413, 0.00035658400000000007, 0.00035691699999999826, 0.00035661099999999973, 0.00035587499999999855, 0.0003850550000000022, 0.00038536100000000073]</msg>
<status status="PASS" starttime="20201030 18:31:34.145" endtime="20201030 18:31:34.147"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.140" endtime="20201030 18:31:34.148"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:34.151" endtime="20201030 18:31:34.171"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.150" endtime="20201030 18:31:34.171"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.149" endtime="20201030 18:31:34.172"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.772" endtime="20201030 18:31:34.172"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.771" endtime="20201030 18:31:34.172"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.181" endtime="20201030 18:31:34.220"></status>
</kw>
<msg timestamp="20201030 18:31:34.220" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:34.179" endtime="20201030 18:31:34.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:34.223" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:34.222" endtime="20201030 18:31:34.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.224" endtime="20201030 18:31:34.226"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.177" endtime="20201030 18:31:34.226"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.175" endtime="20201030 18:31:34.227"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.233" endtime="20201030 18:31:34.520"></status>
</kw>
<msg timestamp="20201030 18:31:34.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020595556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020964069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:34.232" endtime="20201030 18:31:34.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:34.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020595556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020964069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:34.524" endtime="20201030 18:31:34.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.532" endtime="20201030 18:31:34.534"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.229" endtime="20201030 18:31:34.534"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.227" endtime="20201030 18:31:34.535"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:34.539" level="INFO">${RESULT} = [{'diff': 0.0003685129999999974}, {'diff': 0.00035518099999999955}, {'diff': 0.00035674999999999943}, {'diff': 0.0003575830000000016}, {'diff': 0.000357861000000001}, {'diff': 0.0003575409999999994}, ...</msg>
<status status="PASS" starttime="20201030 18:31:34.536" endtime="20201030 18:31:34.539"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:34.543" level="INFO">${ACCURACY} = {'diff': [0.0003685129999999974, 0.00035518099999999955, 0.00035674999999999943, 0.0003575830000000016, 0.000357861000000001, 0.0003575409999999994, 0.0003561800000000011, 0.00035694399999999793, 0.00...</msg>
<status status="PASS" starttime="20201030 18:31:34.540" endtime="20201030 18:31:34.543"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:34.547" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201030 18:31:34.546" endtime="20201030 18:31:34.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:34.549" level="INFO">VALUE: [0.0003685129999999974, 0.00035518099999999955, 0.00035674999999999943, 0.0003575830000000016, 0.000357861000000001, 0.0003575409999999994, 0.0003561800000000011, 0.00035694399999999793, 0.0003552920000000001, 0.0003554439999999999, 0.0003562639999999985, 0.00035702699999999934, 0.0003570830000000011, 0.0003558060000000002, 0.00035522200000000226, 0.00035541700000000023, 0.0003571799999999986, 0.0003851810000000018, 0.0003564999999999992, 0.00038504099999999916, 0.00035524999999999793, 0.0003568470000000004, 0.00035511099999999823, 0.00038498600000000036, 0.00035694399999999793, 0.0003854720000000013, 0.0003553330000000028, 0.0003560280000000013, 0.00035630600000000415, 0.00035537499999999805, 0.0003573889999999996, 0.00035542999999999686, 0.00035702799999999535, 0.0003552920000000001, 0.0003575830000000016, 0.00035632000000000025, 0.0003559730000000025, 0.0003851389999999996, 0.00035677700000000256, 0.00035520900000000216, 0.00038530500000000245, 0.0003558339999999993, 0.0003850560000000017, 0.0003558339999999993, 0.00035591699999999726, 0.00035516700000000345, 0.00035644500000000384, 0.0003553189999999998, 0.00035594399999999693, 0.00035609699999999966]</msg>
<status status="PASS" starttime="20201030 18:31:34.548" endtime="20201030 18:31:34.550"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.543" endtime="20201030 18:31:34.551"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:34.554" endtime="20201030 18:31:34.574"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.553" endtime="20201030 18:31:34.574"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.552" endtime="20201030 18:31:34.575"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.173" endtime="20201030 18:31:34.575"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.173" endtime="20201030 18:31:34.575"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.584" endtime="20201030 18:31:34.622"></status>
</kw>
<msg timestamp="20201030 18:31:34.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:34.582" endtime="20201030 18:31:34.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:34.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:34.624" endtime="20201030 18:31:34.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.626" endtime="20201030 18:31:34.628"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.579" endtime="20201030 18:31:34.628"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.577" endtime="20201030 18:31:34.629"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.635" endtime="20201030 18:31:34.921"></status>
</kw>
<msg timestamp="20201030 18:31:34.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024660861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025040042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:34.634" endtime="20201030 18:31:34.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:34.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024660861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025040042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:34.925" endtime="20201030 18:31:34.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.933" endtime="20201030 18:31:34.935"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.631" endtime="20201030 18:31:34.936"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.629" endtime="20201030 18:31:34.936"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:34.940" level="INFO">${RESULT} = [{'diff': 0.00037918099999999927}, {'diff': 0.00038486100000000023}, {'diff': 0.0003554029999999972}, {'diff': 0.00035674999999999943}, {'diff': 0.00035576400000000147}, {'diff': 0.0003849450000000011...</msg>
<status status="PASS" starttime="20201030 18:31:34.937" endtime="20201030 18:31:34.940"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:34.944" level="INFO">${ACCURACY} = {'diff': [0.00037918099999999927, 0.00038486100000000023, 0.0003554029999999972, 0.00035674999999999943, 0.00035576400000000147, 0.0003849450000000011, 0.0003561119999999987, 0.00035709700000000066, 0...</msg>
<status status="PASS" starttime="20201030 18:31:34.941" endtime="20201030 18:31:34.944"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:34.948" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201030 18:31:34.947" endtime="20201030 18:31:34.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:34.951" level="INFO">VALUE: [0.00037918099999999927, 0.00038486100000000023, 0.0003554029999999972, 0.00035674999999999943, 0.00035576400000000147, 0.0003849450000000011, 0.0003561119999999987, 0.00035709700000000066, 0.00035645899999999994, 0.00035724999999999993, 0.0003567920000000016, 0.0003560140000000017, 0.0003561950000000001, 0.0003554860000000021, 0.00038534800000000063, 0.0003559440000000004, 0.00035508400000000204, 0.00035563900000000134, 0.0003562500000000024, 0.00035643099999999733, 0.0003575700000000015, 0.0003567500000000029, 0.0003576389999999999, 0.00035627800000000154, 0.0003852640000000032, 0.00035591699999999726, 0.00035741699999999876, 0.00038540199999999997, 0.0003551940000000031, 0.0003561249999999988, 0.0003576380000000004, 0.0003561249999999988, 0.0003851519999999997, 0.00038502800000000253, 0.00035594399999999693, 0.0003556249999999983, 0.0003851659999999993, 0.0003575139999999963, 0.00035698599999999664, 0.0003559730000000025, 0.0003551939999999962, 0.00035550000000000165, 0.0003567080000000042, 0.00038534700000000116, 0.00035655600000000093, 0.00035697199999999707, 0.00035587499999999855, 0.0003553189999999998, 0.00035715199999999947, 0.0003850000000000034]</msg>
<status status="PASS" starttime="20201030 18:31:34.949" endtime="20201030 18:31:34.952"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.945" endtime="20201030 18:31:34.953"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:34.956" endtime="20201030 18:31:34.976"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.955" endtime="20201030 18:31:34.976"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.954" endtime="20201030 18:31:34.976"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.576" endtime="20201030 18:31:34.977"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.575" endtime="20201030 18:31:34.977"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.986" endtime="20201030 18:31:35.024"></status>
</kw>
<msg timestamp="20201030 18:31:35.024" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:34.984" endtime="20201030 18:31:35.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.027" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:35.025" endtime="20201030 18:31:35.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.028" endtime="20201030 18:31:35.029"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.981" endtime="20201030 18:31:35.030"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.979" endtime="20201030 18:31:35.030"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.037" endtime="20201030 18:31:35.322"></status>
</kw>
<msg timestamp="20201030 18:31:35.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024635319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024996556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:35.035" endtime="20201030 18:31:35.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024635319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024996556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:35.326" endtime="20201030 18:31:35.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.334" endtime="20201030 18:31:35.336"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.033" endtime="20201030 18:31:35.336"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.031" endtime="20201030 18:31:35.337"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:35.340" level="INFO">${RESULT} = [{'diff': 0.00036123700000000036}, {'diff': 0.0003552500000000014}, {'diff': 0.00035526400000000097}, {'diff': 0.0003561669999999975}, {'diff': 0.00035587499999999855}, {'diff': 0.0003850689999999983}...</msg>
<status status="PASS" starttime="20201030 18:31:35.337" endtime="20201030 18:31:35.341"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:35.345" level="INFO">${ACCURACY} = {'diff': [0.00036123700000000036, 0.0003552500000000014, 0.00035526400000000097, 0.0003561669999999975, 0.00035587499999999855, 0.0003850689999999983, 0.0003551660000000005, 0.0003561800000000011, 0.0...</msg>
<status status="PASS" starttime="20201030 18:31:35.341" endtime="20201030 18:31:35.345"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.350" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201030 18:31:35.349" endtime="20201030 18:31:35.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.352" level="INFO">VALUE: [0.00036123700000000036, 0.0003552500000000014, 0.00035526400000000097, 0.0003561669999999975, 0.00035587499999999855, 0.0003850689999999983, 0.0003551660000000005, 0.0003561800000000011, 0.0003568889999999991, 0.00035581999999999975, 0.0003574860000000006, 0.0003563469999999999, 0.0003553890000000011, 0.00038520800000000147, 0.000357666999999999, 0.0003555270000000013, 0.00035569400000000015, 0.0003854309999999986, 0.0003851389999999996, 0.00035633300000000034, 0.0003574999999999967, 0.0003572920000000021, 0.0003574590000000044, 0.00035674999999999596, 0.0003565280000000018, 0.0003559860000000026, 0.00035737500000000005, 0.00035611099999999923, 0.00035561099999999873, 0.00035609699999999966, 0.00035673600000000333, 0.000355375000000005, 0.00038562500000000055, 0.000357054999999995, 0.00035641699999999776, 0.00035724999999999646, 0.0003575419999999954, 0.0003558479999999989, 0.0003851519999999997, 0.0003849860000000038, 0.00035550000000000165, 0.0003556389999999979, 0.0003572500000000034, 0.00035658400000000007, 0.0003559170000000042, 0.00035590300000000463, 0.0003854439999999987, 0.0003553469999999989, 0.0003552630000000015, 0.00038512500000000005]</msg>
<status status="PASS" starttime="20201030 18:31:35.351" endtime="20201030 18:31:35.353"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.346" endtime="20201030 18:31:35.353"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:35.357" endtime="20201030 18:31:35.376"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.355" endtime="20201030 18:31:35.377"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.354" endtime="20201030 18:31:35.377"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.978" endtime="20201030 18:31:35.377"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.977" endtime="20201030 18:31:35.378"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.386" endtime="20201030 18:31:35.421"></status>
</kw>
<msg timestamp="20201030 18:31:35.422" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:35.385" endtime="20201030 18:31:35.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:35.423" endtime="20201030 18:31:35.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.425" endtime="20201030 18:31:35.427"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.382" endtime="20201030 18:31:35.427"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.380" endtime="20201030 18:31:35.428"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.434" endtime="20201030 18:31:35.733"></status>
</kw>
<msg timestamp="20201030 18:31:35.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020898222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021262181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:35.433" endtime="20201030 18:31:35.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020898222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021262181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:35.737" endtime="20201030 18:31:35.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.745" endtime="20201030 18:31:35.747"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.430" endtime="20201030 18:31:35.747"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.428" endtime="20201030 18:31:35.748"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:35.752" level="INFO">${RESULT} = [{'diff': 0.0003639590000000005}, {'diff': 0.00038488899999999937}, {'diff': 0.0003555140000000012}, {'diff': 0.00035676400000000247}, {'diff': 0.00035705500000000195}, {'diff': 0.0003561950000000001}...</msg>
<status status="PASS" starttime="20201030 18:31:35.748" endtime="20201030 18:31:35.752"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:35.756" level="INFO">${ACCURACY} = {'diff': [0.0003639590000000005, 0.00038488899999999937, 0.0003555140000000012, 0.00035676400000000247, 0.00035705500000000195, 0.0003561950000000001, 0.00035509699999999866, 0.0003567769999999991, 0....</msg>
<status status="PASS" starttime="20201030 18:31:35.753" endtime="20201030 18:31:35.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.761" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201030 18:31:35.760" endtime="20201030 18:31:35.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.763" level="INFO">VALUE: [0.0003639590000000005, 0.00038488899999999937, 0.0003555140000000012, 0.00035676400000000247, 0.00035705500000000195, 0.0003561950000000001, 0.00035509699999999866, 0.0003567769999999991, 0.00038526399999999975, 0.0003554439999999999, 0.0003567080000000007, 0.00035577800000000104, 0.0003558060000000002, 0.00035683300000000084, 0.00035729199999999864, 0.00035527700000000106, 0.0003573059999999982, 0.00035604200000000086, 0.0003558470000000029, 0.00035527799999999707, 0.00038504099999999916, 0.0003558340000000028, 0.0003555699999999995, 0.00035569400000000015, 0.0003559310000000003, 0.00035545799999999947, 0.0003552920000000001, 0.00035659700000000016, 0.00035554200000000036, 0.00035680599999999424, 0.000356861, 0.00035704200000000186, 0.00035626400000000197, 0.00035544400000000337, 0.000384931000000005, 0.0003577359999999974, 0.00035677800000000204, 0.00038540299999999944, 0.0003556249999999983, 0.00038517999999999886, 0.0003570140000000027, 0.0003851529999999992, 0.0003552920000000001, 0.0003853750000000003, 0.0003561530000000049, 0.00038499999999999646, 0.000385319000000002, 0.0003554999999999947, 0.0003566950000000041, 0.00035555599999999993]</msg>
<status status="PASS" starttime="20201030 18:31:35.762" endtime="20201030 18:31:35.764"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.757" endtime="20201030 18:31:35.765"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:35.768" endtime="20201030 18:31:35.788"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.767" endtime="20201030 18:31:35.788"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.766" endtime="20201030 18:31:35.788"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.378" endtime="20201030 18:31:35.789"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.378" endtime="20201030 18:31:35.789"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.797" endtime="20201030 18:31:35.833"></status>
</kw>
<msg timestamp="20201030 18:31:35.834" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:35.796" endtime="20201030 18:31:35.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.836" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:35.835" endtime="20201030 18:31:35.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.837" endtime="20201030 18:31:35.839"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.793" endtime="20201030 18:31:35.839"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.791" endtime="20201030 18:31:35.840"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.846" endtime="20201030 18:31:36.131"></status>
</kw>
<msg timestamp="20201030 18:31:36.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021578972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021940444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:35.844" endtime="20201030 18:31:36.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:36.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021578972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021940444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:36.135" endtime="20201030 18:31:36.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:36.143" endtime="20201030 18:31:36.145"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.842" endtime="20201030 18:31:36.145"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.840" endtime="20201030 18:31:36.146"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:36.149" level="INFO">${RESULT} = [{'diff': 0.00036147200000000157}, {'diff': 0.000357764}, {'diff': 0.0003574860000000006}, {'diff': 0.0003560280000000013}, {'diff': 0.00035609699999999966}, {'diff': 0.00035568100000000005}, {'diff':...</msg>
<status status="PASS" starttime="20201030 18:31:36.146" endtime="20201030 18:31:36.150"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:36.153" level="INFO">${ACCURACY} = {'diff': [0.00036147200000000157, 0.000357764, 0.0003574860000000006, 0.0003560280000000013, 0.00035609699999999966, 0.00035568100000000005, 0.00038548600000000086, 0.0003562089999999997, 0.0003850830...</msg>
<status status="PASS" starttime="20201030 18:31:36.150" endtime="20201030 18:31:36.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:36.158" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201030 18:31:36.157" endtime="20201030 18:31:36.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:36.160" level="INFO">VALUE: [0.00036147200000000157, 0.000357764, 0.0003574860000000006, 0.0003560280000000013, 0.00035609699999999966, 0.00035568100000000005, 0.00038548600000000086, 0.0003562089999999997, 0.00038508300000000134, 0.00035708400000000057, 0.00038505499999999873, 0.000356666999999998, 0.0003576809999999986, 0.0003567220000000003, 0.00035604200000000086, 0.0003557500000000019, 0.00035680499999999823, 0.0003562080000000002, 0.00038502799999999907, 0.0003853750000000003, 0.0003556530000000009, 0.00035554200000000036, 0.0003569999999999997, 0.0003852780000000028, 0.00035577799999999757, 0.0003561389999999984, 0.00035742999999999886, 0.0003571530000000059, 0.00035561099999999873, 0.0003854309999999986, 0.0003571669999999985, 0.00035576400000000147, 0.0003571389999999994, 0.0003578749999999936, 0.0003565280000000018, 0.00035661099999999973, 0.00035605600000000043, 0.0003576250000000003, 0.0003571249999999998, 0.00035705500000000195, 0.00035587499999999855, 0.0003576799999999991, 0.00038534700000000116, 0.00035787500000000055, 0.00035759700000000116, 0.0003578190000000023, 0.0003565700000000005, 0.0003553189999999998, 0.00038529200000000235, 0.00035677800000000204]</msg>
<status status="PASS" starttime="20201030 18:31:36.159" endtime="20201030 18:31:36.162"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.154" endtime="20201030 18:31:36.162"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:36.166" endtime="20201030 18:31:36.185"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.164" endtime="20201030 18:31:36.186"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.163" endtime="20201030 18:31:36.186"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.790" endtime="20201030 18:31:36.186"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.789" endtime="20201030 18:31:36.187"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:36.195" endtime="20201030 18:31:36.230"></status>
</kw>
<msg timestamp="20201030 18:31:36.230" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:36.194" endtime="20201030 18:31:36.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:36.233" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:36.231" endtime="20201030 18:31:36.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:36.234" endtime="20201030 18:31:36.235"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.191" endtime="20201030 18:31:36.236"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.189" endtime="20201030 18:31:36.236"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:36.243" endtime="20201030 18:31:36.528"></status>
</kw>
<msg timestamp="20201030 18:31:36.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020671236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021037264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:36.241" endtime="20201030 18:31:36.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:36.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020671236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021037264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:36.532" endtime="20201030 18:31:36.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:36.540" endtime="20201030 18:31:36.542"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.239" endtime="20201030 18:31:36.543"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.237" endtime="20201030 18:31:36.543"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:36.547" level="INFO">${RESULT} = [{'diff': 0.0003660280000000009}, {'diff': 0.00035765199999999997}, {'diff': 0.00035756899999999855}, {'diff': 0.00035632000000000025}, {'diff': 0.00035769400000000215}, {'diff': 0.0003564030000000016...</msg>
<status status="PASS" starttime="20201030 18:31:36.544" endtime="20201030 18:31:36.547"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:36.552" level="INFO">${ACCURACY} = {'diff': [0.0003660280000000009, 0.00035765199999999997, 0.00035756899999999855, 0.00035632000000000025, 0.00035769400000000215, 0.00035640300000000166, 0.00035583299999999984, 0.0003562500000000024, ...</msg>
<status status="PASS" starttime="20201030 18:31:36.548" endtime="20201030 18:31:36.552"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:36.556" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201030 18:31:36.555" endtime="20201030 18:31:36.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:36.559" level="INFO">VALUE: [0.0003660280000000009, 0.00035765199999999997, 0.00035756899999999855, 0.00035632000000000025, 0.00035769400000000215, 0.00035640300000000166, 0.00035583299999999984, 0.0003562500000000024, 0.00038512500000000005, 0.0003561110000000027, 0.00035761100000000073, 0.00035541700000000023, 0.00038494499999999765, 0.0003556800000000006, 0.00035624999999999893, 0.00035597199999999954, 0.00035591600000000126, 0.0003565280000000018, 0.00035574999999999843, 0.0003553609999999985, 0.00038498699999999983, 0.00035529100000000063, 0.0003851110000000005, 0.00035668100000000105, 0.0003565409999999984, 0.00035624999999999893, 0.0003568329999999974, 0.0003851519999999997, 0.00038495799999999775, 0.00035743099999999833, 0.0003574449999999979, 0.00035670799999999725, 0.00035674999999999596, 0.0003554999999999947, 0.00035527800000000054, 0.0003569999999999962, 0.00035630499999999427, 0.00035727800000000254, 0.00035723600000000383, 0.00035600000000000215, 0.0003561669999999975, 0.00035782000000000175, 0.00035576400000000147, 0.00035577800000000104, 0.00035733300000000134, 0.0003854860000000043, 0.0003571939999999982, 0.0003567500000000029, 0.0003564449999999969, 0.00035676400000000247]</msg>
<status status="PASS" starttime="20201030 18:31:36.558" endtime="20201030 18:31:36.560"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.553" endtime="20201030 18:31:36.560"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:36.564" endtime="20201030 18:31:36.583"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.562" endtime="20201030 18:31:36.584"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.561" endtime="20201030 18:31:36.584"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.188" endtime="20201030 18:31:36.584"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.187" endtime="20201030 18:31:36.584"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:36.593" endtime="20201030 18:31:36.631"></status>
</kw>
<msg timestamp="20201030 18:31:36.632" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:36.591" endtime="20201030 18:31:36.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:36.634" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:36.633" endtime="20201030 18:31:36.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:36.635" endtime="20201030 18:31:36.637"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.589" endtime="20201030 18:31:36.638"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.587" endtime="20201030 18:31:36.638"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:36.644" endtime="20201030 18:31:36.931"></status>
</kw>
<msg timestamp="20201030 18:31:36.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02482975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025199833, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:36.643" endtime="20201030 18:31:36.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:36.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02482975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025199833, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:36.935" endtime="20201030 18:31:36.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:36.943" endtime="20201030 18:31:36.945"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.640" endtime="20201030 18:31:36.945"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.639" endtime="20201030 18:31:36.946"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:36.949" level="INFO">${RESULT} = [{'diff': 0.0003700830000000002}, {'diff': 0.00035687499999999955}, {'diff': 0.0003575700000000015}, {'diff': 0.00035736199999999996}, {'diff': 0.0003565410000000019}, {'diff': 0.00035755599999999846}...</msg>
<status status="PASS" starttime="20201030 18:31:36.946" endtime="20201030 18:31:36.950"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:36.953" level="INFO">${ACCURACY} = {'diff': [0.0003700830000000002, 0.00035687499999999955, 0.0003575700000000015, 0.00035736199999999996, 0.0003565410000000019, 0.00035755599999999846, 0.0003852500000000002, 0.00035647200000000004, 0....</msg>
<status status="PASS" starttime="20201030 18:31:36.950" endtime="20201030 18:31:36.954"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:36.958" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201030 18:31:36.957" endtime="20201030 18:31:36.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:36.960" level="INFO">VALUE: [0.0003700830000000002, 0.00035687499999999955, 0.0003575700000000015, 0.00035736199999999996, 0.0003565410000000019, 0.00035755599999999846, 0.0003852500000000002, 0.00035647200000000004, 0.000385110999999997, 0.0003559999999999987, 0.0003850970000000009, 0.0003578890000000001, 0.0003553189999999998, 0.0003852500000000002, 0.0003853060000000019, 0.0003568889999999991, 0.00035555599999999993, 0.0003574860000000006, 0.00038502800000000253, 0.00038502700000000306, 0.0003854719999999978, 0.00035666700000000495, 0.0003566809999999976, 0.0003576799999999991, 0.00035576400000000147, 0.000385319000000002, 0.000355666999999997, 0.0003575410000000029, 0.00035615299999999794, 0.0003571389999999994, 0.00035638900000000556, 0.00035573600000000233, 0.00038559699999999447, 0.0003577219999999978, 0.00035605600000000043, 0.00035770799999999825, 0.0003851949999999979, 0.000356569000000001, 0.0003569159999999988, 0.00035770900000000466, 0.00035574999999999496, 0.0003558469999999994, 0.00038522199999999757, 0.0003578890000000001, 0.00035604200000000086, 0.00035783300000000184, 0.00035661099999999973, 0.00035695800000000444, 0.00035765299999999944, 0.00035758299999999466]</msg>
<status status="PASS" starttime="20201030 18:31:36.959" endtime="20201030 18:31:36.965"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.954" endtime="20201030 18:31:36.966"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:36.969" endtime="20201030 18:31:36.989"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.968" endtime="20201030 18:31:36.989"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.967" endtime="20201030 18:31:36.990"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.585" endtime="20201030 18:31:36.990"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.585" endtime="20201030 18:31:36.990"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:36.999" endtime="20201030 18:31:37.033"></status>
</kw>
<msg timestamp="20201030 18:31:37.034" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:36.997" endtime="20201030 18:31:37.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.036" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:37.035" endtime="20201030 18:31:37.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.037" endtime="20201030 18:31:37.039"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.995" endtime="20201030 18:31:37.039"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.993" endtime="20201030 18:31:37.040"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.046" endtime="20201030 18:31:37.331"></status>
</kw>
<msg timestamp="20201030 18:31:37.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021009903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021374806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:37.045" endtime="20201030 18:31:37.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021009903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021374806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:37.336" endtime="20201030 18:31:37.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.344" endtime="20201030 18:31:37.345"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.042" endtime="20201030 18:31:37.346"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.040" endtime="20201030 18:31:37.346"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:37.350" level="INFO">${RESULT} = [{'diff': 0.00036490299999999976}, {'diff': 0.0003561379999999989}, {'diff': 0.0003554999999999982}, {'diff': 0.00038530599999999846}, {'diff': 0.00035745800000000147}, {'diff': 0.00035604200000000086...</msg>
<status status="PASS" starttime="20201030 18:31:37.347" endtime="20201030 18:31:37.350"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:37.354" level="INFO">${ACCURACY} = {'diff': [0.00036490299999999976, 0.0003561379999999989, 0.0003554999999999982, 0.00038530599999999846, 0.00035745800000000147, 0.00035604200000000086, 0.0003576389999999999, 0.0003855980000000009, 0....</msg>
<status status="PASS" starttime="20201030 18:31:37.351" endtime="20201030 18:31:37.354"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.358" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201030 18:31:37.357" endtime="20201030 18:31:37.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.361" level="INFO">VALUE: [0.00036490299999999976, 0.0003561379999999989, 0.0003554999999999982, 0.00038530599999999846, 0.00035745800000000147, 0.00035604200000000086, 0.0003576389999999999, 0.0003855980000000009, 0.0003568890000000026, 0.00035531999999999925, 0.00038558399999999785, 0.00035590300000000116, 0.0003564859999999996, 0.000385514, 0.00038538899999999987, 0.0003850980000000004, 0.0003850139999999995, 0.0003850139999999995, 0.00035770799999999825, 0.00035563900000000134, 0.00038512500000000005, 0.00038522200000000104, 0.0003853329999999981, 0.0003562219999999998, 0.0003568889999999991, 0.00035673599999999986, 0.00035743000000000233, 0.00035705599999999796, 0.00035744400000000537, 0.0003570270000000028, 0.0003552630000000015, 0.00035709700000000066, 0.0003577359999999974, 0.00035542999999999686, 0.0003853469999999942, 0.000357070000000001, 0.00035665299999999844, 0.00038508300000000134, 0.0003571809999999981, 0.00035677800000000204, 0.0003563609999999995, 0.0003849860000000038, 0.0003569999999999962, 0.0003575410000000029, 0.00035627800000000154, 0.00035702799999999535, 0.0003574029999999992, 0.00035623600000000283, 0.0003558050000000007, 0.0003565700000000005]</msg>
<status status="PASS" starttime="20201030 18:31:37.359" endtime="20201030 18:31:37.362"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.355" endtime="20201030 18:31:37.363"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:37.367" endtime="20201030 18:31:37.386"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.365" endtime="20201030 18:31:37.387"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.364" endtime="20201030 18:31:37.387"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.991" endtime="20201030 18:31:37.387"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.990" endtime="20201030 18:31:37.387"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.396" endtime="20201030 18:31:37.430"></status>
</kw>
<msg timestamp="20201030 18:31:37.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:37.394" endtime="20201030 18:31:37.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.433" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:37.431" endtime="20201030 18:31:37.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.434" endtime="20201030 18:31:37.435"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.392" endtime="20201030 18:31:37.436"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.390" endtime="20201030 18:31:37.436"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.443" endtime="20201030 18:31:37.737"></status>
</kw>
<msg timestamp="20201030 18:31:37.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020754278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021131528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:37.441" endtime="20201030 18:31:37.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020754278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021131528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:37.746" endtime="20201030 18:31:37.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.764" endtime="20201030 18:31:37.767"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.439" endtime="20201030 18:31:37.768"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.437" endtime="20201030 18:31:37.769"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:37.775" level="INFO">${RESULT} = [{'diff': 0.0003772499999999991}, {'diff': 0.0003574159999999993}, {'diff': 0.0003559859999999991}, {'diff': 0.0003555829999999996}, {'diff': 0.0003561249999999988}, {'diff': 0.0003564859999999996}, {...</msg>
<status status="PASS" starttime="20201030 18:31:37.771" endtime="20201030 18:31:37.776"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:37.780" level="INFO">${ACCURACY} = {'diff': [0.0003772499999999991, 0.0003574159999999993, 0.0003559859999999991, 0.0003555829999999996, 0.0003561249999999988, 0.0003564859999999996, 0.0003561389999999984, 0.0003569999999999997, 0.0003...</msg>
<status status="PASS" starttime="20201030 18:31:37.776" endtime="20201030 18:31:37.781"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.785" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201030 18:31:37.784" endtime="20201030 18:31:37.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.788" level="INFO">VALUE: [0.0003772499999999991, 0.0003574159999999993, 0.0003559859999999991, 0.0003555829999999996, 0.0003561249999999988, 0.0003564859999999996, 0.0003561389999999984, 0.0003569999999999997, 0.0003555699999999995, 0.00035705599999999796, 0.0003559999999999987, 0.00035573599999999886, 0.000356861, 0.0003555140000000012, 0.0003571809999999981, 0.00035748599999999714, 0.0003851949999999979, 0.0003576389999999999, 0.0003849450000000011, 0.0003561249999999988, 0.0003571249999999998, 0.00035683300000000084, 0.00035508399999999857, 0.00035775000000000043, 0.00035770799999999825, 0.00035641700000000123, 0.0003576389999999999, 0.00035637499999999905, 0.000357666999999999, 0.0003577920000000026, 0.0003565549999999945, 0.00035643100000000427, 0.0003575700000000015, 0.00035570799999999625, 0.00038530500000000245, 0.0003560140000000017, 0.00035550000000000165, 0.0003852360000000041, 0.00035618000000000455, 0.0003553889999999976, 0.0003551950000000026, 0.0003570690000000015, 0.00035615299999999794, 0.0003556530000000044, 0.00035509699999999866, 0.0003565830000000006, 0.0003850269999999961, 0.00035637499999999905, 0.0003558190000000003, 0.00035659700000000016]</msg>
<status status="PASS" starttime="20201030 18:31:37.787" endtime="20201030 18:31:37.789"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.782" endtime="20201030 18:31:37.789"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:37.793" endtime="20201030 18:31:37.813"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.792" endtime="20201030 18:31:37.813"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.790" endtime="20201030 18:31:37.814"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.388" endtime="20201030 18:31:37.814"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.388" endtime="20201030 18:31:37.814"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.823" endtime="20201030 18:31:37.858"></status>
</kw>
<msg timestamp="20201030 18:31:37.858" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:37.821" endtime="20201030 18:31:37.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:37.859" endtime="20201030 18:31:37.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.862" endtime="20201030 18:31:37.863"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.818" endtime="20201030 18:31:37.864"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.816" endtime="20201030 18:31:37.864"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.871" endtime="20201030 18:31:38.156"></status>
</kw>
<msg timestamp="20201030 18:31:38.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021183, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021542, 'source': 'DUT_IC', 'event': 'FALLING',...</msg>
<status status="PASS" starttime="20201030 18:31:37.869" endtime="20201030 18:31:38.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021183, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021542, 'source': 'DUT_IC', 'event': 'FALLING',...</msg>
<status status="PASS" starttime="20201030 18:31:38.160" endtime="20201030 18:31:38.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:38.169" endtime="20201030 18:31:38.170"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.867" endtime="20201030 18:31:38.171"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.865" endtime="20201030 18:31:38.171"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:38.175" level="INFO">${RESULT} = [{'diff': 0.0003589999999999982}, {'diff': 0.0003563609999999995}, {'diff': 0.00035633300000000034}, {'diff': 0.0003851389999999996}, {'diff': 0.00038533400000000106}, {'diff': 0.0003567080000000007},...</msg>
<status status="PASS" starttime="20201030 18:31:38.172" endtime="20201030 18:31:38.175"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:38.179" level="INFO">${ACCURACY} = {'diff': [0.0003589999999999982, 0.0003563609999999995, 0.00035633300000000034, 0.0003851389999999996, 0.00038533400000000106, 0.0003567080000000007, 0.00038497300000000026, 0.00038534700000000116, 0....</msg>
<status status="PASS" starttime="20201030 18:31:38.176" endtime="20201030 18:31:38.179"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.183" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201030 18:31:38.182" endtime="20201030 18:31:38.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.186" level="INFO">VALUE: [0.0003589999999999982, 0.0003563609999999995, 0.00035633300000000034, 0.0003851389999999996, 0.00038533400000000106, 0.0003567080000000007, 0.00038497300000000026, 0.00038534700000000116, 0.00035619400000000065, 0.00035533299999999934, 0.0003564859999999996, 0.00035544499999999937, 0.0003576809999999986, 0.00035719400000000165, 0.0003571389999999994, 0.0003574029999999992, 0.0003566670000000015, 0.0003558189999999968, 0.0003559310000000003, 0.000355860999999999, 0.0003555280000000008, 0.0003573480000000004, 0.0003554859999999986, 0.000357070000000001, 0.00035526400000000097, 0.00035611099999999923, 0.00038522200000000104, 0.0003852640000000032, 0.00035591699999999726, 0.0003852919999999954, 0.00035747299999999704, 0.00035593099999999683, 0.00035597199999999607, 0.00035504199999999986, 0.0003569029999999987, 0.000385319000000002, 0.00035731899999999484, 0.00038540299999999944, 0.0003573610000000005, 0.00035748599999999714, 0.0003560139999999948, 0.00035691699999999826, 0.0003573610000000005, 0.0003578469999999945, 0.0003564159999999983, 0.00035787500000000055, 0.0003557500000000019, 0.0003562500000000024, 0.0003855139999999965, 0.0003574019999999997]</msg>
<status status="PASS" starttime="20201030 18:31:38.184" endtime="20201030 18:31:38.187"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.180" endtime="20201030 18:31:38.187"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:38.191" endtime="20201030 18:31:38.210"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.189" endtime="20201030 18:31:38.211"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.188" endtime="20201030 18:31:38.211"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.815" endtime="20201030 18:31:38.211"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.814" endtime="20201030 18:31:38.211"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:38.220" endtime="20201030 18:31:38.259"></status>
</kw>
<msg timestamp="20201030 18:31:38.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:38.219" endtime="20201030 18:31:38.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:38.261" endtime="20201030 18:31:38.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:38.263" endtime="20201030 18:31:38.265"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.216" endtime="20201030 18:31:38.266"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.214" endtime="20201030 18:31:38.266"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:38.272" endtime="20201030 18:31:38.572"></status>
</kw>
<msg timestamp="20201030 18:31:38.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025614583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025982139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:38.271" endtime="20201030 18:31:38.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025614583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025982139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:38.582" endtime="20201030 18:31:38.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:38.590" endtime="20201030 18:31:38.592"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.268" endtime="20201030 18:31:38.593"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.267" endtime="20201030 18:31:38.593"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:38.597" level="INFO">${RESULT} = [{'diff': 0.0003675560000000015}, {'diff': 0.00038526300000000027}, {'diff': 0.00035715299999999894}, {'diff': 0.00035557000000000297}, {'diff': 0.0003852500000000002}, {'diff': 0.000356763999999999},...</msg>
<status status="PASS" starttime="20201030 18:31:38.594" endtime="20201030 18:31:38.597"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:38.601" level="INFO">${ACCURACY} = {'diff': [0.0003675560000000015, 0.00038526300000000027, 0.00035715299999999894, 0.00035557000000000297, 0.0003852500000000002, 0.000356763999999999, 0.0003553050000000002, 0.00038540299999999944, 0.0...</msg>
<status status="PASS" starttime="20201030 18:31:38.598" endtime="20201030 18:31:38.601"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.605" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201030 18:31:38.604" endtime="20201030 18:31:38.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.608" level="INFO">VALUE: [0.0003675560000000015, 0.00038526300000000027, 0.00035715299999999894, 0.00035557000000000297, 0.0003852500000000002, 0.000356763999999999, 0.0003553050000000002, 0.00038540299999999944, 0.0003855270000000001, 0.00038548600000000086, 0.0003850560000000017, 0.00035555599999999993, 0.00038526399999999975, 0.00038512500000000005, 0.0003566249999999993, 0.0003564999999999957, 0.0003556389999999979, 0.0003573889999999996, 0.0003575689999999951, 0.0003556389999999979, 0.0003560140000000017, 0.00035592999999999736, 0.00035527700000000106, 0.00038519500000000484, 0.000357457999999998, 0.00035720799999999775, 0.00035518000000000355, 0.00038495900000000416, 0.0003561939999999972, 0.0003555280000000008, 0.000357070000000001, 0.00035629100000000163, 0.00035540300000000413, 0.0003569590000000039, 0.0003851529999999992, 0.000385207999999998, 0.0003576939999999987, 0.00035602799999999435, 0.0003853339999999941, 0.00035791699999999926, 0.0003556249999999983, 0.0003573470000000009, 0.0003553469999999989, 0.00035622200000000326, 0.0003569029999999987, 0.0003561249999999988, 0.0003568190000000013, 0.00035583299999999984, 0.0003553609999999985, 0.00035633300000000034]</msg>
<status status="PASS" starttime="20201030 18:31:38.606" endtime="20201030 18:31:38.609"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.602" endtime="20201030 18:31:38.610"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:38.613" endtime="20201030 18:31:38.633"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.612" endtime="20201030 18:31:38.633"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.611" endtime="20201030 18:31:38.634"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.212" endtime="20201030 18:31:38.634"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.212" endtime="20201030 18:31:38.634"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:38.643" endtime="20201030 18:31:38.676"></status>
</kw>
<msg timestamp="20201030 18:31:38.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:38.641" endtime="20201030 18:31:38.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.679" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:38.677" endtime="20201030 18:31:38.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:38.680" endtime="20201030 18:31:38.681"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.638" endtime="20201030 18:31:38.682"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.636" endtime="20201030 18:31:38.682"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:38.689" endtime="20201030 18:31:38.975"></status>
</kw>
<msg timestamp="20201030 18:31:38.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020117125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020494764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:38.687" endtime="20201030 18:31:38.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020117125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020494764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:38.979" endtime="20201030 18:31:38.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:38.987" endtime="20201030 18:31:38.989"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.685" endtime="20201030 18:31:38.989"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.683" endtime="20201030 18:31:38.990"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:38.994" level="INFO">${RESULT} = [{'diff': 0.00037763899999999906}, {'diff': 0.00038516700000000223}, {'diff': 0.0003561110000000027}, {'diff': 0.00035647200000000004}, {'diff': 0.000356554999999998}, {'diff': 0.0003573059999999982},...</msg>
<status status="PASS" starttime="20201030 18:31:38.990" endtime="20201030 18:31:38.994"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:38.998" level="INFO">${ACCURACY} = {'diff': [0.00037763899999999906, 0.00038516700000000223, 0.0003561110000000027, 0.00035647200000000004, 0.000356554999999998, 0.0003573059999999982, 0.00035687499999999955, 0.00038512500000000005, 0....</msg>
<status status="PASS" starttime="20201030 18:31:38.995" endtime="20201030 18:31:38.999"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.003" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201030 18:31:39.002" endtime="20201030 18:31:39.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.005" level="INFO">VALUE: [0.00037763899999999906, 0.00038516700000000223, 0.0003561110000000027, 0.00035647200000000004, 0.000356554999999998, 0.0003573059999999982, 0.00035687499999999955, 0.00038512500000000005, 0.0003564440000000009, 0.0003852500000000002, 0.00035709700000000066, 0.0003563609999999995, 0.0003553050000000002, 0.0003553059999999997, 0.0003569860000000001, 0.00035540300000000066, 0.00035647200000000004, 0.0003855000000000004, 0.00035607, 0.00035540300000000066, 0.0003564029999999982, 0.0003561660000000015, 0.0003573189999999983, 0.0003566530000000019, 0.00035775000000000043, 0.0003559860000000026, 0.0003576250000000003, 0.0003562219999999998, 0.00038498600000000036, 0.00035683300000000084, 0.00035543099999999633, 0.0003565270000000023, 0.00035633300000000034, 0.00035693099999999783, 0.0003565280000000018, 0.0003557500000000019, 0.00035609699999999966, 0.0003574159999999993, 0.0003576250000000003, 0.00038529200000000235, 0.0003566389999999989, 0.0003571249999999998, 0.00035572200000000276, 0.0003556809999999966, 0.00035665299999999844, 0.00035604200000000086, 0.0003566389999999989, 0.0003576250000000003, 0.00035666599999999854, 0.0003565410000000019]</msg>
<status status="PASS" starttime="20201030 18:31:39.004" endtime="20201030 18:31:39.006"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.999" endtime="20201030 18:31:39.007"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:39.010" endtime="20201030 18:31:39.029"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.009" endtime="20201030 18:31:39.030"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.008" endtime="20201030 18:31:39.030"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.635" endtime="20201030 18:31:39.031"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.634" endtime="20201030 18:31:39.031"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:39.039" endtime="20201030 18:31:39.073"></status>
</kw>
<msg timestamp="20201030 18:31:39.073" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:39.038" endtime="20201030 18:31:39.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.075" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:39.074" endtime="20201030 18:31:39.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:39.076" endtime="20201030 18:31:39.078"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.035" endtime="20201030 18:31:39.079"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.033" endtime="20201030 18:31:39.079"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:39.085" endtime="20201030 18:31:39.373"></status>
</kw>
<msg timestamp="20201030 18:31:39.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020153694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020515167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:39.084" endtime="20201030 18:31:39.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020153694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020515167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:39.378" endtime="20201030 18:31:39.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:39.386" endtime="20201030 18:31:39.387"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.081" endtime="20201030 18:31:39.388"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.080" endtime="20201030 18:31:39.388"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:39.392" level="INFO">${RESULT} = [{'diff': 0.00036147300000000104}, {'diff': 0.0003854439999999987}, {'diff': 0.0003551660000000005}, {'diff': 0.0003852360000000006}, {'diff': 0.0003551949999999991}, {'diff': 0.00035518099999999955},...</msg>
<status status="PASS" starttime="20201030 18:31:39.389" endtime="20201030 18:31:39.393"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:39.396" level="INFO">${ACCURACY} = {'diff': [0.00036147300000000104, 0.0003854439999999987, 0.0003551660000000005, 0.0003852360000000006, 0.0003551949999999991, 0.00035518099999999955, 0.0003558190000000003, 0.00035523599999999836, 0.0...</msg>
<status status="PASS" starttime="20201030 18:31:39.393" endtime="20201030 18:31:39.396"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.401" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201030 18:31:39.400" endtime="20201030 18:31:39.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.403" level="INFO">VALUE: [0.00036147300000000104, 0.0003854439999999987, 0.0003551660000000005, 0.0003852360000000006, 0.0003551949999999991, 0.00035518099999999955, 0.0003558190000000003, 0.00035523599999999836, 0.0003852919999999989, 0.0003550280000000003, 0.0003560140000000017, 0.00035547199999999904, 0.00038486100000000023, 0.0003572769999999996, 0.00035629099999999816, 0.000385304999999999, 0.00035584800000000236, 0.0003551530000000004, 0.00035669400000000115, 0.00038502799999999907, 0.00035705500000000195, 0.00035615199999999847, 0.00035697200000000054, 0.0003572920000000021, 0.00035558300000000306, 0.0003566389999999989, 0.00035529099999999716, 0.00035609699999999966, 0.0003567219999999968, 0.000357569000000002, 0.0003577779999999961, 0.0003557500000000019, 0.0003572920000000021, 0.00035715299999999894, 0.0003853330000000016, 0.00035555500000000045, 0.00035620900000000316, 0.0003852090000000044, 0.00038513800000000015, 0.0003554720000000025, 0.00038516699999999876, 0.0003553609999999985, 0.00035669499999999715, 0.00035620900000000316, 0.0003575140000000032, 0.00035770799999999825, 0.00035609799999999914, 0.00035550000000000165, 0.0003564590000000034, 0.0003571799999999986]</msg>
<status status="PASS" starttime="20201030 18:31:39.402" endtime="20201030 18:31:39.404"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.397" endtime="20201030 18:31:39.404"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:39.408" endtime="20201030 18:31:39.427"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.407" endtime="20201030 18:31:39.428"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.405" endtime="20201030 18:31:39.428"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.032" endtime="20201030 18:31:39.429"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.031" endtime="20201030 18:31:39.429"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:39.437" endtime="20201030 18:31:39.475"></status>
</kw>
<msg timestamp="20201030 18:31:39.476" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:39.436" endtime="20201030 18:31:39.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.478" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:39.477" endtime="20201030 18:31:39.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:39.479" endtime="20201030 18:31:39.481"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.433" endtime="20201030 18:31:39.482"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.431" endtime="20201030 18:31:39.482"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:39.488" endtime="20201030 18:31:39.774"></status>
</kw>
<msg timestamp="20201030 18:31:39.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024179903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024559667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:39.487" endtime="20201030 18:31:39.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024179903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024559667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:39.778" endtime="20201030 18:31:39.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:39.786" endtime="20201030 18:31:39.788"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.484" endtime="20201030 18:31:39.788"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.483" endtime="20201030 18:31:39.789"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:39.793" level="INFO">${RESULT} = [{'diff': 0.0003797640000000012}, {'diff': 0.00035709700000000066}, {'diff': 0.0003853750000000003}, {'diff': 0.0003554020000000012}, {'diff': 0.00035524999999999793}, {'diff': 0.0003563060000000007},...</msg>
<status status="PASS" starttime="20201030 18:31:39.789" endtime="20201030 18:31:39.793"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:39.797" level="INFO">${ACCURACY} = {'diff': [0.0003797640000000012, 0.00035709700000000066, 0.0003853750000000003, 0.0003554020000000012, 0.00035524999999999793, 0.0003563060000000007, 0.00038506900000000177, 0.00035509700000000213, 0....</msg>
<status status="PASS" starttime="20201030 18:31:39.794" endtime="20201030 18:31:39.797"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.801" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201030 18:31:39.800" endtime="20201030 18:31:39.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.804" level="INFO">VALUE: [0.0003797640000000012, 0.00035709700000000066, 0.0003853750000000003, 0.0003554020000000012, 0.00035524999999999793, 0.0003563060000000007, 0.00038506900000000177, 0.00035509700000000213, 0.000355875000000002, 0.0003569310000000013, 0.00035543000000000033, 0.00035727800000000254, 0.0003849719999999973, 0.0003568199999999973, 0.00035537499999999805, 0.00035741699999999876, 0.0003562089999999997, 0.00038518099999999833, 0.0003573480000000004, 0.0003849439999999982, 0.0003562219999999963, 0.00035626400000000197, 0.00035661099999999973, 0.00035545800000000294, 0.00035615199999999847, 0.0003564029999999982, 0.00035583299999999984, 0.00035577800000000104, 0.00035704200000000186, 0.0003566939999999977, 0.00038533299999999465, 0.0003563060000000007, 0.0003551390000000043, 0.00035595800000000344, 0.0003566249999999993, 0.00035708400000000057, 0.0003555699999999995, 0.00035659799999999964, 0.00038486100000000023, 0.00035561099999999873, 0.00035527800000000054, 0.0003553050000000002, 0.0003552219999999953, 0.0003850840000000008, 0.00035652799999999485, 0.00038519400000000537, 0.00038486100000000023, 0.00035665299999999844, 0.00035665299999999844, 0.0003556950000000031]</msg>
<status status="PASS" starttime="20201030 18:31:39.802" endtime="20201030 18:31:39.805"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.797" endtime="20201030 18:31:39.806"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:39.810" endtime="20201030 18:31:39.829"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.808" endtime="20201030 18:31:39.830"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.807" endtime="20201030 18:31:39.830"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.430" endtime="20201030 18:31:39.830"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.429" endtime="20201030 18:31:39.831"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:39.839" endtime="20201030 18:31:39.878"></status>
</kw>
<msg timestamp="20201030 18:31:39.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:39.838" endtime="20201030 18:31:39.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:39.880" endtime="20201030 18:31:39.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:39.882" endtime="20201030 18:31:39.884"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.835" endtime="20201030 18:31:39.884"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.833" endtime="20201030 18:31:39.885"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:39.891" endtime="20201030 18:31:40.192"></status>
</kw>
<msg timestamp="20201030 18:31:40.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024251986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024608944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:39.890" endtime="20201030 18:31:40.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:40.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024251986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024608944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:40.196" endtime="20201030 18:31:40.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:40.204" endtime="20201030 18:31:40.206"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.887" endtime="20201030 18:31:40.207"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.885" endtime="20201030 18:31:40.207"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:40.211" level="INFO">${RESULT} = [{'diff': 0.00035695800000000097}, {'diff': 0.0003560690000000005}, {'diff': 0.00038498600000000036}, {'diff': 0.0003568890000000026}, {'diff': 0.0003553059999999997}, {'diff': 0.00035627800000000154}...</msg>
<status status="PASS" starttime="20201030 18:31:40.208" endtime="20201030 18:31:40.211"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:40.216" level="INFO">${ACCURACY} = {'diff': [0.00035695800000000097, 0.0003560690000000005, 0.00038498600000000036, 0.0003568890000000026, 0.0003553059999999997, 0.00035627800000000154, 0.0003553890000000011, 0.0003854299999999991, 0.0...</msg>
<status status="PASS" starttime="20201030 18:31:40.212" endtime="20201030 18:31:40.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:40.220" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201030 18:31:40.219" endtime="20201030 18:31:40.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:40.223" level="INFO">VALUE: [0.00035695800000000097, 0.0003560690000000005, 0.00038498600000000036, 0.0003568890000000026, 0.0003553059999999997, 0.00035627800000000154, 0.0003553890000000011, 0.0003854299999999991, 0.0003852779999999993, 0.0003563889999999986, 0.0003848749999999998, 0.0003852360000000006, 0.0003577220000000013, 0.00038548600000000086, 0.0003576939999999987, 0.0003552219999999988, 0.000385416999999999, 0.00035613900000000184, 0.00035504199999999986, 0.0003562359999999959, 0.000356861, 0.0003574590000000044, 0.0003554590000000024, 0.000356569000000001, 0.00038538899999999987, 0.00035509699999999866, 0.00035588900000000506, 0.00035600000000000215, 0.00035661099999999973, 0.0003554029999999972, 0.00035761100000000073, 0.0003571939999999982, 0.000355860999999999, 0.00035577800000000104, 0.0003572219999999973, 0.0003552920000000001, 0.000355473000000002, 0.00035540300000000413, 0.0003565139999999953, 0.0003849860000000038, 0.00038486100000000023, 0.0003849309999999981, 0.00038554199999999567, 0.00038495799999999775, 0.0003563609999999995, 0.0003571939999999982, 0.0003851939999999984, 0.0003576530000000064, 0.0003571249999999998, 0.00035737500000000005]</msg>
<status status="PASS" starttime="20201030 18:31:40.221" endtime="20201030 18:31:40.223"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.217" endtime="20201030 18:31:40.224"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:40.227" endtime="20201030 18:31:40.247"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.226" endtime="20201030 18:31:40.247"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.225" endtime="20201030 18:31:40.248"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.832" endtime="20201030 18:31:40.248"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.831" endtime="20201030 18:31:40.248"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:40.257" endtime="20201030 18:31:40.294"></status>
</kw>
<msg timestamp="20201030 18:31:40.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:40.255" endtime="20201030 18:31:40.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:40.297" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:40.295" endtime="20201030 18:31:40.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:40.298" endtime="20201030 18:31:40.299"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.253" endtime="20201030 18:31:40.300"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.251" endtime="20201030 18:31:40.300"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:40.307" endtime="20201030 18:31:40.593"></status>
</kw>
<msg timestamp="20201030 18:31:40.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023583847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023958, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:31:40.305" endtime="20201030 18:31:40.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:40.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023583847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023958, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:31:40.597" endtime="20201030 18:31:40.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:40.605" endtime="20201030 18:31:40.607"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.302" endtime="20201030 18:31:40.607"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.301" endtime="20201030 18:31:40.608"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:40.612" level="INFO">${RESULT} = [{'diff': 0.0003741529999999986}, {'diff': 0.0003851529999999992}, {'diff': 0.0003575829999999981}, {'diff': 0.00038506900000000177}, {'diff': 0.0003576670000000025}, {'diff': 0.00035676400000000247},...</msg>
<status status="PASS" starttime="20201030 18:31:40.608" endtime="20201030 18:31:40.612"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:40.616" level="INFO">${ACCURACY} = {'diff': [0.0003741529999999986, 0.0003851529999999992, 0.0003575829999999981, 0.00038506900000000177, 0.0003576670000000025, 0.00035676400000000247, 0.00035777799999999957, 0.00035659799999999964, 0....</msg>
<status status="PASS" starttime="20201030 18:31:40.613" endtime="20201030 18:31:40.616"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:40.620" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201030 18:31:40.619" endtime="20201030 18:31:40.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:40.622" level="INFO">VALUE: [0.0003741529999999986, 0.0003851529999999992, 0.0003575829999999981, 0.00038506900000000177, 0.0003576670000000025, 0.00035676400000000247, 0.00035777799999999957, 0.00035659799999999964, 0.00035526400000000097, 0.0003556949999999996, 0.00035727800000000254, 0.0003576809999999986, 0.0003573889999999996, 0.00035537499999999805, 0.0003577220000000013, 0.0003553609999999985, 0.00035674999999999943, 0.00035572300000000223, 0.00035633300000000034, 0.00038526399999999975, 0.00035784699999999794, 0.0003557920000000006, 0.00035594400000000387, 0.0003570830000000011, 0.00035741600000000623, 0.0003559029999999977, 0.000357861000000001, 0.0003555410000000009, 0.00035561099999999873, 0.0003556940000000036, 0.0003575830000000016, 0.0003575830000000016, 0.000385013999999996, 0.0003559029999999977, 0.00038522199999999757, 0.0003563060000000007, 0.00035598599999999564, 0.00035782000000000175, 0.0003560690000000005, 0.0003578470000000014, 0.0003854580000000052, 0.0003561249999999988, 0.00035612500000000574, 0.0003560280000000013, 0.00035727700000000306, 0.0003564449999999969, 0.0003553609999999985, 0.00035670799999999725, 0.00035648599999999614, 0.0003851949999999979]</msg>
<status status="PASS" starttime="20201030 18:31:40.621" endtime="20201030 18:31:40.623"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.616" endtime="20201030 18:31:40.624"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:40.627" endtime="20201030 18:31:40.647"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.626" endtime="20201030 18:31:40.647"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.625" endtime="20201030 18:31:40.647"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.249" endtime="20201030 18:31:40.648"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.248" endtime="20201030 18:31:40.648"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:40.657" endtime="20201030 18:31:40.695"></status>
</kw>
<msg timestamp="20201030 18:31:40.696" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:40.655" endtime="20201030 18:31:40.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:40.698" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:40.697" endtime="20201030 18:31:40.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:40.699" endtime="20201030 18:31:40.701"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.653" endtime="20201030 18:31:40.702"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.650" endtime="20201030 18:31:40.702"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:40.709" endtime="20201030 18:31:41.004"></status>
</kw>
<msg timestamp="20201030 18:31:41.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025746167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026108278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:40.707" endtime="20201030 18:31:41.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:41.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025746167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026108278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:41.008" endtime="20201030 18:31:41.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:41.017" endtime="20201030 18:31:41.018"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.704" endtime="20201030 18:31:41.019"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.703" endtime="20201030 18:31:41.019"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:41.023" level="INFO">${RESULT} = [{'diff': 0.0003621109999999983}, {'diff': 0.00035505599999999943}, {'diff': 0.00038508300000000134}, {'diff': 0.0003561389999999984}, {'diff': 0.00035527700000000106}, {'diff': 0.0003850139999999995}...</msg>
<status status="PASS" starttime="20201030 18:31:41.020" endtime="20201030 18:31:41.023"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:41.027" level="INFO">${ACCURACY} = {'diff': [0.0003621109999999983, 0.00035505599999999943, 0.00038508300000000134, 0.0003561389999999984, 0.00035527700000000106, 0.0003850139999999995, 0.00035695900000000044, 0.0003560830000000001, 0....</msg>
<status status="PASS" starttime="20201030 18:31:41.024" endtime="20201030 18:31:41.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:41.032" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201030 18:31:41.031" endtime="20201030 18:31:41.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:41.034" level="INFO">VALUE: [0.0003621109999999983, 0.00035505599999999943, 0.00038508300000000134, 0.0003561389999999984, 0.00035527700000000106, 0.0003850139999999995, 0.00035695900000000044, 0.0003560830000000001, 0.00035727700000000306, 0.00035663900000000234, 0.0003575829999999981, 0.0003575969999999977, 0.00035611099999999923, 0.0003556249999999983, 0.0003852779999999993, 0.0003554300000000038, 0.00035629100000000163, 0.00035633300000000034, 0.0003849309999999981, 0.00038490299999999894, 0.0003558339999999993, 0.0003560690000000005, 0.0003566810000000045, 0.0003556940000000036, 0.0003560690000000005, 0.0003568050000000017, 0.00038527799999999585, 0.0003854309999999986, 0.0003851659999999993, 0.00035604200000000086, 0.00035647199999999657, 0.00035583299999999984, 0.00035515299999999694, 0.00038504100000000263, 0.00035565299999999744, 0.0003575269999999964, 0.0003560140000000017, 0.00035577800000000104, 0.0003855970000000014, 0.00035655600000000093, 0.00035661099999999973, 0.00035559699999999916, 0.00035616599999999804, 0.00035555500000000045, 0.00035577700000000156, 0.00035598599999999564, 0.000355972000000003, 0.0003576389999999999, 0.00035594400000000387, 0.00035605500000000095]</msg>
<status status="PASS" starttime="20201030 18:31:41.033" endtime="20201030 18:31:41.036"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.028" endtime="20201030 18:31:41.036"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:41.040" endtime="20201030 18:31:41.059"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.038" endtime="20201030 18:31:41.060"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.037" endtime="20201030 18:31:41.060"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.649" endtime="20201030 18:31:41.060"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.648" endtime="20201030 18:31:41.060"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:41.069" endtime="20201030 18:31:41.103"></status>
</kw>
<msg timestamp="20201030 18:31:41.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:41.067" endtime="20201030 18:31:41.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:41.106" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:41.105" endtime="20201030 18:31:41.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:41.107" endtime="20201030 18:31:41.109"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.065" endtime="20201030 18:31:41.109"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.063" endtime="20201030 18:31:41.110"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:41.116" endtime="20201030 18:31:41.402"></status>
</kw>
<msg timestamp="20201030 18:31:41.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020176958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020557222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:41.115" endtime="20201030 18:31:41.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:41.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020176958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020557222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:41.406" endtime="20201030 18:31:41.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:41.414" endtime="20201030 18:31:41.416"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.112" endtime="20201030 18:31:41.417"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.110" endtime="20201030 18:31:41.417"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:41.421" level="INFO">${RESULT} = [{'diff': 0.0003802640000000017}, {'diff': 0.00035577800000000104}, {'diff': 0.0003850139999999995}, {'diff': 0.00035761100000000073}, {'diff': 0.0003576389999999999}, {'diff': 0.0003573189999999983},...</msg>
<status status="PASS" starttime="20201030 18:31:41.418" endtime="20201030 18:31:41.421"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:41.426" level="INFO">${ACCURACY} = {'diff': [0.0003802640000000017, 0.00035577800000000104, 0.0003850139999999995, 0.00035761100000000073, 0.0003576389999999999, 0.0003573189999999983, 0.0003848749999999998, 0.00035508399999999857, 0.0...</msg>
<status status="PASS" starttime="20201030 18:31:41.422" endtime="20201030 18:31:41.426"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:41.430" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201030 18:31:41.429" endtime="20201030 18:31:41.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:41.433" level="INFO">VALUE: [0.0003802640000000017, 0.00035577800000000104, 0.0003850139999999995, 0.00035761100000000073, 0.0003576389999999999, 0.0003573189999999983, 0.0003848749999999998, 0.00035508399999999857, 0.00035555599999999993, 0.0003552500000000014, 0.00035709800000000014, 0.00035663900000000234, 0.0003559019999999982, 0.00035673599999999986, 0.00035724999999999993, 0.0003551389999999974, 0.0003849160000000025, 0.00035705600000000143, 0.0003565830000000006, 0.0003552079999999992, 0.0003566670000000015, 0.00038534700000000116, 0.00035597199999999954, 0.0003563609999999995, 0.00035518099999999955, 0.0003559029999999977, 0.00038522199999999757, 0.0003576250000000003, 0.00035611099999999923, 0.00035505599999999943, 0.0003850829999999944, 0.00035638900000000556, 0.0003849719999999973, 0.00035604200000000086, 0.0003553610000000054, 0.000357666999999999, 0.0003569159999999988, 0.00035587499999999855, 0.0003558190000000003, 0.0003574860000000041, 0.0003571940000000051, 0.00035573600000000233, 0.0003569029999999987, 0.0003560830000000001, 0.0003565830000000006, 0.00035708400000000057, 0.000357457999999998, 0.000355860999999999, 0.00035576400000000147, 0.0003554449999999959]</msg>
<status status="PASS" starttime="20201030 18:31:41.431" endtime="20201030 18:31:41.433"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.427" endtime="20201030 18:31:41.434"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:41.438" endtime="20201030 18:31:41.457"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.436" endtime="20201030 18:31:41.457"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.435" endtime="20201030 18:31:41.458"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.061" endtime="20201030 18:31:41.458"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.061" endtime="20201030 18:31:41.458"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:41.467" endtime="20201030 18:31:41.505"></status>
</kw>
<msg timestamp="20201030 18:31:41.505" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:41.465" endtime="20201030 18:31:41.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:41.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:41.506" endtime="20201030 18:31:41.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:41.509" endtime="20201030 18:31:41.510"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.463" endtime="20201030 18:31:41.511"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.461" endtime="20201030 18:31:41.511"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:41.518" endtime="20201030 18:31:41.803"></status>
</kw>
<msg timestamp="20201030 18:31:41.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0243325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024716708, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:31:41.516" endtime="20201030 18:31:41.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:41.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0243325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024716708, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:31:41.809" endtime="20201030 18:31:41.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:41.820" endtime="20201030 18:31:41.822"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.514" endtime="20201030 18:31:41.823"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.512" endtime="20201030 18:31:41.823"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:41.829" level="INFO">${RESULT} = [{'diff': 0.00038420800000000047}, {'diff': 0.00038548600000000086}, {'diff': 0.00035774999999999696}, {'diff': 0.00035524999999999793}, {'diff': 0.00035623599999999936}, {'diff': 0.000356513999999998...</msg>
<status status="PASS" starttime="20201030 18:31:41.824" endtime="20201030 18:31:41.829"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:41.834" level="INFO">${ACCURACY} = {'diff': [0.00038420800000000047, 0.00038548600000000086, 0.00035774999999999696, 0.00035524999999999793, 0.00035623599999999936, 0.00035651399999999875, 0.00035641700000000123, 0.0003573470000000009,...</msg>
<status status="PASS" starttime="20201030 18:31:41.830" endtime="20201030 18:31:41.835"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:41.840" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201030 18:31:41.839" endtime="20201030 18:31:41.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:41.842" level="INFO">VALUE: [0.00038420800000000047, 0.00038548600000000086, 0.00035774999999999696, 0.00035524999999999793, 0.00035623599999999936, 0.00035651399999999875, 0.00035641700000000123, 0.0003573470000000009, 0.000357666999999999, 0.0003560279999999978, 0.0003567220000000003, 0.00035527800000000054, 0.00035619400000000065, 0.0003552920000000001, 0.00038538899999999987, 0.00038515300000000266, 0.00035777799999999957, 0.0003559869999999986, 0.00035745900000000094, 0.00035655500000000145, 0.00035581999999999975, 0.0003553059999999997, 0.00035730499999999527, 0.0003558050000000007, 0.00035658400000000007, 0.0003553889999999976, 0.0003558889999999981, 0.0003566389999999989, 0.0003563469999999999, 0.00035665299999999844, 0.000355375000000005, 0.00038499999999999646, 0.00035602799999999435, 0.00038512500000000005, 0.0003556390000000048, 0.0003565700000000005, 0.0003574029999999992, 0.0003555139999999943, 0.00035670900000000366, 0.00035623600000000283, 0.00035531999999999925, 0.00035726399999999603, 0.00035522200000000226, 0.00035611099999999923, 0.00038558300000000184, 0.0003569029999999987, 0.0003555410000000009, 0.0003855829999999949, 0.0003853330000000016, 0.0003562080000000037]</msg>
<status status="PASS" starttime="20201030 18:31:41.841" endtime="20201030 18:31:41.843"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.836" endtime="20201030 18:31:41.844"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:41.847" endtime="20201030 18:31:41.867"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.846" endtime="20201030 18:31:41.867"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.845" endtime="20201030 18:31:41.868"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.459" endtime="20201030 18:31:41.868"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.459" endtime="20201030 18:31:41.868"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:41.877" endtime="20201030 18:31:41.921"></status>
</kw>
<msg timestamp="20201030 18:31:41.921" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:41.875" endtime="20201030 18:31:41.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:41.924" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:41.922" endtime="20201030 18:31:41.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:41.925" endtime="20201030 18:31:41.927"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.873" endtime="20201030 18:31:41.927"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.870" endtime="20201030 18:31:41.927"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:41.934" endtime="20201030 18:31:42.220"></status>
</kw>
<msg timestamp="20201030 18:31:42.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026688528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027070222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:41.932" endtime="20201030 18:31:42.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:42.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026688528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027070222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:42.224" endtime="20201030 18:31:42.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:42.232" endtime="20201030 18:31:42.234"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.930" endtime="20201030 18:31:42.234"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.928" endtime="20201030 18:31:42.235"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:42.239" level="INFO">${RESULT} = [{'diff': 0.00038169400000000187}, {'diff': 0.00035687499999999955}, {'diff': 0.0003557079999999997}, {'diff': 0.00035716599999999904}, {'diff': 0.00035632000000000025}, {'diff': 0.0003562360000000028...</msg>
<status status="PASS" starttime="20201030 18:31:42.236" endtime="20201030 18:31:42.239"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:42.243" level="INFO">${ACCURACY} = {'diff': [0.00038169400000000187, 0.00035687499999999955, 0.0003557079999999997, 0.00035716599999999904, 0.00035632000000000025, 0.00035623600000000283, 0.00035765299999999944, 0.0003556800000000006, ...</msg>
<status status="PASS" starttime="20201030 18:31:42.240" endtime="20201030 18:31:42.243"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:42.247" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201030 18:31:42.246" endtime="20201030 18:31:42.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:42.249" level="INFO">VALUE: [0.00038169400000000187, 0.00035687499999999955, 0.0003557079999999997, 0.00035716599999999904, 0.00035632000000000025, 0.00035623600000000283, 0.00035765299999999944, 0.0003556800000000006, 0.0003569019999999992, 0.0003849999999999999, 0.00035755599999999846, 0.0003560980000000026, 0.0003549860000000016, 0.00038517999999999886, 0.0003553189999999998, 0.00035677800000000204, 0.0003575139999999963, 0.0003574029999999992, 0.00035738900000000656, 0.0003566799999999981, 0.00035544400000000337, 0.00035523600000000183, 0.0003553189999999998, 0.00038491599999999904, 0.0003569029999999987, 0.000354972000000002, 0.00038512500000000005, 0.00035751300000000374, 0.00035565299999999744, 0.0003849860000000038, 0.00035674999999999596, 0.0003556119999999982, 0.00035724999999999646, 0.0003560410000000014, 0.0003847770000000028, 0.0003552500000000014, 0.00038488899999999937, 0.00035515199999999747, 0.00038523599999999714, 0.00035698599999999664, 0.0003553189999999998, 0.00035659700000000016, 0.00038529200000000235, 0.0003575969999999942, 0.0003556389999999979, 0.0003574029999999992, 0.00035579100000000113, 0.0003554999999999947, 0.000385416999999999, 0.0003565140000000022]</msg>
<status status="PASS" starttime="20201030 18:31:42.248" endtime="20201030 18:31:42.254"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.243" endtime="20201030 18:31:42.255"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:42.259" endtime="20201030 18:31:42.278"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.257" endtime="20201030 18:31:42.278"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.256" endtime="20201030 18:31:42.279"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.869" endtime="20201030 18:31:42.279"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.868" endtime="20201030 18:31:42.279"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:42.288" endtime="20201030 18:31:42.325"></status>
</kw>
<msg timestamp="20201030 18:31:42.326" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:42.286" endtime="20201030 18:31:42.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:42.331" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:42.328" endtime="20201030 18:31:42.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:42.333" endtime="20201030 18:31:42.336"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.284" endtime="20201030 18:31:42.337"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.282" endtime="20201030 18:31:42.338"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:42.352" endtime="20201030 18:31:42.644"></status>
</kw>
<msg timestamp="20201030 18:31:42.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022229986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022609208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:42.349" endtime="20201030 18:31:42.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:42.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022229986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022609208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:42.649" endtime="20201030 18:31:42.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:42.657" endtime="20201030 18:31:42.658"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.343" endtime="20201030 18:31:42.659"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.340" endtime="20201030 18:31:42.659"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:42.663" level="INFO">${RESULT} = [{'diff': 0.0003792219999999985}, {'diff': 0.00035755599999999846}, {'diff': 0.00035673699999999933}, {'diff': 0.0003856939999999989}, {'diff': 0.00038526399999999975}, {'diff': 0.00035679199999999814...</msg>
<status status="PASS" starttime="20201030 18:31:42.660" endtime="20201030 18:31:42.663"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:42.668" level="INFO">${ACCURACY} = {'diff': [0.0003792219999999985, 0.00035755599999999846, 0.00035673699999999933, 0.0003856939999999989, 0.00038526399999999975, 0.00035679199999999814, 0.0003851529999999992, 0.0003556250000000018, 0....</msg>
<status status="PASS" starttime="20201030 18:31:42.664" endtime="20201030 18:31:42.668"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:42.672" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201030 18:31:42.671" endtime="20201030 18:31:42.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:42.675" level="INFO">VALUE: [0.0003792219999999985, 0.00035755599999999846, 0.00035673699999999933, 0.0003856939999999989, 0.00038526399999999975, 0.00035679199999999814, 0.0003851529999999992, 0.0003556250000000018, 0.0003563469999999999, 0.00038566699999999926, 0.00035697200000000054, 0.00035765299999999944, 0.0003573059999999982, 0.0003556249999999983, 0.0003569579999999975, 0.00035737500000000005, 0.00035780499999999923, 0.0003565280000000018, 0.0003566249999999993, 0.00035594499999999987, 0.0003557920000000006, 0.00035604200000000086, 0.00035550000000000165, 0.00035544499999999937, 0.00035641700000000123, 0.000356569000000001, 0.00035626399999999503, 0.0003566389999999989, 0.00035545800000000294, 0.00035676400000000247, 0.00035609699999999966, 0.0003552920000000001, 0.00035555599999999993, 0.0003851529999999992, 0.0003576250000000003, 0.00038501400000000296, 0.00035748700000000355, 0.0003570140000000027, 0.0003577080000000052, 0.000355569, 0.00035731899999999484, 0.0003851659999999993, 0.0003849860000000038, 0.0003578060000000022, 0.0003552359999999949, 0.0003564999999999957, 0.0003568050000000017, 0.00035526400000000097, 0.0003853200000000015, 0.00035595800000000344]</msg>
<status status="PASS" starttime="20201030 18:31:42.674" endtime="20201030 18:31:42.676"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.669" endtime="20201030 18:31:42.676"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:42.680" endtime="20201030 18:31:42.699"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.678" endtime="20201030 18:31:42.700"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.677" endtime="20201030 18:31:42.700"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.280" endtime="20201030 18:31:42.700"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.280" endtime="20201030 18:31:42.700"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:42.709" endtime="20201030 18:31:42.746"></status>
</kw>
<msg timestamp="20201030 18:31:42.747" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:42.707" endtime="20201030 18:31:42.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:42.749" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:42.748" endtime="20201030 18:31:42.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:42.750" endtime="20201030 18:31:42.752"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.705" endtime="20201030 18:31:42.752"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.703" endtime="20201030 18:31:42.753"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:42.759" endtime="20201030 18:31:43.047"></status>
</kw>
<msg timestamp="20201030 18:31:43.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023044375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023402083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:42.758" endtime="20201030 18:31:43.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:43.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023044375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023402083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:43.051" endtime="20201030 18:31:43.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:43.059" endtime="20201030 18:31:43.061"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.755" endtime="20201030 18:31:43.061"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.753" endtime="20201030 18:31:43.062"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:43.066" level="INFO">${RESULT} = [{'diff': 0.0003577080000000017}, {'diff': 0.0003554309999999998}, {'diff': 0.0003561950000000001}, {'diff': 0.0003566389999999989}, {'diff': 0.00035590300000000116}, {'diff': 0.00035755599999999846},...</msg>
<status status="PASS" starttime="20201030 18:31:43.063" endtime="20201030 18:31:43.066"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:43.070" level="INFO">${ACCURACY} = {'diff': [0.0003577080000000017, 0.0003554309999999998, 0.0003561950000000001, 0.0003566389999999989, 0.00035590300000000116, 0.00035755599999999846, 0.0003851939999999984, 0.00035581999999999975, 0.0...</msg>
<status status="PASS" starttime="20201030 18:31:43.067" endtime="20201030 18:31:43.070"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:43.074" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201030 18:31:43.073" endtime="20201030 18:31:43.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:43.076" level="INFO">VALUE: [0.0003577080000000017, 0.0003554309999999998, 0.0003561950000000001, 0.0003566389999999989, 0.00035590300000000116, 0.00035755599999999846, 0.0003851939999999984, 0.00035581999999999975, 0.00038515300000000266, 0.00035727799999999907, 0.00035609699999999966, 0.00035540300000000066, 0.0003553470000000024, 0.00035756899999999855, 0.0003573060000000017, 0.0003568889999999991, 0.0003573189999999983, 0.00038522200000000104, 0.0003567220000000003, 0.00038536100000000073, 0.0003562920000000011, 0.000356958999999997, 0.00035775000000000043, 0.00035561099999999873, 0.00038499999999999646, 0.00035544400000000337, 0.0003852499999999967, 0.0003558060000000002, 0.0003575139999999963, 0.0003573190000000018, 0.000385013999999996, 0.00035593100000000377, 0.00035592999999999736, 0.0003849719999999973, 0.00038484700000000066, 0.0003563609999999995, 0.0003569590000000039, 0.0003554029999999972, 0.00035577800000000104, 0.000355473000000002, 0.0003558339999999993, 0.000357555999999995, 0.00035644400000000437, 0.0003848749999999998, 0.0003553059999999997, 0.00038536100000000073, 0.0003561249999999988, 0.00035755500000000245, 0.0003552500000000014, 0.0003562089999999962]</msg>
<status status="PASS" starttime="20201030 18:31:43.075" endtime="20201030 18:31:43.077"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.070" endtime="20201030 18:31:43.078"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:43.081" endtime="20201030 18:31:43.101"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.080" endtime="20201030 18:31:43.101"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.079" endtime="20201030 18:31:43.102"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.701" endtime="20201030 18:31:43.102"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.701" endtime="20201030 18:31:43.102"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:43.111" endtime="20201030 18:31:43.148"></status>
</kw>
<msg timestamp="20201030 18:31:43.149" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:43.109" endtime="20201030 18:31:43.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:43.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:43.150" endtime="20201030 18:31:43.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:43.152" endtime="20201030 18:31:43.154"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.107" endtime="20201030 18:31:43.154"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.104" endtime="20201030 18:31:43.155"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:43.161" endtime="20201030 18:31:43.446"></status>
</kw>
<msg timestamp="20201030 18:31:43.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023341472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023716806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:43.159" endtime="20201030 18:31:43.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:43.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023341472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023716806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:43.450" endtime="20201030 18:31:43.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:43.458" endtime="20201030 18:31:43.460"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.157" endtime="20201030 18:31:43.460"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.155" endtime="20201030 18:31:43.461"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:43.464" level="INFO">${RESULT} = [{'diff': 0.00037533400000000147}, {'diff': 0.0003570549999999985}, {'diff': 0.00035679199999999814}, {'diff': 0.0003564029999999982}, {'diff': 0.0003852360000000006}, {'diff': 0.000355875000000002}, ...</msg>
<status status="PASS" starttime="20201030 18:31:43.461" endtime="20201030 18:31:43.465"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:43.468" level="INFO">${ACCURACY} = {'diff': [0.00037533400000000147, 0.0003570549999999985, 0.00035679199999999814, 0.0003564029999999982, 0.0003852360000000006, 0.000355875000000002, 0.00035555599999999993, 0.00035573599999999886, 0.0...</msg>
<status status="PASS" starttime="20201030 18:31:43.465" endtime="20201030 18:31:43.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:43.473" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201030 18:31:43.472" endtime="20201030 18:31:43.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:43.475" level="INFO">VALUE: [0.00037533400000000147, 0.0003570549999999985, 0.00035679199999999814, 0.0003564029999999982, 0.0003852360000000006, 0.000355875000000002, 0.00035555599999999993, 0.00035573599999999886, 0.0003552500000000014, 0.0003852500000000002, 0.0003557089999999992, 0.00038552799999999957, 0.0003854030000000029, 0.0003569029999999987, 0.0003853880000000004, 0.0003558050000000007, 0.00035563900000000134, 0.0003850550000000022, 0.0003566249999999993, 0.00035751399999999975, 0.00035547199999999904, 0.0003567080000000007, 0.00035732000000000125, 0.00035695800000000444, 0.00035669499999999715, 0.0003557920000000006, 0.0003566249999999993, 0.0003855279999999961, 0.00035527800000000054, 0.0003557359999999954, 0.0003854299999999991, 0.00035755600000000193, 0.0003569449999999974, 0.00035561099999999873, 0.000357569000000002, 0.00038495799999999775, 0.0003856659999999998, 0.0003554029999999972, 0.000357666999999999, 0.0003564999999999957, 0.0003577500000000039, 0.00035540300000000413, 0.00035677800000000204, 0.00035752799999999585, 0.0003571799999999986, 0.00038517999999999886, 0.00035597199999999607, 0.0003569029999999987, 0.0003555410000000009, 0.0003557500000000019]</msg>
<status status="PASS" starttime="20201030 18:31:43.474" endtime="20201030 18:31:43.477"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.469" endtime="20201030 18:31:43.477"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:43.481" endtime="20201030 18:31:43.500"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.480" endtime="20201030 18:31:43.501"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.478" endtime="20201030 18:31:43.501"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.103" endtime="20201030 18:31:43.502"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.102" endtime="20201030 18:31:43.502"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:43.510" endtime="20201030 18:31:43.544"></status>
</kw>
<msg timestamp="20201030 18:31:43.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:43.509" endtime="20201030 18:31:43.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:43.547" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:43.546" endtime="20201030 18:31:43.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:43.548" endtime="20201030 18:31:43.550"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.506" endtime="20201030 18:31:43.550"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.504" endtime="20201030 18:31:43.551"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:43.557" endtime="20201030 18:31:43.846"></status>
</kw>
<msg timestamp="20201030 18:31:43.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020491153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020873347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:43.556" endtime="20201030 18:31:43.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:43.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020491153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020873347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:43.855" endtime="20201030 18:31:43.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:43.873" endtime="20201030 18:31:43.876"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.553" endtime="20201030 18:31:43.877"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.552" endtime="20201030 18:31:43.878"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:43.887" level="INFO">${RESULT} = [{'diff': 0.0003821939999999989}, {'diff': 0.00035568100000000005}, {'diff': 0.00035545799999999947}, {'diff': 0.0003570690000000015}, {'diff': 0.0003849299999999986}, {'diff': 0.00035509699999999866}...</msg>
<status status="PASS" starttime="20201030 18:31:43.880" endtime="20201030 18:31:43.887"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:43.897" level="INFO">${ACCURACY} = {'diff': [0.0003821939999999989, 0.00035568100000000005, 0.00035545799999999947, 0.0003570690000000015, 0.0003849299999999986, 0.00035509699999999866, 0.0003571249999999998, 0.0003569440000000014, 0.0...</msg>
<status status="PASS" starttime="20201030 18:31:43.889" endtime="20201030 18:31:43.898"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:43.907" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201030 18:31:43.905" endtime="20201030 18:31:43.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:43.913" level="INFO">VALUE: [0.0003821939999999989, 0.00035568100000000005, 0.00035545799999999947, 0.0003570690000000015, 0.0003849299999999986, 0.00035509699999999866, 0.0003571249999999998, 0.0003569440000000014, 0.00035519399999999965, 0.0003571799999999986, 0.0003550829999999991, 0.00035669499999999715, 0.0003562500000000024, 0.0003566530000000019, 0.0003853200000000015, 0.0003553750000000015, 0.00035759700000000116, 0.0003562219999999998, 0.00038509699999999744, 0.00035695800000000097, 0.00035509799999999814, 0.0003550829999999991, 0.00035520900000000216, 0.0003852780000000028, 0.00038493100000000155, 0.00035613900000000184, 0.0003851939999999984, 0.00035632000000000025, 0.0003564720000000035, 0.0003561249999999988, 0.0003550829999999991, 0.0003574019999999997, 0.00035720799999999775, 0.00035587499999999855, 0.00038536100000000073, 0.0003850000000000034, 0.0003575140000000032, 0.0003564029999999982, 0.00035659700000000016, 0.00038511099999999354, 0.00035511099999999823, 0.0003854439999999987, 0.00038499999999999646, 0.00035509699999999866, 0.00035716700000000545, 0.00035509699999999866, 0.00035607, 0.0003562359999999959, 0.00035758400000000107, 0.00038529200000000235]</msg>
<status status="PASS" starttime="20201030 18:31:43.909" endtime="20201030 18:31:43.914"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.899" endtime="20201030 18:31:43.915"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:43.923" endtime="20201030 18:31:43.943"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.920" endtime="20201030 18:31:43.944"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.917" endtime="20201030 18:31:43.944"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.503" endtime="20201030 18:31:43.944"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.502" endtime="20201030 18:31:43.944"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:43.953" endtime="20201030 18:31:43.986"></status>
</kw>
<msg timestamp="20201030 18:31:43.987" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:43.951" endtime="20201030 18:31:43.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:43.989" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:43.988" endtime="20201030 18:31:43.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:43.990" endtime="20201030 18:31:43.992"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.949" endtime="20201030 18:31:43.992"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.947" endtime="20201030 18:31:43.993"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:43.999" endtime="20201030 18:31:44.286"></status>
</kw>
<msg timestamp="20201030 18:31:44.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02005675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020418222, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:43.997" endtime="20201030 18:31:44.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:44.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02005675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020418222, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:44.290" endtime="20201030 18:31:44.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:44.298" endtime="20201030 18:31:44.300"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.995" endtime="20201030 18:31:44.301"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.993" endtime="20201030 18:31:44.301"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:44.305" level="INFO">${RESULT} = [{'diff': 0.0003614719999999981}, {'diff': 0.0003850420000000021}, {'diff': 0.0003574440000000019}, {'diff': 0.00035655600000000093}, {'diff': 0.00035559700000000263}, {'diff': 0.00035536100000000195}...</msg>
<status status="PASS" starttime="20201030 18:31:44.302" endtime="20201030 18:31:44.305"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:44.309" level="INFO">${ACCURACY} = {'diff': [0.0003614719999999981, 0.0003850420000000021, 0.0003574440000000019, 0.00035655600000000093, 0.00035559700000000263, 0.00035536100000000195, 0.000357167000000002, 0.000357457999999998, 0.000...</msg>
<status status="PASS" starttime="20201030 18:31:44.306" endtime="20201030 18:31:44.309"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:44.313" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201030 18:31:44.312" endtime="20201030 18:31:44.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:44.316" level="INFO">VALUE: [0.0003614719999999981, 0.0003850420000000021, 0.0003574440000000019, 0.00035655600000000093, 0.00035559700000000263, 0.00035536100000000195, 0.000357167000000002, 0.000357457999999998, 0.00035705500000000195, 0.00035659700000000016, 0.0003848330000000011, 0.000357569000000002, 0.0003851659999999993, 0.0003565830000000006, 0.0003555410000000009, 0.0003575000000000002, 0.00035647200000000004, 0.00035747200000000104, 0.00038495799999999775, 0.0003551249999999978, 0.00035743099999999833, 0.00035526400000000097, 0.0003575140000000032, 0.000356861, 0.0003568060000000012, 0.0003562920000000011, 0.0003553189999999998, 0.0003569860000000001, 0.00035751399999999975, 0.000355860999999999, 0.0003571389999999994, 0.00035644399999999743, 0.0003565280000000018, 0.0003849450000000046, 0.0003551940000000031, 0.00035520900000000216, 0.0003565410000000019, 0.00035623600000000283, 0.0003851389999999996, 0.00035633300000000034, 0.00035541699999999676, 0.0003561669999999975, 0.00035515299999999694, 0.00038512500000000005, 0.000384804999999995, 0.000385416999999999, 0.0003550829999999991, 0.000357070000000001, 0.0003564449999999969, 0.00035692999999999836]</msg>
<status status="PASS" starttime="20201030 18:31:44.314" endtime="20201030 18:31:44.316"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.310" endtime="20201030 18:31:44.317"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:44.321" endtime="20201030 18:31:44.340"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.319" endtime="20201030 18:31:44.341"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.318" endtime="20201030 18:31:44.341"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.945" endtime="20201030 18:31:44.341"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.945" endtime="20201030 18:31:44.341"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:44.350" endtime="20201030 18:31:44.390"></status>
</kw>
<msg timestamp="20201030 18:31:44.391" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:44.348" endtime="20201030 18:31:44.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:44.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:44.392" endtime="20201030 18:31:44.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:44.394" endtime="20201030 18:31:44.396"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.346" endtime="20201030 18:31:44.396"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.344" endtime="20201030 18:31:44.397"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:44.403" endtime="20201030 18:31:44.698"></status>
</kw>
<msg timestamp="20201030 18:31:44.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025012014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025373389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:44.402" endtime="20201030 18:31:44.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:44.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025012014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025373389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:44.708" endtime="20201030 18:31:44.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:44.726" endtime="20201030 18:31:44.729"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.399" endtime="20201030 18:31:44.730"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.397" endtime="20201030 18:31:44.731"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:44.739" level="INFO">${RESULT} = [{'diff': 0.0003613750000000006}, {'diff': 0.0003576389999999999}, {'diff': 0.0003563609999999995}, {'diff': 0.0003552920000000001}, {'diff': 0.00035655500000000145}, {'diff': 0.00035531999999999925},...</msg>
<status status="PASS" starttime="20201030 18:31:44.733" endtime="20201030 18:31:44.740"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:44.745" level="INFO">${ACCURACY} = {'diff': [0.0003613750000000006, 0.0003576389999999999, 0.0003563609999999995, 0.0003552920000000001, 0.00035655500000000145, 0.00035531999999999925, 0.00035782000000000175, 0.000385514, 0.00035661099...</msg>
<status status="PASS" starttime="20201030 18:31:44.742" endtime="20201030 18:31:44.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:44.750" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201030 18:31:44.749" endtime="20201030 18:31:44.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:44.752" level="INFO">VALUE: [0.0003613750000000006, 0.0003576389999999999, 0.0003563609999999995, 0.0003552920000000001, 0.00035655500000000145, 0.00035531999999999925, 0.00035782000000000175, 0.000385514, 0.00035661099999999973, 0.0003566249999999993, 0.0003563060000000007, 0.0003557089999999992, 0.0003574860000000006, 0.0003565700000000005, 0.00035624999999999893, 0.0003565830000000006, 0.0003556250000000018, 0.0003571249999999998, 0.00035630599999999374, 0.0003565139999999953, 0.0003559029999999977, 0.0003850970000000009, 0.00035590300000000463, 0.0003574449999999979, 0.0003574029999999992, 0.00035562500000000524, 0.0003576389999999999, 0.0003571389999999994, 0.0003555829999999996, 0.0003557920000000006, 0.00038522199999999757, 0.00035595800000000344, 0.000385013999999996, 0.0003569860000000036, 0.0003554449999999959, 0.0003558050000000007, 0.00035565199999999797, 0.00035719499999999765, 0.00035709700000000066, 0.0003855970000000014, 0.0003854589999999977, 0.0003851529999999992, 0.0003558880000000056, 0.0003565270000000023, 0.00035672200000000376, 0.00035561100000000567, 0.00035516700000000345, 0.00038554199999999567, 0.0003849859999999969, 0.0003562359999999959]</msg>
<status status="PASS" starttime="20201030 18:31:44.751" endtime="20201030 18:31:44.754"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.746" endtime="20201030 18:31:44.754"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:44.758" endtime="20201030 18:31:44.777"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.756" endtime="20201030 18:31:44.778"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.755" endtime="20201030 18:31:44.778"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.342" endtime="20201030 18:31:44.778"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.342" endtime="20201030 18:31:44.779"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:44.787" endtime="20201030 18:31:44.825"></status>
</kw>
<msg timestamp="20201030 18:31:44.826" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:44.786" endtime="20201030 18:31:44.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:44.828" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:44.827" endtime="20201030 18:31:44.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:44.829" endtime="20201030 18:31:44.831"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.783" endtime="20201030 18:31:44.832"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.781" endtime="20201030 18:31:44.832"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:44.838" endtime="20201030 18:31:45.124"></status>
</kw>
<msg timestamp="20201030 18:31:45.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024845569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025210653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:44.837" endtime="20201030 18:31:45.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:45.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024845569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025210653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:45.128" endtime="20201030 18:31:45.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:45.136" endtime="20201030 18:31:45.138"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.834" endtime="20201030 18:31:45.138"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.833" endtime="20201030 18:31:45.139"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:45.142" level="INFO">${RESULT} = [{'diff': 0.00036508399999999816}, {'diff': 0.00035645800000000047}, {'diff': 0.0003553200000000027}, {'diff': 0.0003571249999999998}, {'diff': 0.000355569}, {'diff': 0.00035615199999999847}, {'diff':...</msg>
<status status="PASS" starttime="20201030 18:31:45.139" endtime="20201030 18:31:45.143"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:45.147" level="INFO">${ACCURACY} = {'diff': [0.00036508399999999816, 0.00035645800000000047, 0.0003553200000000027, 0.0003571249999999998, 0.000355569, 0.00035615199999999847, 0.0003559999999999987, 0.0003567920000000016, 0.00035519399...</msg>
<status status="PASS" starttime="20201030 18:31:45.143" endtime="20201030 18:31:45.147"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:45.152" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201030 18:31:45.151" endtime="20201030 18:31:45.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:45.154" level="INFO">VALUE: [0.00036508399999999816, 0.00035645800000000047, 0.0003553200000000027, 0.0003571249999999998, 0.000355569, 0.00035615199999999847, 0.0003559999999999987, 0.0003567920000000016, 0.00035519399999999965, 0.00035663900000000234, 0.0003558339999999993, 0.00035669499999999715, 0.0003563060000000007, 0.00035527800000000054, 0.00035691699999999826, 0.000357457999999998, 0.00035624999999999893, 0.0003854719999999978, 0.00035670799999999725, 0.0003852360000000041, 0.0003553330000000063, 0.0003852639999999963, 0.0003563469999999999, 0.0003557920000000006, 0.0003854310000000055, 0.00035597199999999607, 0.00035570799999999625, 0.00035611099999999923, 0.0003553469999999989, 0.000356569000000001, 0.00038518099999999833, 0.0003854729999999973, 0.00035765299999999944, 0.00035537499999999805, 0.00035659700000000016, 0.00035632000000000025, 0.00035555599999999993, 0.00035791699999999926, 0.00035550000000000165, 0.00035658400000000007, 0.0003561950000000036, 0.00035773699999999686, 0.0003560139999999948, 0.00035537499999999805, 0.0003576380000000004, 0.0003578340000000013, 0.0003558339999999993, 0.0003564449999999969, 0.00035533299999999934, 0.00035626400000000197]</msg>
<status status="PASS" starttime="20201030 18:31:45.153" endtime="20201030 18:31:45.155"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.148" endtime="20201030 18:31:45.155"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:45.159" endtime="20201030 18:31:45.178"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.158" endtime="20201030 18:31:45.179"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.156" endtime="20201030 18:31:45.179"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.779" endtime="20201030 18:31:45.180"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.779" endtime="20201030 18:31:45.180"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:45.188" endtime="20201030 18:31:45.222"></status>
</kw>
<msg timestamp="20201030 18:31:45.223" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:45.187" endtime="20201030 18:31:45.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:45.225" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:45.224" endtime="20201030 18:31:45.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:45.226" endtime="20201030 18:31:45.228"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.184" endtime="20201030 18:31:45.228"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.182" endtime="20201030 18:31:45.229"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:45.235" endtime="20201030 18:31:45.537"></status>
</kw>
<msg timestamp="20201030 18:31:45.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020548306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020928403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:45.234" endtime="20201030 18:31:45.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:45.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020548306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020928403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:45.546" endtime="20201030 18:31:45.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:45.556" endtime="20201030 18:31:45.558"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.231" endtime="20201030 18:31:45.558"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.229" endtime="20201030 18:31:45.559"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:45.563" level="INFO">${RESULT} = [{'diff': 0.00038009700000000285}, {'diff': 0.0003572359999999969}, {'diff': 0.00035709700000000066}, {'diff': 0.00035616599999999804}, {'diff': 0.00038536100000000073}, {'diff': 0.0003852219999999975...</msg>
<status status="PASS" starttime="20201030 18:31:45.559" endtime="20201030 18:31:45.563"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:45.566" level="INFO">${ACCURACY} = {'diff': [0.00038009700000000285, 0.0003572359999999969, 0.00035709700000000066, 0.00035616599999999804, 0.00038536100000000073, 0.00038522199999999757, 0.00035765299999999944, 0.00035561099999999873,...</msg>
<status status="PASS" starttime="20201030 18:31:45.564" endtime="20201030 18:31:45.567"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:45.571" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201030 18:31:45.570" endtime="20201030 18:31:45.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:45.573" level="INFO">VALUE: [0.00038009700000000285, 0.0003572359999999969, 0.00035709700000000066, 0.00035616599999999804, 0.00038536100000000073, 0.00038522199999999757, 0.00035765299999999944, 0.00035561099999999873, 0.0003554999999999982, 0.00038502799999999907, 0.0003556389999999979, 0.000357554999999999, 0.0003567220000000003, 0.0003563479999999994, 0.0003850269999999996, 0.00035645899999999994, 0.00038488899999999937, 0.0003853200000000015, 0.00038526300000000027, 0.00038484800000000013, 0.00035555500000000045, 0.000357457999999998, 0.00035573600000000233, 0.00035497199999999854, 0.0003852360000000006, 0.00038516699999999876, 0.000356167000000001, 0.0003563890000000021, 0.00035661099999999626, 0.000356972000000004, 0.000356958999999997, 0.00035577700000000156, 0.00035676400000000247, 0.0003553609999999985, 0.0003577920000000026, 0.00035776399999999653, 0.0003553469999999989, 0.0003572500000000034, 0.00035570900000000266, 0.00038536100000000073, 0.0003848330000000011, 0.0003571389999999994, 0.0003564159999999983, 0.0003569579999999975, 0.0003563469999999999, 0.0003553479999999984, 0.0003850980000000004, 0.00038540299999999944, 0.0003569999999999962, 0.000356569000000001]</msg>
<status status="PASS" starttime="20201030 18:31:45.572" endtime="20201030 18:31:45.574"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.567" endtime="20201030 18:31:45.575"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:45.578" endtime="20201030 18:31:45.598"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.577" endtime="20201030 18:31:45.598"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.576" endtime="20201030 18:31:45.598"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.181" endtime="20201030 18:31:45.599"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.180" endtime="20201030 18:31:45.599"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:45.608" endtime="20201030 18:31:45.644"></status>
</kw>
<msg timestamp="20201030 18:31:45.644" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:45.606" endtime="20201030 18:31:45.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:45.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:45.646" endtime="20201030 18:31:45.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:45.648" endtime="20201030 18:31:45.650"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.603" endtime="20201030 18:31:45.650"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.601" endtime="20201030 18:31:45.651"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:45.657" endtime="20201030 18:31:45.943"></status>
</kw>
<msg timestamp="20201030 18:31:45.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023368, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023737319, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:31:45.655" endtime="20201030 18:31:45.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:45.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023368, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023737319, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:31:45.947" endtime="20201030 18:31:45.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:45.955" endtime="20201030 18:31:45.956"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.653" endtime="20201030 18:31:45.957"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.651" endtime="20201030 18:31:45.957"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:45.961" level="INFO">${RESULT} = [{'diff': 0.0003693189999999999}, {'diff': 0.0003564440000000009}, {'diff': 0.00035677799999999857}, {'diff': 0.00035527800000000054}, {'diff': 0.0003559999999999987}, {'diff': 0.000355860999999999}, ...</msg>
<status status="PASS" starttime="20201030 18:31:45.958" endtime="20201030 18:31:45.962"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:45.965" level="INFO">${ACCURACY} = {'diff': [0.0003693189999999999, 0.0003564440000000009, 0.00035677799999999857, 0.00035527800000000054, 0.0003559999999999987, 0.000355860999999999, 0.0003577080000000017, 0.0003579449999999984, 0.000...</msg>
<status status="PASS" starttime="20201030 18:31:45.962" endtime="20201030 18:31:45.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:45.970" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201030 18:31:45.969" endtime="20201030 18:31:45.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:45.972" level="INFO">VALUE: [0.0003693189999999999, 0.0003564440000000009, 0.00035677799999999857, 0.00035527800000000054, 0.0003559999999999987, 0.000355860999999999, 0.0003577080000000017, 0.0003579449999999984, 0.0003562219999999998, 0.0003556530000000009, 0.0003561800000000011, 0.00035658400000000007, 0.00035677800000000204, 0.00035581999999999975, 0.00035550000000000165, 0.00035618100000000055, 0.0003569999999999997, 0.0003578470000000014, 0.0003575279999999993, 0.00038534800000000063, 0.00035701399999999925, 0.0003854589999999977, 0.00035774999999999696, 0.0003574449999999979, 0.00035629100000000163, 0.0003563190000000008, 0.00035522300000000173, 0.00035608399999999957, 0.0003563469999999999, 0.0003853750000000003, 0.0003851110000000005, 0.0003851659999999993, 0.0003552630000000015, 0.0003570140000000027, 0.0003551939999999962, 0.0003564860000000031, 0.00035665299999999844, 0.0003562080000000037, 0.00038483400000000056, 0.0003557359999999954, 0.0003551389999999974, 0.0003554860000000021, 0.0003551249999999978, 0.00035562500000000524, 0.0003566799999999981, 0.0003565830000000006, 0.0003556810000000035, 0.00035774999999999696, 0.00035643099999999733, 0.0003570830000000011]</msg>
<status status="PASS" starttime="20201030 18:31:45.971" endtime="20201030 18:31:45.974"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.966" endtime="20201030 18:31:45.974"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:45.978" endtime="20201030 18:31:45.997"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.976" endtime="20201030 18:31:45.998"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.975" endtime="20201030 18:31:45.998"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.600" endtime="20201030 18:31:45.998"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.599" endtime="20201030 18:31:45.998"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:46.007" endtime="20201030 18:31:46.042"></status>
</kw>
<msg timestamp="20201030 18:31:46.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:46.006" endtime="20201030 18:31:46.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:46.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:46.043" endtime="20201030 18:31:46.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:46.046" endtime="20201030 18:31:46.047"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.003" endtime="20201030 18:31:46.048"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.001" endtime="20201030 18:31:46.048"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:46.055" endtime="20201030 18:31:46.356"></status>
</kw>
<msg timestamp="20201030 18:31:46.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020860597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021242833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:46.053" endtime="20201030 18:31:46.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:46.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020860597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021242833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:46.364" endtime="20201030 18:31:46.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:46.372" endtime="20201030 18:31:46.374"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.051" endtime="20201030 18:31:46.374"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.049" endtime="20201030 18:31:46.375"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:46.379" level="INFO">${RESULT} = [{'diff': 0.0003822359999999976}, {'diff': 0.00035595799999999997}, {'diff': 0.0003570409999999989}, {'diff': 0.0003852230000000005}, {'diff': 0.00035687499999999955}, {'diff': 0.0003570279999999988},...</msg>
<status status="PASS" starttime="20201030 18:31:46.376" endtime="20201030 18:31:46.379"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:46.384" level="INFO">${ACCURACY} = {'diff': [0.0003822359999999976, 0.00035595799999999997, 0.0003570409999999989, 0.0003852230000000005, 0.00035687499999999955, 0.0003570279999999988, 0.0003558469999999994, 0.0003555410000000009, 0.00...</msg>
<status status="PASS" starttime="20201030 18:31:46.380" endtime="20201030 18:31:46.384"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:46.388" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201030 18:31:46.387" endtime="20201030 18:31:46.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:46.390" level="INFO">VALUE: [0.0003822359999999976, 0.00035595799999999997, 0.0003570409999999989, 0.0003852230000000005, 0.00035687499999999955, 0.0003570279999999988, 0.0003558469999999994, 0.0003555410000000009, 0.0003560140000000017, 0.00035542999999999686, 0.000385319999999998, 0.00035724999999999993, 0.0003573470000000009, 0.00035630499999999773, 0.0003563620000000024, 0.00035759700000000116, 0.00035754200000000236, 0.00038498600000000036, 0.0003851800000000023, 0.0003556250000000018, 0.00035751399999999975, 0.0003554309999999998, 0.00038506900000000177, 0.00035566599999999754, 0.000385416999999999, 0.0003854299999999991, 0.0003569860000000001, 0.0003554860000000021, 0.00035759700000000116, 0.0003555280000000008, 0.0003570690000000015, 0.0003554170000000037, 0.0003576799999999991, 0.0003557080000000032, 0.0003559999999999952, 0.00035629100000000163, 0.000385611000000001, 0.0003574019999999997, 0.00035592999999999736, 0.0003570280000000023, 0.0003556389999999979, 0.0003568479999999999, 0.0003568340000000003, 0.0003565140000000022, 0.00035759700000000116, 0.0003576799999999991, 0.00038497200000000426, 0.00035583299999999984, 0.0003571530000000059, 0.0003849439999999982]</msg>
<status status="PASS" starttime="20201030 18:31:46.389" endtime="20201030 18:31:46.391"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.384" endtime="20201030 18:31:46.392"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:46.395" endtime="20201030 18:31:46.415"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.394" endtime="20201030 18:31:46.415"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.393" endtime="20201030 18:31:46.416"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.999" endtime="20201030 18:31:46.416"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.999" endtime="20201030 18:31:46.416"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:46.425" endtime="20201030 18:31:46.463"></status>
</kw>
<msg timestamp="20201030 18:31:46.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:46.423" endtime="20201030 18:31:46.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:46.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:46.465" endtime="20201030 18:31:46.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:46.467" endtime="20201030 18:31:46.469"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.420" endtime="20201030 18:31:46.469"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.418" endtime="20201030 18:31:46.469"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:46.476" endtime="20201030 18:31:46.762"></status>
</kw>
<msg timestamp="20201030 18:31:46.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020196681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020554278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:46.474" endtime="20201030 18:31:46.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:46.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020196681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020554278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:46.766" endtime="20201030 18:31:46.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:46.774" endtime="20201030 18:31:46.776"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.472" endtime="20201030 18:31:46.776"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.470" endtime="20201030 18:31:46.777"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:46.781" level="INFO">${RESULT} = [{'diff': 0.0003575969999999977}, {'diff': 0.0003848190000000015}, {'diff': 0.0003556389999999979}, {'diff': 0.00035595899999999944}, {'diff': 0.00035522299999999826}, {'diff': 0.000357666999999999}, ...</msg>
<status status="PASS" starttime="20201030 18:31:46.778" endtime="20201030 18:31:46.781"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:46.785" level="INFO">${ACCURACY} = {'diff': [0.0003575969999999977, 0.0003848190000000015, 0.0003556389999999979, 0.00035595899999999944, 0.00035522299999999826, 0.000357666999999999, 0.00035595799999999997, 0.0003573470000000009, 0.00...</msg>
<status status="PASS" starttime="20201030 18:31:46.782" endtime="20201030 18:31:46.785"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:46.789" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201030 18:31:46.788" endtime="20201030 18:31:46.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:46.792" level="INFO">VALUE: [0.0003575969999999977, 0.0003848190000000015, 0.0003556389999999979, 0.00035595899999999944, 0.00035522299999999826, 0.000357666999999999, 0.00035595799999999997, 0.0003573470000000009, 0.00035705599999999796, 0.00035715199999999947, 0.00038520800000000147, 0.0003562219999999998, 0.0003576389999999999, 0.0003851110000000005, 0.0003568059999999977, 0.00035650000000000265, 0.00035773600000000086, 0.0003849299999999986, 0.0003566379999999994, 0.0003848749999999998, 0.0003568890000000026, 0.0003556670000000005, 0.00035577799999999757, 0.00035684699999999694, 0.00035686100000000345, 0.00035547199999999904, 0.00038536100000000073, 0.00038497300000000026, 0.00035540300000000066, 0.00038555499999999923, 0.000357555999999995, 0.00035554200000000036, 0.0003851519999999997, 0.00035620799999999675, 0.0003558469999999994, 0.00035741699999999876, 0.00038523599999999714, 0.0003555829999999996, 0.00035677800000000204, 0.00035594400000000387, 0.0003553609999999985, 0.000355972000000003, 0.000355860999999999, 0.0003573340000000008, 0.00035691699999999826, 0.00035711100000000023, 0.0003574449999999979, 0.00038533400000000106, 0.00038538899999999987, 0.000357555999999995]</msg>
<status status="PASS" starttime="20201030 18:31:46.790" endtime="20201030 18:31:46.792"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.786" endtime="20201030 18:31:46.793"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:46.796" endtime="20201030 18:31:46.816"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.795" endtime="20201030 18:31:46.816"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.794" endtime="20201030 18:31:46.817"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.417" endtime="20201030 18:31:46.817"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.416" endtime="20201030 18:31:46.817"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:46.826" endtime="20201030 18:31:46.860"></status>
</kw>
<msg timestamp="20201030 18:31:46.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:46.824" endtime="20201030 18:31:46.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:46.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:46.862" endtime="20201030 18:31:46.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:46.865" endtime="20201030 18:31:46.866"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.822" endtime="20201030 18:31:46.867"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.819" endtime="20201030 18:31:46.867"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:46.873" endtime="20201030 18:31:47.159"></status>
</kw>
<msg timestamp="20201030 18:31:47.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021129736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021510819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:46.872" endtime="20201030 18:31:47.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:47.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021129736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021510819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:47.163" endtime="20201030 18:31:47.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:47.172" endtime="20201030 18:31:47.173"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.869" endtime="20201030 18:31:47.174"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.868" endtime="20201030 18:31:47.174"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:47.178" level="INFO">${RESULT} = [{'diff': 0.0003810830000000008}, {'diff': 0.0003568050000000017}, {'diff': 0.0003562080000000002}, {'diff': 0.00035555599999999993}, {'diff': 0.0003850550000000022}, {'diff': 0.0003574019999999997}, ...</msg>
<status status="PASS" starttime="20201030 18:31:47.175" endtime="20201030 18:31:47.178"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:47.182" level="INFO">${ACCURACY} = {'diff': [0.0003810830000000008, 0.0003568050000000017, 0.0003562080000000002, 0.00035555599999999993, 0.0003850550000000022, 0.0003574019999999997, 0.00035658400000000007, 0.00035633300000000034, 0.0...</msg>
<status status="PASS" starttime="20201030 18:31:47.179" endtime="20201030 18:31:47.182"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:47.186" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201030 18:31:47.185" endtime="20201030 18:31:47.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:47.189" level="INFO">VALUE: [0.0003810830000000008, 0.0003568050000000017, 0.0003562080000000002, 0.00035555599999999993, 0.0003850550000000022, 0.0003574019999999997, 0.00035658400000000007, 0.00035633300000000034, 0.0003562219999999998, 0.0003564999999999992, 0.00038490299999999894, 0.0003576250000000003, 0.0003850699999999978, 0.00035573600000000233, 0.0003560690000000005, 0.0003553609999999985, 0.0003554720000000025, 0.00038505499999999873, 0.0003571389999999994, 0.0003560830000000001, 0.0003848060000000014, 0.0003574310000000018, 0.0003850139999999995, 0.000356763999999999, 0.0003849299999999986, 0.0003554999999999982, 0.0003567920000000016, 0.00035568100000000005, 0.0003849580000000047, 0.0003572500000000034, 0.0003553469999999989, 0.0003563889999999986, 0.0003559860000000026, 0.00038522199999999757, 0.00035776400000000347, 0.0003850269999999961, 0.000355860999999999, 0.0003561940000000041, 0.00038512500000000005, 0.0003557920000000006, 0.0003569300000000053, 0.00035509699999999866, 0.0003852499999999967, 0.0003575700000000015, 0.00038501400000000296, 0.0003850970000000009, 0.0003848749999999998, 0.00035526400000000097, 0.0003576389999999999, 0.0003565700000000005]</msg>
<status status="PASS" starttime="20201030 18:31:47.188" endtime="20201030 18:31:47.190"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.183" endtime="20201030 18:31:47.191"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:47.195" endtime="20201030 18:31:47.214"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.193" endtime="20201030 18:31:47.215"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.192" endtime="20201030 18:31:47.215"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.818" endtime="20201030 18:31:47.215"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.817" endtime="20201030 18:31:47.215"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.403" endtime="20201030 18:31:47.215"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:47.219" endtime="20201030 18:31:47.238"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.218" endtime="20201030 18:31:47.239"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.216" endtime="20201030 18:31:47.239"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201030 18:31:06.334" endtime="20201030 18:31:47.240" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 18:30:23.935" endtime="20201030 18:31:47.243"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:31:47.301" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:31:47.309" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:31:48.484" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:31:47.299" endtime="20201030 18:31:48.484"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:31:48.488" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 18:31:48.486" endtime="20201030 18:31:48.488"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.298" endtime="20201030 18:31:48.489"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:48.492" endtime="20201030 18:31:48.735"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.490" endtime="20201030 18:31:48.736"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:48.748" endtime="20201030 18:31:48.769"></status>
</kw>
<msg timestamp="20201030 18:31:48.770" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['IOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:48.747" endtime="20201030 18:31:48.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:48.773" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['IOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:48.771" endtime="20201030 18:31:48.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:31:48.779" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:31:48.775" endtime="20201030 18:31:48.779"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:48.745" endtime="20201030 18:31:48.780"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:48.742" endtime="20201030 18:31:48.781"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.741" endtime="20201030 18:31:48.782"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:31:48.787" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:31:48.786" endtime="20201030 18:31:48.788"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.783" endtime="20201030 18:31:48.788"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.740" endtime="20201030 18:31:48.788"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.739" endtime="20201030 18:31:48.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:48.789" endtime="20201030 18:31:48.791"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.738" endtime="20201030 18:31:48.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:48.792" endtime="20201030 18:31:48.794"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.737" endtime="20201030 18:31:48.795"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.297" endtime="20201030 18:31:48.795"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:48.800" endtime="20201030 18:31:48.820"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.799" endtime="20201030 18:31:48.820"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:48.833" endtime="20201030 18:31:48.850"></status>
</kw>
<msg timestamp="20201030 18:31:48.851" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:48.832" endtime="20201030 18:31:48.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:48.853" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:48.852" endtime="20201030 18:31:48.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:31:48.856" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:31:48.854" endtime="20201030 18:31:48.856"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:48.829" endtime="20201030 18:31:48.857"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:48.827" endtime="20201030 18:31:48.858"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.826" endtime="20201030 18:31:48.858"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:31:48.863" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:31:48.861" endtime="20201030 18:31:48.863"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.859" endtime="20201030 18:31:48.863"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.825" endtime="20201030 18:31:48.864"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.824" endtime="20201030 18:31:48.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:48.864" endtime="20201030 18:31:48.866"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.823" endtime="20201030 18:31:48.866"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.821" endtime="20201030 18:31:48.867"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.798" endtime="20201030 18:31:48.867"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:48.875" endtime="20201030 18:31:54.979"></status>
</kw>
<msg timestamp="20201030 18:31:54.980" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:48.874" endtime="20201030 18:31:54.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:54.985" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:54.982" endtime="20201030 18:31:54.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:54.988" endtime="20201030 18:31:54.991"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.871" endtime="20201030 18:31:54.992"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.869" endtime="20201030 18:31:54.993"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:54.998" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 0, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201030 18:31:54.995" endtime="20201030 18:31:54.999"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:55.007" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:31:55.005" endtime="20201030 18:31:55.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:55.011" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:31:55.009" endtime="20201030 18:31:55.012"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.000" endtime="20201030 18:31:55.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:55.021" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:31:55.019" endtime="20201030 18:31:55.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:55.025" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:31:55.023" endtime="20201030 18:31:55.026"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.014" endtime="20201030 18:31:55.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:55.035" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:31:55.033" endtime="20201030 18:31:55.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:55.039" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201030 18:31:55.037" endtime="20201030 18:31:55.040"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.028" endtime="20201030 18:31:55.041"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:55.054" endtime="20201030 18:31:55.367"></status>
</kw>
<msg timestamp="20201030 18:31:55.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065688514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.165407903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:55.051" endtime="20201030 18:31:55.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:55.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065688514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.165407903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:55.371" endtime="20201030 18:31:55.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:55.379" endtime="20201030 18:31:55.381"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.045" endtime="20201030 18:31:55.381"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.042" endtime="20201030 18:31:55.382"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:31:55.386" level="INFO">${FILTERED} = [{'diff': 0.09971938899999999}, {'diff': 0.09969500000000003}, {'diff': 0.09967237499999998}, {'diff': 0.09964440299999999}, {'diff': 0.09967056900000004}, {'diff': 0.09966444399999996}, {'diff': 0.09...</msg>
<status status="PASS" starttime="20201030 18:31:55.382" endtime="20201030 18:31:55.386"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:55.389" level="INFO">${RESULT} = {'diff': [0.09971938899999999, 0.09969500000000003, 0.09967237499999998, 0.09964440299999999, 0.09967056900000004, 0.09966444399999996, 0.09966405499999997, 0.09965380600000007, 0.09965908400000001, 0...</msg>
<status status="PASS" starttime="20201030 18:31:55.387" endtime="20201030 18:31:55.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:55.393" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:31:55.392" endtime="20201030 18:31:55.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:55.396" level="INFO">VALUE: [0.09971938899999999, 0.09969500000000003, 0.09967237499999998, 0.09964440299999999, 0.09967056900000004, 0.09966444399999996, 0.09966405499999997, 0.09965380600000007, 0.09965908400000001, 0.09962673600000005, 0.09965224999999989, 0.099677236, 0.09966454099999988, 0.09965369400000013, 0.09962201399999993, 0.09965165199999992, 0.09965863900000005, 0.09965695799999996, 0.09966065300000015, 0.09962148599999976, 0.09965516600000024, 0.09965409699999972, 0.09965837500000019, 0.09969526400000017, 0.09966738899999994, 0.0996870689999998, 0.09965956900000039, 0.09966849999999994, 0.09966624999999985, 0.09964576399999991, 0.09968029100000031, 0.09965695799999974, 0.09966584700000025, 0.09966613899999999, 0.09962940299999978, 0.09965952799999966, 0.09968163899999993, 0.09970658399999976, 0.099688848, 0.09965480599999976, 0.09966729199999946, 0.09967098599999957, 0.0996857499999999, 0.09966269500000013, 0.09963072299999975, 0.09966143099999947, 0.09966450000000027, 0.09969726400000045, 0.09969050000000035, 0.09962579199999944, 0.0996455420000002]</msg>
<status status="PASS" starttime="20201030 18:31:55.395" endtime="20201030 18:31:55.397"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.390" endtime="20201030 18:31:55.397"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:55.401" endtime="20201030 18:31:55.420"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.399" endtime="20201030 18:31:55.421"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.398" endtime="20201030 18:31:55.421"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.868" endtime="20201030 18:31:55.421"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201030 18:31:48.795" endtime="20201030 18:31:55.422" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:55.428" endtime="20201030 18:31:55.447"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.427" endtime="20201030 18:31:55.448"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:55.462" endtime="20201030 18:31:55.480"></status>
</kw>
<msg timestamp="20201030 18:31:55.480" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:55.460" endtime="20201030 18:31:55.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:55.483" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:55.481" endtime="20201030 18:31:55.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:31:55.486" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:31:55.484" endtime="20201030 18:31:55.486"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:55.458" endtime="20201030 18:31:55.487"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:55.455" endtime="20201030 18:31:55.487"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.453" endtime="20201030 18:31:55.487"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:31:55.491" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:31:55.490" endtime="20201030 18:31:55.492"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.488" endtime="20201030 18:31:55.492"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.452" endtime="20201030 18:31:55.492"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.452" endtime="20201030 18:31:55.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:55.493" endtime="20201030 18:31:55.494"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.450" endtime="20201030 18:31:55.495"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.449" endtime="20201030 18:31:55.495"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.425" endtime="20201030 18:31:55.495"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:55.504" endtime="20201030 18:32:01.613"></status>
</kw>
<msg timestamp="20201030 18:32:01.614" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:55.502" endtime="20201030 18:32:01.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:01.619" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:01.616" endtime="20201030 18:32:01.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:01.622" endtime="20201030 18:32:01.625"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.499" endtime="20201030 18:32:01.626"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.497" endtime="20201030 18:32:01.627"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:01.632" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 5, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201030 18:32:01.629" endtime="20201030 18:32:01.633"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:01.640" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:32:01.638" endtime="20201030 18:32:01.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:01.645" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:32:01.643" endtime="20201030 18:32:01.645"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.634" endtime="20201030 18:32:01.646"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:01.655" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:32:01.652" endtime="20201030 18:32:01.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:01.670" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:32:01.659" endtime="20201030 18:32:01.671"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.648" endtime="20201030 18:32:01.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:01.690" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:32:01.684" endtime="20201030 18:32:01.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:01.699" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201030 18:32:01.693" endtime="20201030 18:32:01.700"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.677" endtime="20201030 18:32:01.702"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:01.715" endtime="20201030 18:32:02.012"></status>
</kw>
<msg timestamp="20201030 18:32:02.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069761153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.169525028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:01.712" endtime="20201030 18:32:02.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:02.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069761153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.169525028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:02.016" endtime="20201030 18:32:02.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:02.024" endtime="20201030 18:32:02.025"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.707" endtime="20201030 18:32:02.026"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.703" endtime="20201030 18:32:02.026"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:32:02.030" level="INFO">${FILTERED} = [{'diff': 0.09976387499999999}, {'diff': 0.09968601399999999}, {'diff': 0.09968787499999998}, {'diff': 0.09968874999999999}, {'diff': 0.099667167}, {'diff': 0.099686194}, {'diff': 0.09969341600000003}...</msg>
<status status="PASS" starttime="20201030 18:32:02.027" endtime="20201030 18:32:02.030"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:02.034" level="INFO">${RESULT} = {'diff': [0.09976387499999999, 0.09968601399999999, 0.09968787499999998, 0.09968874999999999, 0.099667167, 0.099686194, 0.09969341600000003, 0.09972719499999994, 0.09972000000000003, 0.099673416999999...</msg>
<status status="PASS" starttime="20201030 18:32:02.031" endtime="20201030 18:32:02.034"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:02.039" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:32:02.038" endtime="20201030 18:32:02.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:02.041" level="INFO">VALUE: [0.09976387499999999, 0.09968601399999999, 0.09968787499999998, 0.09968874999999999, 0.099667167, 0.099686194, 0.09969341600000003, 0.09972719499999994, 0.09972000000000003, 0.09967341699999999, 0.09969577800000007, 0.09969245900000012, 0.09970922199999999, 0.099694014, 0.09967477700000016, 0.09970768099999994, 0.09967470900000008, 0.09967761099999994, 0.09969076399999999, 0.09968747200000005, 0.09967891699999987, 0.09969054200000027, 0.09971912500000002, 0.09970740300000003, 0.09965456999999978, 0.09967191600000014, 0.09967480499999981, 0.09972311099999986, 0.09968309699999978, 0.0996723610000001, 0.09968302800000028, 0.09969027699999966, 0.09967355599999994, 0.09966588899999973, 0.09966768100000012, 0.09968630500000009, 0.09970259799999992, 0.0996864310000003, 0.09968380599999982, 0.0996467080000003, 0.09972026399999923, 0.09972586099999958, 0.09971325000000064, 0.09970477700000036, 0.09969080599999991, 0.09969252800000028, 0.09969697200000027, 0.09967600000000054, 0.09967879200000063, 0.0996401389999999, 0.09968101399999973]</msg>
<status status="PASS" starttime="20201030 18:32:02.040" endtime="20201030 18:32:02.042"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.035" endtime="20201030 18:32:02.043"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:02.046" endtime="20201030 18:32:02.065"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.045" endtime="20201030 18:32:02.066"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.044" endtime="20201030 18:32:02.066"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.496" endtime="20201030 18:32:02.067"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201030 18:31:55.423" endtime="20201030 18:32:02.067" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:02.074" endtime="20201030 18:32:02.093"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.072" endtime="20201030 18:32:02.093"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:02.106" endtime="20201030 18:32:02.125"></status>
</kw>
<msg timestamp="20201030 18:32:02.126" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:02.105" endtime="20201030 18:32:02.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:02.128" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:02.127" endtime="20201030 18:32:02.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:32:02.131" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:32:02.129" endtime="20201030 18:32:02.132"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:02.102" endtime="20201030 18:32:02.132"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:02.100" endtime="20201030 18:32:02.133"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.098" endtime="20201030 18:32:02.133"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:32:02.137" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:32:02.136" endtime="20201030 18:32:02.137"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.134" endtime="20201030 18:32:02.137"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.098" endtime="20201030 18:32:02.137"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.097" endtime="20201030 18:32:02.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:02.138" endtime="20201030 18:32:02.140"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.096" endtime="20201030 18:32:02.140"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.094" endtime="20201030 18:32:02.141"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.071" endtime="20201030 18:32:02.141"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:02.150" endtime="20201030 18:32:08.257"></status>
</kw>
<msg timestamp="20201030 18:32:08.258" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:02.149" endtime="20201030 18:32:08.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:08.264" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:08.261" endtime="20201030 18:32:08.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:08.267" endtime="20201030 18:32:08.270"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.145" endtime="20201030 18:32:08.271"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.143" endtime="20201030 18:32:08.272"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:08.277" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 10, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201030 18:32:08.274" endtime="20201030 18:32:08.277"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:08.285" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:32:08.283" endtime="20201030 18:32:08.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:08.289" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:32:08.287" endtime="20201030 18:32:08.290"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.279" endtime="20201030 18:32:08.291"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:08.298" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:32:08.297" endtime="20201030 18:32:08.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:08.300" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:32:08.299" endtime="20201030 18:32:08.301"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.292" endtime="20201030 18:32:08.301"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:08.305" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:32:08.304" endtime="20201030 18:32:08.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:08.307" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201030 18:32:08.306" endtime="20201030 18:32:08.307"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.302" endtime="20201030 18:32:08.308"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:08.314" endtime="20201030 18:32:08.611"></status>
</kw>
<msg timestamp="20201030 18:32:08.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071038958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.170741139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:08.313" endtime="20201030 18:32:08.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:08.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071038958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.170741139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:08.615" endtime="20201030 18:32:08.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:08.625" endtime="20201030 18:32:08.628"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.310" endtime="20201030 18:32:08.630"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.308" endtime="20201030 18:32:08.630"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:32:08.640" level="INFO">${FILTERED} = [{'diff': 0.09970218099999999}, {'diff': 0.09966722199999997}, {'diff': 0.09966393099999998}, {'diff': 0.09966148600000002}, {'diff': 0.09961027799999994}, {'diff': 0.0996386669999999}, {'diff': 0.099...</msg>
<status status="PASS" starttime="20201030 18:32:08.631" endtime="20201030 18:32:08.642"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:08.653" level="INFO">${RESULT} = {'diff': [0.09970218099999999, 0.09966722199999997, 0.09966393099999998, 0.09966148600000002, 0.09961027799999994, 0.0996386669999999, 0.09966991599999997, 0.09968501399999996, 0.09966368000000003, 0....</msg>
<status status="PASS" starttime="20201030 18:32:08.649" endtime="20201030 18:32:08.653"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:08.660" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:32:08.658" endtime="20201030 18:32:08.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:08.665" level="INFO">VALUE: [0.09970218099999999, 0.09966722199999997, 0.09966393099999998, 0.09966148600000002, 0.09961027799999994, 0.0996386669999999, 0.09966991599999997, 0.09968501399999996, 0.09966368000000003, 0.09963261099999998, 0.09965880500000002, 0.09965452800000008, 0.09965309700000002, 0.09966688899999987, 0.09963504200000006, 0.09966602699999982, 0.09967298600000007, 0.09964470800000003, 0.0996630140000001, 0.09965819499999995, 0.09966341599999984, 0.09965900000000039, 0.09966509699999992, 0.09967947300000013, 0.09965586100000001, 0.09968687500000017, 0.0996719159999997, 0.09968997200000018, 0.09968475000000021, 0.09966350000000013, 0.09968747199999983, 0.09966719399999979, 0.09967174999999973, 0.09967834699999978, 0.09964323599999991, 0.09968827700000027, 0.09965877799999978, 0.09965930599999995, 0.09965638900000018, 0.09961951400000002, 0.09967061100000052, 0.09967669400000023, 0.09965624999999978, 0.09965175000000048, 0.09961793100000005, 0.09969663899999937, 0.0996894450000001, 0.09967606999999923, 0.0996777230000001, 0.09963201399999999, 0.09967429200000044]</msg>
<status status="PASS" starttime="20201030 18:32:08.662" endtime="20201030 18:32:08.666"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.654" endtime="20201030 18:32:08.667"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:08.673" endtime="20201030 18:32:08.693"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.671" endtime="20201030 18:32:08.694"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.669" endtime="20201030 18:32:08.695"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.142" endtime="20201030 18:32:08.695"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201030 18:32:02.069" endtime="20201030 18:32:08.696" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:08.706" endtime="20201030 18:32:08.726"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.704" endtime="20201030 18:32:08.727"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:08.744" endtime="20201030 18:32:08.762"></status>
</kw>
<msg timestamp="20201030 18:32:08.763" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:08.741" endtime="20201030 18:32:08.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:08.765" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:08.764" endtime="20201030 18:32:08.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:32:08.768" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:32:08.766" endtime="20201030 18:32:08.769"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:08.738" endtime="20201030 18:32:08.769"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:08.735" endtime="20201030 18:32:08.770"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.734" endtime="20201030 18:32:08.770"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:32:08.774" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:32:08.773" endtime="20201030 18:32:08.775"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.771" endtime="20201030 18:32:08.775"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.733" endtime="20201030 18:32:08.775"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.732" endtime="20201030 18:32:08.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:08.776" endtime="20201030 18:32:08.778"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.731" endtime="20201030 18:32:08.778"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.728" endtime="20201030 18:32:08.779"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.702" endtime="20201030 18:32:08.779"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:08.787" endtime="20201030 18:32:14.894"></status>
</kw>
<msg timestamp="20201030 18:32:14.895" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:08.786" endtime="20201030 18:32:14.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:14.901" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:14.898" endtime="20201030 18:32:14.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:14.904" endtime="20201030 18:32:14.907"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.783" endtime="20201030 18:32:14.908"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.781" endtime="20201030 18:32:14.909"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:14.915" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 15, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201030 18:32:14.911" endtime="20201030 18:32:14.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:14.923" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:32:14.921" endtime="20201030 18:32:14.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:14.927" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:32:14.925" endtime="20201030 18:32:14.928"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.916" endtime="20201030 18:32:14.929"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:14.937" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:32:14.935" endtime="20201030 18:32:14.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:14.941" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:32:14.939" endtime="20201030 18:32:14.942"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.930" endtime="20201030 18:32:14.943"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:14.951" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:32:14.949" endtime="20201030 18:32:14.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:14.955" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201030 18:32:14.953" endtime="20201030 18:32:14.956"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.944" endtime="20201030 18:32:14.957"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:14.968" endtime="20201030 18:32:15.263"></status>
</kw>
<msg timestamp="20201030 18:32:15.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074506528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.174322347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:14.965" endtime="20201030 18:32:15.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:15.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074506528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.174322347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:15.267" endtime="20201030 18:32:15.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:15.275" endtime="20201030 18:32:15.277"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.962" endtime="20201030 18:32:15.277"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.958" endtime="20201030 18:32:15.278"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:32:15.282" level="INFO">${FILTERED} = [{'diff': 0.09981581899999999}, {'diff': 0.09970330499999999}, {'diff': 0.09967167999999998}, {'diff': 0.09968212500000001}, {'diff': 0.09963122199999996}, {'diff': 0.09968068000000008}, {'diff': 0.09...</msg>
<status status="PASS" starttime="20201030 18:32:15.278" endtime="20201030 18:32:15.282"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:15.286" level="INFO">${RESULT} = {'diff': [0.09981581899999999, 0.09970330499999999, 0.09967167999999998, 0.09968212500000001, 0.09963122199999996, 0.09968068000000008, 0.09967854100000006, 0.099665208, 0.09965274999999996, 0.0996288...</msg>
<status status="PASS" starttime="20201030 18:32:15.283" endtime="20201030 18:32:15.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:15.290" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:32:15.289" endtime="20201030 18:32:15.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:15.292" level="INFO">VALUE: [0.09981581899999999, 0.09970330499999999, 0.09967167999999998, 0.09968212500000001, 0.09963122199999996, 0.09968068000000008, 0.09967854100000006, 0.099665208, 0.09965274999999996, 0.09962884699999996, 0.099688, 0.09969659699999989, 0.09965290299999996, 0.09966248600000016, 0.09962344499999998, 0.099655528, 0.09965426399999999, 0.09966672300000012, 0.0996523199999999, 0.09962961199999998, 0.09964911100000018, 0.099659194, 0.09964947199999985, 0.0996578050000001, 0.09962233299999967, 0.09964672199999969, 0.09965102800000025, 0.09967288899999982, 0.09969720900000034, 0.0996250970000001, 0.09967709699999983, 0.09965605600000016, 0.09968951400000003, 0.09966449999999982, 0.09961736200000004, 0.09964991700000025, 0.09968687500000017, 0.09966890299999998, 0.0996581110000001, 0.09963569399999939, 0.09966065299999993, 0.09967280499999998, 0.09964855499999992, 0.09964929199999961, 0.09962556999999972, 0.09968068099999972, 0.09966931899999931, 0.09964534700000005, 0.09963363900000033, 0.09961572200000024, 0.09965308299999975]</msg>
<status status="PASS" starttime="20201030 18:32:15.291" endtime="20201030 18:32:15.293"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.286" endtime="20201030 18:32:15.293"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:15.297" endtime="20201030 18:32:15.316"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.295" endtime="20201030 18:32:15.317"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.294" endtime="20201030 18:32:15.317"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.780" endtime="20201030 18:32:15.317"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201030 18:32:08.698" endtime="20201030 18:32:15.318" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:15.324" endtime="20201030 18:32:15.345"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.323" endtime="20201030 18:32:15.345"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:15.358" endtime="20201030 18:32:15.379"></status>
</kw>
<msg timestamp="20201030 18:32:15.380" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:15.357" endtime="20201030 18:32:15.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:15.382" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:15.381" endtime="20201030 18:32:15.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:32:15.385" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:32:15.383" endtime="20201030 18:32:15.386"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:15.354" endtime="20201030 18:32:15.386"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:15.352" endtime="20201030 18:32:15.387"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.350" endtime="20201030 18:32:15.387"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:32:15.391" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:32:15.390" endtime="20201030 18:32:15.391"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.388" endtime="20201030 18:32:15.391"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.349" endtime="20201030 18:32:15.392"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.349" endtime="20201030 18:32:15.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:15.392" endtime="20201030 18:32:15.394"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.348" endtime="20201030 18:32:15.394"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.346" endtime="20201030 18:32:15.395"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.322" endtime="20201030 18:32:15.395"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:15.403" endtime="20201030 18:32:21.512"></status>
</kw>
<msg timestamp="20201030 18:32:21.513" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:15.402" endtime="20201030 18:32:21.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:21.518" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:21.515" endtime="20201030 18:32:21.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:21.521" endtime="20201030 18:32:21.527"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.399" endtime="20201030 18:32:21.528"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.397" endtime="20201030 18:32:21.529"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:21.534" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 20, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201030 18:32:21.531" endtime="20201030 18:32:21.535"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:21.543" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:32:21.541" endtime="20201030 18:32:21.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:21.547" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:32:21.545" endtime="20201030 18:32:21.548"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.536" endtime="20201030 18:32:21.549"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:21.557" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:32:21.555" endtime="20201030 18:32:21.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:21.561" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:32:21.559" endtime="20201030 18:32:21.562"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.550" endtime="20201030 18:32:21.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:21.571" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:32:21.569" endtime="20201030 18:32:21.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:21.575" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201030 18:32:21.573" endtime="20201030 18:32:21.576"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.564" endtime="20201030 18:32:21.577"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:21.587" endtime="20201030 18:32:21.883"></status>
</kw>
<msg timestamp="20201030 18:32:21.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072666417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.172841139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:21.585" endtime="20201030 18:32:21.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:21.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072666417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.172841139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:21.887" endtime="20201030 18:32:21.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:21.895" endtime="20201030 18:32:21.897"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.582" endtime="20201030 18:32:21.897"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.578" endtime="20201030 18:32:21.898"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:32:21.902" level="INFO">${FILTERED} = [{'diff': 0.10017472200000001}, {'diff': 0.09927781900000002}, {'diff': 0.09965672199999998}, {'diff': 0.09964337500000003}, {'diff': 0.09962555500000003}, {'diff': 0.09966229199999999}, {'diff': 0.09...</msg>
<status status="PASS" starttime="20201030 18:32:21.898" endtime="20201030 18:32:21.902"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:21.906" level="INFO">${RESULT} = {'diff': [0.10017472200000001, 0.09927781900000002, 0.09965672199999998, 0.09964337500000003, 0.09962555500000003, 0.09966229199999999, 0.09965012500000003, 0.09965217999999998, 0.09965479100000008, 0...</msg>
<status status="PASS" starttime="20201030 18:32:21.903" endtime="20201030 18:32:21.907"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:21.911" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:32:21.910" endtime="20201030 18:32:21.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:21.923" level="INFO">VALUE: [0.10017472200000001, 0.09927781900000002, 0.09965672199999998, 0.09964337500000003, 0.09962555500000003, 0.09966229199999999, 0.09965012500000003, 0.09965217999999998, 0.09965479100000008, 0.09961911099999998, 0.09964945899999988, 0.09964700000000004, 0.09964573599999982, 0.09964768000000013, 0.09961240300000007, 0.09965770899999993, 0.09966302799999993, 0.09969277800000009, 0.09964758399999996, 0.09966615299999981, 0.09962397200000028, 0.09965347199999997, 0.0996493329999999, 0.09965219399999992, 0.0996440970000001, 0.09962479200000018, 0.09964990299999998, 0.09965788899999994, 0.09965304199999991, 0.09963437500000039, 0.09966351399999995, 0.09965777800000009, 0.09965115299999994, 0.09967090299999981, 0.09966109700000025, 0.09966895800000009, 0.09966727799999964, 0.09967729100000033, 0.09969255499999985, 0.09964331999999976, 0.09965263900000032, 0.09965790300000066, 0.09969894400000001, 0.09967751399999969, 0.09964248599999959, 0.09960634700000082, 0.09963977800000023, 0.09963830600000012, 0.09964270800000019, 0.0996588049999998, 0.09964295799999956]</msg>
<status status="PASS" starttime="20201030 18:32:21.922" endtime="20201030 18:32:21.924"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.907" endtime="20201030 18:32:21.925"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:21.928" endtime="20201030 18:32:21.948"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.927" endtime="20201030 18:32:21.948"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.926" endtime="20201030 18:32:21.949"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.396" endtime="20201030 18:32:21.949"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201030 18:32:15.319" endtime="20201030 18:32:21.950" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:21.956" endtime="20201030 18:32:21.975"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.955" endtime="20201030 18:32:21.976"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:21.989" endtime="20201030 18:32:22.010"></status>
</kw>
<msg timestamp="20201030 18:32:22.010" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:21.988" endtime="20201030 18:32:22.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:22.013" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:22.011" endtime="20201030 18:32:22.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:32:22.016" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:32:22.014" endtime="20201030 18:32:22.016"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:21.985" endtime="20201030 18:32:22.017"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:21.982" endtime="20201030 18:32:22.017"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.981" endtime="20201030 18:32:22.018"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:32:22.021" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:32:22.021" endtime="20201030 18:32:22.022"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.018" endtime="20201030 18:32:22.022"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.980" endtime="20201030 18:32:22.022"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.980" endtime="20201030 18:32:22.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:22.023" endtime="20201030 18:32:22.025"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.978" endtime="20201030 18:32:22.025"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.977" endtime="20201030 18:32:22.026"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.953" endtime="20201030 18:32:22.026"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:22.034" endtime="20201030 18:32:28.138"></status>
</kw>
<msg timestamp="20201030 18:32:28.139" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:22.032" endtime="20201030 18:32:28.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:28.144" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:28.141" endtime="20201030 18:32:28.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:28.147" endtime="20201030 18:32:28.150"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.030" endtime="20201030 18:32:28.151"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.028" endtime="20201030 18:32:28.152"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:28.156" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 25, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201030 18:32:28.154" endtime="20201030 18:32:28.156"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:28.160" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:32:28.159" endtime="20201030 18:32:28.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:28.162" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:32:28.161" endtime="20201030 18:32:28.162"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.157" endtime="20201030 18:32:28.163"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:28.167" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:32:28.166" endtime="20201030 18:32:28.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:28.169" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:32:28.168" endtime="20201030 18:32:28.169"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.163" endtime="20201030 18:32:28.170"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:28.174" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:32:28.173" endtime="20201030 18:32:28.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:28.175" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201030 18:32:28.175" endtime="20201030 18:32:28.176"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.170" endtime="20201030 18:32:28.176"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:28.184" endtime="20201030 18:32:28.482"></status>
</kw>
<msg timestamp="20201030 18:32:28.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068466736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.168173569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:28.181" endtime="20201030 18:32:28.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:28.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068466736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.168173569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:28.486" endtime="20201030 18:32:28.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:28.494" endtime="20201030 18:32:28.496"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.179" endtime="20201030 18:32:28.496"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.177" endtime="20201030 18:32:28.497"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:32:28.500" level="INFO">${FILTERED} = [{'diff': 0.099706833}, {'diff': 0.09965300000000002}, {'diff': 0.09966316700000005}, {'diff': 0.09969723600000002}, {'diff': 0.09965734699999995}, {'diff': 0.09966097200000001}, {'diff': 0.0996626810...</msg>
<status status="PASS" starttime="20201030 18:32:28.497" endtime="20201030 18:32:28.501"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:28.505" level="INFO">${RESULT} = {'diff': [0.099706833, 0.09965300000000002, 0.09966316700000005, 0.09969723600000002, 0.09965734699999995, 0.09966097200000001, 0.09966268100000009, 0.09965897199999996, 0.09966038900000007, 0.0996342...</msg>
<status status="PASS" starttime="20201030 18:32:28.502" endtime="20201030 18:32:28.505"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:28.509" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:32:28.508" endtime="20201030 18:32:28.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:28.511" level="INFO">VALUE: [0.099706833, 0.09965300000000002, 0.09966316700000005, 0.09969723600000002, 0.09965734699999995, 0.09966097200000001, 0.09966268100000009, 0.09965897199999996, 0.09966038900000007, 0.09963426399999997, 0.09964240300000005, 0.09964642999999995, 0.09965304200000014, 0.09968737500000002, 0.09963030500000003, 0.09965722200000005, 0.09964663899999993, 0.0996499580000001, 0.09966427799999988, 0.09964833400000006, 0.0996565829999998, 0.09965579200000008, 0.09965595900000013, 0.09966505600000009, 0.09966234799999985, 0.09968522299999982, 0.09965151400000005, 0.09964736099999971, 0.099646597, 0.09965352800000016, 0.09966624999999985, 0.09966711099999959, 0.09963979100000042, 0.09965190299999982, 0.09964170800000005, 0.09963441599999978, 0.09965177800000014, 0.09967986100000026, 0.09965054200000001, 0.09962363899999982, 0.09965400000000013, 0.09967262500000018, 0.09966348600000074, 0.09965665300000026, 0.09965250000000037, 0.09966608400000077, 0.09965377800000041, 0.09965762499999986, 0.09966616699999964, 0.09965679100000013, 0.09970327800000067]</msg>
<status status="PASS" starttime="20201030 18:32:28.510" endtime="20201030 18:32:28.512"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.505" endtime="20201030 18:32:28.512"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:28.516" endtime="20201030 18:32:28.535"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.514" endtime="20201030 18:32:28.536"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.513" endtime="20201030 18:32:28.536"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.026" endtime="20201030 18:32:28.536"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201030 18:32:21.951" endtime="20201030 18:32:28.537" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 18:31:47.257" endtime="20201030 18:32:28.544"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">frdm-kw41z</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201030 18:29:37.443" endtime="20201030 18:32:28.576"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="18" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="18" fail="0">BOARD_frdm-kw41z</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_ztimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_ztimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_ztimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
