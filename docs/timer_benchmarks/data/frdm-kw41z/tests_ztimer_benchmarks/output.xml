<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201103 12:36:21.292" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201103 12:36:21.865" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201103 12:36:21.874" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201103 12:36:23.066" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201103 12:36:21.864" endtime="20201103 12:36:23.067"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201103 12:36:23.069" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201103 12:36:23.068" endtime="20201103 12:36:23.070"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:21.862" endtime="20201103 12:36:23.070"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201103 12:36:23.073" endtime="20201103 12:36:23.285"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:23.071" endtime="20201103 12:36:23.287"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:36:23.313" endtime="20201103 12:36:23.335"></status>
</kw>
<msg timestamp="20201103 12:36:23.336" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [' RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201103 12:36:23.310" endtime="20201103 12:36:23.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201103 12:36:23.338" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [' RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201103 12:36:23.337" endtime="20201103 12:36:23.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201103 12:36:23.342" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201103 12:36:23.340" endtime="20201103 12:36:23.342"></status>
</kw>
<status status="FAIL" starttime="20201103 12:36:23.305" endtime="20201103 12:36:23.343"></status>
</kw>
<status status="FAIL" starttime="20201103 12:36:23.300" endtime="20201103 12:36:23.343"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:23.298" endtime="20201103 12:36:23.344"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201103 12:36:23.348" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201103 12:36:23.348" endtime="20201103 12:36:23.349"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:23.345" endtime="20201103 12:36:23.349"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:23.296" endtime="20201103 12:36:23.349"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:23.294" endtime="20201103 12:36:23.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201103 12:36:23.350" endtime="20201103 12:36:23.352"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:23.291" endtime="20201103 12:36:23.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:36:23.353" endtime="20201103 12:36:23.354"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:23.288" endtime="20201103 12:36:23.355"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:21.861" endtime="20201103 12:36:23.355"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201103 12:36:23.361" endtime="20201103 12:36:23.380"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:23.360" endtime="20201103 12:36:23.381"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:36:23.395" endtime="20201103 12:36:23.414"></status>
</kw>
<msg timestamp="20201103 12:36:23.414" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201103 12:36:23.393" endtime="20201103 12:36:23.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201103 12:36:23.417" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201103 12:36:23.415" endtime="20201103 12:36:23.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201103 12:36:23.420" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201103 12:36:23.418" endtime="20201103 12:36:23.420"></status>
</kw>
<status status="FAIL" starttime="20201103 12:36:23.390" endtime="20201103 12:36:23.421"></status>
</kw>
<status status="FAIL" starttime="20201103 12:36:23.388" endtime="20201103 12:36:23.421"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:23.386" endtime="20201103 12:36:23.422"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201103 12:36:23.425" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201103 12:36:23.425" endtime="20201103 12:36:23.426"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:23.423" endtime="20201103 12:36:23.426"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:23.385" endtime="20201103 12:36:23.426"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:23.385" endtime="20201103 12:36:23.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201103 12:36:23.427" endtime="20201103 12:36:23.429"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:23.383" endtime="20201103 12:36:23.429"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:23.382" endtime="20201103 12:36:23.430"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:23.358" endtime="20201103 12:36:23.431"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:36:23.440" endtime="20201103 12:36:23.458"></status>
</kw>
<msg timestamp="20201103 12:36:23.458" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201103 12:36:23.438" endtime="20201103 12:36:23.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201103 12:36:23.461" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201103 12:36:23.459" endtime="20201103 12:36:23.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:36:23.462" endtime="20201103 12:36:23.463"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:23.434" endtime="20201103 12:36:23.464"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:23.432" endtime="20201103 12:36:23.464"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201103 12:36:23.468" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201103 12:36:23.467" endtime="20201103 12:36:23.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201103 12:36:23.470" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201103 12:36:23.469" endtime="20201103 12:36:23.471"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:23.465" endtime="20201103 12:36:23.471"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201103 12:36:23.356" endtime="20201103 12:36:23.472" critical="yes"></status>
</test>
<status status="PASS" starttime="20201103 12:36:21.414" endtime="20201103 12:36:23.474"></status>
</suite>
<suite id="s1-s2" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201103 12:36:23.524" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201103 12:36:23.535" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201103 12:36:24.708" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201103 12:36:23.523" endtime="20201103 12:36:24.709"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201103 12:36:24.712" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201103 12:36:24.710" endtime="20201103 12:36:24.712"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:23.521" endtime="20201103 12:36:24.712"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201103 12:36:24.714" endtime="20201103 12:36:24.984"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:24.713" endtime="20201103 12:36:24.984"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:36:24.997" endtime="20201103 12:36:25.016"></status>
</kw>
<msg timestamp="20201103 12:36:25.016" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['(Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201103 12:36:24.995" endtime="20201103 12:36:25.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201103 12:36:25.023" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['(Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201103 12:36:25.018" endtime="20201103 12:36:25.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201103 12:36:25.030" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201103 12:36:25.025" endtime="20201103 12:36:25.031"></status>
</kw>
<status status="FAIL" starttime="20201103 12:36:24.993" endtime="20201103 12:36:25.032"></status>
</kw>
<status status="FAIL" starttime="20201103 12:36:24.991" endtime="20201103 12:36:25.033"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:24.989" endtime="20201103 12:36:25.033"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201103 12:36:25.041" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201103 12:36:25.040" endtime="20201103 12:36:25.041"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:25.034" endtime="20201103 12:36:25.041"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:24.988" endtime="20201103 12:36:25.041"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:24.988" endtime="20201103 12:36:25.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201103 12:36:25.043" endtime="20201103 12:36:25.046"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:24.987" endtime="20201103 12:36:25.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:36:25.048" endtime="20201103 12:36:25.051"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:24.985" endtime="20201103 12:36:25.053"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:23.519" endtime="20201103 12:36:25.053"></status>
</kw>
<test id="s1-s2-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201103 12:36:25.065" endtime="20201103 12:36:25.085"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:25.061" endtime="20201103 12:36:25.086"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:36:25.099" endtime="20201103 12:36:25.116"></status>
</kw>
<msg timestamp="20201103 12:36:25.117" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201103 12:36:25.097" endtime="20201103 12:36:25.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201103 12:36:25.119" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201103 12:36:25.118" endtime="20201103 12:36:25.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201103 12:36:25.122" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201103 12:36:25.120" endtime="20201103 12:36:25.122"></status>
</kw>
<status status="FAIL" starttime="20201103 12:36:25.095" endtime="20201103 12:36:25.123"></status>
</kw>
<status status="FAIL" starttime="20201103 12:36:25.092" endtime="20201103 12:36:25.124"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:25.091" endtime="20201103 12:36:25.124"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201103 12:36:25.128" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201103 12:36:25.127" endtime="20201103 12:36:25.128"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:25.125" endtime="20201103 12:36:25.129"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:25.090" endtime="20201103 12:36:25.129"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:25.090" endtime="20201103 12:36:25.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201103 12:36:25.130" endtime="20201103 12:36:25.133"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:25.088" endtime="20201103 12:36:25.134"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:25.087" endtime="20201103 12:36:25.135"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:25.058" endtime="20201103 12:36:25.136"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:36:25.150" endtime="20201103 12:36:32.157"></status>
</kw>
<msg timestamp="20201103 12:36:32.158" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201103 12:36:25.147" endtime="20201103 12:36:32.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201103 12:36:32.164" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201103 12:36:32.160" endtime="20201103 12:36:32.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:36:32.167" endtime="20201103 12:36:32.174"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:25.143" endtime="20201103 12:36:32.175"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:25.139" endtime="20201103 12:36:32.176"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201103 12:36:32.181" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 0, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201103 12:36:32.178" endtime="20201103 12:36:32.182"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201103 12:36:32.190" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201103 12:36:32.187" endtime="20201103 12:36:32.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201103 12:36:32.194" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201103 12:36:32.192" endtime="20201103 12:36:32.194"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:32.183" endtime="20201103 12:36:32.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201103 12:36:32.203" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201103 12:36:32.201" endtime="20201103 12:36:32.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201103 12:36:32.208" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201103 12:36:32.206" endtime="20201103 12:36:32.208"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:32.197" endtime="20201103 12:36:32.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201103 12:36:32.218" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201103 12:36:32.215" endtime="20201103 12:36:32.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201103 12:36:32.222" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201103 12:36:32.220" endtime="20201103 12:36:32.222"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:32.211" endtime="20201103 12:36:32.222"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:36:32.229" endtime="20201103 12:36:32.530"></status>
</kw>
<msg timestamp="20201103 12:36:32.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.073054028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.172765403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201103 12:36:32.227" endtime="20201103 12:36:32.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201103 12:36:32.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.073054028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.172765403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201103 12:36:32.535" endtime="20201103 12:36:32.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:36:32.546" endtime="20201103 12:36:32.548"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:32.225" endtime="20201103 12:36:32.549"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:32.223" endtime="20201103 12:36:32.549"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201103 12:36:32.555" level="INFO">${FILTERED} = [{'time': 1.172765403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.09971137500000005, 'source_diff': 0.09971137500000005}, {'time': 1.272446639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0...</msg>
<status status="PASS" starttime="20201103 12:36:32.550" endtime="20201103 12:36:32.556"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201103 12:36:32.574" level="INFO">${RESULT} = {'time': [1.172765403, 1.272446639, 1.372126958, 1.471814403, 1.571482639, 1.671163819, 1.770844278, 1.870515472, 1.970192292, 2.069849833, 2.169539181, 2.269236736, 2.36891525, 2.468609042, 2.5682966...</msg>
<status status="PASS" starttime="20201103 12:36:32.558" endtime="20201103 12:36:32.574"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201103 12:36:32.578" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201103 12:36:32.577" endtime="20201103 12:36:32.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201103 12:36:32.581" level="INFO">VALUE: [0.09971137500000005, 0.09968036099999988, 0.09967948599999987, 0.09968662499999992, 0.09966740299999999, 0.09968036099999988, 0.0996796390000001, 0.09967036099999982, 0.09967599999999988, 0.09965670800000015, 0.09968851400000034, 0.0996966669999999, 0.09967769399999993, 0.09969295900000041, 0.09968676399999987, 0.09968050000000028, 0.09966866600000035, 0.0996933470000001, 0.09971183399999983, 0.0996953890000003, 0.09971877799999973, 0.09971209699999983, 0.09968133400000001, 0.09967616700000015, 0.09965383300000008, 0.09971401300000027, 0.09972441700000001, 0.09971931900000008, 0.09972218099999974, 0.09969962499999996, 0.09971798599999993, 0.09968709700000034, 0.09967872200000016, 0.09967527700000023, 0.09964672200000013, 0.09970320800000021, 0.09968458300000016, 0.09967672299999997, 0.09967815300000016, 0.09965725000000081, 0.09968425000000014, 0.09968213900000045, 0.0996889999999997, 0.09971556899999978, 0.0996775689999998, 0.0996791659999996, 0.09968412499999957, 0.09967697200000014, 0.09967897200000042, 0.09964908300000008]</msg>
<status status="PASS" starttime="20201103 12:36:32.579" endtime="20201103 12:36:32.582"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:32.575" endtime="20201103 12:36:32.582"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201103 12:36:32.584" endtime="20201103 12:36:32.586"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201103 12:36:32.588" endtime="20201103 12:36:32.607"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:32.586" endtime="20201103 12:36:32.608"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:32.583" endtime="20201103 12:36:32.608"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:25.137" endtime="20201103 12:36:32.609"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201103 12:36:25.054" endtime="20201103 12:36:32.609" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201103 12:36:32.615" endtime="20201103 12:36:32.635"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:32.614" endtime="20201103 12:36:32.636"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:36:32.660" endtime="20201103 12:36:32.679"></status>
</kw>
<msg timestamp="20201103 12:36:32.680" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201103 12:36:32.657" endtime="20201103 12:36:32.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201103 12:36:32.684" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201103 12:36:32.682" endtime="20201103 12:36:32.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201103 12:36:32.690" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201103 12:36:32.686" endtime="20201103 12:36:32.691"></status>
</kw>
<status status="FAIL" starttime="20201103 12:36:32.653" endtime="20201103 12:36:32.692"></status>
</kw>
<status status="FAIL" starttime="20201103 12:36:32.648" endtime="20201103 12:36:32.693"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:32.646" endtime="20201103 12:36:32.694"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201103 12:36:32.700" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201103 12:36:32.699" endtime="20201103 12:36:32.701"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:32.695" endtime="20201103 12:36:32.702"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:32.645" endtime="20201103 12:36:32.702"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:32.643" endtime="20201103 12:36:32.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201103 12:36:32.704" endtime="20201103 12:36:32.707"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:32.640" endtime="20201103 12:36:32.708"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:32.637" endtime="20201103 12:36:32.709"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:32.613" endtime="20201103 12:36:32.709"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:36:32.726" endtime="20201103 12:36:39.732"></status>
</kw>
<msg timestamp="20201103 12:36:39.733" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201103 12:36:32.723" endtime="20201103 12:36:39.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201103 12:36:39.739" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201103 12:36:39.735" endtime="20201103 12:36:39.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:36:39.741" endtime="20201103 12:36:39.744"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:32.717" endtime="20201103 12:36:39.745"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:32.713" endtime="20201103 12:36:39.746"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201103 12:36:39.751" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 5, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201103 12:36:39.748" endtime="20201103 12:36:39.752"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201103 12:36:39.760" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201103 12:36:39.758" endtime="20201103 12:36:39.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201103 12:36:39.764" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201103 12:36:39.762" endtime="20201103 12:36:39.764"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:39.753" endtime="20201103 12:36:39.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201103 12:36:39.774" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201103 12:36:39.772" endtime="20201103 12:36:39.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201103 12:36:39.778" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201103 12:36:39.776" endtime="20201103 12:36:39.779"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:39.767" endtime="20201103 12:36:39.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201103 12:36:39.788" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201103 12:36:39.786" endtime="20201103 12:36:39.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201103 12:36:39.794" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201103 12:36:39.791" endtime="20201103 12:36:39.795"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:39.781" endtime="20201103 12:36:39.796"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:36:39.805" endtime="20201103 12:36:40.104"></status>
</kw>
<msg timestamp="20201103 12:36:40.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.099943681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.199661486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201103 12:36:39.803" endtime="20201103 12:36:40.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201103 12:36:40.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.099943681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.199661486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201103 12:36:40.108" endtime="20201103 12:36:40.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:36:40.116" endtime="20201103 12:36:40.118"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:39.800" endtime="20201103 12:36:40.118"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:39.798" endtime="20201103 12:36:40.119"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201103 12:36:40.123" level="INFO">${FILTERED} = [{'time': 1.199661486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.09971780500000005, 'source_diff': 0.09971780500000005}, {'time': 1.29936075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0....</msg>
<status status="PASS" starttime="20201103 12:36:40.120" endtime="20201103 12:36:40.123"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201103 12:36:40.137" level="INFO">${RESULT} = {'time': [1.199661486, 1.29936075, 1.399048694, 1.498737611, 1.598387181, 1.698060847, 1.797738278, 1.897432722, 1.997143944, 2.09683175, 2.196549972, 2.296230444, 2.395952792, 2.495671847, 2.59534761...</msg>
<status status="PASS" starttime="20201103 12:36:40.124" endtime="20201103 12:36:40.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201103 12:36:40.141" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201103 12:36:40.140" endtime="20201103 12:36:40.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201103 12:36:40.143" level="INFO">VALUE: [0.09971780500000005, 0.09969844399999994, 0.09968711099999994, 0.09968809699999981, 0.0996487370000001, 0.09967284700000012, 0.09967661100000003, 0.09969359699999991, 0.09971037500000013, 0.09968695800000016, 0.09971738900000027, 0.09967965199999984, 0.09972150000000024, 0.09971823600000018, 0.09967494400000021, 0.09971487500000009, 0.09970497200000006, 0.09971579200000003, 0.09969263900000014, 0.09967300000000012, 0.09968898599999987, 0.09970086100000008, 0.09969387500000026, 0.09970072200000013, 0.09968990200000016, 0.09969718100000025, 0.09969708300000013, 0.0996794440000004, 0.09969912500000033, 0.09965181900000042, 0.09968105600000055, 0.09971030499999944, 0.09971926299999989, 0.09967991600000037, 0.0996518049999997, 0.09970256899999974, 0.09969333300000027, 0.09971693100000056, 0.09971476399999979, 0.09967354100000048, 0.0996928050000001, 0.09967765299999964, 0.09976809700000011, 0.09968474999999977, 0.09962122199999968, 0.0996858189999994, 0.09968675000000005, 0.09969707000000039, 0.09973088899999993, 0.09969770900000086]</msg>
<status status="PASS" starttime="20201103 12:36:40.142" endtime="20201103 12:36:40.144"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:40.138" endtime="20201103 12:36:40.144"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201103 12:36:40.147" endtime="20201103 12:36:40.148"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201103 12:36:40.150" endtime="20201103 12:36:40.170"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:40.148" endtime="20201103 12:36:40.170"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:40.145" endtime="20201103 12:36:40.171"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:32.711" endtime="20201103 12:36:40.171"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201103 12:36:32.611" endtime="20201103 12:36:40.172" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201103 12:36:40.178" endtime="20201103 12:36:40.198"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:40.177" endtime="20201103 12:36:40.198"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:36:40.211" endtime="20201103 12:36:40.229"></status>
</kw>
<msg timestamp="20201103 12:36:40.230" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201103 12:36:40.209" endtime="20201103 12:36:40.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201103 12:36:40.232" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201103 12:36:40.231" endtime="20201103 12:36:40.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201103 12:36:40.235" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201103 12:36:40.233" endtime="20201103 12:36:40.235"></status>
</kw>
<status status="FAIL" starttime="20201103 12:36:40.207" endtime="20201103 12:36:40.236"></status>
</kw>
<status status="FAIL" starttime="20201103 12:36:40.205" endtime="20201103 12:36:40.236"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:40.203" endtime="20201103 12:36:40.237"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201103 12:36:40.240" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201103 12:36:40.240" endtime="20201103 12:36:40.242"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:40.238" endtime="20201103 12:36:40.242"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:40.203" endtime="20201103 12:36:40.242"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:40.202" endtime="20201103 12:36:40.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201103 12:36:40.243" endtime="20201103 12:36:40.245"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:40.201" endtime="20201103 12:36:40.245"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:40.199" endtime="20201103 12:36:40.246"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:40.175" endtime="20201103 12:36:40.246"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:36:40.254" endtime="20201103 12:36:47.258"></status>
</kw>
<msg timestamp="20201103 12:36:47.259" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201103 12:36:40.253" endtime="20201103 12:36:47.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201103 12:36:47.264" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201103 12:36:47.261" endtime="20201103 12:36:47.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:36:47.266" endtime="20201103 12:36:47.270"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:40.250" endtime="20201103 12:36:47.271"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:40.248" endtime="20201103 12:36:47.272"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201103 12:36:47.277" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 10, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201103 12:36:47.273" endtime="20201103 12:36:47.278"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201103 12:36:47.286" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201103 12:36:47.284" endtime="20201103 12:36:47.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201103 12:36:47.290" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201103 12:36:47.288" endtime="20201103 12:36:47.291"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:47.279" endtime="20201103 12:36:47.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201103 12:36:47.301" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201103 12:36:47.298" endtime="20201103 12:36:47.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201103 12:36:47.305" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201103 12:36:47.303" endtime="20201103 12:36:47.306"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:47.294" endtime="20201103 12:36:47.307"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201103 12:36:47.316" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201103 12:36:47.314" endtime="20201103 12:36:47.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201103 12:36:47.321" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201103 12:36:47.318" endtime="20201103 12:36:47.321"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:47.308" endtime="20201103 12:36:47.322"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:36:47.336" endtime="20201103 12:36:47.640"></status>
</kw>
<msg timestamp="20201103 12:36:47.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.063559514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.163238625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201103 12:36:47.333" endtime="20201103 12:36:47.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201103 12:36:47.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.063559514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.163238625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201103 12:36:47.645" endtime="20201103 12:36:47.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:36:47.653" endtime="20201103 12:36:47.655"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:47.328" endtime="20201103 12:36:47.656"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:47.324" endtime="20201103 12:36:47.656"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201103 12:36:47.660" level="INFO">${FILTERED} = [{'time': 1.163238625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.09967911099999993, 'source_diff': 0.09967911099999993}, {'time': 1.262924639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0...</msg>
<status status="PASS" starttime="20201103 12:36:47.657" endtime="20201103 12:36:47.661"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201103 12:36:47.674" level="INFO">${RESULT} = {'time': [1.163238625, 1.262924639, 1.362609458, 1.462320167, 1.561984931, 1.661679792, 1.761398403, 1.861112944, 1.96083, 2.060484597, 2.160164708, 2.259858417, 2.359587069, 2.459317097, 2.558976236,...</msg>
<status status="PASS" starttime="20201103 12:36:47.662" endtime="20201103 12:36:47.675"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201103 12:36:47.679" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201103 12:36:47.678" endtime="20201103 12:36:47.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201103 12:36:47.682" level="INFO">VALUE: [0.09967911099999993, 0.09968516699999985, 0.09968402700000012, 0.09970984799999982, 0.09966393100000004, 0.09969405599999992, 0.09971777800000003, 0.09971370800000012, 0.09971619399999998, 0.09965377799999997, 0.09967926399999971, 0.09969290299999978, 0.09972780499999967, 0.09972919400000002, 0.099658319, 0.09968558400000038, 0.09968991599999999, 0.09968059699999987, 0.09970625000000011, 0.09968124999999972, 0.09970862500000033, 0.099676514, 0.09967565299999981, 0.09967390299999979, 0.09967391700000006, 0.0996820559999998, 0.0997068750000003, 0.09970069500000012, 0.09968840300000004, 0.09968388900000003, 0.09969344500000066, 0.09968901399999996, 0.09968111200000074, 0.09968105500000046, 0.09965170799999967, 0.0996903610000004, 0.09970569399999984, 0.09970763900000001, 0.09969023599999982, 0.09965943, 0.099710666, 0.0996867219999995, 0.09969836099999974, 0.0997315280000004, 0.09969730500000029, 0.09971469400000021, 0.0997219170000001, 0.09971633400000002, 0.0996916670000001, 0.09968294400000044]</msg>
<status status="PASS" starttime="20201103 12:36:47.680" endtime="20201103 12:36:47.682"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:47.675" endtime="20201103 12:36:47.683"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201103 12:36:47.685" endtime="20201103 12:36:47.687"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201103 12:36:47.689" endtime="20201103 12:36:47.708"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:47.687" endtime="20201103 12:36:47.709"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:47.684" endtime="20201103 12:36:47.710"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:40.246" endtime="20201103 12:36:47.710"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201103 12:36:40.173" endtime="20201103 12:36:47.710" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201103 12:36:47.717" endtime="20201103 12:36:47.737"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:47.716" endtime="20201103 12:36:47.737"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:36:47.751" endtime="20201103 12:36:47.770"></status>
</kw>
<msg timestamp="20201103 12:36:47.771" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201103 12:36:47.749" endtime="20201103 12:36:47.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201103 12:36:47.773" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201103 12:36:47.772" endtime="20201103 12:36:47.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201103 12:36:47.776" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201103 12:36:47.774" endtime="20201103 12:36:47.777"></status>
</kw>
<status status="FAIL" starttime="20201103 12:36:47.747" endtime="20201103 12:36:47.777"></status>
</kw>
<status status="FAIL" starttime="20201103 12:36:47.744" endtime="20201103 12:36:47.778"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:47.743" endtime="20201103 12:36:47.778"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201103 12:36:47.782" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201103 12:36:47.781" endtime="20201103 12:36:47.783"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:47.779" endtime="20201103 12:36:47.783"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:47.742" endtime="20201103 12:36:47.783"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:47.741" endtime="20201103 12:36:47.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201103 12:36:47.784" endtime="20201103 12:36:47.785"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:47.740" endtime="20201103 12:36:47.786"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:47.738" endtime="20201103 12:36:47.786"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:47.714" endtime="20201103 12:36:47.787"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:36:47.795" endtime="20201103 12:36:54.800"></status>
</kw>
<msg timestamp="20201103 12:36:54.801" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201103 12:36:47.794" endtime="20201103 12:36:54.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201103 12:36:54.807" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201103 12:36:54.804" endtime="20201103 12:36:54.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:36:54.810" endtime="20201103 12:36:54.814"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:47.791" endtime="20201103 12:36:54.815"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:47.789" endtime="20201103 12:36:54.816"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201103 12:36:54.821" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 15, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201103 12:36:54.817" endtime="20201103 12:36:54.822"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201103 12:36:54.830" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201103 12:36:54.828" endtime="20201103 12:36:54.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201103 12:36:54.835" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201103 12:36:54.833" endtime="20201103 12:36:54.836"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:54.823" endtime="20201103 12:36:54.837"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201103 12:36:54.845" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201103 12:36:54.843" endtime="20201103 12:36:54.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201103 12:36:54.850" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201103 12:36:54.848" endtime="20201103 12:36:54.851"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:54.838" endtime="20201103 12:36:54.852"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201103 12:36:54.861" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201103 12:36:54.858" endtime="20201103 12:36:54.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201103 12:36:54.865" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201103 12:36:54.863" endtime="20201103 12:36:54.866"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:54.853" endtime="20201103 12:36:54.867"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:36:54.884" endtime="20201103 12:36:55.192"></status>
</kw>
<msg timestamp="20201103 12:36:55.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.065514403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.165159708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201103 12:36:54.878" endtime="20201103 12:36:55.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201103 12:36:55.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.065514403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.165159708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201103 12:36:55.196" endtime="20201103 12:36:55.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:36:55.204" endtime="20201103 12:36:55.206"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:54.872" endtime="20201103 12:36:55.206"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:54.868" endtime="20201103 12:36:55.207"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201103 12:36:55.211" level="INFO">${FILTERED} = [{'time': 1.165159708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0996453049999999, 'source_diff': 0.0996453049999999}, {'time': 1.264854361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0...</msg>
<status status="PASS" starttime="20201103 12:36:55.208" endtime="20201103 12:36:55.211"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201103 12:36:55.224" level="INFO">${RESULT} = {'time': [1.165159708, 1.264854361, 1.364573778, 1.464264931, 1.563947389, 1.663662681, 1.763369194, 1.863039764, 1.962728333, 2.062405778, 2.162091875, 2.261801514, 2.361487625, 2.461192347, 2.560834...</msg>
<status status="PASS" starttime="20201103 12:36:55.212" endtime="20201103 12:36:55.224"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201103 12:36:55.229" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201103 12:36:55.227" endtime="20201103 12:36:55.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201103 12:36:55.231" level="INFO">VALUE: [0.0996453049999999, 0.09969383300000012, 0.09971862499999995, 0.09969033399999994, 0.09968165299999998, 0.09971445899999987, 0.09970568000000002, 0.09966972200000002, 0.09968777699999998, 0.09967662500000007, 0.0996852640000001, 0.09970879199999994, 0.09968527799999993, 0.09970390299999998, 0.09964131900000028, 0.09968092999999989, 0.09967970900000012, 0.09967427799999973, 0.09967188800000004, 0.09965918000000018, 0.09971455500000026, 0.09971316699999999, 0.09970865299999998, 0.09967587500000041, 0.09968880499999999, 0.0996669859999999, 0.09967843100000007, 0.09967001399999997, 0.09970081900000016, 0.09968097199999981, 0.09968136100000002, 0.09968458300000016, 0.09968462500000008, 0.09968231999999944, 0.09967376400000028, 0.09964362500000057, 0.09969152800000014, 0.09970968100000022, 0.09971154199999965, 0.09966409699999978, 0.0996849580000001, 0.09968454199999943, 0.09988980600000019, 0.09965108300000036, 0.09947463900000031, 0.09970604200000022, 0.09968448600000013, 0.09968533400000013, 0.09968041700000008, 0.09969220800000045]</msg>
<status status="PASS" starttime="20201103 12:36:55.230" endtime="20201103 12:36:55.232"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:55.225" endtime="20201103 12:36:55.233"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201103 12:36:55.235" endtime="20201103 12:36:55.236"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201103 12:36:55.238" endtime="20201103 12:36:55.258"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:55.237" endtime="20201103 12:36:55.259"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:55.233" endtime="20201103 12:36:55.259"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:47.787" endtime="20201103 12:36:55.259"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201103 12:36:47.712" endtime="20201103 12:36:55.260" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201103 12:36:55.267" endtime="20201103 12:36:55.286"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:55.265" endtime="20201103 12:36:55.287"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:36:55.301" endtime="20201103 12:36:55.321"></status>
</kw>
<msg timestamp="20201103 12:36:55.321" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201103 12:36:55.300" endtime="20201103 12:36:55.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201103 12:36:55.324" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201103 12:36:55.322" endtime="20201103 12:36:55.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201103 12:36:55.327" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201103 12:36:55.325" endtime="20201103 12:36:55.327"></status>
</kw>
<status status="FAIL" starttime="20201103 12:36:55.296" endtime="20201103 12:36:55.328"></status>
</kw>
<status status="FAIL" starttime="20201103 12:36:55.294" endtime="20201103 12:36:55.329"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:55.292" endtime="20201103 12:36:55.329"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201103 12:36:55.333" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201103 12:36:55.332" endtime="20201103 12:36:55.333"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:55.330" endtime="20201103 12:36:55.334"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:55.291" endtime="20201103 12:36:55.334"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:55.291" endtime="20201103 12:36:55.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201103 12:36:55.335" endtime="20201103 12:36:55.336"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:55.289" endtime="20201103 12:36:55.337"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:55.288" endtime="20201103 12:36:55.337"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:55.264" endtime="20201103 12:36:55.337"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:36:55.346" endtime="20201103 12:37:02.355"></status>
</kw>
<msg timestamp="20201103 12:37:02.357" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201103 12:36:55.344" endtime="20201103 12:37:02.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201103 12:37:02.362" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201103 12:37:02.359" endtime="20201103 12:37:02.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:37:02.365" endtime="20201103 12:37:02.369"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:55.342" endtime="20201103 12:37:02.370"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:55.340" endtime="20201103 12:37:02.371"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201103 12:37:02.377" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 20, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201103 12:37:02.373" endtime="20201103 12:37:02.377"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201103 12:37:02.386" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201103 12:37:02.383" endtime="20201103 12:37:02.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201103 12:37:02.390" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201103 12:37:02.388" endtime="20201103 12:37:02.391"></status>
</kw>
<status status="PASS" starttime="20201103 12:37:02.378" endtime="20201103 12:37:02.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201103 12:37:02.401" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201103 12:37:02.398" endtime="20201103 12:37:02.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201103 12:37:02.405" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201103 12:37:02.403" endtime="20201103 12:37:02.406"></status>
</kw>
<status status="PASS" starttime="20201103 12:37:02.394" endtime="20201103 12:37:02.407"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201103 12:37:02.416" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201103 12:37:02.414" endtime="20201103 12:37:02.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201103 12:37:02.422" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201103 12:37:02.418" endtime="20201103 12:37:02.423"></status>
</kw>
<status status="PASS" starttime="20201103 12:37:02.408" endtime="20201103 12:37:02.424"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:37:02.439" endtime="20201103 12:37:02.740"></status>
</kw>
<msg timestamp="20201103 12:37:02.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.067228194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.166922472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201103 12:37:02.435" endtime="20201103 12:37:02.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201103 12:37:02.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.067228194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.166922472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201103 12:37:02.744" endtime="20201103 12:37:02.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:37:02.753" endtime="20201103 12:37:02.754"></status>
</kw>
<status status="PASS" starttime="20201103 12:37:02.430" endtime="20201103 12:37:02.755"></status>
</kw>
<status status="PASS" starttime="20201103 12:37:02.426" endtime="20201103 12:37:02.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201103 12:37:02.759" level="INFO">${FILTERED} = [{'time': 1.166922472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.09969427800000008, 'source_diff': 0.09969427800000008}, {'time': 1.266608458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0...</msg>
<status status="PASS" starttime="20201103 12:37:02.756" endtime="20201103 12:37:02.770"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201103 12:37:02.785" level="INFO">${RESULT} = {'time': [1.166922472, 1.266608458, 1.366291958, 1.465985056, 1.565649722, 1.665377583, 1.765072931, 1.864764694, 1.964464014, 2.064141028, 2.163844014, 2.263563778, 2.363298028, 2.462999375, 2.562712...</msg>
<status status="PASS" starttime="20201103 12:37:02.771" endtime="20201103 12:37:02.785"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201103 12:37:02.789" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201103 12:37:02.788" endtime="20201103 12:37:02.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201103 12:37:02.791" level="INFO">VALUE: [0.09969427800000008, 0.09968515200000017, 0.09968267999999991, 0.09969219500000004, 0.0996638190000001, 0.09972701399999995, 0.09969458399999986, 0.09969090200000008, 0.09969844500000002, 0.0996761949999998, 0.09970215299999996, 0.09971894499999978, 0.0997334310000002, 0.0997005139999998, 0.0997123339999999, 0.0996676110000001, 0.09972611099999984, 0.09971429199999982, 0.099704778, 0.09966202800000001, 0.09967776399999995, 0.0996794999999997, 0.09968611100000002, 0.09968615199999986, 0.09965529099999992, 0.09968749999999993, 0.09967463899999984, 0.099708723, 0.09969823599999961, 0.09969752800000053, 0.09969192999999965, 0.09969512500000022, 0.09967404200000018, 0.09968348599999999, 0.09965492999999981, 0.09968459699999954, 0.09968291699999998, 0.09971174999999999, 0.09971194500000014, 0.09969541699999951, 0.09966140299999982, 0.09968908399999954, 0.09970905499999994, 0.09972790300000067, 0.09970306999999945, 0.09973147199999932, 0.09970775000000032, 0.09968683299999981, 0.09969652799999995, 0.09968405600000008]</msg>
<status status="PASS" starttime="20201103 12:37:02.790" endtime="20201103 12:37:02.798"></status>
</kw>
<status status="PASS" starttime="20201103 12:37:02.786" endtime="20201103 12:37:02.799"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201103 12:37:02.801" endtime="20201103 12:37:02.802"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201103 12:37:02.805" endtime="20201103 12:37:02.824"></status>
</kw>
<status status="PASS" starttime="20201103 12:37:02.803" endtime="20201103 12:37:02.825"></status>
</kw>
<status status="PASS" starttime="20201103 12:37:02.799" endtime="20201103 12:37:02.825"></status>
</kw>
<status status="PASS" starttime="20201103 12:36:55.338" endtime="20201103 12:37:02.825"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201103 12:36:55.262" endtime="20201103 12:37:02.826" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201103 12:37:02.832" endtime="20201103 12:37:02.852"></status>
</kw>
<status status="PASS" starttime="20201103 12:37:02.831" endtime="20201103 12:37:02.852"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:37:02.866" endtime="20201103 12:37:02.883"></status>
</kw>
<msg timestamp="20201103 12:37:02.883" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201103 12:37:02.864" endtime="20201103 12:37:02.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201103 12:37:02.886" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201103 12:37:02.884" endtime="20201103 12:37:02.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201103 12:37:02.889" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201103 12:37:02.887" endtime="20201103 12:37:02.889"></status>
</kw>
<status status="FAIL" starttime="20201103 12:37:02.862" endtime="20201103 12:37:02.890"></status>
</kw>
<status status="FAIL" starttime="20201103 12:37:02.859" endtime="20201103 12:37:02.890"></status>
</kw>
<status status="PASS" starttime="20201103 12:37:02.858" endtime="20201103 12:37:02.891"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201103 12:37:02.894" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201103 12:37:02.894" endtime="20201103 12:37:02.895"></status>
</kw>
<status status="PASS" starttime="20201103 12:37:02.892" endtime="20201103 12:37:02.895"></status>
</kw>
<status status="PASS" starttime="20201103 12:37:02.857" endtime="20201103 12:37:02.895"></status>
</kw>
<status status="PASS" starttime="20201103 12:37:02.856" endtime="20201103 12:37:02.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201103 12:37:02.896" endtime="20201103 12:37:02.898"></status>
</kw>
<status status="PASS" starttime="20201103 12:37:02.855" endtime="20201103 12:37:02.898"></status>
</kw>
<status status="PASS" starttime="20201103 12:37:02.853" endtime="20201103 12:37:02.899"></status>
</kw>
<status status="PASS" starttime="20201103 12:37:02.830" endtime="20201103 12:37:02.899"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:37:02.907" endtime="20201103 12:37:09.915"></status>
</kw>
<msg timestamp="20201103 12:37:09.916" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201103 12:37:02.905" endtime="20201103 12:37:09.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201103 12:37:09.921" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201103 12:37:09.918" endtime="20201103 12:37:09.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:37:09.924" endtime="20201103 12:37:09.927"></status>
</kw>
<status status="PASS" starttime="20201103 12:37:02.903" endtime="20201103 12:37:09.929"></status>
</kw>
<status status="PASS" starttime="20201103 12:37:02.901" endtime="20201103 12:37:09.930"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201103 12:37:09.934" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 25, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201103 12:37:09.931" endtime="20201103 12:37:09.935"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201103 12:37:09.943" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201103 12:37:09.941" endtime="20201103 12:37:09.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201103 12:37:09.947" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201103 12:37:09.945" endtime="20201103 12:37:09.948"></status>
</kw>
<status status="PASS" starttime="20201103 12:37:09.936" endtime="20201103 12:37:09.949"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201103 12:37:09.957" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201103 12:37:09.955" endtime="20201103 12:37:09.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201103 12:37:09.960" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201103 12:37:09.959" endtime="20201103 12:37:09.961"></status>
</kw>
<status status="PASS" starttime="20201103 12:37:09.950" endtime="20201103 12:37:09.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201103 12:37:09.965" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201103 12:37:09.964" endtime="20201103 12:37:09.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201103 12:37:09.969" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201103 12:37:09.968" endtime="20201103 12:37:09.969"></status>
</kw>
<status status="PASS" starttime="20201103 12:37:09.962" endtime="20201103 12:37:09.970"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:37:09.977" endtime="20201103 12:37:10.275"></status>
</kw>
<msg timestamp="20201103 12:37:10.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.062659778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.162340278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201103 12:37:09.975" endtime="20201103 12:37:10.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201103 12:37:10.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.062659778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.162340278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201103 12:37:10.279" endtime="20201103 12:37:10.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:37:10.287" endtime="20201103 12:37:10.289"></status>
</kw>
<status status="PASS" starttime="20201103 12:37:09.972" endtime="20201103 12:37:10.289"></status>
</kw>
<status status="PASS" starttime="20201103 12:37:09.971" endtime="20201103 12:37:10.290"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201103 12:37:10.294" level="INFO">${FILTERED} = [{'time': 1.162340278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.09968050000000006, 'source_diff': 0.09968050000000006}, {'time': 1.262038611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0...</msg>
<status status="PASS" starttime="20201103 12:37:10.290" endtime="20201103 12:37:10.294"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201103 12:37:10.306" level="INFO">${RESULT} = {'time': [1.162340278, 1.262038611, 1.361732389, 1.461426431, 1.561093389, 1.660778389, 1.760477, 1.860163042, 1.959844625, 2.059490486, 2.159197125, 2.258902861, 2.358600222, 2.458327681, 2.557995944...</msg>
<status status="PASS" starttime="20201103 12:37:10.295" endtime="20201103 12:37:10.307"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201103 12:37:10.311" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201103 12:37:10.310" endtime="20201103 12:37:10.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201103 12:37:10.313" level="INFO">VALUE: [0.09968050000000006, 0.0996975, 0.0996928749999999, 0.099693209, 0.09966612500000016, 0.09968416700000016, 0.09969779200000017, 0.099685209, 0.09968074999999987, 0.09964509700000002, 0.09970580599999979, 0.09970490300000012, 0.09969655500000041, 0.099726639, 0.09966742999999978, 0.0996862639999998, 0.09968437499999983, 0.09971387499999995, 0.0996826249999998, 0.09964648600000015, 0.09970237500000012, 0.0996764859999999, 0.09970743100000012, 0.09973209700000041, 0.09967888900000021, 0.0996901939999999, 0.09970569399999984, 0.09968570799999998, 0.09967536100000007, 0.0996540420000005, 0.09972329200000019, 0.0997205000000001, 0.09969002799999949, 0.09968662499999947, 0.09966324999999987, 0.09973308300000028, 0.09971883299999984, 0.09969119499999923, 0.09972172200000085, 0.09967094500000062, 0.0996884170000003, 0.0996953610000002, 0.09970052700000043, 0.09969808299999983, 0.09969348699999969, 0.0997060000000003, 0.09969583400000026, 0.0996988889999999, 0.0996898470000005, 0.09966452799999992]</msg>
<status status="PASS" starttime="20201103 12:37:10.312" endtime="20201103 12:37:10.314"></status>
</kw>
<status status="PASS" starttime="20201103 12:37:10.307" endtime="20201103 12:37:10.314"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201103 12:37:10.317" endtime="20201103 12:37:10.318"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201103 12:37:10.320" endtime="20201103 12:37:10.339"></status>
</kw>
<status status="PASS" starttime="20201103 12:37:10.318" endtime="20201103 12:37:10.340"></status>
</kw>
<status status="PASS" starttime="20201103 12:37:10.315" endtime="20201103 12:37:10.340"></status>
</kw>
<status status="PASS" starttime="20201103 12:37:02.899" endtime="20201103 12:37:10.341"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201103 12:37:02.827" endtime="20201103 12:37:10.341" critical="yes"></status>
</test>
<status status="PASS" starttime="20201103 12:36:23.478" endtime="20201103 12:37:10.348"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">frdm-kw41z</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201103 12:36:21.295" endtime="20201103 12:37:10.374"></status>
</suite>
<statistics>
<total>
<stat pass="7" fail="0">Critical Tests</stat>
<stat pass="7" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="7" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="7" fail="0">BOARD_frdm-kw41z</stat>
<stat pass="7" fail="0">dev</stat>
</tag>
<suite>
<stat pass="7" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="6" fail="0" id="s1-s2" name="Sleep Jitter">tests_ztimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
