<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201029 09:33:56.395" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 09:33:56.989" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 09:33:56.998" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 09:33:58.183" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 09:33:56.988" endtime="20201029 09:33:58.184"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 09:33:58.186" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 09:33:58.185" endtime="20201029 09:33:58.186"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:56.986" endtime="20201029 09:33:58.187"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:58.190" endtime="20201029 09:33:58.444"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.188" endtime="20201029 09:33:58.445"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:58.458" endtime="20201029 09:33:58.477"></status>
</kw>
<msg timestamp="20201029 09:33:58.478" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [' This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:58.457" endtime="20201029 09:33:58.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:58.480" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [' This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:58.479" endtime="20201029 09:33:58.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:58.483" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:58.481" endtime="20201029 09:33:58.484"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:58.454" endtime="20201029 09:33:58.484"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:58.451" endtime="20201029 09:33:58.485"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.450" endtime="20201029 09:33:58.485"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:58.489" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:58.488" endtime="20201029 09:33:58.489"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.486" endtime="20201029 09:33:58.490"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.449" endtime="20201029 09:33:58.490"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.449" endtime="20201029 09:33:58.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:58.491" endtime="20201029 09:33:58.492"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.447" endtime="20201029 09:33:58.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:58.493" endtime="20201029 09:33:58.495"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.446" endtime="20201029 09:33:58.496"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:56.985" endtime="20201029 09:33:58.496"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:58.502" endtime="20201029 09:33:58.521"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.500" endtime="20201029 09:33:58.522"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:58.536" endtime="20201029 09:33:58.553"></status>
</kw>
<msg timestamp="20201029 09:33:58.554" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:58.535" endtime="20201029 09:33:58.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:58.556" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:58.555" endtime="20201029 09:33:58.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:58.559" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:58.557" endtime="20201029 09:33:58.559"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:58.532" endtime="20201029 09:33:58.560"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:58.530" endtime="20201029 09:33:58.561"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.528" endtime="20201029 09:33:58.561"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:58.565" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:58.564" endtime="20201029 09:33:58.565"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.562" endtime="20201029 09:33:58.565"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.527" endtime="20201029 09:33:58.565"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.525" endtime="20201029 09:33:58.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:58.566" endtime="20201029 09:33:58.568"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.524" endtime="20201029 09:33:58.568"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.522" endtime="20201029 09:33:58.569"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.499" endtime="20201029 09:33:58.569"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:58.575" endtime="20201029 09:33:58.591"></status>
</kw>
<msg timestamp="20201029 09:33:58.592" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:58.574" endtime="20201029 09:33:58.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:58.594" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:58.593" endtime="20201029 09:33:58.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:58.595" endtime="20201029 09:33:58.597"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.571" endtime="20201029 09:33:58.597"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.570" endtime="20201029 09:33:58.597"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:58.602" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201029 09:33:58.600" endtime="20201029 09:33:58.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:58.604" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201029 09:33:58.603" endtime="20201029 09:33:58.604"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.598" endtime="20201029 09:33:58.605"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:58.496" endtime="20201029 09:33:58.605" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 09:33:56.515" endtime="20201029 09:33:58.608"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 09:33:58.659" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 09:33:58.668" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 09:33:59.853" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 09:33:58.658" endtime="20201029 09:33:59.853"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 09:33:59.856" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 09:33:59.854" endtime="20201029 09:33:59.856"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.657" endtime="20201029 09:33:59.857"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:59.860" endtime="20201029 09:34:00.145"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:59.857" endtime="20201029 09:34:00.146"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:00.158" endtime="20201029 09:34:00.179"></status>
</kw>
<msg timestamp="20201029 09:34:00.180" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['lcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:00.156" endtime="20201029 09:34:00.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:00.183" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['lcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:00.181" endtime="20201029 09:34:00.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:00.186" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:00.184" endtime="20201029 09:34:00.187"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:00.154" endtime="20201029 09:34:00.187"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:00.151" endtime="20201029 09:34:00.188"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.150" endtime="20201029 09:34:00.188"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:00.192" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:00.191" endtime="20201029 09:34:00.192"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.189" endtime="20201029 09:34:00.192"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.149" endtime="20201029 09:34:00.193"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.149" endtime="20201029 09:34:00.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:00.194" endtime="20201029 09:34:00.195"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.148" endtime="20201029 09:34:00.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:00.196" endtime="20201029 09:34:00.198"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.146" endtime="20201029 09:34:00.198"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.656" endtime="20201029 09:34:00.198"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:00.204" endtime="20201029 09:34:00.223"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.203" endtime="20201029 09:34:00.224"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:00.237" endtime="20201029 09:34:00.256"></status>
</kw>
<msg timestamp="20201029 09:34:00.257" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:00.235" endtime="20201029 09:34:00.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:00.259" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:00.258" endtime="20201029 09:34:00.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:00.262" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:00.260" endtime="20201029 09:34:00.262"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:00.233" endtime="20201029 09:34:00.263"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:00.230" endtime="20201029 09:34:00.264"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.229" endtime="20201029 09:34:00.264"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:00.268" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:00.267" endtime="20201029 09:34:00.269"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.265" endtime="20201029 09:34:00.269"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.228" endtime="20201029 09:34:00.269"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.228" endtime="20201029 09:34:00.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:00.270" endtime="20201029 09:34:00.272"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.226" endtime="20201029 09:34:00.272"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.225" endtime="20201029 09:34:00.273"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.201" endtime="20201029 09:34:00.273"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:00.281" endtime="20201029 09:34:00.295"></status>
</kw>
<msg timestamp="20201029 09:34:00.295" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:00.280" endtime="20201029 09:34:00.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:00.298" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:00.296" endtime="20201029 09:34:00.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:00.299" endtime="20201029 09:34:00.300"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.277" endtime="20201029 09:34:00.301"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.276" endtime="20201029 09:34:00.301"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:00.307" endtime="20201029 09:34:00.599"></status>
</kw>
<msg timestamp="20201029 09:34:00.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066592389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066592861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:00.306" endtime="20201029 09:34:00.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:00.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066592389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066592861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:00.604" endtime="20201029 09:34:00.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:00.612" endtime="20201029 09:34:00.614"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.303" endtime="20201029 09:34:00.614"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.302" endtime="20201029 09:34:00.615"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:00.618" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {...</msg>
<status status="PASS" starttime="20201029 09:34:00.615" endtime="20201029 09:34:00.619"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:00.624" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199...</msg>
<status status="PASS" starttime="20201029 09:34:00.620" endtime="20201029 09:34:00.624"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:00.628" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:00.627" endtime="20201029 09:34:00.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:00.630" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.729999999869561e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201029 09:34:00.629" endtime="20201029 09:34:00.631"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.625" endtime="20201029 09:34:00.631"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.274" endtime="20201029 09:34:00.632"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.274" endtime="20201029 09:34:00.632"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:00.641" endtime="20201029 09:34:00.656"></status>
</kw>
<msg timestamp="20201029 09:34:00.657" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:00.639" endtime="20201029 09:34:00.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:00.659" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:00.658" endtime="20201029 09:34:00.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:00.660" endtime="20201029 09:34:00.662"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.636" endtime="20201029 09:34:00.662"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.634" endtime="20201029 09:34:00.663"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:00.674" endtime="20201029 09:34:00.981"></status>
</kw>
<msg timestamp="20201029 09:34:00.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.06711925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067119722, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:34:00.671" endtime="20201029 09:34:00.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:00.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.06711925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067119722, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:34:00.986" endtime="20201029 09:34:00.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:00.995" endtime="20201029 09:34:00.999"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.667" endtime="20201029 09:34:00.999"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.664" endtime="20201029 09:34:01.000"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:01.008" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07},...</msg>
<status status="PASS" starttime="20201029 09:34:01.001" endtime="20201029 09:34:01.008"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:01.015" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.7...</msg>
<status status="PASS" starttime="20201029 09:34:01.009" endtime="20201029 09:34:01.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:01.021" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:01.020" endtime="20201029 09:34:01.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:01.025" level="INFO">VALUE: [4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.7300000000083386e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:34:01.023" endtime="20201029 09:34:01.026"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.017" endtime="20201029 09:34:01.026"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.633" endtime="20201029 09:34:01.027"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.632" endtime="20201029 09:34:01.027"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:01.037" endtime="20201029 09:34:01.054"></status>
</kw>
<msg timestamp="20201029 09:34:01.054" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:01.035" endtime="20201029 09:34:01.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:01.057" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:01.055" endtime="20201029 09:34:01.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:01.058" endtime="20201029 09:34:01.059"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.032" endtime="20201029 09:34:01.060"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.029" endtime="20201029 09:34:01.060"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:01.068" endtime="20201029 09:34:01.375"></status>
</kw>
<msg timestamp="20201029 09:34:01.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.419792139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.419792611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:01.066" endtime="20201029 09:34:01.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:01.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.419792139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.419792611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:01.380" endtime="20201029 09:34:01.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:01.390" endtime="20201029 09:34:01.391"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.063" endtime="20201029 09:34:01.392"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.061" endtime="20201029 09:34:01.392"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:01.397" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.720000000291158e-07}, {'diff': 4.720000000291158e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 09:34:01.393" endtime="20201029 09:34:01.398"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:01.405" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, ...</msg>
<status status="PASS" starttime="20201029 09:34:01.399" endtime="20201029 09:34:01.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:01.412" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:01.410" endtime="20201029 09:34:01.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:01.416" level="INFO">VALUE: [4.7199999997360464e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7200000008462695e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.729999999453227e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000008462695e-07]</msg>
<status status="PASS" starttime="20201029 09:34:01.414" endtime="20201029 09:34:01.417"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.406" endtime="20201029 09:34:01.418"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.028" endtime="20201029 09:34:01.419"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.027" endtime="20201029 09:34:01.419"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:01.431" endtime="20201029 09:34:01.446"></status>
</kw>
<msg timestamp="20201029 09:34:01.446" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:01.429" endtime="20201029 09:34:01.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:01.448" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:01.447" endtime="20201029 09:34:01.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:01.449" endtime="20201029 09:34:01.451"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.425" endtime="20201029 09:34:01.451"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.422" endtime="20201029 09:34:01.452"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:01.459" endtime="20201029 09:34:01.760"></status>
</kw>
<msg timestamp="20201029 09:34:01.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.804876042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.804876514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:01.457" endtime="20201029 09:34:01.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:01.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.804876042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.804876514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:01.765" endtime="20201029 09:34:01.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:01.775" endtime="20201029 09:34:01.776"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.454" endtime="20201029 09:34:01.777"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.453" endtime="20201029 09:34:01.777"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:01.781" level="INFO">${RESULT} = [{'diff': 4.7200000008462695e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7200000008462695e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-...</msg>
<status status="PASS" starttime="20201029 09:34:01.778" endtime="20201029 09:34:01.782"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:01.787" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07...</msg>
<status status="PASS" starttime="20201029 09:34:01.783" endtime="20201029 09:34:01.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:01.791" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:01.790" endtime="20201029 09:34:01.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:01.794" level="INFO">VALUE: [4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000019564925e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7200000019564925e-07, 4.73000000056345e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201029 09:34:01.792" endtime="20201029 09:34:01.794"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.788" endtime="20201029 09:34:01.795"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.420" endtime="20201029 09:34:01.795"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.419" endtime="20201029 09:34:01.795"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:01.803" endtime="20201029 09:34:01.817"></status>
</kw>
<msg timestamp="20201029 09:34:01.817" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:01.801" endtime="20201029 09:34:01.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:01.820" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:01.818" endtime="20201029 09:34:01.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:01.821" endtime="20201029 09:34:01.823"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.799" endtime="20201029 09:34:01.823"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.797" endtime="20201029 09:34:01.824"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:01.830" endtime="20201029 09:34:02.134"></status>
</kw>
<msg timestamp="20201029 09:34:02.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.185871625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.185872097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:01.828" endtime="20201029 09:34:02.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:02.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.185871625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.185872097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:02.139" endtime="20201029 09:34:02.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:02.149" endtime="20201029 09:34:02.151"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.826" endtime="20201029 09:34:02.151"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.824" endtime="20201029 09:34:02.152"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:02.157" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7200000019564925e-07}, {'diff': 4.7199999997360464e-...</msg>
<status status="PASS" starttime="20201029 09:34:02.153" endtime="20201029 09:34:02.157"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:02.161" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, ...</msg>
<status status="PASS" starttime="20201029 09:34:02.157" endtime="20201029 09:34:02.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:02.165" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:02.164" endtime="20201029 09:34:02.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:02.168" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7200000019564925e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:34:02.166" endtime="20201029 09:34:02.168"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:02.162" endtime="20201029 09:34:02.169"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.796" endtime="20201029 09:34:02.169"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.796" endtime="20201029 09:34:02.169"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:02.178" endtime="20201029 09:34:02.193"></status>
</kw>
<msg timestamp="20201029 09:34:02.194" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:02.176" endtime="20201029 09:34:02.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:02.196" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:02.195" endtime="20201029 09:34:02.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:02.197" endtime="20201029 09:34:02.199"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:02.173" endtime="20201029 09:34:02.199"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:02.171" endtime="20201029 09:34:02.200"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:02.206" endtime="20201029 09:34:02.505"></status>
</kw>
<msg timestamp="20201029 09:34:02.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.546735653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.546736125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:02.205" endtime="20201029 09:34:02.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:02.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.546735653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.546736125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:02.510" endtime="20201029 09:34:02.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:02.520" endtime="20201029 09:34:02.522"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:02.202" endtime="20201029 09:34:02.522"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:02.200" endtime="20201029 09:34:02.523"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:02.527" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 09:34:02.524" endtime="20201029 09:34:02.527"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:02.534" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, ...</msg>
<status status="PASS" starttime="20201029 09:34:02.528" endtime="20201029 09:34:02.535"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:02.539" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:02.538" endtime="20201029 09:34:02.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:02.541" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:34:02.540" endtime="20201029 09:34:02.541"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:02.535" endtime="20201029 09:34:02.542"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:02.170" endtime="20201029 09:34:02.542"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:02.170" endtime="20201029 09:34:02.543"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:02.550" endtime="20201029 09:34:02.565"></status>
</kw>
<msg timestamp="20201029 09:34:02.566" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:02.549" endtime="20201029 09:34:02.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:02.569" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:02.567" endtime="20201029 09:34:02.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:02.570" endtime="20201029 09:34:02.571"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:02.546" endtime="20201029 09:34:02.572"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:02.545" endtime="20201029 09:34:02.572"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:02.579" endtime="20201029 09:34:02.885"></status>
</kw>
<msg timestamp="20201029 09:34:02.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.914492153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.914492625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:02.577" endtime="20201029 09:34:02.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:02.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.914492153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.914492625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:02.890" endtime="20201029 09:34:02.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:02.900" endtime="20201029 09:34:02.902"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:02.575" endtime="20201029 09:34:02.902"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:02.573" endtime="20201029 09:34:02.903"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:02.907" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7200000019564925e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 09:34:02.903" endtime="20201029 09:34:02.907"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:02.912" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, ...</msg>
<status status="PASS" starttime="20201029 09:34:02.908" endtime="20201029 09:34:02.913"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:02.917" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:02.916" endtime="20201029 09:34:02.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:02.919" level="INFO">VALUE: [4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:34:02.918" endtime="20201029 09:34:02.920"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:02.913" endtime="20201029 09:34:02.920"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:02.543" endtime="20201029 09:34:02.920"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:02.543" endtime="20201029 09:34:02.921"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:02.928" endtime="20201029 09:34:02.942"></status>
</kw>
<msg timestamp="20201029 09:34:02.942" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:02.927" endtime="20201029 09:34:02.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:02.944" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:02.943" endtime="20201029 09:34:02.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:02.945" endtime="20201029 09:34:02.947"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:02.924" endtime="20201029 09:34:02.948"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:02.923" endtime="20201029 09:34:02.948"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:02.954" endtime="20201029 09:34:03.275"></status>
</kw>
<msg timestamp="20201029 09:34:03.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.276308167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.276308639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:02.953" endtime="20201029 09:34:03.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:03.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.276308167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.276308639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:03.282" endtime="20201029 09:34:03.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:03.294" endtime="20201029 09:34:03.296"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:02.950" endtime="20201029 09:34:03.296"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:02.949" endtime="20201029 09:34:03.297"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:03.302" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-...</msg>
<status status="PASS" starttime="20201029 09:34:03.298" endtime="20201029 09:34:03.302"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:03.308" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, ...</msg>
<status status="PASS" starttime="20201029 09:34:03.303" endtime="20201029 09:34:03.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:03.313" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:03.312" endtime="20201029 09:34:03.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:03.316" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:34:03.314" endtime="20201029 09:34:03.316"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.309" endtime="20201029 09:34:03.317"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:02.921" endtime="20201029 09:34:03.317"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:02.921" endtime="20201029 09:34:03.318"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:03.327" endtime="20201029 09:34:03.344"></status>
</kw>
<msg timestamp="20201029 09:34:03.345" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:03.326" endtime="20201029 09:34:03.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:03.348" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:03.346" endtime="20201029 09:34:03.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:03.349" endtime="20201029 09:34:03.351"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.322" endtime="20201029 09:34:03.352"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.320" endtime="20201029 09:34:03.352"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:03.359" endtime="20201029 09:34:03.657"></status>
</kw>
<msg timestamp="20201029 09:34:03.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.643125778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.64312625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:34:03.358" endtime="20201029 09:34:03.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:03.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.643125778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.64312625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:34:03.662" endtime="20201029 09:34:03.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:03.672" endtime="20201029 09:34:03.674"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.355" endtime="20201029 09:34:03.674"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.353" endtime="20201029 09:34:03.674"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:03.679" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.73000000056345e-07},...</msg>
<status status="PASS" starttime="20201029 09:34:03.675" endtime="20201029 09:34:03.679"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:03.685" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4....</msg>
<status status="PASS" starttime="20201029 09:34:03.680" endtime="20201029 09:34:03.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:03.689" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:03.688" endtime="20201029 09:34:03.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:03.692" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.73000000056345e-07, 4.729999996122558e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:34:03.690" endtime="20201029 09:34:03.693"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.686" endtime="20201029 09:34:03.693"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.318" endtime="20201029 09:34:03.694"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.318" endtime="20201029 09:34:03.694"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:03.701" endtime="20201029 09:34:03.716"></status>
</kw>
<msg timestamp="20201029 09:34:03.716" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:03.700" endtime="20201029 09:34:03.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:03.719" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:03.717" endtime="20201029 09:34:03.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:03.720" endtime="20201029 09:34:03.721"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.697" endtime="20201029 09:34:03.722"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.696" endtime="20201029 09:34:03.722"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:03.729" endtime="20201029 09:34:04.049"></status>
</kw>
<msg timestamp="20201029 09:34:04.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.033254889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.033255361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:03.727" endtime="20201029 09:34:04.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:04.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.033254889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.033255361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:04.055" endtime="20201029 09:34:04.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:04.065" endtime="20201029 09:34:04.066"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.725" endtime="20201029 09:34:04.067"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.723" endtime="20201029 09:34:04.067"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:04.072" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-...</msg>
<status status="PASS" starttime="20201029 09:34:04.068" endtime="20201029 09:34:04.072"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:04.078" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 09:34:04.073" endtime="20201029 09:34:04.078"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:04.082" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:04.081" endtime="20201029 09:34:04.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:04.085" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.729999996122558e-07, 4.729999996122558e-07, 4.729999996122558e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:34:04.083" endtime="20201029 09:34:04.085"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.079" endtime="20201029 09:34:04.086"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.694" endtime="20201029 09:34:04.086"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.694" endtime="20201029 09:34:04.086"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:04.094" endtime="20201029 09:34:04.112"></status>
</kw>
<msg timestamp="20201029 09:34:04.112" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:04.092" endtime="20201029 09:34:04.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:04.115" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:04.113" endtime="20201029 09:34:04.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:04.116" endtime="20201029 09:34:04.117"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.090" endtime="20201029 09:34:04.118"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.088" endtime="20201029 09:34:04.118"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:04.126" endtime="20201029 09:34:04.453"></status>
</kw>
<msg timestamp="20201029 09:34:04.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.395067, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.395067472, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 09:34:04.124" endtime="20201029 09:34:04.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:04.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.395067, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.395067472, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 09:34:04.458" endtime="20201029 09:34:04.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:04.469" endtime="20201029 09:34:04.470"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.121" endtime="20201029 09:34:04.471"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.119" endtime="20201029 09:34:04.471"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:04.476" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 09:34:04.472" endtime="20201029 09:34:04.476"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:04.481" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.729999996122558e-07, 4.7...</msg>
<status status="PASS" starttime="20201029 09:34:04.477" endtime="20201029 09:34:04.481"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:04.485" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:04.484" endtime="20201029 09:34:04.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:04.487" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.729999996122558e-07, 4.729999996122558e-07, 4.729999996122558e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.73000000056345e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999996122558e-07]</msg>
<status status="PASS" starttime="20201029 09:34:04.486" endtime="20201029 09:34:04.488"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.481" endtime="20201029 09:34:04.488"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.087" endtime="20201029 09:34:04.489"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.086" endtime="20201029 09:34:04.489"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:04.498" endtime="20201029 09:34:04.515"></status>
</kw>
<msg timestamp="20201029 09:34:04.516" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:04.496" endtime="20201029 09:34:04.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:04.518" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:04.517" endtime="20201029 09:34:04.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:04.519" endtime="20201029 09:34:04.521"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.493" endtime="20201029 09:34:04.521"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.491" endtime="20201029 09:34:04.522"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:04.528" endtime="20201029 09:34:04.845"></status>
</kw>
<msg timestamp="20201029 09:34:04.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.777854556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.777855028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:04.527" endtime="20201029 09:34:04.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:04.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.777854556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.777855028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:04.851" endtime="20201029 09:34:04.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:04.861" endtime="20201029 09:34:04.862"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.524" endtime="20201029 09:34:04.863"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.522" endtime="20201029 09:34:04.863"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:04.868" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07...</msg>
<status status="PASS" starttime="20201029 09:34:04.864" endtime="20201029 09:34:04.868"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:04.873" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, ...</msg>
<status status="PASS" starttime="20201029 09:34:04.868" endtime="20201029 09:34:04.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:04.877" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:04.876" endtime="20201029 09:34:04.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:04.880" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:34:04.878" endtime="20201029 09:34:04.880"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.874" endtime="20201029 09:34:04.881"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.490" endtime="20201029 09:34:04.881"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.489" endtime="20201029 09:34:04.881"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:04.889" endtime="20201029 09:34:04.907"></status>
</kw>
<msg timestamp="20201029 09:34:04.907" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:04.887" endtime="20201029 09:34:04.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:04.910" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:04.908" endtime="20201029 09:34:04.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:04.911" endtime="20201029 09:34:04.912"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.885" endtime="20201029 09:34:04.913"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.883" endtime="20201029 09:34:04.913"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:04.919" endtime="20201029 09:34:05.253"></status>
</kw>
<msg timestamp="20201029 09:34:05.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.175738653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.175739125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:04.918" endtime="20201029 09:34:05.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:05.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.175738653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.175739125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:05.258" endtime="20201029 09:34:05.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:05.268" endtime="20201029 09:34:05.271"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.915" endtime="20201029 09:34:05.271"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.914" endtime="20201029 09:34:05.272"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:05.276" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 09:34:05.273" endtime="20201029 09:34:05.276"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:05.281" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, ...</msg>
<status status="PASS" starttime="20201029 09:34:05.277" endtime="20201029 09:34:05.281"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:05.285" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:05.284" endtime="20201029 09:34:05.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:05.288" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:34:05.286" endtime="20201029 09:34:05.288"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.282" endtime="20201029 09:34:05.289"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.882" endtime="20201029 09:34:05.289"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.882" endtime="20201029 09:34:05.289"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:05.297" endtime="20201029 09:34:05.313"></status>
</kw>
<msg timestamp="20201029 09:34:05.314" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:05.295" endtime="20201029 09:34:05.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:05.316" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:05.315" endtime="20201029 09:34:05.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:05.317" endtime="20201029 09:34:05.319"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.293" endtime="20201029 09:34:05.319"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.291" endtime="20201029 09:34:05.320"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:05.333" endtime="20201029 09:34:05.641"></status>
</kw>
<msg timestamp="20201029 09:34:05.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.557659264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.557659736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:05.324" endtime="20201029 09:34:05.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:05.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.557659264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.557659736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:05.646" endtime="20201029 09:34:05.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:05.656" endtime="20201029 09:34:05.658"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.322" endtime="20201029 09:34:05.659"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.320" endtime="20201029 09:34:05.659"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:05.663" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-...</msg>
<status status="PASS" starttime="20201029 09:34:05.660" endtime="20201029 09:34:05.663"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:05.669" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, ...</msg>
<status status="PASS" starttime="20201029 09:34:05.664" endtime="20201029 09:34:05.669"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:05.673" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:05.672" endtime="20201029 09:34:05.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:05.675" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:34:05.674" endtime="20201029 09:34:05.676"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.670" endtime="20201029 09:34:05.676"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.290" endtime="20201029 09:34:05.677"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.289" endtime="20201029 09:34:05.677"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:05.685" endtime="20201029 09:34:05.700"></status>
</kw>
<msg timestamp="20201029 09:34:05.700" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:05.683" endtime="20201029 09:34:05.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:05.703" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:05.701" endtime="20201029 09:34:05.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:05.704" endtime="20201029 09:34:05.714"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.681" endtime="20201029 09:34:05.714"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.679" endtime="20201029 09:34:05.715"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:05.722" endtime="20201029 09:34:06.060"></status>
</kw>
<msg timestamp="20201029 09:34:06.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.955531569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.955532042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:05.720" endtime="20201029 09:34:06.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:06.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.955531569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.955532042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:06.065" endtime="20201029 09:34:06.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:06.075" endtime="20201029 09:34:06.076"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.717" endtime="20201029 09:34:06.077"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.715" endtime="20201029 09:34:06.078"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:06.082" level="INFO">${RESULT} = [{'diff': 4.73000000056345e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.73000000056345e-07}, {'d...</msg>
<status status="PASS" starttime="20201029 09:34:06.078" endtime="20201029 09:34:06.082"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:06.089" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.719999...</msg>
<status status="PASS" starttime="20201029 09:34:06.083" endtime="20201029 09:34:06.090"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:06.094" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:06.093" endtime="20201029 09:34:06.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:06.096" level="INFO">VALUE: [4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:34:06.095" endtime="20201029 09:34:06.097"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.090" endtime="20201029 09:34:06.097"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.678" endtime="20201029 09:34:06.098"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.677" endtime="20201029 09:34:06.098"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:06.106" endtime="20201029 09:34:06.124"></status>
</kw>
<msg timestamp="20201029 09:34:06.124" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:06.104" endtime="20201029 09:34:06.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:06.127" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:06.125" endtime="20201029 09:34:06.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:06.128" endtime="20201029 09:34:06.130"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.101" endtime="20201029 09:34:06.130"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.100" endtime="20201029 09:34:06.131"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:06.137" endtime="20201029 09:34:06.458"></status>
</kw>
<msg timestamp="20201029 09:34:06.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.332373903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.332374375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:06.136" endtime="20201029 09:34:06.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:06.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.332373903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.332374375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:06.463" endtime="20201029 09:34:06.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:06.473" endtime="20201029 09:34:06.475"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.133" endtime="20201029 09:34:06.475"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.131" endtime="20201029 09:34:06.476"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:06.480" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07...</msg>
<status status="PASS" starttime="20201029 09:34:06.476" endtime="20201029 09:34:06.480"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:06.485" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.729999991681666e-07, 4.7...</msg>
<status status="PASS" starttime="20201029 09:34:06.481" endtime="20201029 09:34:06.485"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:06.489" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:06.488" endtime="20201029 09:34:06.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:06.492" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 5.410000003536197e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:34:06.490" endtime="20201029 09:34:06.492"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.486" endtime="20201029 09:34:06.493"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.099" endtime="20201029 09:34:06.493"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.098" endtime="20201029 09:34:06.493"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:06.502" endtime="20201029 09:34:06.519"></status>
</kw>
<msg timestamp="20201029 09:34:06.519" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:06.500" endtime="20201029 09:34:06.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:06.522" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:06.520" endtime="20201029 09:34:06.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:06.523" endtime="20201029 09:34:06.525"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.497" endtime="20201029 09:34:06.525"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.495" endtime="20201029 09:34:06.526"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:06.533" endtime="20201029 09:34:06.840"></status>
</kw>
<msg timestamp="20201029 09:34:06.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.743546972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.743547444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:06.531" endtime="20201029 09:34:06.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:06.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.743546972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.743547444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:06.846" endtime="20201029 09:34:06.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:06.856" endtime="20201029 09:34:06.857"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.528" endtime="20201029 09:34:06.858"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.526" endtime="20201029 09:34:06.858"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:06.862" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07},...</msg>
<status status="PASS" starttime="20201029 09:34:06.859" endtime="20201029 09:34:06.863"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:06.868" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4....</msg>
<status status="PASS" starttime="20201029 09:34:06.863" endtime="20201029 09:34:06.868"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:06.872" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:06.871" endtime="20201029 09:34:06.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:06.875" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7200000086178306e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:34:06.873" endtime="20201029 09:34:06.875"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.869" endtime="20201029 09:34:06.876"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.494" endtime="20201029 09:34:06.876"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.493" endtime="20201029 09:34:06.876"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:06.884" endtime="20201029 09:34:06.900"></status>
</kw>
<msg timestamp="20201029 09:34:06.901" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:06.883" endtime="20201029 09:34:06.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:06.903" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:06.902" endtime="20201029 09:34:06.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:06.904" endtime="20201029 09:34:06.906"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.880" endtime="20201029 09:34:06.907"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.878" endtime="20201029 09:34:06.907"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:06.914" endtime="20201029 09:34:07.230"></status>
</kw>
<msg timestamp="20201029 09:34:07.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.130460194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.130460667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:06.912" endtime="20201029 09:34:07.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:07.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.130460194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.130460667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:07.237" endtime="20201029 09:34:07.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:07.249" endtime="20201029 09:34:07.250"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.910" endtime="20201029 09:34:07.251"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.908" endtime="20201029 09:34:07.251"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:07.256" level="INFO">${RESULT} = [{'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 09:34:07.252" endtime="20201029 09:34:07.256"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:07.261" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, ...</msg>
<status status="PASS" starttime="20201029 09:34:07.257" endtime="20201029 09:34:07.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:07.266" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:07.265" endtime="20201029 09:34:07.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:07.268" level="INFO">VALUE: [4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:34:07.267" endtime="20201029 09:34:07.269"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.262" endtime="20201029 09:34:07.269"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.877" endtime="20201029 09:34:07.270"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.877" endtime="20201029 09:34:07.270"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:07.277" endtime="20201029 09:34:07.293"></status>
</kw>
<msg timestamp="20201029 09:34:07.294" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:07.276" endtime="20201029 09:34:07.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:07.296" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:07.295" endtime="20201029 09:34:07.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:07.297" endtime="20201029 09:34:07.299"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.273" endtime="20201029 09:34:07.300"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.272" endtime="20201029 09:34:07.300"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:07.308" endtime="20201029 09:34:07.626"></status>
</kw>
<msg timestamp="20201029 09:34:07.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.5032105, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.503210972, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:34:07.305" endtime="20201029 09:34:07.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:07.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.5032105, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.503210972, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:34:07.631" endtime="20201029 09:34:07.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:07.641" endtime="20201029 09:34:07.643"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.303" endtime="20201029 09:34:07.643"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.301" endtime="20201029 09:34:07.644"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:07.648" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 09:34:07.644" endtime="20201029 09:34:07.648"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:07.653" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, ...</msg>
<status status="PASS" starttime="20201029 09:34:07.649" endtime="20201029 09:34:07.653"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:07.657" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:07.656" endtime="20201029 09:34:07.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:07.659" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.419999995481817e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:34:07.658" endtime="20201029 09:34:07.660"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.654" endtime="20201029 09:34:07.660"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.270" endtime="20201029 09:34:07.661"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.270" endtime="20201029 09:34:07.661"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:07.670" endtime="20201029 09:34:07.685"></status>
</kw>
<msg timestamp="20201029 09:34:07.686" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:07.668" endtime="20201029 09:34:07.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:07.689" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:07.687" endtime="20201029 09:34:07.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:07.690" endtime="20201029 09:34:07.691"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.665" endtime="20201029 09:34:07.692"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.663" endtime="20201029 09:34:07.692"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:07.699" endtime="20201029 09:34:08.010"></status>
</kw>
<msg timestamp="20201029 09:34:08.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.884220597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.884221069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:07.697" endtime="20201029 09:34:08.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:08.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.884220597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.884221069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:08.015" endtime="20201029 09:34:08.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:08.025" endtime="20201029 09:34:08.026"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.695" endtime="20201029 09:34:08.027"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.693" endtime="20201029 09:34:08.027"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:08.032" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7200000086178306e-07}, {'diff': 4.7199999997360464e-...</msg>
<status status="PASS" starttime="20201029 09:34:08.028" endtime="20201029 09:34:08.032"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:08.037" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 09:34:08.033" endtime="20201029 09:34:08.037"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:08.041" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:08.040" endtime="20201029 09:34:08.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:08.044" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.729999991681666e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:34:08.043" endtime="20201029 09:34:08.044"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.038" endtime="20201029 09:34:08.045"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.662" endtime="20201029 09:34:08.045"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.661" endtime="20201029 09:34:08.046"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.273" endtime="20201029 09:34:08.046"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:34:00.199" endtime="20201029 09:34:08.046" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:08.053" endtime="20201029 09:34:08.072"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.051" endtime="20201029 09:34:08.073"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:08.087" endtime="20201029 09:34:08.102"></status>
</kw>
<msg timestamp="20201029 09:34:08.103" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:08.085" endtime="20201029 09:34:08.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:08.105" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:08.104" endtime="20201029 09:34:08.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:08.108" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:08.106" endtime="20201029 09:34:08.109"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:08.082" endtime="20201029 09:34:08.109"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:08.080" endtime="20201029 09:34:08.110"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.079" endtime="20201029 09:34:08.110"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:08.115" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:08.114" endtime="20201029 09:34:08.115"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.111" endtime="20201029 09:34:08.116"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.078" endtime="20201029 09:34:08.116"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.077" endtime="20201029 09:34:08.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:08.117" endtime="20201029 09:34:08.118"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.075" endtime="20201029 09:34:08.119"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.074" endtime="20201029 09:34:08.119"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.050" endtime="20201029 09:34:08.119"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:08.128" endtime="20201029 09:34:08.142"></status>
</kw>
<msg timestamp="20201029 09:34:08.142" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:08.126" endtime="20201029 09:34:08.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:08.145" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:08.143" endtime="20201029 09:34:08.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:08.146" endtime="20201029 09:34:08.147"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.124" endtime="20201029 09:34:08.148"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.122" endtime="20201029 09:34:08.148"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:08.155" endtime="20201029 09:34:08.439"></status>
</kw>
<msg timestamp="20201029 09:34:08.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065516556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065521972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:08.153" endtime="20201029 09:34:08.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:08.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065516556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065521972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:08.443" endtime="20201029 09:34:08.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:08.451" endtime="20201029 09:34:08.453"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.151" endtime="20201029 09:34:08.454"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.149" endtime="20201029 09:34:08.454"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:08.458" level="INFO">${RESULT} = [{'diff': 5.415999999994203e-06}, {'diff': 5.444999999992817e-06}, {'diff': 5.457999999999852e-06}, {'diff': 5.4450000000066945e-06}, {'diff': 5.431000000000186e-06}, {'diff': 5.430000000000712e-06}, ...</msg>
<status status="PASS" starttime="20201029 09:34:08.455" endtime="20201029 09:34:08.458"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:08.463" level="INFO">${OVERHEAD} = {'diff': [5.415999999994203e-06, 5.444999999992817e-06, 5.457999999999852e-06, 5.4450000000066945e-06, 5.431000000000186e-06, 5.430000000000712e-06, 5.443999999993343e-06, 5.430000000000712e-06, 5.457...</msg>
<status status="PASS" starttime="20201029 09:34:08.459" endtime="20201029 09:34:08.463"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:08.467" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:08.466" endtime="20201029 09:34:08.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:08.470" level="INFO">VALUE: [5.415999999994203e-06, 5.444999999992817e-06, 5.457999999999852e-06, 5.4450000000066945e-06, 5.431000000000186e-06, 5.430000000000712e-06, 5.443999999993343e-06, 5.430000000000712e-06, 5.457999999999852e-06, 5.444999999992817e-06, 5.430000000000712e-06, 5.416999999993677e-06, 5.403000000001046e-06, 5.457999999999852e-06, 5.443999999993343e-06, 5.4450000000066945e-06, 5.430000000000712e-06, 5.430000000000712e-06, 5.444999999992817e-06, 5.4450000000066945e-06, 5.415999999994203e-06, 5.430000000000712e-06, 5.431000000000186e-06, 5.485999999998992e-06, 5.430000000000712e-06, 5.416000000008081e-06, 5.457999999999852e-06, 5.472000000006361e-06, 5.416999999993677e-06, 5.347000000002766e-06, 5.431000000000186e-06, 5.4450000000066945e-06, 5.444000000007221e-06, 5.375000000001906e-06, 5.430000000000712e-06, 5.375000000001906e-06, 5.4450000000066945e-06, 5.473000000005834e-06, 5.431000000000186e-06, 5.444000000007221e-06, 5.514000000012009e-06, 5.416999999993677e-06, 5.430000000000712e-06, 5.443999999993343e-06, 5.430000000000712e-06, 5.431000000000186e-06, 5.472000000006361e-06, 5.430000000000712e-06, 5.444000000007221e-06, 5.415999999994203e-06]</msg>
<status status="PASS" starttime="20201029 09:34:08.468" endtime="20201029 09:34:08.470"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.464" endtime="20201029 09:34:08.471"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.121" endtime="20201029 09:34:08.471"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.120" endtime="20201029 09:34:08.471"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:08.479" endtime="20201029 09:34:08.498"></status>
</kw>
<msg timestamp="20201029 09:34:08.498" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:08.477" endtime="20201029 09:34:08.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:08.501" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:08.499" endtime="20201029 09:34:08.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:08.502" endtime="20201029 09:34:08.503"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.475" endtime="20201029 09:34:08.504"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.473" endtime="20201029 09:34:08.504"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:08.511" endtime="20201029 09:34:08.819"></status>
</kw>
<msg timestamp="20201029 09:34:08.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065966972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065972417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:08.509" endtime="20201029 09:34:08.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:08.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065966972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065972417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:08.827" endtime="20201029 09:34:08.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:08.839" endtime="20201029 09:34:08.840"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.507" endtime="20201029 09:34:08.841"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.505" endtime="20201029 09:34:08.841"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:08.846" level="INFO">${RESULT} = [{'diff': 5.4450000000066945e-06}, {'diff': 5.473000000005834e-06}, {'diff': 5.431000000000186e-06}, {'diff': 5.444000000007221e-06}, {'diff': 5.514000000012009e-06}, {'diff': 5.416999999993677e-06}, ...</msg>
<status status="PASS" starttime="20201029 09:34:08.842" endtime="20201029 09:34:08.847"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:08.851" level="INFO">${OVERHEAD} = {'diff': [5.4450000000066945e-06, 5.473000000005834e-06, 5.431000000000186e-06, 5.444000000007221e-06, 5.514000000012009e-06, 5.416999999993677e-06, 5.430000000000712e-06, 5.443999999993343e-06, 5.430...</msg>
<status status="PASS" starttime="20201029 09:34:08.847" endtime="20201029 09:34:08.851"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:08.855" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:08.854" endtime="20201029 09:34:08.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:08.858" level="INFO">VALUE: [5.4450000000066945e-06, 5.473000000005834e-06, 5.431000000000186e-06, 5.444000000007221e-06, 5.514000000012009e-06, 5.416999999993677e-06, 5.430000000000712e-06, 5.443999999993343e-06, 5.430000000000712e-06, 5.431000000000186e-06, 5.472000000006361e-06, 5.430000000000712e-06, 5.444000000007221e-06, 5.415999999994203e-06, 5.458999999985448e-06, 5.430000000028468e-06, 5.389000000022293e-06, 5.431000000000186e-06, 5.45800000001373e-06, 5.417000000007555e-06, 5.444999999992817e-06, 5.431000000000186e-06, 5.4299999999729565e-06, 5.444999999992817e-06, 5.4159999999803254e-06, 5.403000000014924e-06, 5.472000000006361e-06, 5.4719999999508495e-06, 5.431000000000186e-06, 5.444000000021099e-06, 5.45800000001373e-06, 5.431000000000186e-06, 5.417000000007555e-06, 5.4299999999729565e-06, 5.4299999999729565e-06, 5.417000000007555e-06, 5.389000000022293e-06, 5.459000000040959e-06, 5.361000000037031e-06, 5.431000000000186e-06, 5.47300000003359e-06, 5.45800000001373e-06, 5.431000000000186e-06, 5.444000000021099e-06, 5.4439999999655875e-06, 5.458999999985448e-06, 5.444000000021099e-06, 5.458999999985448e-06, 5.417000000007555e-06, 5.445000000048328e-06, 5.431000000000186e-06, 5.417000000007555e-06, 5.431000000000186e-06, 5.444000000021099e-06, 5.431000000000186e-06, 5.4439999999655875e-06, 5.444999999992817e-06, 5.444000000021099e-06, 5.4299999999729565e-06, 5.444999999992817e-06, 5.444999999992817e-06, 5.4299999999729565e-06, 5.458999999985448e-06, 5.431000000000186e-06]</msg>
<status status="PASS" starttime="20201029 09:34:08.857" endtime="20201029 09:34:08.858"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.852" endtime="20201029 09:34:08.859"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.472" endtime="20201029 09:34:08.859"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.471" endtime="20201029 09:34:08.859"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:08.867" endtime="20201029 09:34:08.881"></status>
</kw>
<msg timestamp="20201029 09:34:08.882" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:08.866" endtime="20201029 09:34:08.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:08.884" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:08.883" endtime="20201029 09:34:08.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:08.885" endtime="20201029 09:34:08.887"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.863" endtime="20201029 09:34:08.887"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.861" endtime="20201029 09:34:08.888"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:08.895" endtime="20201029 09:34:09.196"></status>
</kw>
<msg timestamp="20201029 09:34:09.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.407684569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.40769, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 09:34:08.894" endtime="20201029 09:34:09.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:09.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.407684569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.40769, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 09:34:09.201" endtime="20201029 09:34:09.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:09.212" endtime="20201029 09:34:09.213"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.890" endtime="20201029 09:34:09.214"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.889" endtime="20201029 09:34:09.214"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:09.218" level="INFO">${RESULT} = [{'diff': 5.431000000000186e-06}, {'diff': 5.417000000007555e-06}, {'diff': 5.431000000000186e-06}, {'diff': 5.444000000021099e-06}, {'diff': 5.431000000000186e-06}, {'diff': 5.4439999999655875e-06}, ...</msg>
<status status="PASS" starttime="20201029 09:34:09.215" endtime="20201029 09:34:09.219"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:09.223" level="INFO">${OVERHEAD} = {'diff': [5.431000000000186e-06, 5.417000000007555e-06, 5.431000000000186e-06, 5.444000000021099e-06, 5.431000000000186e-06, 5.4439999999655875e-06, 5.444999999992817e-06, 5.444000000021099e-06, 5.429...</msg>
<status status="PASS" starttime="20201029 09:34:09.219" endtime="20201029 09:34:09.224"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:09.230" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:09.226" endtime="20201029 09:34:09.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:09.233" level="INFO">VALUE: [5.431000000000186e-06, 5.417000000007555e-06, 5.431000000000186e-06, 5.444000000021099e-06, 5.431000000000186e-06, 5.4439999999655875e-06, 5.444999999992817e-06, 5.444000000021099e-06, 5.4299999999729565e-06, 5.444999999992817e-06, 5.444999999992817e-06, 5.4299999999729565e-06, 5.458999999985448e-06, 5.431000000000186e-06, 5.444000000021099e-06, 5.4299999999729565e-06, 5.416000000035837e-06, 5.4859999999434805e-06, 5.444999999992817e-06, 5.4299999999729565e-06, 5.417000000007555e-06, 5.4299999999729565e-06, 5.4589999999299366e-06, 5.472000000006361e-06, 5.4579999999582185e-06, 5.444999999992817e-06, 5.417000000007555e-06, 5.416000000035837e-06, 5.444999999992817e-06, 5.4309999999446745e-06, 5.4299999999729565e-06, 5.360999999926008e-06, 5.389000000022293e-06, 5.4579999999582185e-06, 5.416999999896532e-06, 5.499999999991623e-06, 5.3749999999741505e-06, 5.443999999910076e-06, 5.472000000006361e-06, 5.444999999992817e-06, 5.486000000054503e-06, 5.472000000006361e-06, 5.4299999999729565e-06, 5.389000000022293e-06, 5.346999999988888e-06, 5.4309999999446745e-06, 5.444000000021099e-06, 5.444999999992817e-06, 5.416000000035837e-06, 5.4299999999729565e-06, 5.459000000040959e-06, 5.4579999999582185e-06, 5.4579999999582185e-06, 5.443999999910076e-06, 5.458000000069241e-06, 5.4309999999446745e-06, 5.431000000055697e-06, 5.471999999895338e-06, 5.444999999992817e-06, 5.361000000037031e-06, 5.444999999992817e-06, 5.417000000007555e-06, 5.444999999992817e-06, 5.444000000021099e-06]</msg>
<status status="PASS" starttime="20201029 09:34:09.231" endtime="20201029 09:34:09.233"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:09.224" endtime="20201029 09:34:09.234"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.860" endtime="20201029 09:34:09.234"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.860" endtime="20201029 09:34:09.234"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:09.242" endtime="20201029 09:34:09.258"></status>
</kw>
<msg timestamp="20201029 09:34:09.258" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:09.240" endtime="20201029 09:34:09.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:09.261" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:09.259" endtime="20201029 09:34:09.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:09.262" endtime="20201029 09:34:09.263"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:09.238" endtime="20201029 09:34:09.264"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:09.236" endtime="20201029 09:34:09.264"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:09.271" endtime="20201029 09:34:09.577"></status>
</kw>
<msg timestamp="20201029 09:34:09.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.784522347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.784527806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:09.269" endtime="20201029 09:34:09.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:09.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.784522347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.784527806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:09.582" endtime="20201029 09:34:09.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:09.592" endtime="20201029 09:34:09.594"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:09.267" endtime="20201029 09:34:09.594"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:09.265" endtime="20201029 09:34:09.595"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:09.599" level="INFO">${RESULT} = [{'diff': 5.459000000040959e-06}, {'diff': 5.4579999999582185e-06}, {'diff': 5.4579999999582185e-06}, {'diff': 5.443999999910076e-06}, {'diff': 5.458000000069241e-06}, {'diff': 5.4309999999446745e-06}...</msg>
<status status="PASS" starttime="20201029 09:34:09.596" endtime="20201029 09:34:09.599"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:09.605" level="INFO">${OVERHEAD} = {'diff': [5.459000000040959e-06, 5.4579999999582185e-06, 5.4579999999582185e-06, 5.443999999910076e-06, 5.458000000069241e-06, 5.4309999999446745e-06, 5.431000000055697e-06, 5.471999999895338e-06, 5.4...</msg>
<status status="PASS" starttime="20201029 09:34:09.600" endtime="20201029 09:34:09.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:09.609" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:09.608" endtime="20201029 09:34:09.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:09.611" level="INFO">VALUE: [5.459000000040959e-06, 5.4579999999582185e-06, 5.4579999999582185e-06, 5.443999999910076e-06, 5.458000000069241e-06, 5.4309999999446745e-06, 5.431000000055697e-06, 5.471999999895338e-06, 5.444999999992817e-06, 5.361000000037031e-06, 5.444999999992817e-06, 5.417000000007555e-06, 5.444999999992817e-06, 5.444000000021099e-06, 5.416000000035837e-06, 5.444999999992817e-06, 5.4579999999582185e-06, 5.443999999910076e-06, 5.389000000022293e-06, 5.417000000118577e-06, 5.416999999896532e-06, 5.401999999987694e-06, 5.443999999910076e-06, 5.417000000118577e-06, 5.430000000083979e-06, 5.444999999992817e-06, 5.416000000035837e-06, 5.472000000006361e-06, 5.416999999896532e-06, 5.416999999896532e-06, 5.3749999999741505e-06, 5.444999999992817e-06, 5.4309999999446745e-06, 5.430000000083979e-06, 5.429999999861934e-06, 5.429999999861934e-06, 5.431000000166719e-06, 5.444999999992817e-06, 5.4999999998806e-06, 5.416999999896532e-06, 5.4579999999582185e-06, 5.417000000118577e-06, 5.417000000118577e-06, 5.443999999910076e-06, 5.430000000083979e-06, 5.4729999998670564e-06, 5.4309999999446745e-06, 5.444999999992817e-06, 5.429999999861934e-06, 5.443999999910076e-06, 5.444999999992817e-06, 5.485999999832458e-06, 5.431000000166719e-06, 5.4579999999582185e-06, 5.444999999992817e-06, 5.360999999926008e-06, 5.403000000070435e-06, 5.431000000166719e-06, 5.430000000083979e-06, 5.417000000118577e-06, 5.429999999861934e-06, 5.444999999992817e-06, 5.431000000166719e-06, 5.472000000006361e-06]</msg>
<status status="PASS" starttime="20201029 09:34:09.610" endtime="20201029 09:34:09.612"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:09.606" endtime="20201029 09:34:09.612"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:09.235" endtime="20201029 09:34:09.613"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:09.235" endtime="20201029 09:34:09.613"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:09.621" endtime="20201029 09:34:09.634"></status>
</kw>
<msg timestamp="20201029 09:34:09.635" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:09.619" endtime="20201029 09:34:09.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:09.637" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:09.636" endtime="20201029 09:34:09.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:09.638" endtime="20201029 09:34:09.640"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:09.617" endtime="20201029 09:34:09.640"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:09.615" endtime="20201029 09:34:09.641"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:09.647" endtime="20201029 09:34:09.959"></status>
</kw>
<msg timestamp="20201029 09:34:09.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.151381097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.151386542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:09.646" endtime="20201029 09:34:09.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:09.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.151381097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.151386542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:09.965" endtime="20201029 09:34:09.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:09.975" endtime="20201029 09:34:09.976"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:09.643" endtime="20201029 09:34:09.977"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:09.641" endtime="20201029 09:34:09.977"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:09.982" level="INFO">${RESULT} = [{'diff': 5.444999999992817e-06}, {'diff': 5.485999999832458e-06}, {'diff': 5.431000000166719e-06}, {'diff': 5.4579999999582185e-06}, {'diff': 5.444999999992817e-06}, {'diff': 5.360999999926008e-06}, ...</msg>
<status status="PASS" starttime="20201029 09:34:09.978" endtime="20201029 09:34:09.982"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:09.987" level="INFO">${OVERHEAD} = {'diff': [5.444999999992817e-06, 5.485999999832458e-06, 5.431000000166719e-06, 5.4579999999582185e-06, 5.444999999992817e-06, 5.360999999926008e-06, 5.403000000070435e-06, 5.431000000166719e-06, 5.430...</msg>
<status status="PASS" starttime="20201029 09:34:09.983" endtime="20201029 09:34:09.987"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:09.991" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:09.990" endtime="20201029 09:34:09.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:09.993" level="INFO">VALUE: [5.444999999992817e-06, 5.485999999832458e-06, 5.431000000166719e-06, 5.4579999999582185e-06, 5.444999999992817e-06, 5.360999999926008e-06, 5.403000000070435e-06, 5.431000000166719e-06, 5.430000000083979e-06, 5.417000000118577e-06, 5.429999999861934e-06, 5.444999999992817e-06, 5.431000000166719e-06, 5.472000000006361e-06, 5.401999999987694e-06, 5.4579999999582185e-06, 5.444000000132121e-06, 5.487000000137243e-06, 5.416000000035837e-06, 5.4309999999446745e-06, 5.416999999896532e-06, 5.3749999999741505e-06, 5.4579999999582185e-06, 5.486000000054503e-06, 5.443999999910076e-06, 5.444999999992817e-06, 5.443999999910076e-06, 5.429999999861934e-06, 5.4309999999446745e-06, 5.444999999992817e-06, 5.416999999896532e-06, 5.416000000035837e-06, 5.430000000083979e-06, 5.430000000083979e-06, 5.4579999999582185e-06, 5.430000000083979e-06, 5.430000000083979e-06, 5.429999999861934e-06, 5.444999999992817e-06, 5.444999999992817e-06, 5.416000000035837e-06, 5.444999999992817e-06, 5.430000000083979e-06, 5.514000000150787e-06, 5.472000000006361e-06, 5.443999999910076e-06, 5.430000000083979e-06, 5.458000000180263e-06, 5.417000000118577e-06, 5.403000000070435e-06, 5.401999999987694e-06, 5.4309999999446745e-06, 5.430000000083979e-06, 5.4309999999446745e-06, 5.417000000118577e-06, 5.444000000132121e-06, 5.416999999896532e-06, 5.417000000118577e-06, 5.389000000022293e-06, 5.417000000118577e-06, 5.459000000040959e-06, 5.4999999998806e-06, 5.444999999992817e-06, 5.444999999992817e-06]</msg>
<status status="PASS" starttime="20201029 09:34:09.992" endtime="20201029 09:34:09.994"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:09.987" endtime="20201029 09:34:09.994"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:09.614" endtime="20201029 09:34:09.995"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:09.613" endtime="20201029 09:34:09.995"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:10.004" endtime="20201029 09:34:10.021"></status>
</kw>
<msg timestamp="20201029 09:34:10.021" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:10.001" endtime="20201029 09:34:10.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:10.024" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:10.023" endtime="20201029 09:34:10.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:10.025" endtime="20201029 09:34:10.027"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:09.998" endtime="20201029 09:34:10.027"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:09.997" endtime="20201029 09:34:10.027"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:10.034" endtime="20201029 09:34:10.333"></status>
</kw>
<msg timestamp="20201029 09:34:10.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.517305917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.517311319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:10.032" endtime="20201029 09:34:10.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:10.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.517305917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.517311319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:10.345" endtime="20201029 09:34:10.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:10.355" endtime="20201029 09:34:10.356"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.030" endtime="20201029 09:34:10.357"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.028" endtime="20201029 09:34:10.357"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:10.361" level="INFO">${RESULT} = [{'diff': 5.401999999987694e-06}, {'diff': 5.4309999999446745e-06}, {'diff': 5.430000000083979e-06}, {'diff': 5.4309999999446745e-06}, {'diff': 5.417000000118577e-06}, {'diff': 5.444000000132121e-06},...</msg>
<status status="PASS" starttime="20201029 09:34:10.358" endtime="20201029 09:34:10.362"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:10.367" level="INFO">${OVERHEAD} = {'diff': [5.401999999987694e-06, 5.4309999999446745e-06, 5.430000000083979e-06, 5.4309999999446745e-06, 5.417000000118577e-06, 5.444000000132121e-06, 5.416999999896532e-06, 5.417000000118577e-06, 5.38...</msg>
<status status="PASS" starttime="20201029 09:34:10.362" endtime="20201029 09:34:10.367"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:10.371" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:10.370" endtime="20201029 09:34:10.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:10.374" level="INFO">VALUE: [5.401999999987694e-06, 5.4309999999446745e-06, 5.430000000083979e-06, 5.4309999999446745e-06, 5.417000000118577e-06, 5.444000000132121e-06, 5.416999999896532e-06, 5.417000000118577e-06, 5.389000000022293e-06, 5.417000000118577e-06, 5.459000000040959e-06, 5.4999999998806e-06, 5.444999999992817e-06, 5.444999999992817e-06, 5.430000000083979e-06, 5.443999999910076e-06, 5.431000000166719e-06, 5.486000000054503e-06, 5.443999999910076e-06, 5.416000000035837e-06, 5.472000000006361e-06, 5.430000000083979e-06, 5.444999999992817e-06, 5.443999999910076e-06, 5.417000000118577e-06, 5.417000000118577e-06, 5.416999999896532e-06, 5.486000000054503e-06, 5.416000000035837e-06, 5.430000000083979e-06, 5.444999999992817e-06, 5.443999999910076e-06, 5.486000000054503e-06, 5.444999999992817e-06, 5.4729999998670564e-06, 5.444999999992817e-06, 5.416000000035837e-06, 5.417000000118577e-06, 5.4309999999446745e-06, 5.416999999896532e-06, 5.444999999992817e-06, 5.485999999832458e-06, 5.430000000083979e-06, 5.4579999999582185e-06, 5.458000000180263e-06, 5.486000000054503e-06, 5.4999999998806e-06, 5.389000000022293e-06, 5.403000000070435e-06, 5.389000000022293e-06, 5.416999999896532e-06, 5.431000000166719e-06, 5.443999999910076e-06, 5.459000000040959e-06, 5.431000000166719e-06, 5.443999999910076e-06, 5.430000000083979e-06, 5.430000000083979e-06, 5.444999999992817e-06, 5.444999999992817e-06, 5.401999999987694e-06, 5.430000000083979e-06, 5.416000000035837e-06, 5.472000000006361e-06]</msg>
<status status="PASS" starttime="20201029 09:34:10.372" endtime="20201029 09:34:10.374"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.368" endtime="20201029 09:34:10.375"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:09.996" endtime="20201029 09:34:10.375"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:09.995" endtime="20201029 09:34:10.375"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:10.383" endtime="20201029 09:34:10.398"></status>
</kw>
<msg timestamp="20201029 09:34:10.399" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:10.381" endtime="20201029 09:34:10.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:10.401" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:10.400" endtime="20201029 09:34:10.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:10.402" endtime="20201029 09:34:10.404"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.379" endtime="20201029 09:34:10.405"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.377" endtime="20201029 09:34:10.405"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:10.411" endtime="20201029 09:34:10.715"></status>
</kw>
<msg timestamp="20201029 09:34:10.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.892341472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.892346889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:10.410" endtime="20201029 09:34:10.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:10.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.892341472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.892346889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:10.720" endtime="20201029 09:34:10.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:10.730" endtime="20201029 09:34:10.732"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.407" endtime="20201029 09:34:10.733"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.406" endtime="20201029 09:34:10.733"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:10.738" level="INFO">${RESULT} = [{'diff': 5.416999999896532e-06}, {'diff': 5.431000000166719e-06}, {'diff': 5.443999999910076e-06}, {'diff': 5.459000000040959e-06}, {'diff': 5.431000000166719e-06}, {'diff': 5.443999999910076e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:34:10.734" endtime="20201029 09:34:10.738"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:10.743" level="INFO">${OVERHEAD} = {'diff': [5.416999999896532e-06, 5.431000000166719e-06, 5.443999999910076e-06, 5.459000000040959e-06, 5.431000000166719e-06, 5.443999999910076e-06, 5.430000000083979e-06, 5.430000000083979e-06, 5.4449...</msg>
<status status="PASS" starttime="20201029 09:34:10.739" endtime="20201029 09:34:10.744"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:10.747" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:10.746" endtime="20201029 09:34:10.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:10.750" level="INFO">VALUE: [5.416999999896532e-06, 5.431000000166719e-06, 5.443999999910076e-06, 5.459000000040959e-06, 5.431000000166719e-06, 5.443999999910076e-06, 5.430000000083979e-06, 5.430000000083979e-06, 5.444999999992817e-06, 5.444999999992817e-06, 5.401999999987694e-06, 5.430000000083979e-06, 5.416000000035837e-06, 5.472000000006361e-06, 5.416999999674488e-06, 5.4579999999582185e-06, 5.416000000035837e-06, 5.4579999999582185e-06, 5.486000000054503e-06, 5.4309999999446745e-06, 5.471999999784316e-06, 5.4309999999446745e-06, 5.40299999984839e-06, 5.445000000214861e-06, 5.445000000214861e-06, 5.416999999674488e-06, 5.444000000132121e-06, 5.445000000214861e-06, 5.429999999861934e-06, 5.4309999999446745e-06, 5.472000000228405e-06, 5.458000000402308e-06, 5.4999999998806e-06, 5.444000000132121e-06, 5.444999999770772e-06, 5.445000000214861e-06, 5.444999999770772e-06, 5.429999999861934e-06, 5.444000000132121e-06, 5.444999999770772e-06, 5.4309999999446745e-06, 5.417000000118577e-06, 5.4309999999446745e-06, 5.416999999674488e-06, 5.458000000402308e-06, 5.471999999784316e-06, 5.4309999999446745e-06, 5.4579999999582185e-06, 5.4579999999582185e-06, 5.4579999999582185e-06, 5.417000000118577e-06, 5.459000000040959e-06, 5.443999999688032e-06, 5.429999999861934e-06, 5.444999999770772e-06, 5.416000000035837e-06, 5.445000000214861e-06, 5.4579999999582185e-06, 5.416000000035837e-06, 5.458000000402308e-06, 5.417000000118577e-06, 5.430000000306023e-06, 5.374999999752106e-06, 5.443999999688032e-06]</msg>
<status status="PASS" starttime="20201029 09:34:10.749" endtime="20201029 09:34:10.750"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.744" endtime="20201029 09:34:10.751"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.376" endtime="20201029 09:34:10.751"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.376" endtime="20201029 09:34:10.752"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:10.759" endtime="20201029 09:34:10.775"></status>
</kw>
<msg timestamp="20201029 09:34:10.775" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:10.758" endtime="20201029 09:34:10.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:10.778" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:10.776" endtime="20201029 09:34:10.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:10.779" endtime="20201029 09:34:10.781"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.755" endtime="20201029 09:34:10.781"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.754" endtime="20201029 09:34:10.782"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:10.789" endtime="20201029 09:34:11.097"></status>
</kw>
<msg timestamp="20201029 09:34:11.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.260996708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.261002125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:10.788" endtime="20201029 09:34:11.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:11.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.260996708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.261002125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:11.103" endtime="20201029 09:34:11.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:11.113" endtime="20201029 09:34:11.114"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.785" endtime="20201029 09:34:11.115"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.783" endtime="20201029 09:34:11.115"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:11.119" level="INFO">${RESULT} = [{'diff': 5.417000000118577e-06}, {'diff': 5.459000000040959e-06}, {'diff': 5.443999999688032e-06}, {'diff': 5.429999999861934e-06}, {'diff': 5.444999999770772e-06}, {'diff': 5.416000000035837e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:34:11.116" endtime="20201029 09:34:11.120"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:11.124" level="INFO">${OVERHEAD} = {'diff': [5.417000000118577e-06, 5.459000000040959e-06, 5.443999999688032e-06, 5.429999999861934e-06, 5.444999999770772e-06, 5.416000000035837e-06, 5.445000000214861e-06, 5.4579999999582185e-06, 5.416...</msg>
<status status="PASS" starttime="20201029 09:34:11.120" endtime="20201029 09:34:11.124"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:11.128" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:11.127" endtime="20201029 09:34:11.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:11.131" level="INFO">VALUE: [5.417000000118577e-06, 5.459000000040959e-06, 5.443999999688032e-06, 5.429999999861934e-06, 5.444999999770772e-06, 5.416000000035837e-06, 5.445000000214861e-06, 5.4579999999582185e-06, 5.416000000035837e-06, 5.458000000402308e-06, 5.417000000118577e-06, 5.430000000306023e-06, 5.374999999752106e-06, 5.443999999688032e-06, 5.429999999861934e-06, 5.445000000214861e-06, 5.444000000132121e-06, 5.443999999688032e-06, 5.429999999861934e-06, 5.471999999784316e-06, 5.4309999999446745e-06, 5.389000000022293e-06, 5.416999999674488e-06, 5.486000000054503e-06, 5.374999999752106e-06, 5.4999999998806e-06, 5.429999999861934e-06, 5.444999999770772e-06, 5.429999999861934e-06, 5.514000000150787e-06, 5.444000000132121e-06, 5.417000000118577e-06, 5.4309999999446745e-06, 5.4579999999582185e-06, 5.4579999999582185e-06, 5.444000000132121e-06, 5.403000000292479e-06, 5.459000000040959e-06, 5.445000000214861e-06, 5.50000000032469e-06, 5.444999999770772e-06, 5.430000000306023e-06, 5.4579999999582185e-06, 5.417000000118577e-06, 5.444000000132121e-06, 5.416999999674488e-06, 5.471999999784316e-06, 5.4579999999582185e-06, 5.431000000388764e-06, 5.429999999861934e-06, 5.445000000214861e-06, 5.417000000118577e-06, 5.429999999861934e-06, 5.416999999674488e-06, 5.403000000292479e-06, 5.471999999784316e-06, 5.472000000228405e-06, 5.417000000118577e-06, 5.4579999999582185e-06, 5.4309999999446745e-06, 5.444000000132121e-06, 5.417000000118577e-06, 5.429999999861934e-06, 5.417000000118577e-06]</msg>
<status status="PASS" starttime="20201029 09:34:11.129" endtime="20201029 09:34:11.131"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.125" endtime="20201029 09:34:11.132"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.752" endtime="20201029 09:34:11.132"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.752" endtime="20201029 09:34:11.132"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:11.141" endtime="20201029 09:34:11.156"></status>
</kw>
<msg timestamp="20201029 09:34:11.157" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:11.139" endtime="20201029 09:34:11.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:11.159" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:11.158" endtime="20201029 09:34:11.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:11.160" endtime="20201029 09:34:11.162"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.136" endtime="20201029 09:34:11.163"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.134" endtime="20201029 09:34:11.163"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:11.170" endtime="20201029 09:34:11.483"></status>
</kw>
<msg timestamp="20201029 09:34:11.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.627812347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.627817792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:11.168" endtime="20201029 09:34:11.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:11.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.627812347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.627817792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:11.490" endtime="20201029 09:34:11.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:11.502" endtime="20201029 09:34:11.513"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.165" endtime="20201029 09:34:11.514"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.164" endtime="20201029 09:34:11.514"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:11.518" level="INFO">${RESULT} = [{'diff': 5.445000000214861e-06}, {'diff': 5.417000000118577e-06}, {'diff': 5.429999999861934e-06}, {'diff': 5.416999999674488e-06}, {'diff': 5.403000000292479e-06}, {'diff': 5.471999999784316e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:34:11.515" endtime="20201029 09:34:11.519"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:11.524" level="INFO">${OVERHEAD} = {'diff': [5.445000000214861e-06, 5.417000000118577e-06, 5.429999999861934e-06, 5.416999999674488e-06, 5.403000000292479e-06, 5.471999999784316e-06, 5.472000000228405e-06, 5.417000000118577e-06, 5.4579...</msg>
<status status="PASS" starttime="20201029 09:34:11.520" endtime="20201029 09:34:11.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:11.528" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:11.527" endtime="20201029 09:34:11.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:11.531" level="INFO">VALUE: [5.445000000214861e-06, 5.417000000118577e-06, 5.429999999861934e-06, 5.416999999674488e-06, 5.403000000292479e-06, 5.471999999784316e-06, 5.472000000228405e-06, 5.417000000118577e-06, 5.4579999999582185e-06, 5.4309999999446745e-06, 5.444000000132121e-06, 5.417000000118577e-06, 5.429999999861934e-06, 5.417000000118577e-06, 5.417000000118577e-06, 5.4309999999446745e-06, 5.417000000118577e-06, 5.417000000118577e-06, 5.444000000132121e-06, 5.471999999784316e-06, 5.444000000132121e-06, 5.431000000388764e-06, 5.443999999688032e-06, 5.429999999861934e-06, 5.471999999784316e-06, 5.431000000388764e-06, 5.416000000035837e-06, 5.4309999999446745e-06, 5.429999999861934e-06, 5.417000000118577e-06, 5.416999999674488e-06, 5.40299999984839e-06, 5.402000000209739e-06, 5.429999999861934e-06, 5.416999999674488e-06, 5.4309999999446745e-06, 5.445000000214861e-06, 5.4579999999582185e-06, 5.4309999999446745e-06, 5.4579999999582185e-06, 5.459000000040959e-06, 5.40299999984839e-06, 5.40299999984839e-06, 5.416000000035837e-06, 5.459000000040959e-06, 5.389000000022293e-06, 5.429999999861934e-06, 5.444999999770772e-06, 5.4579999999582185e-06, 5.4309999999446745e-06, 5.430000000306023e-06, 5.417000000118577e-06, 5.417000000118577e-06, 5.444000000132121e-06, 5.4309999999446745e-06, 5.360999999926008e-06, 5.403000000292479e-06, 5.402000000209739e-06, 5.443999999688032e-06, 5.445000000214861e-06, 5.416999999674488e-06, 5.388999999578203e-06, 5.429999999861934e-06, 5.347000000099911e-06]</msg>
<status status="PASS" starttime="20201029 09:34:11.529" endtime="20201029 09:34:11.531"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.525" endtime="20201029 09:34:11.532"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.133" endtime="20201029 09:34:11.532"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.133" endtime="20201029 09:34:11.532"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:11.540" endtime="20201029 09:34:11.561"></status>
</kw>
<msg timestamp="20201029 09:34:11.561" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:11.539" endtime="20201029 09:34:11.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:11.564" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:11.562" endtime="20201029 09:34:11.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:11.565" endtime="20201029 09:34:11.566"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.536" endtime="20201029 09:34:11.567"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.534" endtime="20201029 09:34:11.567"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:11.574" endtime="20201029 09:34:11.896"></status>
</kw>
<msg timestamp="20201029 09:34:11.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.999666653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.999672083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:11.572" endtime="20201029 09:34:11.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:11.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.999666653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.999672083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:11.901" endtime="20201029 09:34:11.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:11.911" endtime="20201029 09:34:11.912"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.569" endtime="20201029 09:34:11.913"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.568" endtime="20201029 09:34:11.913"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:11.917" level="INFO">${RESULT} = [{'diff': 5.430000000306023e-06}, {'diff': 5.417000000118577e-06}, {'diff': 5.417000000118577e-06}, {'diff': 5.444000000132121e-06}, {'diff': 5.4309999999446745e-06}, {'diff': 5.360999999926008e-06}, ...</msg>
<status status="PASS" starttime="20201029 09:34:11.914" endtime="20201029 09:34:11.918"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:11.923" level="INFO">${OVERHEAD} = {'diff': [5.430000000306023e-06, 5.417000000118577e-06, 5.417000000118577e-06, 5.444000000132121e-06, 5.4309999999446745e-06, 5.360999999926008e-06, 5.403000000292479e-06, 5.402000000209739e-06, 5.443...</msg>
<status status="PASS" starttime="20201029 09:34:11.918" endtime="20201029 09:34:11.923"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:11.927" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:11.926" endtime="20201029 09:34:11.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:11.930" level="INFO">VALUE: [5.430000000306023e-06, 5.417000000118577e-06, 5.417000000118577e-06, 5.444000000132121e-06, 5.4309999999446745e-06, 5.360999999926008e-06, 5.403000000292479e-06, 5.402000000209739e-06, 5.443999999688032e-06, 5.445000000214861e-06, 5.416999999674488e-06, 5.388999999578203e-06, 5.429999999861934e-06, 5.347000000099911e-06, 5.417000000118577e-06, 5.416000000035837e-06, 5.402000000209739e-06, 5.444000000132121e-06, 5.486000000054503e-06, 5.429999999861934e-06, 5.417000000118577e-06, 5.4999999998806e-06, 5.402000000209739e-06, 5.431000000388764e-06, 5.443999999688032e-06, 5.445000000214861e-06, 5.444000000132121e-06, 5.445000000214861e-06, 5.429999999861934e-06, 5.417000000118577e-06, 5.429999999861934e-06, 5.429999999861934e-06, 5.444999999770772e-06, 5.459000000040959e-06, 5.40299999984839e-06, 5.40299999984839e-06, 5.403000000292479e-06, 5.4309999999446745e-06, 5.40299999984839e-06, 5.4309999999446745e-06, 5.417000000118577e-06, 5.417000000118577e-06, 5.445000000214861e-06, 5.417000000118577e-06, 5.444000000132121e-06, 5.444999999770772e-06, 5.444999999770772e-06, 5.416000000035837e-06, 5.429999999861934e-06, 5.514000000150787e-06, 5.458000000402308e-06, 5.445000000214861e-06, 5.444000000132121e-06, 5.416000000035837e-06, 5.429999999861934e-06, 5.4309999999446745e-06, 5.429999999861934e-06, 5.472000000228405e-06, 5.444999999770772e-06, 5.417000000118577e-06, 5.444999999770772e-06, 5.417000000118577e-06, 5.402000000209739e-06, 5.40299999984839e-06]</msg>
<status status="PASS" starttime="20201029 09:34:11.928" endtime="20201029 09:34:11.930"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.924" endtime="20201029 09:34:11.931"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.533" endtime="20201029 09:34:11.931"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.533" endtime="20201029 09:34:11.931"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:11.939" endtime="20201029 09:34:11.956"></status>
</kw>
<msg timestamp="20201029 09:34:11.956" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:11.938" endtime="20201029 09:34:11.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:11.959" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:11.957" endtime="20201029 09:34:11.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:11.960" endtime="20201029 09:34:11.961"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.935" endtime="20201029 09:34:11.962"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.933" endtime="20201029 09:34:11.962"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:11.970" endtime="20201029 09:34:12.279"></status>
</kw>
<msg timestamp="20201029 09:34:12.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.390699667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.390705125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:11.968" endtime="20201029 09:34:12.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:12.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.390699667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.390705125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:12.284" endtime="20201029 09:34:12.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:12.295" endtime="20201029 09:34:12.297"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.965" endtime="20201029 09:34:12.298"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.963" endtime="20201029 09:34:12.299"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:12.304" level="INFO">${RESULT} = [{'diff': 5.458000000402308e-06}, {'diff': 5.445000000214861e-06}, {'diff': 5.444000000132121e-06}, {'diff': 5.416000000035837e-06}, {'diff': 5.429999999861934e-06}, {'diff': 5.4309999999446745e-06}, ...</msg>
<status status="PASS" starttime="20201029 09:34:12.300" endtime="20201029 09:34:12.305"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:12.309" level="INFO">${OVERHEAD} = {'diff': [5.458000000402308e-06, 5.445000000214861e-06, 5.444000000132121e-06, 5.416000000035837e-06, 5.429999999861934e-06, 5.4309999999446745e-06, 5.429999999861934e-06, 5.472000000228405e-06, 5.444...</msg>
<status status="PASS" starttime="20201029 09:34:12.305" endtime="20201029 09:34:12.309"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:12.313" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:12.312" endtime="20201029 09:34:12.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:12.316" level="INFO">VALUE: [5.458000000402308e-06, 5.445000000214861e-06, 5.444000000132121e-06, 5.416000000035837e-06, 5.429999999861934e-06, 5.4309999999446745e-06, 5.429999999861934e-06, 5.472000000228405e-06, 5.444999999770772e-06, 5.417000000118577e-06, 5.444999999770772e-06, 5.417000000118577e-06, 5.402000000209739e-06, 5.40299999984839e-06, 5.416999999674488e-06, 5.4309999999446745e-06, 5.4729999998670564e-06, 5.362000000008749e-06, 5.4579999999582185e-06, 5.403000000292479e-06, 5.4309999999446745e-06, 5.444999999770772e-06, 5.3610000003700975e-06, 5.416000000035837e-06, 5.4579999999582185e-06, 5.443999999688032e-06, 5.375000000196195e-06, 5.4309999999446745e-06, 5.429999999861934e-06, 5.486000000054503e-06, 5.458000000402308e-06, 5.472000000228405e-06, 5.417000000118577e-06, 5.445000000214861e-06, 5.444000000132121e-06, 5.389000000022293e-06, 5.430000000306023e-06, 5.4579999999582185e-06, 5.40299999984839e-06, 5.429999999861934e-06, 5.4309999999446745e-06, 5.471999999784316e-06, 5.472000000228405e-06, 5.445000000214861e-06, 5.4999999998806e-06, 5.4309999999446745e-06, 5.431000000388764e-06, 5.444000000132121e-06, 5.416000000035837e-06, 5.430000000306023e-06, 5.416000000035837e-06, 5.4579999999582185e-06, 5.443999999688032e-06, 5.445000000214861e-06, 5.471999999784316e-06, 5.445000000214861e-06, 5.389000000022293e-06, 5.471999999784316e-06, 5.417000000118577e-06, 5.402000000209739e-06, 5.429999999861934e-06, 5.417000000118577e-06, 5.444000000132121e-06, 5.4309999999446745e-06]</msg>
<status status="PASS" starttime="20201029 09:34:12.315" endtime="20201029 09:34:12.316"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.310" endtime="20201029 09:34:12.317"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.932" endtime="20201029 09:34:12.317"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.932" endtime="20201029 09:34:12.318"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:12.326" endtime="20201029 09:34:12.342"></status>
</kw>
<msg timestamp="20201029 09:34:12.343" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:12.325" endtime="20201029 09:34:12.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:12.345" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:12.344" endtime="20201029 09:34:12.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:12.346" endtime="20201029 09:34:12.348"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.322" endtime="20201029 09:34:12.348"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.320" endtime="20201029 09:34:12.349"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:12.356" endtime="20201029 09:34:12.669"></status>
</kw>
<msg timestamp="20201029 09:34:12.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.775818417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.775823833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:12.354" endtime="20201029 09:34:12.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:12.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.775818417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.775823833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:12.674" endtime="20201029 09:34:12.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:12.684" endtime="20201029 09:34:12.686"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.351" endtime="20201029 09:34:12.686"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.350" endtime="20201029 09:34:12.687"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:12.691" level="INFO">${RESULT} = [{'diff': 5.416000000035837e-06}, {'diff': 5.4579999999582185e-06}, {'diff': 5.443999999688032e-06}, {'diff': 5.445000000214861e-06}, {'diff': 5.471999999784316e-06}, {'diff': 5.445000000214861e-06}, ...</msg>
<status status="PASS" starttime="20201029 09:34:12.688" endtime="20201029 09:34:12.691"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:12.699" level="INFO">${OVERHEAD} = {'diff': [5.416000000035837e-06, 5.4579999999582185e-06, 5.443999999688032e-06, 5.445000000214861e-06, 5.471999999784316e-06, 5.445000000214861e-06, 5.389000000022293e-06, 5.471999999784316e-06, 5.417...</msg>
<status status="PASS" starttime="20201029 09:34:12.692" endtime="20201029 09:34:12.699"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:12.703" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:12.702" endtime="20201029 09:34:12.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:12.705" level="INFO">VALUE: [5.416000000035837e-06, 5.4579999999582185e-06, 5.443999999688032e-06, 5.445000000214861e-06, 5.471999999784316e-06, 5.445000000214861e-06, 5.389000000022293e-06, 5.471999999784316e-06, 5.417000000118577e-06, 5.402000000209739e-06, 5.429999999861934e-06, 5.417000000118577e-06, 5.444000000132121e-06, 5.4309999999446745e-06, 5.403000000292479e-06, 5.486000000054503e-06, 5.416000000479926e-06, 5.417000000562666e-06, 5.416999999674488e-06, 5.445000000214861e-06, 5.4309999999446745e-06, 5.444000000132121e-06, 5.45899999959687e-06, 5.458000000402308e-06, 5.417000000562666e-06, 5.444999999326683e-06, 5.445000000214861e-06, 5.444000000132121e-06, 5.389000000022293e-06, 5.513999999706698e-06, 5.4309999999446745e-06, 5.445000000214861e-06, 5.416000000479926e-06, 5.389000000022293e-06, 5.374999999752106e-06, 5.403000000292479e-06, 5.415999999591747e-06, 5.429999999861934e-06, 5.471999999784316e-06, 5.444999999326683e-06, 5.444000000132121e-06, 5.429999999861934e-06, 5.444000000132121e-06, 5.431000000832853e-06, 5.429999999861934e-06, 5.459000000485048e-06, 5.513999999706698e-06, 5.444000000132121e-06, 5.416000000479926e-06, 5.416999999674488e-06, 5.429999999861934e-06, 5.45899999959687e-06, 5.444000000132121e-06, 5.444000000132121e-06, 5.445000000214861e-06, 5.429999999861934e-06, 5.416999999674488e-06, 5.444000000132121e-06, 5.417000000562666e-06, 5.471999999784316e-06, 5.374999999752106e-06, 5.4309999999446745e-06, 5.4439999992439425e-06, 5.416000000479926e-06]</msg>
<status status="PASS" starttime="20201029 09:34:12.704" endtime="20201029 09:34:12.706"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.700" endtime="20201029 09:34:12.706"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.318" endtime="20201029 09:34:12.707"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.318" endtime="20201029 09:34:12.707"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:12.715" endtime="20201029 09:34:12.733"></status>
</kw>
<msg timestamp="20201029 09:34:12.733" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:12.713" endtime="20201029 09:34:12.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:12.736" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:12.735" endtime="20201029 09:34:12.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:12.737" endtime="20201029 09:34:12.739"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.711" endtime="20201029 09:34:12.739"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.709" endtime="20201029 09:34:12.740"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:12.746" endtime="20201029 09:34:13.063"></status>
</kw>
<msg timestamp="20201029 09:34:13.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.151773917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.151779347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:12.745" endtime="20201029 09:34:13.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:13.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.151773917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.151779347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:13.068" endtime="20201029 09:34:13.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:13.078" endtime="20201029 09:34:13.080"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.742" endtime="20201029 09:34:13.080"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.740" endtime="20201029 09:34:13.081"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:13.086" level="INFO">${RESULT} = [{'diff': 5.429999999861934e-06}, {'diff': 5.45899999959687e-06}, {'diff': 5.444000000132121e-06}, {'diff': 5.444000000132121e-06}, {'diff': 5.445000000214861e-06}, {'diff': 5.429999999861934e-06}, {'...</msg>
<status status="PASS" starttime="20201029 09:34:13.082" endtime="20201029 09:34:13.086"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:13.091" level="INFO">${OVERHEAD} = {'diff': [5.429999999861934e-06, 5.45899999959687e-06, 5.444000000132121e-06, 5.444000000132121e-06, 5.445000000214861e-06, 5.429999999861934e-06, 5.416999999674488e-06, 5.444000000132121e-06, 5.41700...</msg>
<status status="PASS" starttime="20201029 09:34:13.087" endtime="20201029 09:34:13.091"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:13.095" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:13.094" endtime="20201029 09:34:13.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:13.098" level="INFO">VALUE: [5.429999999861934e-06, 5.45899999959687e-06, 5.444000000132121e-06, 5.444000000132121e-06, 5.445000000214861e-06, 5.429999999861934e-06, 5.416999999674488e-06, 5.444000000132121e-06, 5.417000000562666e-06, 5.471999999784316e-06, 5.374999999752106e-06, 5.4309999999446745e-06, 5.4439999992439425e-06, 5.416000000479926e-06, 5.429999999861934e-06, 5.445000000214861e-06, 5.429999999861934e-06, 5.416999999674488e-06, 5.389000000022293e-06, 5.429999999861934e-06, 5.430000000750113e-06, 5.444999999326683e-06, 5.445000000214861e-06, 5.416999999674488e-06, 5.4309999999446745e-06, 5.430000000750113e-06, 5.445000000214861e-06, 5.4309999999446745e-06, 5.430000000750113e-06, 5.486000000054503e-06, 5.45899999959687e-06, 5.444000000132121e-06, 5.444000000132121e-06, 5.417000000562666e-06, 5.444000000132121e-06, 5.444000000132121e-06, 5.4309999999446745e-06, 5.429999999861934e-06, 5.445000000214861e-06, 5.403000000292479e-06, 5.403000000292479e-06, 5.416999999674488e-06, 5.389000000022293e-06, 5.402000000209739e-06, 5.402999999404301e-06, 5.416999999674488e-06, 5.457999999514129e-06, 5.445000000214861e-06, 5.444000000132121e-06, 5.402999999404301e-06, 5.527999999976885e-06, 5.416000000479926e-06, 5.444999999326683e-06, 5.429999999861934e-06, 5.403000000292479e-06, 5.416000000479926e-06, 5.416000000479926e-06, 5.417000000562666e-06, 5.458000000402308e-06, 5.4309999999446745e-06, 5.4309999999446745e-06, 5.389000000022293e-06, 5.3619999995646594e-06, 5.457999999514129e-06]</msg>
<status status="PASS" starttime="20201029 09:34:13.096" endtime="20201029 09:34:13.098"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.092" endtime="20201029 09:34:13.099"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.708" endtime="20201029 09:34:13.099"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.707" endtime="20201029 09:34:13.099"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:13.107" endtime="20201029 09:34:13.122"></status>
</kw>
<msg timestamp="20201029 09:34:13.122" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:13.105" endtime="20201029 09:34:13.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:13.124" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:13.123" endtime="20201029 09:34:13.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:13.126" endtime="20201029 09:34:13.128"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.103" endtime="20201029 09:34:13.129"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.101" endtime="20201029 09:34:13.129"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:13.136" endtime="20201029 09:34:13.448"></status>
</kw>
<msg timestamp="20201029 09:34:13.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.528633889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.528639417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:13.134" endtime="20201029 09:34:13.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:13.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.528633889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.528639417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:13.453" endtime="20201029 09:34:13.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:13.463" endtime="20201029 09:34:13.465"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.132" endtime="20201029 09:34:13.465"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.130" endtime="20201029 09:34:13.466"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:13.470" level="INFO">${RESULT} = [{'diff': 5.527999999976885e-06}, {'diff': 5.416000000479926e-06}, {'diff': 5.444999999326683e-06}, {'diff': 5.429999999861934e-06}, {'diff': 5.403000000292479e-06}, {'diff': 5.416000000479926e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:34:13.467" endtime="20201029 09:34:13.470"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:13.475" level="INFO">${OVERHEAD} = {'diff': [5.527999999976885e-06, 5.416000000479926e-06, 5.444999999326683e-06, 5.429999999861934e-06, 5.403000000292479e-06, 5.416000000479926e-06, 5.416000000479926e-06, 5.417000000562666e-06, 5.4580...</msg>
<status status="PASS" starttime="20201029 09:34:13.471" endtime="20201029 09:34:13.476"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:13.480" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:13.479" endtime="20201029 09:34:13.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:13.482" level="INFO">VALUE: [5.527999999976885e-06, 5.416000000479926e-06, 5.444999999326683e-06, 5.429999999861934e-06, 5.403000000292479e-06, 5.416000000479926e-06, 5.416000000479926e-06, 5.417000000562666e-06, 5.458000000402308e-06, 5.4309999999446745e-06, 5.4309999999446745e-06, 5.389000000022293e-06, 5.3619999995646594e-06, 5.457999999514129e-06, 5.429999999861934e-06, 5.4309999999446745e-06, 5.457999999514129e-06, 5.457999999514129e-06, 5.4729999998670564e-06, 5.429999999861934e-06, 5.499999999436511e-06, 5.429999999861934e-06, 5.457999999514129e-06, 5.445000000214861e-06, 5.445000000214861e-06, 5.486000000054503e-06, 5.444000000132121e-06, 5.444000000132121e-06, 5.459000000485048e-06, 5.444000000132121e-06, 5.374999999752106e-06, 5.457999999514129e-06, 5.417000000562666e-06, 5.459000000485048e-06, 5.4309999999446745e-06, 5.4729999998670564e-06, 5.4309999999446745e-06, 5.431000000832853e-06, 5.4439999992439425e-06, 5.4309999999446745e-06, 5.444000000132121e-06, 5.429999999861934e-06, 5.444000000132121e-06, 5.374999999752106e-06, 5.445000000214861e-06, 5.4309999999446745e-06, 5.444999999326683e-06, 5.457999999514129e-06, 5.4309999999446745e-06, 5.415999999591747e-06, 5.457999999514129e-06, 5.429999999861934e-06, 5.416999999674488e-06, 5.429999999861934e-06, 5.4309999999446745e-06, 5.513999999706698e-06, 5.445000000214861e-06, 5.444000000132121e-06, 5.486000000054503e-06, 5.444000000132121e-06, 5.471999999784316e-06, 5.417000000562666e-06, 5.4439999992439425e-06, 5.445000000214861e-06]</msg>
<status status="PASS" starttime="20201029 09:34:13.481" endtime="20201029 09:34:13.483"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.476" endtime="20201029 09:34:13.483"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.100" endtime="20201029 09:34:13.484"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.100" endtime="20201029 09:34:13.484"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:13.491" endtime="20201029 09:34:13.508"></status>
</kw>
<msg timestamp="20201029 09:34:13.509" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:13.490" endtime="20201029 09:34:13.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:13.511" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:13.510" endtime="20201029 09:34:13.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:13.512" endtime="20201029 09:34:13.514"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.487" endtime="20201029 09:34:13.515"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.486" endtime="20201029 09:34:13.515"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:13.521" endtime="20201029 09:34:13.839"></status>
</kw>
<msg timestamp="20201029 09:34:13.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.909645181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.909650639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:13.520" endtime="20201029 09:34:13.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:13.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.909645181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.909650639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:13.844" endtime="20201029 09:34:13.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:13.854" endtime="20201029 09:34:13.855"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.517" endtime="20201029 09:34:13.856"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.516" endtime="20201029 09:34:13.856"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:13.861" level="INFO">${RESULT} = [{'diff': 5.457999999514129e-06}, {'diff': 5.429999999861934e-06}, {'diff': 5.416999999674488e-06}, {'diff': 5.429999999861934e-06}, {'diff': 5.4309999999446745e-06}, {'diff': 5.513999999706698e-06}, ...</msg>
<status status="PASS" starttime="20201029 09:34:13.857" endtime="20201029 09:34:13.861"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:13.866" level="INFO">${OVERHEAD} = {'diff': [5.457999999514129e-06, 5.429999999861934e-06, 5.416999999674488e-06, 5.429999999861934e-06, 5.4309999999446745e-06, 5.513999999706698e-06, 5.445000000214861e-06, 5.444000000132121e-06, 5.486...</msg>
<status status="PASS" starttime="20201029 09:34:13.862" endtime="20201029 09:34:13.867"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:13.871" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:13.870" endtime="20201029 09:34:13.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:13.873" level="INFO">VALUE: [5.457999999514129e-06, 5.429999999861934e-06, 5.416999999674488e-06, 5.429999999861934e-06, 5.4309999999446745e-06, 5.513999999706698e-06, 5.445000000214861e-06, 5.444000000132121e-06, 5.486000000054503e-06, 5.444000000132121e-06, 5.471999999784316e-06, 5.417000000562666e-06, 5.4439999992439425e-06, 5.445000000214861e-06, 5.403000000292479e-06, 5.415999999591747e-06, 5.429999999861934e-06, 5.4309999999446745e-06, 5.429999999861934e-06, 5.429999999861934e-06, 5.444000000132121e-06, 5.4309999999446745e-06, 5.416000000479926e-06, 5.387999999939552e-06, 5.416000000479926e-06, 5.416999999674488e-06, 5.429999999861934e-06, 5.471999999784316e-06, 5.444000000132121e-06, 5.347000000099911e-06, 5.430000000750113e-06, 5.374999999752106e-06, 5.416999999674488e-06, 5.429999999861934e-06, 5.417000000562666e-06, 5.471999999784316e-06, 5.4720000006724945e-06, 5.471999999784316e-06, 5.4439999992439425e-06, 5.416999999674488e-06, 5.402999999404301e-06, 5.389000000022293e-06, 5.417000000562666e-06, 5.429999999861934e-06, 5.4309999999446745e-06, 5.471999999784316e-06, 5.430000000750113e-06, 5.429999999861934e-06, 5.416999999674488e-06, 5.4309999999446745e-06, 5.4439999992439425e-06, 5.429999999861934e-06, 5.417000000562666e-06, 5.514000000594876e-06, 5.389000000022293e-06, 5.45899999959687e-06, 5.471999999784316e-06, 5.444000000132121e-06, 5.403000000292479e-06, 5.444000000132121e-06, 5.333999999912464e-06, 5.444000000132121e-06, 5.430000000750113e-06, 5.486000000054503e-06]</msg>
<status status="PASS" starttime="20201029 09:34:13.872" endtime="20201029 09:34:13.874"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.867" endtime="20201029 09:34:13.874"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.484" endtime="20201029 09:34:13.875"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.484" endtime="20201029 09:34:13.875"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:13.882" endtime="20201029 09:34:13.900"></status>
</kw>
<msg timestamp="20201029 09:34:13.900" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:13.881" endtime="20201029 09:34:13.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:13.903" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:13.901" endtime="20201029 09:34:13.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:13.904" endtime="20201029 09:34:13.906"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.878" endtime="20201029 09:34:13.906"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.877" endtime="20201029 09:34:13.907"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:13.913" endtime="20201029 09:34:14.222"></status>
</kw>
<msg timestamp="20201029 09:34:14.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.287400875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.287406319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:13.911" endtime="20201029 09:34:14.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.287400875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.287406319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:14.227" endtime="20201029 09:34:14.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:14.236" endtime="20201029 09:34:14.238"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.909" endtime="20201029 09:34:14.239"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.907" endtime="20201029 09:34:14.239"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:14.244" level="INFO">${RESULT} = [{'diff': 5.4439999992439425e-06}, {'diff': 5.429999999861934e-06}, {'diff': 5.417000000562666e-06}, {'diff': 5.514000000594876e-06}, {'diff': 5.389000000022293e-06}, {'diff': 5.45899999959687e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:34:14.240" endtime="20201029 09:34:14.244"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:14.248" level="INFO">${OVERHEAD} = {'diff': [5.4439999992439425e-06, 5.429999999861934e-06, 5.417000000562666e-06, 5.514000000594876e-06, 5.389000000022293e-06, 5.45899999959687e-06, 5.471999999784316e-06, 5.444000000132121e-06, 5.4030...</msg>
<status status="PASS" starttime="20201029 09:34:14.245" endtime="20201029 09:34:14.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.252" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:14.251" endtime="20201029 09:34:14.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.255" level="INFO">VALUE: [5.4439999992439425e-06, 5.429999999861934e-06, 5.417000000562666e-06, 5.514000000594876e-06, 5.389000000022293e-06, 5.45899999959687e-06, 5.471999999784316e-06, 5.444000000132121e-06, 5.403000000292479e-06, 5.444000000132121e-06, 5.333999999912464e-06, 5.444000000132121e-06, 5.430000000750113e-06, 5.486000000054503e-06, 5.402999999404301e-06, 5.417000000562666e-06, 5.444000000132121e-06, 5.471999999784316e-06, 5.4309999999446745e-06, 5.402000000209739e-06, 5.486000000054503e-06, 5.403000000292479e-06, 5.444000000132121e-06, 5.429999999861934e-06, 5.416999999674488e-06, 5.445000000214861e-06, 5.416000000479926e-06, 5.402999999404301e-06, 5.471999999784316e-06, 5.429999999861934e-06, 5.429999999861934e-06, 5.403000000292479e-06, 5.45899999959687e-06, 5.4309999999446745e-06, 5.444000000132121e-06, 5.431000000832853e-06, 5.444000000132121e-06, 5.429999999861934e-06, 5.471999999784316e-06, 5.444000000132121e-06, 5.486000000054503e-06, 5.403000000292479e-06, 5.444000000132121e-06, 5.417000000562666e-06, 5.389000000022293e-06, 5.4439999992439425e-06, 5.429999999861934e-06, 5.417000000562666e-06, 5.416999999674488e-06, 5.416000000479926e-06, 5.360999999481919e-06, 5.445000000214861e-06, 5.445000000214861e-06, 5.415999999591747e-06, 5.445000000214861e-06, 5.444000000132121e-06, 5.444000000132121e-06, 5.417000000562666e-06, 5.416999999674488e-06, 5.416999999674488e-06, 5.417000000562666e-06, 5.430000000750113e-06, 5.417000000562666e-06, 5.417000000562666e-06]</msg>
<status status="PASS" starttime="20201029 09:34:14.254" endtime="20201029 09:34:14.255"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.249" endtime="20201029 09:34:14.256"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.875" endtime="20201029 09:34:14.256"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.875" endtime="20201029 09:34:14.257"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:14.265" endtime="20201029 09:34:14.281"></status>
</kw>
<msg timestamp="20201029 09:34:14.282" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:14.264" endtime="20201029 09:34:14.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.285" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:14.283" endtime="20201029 09:34:14.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:14.286" endtime="20201029 09:34:14.287"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.260" endtime="20201029 09:34:14.288"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.259" endtime="20201029 09:34:14.288"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:14.295" endtime="20201029 09:34:14.613"></status>
</kw>
<msg timestamp="20201029 09:34:14.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.669321528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.669326889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:14.293" endtime="20201029 09:34:14.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.669321528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.669326889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:14.617" endtime="20201029 09:34:14.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:14.627" endtime="20201029 09:34:14.629"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.291" endtime="20201029 09:34:14.630"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.289" endtime="20201029 09:34:14.630"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:14.634" level="INFO">${RESULT} = [{'diff': 5.360999999481919e-06}, {'diff': 5.445000000214861e-06}, {'diff': 5.445000000214861e-06}, {'diff': 5.415999999591747e-06}, {'diff': 5.445000000214861e-06}, {'diff': 5.444000000132121e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:34:14.631" endtime="20201029 09:34:14.635"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:14.640" level="INFO">${OVERHEAD} = {'diff': [5.360999999481919e-06, 5.445000000214861e-06, 5.445000000214861e-06, 5.415999999591747e-06, 5.445000000214861e-06, 5.444000000132121e-06, 5.444000000132121e-06, 5.417000000562666e-06, 5.4169...</msg>
<status status="PASS" starttime="20201029 09:34:14.635" endtime="20201029 09:34:14.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.644" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:14.643" endtime="20201029 09:34:14.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.647" level="INFO">VALUE: [5.360999999481919e-06, 5.445000000214861e-06, 5.445000000214861e-06, 5.415999999591747e-06, 5.445000000214861e-06, 5.444000000132121e-06, 5.444000000132121e-06, 5.417000000562666e-06, 5.416999999674488e-06, 5.416999999674488e-06, 5.417000000562666e-06, 5.430000000750113e-06, 5.417000000562666e-06, 5.417000000562666e-06, 5.431000000832853e-06, 5.429999999861934e-06, 5.513999999706698e-06, 5.4309999999446745e-06, 5.4309999999446745e-06, 5.444000000132121e-06, 5.416999999674488e-06, 5.389000000022293e-06, 5.417000000562666e-06, 5.527999999976885e-06, 5.403000000292479e-06, 5.458000000402308e-06, 5.402999999404301e-06, 5.429999999861934e-06, 5.389000000022293e-06, 5.417000000562666e-06, 5.444000000132121e-06, 5.4309999999446745e-06, 5.416000000479926e-06, 5.4309999999446745e-06, 5.473000000755235e-06, 5.45899999959687e-06, 5.50000000032469e-06, 5.445000000214861e-06, 5.458000000402308e-06, 5.445000000214861e-06, 5.459000000485048e-06, 5.416999999674488e-06, 5.417000000562666e-06, 5.417000000562666e-06, 5.430000000750113e-06, 5.471999999784316e-06, 5.457999999514129e-06, 5.459000000485048e-06, 5.431000000832853e-06, 5.444000000132121e-06, 5.4309999999446745e-06, 5.458000000402308e-06, 5.471999999784316e-06, 5.403000000292479e-06, 5.4309999999446745e-06, 5.4309999999446745e-06, 5.444000000132121e-06, 5.445000000214861e-06, 5.444999999326683e-06, 5.457999999514129e-06, 5.4309999999446745e-06, 5.416999999674488e-06, 5.429999999861934e-06, 5.458000000402308e-06]</msg>
<status status="PASS" starttime="20201029 09:34:14.645" endtime="20201029 09:34:14.647"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.641" endtime="20201029 09:34:14.648"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.257" endtime="20201029 09:34:14.648"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.257" endtime="20201029 09:34:14.648"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:14.656" endtime="20201029 09:34:14.674"></status>
</kw>
<msg timestamp="20201029 09:34:14.674" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:14.655" endtime="20201029 09:34:14.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.677" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:14.675" endtime="20201029 09:34:14.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:14.678" endtime="20201029 09:34:14.679"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.652" endtime="20201029 09:34:14.680"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.650" endtime="20201029 09:34:14.680"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:14.687" endtime="20201029 09:34:15.005"></status>
</kw>
<msg timestamp="20201029 09:34:15.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.042097958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.042103389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:14.685" endtime="20201029 09:34:15.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.042097958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.042103389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:15.010" endtime="20201029 09:34:15.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:15.020" endtime="20201029 09:34:15.022"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.683" endtime="20201029 09:34:15.022"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.681" endtime="20201029 09:34:15.023"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:15.027" level="INFO">${RESULT} = [{'diff': 5.4309999999446745e-06}, {'diff': 5.458000000402308e-06}, {'diff': 5.471999999784316e-06}, {'diff': 5.403000000292479e-06}, {'diff': 5.4309999999446745e-06}, {'diff': 5.4309999999446745e-06}...</msg>
<status status="PASS" starttime="20201029 09:34:15.024" endtime="20201029 09:34:15.027"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:15.033" level="INFO">${OVERHEAD} = {'diff': [5.4309999999446745e-06, 5.458000000402308e-06, 5.471999999784316e-06, 5.403000000292479e-06, 5.4309999999446745e-06, 5.4309999999446745e-06, 5.444000000132121e-06, 5.445000000214861e-06, 5.4...</msg>
<status status="PASS" starttime="20201029 09:34:15.028" endtime="20201029 09:34:15.033"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.038" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:15.036" endtime="20201029 09:34:15.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.040" level="INFO">VALUE: [5.4309999999446745e-06, 5.458000000402308e-06, 5.471999999784316e-06, 5.403000000292479e-06, 5.4309999999446745e-06, 5.4309999999446745e-06, 5.444000000132121e-06, 5.445000000214861e-06, 5.444999999326683e-06, 5.457999999514129e-06, 5.4309999999446745e-06, 5.416999999674488e-06, 5.429999999861934e-06, 5.458000000402308e-06, 5.417000000562666e-06, 5.444000000132121e-06, 5.445000000214861e-06, 5.417000000562666e-06, 5.444000000132121e-06, 5.417000000562666e-06, 5.4439999992439425e-06, 5.417000000562666e-06, 5.374999999752106e-06, 5.50000000032469e-06, 5.417000000562666e-06, 5.486000000054503e-06, 5.457999999514129e-06, 5.457999999514129e-06, 5.3610000003700975e-06, 5.431000000832853e-06, 5.486000000054503e-06, 5.444000000132121e-06, 5.4309999999446745e-06, 5.4309999999446745e-06, 5.444000000132121e-06, 5.4309999999446745e-06, 5.471999999784316e-06, 5.4309999999446745e-06, 5.457999999514129e-06, 5.429999999861934e-06, 5.458000000402308e-06, 5.458000000402308e-06, 5.429999999861934e-06, 5.4309999999446745e-06, 5.444000000132121e-06, 5.416999999674488e-06, 5.403000000292479e-06, 5.459000000485048e-06, 5.444000000132121e-06, 5.4439999992439425e-06, 5.429999999861934e-06, 5.416999999674488e-06, 5.416999999674488e-06, 5.457999999514129e-06, 5.444000000132121e-06, 5.4729999998670564e-06, 5.4309999999446745e-06, 5.499999999436511e-06, 5.486000000054503e-06, 5.444999999326683e-06, 5.389000000022293e-06, 5.444999999326683e-06, 5.444000000132121e-06, 5.4309999999446745e-06]</msg>
<status status="PASS" starttime="20201029 09:34:15.039" endtime="20201029 09:34:15.041"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.034" endtime="20201029 09:34:15.041"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.649" endtime="20201029 09:34:15.042"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.649" endtime="20201029 09:34:15.042"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:15.050" endtime="20201029 09:34:15.065"></status>
</kw>
<msg timestamp="20201029 09:34:15.066" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:15.048" endtime="20201029 09:34:15.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.068" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:15.067" endtime="20201029 09:34:15.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:15.069" endtime="20201029 09:34:15.071"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.046" endtime="20201029 09:34:15.072"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.044" endtime="20201029 09:34:15.072"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:15.080" endtime="20201029 09:34:15.409"></status>
</kw>
<msg timestamp="20201029 09:34:15.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.423973014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.423978444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:15.077" endtime="20201029 09:34:15.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.423973014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.423978444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:15.414" endtime="20201029 09:34:15.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:15.424" endtime="20201029 09:34:15.426"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.075" endtime="20201029 09:34:15.426"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.073" endtime="20201029 09:34:15.427"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:15.431" level="INFO">${RESULT} = [{'diff': 5.429999999861934e-06}, {'diff': 5.416999999674488e-06}, {'diff': 5.416999999674488e-06}, {'diff': 5.457999999514129e-06}, {'diff': 5.444000000132121e-06}, {'diff': 5.4729999998670564e-06}, ...</msg>
<status status="PASS" starttime="20201029 09:34:15.427" endtime="20201029 09:34:15.431"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:15.436" level="INFO">${OVERHEAD} = {'diff': [5.429999999861934e-06, 5.416999999674488e-06, 5.416999999674488e-06, 5.457999999514129e-06, 5.444000000132121e-06, 5.4729999998670564e-06, 5.4309999999446745e-06, 5.499999999436511e-06, 5.48...</msg>
<status status="PASS" starttime="20201029 09:34:15.432" endtime="20201029 09:34:15.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.440" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:15.439" endtime="20201029 09:34:15.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.443" level="INFO">VALUE: [5.429999999861934e-06, 5.416999999674488e-06, 5.416999999674488e-06, 5.457999999514129e-06, 5.444000000132121e-06, 5.4729999998670564e-06, 5.4309999999446745e-06, 5.499999999436511e-06, 5.486000000054503e-06, 5.444999999326683e-06, 5.389000000022293e-06, 5.444999999326683e-06, 5.444000000132121e-06, 5.4309999999446745e-06, 5.403000000292479e-06, 5.416000000479926e-06, 5.429999999861934e-06, 5.4309999999446745e-06, 5.444000000132121e-06, 5.457999999514129e-06, 5.444000000132121e-06, 5.458000000402308e-06, 5.403000000292479e-06, 5.486000000054503e-06, 5.45899999959687e-06, 5.429999999861934e-06, 5.444000000132121e-06, 5.3610000003700975e-06, 5.4309999999446745e-06, 5.389000000022293e-06, 5.4309999999446745e-06, 5.389000000022293e-06, 5.445000000214861e-06, 5.415999999591747e-06, 5.4309999999446745e-06, 5.4439999992439425e-06, 5.459000000485048e-06, 5.444999999326683e-06, 5.444000000132121e-06, 5.459000000485048e-06, 5.444000000132121e-06, 5.444000000132121e-06, 5.458000000402308e-06, 5.444000000132121e-06, 5.444000000132121e-06, 5.429999999861934e-06, 5.444000000132121e-06, 5.415999999591747e-06, 5.4720000006724945e-06, 5.4309999999446745e-06, 5.457999999514129e-06, 5.416999999674488e-06, 5.471999999784316e-06, 5.415999999591747e-06, 5.416999999674488e-06, 5.417000000562666e-06, 5.429999999861934e-06, 5.4309999999446745e-06, 5.416000000479926e-06, 5.4729999998670564e-06, 5.459000000485048e-06, 5.444000000132121e-06, 5.444000000132121e-06, 5.4309999999446745e-06]</msg>
<status status="PASS" starttime="20201029 09:34:15.441" endtime="20201029 09:34:15.443"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.437" endtime="20201029 09:34:15.444"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.043" endtime="20201029 09:34:15.444"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.042" endtime="20201029 09:34:15.445"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:15.458" endtime="20201029 09:34:15.472"></status>
</kw>
<msg timestamp="20201029 09:34:15.472" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:15.457" endtime="20201029 09:34:15.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.475" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:15.473" endtime="20201029 09:34:15.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:15.476" endtime="20201029 09:34:15.478"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.449" endtime="20201029 09:34:15.478"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.447" endtime="20201029 09:34:15.479"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:15.485" endtime="20201029 09:34:15.799"></status>
</kw>
<msg timestamp="20201029 09:34:15.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.805869514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.805874972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:15.484" endtime="20201029 09:34:15.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.805869514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.805874972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:15.804" endtime="20201029 09:34:15.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:15.814" endtime="20201029 09:34:15.816"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.481" endtime="20201029 09:34:15.816"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.479" endtime="20201029 09:34:15.817"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:15.821" level="INFO">${RESULT} = [{'diff': 5.457999999514129e-06}, {'diff': 5.416999999674488e-06}, {'diff': 5.471999999784316e-06}, {'diff': 5.415999999591747e-06}, {'diff': 5.416999999674488e-06}, {'diff': 5.417000000562666e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:34:15.817" endtime="20201029 09:34:15.821"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:15.827" level="INFO">${OVERHEAD} = {'diff': [5.457999999514129e-06, 5.416999999674488e-06, 5.471999999784316e-06, 5.415999999591747e-06, 5.416999999674488e-06, 5.417000000562666e-06, 5.429999999861934e-06, 5.4309999999446745e-06, 5.416...</msg>
<status status="PASS" starttime="20201029 09:34:15.822" endtime="20201029 09:34:15.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.831" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:15.830" endtime="20201029 09:34:15.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.834" level="INFO">VALUE: [5.457999999514129e-06, 5.416999999674488e-06, 5.471999999784316e-06, 5.415999999591747e-06, 5.416999999674488e-06, 5.417000000562666e-06, 5.429999999861934e-06, 5.4309999999446745e-06, 5.416000000479926e-06, 5.4729999998670564e-06, 5.459000000485048e-06, 5.444000000132121e-06, 5.444000000132121e-06, 5.4309999999446745e-06, 5.444000000132121e-06, 5.415999999591747e-06, 5.4309999999446745e-06, 5.4309999999446745e-06, 5.499999999436511e-06, 5.4309999999446745e-06, 5.4309999999446745e-06, 5.416999999674488e-06, 5.457999999514129e-06, 5.445000000214861e-06, 5.415999999591747e-06, 5.417000000562666e-06, 5.429999999861934e-06, 5.4309999999446745e-06, 5.417000000562666e-06, 5.416999999674488e-06, 5.50000000032469e-06, 5.445000000214861e-06, 5.417000000562666e-06, 5.444000000132121e-06, 5.444000000132121e-06, 5.416000000479926e-06, 5.431000000832853e-06, 5.417000000562666e-06, 5.486000000054503e-06, 5.4309999999446745e-06, 5.471999999784316e-06, 5.429999999861934e-06, 5.458000000402308e-06, 5.445000000214861e-06, 5.429999999861934e-06, 5.4309999999446745e-06, 5.417000000562666e-06, 5.375000000640284e-06, 5.416999999674488e-06, 5.416999999674488e-06, 5.444000000132121e-06, 5.429999999861934e-06, 5.4309999999446745e-06, 5.457999999514129e-06, 5.4309999999446745e-06, 5.430000000750113e-06, 5.444000000132121e-06, 5.486000000054503e-06, 5.403000000292479e-06, 5.4309999999446745e-06, 5.417000000562666e-06, 5.403000000292479e-06, 5.416999999674488e-06, 5.4309999999446745e-06]</msg>
<status status="PASS" starttime="20201029 09:34:15.832" endtime="20201029 09:34:15.834"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.828" endtime="20201029 09:34:15.835"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.445" endtime="20201029 09:34:15.835"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.445" endtime="20201029 09:34:15.835"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.120" endtime="20201029 09:34:15.836"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:34:08.048" endtime="20201029 09:34:15.836" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:15.844" endtime="20201029 09:34:15.863"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.842" endtime="20201029 09:34:15.864"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:15.877" endtime="20201029 09:34:15.897"></status>
</kw>
<msg timestamp="20201029 09:34:15.898" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:15.876" endtime="20201029 09:34:15.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.900" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:15.899" endtime="20201029 09:34:15.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.903" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:15.901" endtime="20201029 09:34:15.904"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:15.873" endtime="20201029 09:34:15.904"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:15.871" endtime="20201029 09:34:15.905"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.869" endtime="20201029 09:34:15.905"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:15.912" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:15.911" endtime="20201029 09:34:15.912"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.906" endtime="20201029 09:34:15.913"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.868" endtime="20201029 09:34:15.913"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.868" endtime="20201029 09:34:15.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:15.914" endtime="20201029 09:34:15.915"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.866" endtime="20201029 09:34:15.916"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.864" endtime="20201029 09:34:15.916"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.841" endtime="20201029 09:34:15.917"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:15.925" endtime="20201029 09:34:15.946"></status>
</kw>
<msg timestamp="20201029 09:34:15.947" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:15.924" endtime="20201029 09:34:15.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.949" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:15.948" endtime="20201029 09:34:15.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:15.951" endtime="20201029 09:34:15.952"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.921" endtime="20201029 09:34:15.953"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.919" endtime="20201029 09:34:15.953"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:15.956" endtime="20201029 09:34:15.958"></status>
</kw>
<msg timestamp="20201029 09:34:15.958" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 09:34:15.954" endtime="20201029 09:34:15.958"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.962" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:34:15.961" endtime="20201029 09:34:15.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.964" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:34:15.963" endtime="20201029 09:34:15.965"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.959" endtime="20201029 09:34:15.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.969" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:34:15.968" endtime="20201029 09:34:15.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.971" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:34:15.970" endtime="20201029 09:34:15.972"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.966" endtime="20201029 09:34:15.972"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:15.979" endtime="20201029 09:34:16.265"></status>
</kw>
<msg timestamp="20201029 09:34:16.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072918986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072937472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:15.978" endtime="20201029 09:34:16.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:16.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072918986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072937472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:16.270" endtime="20201029 09:34:16.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:16.278" endtime="20201029 09:34:16.280"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.975" endtime="20201029 09:34:16.281"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.973" endtime="20201029 09:34:16.281"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:16.286" level="INFO">${RESULT} = [{'diff': 1.8485999999998115e-05}, {'diff': 2.2458000000002976e-05}, {'diff': 2.2499999999994746e-05}, {'diff': 2.2514000000001255e-05}, {'diff': 2.2472000000009484e-05}, {'diff': 2.2513999999987377e-...</msg>
<status status="PASS" starttime="20201029 09:34:16.282" endtime="20201029 09:34:16.286"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:16.291" level="INFO">${OVERHEAD} = {'diff': [1.8485999999998115e-05, 2.2458000000002976e-05, 2.2499999999994746e-05, 2.2514000000001255e-05, 2.2472000000009484e-05, 2.2513999999987377e-05, 2.2499999999994746e-05, 2.2528000000007764e-05...</msg>
<status status="PASS" starttime="20201029 09:34:16.287" endtime="20201029 09:34:16.291"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:16.295" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201029 09:34:16.294" endtime="20201029 09:34:16.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:16.298" level="INFO">VALUE: [1.8485999999998115e-05, 2.2458000000002976e-05, 2.2499999999994746e-05, 2.2514000000001255e-05, 2.2472000000009484e-05, 2.2513999999987377e-05, 2.2499999999994746e-05, 2.2528000000007764e-05, 2.2514000000001255e-05, 2.2527999999993886e-05, 2.254100000000092e-05, 2.2542000000000395e-05, 2.2514000000001255e-05, 2.2499999999994746e-05, 2.2473000000008958e-05, 2.2471999999995607e-05, 2.2514000000001255e-05, 2.2528000000007764e-05, 2.25969999999992e-05, 2.256900000000006e-05, 2.2528000000007764e-05, 2.2486000000002115e-05, 2.2499999999994746e-05, 2.2486000000002115e-05, 2.2514000000001255e-05, 2.256900000000006e-05, 2.2471999999995607e-05, 2.2500000000008624e-05, 2.25969999999992e-05, 2.2569999999999535e-05, 2.2527999999993886e-05, 2.2527999999993886e-05, 2.2555999999993026e-05, 2.2499999999994746e-05, 2.2526999999994413e-05, 2.2555999999993026e-05, 2.2526999999994413e-05, 2.254100000000092e-05, 2.2555999999993026e-05, 2.2485999999988238e-05, 2.2486000000002115e-05, 2.256900000000006e-05, 2.2528000000007764e-05, 2.2514000000001255e-05, 2.254100000000092e-05, 2.2528000000007764e-05, 2.2526999999994413e-05, 2.254100000000092e-05, 2.2486000000002115e-05, 2.2499999999994746e-05]</msg>
<status status="PASS" starttime="20201029 09:34:16.297" endtime="20201029 09:34:16.298"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.291" endtime="20201029 09:34:16.299"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.917" endtime="20201029 09:34:16.299"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:34:15.838" endtime="20201029 09:34:16.300" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:16.307" endtime="20201029 09:34:16.327"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.306" endtime="20201029 09:34:16.327"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:16.342" endtime="20201029 09:34:16.358"></status>
</kw>
<msg timestamp="20201029 09:34:16.359" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:16.340" endtime="20201029 09:34:16.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:16.361" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:16.360" endtime="20201029 09:34:16.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:16.364" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:16.362" endtime="20201029 09:34:16.365"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:16.336" endtime="20201029 09:34:16.365"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:16.334" endtime="20201029 09:34:16.366"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.333" endtime="20201029 09:34:16.366"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:16.370" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:16.369" endtime="20201029 09:34:16.370"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.367" endtime="20201029 09:34:16.371"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.332" endtime="20201029 09:34:16.371"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.331" endtime="20201029 09:34:16.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:16.372" endtime="20201029 09:34:16.373"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.330" endtime="20201029 09:34:16.374"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.328" endtime="20201029 09:34:16.374"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.304" endtime="20201029 09:34:16.375"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:16.383" endtime="20201029 09:34:16.458"></status>
</kw>
<msg timestamp="20201029 09:34:16.458" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:16.382" endtime="20201029 09:34:16.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:16.461" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:16.459" endtime="20201029 09:34:16.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:16.462" endtime="20201029 09:34:16.464"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.379" endtime="20201029 09:34:16.464"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.377" endtime="20201029 09:34:16.465"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:16.467" endtime="20201029 09:34:16.469"></status>
</kw>
<msg timestamp="20201029 09:34:16.469" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 09:34:16.466" endtime="20201029 09:34:16.470"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:16.474" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:34:16.473" endtime="20201029 09:34:16.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:16.476" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:34:16.475" endtime="20201029 09:34:16.476"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.470" endtime="20201029 09:34:16.477"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:16.481" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:34:16.480" endtime="20201029 09:34:16.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:16.483" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:34:16.482" endtime="20201029 09:34:16.483"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.478" endtime="20201029 09:34:16.484"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:16.492" endtime="20201029 09:34:16.783"></status>
</kw>
<msg timestamp="20201029 09:34:16.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072179931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072200375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:16.490" endtime="20201029 09:34:16.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:16.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072179931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072200375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:16.788" endtime="20201029 09:34:16.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:16.796" endtime="20201029 09:34:16.798"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.486" endtime="20201029 09:34:16.798"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.485" endtime="20201029 09:34:16.799"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:16.803" level="INFO">${RESULT} = [{'diff': 2.0443999999994467e-05}, {'diff': 2.9708000000003287e-05}, {'diff': 2.9805999999993338e-05}, {'diff': 2.9792000000000707e-05}, {'diff': 2.9750000000008936e-05}, {'diff': 2.9777999999994198e-...</msg>
<status status="PASS" starttime="20201029 09:34:16.799" endtime="20201029 09:34:16.803"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:16.807" level="INFO">${OVERHEAD} = {'diff': [2.0443999999994467e-05, 2.9708000000003287e-05, 2.9805999999993338e-05, 2.9792000000000707e-05, 2.9750000000008936e-05, 2.9777999999994198e-05, 2.9749999999995058e-05, 2.969399999999678e-05,...</msg>
<status status="PASS" starttime="20201029 09:34:16.804" endtime="20201029 09:34:16.807"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:16.812" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201029 09:34:16.811" endtime="20201029 09:34:16.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:16.815" level="INFO">VALUE: [2.0443999999994467e-05, 2.9708000000003287e-05, 2.9805999999993338e-05, 2.9792000000000707e-05, 2.9750000000008936e-05, 2.9777999999994198e-05, 2.9749999999995058e-05, 2.969399999999678e-05, 2.9791000000001233e-05, 2.9819000000000373e-05, 2.9750000000008936e-05, 2.9792000000000707e-05, 2.9749999999995058e-05, 2.9764000000001567e-05, 2.9749999999995058e-05, 2.9736000000002427e-05, 2.9764000000001567e-05, 2.973599999998855e-05, 2.9777999999994198e-05, 2.9792000000000707e-05, 2.9806000000007216e-05, 2.9819999999999847e-05, 2.9777000000008602e-05, 2.9778000000008076e-05, 2.9792000000000707e-05, 2.9776999999994724e-05, 2.9749999999995058e-05, 2.9749999999995058e-05, 2.9791000000001233e-05, 2.9776999999994724e-05, 2.9777999999994198e-05, 2.9778000000008076e-05, 2.972199999999592e-05, 2.9750000000008936e-05, 2.9736000000002427e-05, 2.972199999999592e-05, 2.9763000000002093e-05, 2.9846999999999513e-05, 2.9805999999993338e-05, 2.9792000000000707e-05, 2.9749999999995058e-05, 2.9736000000002427e-05, 2.9790999999987355e-05, 2.970799999998941e-05, 2.9749999999995058e-05, 2.9804999999993864e-05, 2.9819000000000373e-05, 2.9846999999999513e-05, 2.9749999999995058e-05, 2.9819999999999847e-05]</msg>
<status status="PASS" starttime="20201029 09:34:16.813" endtime="20201029 09:34:16.815"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.808" endtime="20201029 09:34:16.815"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.375" endtime="20201029 09:34:16.816"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:34:16.302" endtime="20201029 09:34:16.816" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:16.824" endtime="20201029 09:34:16.843"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.822" endtime="20201029 09:34:16.844"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:16.858" endtime="20201029 09:34:16.880"></status>
</kw>
<msg timestamp="20201029 09:34:16.880" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:16.857" endtime="20201029 09:34:16.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:16.883" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:16.881" endtime="20201029 09:34:16.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:16.886" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:16.884" endtime="20201029 09:34:16.886"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:16.854" endtime="20201029 09:34:16.887"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:16.852" endtime="20201029 09:34:16.887"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.850" endtime="20201029 09:34:16.888"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:16.892" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:16.891" endtime="20201029 09:34:16.892"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.889" endtime="20201029 09:34:16.892"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.849" endtime="20201029 09:34:16.892"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.849" endtime="20201029 09:34:16.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:16.893" endtime="20201029 09:34:16.895"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.847" endtime="20201029 09:34:16.896"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.845" endtime="20201029 09:34:16.896"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.821" endtime="20201029 09:34:16.896"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:16.905" endtime="20201029 09:34:17.077"></status>
</kw>
<msg timestamp="20201029 09:34:17.077" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:16.903" endtime="20201029 09:34:17.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:17.080" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:17.078" endtime="20201029 09:34:17.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:17.081" endtime="20201029 09:34:17.083"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.901" endtime="20201029 09:34:17.083"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.898" endtime="20201029 09:34:17.084"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:17.086" endtime="20201029 09:34:17.088"></status>
</kw>
<msg timestamp="20201029 09:34:17.089" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 09:34:17.084" endtime="20201029 09:34:17.089"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:17.094" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:34:17.093" endtime="20201029 09:34:17.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:17.096" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:34:17.095" endtime="20201029 09:34:17.096"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.090" endtime="20201029 09:34:17.097"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:17.101" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:34:17.100" endtime="20201029 09:34:17.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:17.103" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:34:17.102" endtime="20201029 09:34:17.103"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.097" endtime="20201029 09:34:17.104"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:17.110" endtime="20201029 09:34:17.414"></status>
</kw>
<msg timestamp="20201029 09:34:17.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074093611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0741265, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:34:17.109" endtime="20201029 09:34:17.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:17.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074093611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0741265, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:34:17.423" endtime="20201029 09:34:17.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:17.441" endtime="20201029 09:34:17.445"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.106" endtime="20201029 09:34:17.446"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.104" endtime="20201029 09:34:17.447"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:17.456" level="INFO">${RESULT} = [{'diff': 3.2888999999994284e-05}, {'diff': 5.006899999999981e-05}, {'diff': 5.011100000000546e-05}, {'diff': 5.008299999999244e-05}, {'diff': 5.009699999999895e-05}, {'diff': 5.00549999999933e-05}, {...</msg>
<status status="PASS" starttime="20201029 09:34:17.449" endtime="20201029 09:34:17.456"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:17.466" level="INFO">${OVERHEAD} = {'diff': [3.2888999999994284e-05, 5.006899999999981e-05, 5.011100000000546e-05, 5.008299999999244e-05, 5.009699999999895e-05, 5.00549999999933e-05, 5.0151999999997754e-05, 5.011100000000546e-05, 5.005...</msg>
<status status="PASS" starttime="20201029 09:34:17.458" endtime="20201029 09:34:17.467"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:17.476" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201029 09:34:17.474" endtime="20201029 09:34:17.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:17.481" level="INFO">VALUE: [3.2888999999994284e-05, 5.006899999999981e-05, 5.011100000000546e-05, 5.008299999999244e-05, 5.009699999999895e-05, 5.00549999999933e-05, 5.0151999999997754e-05, 5.011100000000546e-05, 5.005599999999277e-05, 5.011199999999105e-05, 5.005600000000665e-05, 5.002799999999363e-05, 5.009699999999895e-05, 5.006899999999981e-05, 5.009699999999895e-05, 5.015299999999723e-05, 5.0097000000012826e-05, 5.008299999997856e-05, 5.0139000000004597e-05, 5.016699999998986e-05, 5.009699999999895e-05, 5.005600000002053e-05, 5.0139000000004597e-05, 5.009799999999842e-05, 5.005600000002053e-05, 5.011199999999105e-05, 5.004100000000067e-05, 5.008400000000579e-05, 5.008400000000579e-05, 5.0069999999985404e-05, 5.0111000000019335e-05, 5.015299999999723e-05, 5.002800000000751e-05, 5.009699999999895e-05, 5.0139000000004597e-05, 5.012499999998421e-05, 5.005600000002053e-05, 5.0083999999978035e-05, 5.007000000001316e-05, 5.012499999998421e-05, 5.0151999999997754e-05, 5.0125000000011966e-05, 5.011099999999158e-05, 5.0139000000004597e-05, 5.018099999998249e-05, 5.006899999998593e-05, 5.0069000000013686e-05, 5.0027999999979755e-05, 5.009799999999842e-05, 5.004100000000067e-05]</msg>
<status status="PASS" starttime="20201029 09:34:17.478" endtime="20201029 09:34:17.482"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.468" endtime="20201029 09:34:17.483"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.897" endtime="20201029 09:34:17.484"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:34:16.818" endtime="20201029 09:34:17.485" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:17.497" endtime="20201029 09:34:17.517"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.495" endtime="20201029 09:34:17.519"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:17.539" endtime="20201029 09:34:17.562"></status>
</kw>
<msg timestamp="20201029 09:34:17.562" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:17.537" endtime="20201029 09:34:17.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:17.565" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:17.563" endtime="20201029 09:34:17.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:17.568" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:17.566" endtime="20201029 09:34:17.568"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:17.534" endtime="20201029 09:34:17.569"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:17.531" endtime="20201029 09:34:17.569"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.529" endtime="20201029 09:34:17.570"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:17.573" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:17.573" endtime="20201029 09:34:17.574"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.570" endtime="20201029 09:34:17.574"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.528" endtime="20201029 09:34:17.574"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.526" endtime="20201029 09:34:17.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:17.575" endtime="20201029 09:34:17.577"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.523" endtime="20201029 09:34:17.577"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.520" endtime="20201029 09:34:17.578"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.494" endtime="20201029 09:34:17.578"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:17.587" endtime="20201029 09:34:17.612"></status>
</kw>
<msg timestamp="20201029 09:34:17.613" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:17.586" endtime="20201029 09:34:17.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:17.615" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:17.614" endtime="20201029 09:34:17.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:17.616" endtime="20201029 09:34:17.618"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.582" endtime="20201029 09:34:17.618"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.580" endtime="20201029 09:34:17.619"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:17.621" endtime="20201029 09:34:17.622"></status>
</kw>
<msg timestamp="20201029 09:34:17.623" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 09:34:17.619" endtime="20201029 09:34:17.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:17.627" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:34:17.626" endtime="20201029 09:34:17.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:17.629" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:34:17.628" endtime="20201029 09:34:17.630"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.624" endtime="20201029 09:34:17.630"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:17.634" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:34:17.633" endtime="20201029 09:34:17.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:17.636" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:34:17.635" endtime="20201029 09:34:17.636"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.631" endtime="20201029 09:34:17.637"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:17.643" endtime="20201029 09:34:17.931"></status>
</kw>
<msg timestamp="20201029 09:34:17.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.082559222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.082577403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:17.642" endtime="20201029 09:34:17.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:17.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.082559222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.082577403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:17.935" endtime="20201029 09:34:17.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:17.944" endtime="20201029 09:34:17.946"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.639" endtime="20201029 09:34:17.946"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.638" endtime="20201029 09:34:17.947"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:17.951" level="INFO">${RESULT} = [{'diff': 1.818099999999212e-05}, {'diff': 1.8179999999992646e-05}, {'diff': 1.8181000000005998e-05}, {'diff': 1.8193999999999155e-05}, {'diff': 1.8153000000006858e-05}, {'diff': 1.8153000000006858e-0...</msg>
<status status="PASS" starttime="20201029 09:34:17.947" endtime="20201029 09:34:17.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:17.956" level="INFO">${OVERHEAD} = {'diff': [1.818099999999212e-05, 1.8179999999992646e-05, 1.8181000000005998e-05, 1.8193999999999155e-05, 1.8153000000006858e-05, 1.8153000000006858e-05, 1.8179999999992646e-05, 1.8209000000005138e-05,...</msg>
<status status="PASS" starttime="20201029 09:34:17.952" endtime="20201029 09:34:17.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:17.961" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201029 09:34:17.960" endtime="20201029 09:34:17.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:17.963" level="INFO">VALUE: [1.818099999999212e-05, 1.8179999999992646e-05, 1.8181000000005998e-05, 1.8193999999999155e-05, 1.8153000000006858e-05, 1.8153000000006858e-05, 1.8179999999992646e-05, 1.8209000000005138e-05, 1.816699999999949e-05, 1.819499999999863e-05, 1.8207999999991786e-05, 1.8180000000006524e-05, 1.818099999999212e-05, 1.8181000000005998e-05, 1.8209000000005138e-05, 1.816699999999949e-05, 1.8193999999999155e-05, 1.8166000000000015e-05, 1.8181000000005998e-05, 1.8249999999997435e-05, 1.8207999999991786e-05, 1.8153000000006858e-05, 1.816699999999949e-05, 1.819499999999863e-05, 1.8194000000013033e-05, 1.8208000000005664e-05, 1.8166000000000015e-05, 1.816699999999949e-05, 1.816699999999949e-05, 1.8221999999998295e-05, 1.813900000000035e-05, 1.8181000000005998e-05, 1.8166000000000015e-05, 1.8195000000012507e-05, 1.8179999999992646e-05, 1.8193999999999155e-05, 1.816699999999949e-05, 1.819499999999863e-05, 1.8193999999999155e-05, 1.8250000000011313e-05, 1.816699999999949e-05, 1.8152000000007384e-05, 1.819499999999863e-05, 1.822299999999777e-05, 1.816699999999949e-05, 1.8166000000000015e-05, 1.8181000000005998e-05, 1.816699999999949e-05, 1.8166000000000015e-05, 1.8193999999999155e-05]</msg>
<status status="PASS" starttime="20201029 09:34:17.962" endtime="20201029 09:34:17.964"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.957" endtime="20201029 09:34:17.964"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.578" endtime="20201029 09:34:17.965"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:34:17.488" endtime="20201029 09:34:17.965" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:17.972" endtime="20201029 09:34:17.992"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.971" endtime="20201029 09:34:17.993"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:18.006" endtime="20201029 09:34:18.028"></status>
</kw>
<msg timestamp="20201029 09:34:18.029" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:18.005" endtime="20201029 09:34:18.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:18.031" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:18.030" endtime="20201029 09:34:18.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:18.035" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:18.032" endtime="20201029 09:34:18.036"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:18.002" endtime="20201029 09:34:18.036"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:18.000" endtime="20201029 09:34:18.037"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.998" endtime="20201029 09:34:18.037"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:18.041" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:18.040" endtime="20201029 09:34:18.042"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.038" endtime="20201029 09:34:18.042"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.997" endtime="20201029 09:34:18.042"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.997" endtime="20201029 09:34:18.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:18.043" endtime="20201029 09:34:18.045"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.995" endtime="20201029 09:34:18.045"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.994" endtime="20201029 09:34:18.046"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.969" endtime="20201029 09:34:18.046"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:18.054" endtime="20201029 09:34:18.126"></status>
</kw>
<msg timestamp="20201029 09:34:18.127" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:18.053" endtime="20201029 09:34:18.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:18.130" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:18.128" endtime="20201029 09:34:18.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:18.131" endtime="20201029 09:34:18.135"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.050" endtime="20201029 09:34:18.136"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.048" endtime="20201029 09:34:18.136"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:18.139" endtime="20201029 09:34:18.141"></status>
</kw>
<msg timestamp="20201029 09:34:18.143" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 09:34:18.137" endtime="20201029 09:34:18.144"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:18.151" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:34:18.148" endtime="20201029 09:34:18.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:18.156" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:34:18.154" endtime="20201029 09:34:18.156"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.145" endtime="20201029 09:34:18.157"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:18.161" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:34:18.160" endtime="20201029 09:34:18.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:18.163" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:34:18.162" endtime="20201029 09:34:18.164"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.158" endtime="20201029 09:34:18.164"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:18.171" endtime="20201029 09:34:18.489"></status>
</kw>
<msg timestamp="20201029 09:34:18.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075201875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075231528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:18.169" endtime="20201029 09:34:18.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:18.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075201875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075231528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:18.493" endtime="20201029 09:34:18.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:18.501" endtime="20201029 09:34:18.503"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.167" endtime="20201029 09:34:18.504"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.165" endtime="20201029 09:34:18.504"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:18.508" level="INFO">${RESULT} = [{'diff': 2.965300000000448e-05}, {'diff': 2.961100000001271e-05}, {'diff': 2.9624999999991464e-05}, {'diff': 2.95970000000062e-05}, {'diff': 2.9610999999998833e-05}, {'diff': 2.9666999999997112e-05},...</msg>
<status status="PASS" starttime="20201029 09:34:18.505" endtime="20201029 09:34:18.509"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:18.513" level="INFO">${OVERHEAD} = {'diff': [2.965300000000448e-05, 2.961100000001271e-05, 2.9624999999991464e-05, 2.95970000000062e-05, 2.9610999999998833e-05, 2.9666999999997112e-05, 2.9610999999998833e-05, 2.9666999999997112e-05, 2....</msg>
<status status="PASS" starttime="20201029 09:34:18.509" endtime="20201029 09:34:18.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:18.517" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201029 09:34:18.516" endtime="20201029 09:34:18.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:18.520" level="INFO">VALUE: [2.965300000000448e-05, 2.961100000001271e-05, 2.9624999999991464e-05, 2.95970000000062e-05, 2.9610999999998833e-05, 2.9666999999997112e-05, 2.9610999999998833e-05, 2.9666999999997112e-05, 2.9638999999997973e-05, 2.9638999999997973e-05, 2.9666999999997112e-05, 2.9610999999998833e-05, 2.9736000000002427e-05, 2.962500000000534e-05, 2.9666999999997112e-05, 2.9610999999998833e-05, 2.965300000000448e-05, 2.9596999999992324e-05, 2.9624999999991464e-05, 2.9680000000004148e-05, 2.9624999999991464e-05, 2.9610999999998833e-05, 2.965300000000448e-05, 2.9610999999998833e-05, 2.9680999999989743e-05, 2.9624999999991464e-05, 2.966599999999764e-05, 2.9722999999995392e-05, 2.966599999999764e-05, 2.9624999999991464e-05, 2.9610999999998833e-05, 2.9610999999998833e-05, 2.962500000000534e-05, 2.9638999999997973e-05, 2.96379999999985e-05, 2.966700000001099e-05, 2.9624999999991464e-05, 2.9680000000004148e-05, 2.9610999999998833e-05, 2.9610999999998833e-05, 2.9666999999997112e-05, 2.9638999999997973e-05, 2.968100000000362e-05, 2.967999999999027e-05, 2.9610999999998833e-05, 2.9666999999997112e-05, 2.968100000000362e-05, 2.95970000000062e-05, 2.95970000000062e-05, 2.9624999999991464e-05]</msg>
<status status="PASS" starttime="20201029 09:34:18.518" endtime="20201029 09:34:18.520"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.514" endtime="20201029 09:34:18.521"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.046" endtime="20201029 09:34:18.521"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:34:17.967" endtime="20201029 09:34:18.522" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:18.529" endtime="20201029 09:34:18.548"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.527" endtime="20201029 09:34:18.549"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:18.564" endtime="20201029 09:34:18.583"></status>
</kw>
<msg timestamp="20201029 09:34:18.584" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:18.562" endtime="20201029 09:34:18.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:18.586" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:18.585" endtime="20201029 09:34:18.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:18.589" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:18.587" endtime="20201029 09:34:18.590"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:18.559" endtime="20201029 09:34:18.590"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:18.556" endtime="20201029 09:34:18.591"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.555" endtime="20201029 09:34:18.591"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:18.595" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:18.594" endtime="20201029 09:34:18.596"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.592" endtime="20201029 09:34:18.596"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.554" endtime="20201029 09:34:18.596"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.553" endtime="20201029 09:34:18.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:18.597" endtime="20201029 09:34:18.598"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.552" endtime="20201029 09:34:18.599"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.550" endtime="20201029 09:34:18.599"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.526" endtime="20201029 09:34:18.600"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:18.609" endtime="20201029 09:34:18.783"></status>
</kw>
<msg timestamp="20201029 09:34:18.783" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:18.607" endtime="20201029 09:34:18.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:18.786" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:18.784" endtime="20201029 09:34:18.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:18.788" endtime="20201029 09:34:18.790"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.604" endtime="20201029 09:34:18.790"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.602" endtime="20201029 09:34:18.791"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:18.796" endtime="20201029 09:34:18.798"></status>
</kw>
<msg timestamp="20201029 09:34:18.798" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 09:34:18.792" endtime="20201029 09:34:18.799"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:18.803" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:34:18.802" endtime="20201029 09:34:18.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:18.806" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:34:18.804" endtime="20201029 09:34:18.806"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.799" endtime="20201029 09:34:18.806"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:18.811" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:34:18.809" endtime="20201029 09:34:18.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:18.817" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:34:18.812" endtime="20201029 09:34:18.817"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.807" endtime="20201029 09:34:18.818"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:18.824" endtime="20201029 09:34:19.135"></status>
</kw>
<msg timestamp="20201029 09:34:19.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072733625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072771528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:18.823" endtime="20201029 09:34:19.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:19.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072733625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072771528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:19.139" endtime="20201029 09:34:19.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:19.147" endtime="20201029 09:34:19.148"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.820" endtime="20201029 09:34:19.149"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.818" endtime="20201029 09:34:19.149"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:19.153" level="INFO">${RESULT} = [{'diff': 3.790300000000579e-05}, {'diff': 3.791599999999895e-05}, {'diff': 3.797199999999723e-05}, {'diff': 3.79580000000046e-05}, {'diff': 3.7916999999998424e-05}, {'diff': 3.795799999999072e-05}, {...</msg>
<status status="PASS" starttime="20201029 09:34:19.150" endtime="20201029 09:34:19.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:19.157" level="INFO">${OVERHEAD} = {'diff': [3.790300000000579e-05, 3.791599999999895e-05, 3.797199999999723e-05, 3.79580000000046e-05, 3.7916999999998424e-05, 3.795799999999072e-05, 3.799999999999637e-05, 3.799999999999637e-05, 3.7999...</msg>
<status status="PASS" starttime="20201029 09:34:19.154" endtime="20201029 09:34:19.158"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:19.162" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201029 09:34:19.161" endtime="20201029 09:34:19.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:19.164" level="INFO">VALUE: [3.790300000000579e-05, 3.791599999999895e-05, 3.797199999999723e-05, 3.79580000000046e-05, 3.7916999999998424e-05, 3.795799999999072e-05, 3.799999999999637e-05, 3.799999999999637e-05, 3.799999999999637e-05, 3.797200000001111e-05, 3.793100000000493e-05, 3.7944999999997564e-05, 3.795799999999072e-05, 3.7944999999997564e-05, 3.79580000000046e-05, 3.797199999999723e-05, 3.797199999999723e-05, 3.7944999999997564e-05, 3.7861000000000145e-05, 3.797199999999723e-05, 3.802799999999551e-05, 3.800000000001025e-05, 3.794500000001144e-05, 3.792999999999158e-05, 3.791599999999895e-05, 3.793000000001934e-05, 3.7930999999991055e-05, 3.7916999999998424e-05, 3.790300000000579e-05, 3.790300000000579e-05, 3.798600000001762e-05, 3.791599999999895e-05, 3.792999999999158e-05, 3.794399999998421e-05, 3.790200000000632e-05, 3.7916999999998424e-05, 3.7944999999983686e-05, 3.79580000000046e-05, 3.793000000001934e-05, 3.798599999998986e-05, 3.790200000000632e-05, 3.791599999999895e-05, 3.791599999999895e-05, 3.799999999998249e-05, 3.794500000001144e-05, 3.791599999999895e-05, 3.794500000001144e-05, 3.788799999998593e-05, 3.797199999999723e-05, 3.798599999998986e-05]</msg>
<status status="PASS" starttime="20201029 09:34:19.163" endtime="20201029 09:34:19.165"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.158" endtime="20201029 09:34:19.166"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.600" endtime="20201029 09:34:19.166"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:34:18.523" endtime="20201029 09:34:19.167" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:19.173" endtime="20201029 09:34:19.193"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.172" endtime="20201029 09:34:19.193"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:19.206" endtime="20201029 09:34:19.227"></status>
</kw>
<msg timestamp="20201029 09:34:19.228" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:19.205" endtime="20201029 09:34:19.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:19.231" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:19.229" endtime="20201029 09:34:19.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:19.235" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:19.233" endtime="20201029 09:34:19.235"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:19.202" endtime="20201029 09:34:19.236"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:19.200" endtime="20201029 09:34:19.236"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.199" endtime="20201029 09:34:19.237"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:19.240" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:19.240" endtime="20201029 09:34:19.241"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.237" endtime="20201029 09:34:19.241"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.198" endtime="20201029 09:34:19.241"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.197" endtime="20201029 09:34:19.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:19.242" endtime="20201029 09:34:19.244"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.196" endtime="20201029 09:34:19.244"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.194" endtime="20201029 09:34:19.244"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.171" endtime="20201029 09:34:19.245"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 09:34:19.248" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 09:34:19.257" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 09:34:20.499" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 09:34:19.247" endtime="20201029 09:34:20.500"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 09:34:20.503" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 09:34:20.501" endtime="20201029 09:34:20.503"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.245" endtime="20201029 09:34:20.503"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:20.507" endtime="20201029 09:34:20.527"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.505" endtime="20201029 09:34:20.528"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:20.536" endtime="20201029 09:34:20.547"></status>
</kw>
<msg timestamp="20201029 09:34:20.547" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:20.535" endtime="20201029 09:34:20.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:20.550" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:20.548" endtime="20201029 09:34:20.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:20.551" endtime="20201029 09:34:20.553"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.532" endtime="20201029 09:34:20.553"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.530" endtime="20201029 09:34:20.553"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:20.569" endtime="20201029 09:34:20.870"></status>
</kw>
<msg timestamp="20201029 09:34:20.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018801667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018820694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:20.567" endtime="20201029 09:34:20.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:20.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018801667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018820694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:20.874" endtime="20201029 09:34:20.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:20.882" endtime="20201029 09:34:20.884"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.564" endtime="20201029 09:34:20.884"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.554" endtime="20201029 09:34:20.885"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:20.889" level="INFO">${PHILIP_RES} = [{'diff': 1.902699999999785e-05}, {'diff': 1.902700000000132e-05}, {'diff': 1.9014000000001224e-05}, {'diff': 1.8999999999998185e-05}, {'diff': 1.895899999999895e-05}, {'diff': 1.8972000000002515e-05}...</msg>
<status status="PASS" starttime="20201029 09:34:20.886" endtime="20201029 09:34:20.889"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:20.894" level="INFO">${RESULT} = {'diff': [1.902699999999785e-05, 1.902700000000132e-05, 1.9014000000001224e-05, 1.8999999999998185e-05, 1.895899999999895e-05, 1.8972000000002515e-05, 1.8916000000000766e-05, 1.9000000000001654e-05, 1...</msg>
<status status="PASS" starttime="20201029 09:34:20.890" endtime="20201029 09:34:20.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:20.899" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:20.897" endtime="20201029 09:34:20.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:20.902" level="INFO">VALUE: [1.902699999999785e-05, 1.902700000000132e-05, 1.9014000000001224e-05, 1.8999999999998185e-05, 1.895899999999895e-05, 1.8972000000002515e-05, 1.8916000000000766e-05, 1.9000000000001654e-05, 1.8986000000002085e-05, 1.8916000000000766e-05, 1.895899999999895e-05, 1.8985999999998615e-05, 1.8971999999999045e-05, 1.8957999999999475e-05, 1.8985999999998615e-05, 1.8985999999998615e-05, 1.8987000000001558e-05, 1.8957999999999475e-05, 1.8973000000001988e-05, 1.8999999999998185e-05, 1.9000000000001654e-05, 1.8999999999998185e-05, 1.88890000000011e-05, 1.8971999999999045e-05, 1.9000000000001654e-05, 1.895899999999895e-05, 1.894500000000285e-05, 1.9000000000001654e-05, 1.8943999999999905e-05, 1.895899999999895e-05, 1.8985999999998615e-05, 1.8957999999999475e-05, 1.8957999999999475e-05, 1.8985999999998615e-05, 1.8971999999999045e-05, 1.9013999999997755e-05, 1.8973000000001988e-05, 1.8972000000002515e-05, 1.9014000000001224e-05, 1.9000000000001654e-05, 1.895899999999895e-05, 1.8985999999998615e-05, 1.9014000000001224e-05, 1.88890000000011e-05, 1.8985999999998615e-05, 1.8985999999998615e-05, 1.8957999999999475e-05, 1.8973000000001988e-05, 1.9000000000001654e-05, 1.8943999999999905e-05]</msg>
<status status="PASS" starttime="20201029 09:34:20.900" endtime="20201029 09:34:20.903"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.895" endtime="20201029 09:34:20.903"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.529" endtime="20201029 09:34:20.904"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.505" endtime="20201029 09:34:20.904"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:20.907" endtime="20201029 09:34:20.927"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.905" endtime="20201029 09:34:20.927"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:20.941" endtime="20201029 09:34:20.959"></status>
</kw>
<msg timestamp="20201029 09:34:20.959" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:20.939" endtime="20201029 09:34:20.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:20.962" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:20.960" endtime="20201029 09:34:20.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:20.963" endtime="20201029 09:34:20.965"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.936" endtime="20201029 09:34:20.965"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.934" endtime="20201029 09:34:20.966"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:20.972" endtime="20201029 09:34:21.258"></status>
</kw>
<msg timestamp="20201029 09:34:21.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026521806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026549167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:20.971" endtime="20201029 09:34:21.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026521806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026549167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:21.262" endtime="20201029 09:34:21.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:21.271" endtime="20201029 09:34:21.272"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.968" endtime="20201029 09:34:21.273"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.967" endtime="20201029 09:34:21.273"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:21.277" level="INFO">${PHILIP_RES} = [{'diff': 2.7361000000000052e-05}, {'diff': 2.738900000000266e-05}, {'diff': 2.738900000000266e-05}, {'diff': 2.738900000000266e-05}, {'diff': 2.740300000000223e-05}, {'diff': 2.7387999999999718e-05},...</msg>
<status status="PASS" starttime="20201029 09:34:21.274" endtime="20201029 09:34:21.278"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:21.283" level="INFO">${RESULT} = {'diff': [2.7361000000000052e-05, 2.738900000000266e-05, 2.738900000000266e-05, 2.738900000000266e-05, 2.740300000000223e-05, 2.7387999999999718e-05, 2.7388999999999192e-05, 2.7388999999999192e-05, 2....</msg>
<status status="PASS" starttime="20201029 09:34:21.278" endtime="20201029 09:34:21.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.287" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:21.286" endtime="20201029 09:34:21.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.289" level="INFO">VALUE: [2.7361000000000052e-05, 2.738900000000266e-05, 2.738900000000266e-05, 2.738900000000266e-05, 2.740300000000223e-05, 2.7387999999999718e-05, 2.7388999999999192e-05, 2.7388999999999192e-05, 2.7332999999997443e-05, 2.7388999999999192e-05, 2.7374999999999622e-05, 2.7374999999999622e-05, 2.7374999999999622e-05, 2.738900000000266e-05, 2.7319000000001342e-05, 2.740299999999876e-05, 2.740299999999876e-05, 2.7387999999999718e-05, 2.7346999999997013e-05, 2.7402000000002757e-05, 2.7361000000000052e-05, 2.7374999999999622e-05, 2.740299999999876e-05, 2.7387999999999718e-05, 2.7334000000000386e-05, 2.7388000000003188e-05, 2.7333000000000912e-05, 2.7361999999999526e-05, 2.7374999999999622e-05, 2.7334000000000386e-05, 2.7374999999999622e-05, 2.7402000000002757e-05, 2.7387999999999718e-05, 2.7472000000000607e-05, 2.7401999999999288e-05, 2.741699999999833e-05, 2.7388999999999192e-05, 2.740299999999876e-05, 2.7347999999999956e-05, 2.7388999999999192e-05, 2.7388999999999192e-05, 2.7430000000001897e-05, 2.738900000000266e-05, 2.7388999999999192e-05, 2.740299999999876e-05, 2.7334000000000386e-05, 2.747300000000008e-05, 2.738900000000266e-05, 2.7361000000000052e-05, 2.7347999999999956e-05]</msg>
<status status="PASS" starttime="20201029 09:34:21.288" endtime="20201029 09:34:21.290"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.284" endtime="20201029 09:34:21.290"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.932" endtime="20201029 09:34:21.291"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.905" endtime="20201029 09:34:21.291"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:21.293" endtime="20201029 09:34:21.313"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.292" endtime="20201029 09:34:21.313"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:21.321" endtime="20201029 09:34:21.335"></status>
</kw>
<msg timestamp="20201029 09:34:21.336" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:21.320" endtime="20201029 09:34:21.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.338" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:21.337" endtime="20201029 09:34:21.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:21.339" endtime="20201029 09:34:21.341"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.317" endtime="20201029 09:34:21.342"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.315" endtime="20201029 09:34:21.343"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:21.350" endtime="20201029 09:34:21.662"></status>
</kw>
<msg timestamp="20201029 09:34:21.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017083139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017119139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:21.347" endtime="20201029 09:34:21.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017083139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017119139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:21.666" endtime="20201029 09:34:21.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:21.675" endtime="20201029 09:34:21.676"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.345" endtime="20201029 09:34:21.677"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.343" endtime="20201029 09:34:21.677"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:21.681" level="INFO">${PHILIP_RES} = [{'diff': 3.599999999999784e-05}, {'diff': 3.6027000000000975e-05}, {'diff': 3.598700000000121e-05}, {'diff': 3.602800000000045e-05}, {'diff': 3.601400000000088e-05}, {'diff': 3.59580000000026e-05}, {...</msg>
<status status="PASS" starttime="20201029 09:34:21.678" endtime="20201029 09:34:21.682"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:21.686" level="INFO">${RESULT} = {'diff': [3.599999999999784e-05, 3.6027000000000975e-05, 3.598700000000121e-05, 3.602800000000045e-05, 3.601400000000088e-05, 3.59580000000026e-05, 3.597200000000217e-05, 3.604200000000002e-05, 3.5971...</msg>
<status status="PASS" starttime="20201029 09:34:21.682" endtime="20201029 09:34:21.686"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.690" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:21.689" endtime="20201029 09:34:21.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.693" level="INFO">VALUE: [3.599999999999784e-05, 3.6027000000000975e-05, 3.598700000000121e-05, 3.602800000000045e-05, 3.601400000000088e-05, 3.59580000000026e-05, 3.597200000000217e-05, 3.604200000000002e-05, 3.59719999999987e-05, 3.6055000000000115e-05, 3.604200000000002e-05, 3.604200000000002e-05, 3.59719999999987e-05, 3.6068999999999685e-05, 3.598599999999827e-05, 3.59719999999987e-05, 3.598599999999827e-05, 3.605599999999959e-05, 3.605599999999959e-05, 3.6013000000001405e-05, 3.604200000000002e-05, 3.599999999999784e-05, 3.6040999999997075e-05, 3.597200000000217e-05, 3.604200000000002e-05, 3.5916999999999893e-05, 3.598700000000121e-05, 3.6068999999999685e-05, 3.604200000000002e-05, 3.604200000000002e-05, 3.6041000000000545e-05, 3.601400000000088e-05, 3.598699999999774e-05, 3.598699999999774e-05, 3.6055000000000115e-05, 3.597200000000217e-05, 3.604200000000002e-05, 3.600000000000131e-05, 3.6055000000000115e-05, 3.598600000000174e-05, 3.597200000000217e-05, 3.601400000000088e-05, 3.606999999999916e-05, 3.600000000000131e-05, 3.6082999999999255e-05, 3.604200000000002e-05, 3.601400000000088e-05, 3.601400000000088e-05, 3.601399999999741e-05, 3.602800000000045e-05]</msg>
<status status="PASS" starttime="20201029 09:34:21.691" endtime="20201029 09:34:21.693"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.687" endtime="20201029 09:34:21.694"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.314" endtime="20201029 09:34:21.694"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.291" endtime="20201029 09:34:21.694"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:21.697" endtime="20201029 09:34:21.716"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.695" endtime="20201029 09:34:21.717"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:21.726" endtime="20201029 09:34:21.742"></status>
</kw>
<msg timestamp="20201029 09:34:21.743" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:21.725" endtime="20201029 09:34:21.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.745" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:21.744" endtime="20201029 09:34:21.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:21.747" endtime="20201029 09:34:21.748"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.721" endtime="20201029 09:34:21.749"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.719" endtime="20201029 09:34:21.749"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:21.756" endtime="20201029 09:34:22.043"></status>
</kw>
<msg timestamp="20201029 09:34:22.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020616417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020661319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:21.754" endtime="20201029 09:34:22.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:22.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020616417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020661319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:22.047" endtime="20201029 09:34:22.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:22.056" endtime="20201029 09:34:22.058"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.752" endtime="20201029 09:34:22.058"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.750" endtime="20201029 09:34:22.059"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:22.063" level="INFO">${PHILIP_RES} = [{'diff': 4.490199999999944e-05}, {'diff': 4.4874999999999776e-05}, {'diff': 4.4874999999999776e-05}, {'diff': 4.4847000000000636e-05}, {'diff': 4.4888999999999346e-05}, {'diff': 4.492999999999858e-05...</msg>
<status status="PASS" starttime="20201029 09:34:22.059" endtime="20201029 09:34:22.063"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:22.067" level="INFO">${RESULT} = {'diff': [4.490199999999944e-05, 4.4874999999999776e-05, 4.4874999999999776e-05, 4.4847000000000636e-05, 4.4888999999999346e-05, 4.492999999999858e-05, 4.4861000000000206e-05, 4.492999999999858e-05, 4...</msg>
<status status="PASS" starttime="20201029 09:34:22.064" endtime="20201029 09:34:22.068"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:22.073" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:22.071" endtime="20201029 09:34:22.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:22.075" level="INFO">VALUE: [4.490199999999944e-05, 4.4874999999999776e-05, 4.4874999999999776e-05, 4.4847000000000636e-05, 4.4888999999999346e-05, 4.492999999999858e-05, 4.4861000000000206e-05, 4.492999999999858e-05, 4.494400000000162e-05, 4.4847000000000636e-05, 4.4888999999999346e-05, 4.495800000000119e-05, 4.4902999999998916e-05, 4.497199999999729e-05, 4.491599999999901e-05, 4.4861000000000206e-05, 4.494399999999815e-05, 4.494400000000162e-05, 4.486199999999968e-05, 4.4930999999998056e-05, 4.4931000000001525e-05, 4.4944999999997626e-05, 4.4917000000001955e-05, 4.4902999999998916e-05, 4.494400000000162e-05, 4.494399999999815e-05, 4.4874999999999776e-05, 4.494399999999815e-05, 4.494400000000162e-05, 4.497199999999729e-05, 4.495800000000119e-05, 4.494399999999815e-05, 4.4931000000001525e-05, 4.4945000000001095e-05, 4.4916999999998486e-05, 4.488799999999987e-05, 4.495800000000119e-05, 4.4958999999997196e-05, 4.486199999999968e-05, 4.483399999999707e-05, 4.4861000000000206e-05, 4.481899999999803e-05, 4.486199999999968e-05, 4.486199999999968e-05, 4.488799999999987e-05, 4.4930999999998056e-05, 4.4903000000002385e-05, 4.498600000000033e-05, 4.491600000000248e-05, 4.4874999999999776e-05]</msg>
<status status="PASS" starttime="20201029 09:34:22.074" endtime="20201029 09:34:22.076"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.068" endtime="20201029 09:34:22.076"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.717" endtime="20201029 09:34:22.077"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.695" endtime="20201029 09:34:22.077"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:22.079" endtime="20201029 09:34:22.099"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.078" endtime="20201029 09:34:22.099"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:22.108" endtime="20201029 09:34:22.128"></status>
</kw>
<msg timestamp="20201029 09:34:22.129" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:22.106" endtime="20201029 09:34:22.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:22.132" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:22.130" endtime="20201029 09:34:22.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:22.133" endtime="20201029 09:34:22.134"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.103" endtime="20201029 09:34:22.135"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.101" endtime="20201029 09:34:22.135"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:22.142" endtime="20201029 09:34:22.430"></status>
</kw>
<msg timestamp="20201029 09:34:22.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0199645, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020018625, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:34:22.140" endtime="20201029 09:34:22.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:22.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0199645, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020018625, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:34:22.434" endtime="20201029 09:34:22.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:22.442" endtime="20201029 09:34:22.444"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.138" endtime="20201029 09:34:22.444"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.136" endtime="20201029 09:34:22.445"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:22.449" level="INFO">${PHILIP_RES} = [{'diff': 5.412500000000209e-05}, {'diff': 5.412500000000209e-05}, {'diff': 5.406999999999981e-05}, {'diff': 5.400000000000196e-05}, {'diff': 5.406900000000034e-05}, {'diff': 5.409699999999948e-05}, {...</msg>
<status status="PASS" starttime="20201029 09:34:22.446" endtime="20201029 09:34:22.449"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:22.454" level="INFO">${RESULT} = {'diff': [5.412500000000209e-05, 5.412500000000209e-05, 5.406999999999981e-05, 5.400000000000196e-05, 5.406900000000034e-05, 5.409699999999948e-05, 5.4013999999998064e-05, 5.406900000000034e-05, 5.400...</msg>
<status status="PASS" starttime="20201029 09:34:22.450" endtime="20201029 09:34:22.454"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:22.458" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:22.457" endtime="20201029 09:34:22.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:22.461" level="INFO">VALUE: [5.412500000000209e-05, 5.412500000000209e-05, 5.406999999999981e-05, 5.400000000000196e-05, 5.406900000000034e-05, 5.409699999999948e-05, 5.4013999999998064e-05, 5.406900000000034e-05, 5.400000000000196e-05, 5.3985999999998924e-05, 5.3999999999998494e-05, 5.408299999999991e-05, 5.409699999999948e-05, 5.413900000000166e-05, 5.406900000000034e-05, 5.412499999999862e-05, 5.408299999999991e-05, 5.411099999999905e-05, 5.408299999999991e-05, 5.408299999999991e-05, 5.39730000000023e-05, 5.3999999999998494e-05, 5.4013999999998064e-05, 5.3985999999998924e-05, 5.404200000000067e-05, 5.405600000000024e-05, 5.411099999999905e-05, 5.3999999999998494e-05, 5.4013999999998064e-05, 5.401299999999859e-05, 5.408399999999938e-05, 5.413900000000166e-05, 5.4013999999998064e-05, 5.40280000000011e-05, 5.401400000000153e-05, 5.406900000000034e-05, 5.40410000000012e-05, 5.405600000000024e-05, 5.405600000000024e-05, 5.400000000000196e-05, 5.406999999999981e-05, 5.398600000000239e-05, 5.411099999999905e-05, 5.408399999999938e-05, 5.395899999999926e-05, 5.401400000000153e-05, 5.4013999999998064e-05, 5.406999999999981e-05, 5.409699999999948e-05, 5.401400000000153e-05]</msg>
<status status="PASS" starttime="20201029 09:34:22.459" endtime="20201029 09:34:22.461"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.455" endtime="20201029 09:34:22.461"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.100" endtime="20201029 09:34:22.462"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.077" endtime="20201029 09:34:22.462"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:22.464" endtime="20201029 09:34:22.484"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.463" endtime="20201029 09:34:22.484"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:22.492" endtime="20201029 09:34:22.511"></status>
</kw>
<msg timestamp="20201029 09:34:22.512" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:22.491" endtime="20201029 09:34:22.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:22.515" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:22.513" endtime="20201029 09:34:22.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:22.516" endtime="20201029 09:34:22.517"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.488" endtime="20201029 09:34:22.518"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.486" endtime="20201029 09:34:22.518"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:22.525" endtime="20201029 09:34:22.810"></status>
</kw>
<msg timestamp="20201029 09:34:22.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016734972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016798431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:22.523" endtime="20201029 09:34:22.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:22.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016734972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016798431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:22.814" endtime="20201029 09:34:22.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:22.822" endtime="20201029 09:34:22.825"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.521" endtime="20201029 09:34:22.826"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.519" endtime="20201029 09:34:22.826"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:22.830" level="INFO">${PHILIP_RES} = [{'diff': 6.345899999999835e-05}, {'diff': 6.347199999999845e-05}, {'diff': 6.341600000000017e-05}, {'diff': 6.341699999999964e-05}, {'diff': 6.35560000000028e-05}, {'diff': 6.337500000000093e-05}, {'...</msg>
<status status="PASS" starttime="20201029 09:34:22.827" endtime="20201029 09:34:22.830"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:22.834" level="INFO">${RESULT} = {'diff': [6.345899999999835e-05, 6.347199999999845e-05, 6.341600000000017e-05, 6.341699999999964e-05, 6.35560000000028e-05, 6.337500000000093e-05, 6.351400000000063e-05, 6.350000000000106e-05, 6.35139...</msg>
<status status="PASS" starttime="20201029 09:34:22.831" endtime="20201029 09:34:22.834"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:22.838" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:22.837" endtime="20201029 09:34:22.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:22.841" level="INFO">VALUE: [6.345899999999835e-05, 6.347199999999845e-05, 6.341600000000017e-05, 6.341699999999964e-05, 6.35560000000028e-05, 6.337500000000093e-05, 6.351400000000063e-05, 6.350000000000106e-05, 6.351399999999716e-05, 6.344500000000225e-05, 6.340300000000007e-05, 6.341600000000017e-05, 6.344500000000225e-05, 6.345799999999888e-05, 6.340300000000007e-05, 6.340300000000007e-05, 6.349999999999759e-05, 6.337500000000093e-05, 6.351400000000063e-05, 6.348600000000149e-05, 6.33890000000005e-05, 6.345799999999888e-05, 6.351399999999716e-05, 6.347300000000139e-05, 6.344499999999878e-05, 6.345900000000182e-05, 6.342999999999974e-05, 6.343099999999921e-05, 6.348600000000149e-05, 6.351400000000063e-05, 6.336099999999789e-05, 6.347199999999845e-05, 6.340300000000007e-05, 6.350000000000106e-05, 6.340199999999713e-05, 6.345800000000235e-05, 6.343099999999921e-05, 6.342999999999974e-05, 6.345799999999888e-05, 6.337500000000093e-05, 6.348599999999802e-05, 6.338800000000103e-05, 6.351400000000063e-05, 6.338899999999703e-05, 6.347199999999845e-05, 6.347300000000139e-05, 6.345799999999888e-05, 6.343099999999921e-05, 6.345799999999888e-05, 6.35280000000002e-05]</msg>
<status status="PASS" starttime="20201029 09:34:22.839" endtime="20201029 09:34:22.841"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.835" endtime="20201029 09:34:22.842"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.485" endtime="20201029 09:34:22.842"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.462" endtime="20201029 09:34:22.842"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:22.845" endtime="20201029 09:34:22.864"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.843" endtime="20201029 09:34:22.865"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:22.872" endtime="20201029 09:34:22.893"></status>
</kw>
<msg timestamp="20201029 09:34:22.893" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:22.871" endtime="20201029 09:34:22.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:22.896" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:22.894" endtime="20201029 09:34:22.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:22.897" endtime="20201029 09:34:22.899"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.868" endtime="20201029 09:34:22.900"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.866" endtime="20201029 09:34:22.900"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:22.907" endtime="20201029 09:34:23.193"></status>
</kw>
<msg timestamp="20201029 09:34:23.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018407375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018480556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:22.905" endtime="20201029 09:34:23.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:23.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018407375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018480556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:23.197" endtime="20201029 09:34:23.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:23.206" endtime="20201029 09:34:23.207"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.903" endtime="20201029 09:34:23.208"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.901" endtime="20201029 09:34:23.208"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:23.212" level="INFO">${PHILIP_RES} = [{'diff': 7.318099999999855e-05}, {'diff': 7.312500000000027e-05}, {'diff': 7.311200000000018e-05}, {'diff': 7.309700000000113e-05}, {'diff': 7.313899999999984e-05}, {'diff': 7.302699999999981e-05}, {...</msg>
<status status="PASS" starttime="20201029 09:34:23.209" endtime="20201029 09:34:23.213"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:23.217" level="INFO">${RESULT} = {'diff': [7.318099999999855e-05, 7.312500000000027e-05, 7.311200000000018e-05, 7.309700000000113e-05, 7.313899999999984e-05, 7.302699999999981e-05, 7.306899999999852e-05, 7.307000000000147e-05, 7.3027...</msg>
<status status="PASS" starttime="20201029 09:34:23.213" endtime="20201029 09:34:23.217"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:23.221" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:23.220" endtime="20201029 09:34:23.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:23.223" level="INFO">VALUE: [7.318099999999855e-05, 7.312500000000027e-05, 7.311200000000018e-05, 7.309700000000113e-05, 7.313899999999984e-05, 7.302699999999981e-05, 7.306899999999852e-05, 7.307000000000147e-05, 7.302799999999929e-05, 7.315299999999941e-05, 7.31110000000007e-05, 7.313899999999984e-05, 7.305599999999843e-05, 7.304099999999938e-05, 7.305599999999843e-05, 7.308399999999757e-05, 7.302799999999929e-05, 7.3069999999998e-05, 7.312500000000027e-05, 7.31110000000007e-05, 7.31110000000007e-05, 7.304099999999938e-05, 7.306899999999852e-05, 7.304099999999938e-05, 7.305599999999843e-05, 7.307000000000147e-05, 7.304199999999886e-05, 7.311099999999723e-05, 7.302700000000328e-05, 7.305599999999843e-05, 7.313899999999984e-05, 7.304200000000233e-05, 7.309700000000113e-05, 7.313800000000037e-05, 7.308400000000104e-05, 7.316699999999898e-05, 7.315299999999941e-05, 7.316699999999898e-05, 7.316599999999951e-05, 7.315299999999941e-05, 7.304199999999886e-05, 7.315299999999941e-05, 7.312500000000027e-05, 7.316699999999898e-05, 7.317999999999908e-05, 7.316599999999951e-05, 7.315299999999941e-05, 7.315299999999941e-05, 7.315299999999941e-05, 7.316599999999951e-05]</msg>
<status status="PASS" starttime="20201029 09:34:23.222" endtime="20201029 09:34:23.225"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.217" endtime="20201029 09:34:23.225"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.865" endtime="20201029 09:34:23.226"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.843" endtime="20201029 09:34:23.226"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:23.228" endtime="20201029 09:34:23.247"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.227" endtime="20201029 09:34:23.248"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:23.257" endtime="20201029 09:34:23.284"></status>
</kw>
<msg timestamp="20201029 09:34:23.284" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:23.255" endtime="20201029 09:34:23.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:23.287" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:23.285" endtime="20201029 09:34:23.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:23.288" endtime="20201029 09:34:23.289"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.252" endtime="20201029 09:34:23.290"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.250" endtime="20201029 09:34:23.290"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:23.297" endtime="20201029 09:34:23.583"></status>
</kw>
<msg timestamp="20201029 09:34:23.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021700042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021783014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:23.295" endtime="20201029 09:34:23.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:23.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021700042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021783014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:23.587" endtime="20201029 09:34:23.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:23.595" endtime="20201029 09:34:23.597"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.293" endtime="20201029 09:34:23.597"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.291" endtime="20201029 09:34:23.598"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:23.601" level="INFO">${PHILIP_RES} = [{'diff': 8.29720000000006e-05}, {'diff': 8.302799999999888e-05}, {'diff': 8.299999999999974e-05}, {'diff': 8.302799999999888e-05}, {'diff': 8.305499999999855e-05}, {'diff': 8.29720000000006e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 09:34:23.598" endtime="20201029 09:34:23.602"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:23.608" level="INFO">${RESULT} = {'diff': [8.29720000000006e-05, 8.302799999999888e-05, 8.299999999999974e-05, 8.302799999999888e-05, 8.305499999999855e-05, 8.29720000000006e-05, 8.305599999999802e-05, 8.295800000000103e-05, 8.297200...</msg>
<status status="PASS" starttime="20201029 09:34:23.603" endtime="20201029 09:34:23.609"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:23.613" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:23.612" endtime="20201029 09:34:23.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:23.616" level="INFO">VALUE: [8.29720000000006e-05, 8.302799999999888e-05, 8.299999999999974e-05, 8.302799999999888e-05, 8.305499999999855e-05, 8.29720000000006e-05, 8.305599999999802e-05, 8.295800000000103e-05, 8.29720000000006e-05, 8.292999999999842e-05, 8.298600000000017e-05, 8.294399999999799e-05, 8.295800000000103e-05, 8.287500000000309e-05, 8.294399999999799e-05, 8.302699999999941e-05, 8.294499999999747e-05, 8.29170000000018e-05, 8.295800000000103e-05, 8.297300000000007e-05, 8.298600000000017e-05, 8.302799999999888e-05, 8.294400000000146e-05, 8.294400000000146e-05, 8.294499999999747e-05, 8.291699999999833e-05, 8.295799999999756e-05, 8.29720000000006e-05, 8.295800000000103e-05, 8.299999999999974e-05, 8.304099999999898e-05, 8.304199999999845e-05, 8.295799999999756e-05, 8.291699999999833e-05, 8.308300000000116e-05, 8.299999999999974e-05, 8.298600000000017e-05, 8.294400000000146e-05, 8.298600000000017e-05, 8.301399999999931e-05, 8.308299999999769e-05, 8.293100000000136e-05, 8.295800000000103e-05, 8.302799999999888e-05, 8.302799999999888e-05, 8.298600000000017e-05, 8.298600000000017e-05, 8.290300000000222e-05, 8.302799999999888e-05, 8.302699999999941e-05]</msg>
<status status="PASS" starttime="20201029 09:34:23.614" endtime="20201029 09:34:23.616"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.609" endtime="20201029 09:34:23.616"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.249" endtime="20201029 09:34:23.617"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.226" endtime="20201029 09:34:23.617"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:23.619" endtime="20201029 09:34:23.639"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.618" endtime="20201029 09:34:23.639"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:23.648" endtime="20201029 09:34:23.671"></status>
</kw>
<msg timestamp="20201029 09:34:23.671" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:23.646" endtime="20201029 09:34:23.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:23.674" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:23.673" endtime="20201029 09:34:23.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:23.675" endtime="20201029 09:34:23.677"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.643" endtime="20201029 09:34:23.677"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.641" endtime="20201029 09:34:23.678"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:23.684" endtime="20201029 09:34:23.974"></status>
</kw>
<msg timestamp="20201029 09:34:23.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017293514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017386681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:23.682" endtime="20201029 09:34:23.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:23.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017293514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017386681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:23.979" endtime="20201029 09:34:23.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:23.988" endtime="20201029 09:34:23.990"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.680" endtime="20201029 09:34:23.991"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.678" endtime="20201029 09:34:23.991"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:23.995" level="INFO">${PHILIP_RES} = [{'diff': 9.316700000000164e-05}, {'diff': 9.313899999999903e-05}, {'diff': 9.311100000000336e-05}, {'diff': 9.322200000000044e-05}, {'diff': 9.311099999999989e-05}, {'diff': 9.312499999999946e-05}, {...</msg>
<status status="PASS" starttime="20201029 09:34:23.992" endtime="20201029 09:34:23.996"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:24.000" level="INFO">${RESULT} = {'diff': [9.316700000000164e-05, 9.313899999999903e-05, 9.311100000000336e-05, 9.322200000000044e-05, 9.311099999999989e-05, 9.312499999999946e-05, 9.319500000000078e-05, 9.311099999999989e-05, 9.3083...</msg>
<status status="PASS" starttime="20201029 09:34:23.996" endtime="20201029 09:34:24.000"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.004" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:24.003" endtime="20201029 09:34:24.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.007" level="INFO">VALUE: [9.316700000000164e-05, 9.313899999999903e-05, 9.311100000000336e-05, 9.322200000000044e-05, 9.311099999999989e-05, 9.312499999999946e-05, 9.319500000000078e-05, 9.311099999999989e-05, 9.308300000000075e-05, 9.30139999999989e-05, 9.311099999999989e-05, 9.309700000000032e-05, 9.31940000000013e-05, 9.313899999999903e-05, 9.318100000000121e-05, 9.312499999999946e-05, 9.32079999999974e-05, 9.318000000000173e-05, 9.31529999999986e-05, 9.312499999999946e-05, 9.31520000000026e-05, 9.316699999999817e-05, 9.31940000000013e-05, 9.320800000000087e-05, 9.322299999999992e-05, 9.318100000000121e-05, 9.312500000000293e-05, 9.319399999999783e-05, 9.323600000000001e-05, 9.320900000000035e-05, 9.322200000000044e-05, 9.312499999999946e-05, 9.316699999999817e-05, 9.311099999999989e-05, 9.31529999999986e-05, 9.302799999999847e-05, 9.312499999999946e-05, 9.320900000000035e-05, 9.312499999999946e-05, 9.31390000000025e-05, 9.315199999999912e-05, 9.312499999999946e-05, 9.306900000000118e-05, 9.320900000000035e-05, 9.31529999999986e-05, 9.316699999999817e-05, 9.31390000000025e-05, 9.323600000000001e-05, 9.31659999999987e-05, 9.308400000000022e-05]</msg>
<status status="PASS" starttime="20201029 09:34:24.006" endtime="20201029 09:34:24.007"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.001" endtime="20201029 09:34:24.008"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.640" endtime="20201029 09:34:24.008"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.617" endtime="20201029 09:34:24.009"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:24.011" endtime="20201029 09:34:24.030"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.009" endtime="20201029 09:34:24.031"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.040" endtime="20201029 09:34:24.069"></status>
</kw>
<msg timestamp="20201029 09:34:24.069" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:24.038" endtime="20201029 09:34:24.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.072" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:24.070" endtime="20201029 09:34:24.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.073" endtime="20201029 09:34:24.076"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.036" endtime="20201029 09:34:24.076"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.033" endtime="20201029 09:34:24.077"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.083" endtime="20201029 09:34:24.374"></status>
</kw>
<msg timestamp="20201029 09:34:24.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022549583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022653153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:24.082" endtime="20201029 09:34:24.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022549583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022653153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:24.384" endtime="20201029 09:34:24.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.402" endtime="20201029 09:34:24.406"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.079" endtime="20201029 09:34:24.407"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.077" endtime="20201029 09:34:24.408"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:24.416" level="INFO">${PHILIP_RES} = [{'diff': 0.00010356999999999728}, {'diff': 0.0001035420000000016}, {'diff': 0.00010349999999999943}, {'diff': 0.00010348599999999986}, {'diff': 0.00010359700000000041}, {'diff': 0.0001035420000000016...</msg>
<status status="PASS" starttime="20201029 09:34:24.409" endtime="20201029 09:34:24.417"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:24.426" level="INFO">${RESULT} = {'diff': [0.00010356999999999728, 0.0001035420000000016, 0.00010349999999999943, 0.00010348599999999986, 0.00010359700000000041, 0.0001035420000000016, 0.0001035559999999977, 0.00010349999999999943, 0...</msg>
<status status="PASS" starttime="20201029 09:34:24.419" endtime="20201029 09:34:24.426"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.435" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:24.433" endtime="20201029 09:34:24.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.441" level="INFO">VALUE: [0.00010356999999999728, 0.0001035420000000016, 0.00010349999999999943, 0.00010348599999999986, 0.00010359700000000041, 0.0001035420000000016, 0.0001035559999999977, 0.00010349999999999943, 0.00010362499999999955, 0.00010349999999999943, 0.00010365299999999869, 0.00010358300000000084, 0.00010357000000000074, 0.00010347200000000029, 0.00010358300000000084, 0.0001035420000000016, 0.00010363899999999912, 0.00010355600000000117, 0.00010348599999999986, 0.00010363899999999912, 0.00010354099999999866, 0.00010358299999999737, 0.00010355499999999823, 0.00010349999999999943, 0.00010352799999999857, 0.00010352699999999909, 0.00010362499999999955, 0.00010348599999999986, 0.00010359699999999694, 0.00010352799999999857, 0.00010354200000000507, 0.000103513999999999, 0.00010363799999999618, 0.00010352799999999857, 0.00010365299999999522, 0.00010359700000000388, 0.00010352799999999857, 0.000103513999999999, 0.00010357000000000421, 0.00010363900000000259, 0.00010352799999999857, 0.000103513999999999, 0.00010355499999999823, 0.00010358300000000431, 0.00010356900000000474, 0.0001035559999999977, 0.00010352799999999857, 0.000103513999999999, 0.00010354199999999814, 0.00010362500000000302]</msg>
<status status="PASS" starttime="20201029 09:34:24.438" endtime="20201029 09:34:24.443"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.428" endtime="20201029 09:34:24.444"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.032" endtime="20201029 09:34:24.445"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.009" endtime="20201029 09:34:24.446"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:24.451" endtime="20201029 09:34:24.471"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.448" endtime="20201029 09:34:24.472"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.481" endtime="20201029 09:34:24.510"></status>
</kw>
<msg timestamp="20201029 09:34:24.510" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:24.479" endtime="20201029 09:34:24.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.513" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:24.511" endtime="20201029 09:34:24.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.514" endtime="20201029 09:34:24.515"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.476" endtime="20201029 09:34:24.516"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.474" endtime="20201029 09:34:24.516"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.523" endtime="20201029 09:34:24.809"></status>
</kw>
<msg timestamp="20201029 09:34:24.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018903139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019017333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:24.522" endtime="20201029 09:34:24.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018903139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019017333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:24.813" endtime="20201029 09:34:24.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.821" endtime="20201029 09:34:24.823"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.519" endtime="20201029 09:34:24.824"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.517" endtime="20201029 09:34:24.824"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:24.828" level="INFO">${PHILIP_RES} = [{'diff': 0.00011419400000000149}, {'diff': 0.00011418099999999792}, {'diff': 0.00011426399999999934}, {'diff': 0.00011426399999999934}, {'diff': 0.00011426299999999986}, {'diff': 0.000114153000000002...</msg>
<status status="PASS" starttime="20201029 09:34:24.825" endtime="20201029 09:34:24.828"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:24.833" level="INFO">${RESULT} = {'diff': [0.00011419400000000149, 0.00011418099999999792, 0.00011426399999999934, 0.00011426399999999934, 0.00011426299999999986, 0.00011415300000000225, 0.00011416699999999835, 0.00011424999999999977...</msg>
<status status="PASS" starttime="20201029 09:34:24.829" endtime="20201029 09:34:24.834"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.838" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:24.837" endtime="20201029 09:34:24.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.840" level="INFO">VALUE: [0.00011419400000000149, 0.00011418099999999792, 0.00011426399999999934, 0.00011426399999999934, 0.00011426299999999986, 0.00011415300000000225, 0.00011416699999999835, 0.00011424999999999977, 0.00011425000000000324, 0.00011424999999999977, 0.00011417999999999845, 0.00011426399999999934, 0.00011415300000000225, 0.00011423700000000314, 0.00011413899999999921, 0.00011427800000000238, 0.00011429200000000195, 0.00011422200000000063, 0.00011416599999999888, 0.00011427800000000238, 0.00011416699999999835, 0.00011427699999999943, 0.0001142360000000002, 0.00011419399999999802, 0.00011419400000000149, 0.00011427799999999891, 0.00011416600000000235, 0.00011424999999999977, 0.00011413899999999921, 0.00011427799999999891, 0.00011415300000000225, 0.00011426399999999934, 0.00011413799999999974, 0.00011424999999999977, 0.00011420900000000053, 0.00011415299999999878, 0.00011415299999999878, 0.00011415199999999931, 0.00011412499999999964, 0.00011416599999999888, 0.00011413899999999921, 0.00011404099999999529, 0.00011420799999999759, 0.00011415299999999878, 0.00011416699999999835, 0.00011412499999999964, 0.00011415299999999878, 0.00011413899999999921, 0.00011413900000000615, 0.00011418099999999792]</msg>
<status status="PASS" starttime="20201029 09:34:24.839" endtime="20201029 09:34:24.841"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.834" endtime="20201029 09:34:24.841"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.473" endtime="20201029 09:34:24.842"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.447" endtime="20201029 09:34:24.842"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:24.845" endtime="20201029 09:34:24.864"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.843" endtime="20201029 09:34:24.865"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.873" endtime="20201029 09:34:24.902"></status>
</kw>
<msg timestamp="20201029 09:34:24.902" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:24.872" endtime="20201029 09:34:24.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.905" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:24.903" endtime="20201029 09:34:24.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.906" endtime="20201029 09:34:24.908"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.869" endtime="20201029 09:34:24.908"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.867" endtime="20201029 09:34:24.909"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.915" endtime="20201029 09:34:25.212"></status>
</kw>
<msg timestamp="20201029 09:34:25.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017767236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017892375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:24.914" endtime="20201029 09:34:25.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:25.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017767236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017892375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:25.221" endtime="20201029 09:34:25.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:25.238" endtime="20201029 09:34:25.244"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.911" endtime="20201029 09:34:25.246"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.909" endtime="20201029 09:34:25.247"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:25.256" level="INFO">${PHILIP_RES} = [{'diff': 0.0001251389999999998}, {'diff': 0.00012516699999999895}, {'diff': 0.00012502799999999925}, {'diff': 0.00012511100000000067}, {'diff': 0.000125084000000001}, {'diff': 0.0001250689999999985},...</msg>
<status status="PASS" starttime="20201029 09:34:25.249" endtime="20201029 09:34:25.256"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:25.265" level="INFO">${RESULT} = {'diff': [0.0001251389999999998, 0.00012516699999999895, 0.00012502799999999925, 0.00012511100000000067, 0.000125084000000001, 0.0001250689999999985, 0.00012511100000000067, 0.00012501399999999968, 0....</msg>
<status status="PASS" starttime="20201029 09:34:25.258" endtime="20201029 09:34:25.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:25.270" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:25.269" endtime="20201029 09:34:25.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:25.273" level="INFO">VALUE: [0.0001251389999999998, 0.00012516699999999895, 0.00012502799999999925, 0.00012511100000000067, 0.000125084000000001, 0.0001250689999999985, 0.00012511100000000067, 0.00012501399999999968, 0.00012502799999999925, 0.0001250559999999984, 0.0001250970000000011, 0.00012511100000000067, 0.00012515299999999938, 0.00012501399999999968, 0.00012502699999999978, 0.0001251519999999999, 0.00012515299999999938, 0.00012512500000000024, 0.00012505600000000186, 0.00012512500000000024, 0.00012518099999999852, 0.00012516599999999947, 0.00012506900000000196, 0.00012511100000000067, 0.00012518100000000199, 0.0001250979999999971, 0.00012506900000000196, 0.0001250970000000011, 0.00012506900000000196, 0.0001251389999999998, 0.00012512500000000024, 0.00012506900000000196, 0.00012508300000000153, 0.00012504099999999935, 0.0001250689999999985, 0.00012512500000000024, 0.0001251529999999959, 0.00012520800000000165, 0.0001251109999999972, 0.00012511199999999667, 0.00012504099999999935, 0.00012508299999999806, 0.0001250689999999985, 0.00012518099999999505, 0.00012512499999999677, 0.00012502799999999925, 0.0001251250000000037, 0.00012513899999999634, 0.00012504199999999882, 0.00012509699999999763]</msg>
<status status="PASS" starttime="20201029 09:34:25.271" endtime="20201029 09:34:25.273"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.266" endtime="20201029 09:34:25.274"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.865" endtime="20201029 09:34:25.275"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.843" endtime="20201029 09:34:25.275"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:25.277" endtime="20201029 09:34:25.296"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.276" endtime="20201029 09:34:25.297"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:25.305" endtime="20201029 09:34:25.335"></status>
</kw>
<msg timestamp="20201029 09:34:25.335" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:25.304" endtime="20201029 09:34:25.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:25.337" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:25.336" endtime="20201029 09:34:25.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:25.338" endtime="20201029 09:34:25.341"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.301" endtime="20201029 09:34:25.341"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.299" endtime="20201029 09:34:25.342"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:25.348" endtime="20201029 09:34:25.633"></status>
</kw>
<msg timestamp="20201029 09:34:25.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017536847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017673083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:25.347" endtime="20201029 09:34:25.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:25.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017536847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017673083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:25.637" endtime="20201029 09:34:25.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:25.645" endtime="20201029 09:34:25.646"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.344" endtime="20201029 09:34:25.647"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.343" endtime="20201029 09:34:25.647"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:25.651" level="INFO">${PHILIP_RES} = [{'diff': 0.00013623599999999791}, {'diff': 0.00013623600000000138}, {'diff': 0.00013609699999999822}, {'diff': 0.00013617999999999963}, {'diff': 0.00013619500000000215}, {'diff': 0.000136054999999999...</msg>
<status status="PASS" starttime="20201029 09:34:25.648" endtime="20201029 09:34:25.651"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:25.655" level="INFO">${RESULT} = {'diff': [0.00013623599999999791, 0.00013623600000000138, 0.00013609699999999822, 0.00013617999999999963, 0.00013619500000000215, 0.0001360549999999995, 0.00013619499999999868, 0.0001360840000000016, ...</msg>
<status status="PASS" starttime="20201029 09:34:25.652" endtime="20201029 09:34:25.655"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:25.659" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:25.658" endtime="20201029 09:34:25.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:25.662" level="INFO">VALUE: [0.00013623599999999791, 0.00013623600000000138, 0.00013609699999999822, 0.00013617999999999963, 0.00013619500000000215, 0.0001360549999999995, 0.00013619499999999868, 0.0001360840000000016, 0.00013626399999999705, 0.0001361520000000005, 0.00013622199999999834, 0.00013618100000000258, 0.00013615299999999997, 0.00013613800000000092, 0.00013616699999999954, 0.000136167000000003, 0.0001361809999999991, 0.00013617999999999963, 0.00013616699999999954, 0.00013622199999999834, 0.00013606900000000255, 0.0001361390000000004, 0.0001360970000000017, 0.00013619500000000215, 0.0001361809999999991, 0.00013619499999999868, 0.00013619500000000215, 0.00013609699999999822, 0.00013625000000000095, 0.00013616699999999954, 0.0001362780000000001, 0.00013630499999999976, 0.00013617999999999963, 0.00013616699999999954, 0.0001361809999999991, 0.00013627699999999715, 0.00013619500000000562, 0.00013616600000000006, 0.00013620799999999877, 0.00013616699999999954, 0.00013615299999999997, 0.00013616699999999954, 0.0001361939999999992, 0.00013617999999999963, 0.00013615299999999997, 0.0001361939999999992, 0.00013620799999999877, 0.00013615299999999997, 0.00013619499999999868, 0.00013616699999999954]</msg>
<status status="PASS" starttime="20201029 09:34:25.660" endtime="20201029 09:34:25.670"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.656" endtime="20201029 09:34:25.670"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.298" endtime="20201029 09:34:25.671"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.275" endtime="20201029 09:34:25.671"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:25.673" endtime="20201029 09:34:25.693"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.672" endtime="20201029 09:34:25.693"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:25.701" endtime="20201029 09:34:25.736"></status>
</kw>
<msg timestamp="20201029 09:34:25.736" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:25.700" endtime="20201029 09:34:25.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:25.739" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:25.737" endtime="20201029 09:34:25.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:25.740" endtime="20201029 09:34:25.741"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.697" endtime="20201029 09:34:25.742"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.695" endtime="20201029 09:34:25.743"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:25.749" endtime="20201029 09:34:26.050"></status>
</kw>
<msg timestamp="20201029 09:34:26.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018067708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018215292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:25.747" endtime="20201029 09:34:26.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018067708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018215292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:26.059" endtime="20201029 09:34:26.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.075" endtime="20201029 09:34:26.077"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.745" endtime="20201029 09:34:26.077"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.743" endtime="20201029 09:34:26.078"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:26.082" level="INFO">${PHILIP_RES} = [{'diff': 0.00014758400000000269}, {'diff': 0.00014768000000000073}, {'diff': 0.00014759700000000278}, {'diff': 0.0001475550000000006}, {'diff': 0.00014765300000000106}, {'diff': 0.0001476670000000006...</msg>
<status status="PASS" starttime="20201029 09:34:26.078" endtime="20201029 09:34:26.082"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:26.087" level="INFO">${RESULT} = {'diff': [0.00014758400000000269, 0.00014768000000000073, 0.00014759700000000278, 0.0001475550000000006, 0.00014765300000000106, 0.00014766700000000063, 0.00014758299999999974, 0.0001475969999999993, ...</msg>
<status status="PASS" starttime="20201029 09:34:26.083" endtime="20201029 09:34:26.087"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.091" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:26.090" endtime="20201029 09:34:26.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.093" level="INFO">VALUE: [0.00014758400000000269, 0.00014768000000000073, 0.00014759700000000278, 0.0001475550000000006, 0.00014765300000000106, 0.00014766700000000063, 0.00014758299999999974, 0.0001475969999999993, 0.00014758400000000269, 0.0001475550000000006, 0.0001475139999999979, 0.00014761200000000183, 0.0001475969999999993, 0.00014755600000000008, 0.0001475969999999993, 0.00014761099999999888, 0.0001475550000000006, 0.0001475550000000006, 0.00014754199999999704, 0.00014758299999999974, 0.0001475969999999993, 0.00014766700000000063, 0.00014748599999999876, 0.00014766700000000063, 0.00014759700000000278, 0.00014765300000000106, 0.00014756900000000017, 0.00014755600000000008, 0.00014758399999999922, 0.0001475420000000005, 0.00014762499999999845, 0.00014761099999999888, 0.00014756900000000017, 0.0001476529999999976, 0.00014775000000000205, 0.00014756999999999965, 0.00014758299999999974, 0.00014761100000000582, 0.0001475000000000018, 0.0001475550000000006, 0.0001475969999999993, 0.00014752700000000146, 0.00014752800000000094, 0.00014758299999999974, 0.00014756999999999965, 0.0001475420000000005, 0.0001475969999999993, 0.00014756900000000017, 0.0001475000000000018, 0.00014765200000000506]</msg>
<status status="PASS" starttime="20201029 09:34:26.092" endtime="20201029 09:34:26.094"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.087" endtime="20201029 09:34:26.095"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.694" endtime="20201029 09:34:26.095"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.671" endtime="20201029 09:34:26.095"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:26.098" endtime="20201029 09:34:26.117"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.096" endtime="20201029 09:34:26.118"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.126" endtime="20201029 09:34:26.163"></status>
</kw>
<msg timestamp="20201029 09:34:26.163" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:26.124" endtime="20201029 09:34:26.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.166" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:26.164" endtime="20201029 09:34:26.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.167" endtime="20201029 09:34:26.169"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.122" endtime="20201029 09:34:26.169"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.120" endtime="20201029 09:34:26.170"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.176" endtime="20201029 09:34:26.462"></status>
</kw>
<msg timestamp="20201029 09:34:26.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021011292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021170542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:26.174" endtime="20201029 09:34:26.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021011292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021170542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:26.466" endtime="20201029 09:34:26.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.474" endtime="20201029 09:34:26.477"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.172" endtime="20201029 09:34:26.477"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.170" endtime="20201029 09:34:26.478"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:26.482" level="INFO">${PHILIP_RES} = [{'diff': 0.00015924999999999967}, {'diff': 0.0001591940000000014}, {'diff': 0.0001592360000000001}, {'diff': 0.00015924999999999967}, {'diff': 0.0001591940000000014}, {'diff': 0.00015912499999999954}...</msg>
<status status="PASS" starttime="20201029 09:34:26.478" endtime="20201029 09:34:26.482"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:26.486" level="INFO">${RESULT} = {'diff': [0.00015924999999999967, 0.0001591940000000014, 0.0001592360000000001, 0.00015924999999999967, 0.0001591940000000014, 0.00015912499999999954, 0.00015924999999999967, 0.00015930499999999848, 0...</msg>
<status status="PASS" starttime="20201029 09:34:26.483" endtime="20201029 09:34:26.486"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.490" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:26.489" endtime="20201029 09:34:26.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.493" level="INFO">VALUE: [0.00015924999999999967, 0.0001591940000000014, 0.0001592360000000001, 0.00015924999999999967, 0.0001591940000000014, 0.00015912499999999954, 0.00015924999999999967, 0.00015930499999999848, 0.00015922199999999706, 0.00015919500000000086, 0.000159223, 0.0001591940000000014, 0.00015926399999999924, 0.00015907000000000074, 0.00015913899999999911, 0.00015920800000000096, 0.00015924999999999967, 0.00015923699999999957, 0.00015920800000000096, 0.00015923700000000304, 0.00015913899999999911, 0.00015920900000000043, 0.00015920800000000096, 0.00015917999999999488, 0.00015922200000000053, 0.00015916700000000172, 0.00015916700000000172, 0.00015924999999999967, 0.0001592219999999936, 0.0001592360000000001, 0.00015934699999999719, 0.00015913900000000258, 0.0001591810000000013, 0.00015922200000000053, 0.00015915299999999521, 0.000159223, 0.0001591810000000013, 0.00015913900000000258, 0.0001592360000000001, 0.000159223, 0.00015923699999999957, 0.00015924999999999967, 0.00015924999999999967, 0.00015922200000000053, 0.00015920800000000096, 0.00015915300000000215, 0.0001591659999999953, 0.0001592360000000001, 0.00015912499999999608, 0.00015912499999999608]</msg>
<status status="PASS" starttime="20201029 09:34:26.492" endtime="20201029 09:34:26.494"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.487" endtime="20201029 09:34:26.494"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.118" endtime="20201029 09:34:26.495"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.096" endtime="20201029 09:34:26.495"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:26.497" endtime="20201029 09:34:26.517"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.496" endtime="20201029 09:34:26.517"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.526" endtime="20201029 09:34:26.561"></status>
</kw>
<msg timestamp="20201029 09:34:26.561" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:26.524" endtime="20201029 09:34:26.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.564" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:26.562" endtime="20201029 09:34:26.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.565" endtime="20201029 09:34:26.567"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.521" endtime="20201029 09:34:26.568"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.519" endtime="20201029 09:34:26.568"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.575" endtime="20201029 09:34:26.861"></status>
</kw>
<msg timestamp="20201029 09:34:26.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018146125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018317319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:26.574" endtime="20201029 09:34:26.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018146125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018317319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:26.865" endtime="20201029 09:34:26.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.873" endtime="20201029 09:34:26.875"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.571" endtime="20201029 09:34:26.875"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.569" endtime="20201029 09:34:26.876"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:26.880" level="INFO">${PHILIP_RES} = [{'diff': 0.0001711939999999995}, {'diff': 0.00017118100000000289}, {'diff': 0.00017108300000000243}, {'diff': 0.00017108299999999896}, {'diff': 0.0001710840000000019}, {'diff': 0.0001709719999999984}...</msg>
<status status="PASS" starttime="20201029 09:34:26.877" endtime="20201029 09:34:26.880"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:26.884" level="INFO">${RESULT} = {'diff': [0.0001711939999999995, 0.00017118100000000289, 0.00017108300000000243, 0.00017108299999999896, 0.0001710840000000019, 0.0001709719999999984, 0.0001710559999999993, 0.0001711109999999981, 0.0...</msg>
<status status="PASS" starttime="20201029 09:34:26.881" endtime="20201029 09:34:26.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.888" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:26.887" endtime="20201029 09:34:26.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.891" level="INFO">VALUE: [0.0001711939999999995, 0.00017118100000000289, 0.00017108300000000243, 0.00017108299999999896, 0.0001710840000000019, 0.0001709719999999984, 0.0001710559999999993, 0.0001711109999999981, 0.00017112500000000114, 0.00017104199999999972, 0.0001710689999999994, 0.00017104199999999972, 0.00017104100000000025, 0.00017108299999999896, 0.0001710689999999994, 0.00017105499999999982, 0.0001711109999999981, 0.0001710559999999993, 0.0001711390000000007, 0.00017106900000000286, 0.0001710689999999994, 0.0001711390000000007, 0.00017104100000000025, 0.0001710689999999994, 0.00017112500000000114, 0.00017115300000000028, 0.0001710550000000033, 0.00017104199999999625, 0.00017111200000000104, 0.00017119400000000645, 0.00017107000000000233, 0.00017108300000000243, 0.00017105599999999582, 0.0001710829999999955, 0.00017105499999999635, 0.00017102700000000415, 0.00017122300000000507, 0.00017115300000000028, 0.00017113800000000123, 0.0001711939999999995, 0.0001710829999999955, 0.00017104199999999625, 0.00017105600000000276, 0.00017112500000000114, 0.0001710699999999954, 0.00017107000000000233, 0.00017104199999999625, 0.00017113899999999377, 0.00017127800000000387, 0.00017112500000000114]</msg>
<status status="PASS" starttime="20201029 09:34:26.889" endtime="20201029 09:34:26.892"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.885" endtime="20201029 09:34:26.893"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.518" endtime="20201029 09:34:26.893"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.495" endtime="20201029 09:34:26.893"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:26.896" endtime="20201029 09:34:26.915"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.894" endtime="20201029 09:34:26.916"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.924" endtime="20201029 09:34:26.966"></status>
</kw>
<msg timestamp="20201029 09:34:26.967" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:26.922" endtime="20201029 09:34:26.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.969" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:26.968" endtime="20201029 09:34:26.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.970" endtime="20201029 09:34:26.972"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.920" endtime="20201029 09:34:26.973"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.918" endtime="20201029 09:34:26.973"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.979" endtime="20201029 09:34:27.266"></status>
</kw>
<msg timestamp="20201029 09:34:27.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021684667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021867972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:26.978" endtime="20201029 09:34:27.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021684667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021867972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:27.269" endtime="20201029 09:34:27.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:27.277" endtime="20201029 09:34:27.279"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.975" endtime="20201029 09:34:27.280"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.974" endtime="20201029 09:34:27.280"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:27.284" level="INFO">${PHILIP_RES} = [{'diff': 0.0001833049999999982}, {'diff': 0.00018338899999999908}, {'diff': 0.00018326399999999896}, {'diff': 0.0001833330000000008}, {'diff': 0.00018331999999999724}, {'diff': 0.00018322200000000025...</msg>
<status status="PASS" starttime="20201029 09:34:27.281" endtime="20201029 09:34:27.284"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:27.291" level="INFO">${RESULT} = {'diff': [0.0001833049999999982, 0.00018338899999999908, 0.00018326399999999896, 0.0001833330000000008, 0.00018331999999999724, 0.00018322200000000025, 0.00018329099999999862, 0.00018331900000000123, ...</msg>
<status status="PASS" starttime="20201029 09:34:27.285" endtime="20201029 09:34:27.291"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.295" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:27.294" endtime="20201029 09:34:27.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.298" level="INFO">VALUE: [0.0001833049999999982, 0.00018338899999999908, 0.00018326399999999896, 0.0001833330000000008, 0.00018331999999999724, 0.00018322200000000025, 0.00018329099999999862, 0.00018331900000000123, 0.0001833749999999995, 0.00018340299999999865, 0.0001832919999999981, 0.0001832919999999981, 0.00018336099999999994, 0.00018329200000000156, 0.00018338899999999908, 0.00018326399999999896, 0.00018337500000000298, 0.000183278000000002, 0.00018330500000000166, 0.00018326400000000242, 0.00018324999999999592, 0.0001833200000000007, 0.0001833879999999996, 0.00018326399999999549, 0.00018322199999999678, 0.00018322199999999678, 0.0001833749999999995, 0.0001833330000000008, 0.0001833749999999995, 0.00018327799999999506, 0.0001833059999999942, 0.00018330600000000113, 0.00018341699999999822, 0.00018326399999999549, 0.0001833330000000008, 0.00018331900000000123, 0.0001832910000000021, 0.000183278000000002, 0.00018326399999999549, 0.0001832910000000021, 0.000183278000000002, 0.0001833200000000007, 0.0001832910000000021, 0.00018324999999999592, 0.000183278000000002, 0.00018338900000000602, 0.00018331999999999377, 0.00018327700000000252, 0.00018336200000000635, 0.00018326400000000242]</msg>
<status status="PASS" starttime="20201029 09:34:27.296" endtime="20201029 09:34:27.299"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.292" endtime="20201029 09:34:27.299"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.916" endtime="20201029 09:34:27.300"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.894" endtime="20201029 09:34:27.300"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:27.302" endtime="20201029 09:34:27.322"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.301" endtime="20201029 09:34:27.322"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:27.330" endtime="20201029 09:34:27.369"></status>
</kw>
<msg timestamp="20201029 09:34:27.369" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:27.329" endtime="20201029 09:34:27.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.372" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:27.370" endtime="20201029 09:34:27.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:27.373" endtime="20201029 09:34:27.375"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.326" endtime="20201029 09:34:27.375"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.324" endtime="20201029 09:34:27.375"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:27.382" endtime="20201029 09:34:27.682"></status>
</kw>
<msg timestamp="20201029 09:34:27.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017169306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017364986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:27.380" endtime="20201029 09:34:27.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017169306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017364986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:27.686" endtime="20201029 09:34:27.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:27.694" endtime="20201029 09:34:27.696"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.378" endtime="20201029 09:34:27.697"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.376" endtime="20201029 09:34:27.697"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:27.701" level="INFO">${PHILIP_RES} = [{'diff': 0.00019568000000000016}, {'diff': 0.00019563900000000092}, {'diff': 0.0001956530000000005}, {'diff': 0.00019561099999999831}, {'diff': 0.00019561100000000178}, {'diff': 0.0001956390000000009...</msg>
<status status="PASS" starttime="20201029 09:34:27.698" endtime="20201029 09:34:27.701"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:27.705" level="INFO">${RESULT} = {'diff': [0.00019568000000000016, 0.00019563900000000092, 0.0001956530000000005, 0.00019561099999999831, 0.00019561100000000178, 0.00019563900000000092, 0.00019566700000000006, 0.00019566700000000006,...</msg>
<status status="PASS" starttime="20201029 09:34:27.702" endtime="20201029 09:34:27.705"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.709" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:27.708" endtime="20201029 09:34:27.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.712" level="INFO">VALUE: [0.00019568000000000016, 0.00019563900000000092, 0.0001956530000000005, 0.00019561099999999831, 0.00019561100000000178, 0.00019563900000000092, 0.00019566700000000006, 0.00019566700000000006, 0.00019570899999999877, 0.00019568099999999963, 0.00019562500000000135, 0.00019565200000000102, 0.00019557000000000255, 0.00019572299999999834, 0.0001955559999999995, 0.0001955970000000022, 0.00019575000000000148, 0.0001956949999999992, 0.00019566700000000006, 0.00019563900000000092, 0.00019561099999999831, 0.0001956530000000005, 0.0001955689999999996, 0.00019556999999999908, 0.00019570900000000224, 0.0001955559999999995, 0.0001957920000000002, 0.00019563899999999745, 0.00019565300000000396, 0.00019556999999999908, 0.00019556999999999908, 0.0001955559999999995, 0.00019563899999999745, 0.00019565299999999702, 0.00019561099999999831, 0.00019554199999999994, 0.00019566599999999712, 0.00019562499999999788, 0.00019563799999999798, 0.00019559799999999822, 0.00019563899999999745, 0.00019555500000000003, 0.00019554199999999994, 0.00019568000000000363, 0.00019558399999999865, 0.0001956669999999966, 0.00019561099999999831, 0.0001956669999999966, 0.00019561099999999831, 0.00019558299999999917]</msg>
<status status="PASS" starttime="20201029 09:34:27.711" endtime="20201029 09:34:27.713"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.706" endtime="20201029 09:34:27.713"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.323" endtime="20201029 09:34:27.714"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.300" endtime="20201029 09:34:27.714"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:27.716" endtime="20201029 09:34:27.736"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.715" endtime="20201029 09:34:27.736"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:27.744" endtime="20201029 09:34:27.787"></status>
</kw>
<msg timestamp="20201029 09:34:27.787" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:27.743" endtime="20201029 09:34:27.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.789" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:27.788" endtime="20201029 09:34:27.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:27.791" endtime="20201029 09:34:27.793"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.740" endtime="20201029 09:34:27.794"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.738" endtime="20201029 09:34:27.794"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:27.800" endtime="20201029 09:34:28.085"></status>
</kw>
<msg timestamp="20201029 09:34:28.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020038389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020246778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:27.799" endtime="20201029 09:34:28.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:28.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020038389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020246778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:28.089" endtime="20201029 09:34:28.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:28.097" endtime="20201029 09:34:28.099"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.796" endtime="20201029 09:34:28.099"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.795" endtime="20201029 09:34:28.100"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:28.103" level="INFO">${PHILIP_RES} = [{'diff': 0.0002083889999999998}, {'diff': 0.00020834699999999762}, {'diff': 0.0002082919999999988}, {'diff': 0.0002082780000000027}, {'diff': 0.0002083470000000011}, {'diff': 0.00020834800000000056},...</msg>
<status status="PASS" starttime="20201029 09:34:28.100" endtime="20201029 09:34:28.104"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:28.108" level="INFO">${RESULT} = {'diff': [0.0002083889999999998, 0.00020834699999999762, 0.0002082919999999988, 0.0002082780000000027, 0.0002083470000000011, 0.00020834800000000056, 0.00020833300000000152, 0.00020829200000000228, 0....</msg>
<status status="PASS" starttime="20201029 09:34:28.104" endtime="20201029 09:34:28.108"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:28.112" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:28.111" endtime="20201029 09:34:28.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:28.114" level="INFO">VALUE: [0.0002083889999999998, 0.00020834699999999762, 0.0002082919999999988, 0.0002082780000000027, 0.0002083470000000011, 0.00020834800000000056, 0.00020833300000000152, 0.00020829200000000228, 0.00020837500000000023, 0.00020827799999999924, 0.00020837500000000023, 0.00020833399999999752, 0.0002083889999999998, 0.00020834800000000056, 0.00020848600000000078, 0.0002083889999999998, 0.00020847300000000069, 0.00020837500000000023, 0.00020833300000000152, 0.0002083049999999989, 0.0002083049999999989, 0.00020842999999999556, 0.00020844500000000155, 0.00020834800000000403, 0.00020834800000000403, 0.00020833300000000499, 0.00020834699999999762, 0.00020831900000000542, 0.00020833300000000499, 0.00020841699999999547, 0.00020841699999999547, 0.00020833299999999805, 0.00020845800000000164, 0.0002084300000000025, 0.00020831900000000542, 0.00020829200000000575, 0.0002082359999999936, 0.00020834699999999762, 0.0002082500000000001, 0.0002082500000000001, 0.0002082500000000001, 0.0002083200000000049, 0.0002082500000000001, 0.0002083049999999989, 0.0002082630000000002, 0.0002082630000000002, 0.0002082500000000001, 0.00020831899999999848, 0.0002082500000000001, 0.00020819400000000182]</msg>
<status status="PASS" starttime="20201029 09:34:28.113" endtime="20201029 09:34:28.116"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.108" endtime="20201029 09:34:28.116"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.737" endtime="20201029 09:34:28.117"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.714" endtime="20201029 09:34:28.117"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:28.119" endtime="20201029 09:34:28.139"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.118" endtime="20201029 09:34:28.139"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:28.147" endtime="20201029 09:34:28.192"></status>
</kw>
<msg timestamp="20201029 09:34:28.193" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:28.146" endtime="20201029 09:34:28.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:28.195" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:28.194" endtime="20201029 09:34:28.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:28.196" endtime="20201029 09:34:28.198"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.143" endtime="20201029 09:34:28.198"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.141" endtime="20201029 09:34:28.199"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:28.205" endtime="20201029 09:34:28.491"></status>
</kw>
<msg timestamp="20201029 09:34:28.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018790486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019011764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:28.204" endtime="20201029 09:34:28.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:28.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018790486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019011764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:28.495" endtime="20201029 09:34:28.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:28.503" endtime="20201029 09:34:28.505"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.201" endtime="20201029 09:34:28.505"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.199" endtime="20201029 09:34:28.506"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:28.509" level="INFO">${PHILIP_RES} = [{'diff': 0.00022127800000000183}, {'diff': 0.00022122200000000009}, {'diff': 0.00022115299999999824}, {'diff': 0.000221209}, {'diff': 0.0002212639999999988}, {'diff': 0.00022109799999999943}, {'diff'...</msg>
<status status="PASS" starttime="20201029 09:34:28.506" endtime="20201029 09:34:28.510"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:28.514" level="INFO">${RESULT} = {'diff': [0.00022127800000000183, 0.00022122200000000009, 0.00022115299999999824, 0.000221209, 0.0002212639999999988, 0.00022109799999999943, 0.00022123599999999966, 0.00022120800000000052, 0.00022122...</msg>
<status status="PASS" starttime="20201029 09:34:28.510" endtime="20201029 09:34:28.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:28.519" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:28.518" endtime="20201029 09:34:28.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:28.521" level="INFO">VALUE: [0.00022127800000000183, 0.00022122200000000009, 0.00022115299999999824, 0.000221209, 0.0002212639999999988, 0.00022109799999999943, 0.00022123599999999966, 0.00022120800000000052, 0.00022122200000000009, 0.0002211799999999979, 0.0002213050000000015, 0.00022119500000000042, 0.00022123699999999913, 0.00022122299999999956, 0.00022118100000000085, 0.00022123599999999966, 0.00022127799999999836, 0.00022122299999999956, 0.0002212500000000027, 0.00022132000000000054, 0.00022119500000000042, 0.00022122299999999956, 0.000221193999999994, 0.00022116599999999487, 0.00022119500000000042, 0.0002212639999999988, 0.00022124999999999923, 0.00022130500000000497, 0.00022123599999999966, 0.00022126299999999932, 0.0002211660000000018, 0.00022124999999999923, 0.00022122200000000009, 0.00022124999999999923, 0.00022124999999999923, 0.00022130499999999803, 0.00022118100000000085, 0.0002211389999999952, 0.00022123699999999913, 0.00022129199999999793, 0.0002211660000000018, 0.00022123599999999966, 0.00022116700000000128, 0.00022123599999999966, 0.00022124999999999923, 0.00022122200000000009, 0.00022127700000000583, 0.000221209, 0.00022119400000000095, 0.00022123599999999966]</msg>
<status status="PASS" starttime="20201029 09:34:28.520" endtime="20201029 09:34:28.522"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.515" endtime="20201029 09:34:28.523"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.140" endtime="20201029 09:34:28.523"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.117" endtime="20201029 09:34:28.523"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:28.526" endtime="20201029 09:34:28.545"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.524" endtime="20201029 09:34:28.546"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:28.554" endtime="20201029 09:34:28.604"></status>
</kw>
<msg timestamp="20201029 09:34:28.605" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:28.552" endtime="20201029 09:34:28.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:28.607" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:28.606" endtime="20201029 09:34:28.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:28.608" endtime="20201029 09:34:28.610"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.550" endtime="20201029 09:34:28.611"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.548" endtime="20201029 09:34:28.611"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:28.617" endtime="20201029 09:34:28.904"></status>
</kw>
<msg timestamp="20201029 09:34:28.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019444889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019679236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:28.616" endtime="20201029 09:34:28.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:28.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019444889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019679236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:28.907" endtime="20201029 09:34:28.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:28.915" endtime="20201029 09:34:28.918"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.613" endtime="20201029 09:34:28.918"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.612" endtime="20201029 09:34:28.919"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:28.923" level="INFO">${PHILIP_RES} = [{'diff': 0.00023434699999999933}, {'diff': 0.00023426399999999792}, {'diff': 0.00023422300000000215}, {'diff': 0.0002343609999999989}, {'diff': 0.00023422200000000268}, {'diff': 0.0002342219999999992...</msg>
<status status="PASS" starttime="20201029 09:34:28.920" endtime="20201029 09:34:28.923"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:28.927" level="INFO">${RESULT} = {'diff': [0.00023434699999999933, 0.00023426399999999792, 0.00023422300000000215, 0.0002343609999999989, 0.00023422200000000268, 0.0002342219999999992, 0.00023427699999999801, 0.00023423600000000225, ...</msg>
<status status="PASS" starttime="20201029 09:34:28.924" endtime="20201029 09:34:28.927"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:28.931" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:28.930" endtime="20201029 09:34:28.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:28.934" level="INFO">VALUE: [0.00023434699999999933, 0.00023426399999999792, 0.00023422300000000215, 0.0002343609999999989, 0.00023422200000000268, 0.0002342219999999992, 0.00023427699999999801, 0.00023423600000000225, 0.00023422200000000268, 0.00023425000000000182, 0.00023433299999999976, 0.00023423599999999878, 0.00023429200000000053, 0.0002341519999999979, 0.00023427800000000096, 0.00023430499999999715, 0.00023431999999999967, 0.00023424999999999835, 0.00023431899999999672, 0.0002343340000000027, 0.00023418099999999997, 0.00023434699999999586, 0.0002342219999999992, 0.00023416600000000093, 0.0002343890000000015, 0.00023429199999999706, 0.00023424999999999835, 0.00023419400000000007, 0.0002343470000000028, 0.00023431900000000366, 0.0002341670000000004, 0.00023429099999999758, 0.00023427699999999801, 0.00023420799999999964, 0.00023424999999999835, 0.00023429100000000452, 0.00023440300000000108, 0.00023427800000000443, 0.00023436100000000237, 0.00023433399999999577, 0.00023423599999999878, 0.0002342500000000053, 0.00023436100000000237, 0.000234374999999995, 0.00023429199999999706, 0.00023433300000000323, 0.00023433300000000323, 0.00023423600000000572, 0.0002343199999999962, 0.0002342779999999975]</msg>
<status status="PASS" starttime="20201029 09:34:28.933" endtime="20201029 09:34:28.935"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.928" endtime="20201029 09:34:28.935"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.546" endtime="20201029 09:34:28.936"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.524" endtime="20201029 09:34:28.936"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:28.938" endtime="20201029 09:34:28.957"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.937" endtime="20201029 09:34:28.958"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:28.966" endtime="20201029 09:34:29.012"></status>
</kw>
<msg timestamp="20201029 09:34:29.013" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:28.965" endtime="20201029 09:34:29.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:29.018" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:29.015" endtime="20201029 09:34:29.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:29.021" endtime="20201029 09:34:29.026"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.962" endtime="20201029 09:34:29.027"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.960" endtime="20201029 09:34:29.028"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:29.041" endtime="20201029 09:34:29.335"></status>
</kw>
<msg timestamp="20201029 09:34:29.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018997347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019245028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:29.038" endtime="20201029 09:34:29.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:29.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018997347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019245028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:29.339" endtime="20201029 09:34:29.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:29.346" endtime="20201029 09:34:29.348"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.033" endtime="20201029 09:34:29.349"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.029" endtime="20201029 09:34:29.349"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:29.353" level="INFO">${PHILIP_RES} = [{'diff': 0.0002476809999999996}, {'diff': 0.000247667}, {'diff': 0.0002476250000000013}, {'diff': 0.00024779200000000015}, {'diff': 0.0002476800000000001}, {'diff': 0.0002476939999999997}, {'diff': 0...</msg>
<status status="PASS" starttime="20201029 09:34:29.350" endtime="20201029 09:34:29.353"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:29.357" level="INFO">${RESULT} = {'diff': [0.0002476809999999996, 0.000247667, 0.0002476250000000013, 0.00024779200000000015, 0.0002476800000000001, 0.0002476939999999997, 0.00024779200000000015, 0.0002476809999999996, 0.000247596999...</msg>
<status status="PASS" starttime="20201029 09:34:29.354" endtime="20201029 09:34:29.357"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:29.361" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:29.360" endtime="20201029 09:34:29.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:29.364" level="INFO">VALUE: [0.0002476809999999996, 0.000247667, 0.0002476250000000013, 0.00024779200000000015, 0.0002476800000000001, 0.0002476939999999997, 0.00024779200000000015, 0.0002476809999999996, 0.0002475969999999987, 0.00024765300000000046, 0.0002475839999999986, 0.0002476250000000013, 0.0002476800000000001, 0.0002476390000000009, 0.000247764000000001, 0.00024756899999999957, 0.0002476109999999983, 0.0002476670000000035, 0.00024770799999999926, 0.00024761100000000175, 0.00024765300000000046, 0.00024774999999999797, 0.00024765300000000046, 0.00024770799999999926, 0.00024761100000000175, 0.0002475970000000022, 0.0002477370000000048, 0.0002476250000000013, 0.0002476939999999997, 0.0002477359999999984, 0.0002476939999999997, 0.0002476800000000001, 0.000247652000000001, 0.0002476250000000013, 0.00024755600000000294, 0.0002476249999999944, 0.000247652000000001, 0.0002475970000000022, 0.000247652000000001, 0.0002475970000000022, 0.00024766600000000055, 0.00024766600000000055, 0.000247667, 0.0002476390000000009, 0.00024765300000000046, 0.0002476250000000013, 0.00024759699999999524, 0.0002476809999999996, 0.00024765300000000046, 0.00024765300000000046]</msg>
<status status="PASS" starttime="20201029 09:34:29.362" endtime="20201029 09:34:29.365"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.358" endtime="20201029 09:34:29.366"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.959" endtime="20201029 09:34:29.366"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.936" endtime="20201029 09:34:29.366"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:29.369" endtime="20201029 09:34:29.388"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.367" endtime="20201029 09:34:29.389"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:29.397" endtime="20201029 09:34:29.449"></status>
</kw>
<msg timestamp="20201029 09:34:29.449" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:29.395" endtime="20201029 09:34:29.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:29.451" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:29.450" endtime="20201029 09:34:29.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:29.453" endtime="20201029 09:34:29.454"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.393" endtime="20201029 09:34:29.455"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.391" endtime="20201029 09:34:29.455"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:29.461" endtime="20201029 09:34:29.747"></status>
</kw>
<msg timestamp="20201029 09:34:29.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020354653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020616111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:29.460" endtime="20201029 09:34:29.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:29.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020354653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020616111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:29.751" endtime="20201029 09:34:29.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:29.759" endtime="20201029 09:34:29.760"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.457" endtime="20201029 09:34:29.761"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.456" endtime="20201029 09:34:29.761"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:29.765" level="INFO">${PHILIP_RES} = [{'diff': 0.00026145799999999914}, {'diff': 0.0002613749999999977}, {'diff': 0.0002614719999999987}, {'diff': 0.0002613750000000012}, {'diff': 0.0002614719999999987}, {'diff': 0.00026138900000000076},...</msg>
<status status="PASS" starttime="20201029 09:34:29.762" endtime="20201029 09:34:29.765"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:29.770" level="INFO">${RESULT} = {'diff': [0.00026145799999999914, 0.0002613749999999977, 0.0002614719999999987, 0.0002613750000000012, 0.0002614719999999987, 0.00026138900000000076, 0.0002614169999999999, 0.0002613889999999973, 0.00...</msg>
<status status="PASS" starttime="20201029 09:34:29.766" endtime="20201029 09:34:29.770"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:29.775" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:29.773" endtime="20201029 09:34:29.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:29.777" level="INFO">VALUE: [0.00026145799999999914, 0.0002613749999999977, 0.0002614719999999987, 0.0002613750000000012, 0.0002614719999999987, 0.00026138900000000076, 0.0002614169999999999, 0.0002613889999999973, 0.0002613610000000016, 0.0002614169999999999, 0.00026134700000000205, 0.0002614160000000004, 0.0002612780000000002, 0.000261332999999999, 0.00026154199999999656, 0.00026143, 0.00026138900000000076, 0.0002614169999999999, 0.0002613610000000016, 0.0002614169999999999, 0.00026144399999999957, 0.0002614169999999999, 0.00026147200000000564, 0.00026149999999999785, 0.0002614169999999999, 0.0002613750000000012, 0.0002612629999999977, 0.000261235999999998, 0.0002613060000000028, 0.0002612640000000041, 0.00026126399999999717, 0.00026131999999999544, 0.00026122199999999846, 0.0002612499999999976, 0.00026112500000000094, 0.0002612499999999976, 0.00026133400000000195, 0.00026127799999999674, 0.00026117999999999975, 0.0002612220000000054, 0.00026117999999999975, 0.00026116699999999965, 0.00026116699999999965, 0.0002613060000000028, 0.0002613060000000028, 0.00026133299999999554, 0.0002612499999999976, 0.0002613049999999964, 0.000261235999999998, 0.00026129200000000324]</msg>
<status status="PASS" starttime="20201029 09:34:29.776" endtime="20201029 09:34:29.778"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.771" endtime="20201029 09:34:29.778"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.389" endtime="20201029 09:34:29.779"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.367" endtime="20201029 09:34:29.779"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:29.781" endtime="20201029 09:34:29.801"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.780" endtime="20201029 09:34:29.801"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:29.810" endtime="20201029 09:34:29.863"></status>
</kw>
<msg timestamp="20201029 09:34:29.864" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:29.808" endtime="20201029 09:34:29.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:29.869" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:29.866" endtime="20201029 09:34:29.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:29.871" endtime="20201029 09:34:29.875"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.805" endtime="20201029 09:34:29.876"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.803" endtime="20201029 09:34:29.877"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:29.890" endtime="20201029 09:34:30.180"></status>
</kw>
<msg timestamp="20201029 09:34:30.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019669931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019945333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:29.887" endtime="20201029 09:34:30.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:30.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019669931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019945333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:30.184" endtime="20201029 09:34:30.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:30.192" endtime="20201029 09:34:30.195"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.882" endtime="20201029 09:34:30.195"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.878" endtime="20201029 09:34:30.196"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:30.199" level="INFO">${PHILIP_RES} = [{'diff': 0.0002754019999999975}, {'diff': 0.00027537499999999784}, {'diff': 0.00027533299999999913}, {'diff': 0.0002752360000000016}, {'diff': 0.00027513900000000063}, {'diff': 0.0002752919999999999}...</msg>
<status status="PASS" starttime="20201029 09:34:30.196" endtime="20201029 09:34:30.200"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:30.204" level="INFO">${RESULT} = {'diff': [0.0002754019999999975, 0.00027537499999999784, 0.00027533299999999913, 0.0002752360000000016, 0.00027513900000000063, 0.0002752919999999999, 0.0002752219999999986, 0.0002752360000000016, 0.0...</msg>
<status status="PASS" starttime="20201029 09:34:30.200" endtime="20201029 09:34:30.204"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:30.208" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:30.207" endtime="20201029 09:34:30.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:30.210" level="INFO">VALUE: [0.0002754019999999975, 0.00027537499999999784, 0.00027533299999999913, 0.0002752360000000016, 0.00027513900000000063, 0.0002752919999999999, 0.0002752219999999986, 0.0002752360000000016, 0.0002751940000000029, 0.00027517999999999987, 0.0002752919999999999, 0.00027527800000000033, 0.0002752639999999973, 0.0002752360000000016, 0.0002751810000000028, 0.0002753750000000013, 0.0002753200000000025, 0.0002753750000000013, 0.0002754309999999996, 0.0002752780000000038, 0.0002753200000000025, 0.0002751949999999989, 0.00027533299999999566, 0.00027526400000000423, 0.00027529200000000337, 0.0002753750000000013, 0.00027523599999999815, 0.0002753340000000021, 0.0002753890000000009, 0.00027529199999999643, 0.0002753470000000022, 0.00027529200000000337, 0.00027530600000000294, 0.0002753200000000025, 0.00027522299999999805, 0.0002752499999999977, 0.0002753340000000021, 0.0002752639999999973, 0.0002753340000000021, 0.0002752499999999977, 0.0002752499999999977, 0.00027531999999999557, 0.000275402000000001, 0.00027530600000000294, 0.0002752780000000038, 0.00027519399999999944, 0.00027533299999999566, 0.00027530500000000346, 0.00027529200000000337, 0.0002751249999999941]</msg>
<status status="PASS" starttime="20201029 09:34:30.209" endtime="20201029 09:34:30.211"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.204" endtime="20201029 09:34:30.212"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.802" endtime="20201029 09:34:30.212"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.779" endtime="20201029 09:34:30.212"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:30.215" endtime="20201029 09:34:30.234"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.213" endtime="20201029 09:34:30.235"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:30.243" endtime="20201029 09:34:30.292"></status>
</kw>
<msg timestamp="20201029 09:34:30.293" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:30.241" endtime="20201029 09:34:30.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:30.295" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:30.294" endtime="20201029 09:34:30.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:30.296" endtime="20201029 09:34:30.299"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.239" endtime="20201029 09:34:30.299"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.237" endtime="20201029 09:34:30.300"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:30.306" endtime="20201029 09:34:30.591"></status>
</kw>
<msg timestamp="20201029 09:34:30.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018502139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018791681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:30.305" endtime="20201029 09:34:30.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:30.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018502139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018791681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:30.595" endtime="20201029 09:34:30.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:30.603" endtime="20201029 09:34:30.605"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.302" endtime="20201029 09:34:30.605"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.300" endtime="20201029 09:34:30.606"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:30.610" level="INFO">${PHILIP_RES} = [{'diff': 0.00028954200000000027}, {'diff': 0.000289486000000002}, {'diff': 0.0002894309999999997}, {'diff': 0.0002895700000000029}, {'diff': 0.00028944500000000276}, {'diff': 0.0002894030000000006}, ...</msg>
<status status="PASS" starttime="20201029 09:34:30.607" endtime="20201029 09:34:30.610"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:30.614" level="INFO">${RESULT} = {'diff': [0.00028954200000000027, 0.000289486000000002, 0.0002894309999999997, 0.0002895700000000029, 0.00028944500000000276, 0.0002894030000000006, 0.00028954200000000027, 0.000289389000000001, 0.000...</msg>
<status status="PASS" starttime="20201029 09:34:30.611" endtime="20201029 09:34:30.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:30.618" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:30.617" endtime="20201029 09:34:30.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:30.620" level="INFO">VALUE: [0.00028954200000000027, 0.000289486000000002, 0.0002894309999999997, 0.0002895700000000029, 0.00028944500000000276, 0.0002894030000000006, 0.00028954200000000027, 0.000289389000000001, 0.00028938899999999754, 0.0002893050000000001, 0.00028938899999999754, 0.00028931999999999916, 0.0002894439999999998, 0.0002894449999999993, 0.00028937500000000144, 0.00028924999999999784, 0.00028937500000000144, 0.00028931900000000316, 0.0002894020000000011, 0.0002892639999999974, 0.00028924999999999784, 0.0002893330000000027, 0.0002893330000000027, 0.00028930600000000306, 0.0002892500000000048, 0.00028926400000000435, 0.0002894309999999997, 0.00028934800000000177, 0.00028936100000000187, 0.0002893330000000027, 0.0002893470000000023, 0.00028936099999999493, 0.0002893330000000027, 0.0002892920000000035, 0.0002892780000000039, 0.00028933399999999526, 0.0002893199999999957, 0.0002892920000000035, 0.00028930499999999665, 0.00028931900000000316, 0.00028936099999999493, 0.00028924999999999784, 0.0002893330000000027, 0.0002893330000000027, 0.00028932000000000263, 0.00028943000000000024, 0.0002893330000000027, 0.0002893189999999962, 0.00028943000000000024, 0.00028941700000000015]</msg>
<status status="PASS" starttime="20201029 09:34:30.619" endtime="20201029 09:34:30.622"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.615" endtime="20201029 09:34:30.623"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.235" endtime="20201029 09:34:30.624"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.213" endtime="20201029 09:34:30.624"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:30.629" endtime="20201029 09:34:30.651"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.626" endtime="20201029 09:34:30.652"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:30.669" endtime="20201029 09:34:30.725"></status>
</kw>
<msg timestamp="20201029 09:34:30.726" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:30.666" endtime="20201029 09:34:30.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:30.731" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:30.729" endtime="20201029 09:34:30.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:30.734" endtime="20201029 09:34:30.737"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.660" endtime="20201029 09:34:30.738"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.656" endtime="20201029 09:34:30.739"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:30.753" endtime="20201029 09:34:31.045"></status>
</kw>
<msg timestamp="20201029 09:34:31.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030114125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030417792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:30.749" endtime="20201029 09:34:31.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:31.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030114125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030417792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:31.049" endtime="20201029 09:34:31.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:31.056" endtime="20201029 09:34:31.058"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.744" endtime="20201029 09:34:31.058"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.740" endtime="20201029 09:34:31.059"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:31.063" level="INFO">${PHILIP_RES} = [{'diff': 0.0003036670000000005}, {'diff': 0.0003035830000000031}, {'diff': 0.00030382000000000325}, {'diff': 0.0003036390000000014}, {'diff': 0.0003037219999999993}, {'diff': 0.00030374999999999847},...</msg>
<status status="PASS" starttime="20201029 09:34:31.060" endtime="20201029 09:34:31.063"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:31.070" level="INFO">${RESULT} = {'diff': [0.0003036670000000005, 0.0003035830000000031, 0.00030382000000000325, 0.0003036390000000014, 0.0003037219999999993, 0.00030374999999999847, 0.0003036390000000014, 0.0003036810000000001, 0.00...</msg>
<status status="PASS" starttime="20201029 09:34:31.064" endtime="20201029 09:34:31.070"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:31.074" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:31.073" endtime="20201029 09:34:31.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:31.077" level="INFO">VALUE: [0.0003036670000000005, 0.0003035830000000031, 0.00030382000000000325, 0.0003036390000000014, 0.0003037219999999993, 0.00030374999999999847, 0.0003036390000000014, 0.0003036810000000001, 0.0003035830000000031, 0.0003037219999999993, 0.00030376399999999804, 0.00030366600000000105, 0.00030359700000000267, 0.0003036390000000014, 0.0003036390000000014, 0.00030366600000000105, 0.0003036250000000018, 0.0003036390000000014, 0.0003036390000000014, 0.00030361100000000224, 0.00030365300000000095, 0.00030376399999999804, 0.0003037229999999988, 0.0003037219999999993, 0.00030370799999999976, 0.00030369499999999966, 0.0003036800000000006, 0.0003036670000000005, 0.0003036390000000014, 0.0003036670000000005, 0.0003036670000000005, 0.00030359800000000214, 0.00030370799999999976, 0.0003035840000000026, 0.0003035689999999966, 0.00030359700000000267, 0.000303764000000005, 0.00030376399999999804, 0.00030384700000000986, 0.00030363899999999444, 0.0003037640000000119, 0.0003038610000000025, 0.00030383300000000335, 0.00030390299999999426, 0.00030380499999999033, 0.0003038749999999951, 0.00030366700000000746, 0.0003038610000000025, 0.000303846999999996, 0.0003038190000000107]</msg>
<status status="PASS" starttime="20201029 09:34:31.075" endtime="20201029 09:34:31.082"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.071" endtime="20201029 09:34:31.083"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.653" endtime="20201029 09:34:31.083"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.625" endtime="20201029 09:34:31.084"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:31.086" endtime="20201029 09:34:31.105"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.085" endtime="20201029 09:34:31.106"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:31.114" endtime="20201029 09:34:31.172"></status>
</kw>
<msg timestamp="20201029 09:34:31.172" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:31.113" endtime="20201029 09:34:31.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:31.175" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:31.173" endtime="20201029 09:34:31.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:31.176" endtime="20201029 09:34:31.177"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.110" endtime="20201029 09:34:31.178"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.108" endtime="20201029 09:34:31.179"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:31.185" endtime="20201029 09:34:31.470"></status>
</kw>
<msg timestamp="20201029 09:34:31.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021329222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021647542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:31.184" endtime="20201029 09:34:31.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:31.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021329222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021647542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:31.474" endtime="20201029 09:34:31.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:31.482" endtime="20201029 09:34:31.485"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.181" endtime="20201029 09:34:31.485"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.179" endtime="20201029 09:34:31.486"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:31.490" level="INFO">${PHILIP_RES} = [{'diff': 0.0003183200000000004}, {'diff': 0.0003183889999999988}, {'diff': 0.0003183880000000028}, {'diff': 0.00031848599999999977}, {'diff': 0.0003183200000000004}, {'diff': 0.00031831900000000093},...</msg>
<status status="PASS" starttime="20201029 09:34:31.487" endtime="20201029 09:34:31.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:31.494" level="INFO">${RESULT} = {'diff': [0.0003183200000000004, 0.0003183889999999988, 0.0003183880000000028, 0.00031848599999999977, 0.0003183200000000004, 0.00031831900000000093, 0.00031830600000000084, 0.00031838900000000225, 0....</msg>
<status status="PASS" starttime="20201029 09:34:31.491" endtime="20201029 09:34:31.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:31.498" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:31.497" endtime="20201029 09:34:31.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:31.500" level="INFO">VALUE: [0.0003183200000000004, 0.0003183889999999988, 0.0003183880000000028, 0.00031848599999999977, 0.0003183200000000004, 0.00031831900000000093, 0.00031830600000000084, 0.00031838900000000225, 0.0003183880000000028, 0.00031836099999999964, 0.0003183200000000004, 0.0003183470000000001, 0.0003182359999999995, 0.00031826399999999866, 0.00031827800000000517, 0.0003184300000000015, 0.0003184170000000014, 0.00031834700000000354, 0.0003182359999999995, 0.0003184170000000014, 0.0003183469999999966, 0.00031837499999999574, 0.0003183750000000027, 0.00031848599999999977, 0.0003183339999999965, 0.0003184170000000014, 0.00031827800000000517, 0.0003184170000000014, 0.0003183750000000027, 0.00031833400000000345, 0.0003184030000000018, 0.0003183750000000027, 0.0003183750000000027, 0.00031831899999999747, 0.0003183889999999953, 0.00031833299999999704, 0.00031834700000000354, 0.00031829200000000474, 0.0003183750000000027, 0.00031844500000000053, 0.0003183200000000039, 0.0003183190000000044, 0.00031838900000000225, 0.00031834700000000354, 0.0003182640000000056, 0.00031833400000000345, 0.0003183479999999961, 0.00031827800000000517, 0.0003182080000000004, 0.0003184170000000014]</msg>
<status status="PASS" starttime="20201029 09:34:31.499" endtime="20201029 09:34:31.501"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.495" endtime="20201029 09:34:31.502"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.107" endtime="20201029 09:34:31.502"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.084" endtime="20201029 09:34:31.502"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:31.505" endtime="20201029 09:34:31.524"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.503" endtime="20201029 09:34:31.525"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:31.536" endtime="20201029 09:34:31.599"></status>
</kw>
<msg timestamp="20201029 09:34:31.600" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:31.533" endtime="20201029 09:34:31.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:31.606" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:31.603" endtime="20201029 09:34:31.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:31.608" endtime="20201029 09:34:31.613"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.529" endtime="20201029 09:34:31.614"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.527" endtime="20201029 09:34:31.615"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:31.628" endtime="20201029 09:34:31.930"></status>
</kw>
<msg timestamp="20201029 09:34:31.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02455975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024893, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 09:34:31.625" endtime="20201029 09:34:31.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:31.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02455975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024893, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 09:34:31.934" endtime="20201029 09:34:31.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:31.942" endtime="20201029 09:34:31.944"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.620" endtime="20201029 09:34:31.944"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.616" endtime="20201029 09:34:31.945"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:31.949" level="INFO">${PHILIP_RES} = [{'diff': 0.00033324999999999674}, {'diff': 0.00033315199999999975}, {'diff': 0.00033313899999999966}, {'diff': 0.0003331799999999989}, {'diff': 0.00033315299999999923}, {'diff': 0.0003330830000000014...</msg>
<status status="PASS" starttime="20201029 09:34:31.946" endtime="20201029 09:34:31.949"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:31.953" level="INFO">${RESULT} = {'diff': [0.00033324999999999674, 0.00033315199999999975, 0.00033313899999999966, 0.0003331799999999989, 0.00033315299999999923, 0.0003330830000000014, 0.0003332219999999976, 0.00033315299999999923, 0...</msg>
<status status="PASS" starttime="20201029 09:34:31.950" endtime="20201029 09:34:31.953"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:31.957" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:31.956" endtime="20201029 09:34:31.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:31.959" level="INFO">VALUE: [0.00033324999999999674, 0.00033315199999999975, 0.00033313899999999966, 0.0003331799999999989, 0.00033315299999999923, 0.0003330830000000014, 0.0003332219999999976, 0.00033315299999999923, 0.00033318100000000184, 0.00033322200000000107, 0.0003332370000000001, 0.0003331389999999962, 0.0003331249999999966, 0.0003331390000000031, 0.0003332639999999998, 0.0003332370000000001, 0.00033323600000000064, 0.0003332080000000015, 0.00033309799999999695, 0.00033323600000000064, 0.0003332370000000001, 0.0003333059999999985, 0.0003332500000000002, 0.00033311099999999705, 0.00033327799999999935, 0.0003331809999999949, 0.0003332080000000015, 0.0003332639999999998, 0.0003332500000000002, 0.0003331249999999966, 0.00033316700000000227, 0.00033323600000000064, 0.0003331519999999963, 0.00033312500000000356, 0.0003332500000000002, 0.0003331950000000014, 0.00033316700000000227, 0.0003332640000000067, 0.0003331249999999966, 0.0003331390000000031, 0.0003331950000000014, 0.0003333049999999921, 0.0003332080000000015, 0.0003332229999999936, 0.00033323600000000064, 0.0003332229999999936, 0.00033311099999999705, 0.0003331249999999897, 0.0003331380000000106, 0.0003332080000000015]</msg>
<status status="PASS" starttime="20201029 09:34:31.958" endtime="20201029 09:34:31.961"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.954" endtime="20201029 09:34:31.962"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.525" endtime="20201029 09:34:31.962"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.503" endtime="20201029 09:34:31.962"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:31.965" endtime="20201029 09:34:31.984"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.963" endtime="20201029 09:34:31.985"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:31.993" endtime="20201029 09:34:32.051"></status>
</kw>
<msg timestamp="20201029 09:34:32.051" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:31.991" endtime="20201029 09:34:32.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:32.054" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:32.052" endtime="20201029 09:34:32.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.055" endtime="20201029 09:34:32.057"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.988" endtime="20201029 09:34:32.057"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.987" endtime="20201029 09:34:32.057"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.064" endtime="20201029 09:34:32.350"></status>
</kw>
<msg timestamp="20201029 09:34:32.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016957861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017306417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:32.062" endtime="20201029 09:34:32.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:32.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016957861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017306417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:32.355" endtime="20201029 09:34:32.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.365" endtime="20201029 09:34:32.367"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.060" endtime="20201029 09:34:32.368"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.058" endtime="20201029 09:34:32.369"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:32.374" level="INFO">${PHILIP_RES} = [{'diff': 0.00034855599999999987}, {'diff': 0.0003484449999999993}, {'diff': 0.0003485280000000007}, {'diff': 0.0003484999999999981}, {'diff': 0.0003484579999999994}, {'diff': 0.0003485280000000007}, ...</msg>
<status status="PASS" starttime="20201029 09:34:32.370" endtime="20201029 09:34:32.374"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:32.380" level="INFO">${RESULT} = {'diff': [0.00034855599999999987, 0.0003484449999999993, 0.0003485280000000007, 0.0003484999999999981, 0.0003484579999999994, 0.0003485280000000007, 0.0003485420000000003, 0.00034859700000000257, 0.00...</msg>
<status status="PASS" starttime="20201029 09:34:32.375" endtime="20201029 09:34:32.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:32.386" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:32.385" endtime="20201029 09:34:32.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:32.390" level="INFO">VALUE: [0.00034855599999999987, 0.0003484449999999993, 0.0003485280000000007, 0.0003484999999999981, 0.0003484579999999994, 0.0003485280000000007, 0.0003485420000000003, 0.00034859700000000257, 0.000348471999999999, 0.0003485139999999977, 0.0003485550000000004, 0.0003483199999999992, 0.0003485410000000008, 0.00034845900000000235, 0.0003486390000000013, 0.00034847200000000245, 0.0003484580000000029, 0.0003485280000000007, 0.0003485420000000003, 0.00034851400000000116, 0.00034851400000000116, 0.000348486000000002, 0.0003485000000000016, 0.00034855599999999987, 0.00034849999999999465, 0.0003485130000000017, 0.0003485000000000016, 0.0003484859999999951, 0.0003484580000000029, 0.00034856899999999996, 0.0003485420000000003, 0.00034856899999999996, 0.0003484299999999968, 0.00034847200000000245, 0.00034847200000000245, 0.00034855599999999987, 0.00034856899999999996, 0.0003485420000000003, 0.0003485969999999991, 0.0003485139999999942, 0.00034849999999999465, 0.0003483609999999984, 0.00034855599999999987, 0.0003486529999999974, 0.0003485000000000016, 0.0003485280000000007, 0.0003484730000000019, 0.00034852700000000125, 0.00034841600000000417, 0.0003485550000000004]</msg>
<status status="PASS" starttime="20201029 09:34:32.388" endtime="20201029 09:34:32.391"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.382" endtime="20201029 09:34:32.392"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.985" endtime="20201029 09:34:32.393"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.963" endtime="20201029 09:34:32.393"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:32.397" endtime="20201029 09:34:32.417"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.395" endtime="20201029 09:34:32.418"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.429" endtime="20201029 09:34:32.494"></status>
</kw>
<msg timestamp="20201029 09:34:32.495" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:32.427" endtime="20201029 09:34:32.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:32.497" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:32.496" endtime="20201029 09:34:32.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.498" endtime="20201029 09:34:32.500"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.424" endtime="20201029 09:34:32.500"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.421" endtime="20201029 09:34:32.501"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.508" endtime="20201029 09:34:32.794"></status>
</kw>
<msg timestamp="20201029 09:34:32.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026275861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026639792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:32.506" endtime="20201029 09:34:32.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:32.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026275861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026639792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:32.798" endtime="20201029 09:34:32.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.806" endtime="20201029 09:34:32.808"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.504" endtime="20201029 09:34:32.809"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.502" endtime="20201029 09:34:32.809"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:32.813" level="INFO">${PHILIP_RES} = [{'diff': 0.0003639309999999979}, {'diff': 0.00036399999999999974}, {'diff': 0.00036393100000000136}, {'diff': 0.0003638470000000005}, {'diff': 0.00036386100000000005}, {'diff': 0.00036390299999999876...</msg>
<status status="PASS" starttime="20201029 09:34:32.810" endtime="20201029 09:34:32.813"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:32.817" level="INFO">${RESULT} = {'diff': [0.0003639309999999979, 0.00036399999999999974, 0.00036393100000000136, 0.0003638470000000005, 0.00036386100000000005, 0.00036390299999999876, 0.00036395799999999756, 0.000363943999999998, 0....</msg>
<status status="PASS" starttime="20201029 09:34:32.814" endtime="20201029 09:34:32.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:32.821" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:32.820" endtime="20201029 09:34:32.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:32.824" level="INFO">VALUE: [0.0003639309999999979, 0.00036399999999999974, 0.00036393100000000136, 0.0003638470000000005, 0.00036386100000000005, 0.00036390299999999876, 0.00036395799999999756, 0.000363943999999998, 0.000363959000000004, 0.0003640420000000019, 0.00036384799999999995, 0.00036390299999999876, 0.00036386100000000005, 0.0003638879999999997, 0.000363959000000004, 0.0003639729999999966, 0.00036380600000000124, 0.00036386100000000005, 0.000363749999999996, 0.0003638889999999992, 0.0003640000000000032, 0.0003638889999999992, 0.00036395799999999756, 0.0003638749999999996, 0.00036394499999999746, 0.00036391599999999885, 0.00036407000000000106, 0.0003639299999999984, 0.00036390299999999876, 0.0003639169999999983, 0.0003638330000000009, 0.0003640000000000032, 0.0003638889999999992, 0.00036394400000000493, 0.0003638749999999996, 0.0003637780000000021, 0.0003639859999999967, 0.000363861000000007, 0.0003639449999999905, 0.00036383299999999397, 0.0003636249999999924, 0.0003637360000000034, 0.0003637910000000022, 0.0003638340000000073, 0.00036369399999999774, 0.0003639169999999914, 0.0003637500000000099, 0.0003639450000000044, 0.00036377700000000956, 0.0003638470000000005]</msg>
<status status="PASS" starttime="20201029 09:34:32.823" endtime="20201029 09:34:32.825"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.818" endtime="20201029 09:34:32.825"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.419" endtime="20201029 09:34:32.826"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.394" endtime="20201029 09:34:32.826"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:32.828" endtime="20201029 09:34:32.848"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.827" endtime="20201029 09:34:32.848"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.856" endtime="20201029 09:34:32.915"></status>
</kw>
<msg timestamp="20201029 09:34:32.916" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:32.855" endtime="20201029 09:34:32.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:32.918" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:32.917" endtime="20201029 09:34:32.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.919" endtime="20201029 09:34:32.922"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.852" endtime="20201029 09:34:32.923"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.850" endtime="20201029 09:34:32.923"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.929" endtime="20201029 09:34:33.231"></status>
</kw>
<msg timestamp="20201029 09:34:33.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017440944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017820528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:32.928" endtime="20201029 09:34:33.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:33.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017440944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017820528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:33.240" endtime="20201029 09:34:33.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:33.253" endtime="20201029 09:34:33.255"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.925" endtime="20201029 09:34:33.255"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.924" endtime="20201029 09:34:33.256"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:33.259" level="INFO">${PHILIP_RES} = [{'diff': 0.0003795839999999988}, {'diff': 0.0003796110000000019}, {'diff': 0.00037947199999999875}, {'diff': 0.0003795969999999989}, {'diff': 0.00037956899999999974}, {'diff': 0.00037951400000000093}...</msg>
<status status="PASS" starttime="20201029 09:34:33.256" endtime="20201029 09:34:33.260"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:33.264" level="INFO">${RESULT} = {'diff': [0.0003795839999999988, 0.0003796110000000019, 0.00037947199999999875, 0.0003795969999999989, 0.00037956899999999974, 0.00037951400000000093, 0.0003794579999999992, 0.00037933299999999906, 0....</msg>
<status status="PASS" starttime="20201029 09:34:33.260" endtime="20201029 09:34:33.264"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:33.268" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:33.267" endtime="20201029 09:34:33.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:33.270" level="INFO">VALUE: [0.0003795839999999988, 0.0003796110000000019, 0.00037947199999999875, 0.0003795969999999989, 0.00037956899999999974, 0.00037951400000000093, 0.0003794579999999992, 0.00037933299999999906, 0.00037934699999999863, 0.0003794449999999991, 0.00037934699999999863, 0.0003793059999999994, 0.00037941699999999995, 0.0003794859999999983, 0.0003792909999999969, 0.00037941699999999995, 0.0003793470000000021, 0.00037934699999999516, 0.0003793749999999943, 0.0003793890000000008, 0.0003794160000000005, 0.000379318999999996, 0.00037934699999999516, 0.00037936100000000167, 0.0003794439999999996, 0.0003793059999999959, 0.00037931900000000296, 0.00037936099999999473, 0.0003793329999999956, 0.0003793059999999959, 0.00037933300000000253, 0.00037933300000000253, 0.0003793050000000034, 0.0003793199999999955, 0.00037937500000000124, 0.0003794439999999996, 0.00037924999999999764, 0.0003794449999999991, 0.00037936100000000167, 0.00037937500000000124, 0.000379610999999995, 0.00037952799999999703, 0.0003795980000000018, 0.00037963900000000106, 0.00037945899999999866, 0.0003794729999999913, 0.0003794869999999978, 0.00037944400000000655, 0.00037955500000000364, 0.0003796110000000019]</msg>
<status status="PASS" starttime="20201029 09:34:33.269" endtime="20201029 09:34:33.272"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.264" endtime="20201029 09:34:33.273"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.849" endtime="20201029 09:34:33.273"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.826" endtime="20201029 09:34:33.273"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:33.275" endtime="20201029 09:34:33.295"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.274" endtime="20201029 09:34:33.295"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:33.303" endtime="20201029 09:34:33.367"></status>
</kw>
<msg timestamp="20201029 09:34:33.367" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:33.302" endtime="20201029 09:34:33.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:33.370" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:33.368" endtime="20201029 09:34:33.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:33.371" endtime="20201029 09:34:33.372"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.299" endtime="20201029 09:34:33.373"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.297" endtime="20201029 09:34:33.373"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:33.380" endtime="20201029 09:34:33.665"></status>
</kw>
<msg timestamp="20201029 09:34:33.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017311875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017707278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:33.378" endtime="20201029 09:34:33.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:33.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017311875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017707278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:33.669" endtime="20201029 09:34:33.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:33.677" endtime="20201029 09:34:33.679"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.376" endtime="20201029 09:34:33.679"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.374" endtime="20201029 09:34:33.680"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:33.684" level="INFO">${PHILIP_RES} = [{'diff': 0.00039540299999999903}, {'diff': 0.00039534700000000075}, {'diff': 0.00039538900000000293}, {'diff': 0.0003953610000000003}, {'diff': 0.00039541599999999913}, {'diff': 0.0003954860000000004...</msg>
<status status="PASS" starttime="20201029 09:34:33.681" endtime="20201029 09:34:33.684"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:33.689" level="INFO">${RESULT} = {'diff': [0.00039540299999999903, 0.00039534700000000075, 0.00039538900000000293, 0.0003953610000000003, 0.00039541599999999913, 0.00039548600000000045, 0.00039545799999999784, 0.0003954720000000009, ...</msg>
<status status="PASS" starttime="20201029 09:34:33.685" endtime="20201029 09:34:33.689"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:33.693" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:33.692" endtime="20201029 09:34:33.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:33.696" level="INFO">VALUE: [0.00039540299999999903, 0.00039534700000000075, 0.00039538900000000293, 0.0003953610000000003, 0.00039541599999999913, 0.00039548600000000045, 0.00039545799999999784, 0.0003954720000000009, 0.0003953749999999999, 0.0003954030000000025, 0.0003953480000000002, 0.00039543100000000164, 0.0003954720000000009, 0.0003953060000000015, 0.00039541599999999566, 0.0003955, 0.0003952230000000001, 0.00039548600000000045, 0.00039536099999999685, 0.0003953340000000041, 0.00039526399999999934, 0.0003953469999999973, 0.00039530599999999805, 0.0003953199999999976, 0.00039544400000000174, 0.0003953329999999977, 0.00039559800000000395, 0.0003954580000000013, 0.0003953749999999964, 0.0003952779999999989, 0.00039540299999999556, 0.0003953610000000038, 0.0003952919999999985, 0.00039547199999999394, 0.00039544400000000174, 0.00039530599999999805, 0.00039548600000000045, 0.00039523699999999967, 0.00039538900000000293, 0.00039537500000000336, 0.000395290999999999, 0.0003953339999999972, 0.0003953199999999976, 0.0003952640000000063, 0.0003952640000000063, 0.00039540200000000303, 0.00039532000000000456, 0.0003952629999999929, 0.00039537500000000336, 0.0003952639999999924]</msg>
<status status="PASS" starttime="20201029 09:34:33.694" endtime="20201029 09:34:33.696"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.690" endtime="20201029 09:34:33.697"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.296" endtime="20201029 09:34:33.697"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.273" endtime="20201029 09:34:33.698"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:33.700" endtime="20201029 09:34:33.719"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.698" endtime="20201029 09:34:33.720"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:33.728" endtime="20201029 09:34:33.795"></status>
</kw>
<msg timestamp="20201029 09:34:33.795" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:33.726" endtime="20201029 09:34:33.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:33.798" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:33.796" endtime="20201029 09:34:33.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:33.799" endtime="20201029 09:34:33.800"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.724" endtime="20201029 09:34:33.801"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.722" endtime="20201029 09:34:33.801"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:33.808" endtime="20201029 09:34:34.112"></status>
</kw>
<msg timestamp="20201029 09:34:34.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019936333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020347667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:33.806" endtime="20201029 09:34:34.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019936333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020347667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:34.116" endtime="20201029 09:34:34.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.124" endtime="20201029 09:34:34.126"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.804" endtime="20201029 09:34:34.127"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.802" endtime="20201029 09:34:34.127"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:34.131" level="INFO">${PHILIP_RES} = [{'diff': 0.0004113339999999993}, {'diff': 0.0004112920000000006}, {'diff': 0.00041140300000000116}, {'diff': 0.00041133299999999984}, {'diff': 0.0004113890000000016}, {'diff': 0.0004114310000000003},...</msg>
<status status="PASS" starttime="20201029 09:34:34.128" endtime="20201029 09:34:34.131"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:34.135" level="INFO">${RESULT} = {'diff': [0.0004113339999999993, 0.0004112920000000006, 0.00041140300000000116, 0.00041133299999999984, 0.0004113890000000016, 0.0004114310000000003, 0.0004113339999999993, 0.00041131999999999974, 0.0...</msg>
<status status="PASS" starttime="20201029 09:34:34.132" endtime="20201029 09:34:34.136"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.140" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:34.139" endtime="20201029 09:34:34.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.142" level="INFO">VALUE: [0.0004113339999999993, 0.0004112920000000006, 0.00041140300000000116, 0.00041133299999999984, 0.0004113890000000016, 0.0004114310000000003, 0.0004113339999999993, 0.00041131999999999974, 0.00041133299999999984, 0.0004112219999999993, 0.000411360999999999, 0.00041130600000000017, 0.0004114439999999969, 0.00041131900000000027, 0.00041145800000000343, 0.00041131999999999974, 0.00041131999999999974, 0.00041131900000000027, 0.00041154200000000085, 0.0004112920000000006, 0.0004114309999999968, 0.00041131999999999974, 0.00041148600000000257, 0.000411360999999999, 0.00041127800000000103, 0.0004112500000000019, 0.000411360999999999, 0.00041137499999999855, 0.0004112080000000032, 0.00041120799999999624, 0.00041133299999999984, 0.00041127800000000103, 0.00041129100000000113, 0.00041127800000000103, 0.0004112219999999958, 0.0004112639999999945, 0.00041127800000000103, 0.00041127800000000103, 0.0004114029999999977, 0.0004114999999999952, 0.0004114440000000108, 0.00041130600000000017, 0.0004113190000000072, 0.0004114450000000103, 0.00041141699999999726, 0.0004113749999999916, 0.00041140200000000515, 0.0004113889999999981, 0.0004113749999999916, 0.00041148600000000257]</msg>
<status status="PASS" starttime="20201029 09:34:34.141" endtime="20201029 09:34:34.143"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.136" endtime="20201029 09:34:34.144"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.720" endtime="20201029 09:34:34.144"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.698" endtime="20201029 09:34:34.144"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:34.147" endtime="20201029 09:34:34.166"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.145" endtime="20201029 09:34:34.166"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.175" endtime="20201029 09:34:34.246"></status>
</kw>
<msg timestamp="20201029 09:34:34.246" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:34.173" endtime="20201029 09:34:34.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.249" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:34.247" endtime="20201029 09:34:34.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.250" endtime="20201029 09:34:34.252"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.171" endtime="20201029 09:34:34.253"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.168" endtime="20201029 09:34:34.253"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.260" endtime="20201029 09:34:34.546"></status>
</kw>
<msg timestamp="20201029 09:34:34.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020443111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020871014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:34.258" endtime="20201029 09:34:34.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020443111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020871014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:34.550" endtime="20201029 09:34:34.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.558" endtime="20201029 09:34:34.560"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.256" endtime="20201029 09:34:34.560"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.254" endtime="20201029 09:34:34.561"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:34.565" level="INFO">${PHILIP_RES} = [{'diff': 0.0004279030000000003}, {'diff': 0.00042780499999999985}, {'diff': 0.000427832999999999}, {'diff': 0.000427832999999999}, {'diff': 0.00042779199999999976}, {'diff': 0.00042772199999999844}, ...</msg>
<status status="PASS" starttime="20201029 09:34:34.561" endtime="20201029 09:34:34.565"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:34.569" level="INFO">${RESULT} = {'diff': [0.0004279030000000003, 0.00042780499999999985, 0.000427832999999999, 0.000427832999999999, 0.00042779199999999976, 0.00042772199999999844, 0.00042788900000000074, 0.00042783399999999847, 0.0...</msg>
<status status="PASS" starttime="20201029 09:34:34.566" endtime="20201029 09:34:34.569"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.573" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:34.572" endtime="20201029 09:34:34.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.575" level="INFO">VALUE: [0.0004279030000000003, 0.00042780499999999985, 0.000427832999999999, 0.000427832999999999, 0.00042779199999999976, 0.00042772199999999844, 0.00042788900000000074, 0.00042783399999999847, 0.0004277780000000002, 0.0004277360000000015, 0.00042786099999999466, 0.0004277499999999976, 0.00042779100000000375, 0.00042790299999999337, 0.0004278060000000028, 0.00042770799999999887, 0.00042777800000000366, 0.0004277080000000058, 0.00042783300000000246, 0.00042773600000000495, 0.0004277640000000041, 0.0004277919999999963, 0.00042772199999999844, 0.0004278480000000015, 0.00042787500000000117, 0.00042784700000000203, 0.00042766699999999963, 0.00042782000000000237, 0.0004275970000000018, 0.0004277640000000041, 0.00042772199999999844, 0.0004278060000000028, 0.00042772199999999844, 0.0004276939999999993, 0.00042776299999999767, 0.0004277220000000054, 0.000427735999999998, 0.0004277500000000045, 0.00042774999999999064, 0.00042788900000000074, 0.0004277919999999963, 0.00042788900000000074, 0.00042774999999999064, 0.0004278199999999954, 0.00042776399999999715, 0.0004278610000000016, 0.0004277910000000107, 0.00042783300000000246, 0.00042770899999999834, 0.00042783400000000193]</msg>
<status status="PASS" starttime="20201029 09:34:34.574" endtime="20201029 09:34:34.577"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.570" endtime="20201029 09:34:34.578"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.167" endtime="20201029 09:34:34.578"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.145" endtime="20201029 09:34:34.578"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:34.581" endtime="20201029 09:34:34.600"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.579" endtime="20201029 09:34:34.601"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.609" endtime="20201029 09:34:34.679"></status>
</kw>
<msg timestamp="20201029 09:34:34.680" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:34.607" endtime="20201029 09:34:34.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.682" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:34.681" endtime="20201029 09:34:34.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.683" endtime="20201029 09:34:34.685"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.605" endtime="20201029 09:34:34.686"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.603" endtime="20201029 09:34:34.686"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.693" endtime="20201029 09:34:34.995"></status>
</kw>
<msg timestamp="20201029 09:34:34.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018457097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018901472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:34.691" endtime="20201029 09:34:34.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:35.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018457097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018901472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:34.999" endtime="20201029 09:34:35.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:35.008" endtime="20201029 09:34:35.009"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.688" endtime="20201029 09:34:35.010"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.687" endtime="20201029 09:34:35.010"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:35.014" level="INFO">${PHILIP_RES} = [{'diff': 0.0004443750000000003}, {'diff': 0.0004443470000000012}, {'diff': 0.0004443880000000004}, {'diff': 0.00044450000000000045}, {'diff': 0.00044436200000000023}, {'diff': 0.000444304999999999}, ...</msg>
<status status="PASS" starttime="20201029 09:34:35.011" endtime="20201029 09:34:35.014"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:35.021" level="INFO">${RESULT} = {'diff': [0.0004443750000000003, 0.0004443470000000012, 0.0004443880000000004, 0.00044450000000000045, 0.00044436200000000023, 0.000444304999999999, 0.0004443889999999999, 0.000444514, 0.000444514, 0....</msg>
<status status="PASS" starttime="20201029 09:34:35.015" endtime="20201029 09:34:35.021"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:35.026" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:35.025" endtime="20201029 09:34:35.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:35.028" level="INFO">VALUE: [0.0004443750000000003, 0.0004443470000000012, 0.0004443880000000004, 0.00044450000000000045, 0.00044436200000000023, 0.000444304999999999, 0.0004443889999999999, 0.000444514, 0.000444514, 0.00044447199999999784, 0.00044463900000000015, 0.00044440300000000293, 0.00044454199999999916, 0.0004443609999999973, 0.00044445800000000174, 0.000444514, 0.00044444500000000164, 0.0004445420000000061, 0.0004444449999999947, 0.0004445279999999996, 0.0004443609999999973, 0.00044445800000000174, 0.0004445279999999996, 0.00044447199999999437, 0.00044438900000000336, 0.00044447199999999437, 0.00044444399999999523, 0.0004445829999999984, 0.00044444500000000164, 0.0004444590000000012, 0.0004444860000000009, 0.0004445279999999996, 0.0004445279999999996, 0.00044457000000000524, 0.00044448599999999394, 0.0004444310000000021, 0.000444514, 0.00044457000000000524, 0.00044450000000000045, 0.00044451400000000696, 0.00044443099999999514, 0.00044450000000000045, 0.00044437499999999686, 0.0004444579999999948, 0.00044444400000000217, 0.00044448599999999394, 0.00044451400000000696, 0.000444402999999996, 0.00044436099999999035, 0.0004445130000000075]</msg>
<status status="PASS" starttime="20201029 09:34:35.027" endtime="20201029 09:34:35.029"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.022" endtime="20201029 09:34:35.029"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.601" endtime="20201029 09:34:35.030"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.579" endtime="20201029 09:34:35.030"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:35.032" endtime="20201029 09:34:35.052"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.031" endtime="20201029 09:34:35.052"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:35.060" endtime="20201029 09:34:35.131"></status>
</kw>
<msg timestamp="20201029 09:34:35.132" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:35.059" endtime="20201029 09:34:35.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:35.134" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:35.133" endtime="20201029 09:34:35.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:35.135" endtime="20201029 09:34:35.137"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.056" endtime="20201029 09:34:35.138"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.055" endtime="20201029 09:34:35.138"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:35.145" endtime="20201029 09:34:35.432"></status>
</kw>
<msg timestamp="20201029 09:34:35.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018770153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019231431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:35.143" endtime="20201029 09:34:35.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:35.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018770153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019231431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:35.436" endtime="20201029 09:34:35.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:35.445" endtime="20201029 09:34:35.446"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.141" endtime="20201029 09:34:35.447"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.139" endtime="20201029 09:34:35.447"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:35.451" level="INFO">${PHILIP_RES} = [{'diff': 0.000461277999999999}, {'diff': 0.00046130500000000213}, {'diff': 0.0004610970000000006}, {'diff': 0.0004614169999999987}, {'diff': 0.000461277999999999}, {'diff': 0.00046124999999999985}, {...</msg>
<status status="PASS" starttime="20201029 09:34:35.448" endtime="20201029 09:34:35.451"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:35.455" level="INFO">${RESULT} = {'diff': [0.000461277999999999, 0.00046130500000000213, 0.0004610970000000006, 0.0004614169999999987, 0.000461277999999999, 0.00046124999999999985, 0.0004610840000000005, 0.0004612090000000006, 0.0004...</msg>
<status status="PASS" starttime="20201029 09:34:35.452" endtime="20201029 09:34:35.456"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:35.460" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:35.459" endtime="20201029 09:34:35.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:35.462" level="INFO">VALUE: [0.000461277999999999, 0.00046130500000000213, 0.0004610970000000006, 0.0004614169999999987, 0.000461277999999999, 0.00046124999999999985, 0.0004610840000000005, 0.0004612090000000006, 0.00046112499999999973, 0.00046115300000000234, 0.0004612499999999964, 0.0004610420000000018, 0.0004610840000000005, 0.00046115299999999887, 0.00046106900000000145, 0.00046106900000000145, 0.0004610840000000005, 0.00046116599999999897, 0.0004610700000000009, 0.0004610700000000009, 0.0004611530000000058, 0.0004612909999999956, 0.00046115299999999887, 0.0004612079999999977, 0.00046116699999999844, 0.00046127800000000246, 0.00046129200000000203, 0.0004612079999999977, 0.0004613060000000016, 0.0004611939999999981, 0.000461277000000003, 0.0004612919999999951, 0.0004613200000000012, 0.00046138899999999955, 0.00046126399999999596, 0.00046123700000000323, 0.00046136099999999347, 0.00046130599999999466, 0.00046111100000000016, 0.00046133299999999433, 0.0004611530000000058, 0.00046130500000000907, 0.00046118100000000495, 0.0004611530000000058, 0.00046122199999999725, 0.0004612780000000094, 0.00046123600000000375, 0.00046136100000000735, 0.0004611389999999993, 0.00046129200000000203]</msg>
<status status="PASS" starttime="20201029 09:34:35.461" endtime="20201029 09:34:35.463"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.456" endtime="20201029 09:34:35.464"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.053" endtime="20201029 09:34:35.464"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.030" endtime="20201029 09:34:35.464"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:35.467" endtime="20201029 09:34:35.486"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.465" endtime="20201029 09:34:35.487"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:35.495" endtime="20201029 09:34:35.574"></status>
</kw>
<msg timestamp="20201029 09:34:35.575" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:35.494" endtime="20201029 09:34:35.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:35.580" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:35.577" endtime="20201029 09:34:35.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:35.583" endtime="20201029 09:34:35.588"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.491" endtime="20201029 09:34:35.589"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.489" endtime="20201029 09:34:35.590"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:35.605" endtime="20201029 09:34:35.901"></status>
</kw>
<msg timestamp="20201029 09:34:35.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021434431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021912833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:35.602" endtime="20201029 09:34:35.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:35.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021434431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021912833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:35.905" endtime="20201029 09:34:35.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:35.913" endtime="20201029 09:34:35.915"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.596" endtime="20201029 09:34:35.915"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.592" endtime="20201029 09:34:35.916"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:35.920" level="INFO">${PHILIP_RES} = [{'diff': 0.0004784019999999993}, {'diff': 0.0004783340000000004}, {'diff': 0.00047849999999999976}, {'diff': 0.00047849999999999976}, {'diff': 0.00047844500000000095}, {'diff': 0.0004784019999999993}...</msg>
<status status="PASS" starttime="20201029 09:34:35.917" endtime="20201029 09:34:35.920"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:35.924" level="INFO">${RESULT} = {'diff': [0.0004784019999999993, 0.0004783340000000004, 0.00047849999999999976, 0.00047849999999999976, 0.00047844500000000095, 0.0004784019999999993, 0.0004783330000000009, 0.0004784449999999975, 0.0...</msg>
<status status="PASS" starttime="20201029 09:34:35.921" endtime="20201029 09:34:35.924"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:35.928" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:35.927" endtime="20201029 09:34:35.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:35.931" level="INFO">VALUE: [0.0004784019999999993, 0.0004783340000000004, 0.00047849999999999976, 0.00047849999999999976, 0.00047844500000000095, 0.0004784019999999993, 0.0004783330000000009, 0.0004784449999999975, 0.00047840300000000224, 0.00047838799999999626, 0.00047845800000000105, 0.00047849999999999976, 0.00047823599999999994, 0.00047855499999999856, 0.00047845800000000105, 0.00047833299999999745, 0.00047833299999999745, 0.0004783049999999983, 0.00047833400000000387, 0.00047844500000000095, 0.0004784159999999954, 0.0004785279999999989, 0.0004784029999999953, 0.0004784159999999954, 0.00047845800000000105, 0.00047840199999999583, 0.0004784300000000019, 0.0004783890000000027, 0.00047842999999999497, 0.0004783059999999978, 0.0004784860000000002, 0.0004784310000000014, 0.0004784310000000014, 0.00047838899999999573, 0.0004784169999999949, 0.00047836100000001047, 0.00047834700000000396, 0.0004784300000000019, 0.0004783200000000043, 0.0004783890000000096, 0.0004784310000000014, 0.0004784019999999889, 0.0004784300000000019, 0.00047819400000000123, 0.000478444999999994, 0.00047845800000000105, 0.00047836100000001047, 0.0004784169999999949, 0.00047847200000000756, 0.00047840300000000224]</msg>
<status status="PASS" starttime="20201029 09:34:35.930" endtime="20201029 09:34:35.933"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.925" endtime="20201029 09:34:35.933"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.487" endtime="20201029 09:34:35.934"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.465" endtime="20201029 09:34:35.934"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:35.936" endtime="20201029 09:34:35.956"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.935" endtime="20201029 09:34:35.956"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:35.965" endtime="20201029 09:34:36.040"></status>
</kw>
<msg timestamp="20201029 09:34:36.041" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:35.963" endtime="20201029 09:34:36.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.043" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:36.042" endtime="20201029 09:34:36.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.045" endtime="20201029 09:34:36.046"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.960" endtime="20201029 09:34:36.047"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.958" endtime="20201029 09:34:36.047"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.054" endtime="20201029 09:34:36.341"></status>
</kw>
<msg timestamp="20201029 09:34:36.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019270028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019765917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:36.052" endtime="20201029 09:34:36.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019270028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019765917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:36.345" endtime="20201029 09:34:36.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.353" endtime="20201029 09:34:36.354"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.050" endtime="20201029 09:34:36.355"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.048" endtime="20201029 09:34:36.355"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:36.359" level="INFO">${PHILIP_RES} = [{'diff': 0.0004958889999999994}, {'diff': 0.0004958889999999994}, {'diff': 0.0004957640000000027}, {'diff': 0.000495820000000001}, {'diff': 0.0004957779999999988}, {'diff': 0.0004958470000000006}, {'...</msg>
<status status="PASS" starttime="20201029 09:34:36.356" endtime="20201029 09:34:36.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:36.364" level="INFO">${RESULT} = {'diff': [0.0004958889999999994, 0.0004958889999999994, 0.0004957640000000027, 0.000495820000000001, 0.0004957779999999988, 0.0004958470000000006, 0.0004957639999999992, 0.0004958470000000006, 0.00049...</msg>
<status status="PASS" starttime="20201029 09:34:36.360" endtime="20201029 09:34:36.365"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.369" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:36.368" endtime="20201029 09:34:36.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.371" level="INFO">VALUE: [0.0004958889999999994, 0.0004958889999999994, 0.0004957640000000027, 0.000495820000000001, 0.0004957779999999988, 0.0004958470000000006, 0.0004957639999999992, 0.0004958470000000006, 0.0004958480000000001, 0.0004957779999999953, 0.0004957360000000036, 0.0004958889999999994, 0.0004958610000000002, 0.0004958470000000006, 0.0004959589999999972, 0.0004959019999999995, 0.0004956949999999974, 0.0004956389999999991, 0.0004955830000000008, 0.0004956389999999991, 0.0004957639999999958, 0.0004957629999999963, 0.0004957639999999958, 0.000495528000000002, 0.0004956950000000043, 0.0004958330000000011, 0.0004956670000000052, 0.0004956249999999995, 0.0004956670000000052, 0.0004956659999999988, 0.0004955410000000021, 0.0004954859999999964, 0.0004956529999999987, 0.0004956249999999995, 0.0004957090000000108, 0.0004956799999999983, 0.0004955970000000004, 0.0004956249999999995, 0.0004956529999999987, 0.0004956940000000049, 0.0004955970000000004, 0.0004955970000000004, 0.000495693999999991, 0.0004957780000000023, 0.0004955559999999942, 0.0004957780000000023, 0.0004956529999999987, 0.0004957500000000031, 0.0004956800000000122, 0.0004955139999999886]</msg>
<status status="PASS" starttime="20201029 09:34:36.370" endtime="20201029 09:34:36.377"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.365" endtime="20201029 09:34:36.377"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.957" endtime="20201029 09:34:36.378"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.934" endtime="20201029 09:34:36.378"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:36.381" endtime="20201029 09:34:36.400"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.379" endtime="20201029 09:34:36.401"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.409" endtime="20201029 09:34:36.488"></status>
</kw>
<msg timestamp="20201029 09:34:36.489" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:36.408" endtime="20201029 09:34:36.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.491" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:36.490" endtime="20201029 09:34:36.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.492" endtime="20201029 09:34:36.494"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.405" endtime="20201029 09:34:36.494"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.403" endtime="20201029 09:34:36.495"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.501" endtime="20201029 09:34:36.788"></status>
</kw>
<msg timestamp="20201029 09:34:36.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021821611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022334944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:36.500" endtime="20201029 09:34:36.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021821611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022334944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:36.793" endtime="20201029 09:34:36.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.801" endtime="20201029 09:34:36.802"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.497" endtime="20201029 09:34:36.803"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.496" endtime="20201029 09:34:36.803"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:36.807" level="INFO">${PHILIP_RES} = [{'diff': 0.0005133329999999978}, {'diff': 0.0005133749999999999}, {'diff': 0.000513290999999999}, {'diff': 0.0005133889999999995}, {'diff': 0.000513277999999999}, {'diff': 0.0005133610000000004}, {'d...</msg>
<status status="PASS" starttime="20201029 09:34:36.804" endtime="20201029 09:34:36.807"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:36.811" level="INFO">${RESULT} = {'diff': [0.0005133329999999978, 0.0005133749999999999, 0.000513290999999999, 0.0005133889999999995, 0.000513277999999999, 0.0005133610000000004, 0.000513290999999999, 0.0005133190000000017, 0.0005133...</msg>
<status status="PASS" starttime="20201029 09:34:36.808" endtime="20201029 09:34:36.812"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.816" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:36.815" endtime="20201029 09:34:36.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.818" level="INFO">VALUE: [0.0005133329999999978, 0.0005133749999999999, 0.000513290999999999, 0.0005133889999999995, 0.000513277999999999, 0.0005133610000000004, 0.000513290999999999, 0.0005133190000000017, 0.0005133329999999978, 0.0005133879999999966, 0.000513306000000005, 0.0005134450000000013, 0.0005133470000000043, 0.0005132639999999994, 0.0005134580000000014, 0.0005132220000000007, 0.0005133610000000038, 0.0005133479999999968, 0.0005132499999999998, 0.0005132629999999999, 0.0005133750000000034, 0.0005134029999999956, 0.0005133189999999982, 0.0005133470000000043, 0.0005133479999999968, 0.0005133470000000043, 0.000513389000000003, 0.0005132220000000007, 0.000513179999999995, 0.0005134310000000017, 0.0005133340000000042, 0.0005133200000000115, 0.000513290999999999, 0.0005133189999999982, 0.0005133610000000038, 0.000513389000000003, 0.000513389000000003, 0.0005133749999999965, 0.0005133189999999982, 0.0005134450000000013, 0.0005133749999999965, 0.0005135549999999989, 0.000513569999999991, 0.000513598000000004, 0.0005133750000000104, 0.0005134730000000004, 0.0005134579999999944, 0.0005134860000000074, 0.0005135839999999975, 0.0005135549999999989]</msg>
<status status="PASS" starttime="20201029 09:34:36.817" endtime="20201029 09:34:36.819"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.812" endtime="20201029 09:34:36.820"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.401" endtime="20201029 09:34:36.820"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.378" endtime="20201029 09:34:36.820"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:36.823" endtime="20201029 09:34:36.842"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.821" endtime="20201029 09:34:36.843"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.851" endtime="20201029 09:34:36.934"></status>
</kw>
<msg timestamp="20201029 09:34:36.935" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:36.850" endtime="20201029 09:34:36.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.937" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:36.936" endtime="20201029 09:34:36.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.938" endtime="20201029 09:34:36.941"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.847" endtime="20201029 09:34:36.942"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.845" endtime="20201029 09:34:36.942"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.949" endtime="20201029 09:34:37.256"></status>
</kw>
<msg timestamp="20201029 09:34:37.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021851764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022383236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:36.947" endtime="20201029 09:34:37.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:37.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021851764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022383236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:37.260" endtime="20201029 09:34:37.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:37.269" endtime="20201029 09:34:37.271"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.945" endtime="20201029 09:34:37.272"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.943" endtime="20201029 09:34:37.272"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:37.276" level="INFO">${PHILIP_RES} = [{'diff': 0.0005314720000000016}, {'diff': 0.0005314029999999997}, {'diff': 0.0005316250000000008}, {'diff': 0.000531443999999999}, {'diff': 0.0005315139999999968}, {'diff': 0.0005313609999999976}, {'...</msg>
<status status="PASS" starttime="20201029 09:34:37.273" endtime="20201029 09:34:37.277"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:37.281" level="INFO">${RESULT} = {'diff': [0.0005314720000000016, 0.0005314029999999997, 0.0005316250000000008, 0.000531443999999999, 0.0005315139999999968, 0.0005313609999999976, 0.0005314729999999976, 0.0005314029999999997, 0.00053...</msg>
<status status="PASS" starttime="20201029 09:34:37.277" endtime="20201029 09:34:37.281"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:37.285" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:37.284" endtime="20201029 09:34:37.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:37.288" level="INFO">VALUE: [0.0005314720000000016, 0.0005314029999999997, 0.0005316250000000008, 0.000531443999999999, 0.0005315139999999968, 0.0005313609999999976, 0.0005314729999999976, 0.0005314029999999997, 0.0005314579999999985, 0.0005313330000000019, 0.0005313049999999958, 0.0005314029999999997, 0.0005313060000000022, 0.0005313050000000027, 0.0005315409999999965, 0.0005313750000000006, 0.0005314029999999997, 0.0005314580000000055, 0.000531458999999998, 0.0005311529999999995, 0.0005310830000000016, 0.0005312219999999979, 0.0005312500000000039, 0.0005312920000000027, 0.0005311110000000008, 0.0005312910000000032, 0.0005311250000000003, 0.0005314169999999993, 0.000531249999999997, 0.000531249999999997, 0.0005311110000000008, 0.0005311389999999999, 0.0005311530000000064, 0.0005311669999999991, 0.0005312219999999979, 0.0005311949999999982, 0.0005312640000000035, 0.0005311249999999934, 0.0005311389999999999, 0.0005311250000000073, 0.0005312079999999914, 0.0005311949999999982, 0.0005313059999999953, 0.0005312370000000038, 0.0005311530000000064, 0.0005311389999999999, 0.0005313609999999941, 0.0005311799999999922, 0.0005314579999999985, 0.0005312360000000044]</msg>
<status status="PASS" starttime="20201029 09:34:37.286" endtime="20201029 09:34:37.289"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.282" endtime="20201029 09:34:37.290"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.844" endtime="20201029 09:34:37.290"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.821" endtime="20201029 09:34:37.291"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:37.293" endtime="20201029 09:34:37.313"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.292" endtime="20201029 09:34:37.313"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:37.321" endtime="20201029 09:34:37.402"></status>
</kw>
<msg timestamp="20201029 09:34:37.403" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:37.320" endtime="20201029 09:34:37.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:37.405" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:37.404" endtime="20201029 09:34:37.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:37.406" endtime="20201029 09:34:37.408"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.317" endtime="20201029 09:34:37.409"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.315" endtime="20201029 09:34:37.409"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:37.416" endtime="20201029 09:34:37.702"></status>
</kw>
<msg timestamp="20201029 09:34:37.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018812778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019362028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:37.414" endtime="20201029 09:34:37.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:37.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018812778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019362028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:37.706" endtime="20201029 09:34:37.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:37.714" endtime="20201029 09:34:37.716"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.411" endtime="20201029 09:34:37.716"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.410" endtime="20201029 09:34:37.717"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:37.721" level="INFO">${PHILIP_RES} = [{'diff': 0.0005492500000000011}, {'diff': 0.0005493609999999982}, {'diff': 0.0005494300000000001}, {'diff': 0.0005491939999999994}, {'diff': 0.0005492919999999998}, {'diff': 0.000549207999999999}, {'...</msg>
<status status="PASS" starttime="20201029 09:34:37.718" endtime="20201029 09:34:37.721"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:37.726" level="INFO">${RESULT} = {'diff': [0.0005492500000000011, 0.0005493609999999982, 0.0005494300000000001, 0.0005491939999999994, 0.0005492919999999998, 0.000549207999999999, 0.0005490690000000027, 0.0005492630000000012, 0.00054...</msg>
<status status="PASS" starttime="20201029 09:34:37.722" endtime="20201029 09:34:37.726"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:37.730" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:37.729" endtime="20201029 09:34:37.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:37.733" level="INFO">VALUE: [0.0005492500000000011, 0.0005493609999999982, 0.0005494300000000001, 0.0005491939999999994, 0.0005492919999999998, 0.000549207999999999, 0.0005490690000000027, 0.0005492630000000012, 0.0005493609999999982, 0.000549319999999999, 0.0005493189999999995, 0.0005492499999999942, 0.000549110999999998, 0.0005491670000000032, 0.0005491110000000049, 0.0005490000000000009, 0.0005492079999999955, 0.0005491810000000028, 0.0005492080000000024, 0.0005492780000000003, 0.0005492360000000016, 0.000549221999999995, 0.0005493049999999999, 0.0005492780000000003, 0.0005493750000000047, 0.0005493469999999986, 0.0005493200000000059, 0.0005494170000000034, 0.0005492500000000011, 0.0005493889999999974, 0.0005492090000000019, 0.0005494030000000039, 0.0005492770000000008, 0.0005492079999999955, 0.0005491529999999967, 0.000549208999999995, 0.0005492640000000076, 0.0005492780000000003, 0.0005493189999999926, 0.0005494860000000018, 0.0005495689999999998, 0.0005493469999999917, 0.0005492780000000003, 0.0005494020000000044, 0.0005494719999999953, 0.0005491670000000032, 0.0005493889999999974, 0.0005493889999999974, 0.0005493049999999999, 0.0005493059999999994]</msg>
<status status="PASS" starttime="20201029 09:34:37.731" endtime="20201029 09:34:37.734"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.727" endtime="20201029 09:34:37.734"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.314" endtime="20201029 09:34:37.735"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.291" endtime="20201029 09:34:37.735"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:37.737" endtime="20201029 09:34:37.757"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.736" endtime="20201029 09:34:37.757"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:37.766" endtime="20201029 09:34:37.853"></status>
</kw>
<msg timestamp="20201029 09:34:37.854" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:37.764" endtime="20201029 09:34:37.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:37.856" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:37.855" endtime="20201029 09:34:37.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:37.857" endtime="20201029 09:34:37.859"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.761" endtime="20201029 09:34:37.860"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.759" endtime="20201029 09:34:37.860"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:37.867" endtime="20201029 09:34:38.174"></status>
</kw>
<msg timestamp="20201029 09:34:38.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021722389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022290069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:37.865" endtime="20201029 09:34:38.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:38.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021722389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022290069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:38.178" endtime="20201029 09:34:38.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:38.186" endtime="20201029 09:34:38.187"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.863" endtime="20201029 09:34:38.188"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.861" endtime="20201029 09:34:38.188"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:38.192" level="INFO">${PHILIP_RES} = [{'diff': 0.0005676799999999975}, {'diff': 0.0005677359999999992}, {'diff': 0.0005676249999999987}, {'diff': 0.0005677499999999988}, {'diff': 0.000567597000000003}, {'diff': 0.0005678330000000002}, {'...</msg>
<status status="PASS" starttime="20201029 09:34:38.189" endtime="20201029 09:34:38.193"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:38.197" level="INFO">${RESULT} = {'diff': [0.0005676799999999975, 0.0005677359999999992, 0.0005676249999999987, 0.0005677499999999988, 0.000567597000000003, 0.0005678330000000002, 0.0005677500000000023, 0.0005676940000000005, 0.00056...</msg>
<status status="PASS" starttime="20201029 09:34:38.193" endtime="20201029 09:34:38.197"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:38.201" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:38.200" endtime="20201029 09:34:38.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:38.204" level="INFO">VALUE: [0.0005676799999999975, 0.0005677359999999992, 0.0005676249999999987, 0.0005677499999999988, 0.000567597000000003, 0.0005678330000000002, 0.0005677500000000023, 0.0005676940000000005, 0.000567680000000001, 0.0005676810000000004, 0.000567695, 0.0005677500000000058, 0.0005676389999999948, 0.0005677089999999996, 0.0005678340000000032, 0.0005676380000000023, 0.0005676670000000009, 0.0005677359999999992, 0.0005677219999999997, 0.0005677229999999991, 0.0005677919999999975, 0.0005677499999999988, 0.0005677499999999988, 0.000567680000000001, 0.0005675830000000034, 0.0005676250000000022, 0.000567695, 0.0005677769999999985, 0.0005676670000000078, 0.0005676669999999939, 0.0005675559999999968, 0.0005676669999999939, 0.0005675420000000042, 0.0005678050000000046, 0.0005678050000000046, 0.0005677919999999975, 0.0005675140000000051, 0.0005677219999999927, 0.0005677500000000058, 0.0005676250000000022, 0.0005676659999999945, 0.0005677639999999984, 0.0005676109999999956, 0.0005678200000000105, 0.0005677500000000058, 0.0005678199999999967, 0.000567806000000004, 0.0005679019999999951, 0.0005678050000000046, 0.0005676939999999936]</msg>
<status status="PASS" starttime="20201029 09:34:38.202" endtime="20201029 09:34:38.204"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.197" endtime="20201029 09:34:38.205"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.758" endtime="20201029 09:34:38.205"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.735" endtime="20201029 09:34:38.206"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:38.208" endtime="20201029 09:34:38.227"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.207" endtime="20201029 09:34:38.228"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:38.237" endtime="20201029 09:34:38.327"></status>
</kw>
<msg timestamp="20201029 09:34:38.327" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:38.236" endtime="20201029 09:34:38.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:38.330" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:38.328" endtime="20201029 09:34:38.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:38.331" endtime="20201029 09:34:38.334"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.233" endtime="20201029 09:34:38.334"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.230" endtime="20201029 09:34:38.335"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:38.341" endtime="20201029 09:34:38.632"></status>
</kw>
<msg timestamp="20201029 09:34:38.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023302889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023889347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:38.340" endtime="20201029 09:34:38.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:38.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023302889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023889347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:38.636" endtime="20201029 09:34:38.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:38.644" endtime="20201029 09:34:38.646"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.337" endtime="20201029 09:34:38.646"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.335" endtime="20201029 09:34:38.647"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:38.650" level="INFO">${PHILIP_RES} = [{'diff': 0.000586457999999998}, {'diff': 0.0005864019999999998}, {'diff': 0.0005865139999999998}, {'diff': 0.0005864720000000011}, {'diff': 0.0005865419999999989}, {'diff': 0.0005865970000000012}, {'...</msg>
<status status="PASS" starttime="20201029 09:34:38.647" endtime="20201029 09:34:38.651"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:38.654" level="INFO">${RESULT} = {'diff': [0.000586457999999998, 0.0005864019999999998, 0.0005865139999999998, 0.0005864720000000011, 0.0005865419999999989, 0.0005865970000000012, 0.0005860970000000007, 0.0005862079999999978, 0.00058...</msg>
<status status="PASS" starttime="20201029 09:34:38.651" endtime="20201029 09:34:38.655"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:38.659" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:38.658" endtime="20201029 09:34:38.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:38.661" level="INFO">VALUE: [0.000586457999999998, 0.0005864019999999998, 0.0005865139999999998, 0.0005864720000000011, 0.0005865419999999989, 0.0005865970000000012, 0.0005860970000000007, 0.0005862079999999978, 0.0005864439999999985, 0.0005861659999999991, 0.0005864439999999985, 0.0005860970000000007, 0.0005864169999999988, 0.0005864029999999992, 0.0005863610000000005, 0.0005863050000000022, 0.0005862079999999978, 0.0005863330000000014, 0.000586362, 0.0005865139999999963, 0.0005865700000000015, 0.0005865270000000034, 0.000586457999999998, 0.000586458000000005, 0.000586652, 0.000586556000000002, 0.0005864999999999967, 0.0005865270000000034, 0.0005864720000000045, 0.000586556000000002, 0.0005865280000000028, 0.0005867089999999908, 0.0005865000000000037, 0.000586457999999998, 0.0005865830000000016, 0.0005865000000000037, 0.0005865830000000016, 0.0005863199999999874, 0.000586457999999998, 0.000586486000000011, 0.0005866810000000056, 0.0005866950000000121, 0.0005866110000000008, 0.0005866389999999999, 0.0005864159999999924, 0.0005865699999999946, 0.000586556000000002, 0.000586540999999996, 0.0005866249999999934, 0.0005867089999999908]</msg>
<status status="PASS" starttime="20201029 09:34:38.660" endtime="20201029 09:34:38.663"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.655" endtime="20201029 09:34:38.663"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.229" endtime="20201029 09:34:38.664"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.206" endtime="20201029 09:34:38.664"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:38.666" endtime="20201029 09:34:38.685"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.665" endtime="20201029 09:34:38.686"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:38.694" endtime="20201029 09:34:38.780"></status>
</kw>
<msg timestamp="20201029 09:34:38.781" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:38.692" endtime="20201029 09:34:38.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:38.786" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:38.783" endtime="20201029 09:34:38.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:38.788" endtime="20201029 09:34:38.791"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.690" endtime="20201029 09:34:38.792"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.688" endtime="20201029 09:34:38.793"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:38.807" endtime="20201029 09:34:39.107"></status>
</kw>
<msg timestamp="20201029 09:34:39.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017423125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018028681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:38.804" endtime="20201029 09:34:39.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:39.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017423125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018028681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:39.111" endtime="20201029 09:34:39.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:39.119" endtime="20201029 09:34:39.120"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.798" endtime="20201029 09:34:39.121"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.795" endtime="20201029 09:34:39.121"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:39.125" level="INFO">${PHILIP_RES} = [{'diff': 0.0006055560000000001}, {'diff': 0.0006054719999999993}, {'diff': 0.0006055140000000014}, {'diff': 0.0006057079999999999}, {'diff': 0.0006054029999999974}, {'diff': 0.0006053329999999996}, {...</msg>
<status status="PASS" starttime="20201029 09:34:39.122" endtime="20201029 09:34:39.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:39.133" level="INFO">${RESULT} = {'diff': [0.0006055560000000001, 0.0006054719999999993, 0.0006055140000000014, 0.0006057079999999999, 0.0006054029999999974, 0.0006053329999999996, 0.0006055969999999994, 0.0006054729999999987, 0.0006...</msg>
<status status="PASS" starttime="20201029 09:34:39.126" endtime="20201029 09:34:39.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:39.137" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:39.136" endtime="20201029 09:34:39.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:39.140" level="INFO">VALUE: [0.0006055560000000001, 0.0006054719999999993, 0.0006055140000000014, 0.0006057079999999999, 0.0006054029999999974, 0.0006053329999999996, 0.0006055969999999994, 0.0006054729999999987, 0.0006055559999999967, 0.0006054589999999992, 0.0006055140000000014, 0.0006055699999999997, 0.0006054859999999954, 0.0006055829999999998, 0.0006054720000000027, 0.0006054449999999961, 0.0006054580000000032, 0.0006055140000000014, 0.0006054590000000026, 0.0006054299999999971, 0.0006054029999999974, 0.0006054439999999967, 0.0006053749999999983, 0.0006055969999999994, 0.0006053889999999978, 0.0006055000000000019, 0.0006054860000000023, 0.0006054029999999974, 0.0006053329999999996, 0.0006054309999999966, 0.0006054590000000026, 0.0006055140000000014, 0.0006052639999999943, 0.0006054720000000097, 0.0006054310000000035, 0.0006053889999999978, 0.0006054860000000023, 0.0006054860000000023, 0.0006055140000000014, 0.0006054299999999901, 0.0006054439999999967, 0.0006054719999999958, 0.0006055690000000002, 0.0006054590000000026, 0.0006055829999999929, 0.0006054590000000026, 0.000605430000000004, 0.0006055839999999924, 0.0006054449999999961, 0.0006055000000000088]</msg>
<status status="PASS" starttime="20201029 09:34:39.138" endtime="20201029 09:34:39.140"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.134" endtime="20201029 09:34:39.141"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.687" endtime="20201029 09:34:39.142"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.664" endtime="20201029 09:34:39.142"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:39.144" endtime="20201029 09:34:39.164"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.143" endtime="20201029 09:34:39.164"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:39.173" endtime="20201029 09:34:39.266"></status>
</kw>
<msg timestamp="20201029 09:34:39.267" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:39.171" endtime="20201029 09:34:39.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:39.269" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:39.268" endtime="20201029 09:34:39.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:39.270" endtime="20201029 09:34:39.272"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.168" endtime="20201029 09:34:39.273"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.166" endtime="20201029 09:34:39.273"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:39.280" endtime="20201029 09:34:39.567"></status>
</kw>
<msg timestamp="20201029 09:34:39.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021517861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022142431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:39.278" endtime="20201029 09:34:39.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:39.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021517861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022142431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:39.572" endtime="20201029 09:34:39.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:39.579" endtime="20201029 09:34:39.581"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.275" endtime="20201029 09:34:39.582"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.274" endtime="20201029 09:34:39.582"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:39.586" level="INFO">${PHILIP_RES} = [{'diff': 0.0006245700000000014}, {'diff': 0.0006245000000000001}, {'diff': 0.0006244860000000005}, {'diff': 0.0006245139999999996}, {'diff': 0.0006244860000000005}, {'diff': 0.0006245410000000028}, {...</msg>
<status status="PASS" starttime="20201029 09:34:39.583" endtime="20201029 09:34:39.586"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:39.590" level="INFO">${RESULT} = {'diff': [0.0006245700000000014, 0.0006245000000000001, 0.0006244860000000005, 0.0006245139999999996, 0.0006244860000000005, 0.0006245410000000028, 0.0006246109999999971, 0.0006244860000000005, 0.0006...</msg>
<status status="PASS" starttime="20201029 09:34:39.587" endtime="20201029 09:34:39.591"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:39.595" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:39.594" endtime="20201029 09:34:39.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:39.598" level="INFO">VALUE: [0.0006245700000000014, 0.0006245000000000001, 0.0006244860000000005, 0.0006245139999999996, 0.0006244860000000005, 0.0006245410000000028, 0.0006246109999999971, 0.0006244860000000005, 0.0006245269999999997, 0.0006244730000000004, 0.000624582999999998, 0.0006245000000000001, 0.0006245559999999983, 0.0006247360000000007, 0.0006246799999999955, 0.0006244159999999957, 0.0006246530000000028, 0.0006244720000000009, 0.0006244440000000018, 0.0006245139999999996, 0.0006247500000000003, 0.0006246249999999967, 0.0006246529999999959, 0.0006245559999999983, 0.0006246800000000025, 0.000624582999999998, 0.0006245970000000045, 0.000624791999999999, 0.0006244439999999879, 0.0006247080000000016, 0.0006247500000000072, 0.0006245560000000122, 0.0006245409999999924, 0.0006246530000000028, 0.0006244450000000012, 0.0006246109999999971, 0.0006247220000000081, 0.0006245279999999992, 0.0006246530000000028, 0.000624611000000011, 0.0006244170000000021, 0.0006245139999999927, 0.0006245000000000001, 0.0006244030000000095, 0.0006245279999999992, 0.0006245549999999989, 0.0006244720000000009, 0.0006245279999999992, 0.0006245410000000062, 0.0006245970000000045]</msg>
<status status="PASS" starttime="20201029 09:34:39.596" endtime="20201029 09:34:39.598"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.591" endtime="20201029 09:34:39.599"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.165" endtime="20201029 09:34:39.599"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.142" endtime="20201029 09:34:39.600"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:39.602" endtime="20201029 09:34:39.624"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.600" endtime="20201029 09:34:39.625"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:39.643" endtime="20201029 09:34:39.739"></status>
</kw>
<msg timestamp="20201029 09:34:39.740" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:39.639" endtime="20201029 09:34:39.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:39.746" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:39.743" endtime="20201029 09:34:39.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:39.748" endtime="20201029 09:34:39.754"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.633" endtime="20201029 09:34:39.755"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.629" endtime="20201029 09:34:39.756"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:39.770" endtime="20201029 09:34:40.068"></status>
</kw>
<msg timestamp="20201029 09:34:40.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036011236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036655153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:39.767" endtime="20201029 09:34:40.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:40.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036011236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036655153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:40.072" endtime="20201029 09:34:40.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:40.080" endtime="20201029 09:34:40.082"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.761" endtime="20201029 09:34:40.082"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.757" endtime="20201029 09:34:40.083"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:40.087" level="INFO">${PHILIP_RES} = [{'diff': 0.0006439170000000008}, {'diff': 0.0006439589999999995}, {'diff': 0.0006441800000000011}, {'diff': 0.0006439440000000005}, {'diff': 0.0006439310000000004}, {'diff': 0.0006439859999999992}, {...</msg>
<status status="PASS" starttime="20201029 09:34:40.083" endtime="20201029 09:34:40.087"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:40.091" level="INFO">${RESULT} = {'diff': [0.0006439170000000008, 0.0006439589999999995, 0.0006441800000000011, 0.0006439440000000005, 0.0006439310000000004, 0.0006439859999999992, 0.0006438889999999947, 0.0006438610000000025, 0.0006...</msg>
<status status="PASS" starttime="20201029 09:34:40.088" endtime="20201029 09:34:40.091"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:40.095" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:40.094" endtime="20201029 09:34:40.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:40.098" level="INFO">VALUE: [0.0006439170000000008, 0.0006439589999999995, 0.0006441800000000011, 0.0006439440000000005, 0.0006439310000000004, 0.0006439859999999992, 0.0006438889999999947, 0.0006438610000000025, 0.0006440139999999983, 0.0006438470000000029, 0.0006440140000000052, 0.0006441110000000028, 0.0006438890000000017, 0.0006439869999999986, 0.0006441810000000006, 0.0006440139999999983, 0.0006439999999999987, 0.0006438750000000021, 0.0006440550000000045, 0.0006440000000000057, 0.0006440689999999971, 0.0006440830000000036, 0.0006440139999999983, 0.0006439589999999995, 0.0006439999999999918, 0.0006440139999999983, 0.0006438330000000103, 0.0006440139999999983, 0.0006437360000000059, 0.0006438190000000038, 0.0006437080000000067, 0.0006435549999999901, 0.0006436380000000019, 0.0006437219999999994, 0.0006436660000000011, 0.0006437639999999911, 0.000643764000000005, 0.000643652999999994, 0.0006437080000000067, 0.0006437779999999976, 0.0006436670000000005, 0.0006433890000000081, 0.0006434859999999987, 0.0006436250000000088, 0.0006436390000000014, 0.0006436809999999932, 0.0006437499999999985, 0.0006438050000000112, 0.0006436520000000084, 0.0006436110000000023]</msg>
<status status="PASS" starttime="20201029 09:34:40.096" endtime="20201029 09:34:40.099"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.092" endtime="20201029 09:34:40.100"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.626" endtime="20201029 09:34:40.100"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.600" endtime="20201029 09:34:40.101"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:40.103" endtime="20201029 09:34:40.122"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.102" endtime="20201029 09:34:40.123"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:40.131" endtime="20201029 09:34:40.230"></status>
</kw>
<msg timestamp="20201029 09:34:40.230" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:40.130" endtime="20201029 09:34:40.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:40.233" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:40.231" endtime="20201029 09:34:40.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:40.234" endtime="20201029 09:34:40.236"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.127" endtime="20201029 09:34:40.236"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.125" endtime="20201029 09:34:40.237"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:40.243" endtime="20201029 09:34:40.531"></status>
</kw>
<msg timestamp="20201029 09:34:40.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022293847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022957264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:40.242" endtime="20201029 09:34:40.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:40.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022293847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022957264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:40.535" endtime="20201029 09:34:40.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:40.544" endtime="20201029 09:34:40.548"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.239" endtime="20201029 09:34:40.549"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.237" endtime="20201029 09:34:40.550"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:40.559" level="INFO">${PHILIP_RES} = [{'diff': 0.000663417000000003}, {'diff': 0.0006634449999999986}, {'diff': 0.0006634299999999996}, {'diff': 0.0006634310000000025}, {'diff': 0.0006633340000000015}, {'diff': 0.0006633749999999973}, {'...</msg>
<status status="PASS" starttime="20201029 09:34:40.552" endtime="20201029 09:34:40.560"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:40.570" level="INFO">${RESULT} = {'diff': [0.000663417000000003, 0.0006634449999999986, 0.0006634299999999996, 0.0006634310000000025, 0.0006633340000000015, 0.0006633749999999973, 0.0006632769999999968, 0.0006634589999999982, 0.00066...</msg>
<status status="PASS" starttime="20201029 09:34:40.561" endtime="20201029 09:34:40.571"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:40.579" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:40.577" endtime="20201029 09:34:40.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:40.585" level="INFO">VALUE: [0.000663417000000003, 0.0006634449999999986, 0.0006634299999999996, 0.0006634310000000025, 0.0006633340000000015, 0.0006633749999999973, 0.0006632769999999968, 0.0006634589999999982, 0.0006632500000000041, 0.0006633890000000003, 0.000663430999999999, 0.0006633890000000003, 0.0006632359999999976, 0.0006631949999999984, 0.0006633470000000016, 0.0006632779999999963, 0.0006632360000000045, 0.0006633190000000025, 0.0006632359999999976, 0.0006633190000000025, 0.0006633059999999955, 0.0006633050000000029, 0.0006633190000000025, 0.0006632780000000033, 0.0006633050000000029, 0.0006632909999999964, 0.0006633200000000089, 0.0006633890000000003, 0.0006633890000000003, 0.0006632639999999967, 0.0006632639999999967, 0.0006632639999999967, 0.0006633330000000021, 0.0006634449999999986, 0.0006634169999999995, 0.0006635559999999957, 0.000663319999999995, 0.0006632909999999964, 0.0006632780000000033, 0.0006633060000000024, 0.0006634580000000057, 0.0006633610000000012, 0.0006633749999999938, 0.0006634300000000065, 0.0006631940000000058, 0.0006634169999999995, 0.000663416, 0.0006634439999999991, 0.0006633610000000012, 0.000663402999999993]</msg>
<status status="PASS" starttime="20201029 09:34:40.582" endtime="20201029 09:34:40.587"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.572" endtime="20201029 09:34:40.588"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.124" endtime="20201029 09:34:40.589"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.101" endtime="20201029 09:34:40.589"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:40.594" endtime="20201029 09:34:40.617"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.591" endtime="20201029 09:34:40.618"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:40.636" endtime="20201029 09:34:40.733"></status>
</kw>
<msg timestamp="20201029 09:34:40.734" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:40.632" endtime="20201029 09:34:40.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:40.736" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:40.735" endtime="20201029 09:34:40.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:40.737" endtime="20201029 09:34:40.739"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.627" endtime="20201029 09:34:40.740"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.623" endtime="20201029 09:34:40.740"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:40.747" endtime="20201029 09:34:41.037"></status>
</kw>
<msg timestamp="20201029 09:34:41.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032503264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033186319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:40.745" endtime="20201029 09:34:41.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:41.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032503264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033186319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:41.041" endtime="20201029 09:34:41.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:41.049" endtime="20201029 09:34:41.050"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.743" endtime="20201029 09:34:41.051"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.741" endtime="20201029 09:34:41.051"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:41.055" level="INFO">${PHILIP_RES} = [{'diff': 0.0006830550000000019}, {'diff': 0.0006830279999999953}, {'diff': 0.0006830970000000006}, {'diff': 0.0006830279999999953}, {'diff': 0.000683180999999998}, {'diff': 0.0006833330000000012}, {'...</msg>
<status status="PASS" starttime="20201029 09:34:41.052" endtime="20201029 09:34:41.056"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:41.060" level="INFO">${RESULT} = {'diff': [0.0006830550000000019, 0.0006830279999999953, 0.0006830970000000006, 0.0006830279999999953, 0.000683180999999998, 0.0006833330000000012, 0.000683083000000001, 0.0006830419999999948, 0.000683...</msg>
<status status="PASS" starttime="20201029 09:34:41.056" endtime="20201029 09:34:41.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:41.064" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:41.063" endtime="20201029 09:34:41.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:41.067" level="INFO">VALUE: [0.0006830550000000019, 0.0006830279999999953, 0.0006830970000000006, 0.0006830279999999953, 0.000683180999999998, 0.0006833330000000012, 0.000683083000000001, 0.0006830419999999948, 0.0006832910000000025, 0.0006830279999999953, 0.0006830970000000006, 0.0006831669999999984, 0.0006830700000000009, 0.0006829589999999969, 0.0006829730000000034, 0.0006832499999999964, 0.0006830840000000005, 0.0006830549999999949, 0.0006831389999999993, 0.000683069999999994, 0.0006831249999999928, 0.0006831799999999916, 0.000683098000000007, 0.0006830829999999871, 0.0006832359999999899, 0.0006830280000000022, 0.0006831110000000001, 0.0006830419999999948, 0.0006833060000000085, 0.0006830979999999931, 0.000683000000000003, 0.0006831939999999981, 0.0006831110000000001, 0.000682889000000006, 0.0006829999999999892, 0.0006832230000000106, 0.0006829859999999965, 0.0006830419999999948, 0.0006831389999999993, 0.0006831389999999993, 0.0006831110000000001, 0.0006830140000000096, 0.0006829170000000051, 0.0006829450000000042, 0.0006831110000000001, 0.0006831389999999993, 0.000683054999999988, 0.0006831810000000049, 0.0006830969999999936, 0.0006829019999999991]</msg>
<status status="PASS" starttime="20201029 09:34:41.065" endtime="20201029 09:34:41.068"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.060" endtime="20201029 09:34:41.068"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.619" endtime="20201029 09:34:41.069"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.590" endtime="20201029 09:34:41.069"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:41.071" endtime="20201029 09:34:41.091"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.070" endtime="20201029 09:34:41.091"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:41.100" endtime="20201029 09:34:41.195"></status>
</kw>
<msg timestamp="20201029 09:34:41.195" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:41.098" endtime="20201029 09:34:41.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:41.198" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:41.196" endtime="20201029 09:34:41.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:41.199" endtime="20201029 09:34:41.202"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.095" endtime="20201029 09:34:41.202"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.093" endtime="20201029 09:34:41.203"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:41.209" endtime="20201029 09:34:41.519"></status>
</kw>
<msg timestamp="20201029 09:34:41.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018730417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019433736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:41.208" endtime="20201029 09:34:41.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:41.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018730417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019433736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:41.523" endtime="20201029 09:34:41.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:41.531" endtime="20201029 09:34:41.533"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.205" endtime="20201029 09:34:41.533"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.203" endtime="20201029 09:34:41.534"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:41.538" level="INFO">${PHILIP_RES} = [{'diff': 0.0007033190000000009}, {'diff': 0.0007033330000000004}, {'diff': 0.0007033749999999991}, {'diff': 0.000703264000000002}, {'diff': 0.0007033199999999969}, {'diff': 0.0007033049999999978}, {'...</msg>
<status status="PASS" starttime="20201029 09:34:41.534" endtime="20201029 09:34:41.538"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:41.542" level="INFO">${RESULT} = {'diff': [0.0007033190000000009, 0.0007033330000000004, 0.0007033749999999991, 0.000703264000000002, 0.0007033199999999969, 0.0007033049999999978, 0.0007033750000000026, 0.0007031800000000046, 0.00070...</msg>
<status status="PASS" starttime="20201029 09:34:41.539" endtime="20201029 09:34:41.542"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:41.546" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:41.545" endtime="20201029 09:34:41.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:41.549" level="INFO">VALUE: [0.0007033190000000009, 0.0007033330000000004, 0.0007033749999999991, 0.000703264000000002, 0.0007033199999999969, 0.0007033049999999978, 0.0007033750000000026, 0.0007031800000000046, 0.0007032919999999943, 0.0007033750000000061, 0.000703347, 0.000703152999999998, 0.0007033609999999996, 0.0007034030000000052, 0.0007031800000000046, 0.000703235999999996, 0.0007032500000000025, 0.0007033339999999999, 0.0007032780000000016, 0.0007033749999999991, 0.0007033749999999991, 0.0007033050000000013, 0.0007032629999999956, 0.0007032080000000038, 0.0007033889999999987, 0.0007033190000000009, 0.0007033889999999987, 0.000703361999999999, 0.0007031939999999903, 0.0007033190000000078, 0.0007033060000000008, 0.0007032500000000025, 0.0007034159999999984, 0.0007032770000000022, 0.0007032920000000081, 0.0007031949999999898, 0.0007030969999999997, 0.0007032360000000099, 0.0007034170000000117, 0.0007031109999999924, 0.0007033330000000004, 0.0007033890000000126, 0.0007032780000000016, 0.0007030690000000006, 0.0007030840000000066, 0.0007031939999999903, 0.0007033049999999874, 0.0007032219999999895, 0.000703235999999996, 0.0007031949999999898]</msg>
<status status="PASS" starttime="20201029 09:34:41.547" endtime="20201029 09:34:41.554"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.543" endtime="20201029 09:34:41.555"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.092" endtime="20201029 09:34:41.555"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.069" endtime="20201029 09:34:41.555"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:41.558" endtime="20201029 09:34:41.577"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.556" endtime="20201029 09:34:41.578"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:41.586" endtime="20201029 09:34:41.688"></status>
</kw>
<msg timestamp="20201029 09:34:41.688" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:41.585" endtime="20201029 09:34:41.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:41.691" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:41.689" endtime="20201029 09:34:41.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:41.692" endtime="20201029 09:34:41.694"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.582" endtime="20201029 09:34:41.694"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.580" endtime="20201029 09:34:41.695"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:41.701" endtime="20201029 09:34:41.988"></status>
</kw>
<msg timestamp="20201029 09:34:41.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019472944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020196667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:41.700" endtime="20201029 09:34:41.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:41.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019472944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020196667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:41.992" endtime="20201029 09:34:41.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:42.000" endtime="20201029 09:34:42.002"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.697" endtime="20201029 09:34:42.003"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.695" endtime="20201029 09:34:42.003"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:42.007" level="INFO">${PHILIP_RES} = [{'diff': 0.0007237230000000025}, {'diff': 0.0007235270000000016}, {'diff': 0.000723610999999999}, {'diff': 0.000723610999999999}, {'diff': 0.0007234030000000009}, {'diff': 0.0007235409999999977}, {'d...</msg>
<status status="PASS" starttime="20201029 09:34:42.004" endtime="20201029 09:34:42.007"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:42.012" level="INFO">${RESULT} = {'diff': [0.0007237230000000025, 0.0007235270000000016, 0.000723610999999999, 0.000723610999999999, 0.0007234030000000009, 0.0007235409999999977, 0.0007236379999999987, 0.0007236529999999977, 0.000723...</msg>
<status status="PASS" starttime="20201029 09:34:42.008" endtime="20201029 09:34:42.012"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:42.017" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:42.016" endtime="20201029 09:34:42.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:42.019" level="INFO">VALUE: [0.0007237230000000025, 0.0007235270000000016, 0.000723610999999999, 0.000723610999999999, 0.0007234030000000009, 0.0007235409999999977, 0.0007236379999999987, 0.0007236529999999977, 0.0007237639999999948, 0.0007236669999999973, 0.000723610999999999, 0.0007236529999999977, 0.0007237919999999939, 0.0007235420000000006, 0.0007235550000000007, 0.0007236120000000054, 0.0007236810000000038, 0.0007237499999999952, 0.0007237780000000013, 0.000723804999999994, 0.0007237640000000017, 0.0007233750000000053, 0.0007235000000000019, 0.0007233609999999988, 0.0007235699999999998, 0.0007234589999999957, 0.0007236389999999981, 0.0007235000000000019, 0.0007235140000000084, 0.0007235420000000076, 0.0007235270000000016, 0.0007236389999999981, 0.0007235689999999934, 0.0007236669999999973, 0.0007234720000000028, 0.0007235000000000019, 0.0007234169999999901, 0.0007235829999999999, 0.0007235000000000019, 0.0007235000000000019, 0.0007235140000000084, 0.0007234859999999954, 0.0007235409999999942, 0.0007234720000000028, 0.0007234160000000045, 0.0007233610000000057, 0.0007237779999999944, 0.0007237080000000035, 0.0007234859999999954, 0.0007235699999999928]</msg>
<status status="PASS" starttime="20201029 09:34:42.018" endtime="20201029 09:34:42.020"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.013" endtime="20201029 09:34:42.021"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.578" endtime="20201029 09:34:42.021"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.556" endtime="20201029 09:34:42.021"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.504" endtime="20201029 09:34:42.021"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:34:19.168" endtime="20201029 09:34:42.022" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 09:33:58.613" endtime="20201029 09:34:42.031"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">frdm-kw41z</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201029 09:33:56.398" endtime="20201029 09:34:42.064"></status>
</suite>
<statistics>
<total>
<stat pass="10" fail="0">Critical Tests</stat>
<stat pass="10" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="10" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="10" fail="0">BOARD_frdm-kw41z</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="10" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_ztimer_benchmarks.Timer Overhead</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
