<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201029 18:17:51.744" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:17:52.325" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:17:52.334" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:17:53.525" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:17:52.324" endtime="20201029 18:17:53.526"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:17:53.534" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 18:17:53.527" endtime="20201029 18:17:53.535"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.322" endtime="20201029 18:17:53.536"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:53.540" endtime="20201029 18:17:53.815"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.538" endtime="20201029 18:17:53.816"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:53.829" endtime="20201029 18:17:53.851"></status>
</kw>
<msg timestamp="20201029 18:17:53.851" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['20.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:53.828" endtime="20201029 18:17:53.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:53.854" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['20.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:53.853" endtime="20201029 18:17:53.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:17:53.857" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:17:53.855" endtime="20201029 18:17:53.857"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:53.825" endtime="20201029 18:17:53.858"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:53.822" endtime="20201029 18:17:53.859"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.821" endtime="20201029 18:17:53.859"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:17:53.863" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:17:53.862" endtime="20201029 18:17:53.863"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.860" endtime="20201029 18:17:53.864"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.820" endtime="20201029 18:17:53.864"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.819" endtime="20201029 18:17:53.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:53.865" endtime="20201029 18:17:53.866"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.818" endtime="20201029 18:17:53.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:53.867" endtime="20201029 18:17:53.869"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.816" endtime="20201029 18:17:53.869"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.321" endtime="20201029 18:17:53.870"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:53.876" endtime="20201029 18:17:53.895"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.874" endtime="20201029 18:17:53.896"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:53.910" endtime="20201029 18:17:53.927"></status>
</kw>
<msg timestamp="20201029 18:17:53.928" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:53.908" endtime="20201029 18:17:53.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:53.930" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:53.929" endtime="20201029 18:17:53.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:17:53.933" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:17:53.931" endtime="20201029 18:17:53.934"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:53.906" endtime="20201029 18:17:53.934"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:53.904" endtime="20201029 18:17:53.935"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.902" endtime="20201029 18:17:53.935"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:17:53.939" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:17:53.938" endtime="20201029 18:17:53.939"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.936" endtime="20201029 18:17:53.939"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.901" endtime="20201029 18:17:53.939"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.899" endtime="20201029 18:17:53.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:53.940" endtime="20201029 18:17:53.942"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.898" endtime="20201029 18:17:53.942"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.896" endtime="20201029 18:17:53.943"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.873" endtime="20201029 18:17:53.943"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:53.950" endtime="20201029 18:17:53.966"></status>
</kw>
<msg timestamp="20201029 18:17:53.967" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:53.948" endtime="20201029 18:17:53.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:53.969" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:53.968" endtime="20201029 18:17:53.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:53.970" endtime="20201029 18:17:53.973"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.946" endtime="20201029 18:17:53.974"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.944" endtime="20201029 18:17:53.974"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:53.978" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201029 18:17:53.977" endtime="20201029 18:17:53.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:53.981" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201029 18:17:53.980" endtime="20201029 18:17:53.982"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.975" endtime="20201029 18:17:53.983"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:17:53.870" endtime="20201029 18:17:53.984" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 18:17:51.860" endtime="20201029 18:17:53.987"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:17:54.047" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:17:54.055" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:17:55.237" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:17:54.045" endtime="20201029 18:17:55.238"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:17:55.240" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 18:17:55.239" endtime="20201029 18:17:55.241"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.044" endtime="20201029 18:17:55.241"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:55.244" endtime="20201029 18:17:55.517"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.242" endtime="20201029 18:17:55.518"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:55.530" endtime="20201029 18:17:55.549"></status>
</kw>
<msg timestamp="20201029 18:17:55.550" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['e to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:55.528" endtime="20201029 18:17:55.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:55.552" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['e to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:55.551" endtime="20201029 18:17:55.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:17:55.556" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:17:55.553" endtime="20201029 18:17:55.556"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:55.526" endtime="20201029 18:17:55.557"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:55.524" endtime="20201029 18:17:55.557"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.523" endtime="20201029 18:17:55.558"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:17:55.561" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:17:55.561" endtime="20201029 18:17:55.562"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.559" endtime="20201029 18:17:55.562"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.522" endtime="20201029 18:17:55.562"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.521" endtime="20201029 18:17:55.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:55.563" endtime="20201029 18:17:55.565"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.520" endtime="20201029 18:17:55.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:55.566" endtime="20201029 18:17:55.568"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.518" endtime="20201029 18:17:55.568"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.043" endtime="20201029 18:17:55.568"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:55.574" endtime="20201029 18:17:55.593"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.572" endtime="20201029 18:17:55.594"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:55.607" endtime="20201029 18:17:55.626"></status>
</kw>
<msg timestamp="20201029 18:17:55.626" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:55.605" endtime="20201029 18:17:55.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:55.629" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:55.628" endtime="20201029 18:17:55.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:17:55.632" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:17:55.630" endtime="20201029 18:17:55.632"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:55.603" endtime="20201029 18:17:55.633"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:55.600" endtime="20201029 18:17:55.634"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.599" endtime="20201029 18:17:55.634"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:17:55.638" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:17:55.637" endtime="20201029 18:17:55.639"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.635" endtime="20201029 18:17:55.639"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.598" endtime="20201029 18:17:55.639"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.598" endtime="20201029 18:17:55.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:55.640" endtime="20201029 18:17:55.642"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.596" endtime="20201029 18:17:55.642"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.595" endtime="20201029 18:17:55.643"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.571" endtime="20201029 18:17:55.643"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:55.651" endtime="20201029 18:17:55.670"></status>
</kw>
<msg timestamp="20201029 18:17:55.670" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:55.650" endtime="20201029 18:17:55.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:55.673" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:55.671" endtime="20201029 18:17:55.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:55.674" endtime="20201029 18:17:55.675"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.647" endtime="20201029 18:17:55.676"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.646" endtime="20201029 18:17:55.676"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:55.683" endtime="20201029 18:17:55.974"></status>
</kw>
<msg timestamp="20201029 18:17:55.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071135597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071136069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:55.681" endtime="20201029 18:17:55.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:55.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071135597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071136069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:55.978" endtime="20201029 18:17:55.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:55.986" endtime="20201029 18:17:55.988"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.678" endtime="20201029 18:17:55.988"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.677" endtime="20201029 18:17:55.989"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:55.993" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, ...</msg>
<status status="PASS" starttime="20201029 18:17:55.990" endtime="20201029 18:17:55.993"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:56.000" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.730...</msg>
<status status="PASS" starttime="20201029 18:17:55.994" endtime="20201029 18:17:56.001"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:56.005" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:17:56.004" endtime="20201029 18:17:56.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:56.008" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201029 18:17:56.007" endtime="20201029 18:17:56.009"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.001" endtime="20201029 18:17:56.009"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.644" endtime="20201029 18:17:56.010"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.644" endtime="20201029 18:17:56.010"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:56.022" endtime="20201029 18:17:56.045"></status>
</kw>
<msg timestamp="20201029 18:17:56.046" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:56.019" endtime="20201029 18:17:56.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:56.050" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:56.048" endtime="20201029 18:17:56.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:56.051" endtime="20201029 18:17:56.053"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.014" endtime="20201029 18:17:56.053"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.012" endtime="20201029 18:17:56.054"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:56.060" endtime="20201029 18:17:56.367"></status>
</kw>
<msg timestamp="20201029 18:17:56.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071661986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071662458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:56.059" endtime="20201029 18:17:56.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:56.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071661986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071662458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:56.373" endtime="20201029 18:17:56.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:56.386" endtime="20201029 18:17:56.390"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.056" endtime="20201029 18:17:56.391"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.054" endtime="20201029 18:17:56.392"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:56.399" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {...</msg>
<status status="PASS" starttime="20201029 18:17:56.394" endtime="20201029 18:17:56.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:56.404" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300...</msg>
<status status="PASS" starttime="20201029 18:17:56.400" endtime="20201029 18:17:56.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:56.409" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:17:56.408" endtime="20201029 18:17:56.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:56.411" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.7300000000083386e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201029 18:17:56.410" endtime="20201029 18:17:56.412"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.405" endtime="20201029 18:17:56.412"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.011" endtime="20201029 18:17:56.413"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.010" endtime="20201029 18:17:56.413"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:56.421" endtime="20201029 18:17:56.438"></status>
</kw>
<msg timestamp="20201029 18:17:56.438" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:56.419" endtime="20201029 18:17:56.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:56.441" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:56.439" endtime="20201029 18:17:56.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:56.442" endtime="20201029 18:17:56.443"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.417" endtime="20201029 18:17:56.444"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.415" endtime="20201029 18:17:56.444"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:56.452" endtime="20201029 18:17:56.759"></status>
</kw>
<msg timestamp="20201029 18:17:56.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.433488028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.4334885, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:17:56.451" endtime="20201029 18:17:56.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:56.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.433488028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.4334885, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:17:56.764" endtime="20201029 18:17:56.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:56.775" endtime="20201029 18:17:56.779"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.447" endtime="20201029 18:17:56.780"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.445" endtime="20201029 18:17:56.781"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:56.785" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.720000000291158e-07}, {'diff': 4.720000000291158e-07}, {'diff': 4.720000000291158e-07}, {'diff': 4.7199999997360464e-07}...</msg>
<status status="PASS" starttime="20201029 18:17:56.781" endtime="20201029 18:17:56.786"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:56.790" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4....</msg>
<status status="PASS" starttime="20201029 18:17:56.786" endtime="20201029 18:17:56.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:56.797" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:17:56.795" endtime="20201029 18:17:56.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:56.801" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201029 18:17:56.798" endtime="20201029 18:17:56.802"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.791" endtime="20201029 18:17:56.803"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.414" endtime="20201029 18:17:56.804"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.413" endtime="20201029 18:17:56.804"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:56.812" endtime="20201029 18:17:56.829"></status>
</kw>
<msg timestamp="20201029 18:17:56.830" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:56.810" endtime="20201029 18:17:56.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:56.832" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:56.831" endtime="20201029 18:17:56.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:56.833" endtime="20201029 18:17:56.835"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.808" endtime="20201029 18:17:56.836"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.806" endtime="20201029 18:17:56.836"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:56.843" endtime="20201029 18:17:57.144"></status>
</kw>
<msg timestamp="20201029 18:17:57.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.819467028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.8194675, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:17:56.841" endtime="20201029 18:17:57.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:57.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.819467028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.8194675, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:17:57.150" endtime="20201029 18:17:57.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:57.160" endtime="20201029 18:17:57.162"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.838" endtime="20201029 18:17:57.162"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.837" endtime="20201029 18:17:57.163"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:57.167" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.729999999453227e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}...</msg>
<status status="PASS" starttime="20201029 18:17:57.164" endtime="20201029 18:17:57.168"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:57.173" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4...</msg>
<status status="PASS" starttime="20201029 18:17:57.169" endtime="20201029 18:17:57.174"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:57.178" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:17:57.176" endtime="20201029 18:17:57.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:57.180" level="INFO">VALUE: [4.7199999997360464e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 18:17:57.179" endtime="20201029 18:17:57.181"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.174" endtime="20201029 18:17:57.181"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.805" endtime="20201029 18:17:57.182"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.804" endtime="20201029 18:17:57.182"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:57.190" endtime="20201029 18:17:57.207"></status>
</kw>
<msg timestamp="20201029 18:17:57.207" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:57.188" endtime="20201029 18:17:57.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:57.210" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:57.208" endtime="20201029 18:17:57.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:57.211" endtime="20201029 18:17:57.213"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.186" endtime="20201029 18:17:57.213"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.184" endtime="20201029 18:17:57.214"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:57.220" endtime="20201029 18:17:57.528"></status>
</kw>
<msg timestamp="20201029 18:17:57.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.20137575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.201376222, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:17:57.219" endtime="20201029 18:17:57.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:57.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.20137575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.201376222, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:17:57.533" endtime="20201029 18:17:57.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:57.544" endtime="20201029 18:17:57.546"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.216" endtime="20201029 18:17:57.546"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.214" endtime="20201029 18:17:57.547"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:57.551" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.729999998343004e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, ...</msg>
<status status="PASS" starttime="20201029 18:17:57.547" endtime="20201029 18:17:57.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:57.556" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.719...</msg>
<status status="PASS" starttime="20201029 18:17:57.552" endtime="20201029 18:17:57.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:57.561" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:17:57.560" endtime="20201029 18:17:57.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:57.563" level="INFO">VALUE: [4.7199999997360464e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 18:17:57.562" endtime="20201029 18:17:57.564"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.557" endtime="20201029 18:17:57.564"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.183" endtime="20201029 18:17:57.565"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.182" endtime="20201029 18:17:57.565"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:57.574" endtime="20201029 18:17:57.589"></status>
</kw>
<msg timestamp="20201029 18:17:57.590" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:57.572" endtime="20201029 18:17:57.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:57.592" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:57.591" endtime="20201029 18:17:57.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:57.594" endtime="20201029 18:17:57.595"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.569" endtime="20201029 18:17:57.596"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.567" endtime="20201029 18:17:57.596"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:57.603" endtime="20201029 18:17:57.901"></status>
</kw>
<msg timestamp="20201029 18:17:57.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.56818825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.568188722, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:17:57.601" endtime="20201029 18:17:57.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:57.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.56818825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.568188722, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:17:57.906" endtime="20201029 18:17:57.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:57.916" endtime="20201029 18:17:57.918"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.599" endtime="20201029 18:17:57.918"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.597" endtime="20201029 18:17:57.919"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:57.923" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 18:17:57.920" endtime="20201029 18:17:57.924"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:57.930" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, ...</msg>
<status status="PASS" starttime="20201029 18:17:57.924" endtime="20201029 18:17:57.931"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:57.935" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:17:57.934" endtime="20201029 18:17:57.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:57.937" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 18:17:57.936" endtime="20201029 18:17:57.937"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.931" endtime="20201029 18:17:57.938"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.566" endtime="20201029 18:17:57.938"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.565" endtime="20201029 18:17:57.939"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:57.946" endtime="20201029 18:17:57.960"></status>
</kw>
<msg timestamp="20201029 18:17:57.960" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:57.945" endtime="20201029 18:17:57.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:57.964" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:57.961" endtime="20201029 18:17:57.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:57.965" endtime="20201029 18:17:57.966"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.942" endtime="20201029 18:17:57.967"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.940" endtime="20201029 18:17:57.967"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:57.974" endtime="20201029 18:17:58.302"></status>
</kw>
<msg timestamp="20201029 18:17:58.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.939161694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.939162167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:57.972" endtime="20201029 18:17:58.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:58.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.939161694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.939162167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:58.314" endtime="20201029 18:17:58.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:58.330" endtime="20201029 18:17:58.332"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.970" endtime="20201029 18:17:58.333"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.968" endtime="20201029 18:17:58.333"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:58.337" level="INFO">${RESULT} = [{'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7200000019564925e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 18:17:58.334" endtime="20201029 18:17:58.338"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:58.343" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, ...</msg>
<status status="PASS" starttime="20201029 18:17:58.338" endtime="20201029 18:17:58.343"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:58.347" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:17:58.346" endtime="20201029 18:17:58.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:58.350" level="INFO">VALUE: [4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201029 18:17:58.349" endtime="20201029 18:17:58.351"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.344" endtime="20201029 18:17:58.351"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.939" endtime="20201029 18:17:58.352"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.939" endtime="20201029 18:17:58.352"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:58.360" endtime="20201029 18:17:58.378"></status>
</kw>
<msg timestamp="20201029 18:17:58.378" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:58.358" endtime="20201029 18:17:58.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:58.381" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:58.379" endtime="20201029 18:17:58.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:58.382" endtime="20201029 18:17:58.383"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.356" endtime="20201029 18:17:58.384"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.354" endtime="20201029 18:17:58.384"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:58.391" endtime="20201029 18:17:58.712"></status>
</kw>
<msg timestamp="20201029 18:17:58.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.301894778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.30189525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:17:58.389" endtime="20201029 18:17:58.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:58.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.301894778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.30189525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:17:58.717" endtime="20201029 18:17:58.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:58.727" endtime="20201029 18:17:58.729"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.387" endtime="20201029 18:17:58.729"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.385" endtime="20201029 18:17:58.730"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:58.734" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07...</msg>
<status status="PASS" starttime="20201029 18:17:58.731" endtime="20201029 18:17:58.734"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:58.739" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4....</msg>
<status status="PASS" starttime="20201029 18:17:58.735" endtime="20201029 18:17:58.739"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:58.743" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:17:58.742" endtime="20201029 18:17:58.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:58.745" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201029 18:17:58.744" endtime="20201029 18:17:58.746"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.740" endtime="20201029 18:17:58.746"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.353" endtime="20201029 18:17:58.747"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.352" endtime="20201029 18:17:58.747"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:58.756" endtime="20201029 18:17:58.769"></status>
</kw>
<msg timestamp="20201029 18:17:58.770" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:58.754" endtime="20201029 18:17:58.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:58.772" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:58.771" endtime="20201029 18:17:58.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:58.773" endtime="20201029 18:17:58.775"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.751" endtime="20201029 18:17:58.775"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.749" endtime="20201029 18:17:58.776"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:58.782" endtime="20201029 18:17:59.110"></status>
</kw>
<msg timestamp="20201029 18:17:59.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.7070825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.707082972, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:17:58.781" endtime="20201029 18:17:59.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:59.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.7070825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.707082972, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:17:59.122" endtime="20201029 18:17:59.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:59.146" endtime="20201029 18:17:59.148"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.778" endtime="20201029 18:17:59.149"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.776" endtime="20201029 18:17:59.149"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:59.154" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.729999996122558e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}...</msg>
<status status="PASS" starttime="20201029 18:17:59.150" endtime="20201029 18:17:59.154"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:59.159" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4...</msg>
<status status="PASS" starttime="20201029 18:17:59.155" endtime="20201029 18:17:59.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:59.164" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:17:59.163" endtime="20201029 18:17:59.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:59.166" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201029 18:17:59.165" endtime="20201029 18:17:59.167"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.160" endtime="20201029 18:17:59.167"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.748" endtime="20201029 18:17:59.168"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.747" endtime="20201029 18:17:59.168"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:59.176" endtime="20201029 18:17:59.191"></status>
</kw>
<msg timestamp="20201029 18:17:59.191" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:59.175" endtime="20201029 18:17:59.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:59.194" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:59.192" endtime="20201029 18:17:59.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:59.195" endtime="20201029 18:17:59.197"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.172" endtime="20201029 18:17:59.197"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.170" endtime="20201029 18:17:59.198"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:59.204" endtime="20201029 18:17:59.506"></status>
</kw>
<msg timestamp="20201029 18:17:59.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.088988667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.088989139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:59.203" endtime="20201029 18:17:59.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:59.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.088988667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.088989139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:59.511" endtime="20201029 18:17:59.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:59.522" endtime="20201029 18:17:59.523"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.200" endtime="20201029 18:17:59.524"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.198" endtime="20201029 18:17:59.524"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:59.528" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07},...</msg>
<status status="PASS" starttime="20201029 18:17:59.525" endtime="20201029 18:17:59.529"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:59.534" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199...</msg>
<status status="PASS" starttime="20201029 18:17:59.529" endtime="20201029 18:17:59.534"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:59.538" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:17:59.537" endtime="20201029 18:17:59.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:59.541" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.729999996122558e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 18:17:59.539" endtime="20201029 18:17:59.541"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.535" endtime="20201029 18:17:59.542"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.169" endtime="20201029 18:17:59.542"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.168" endtime="20201029 18:17:59.542"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:59.550" endtime="20201029 18:17:59.567"></status>
</kw>
<msg timestamp="20201029 18:17:59.568" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:59.548" endtime="20201029 18:17:59.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:59.570" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:59.569" endtime="20201029 18:17:59.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:59.571" endtime="20201029 18:17:59.573"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.546" endtime="20201029 18:17:59.573"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.544" endtime="20201029 18:17:59.573"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:59.581" endtime="20201029 18:17:59.907"></status>
</kw>
<msg timestamp="20201029 18:17:59.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.499230972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.499231444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:59.579" endtime="20201029 18:17:59.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:59.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.499230972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.499231444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:59.918" endtime="20201029 18:17:59.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:59.941" endtime="20201029 18:17:59.944"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.576" endtime="20201029 18:17:59.945"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.574" endtime="20201029 18:17:59.945"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:59.949" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.729999996122558e-0...</msg>
<status status="PASS" starttime="20201029 18:17:59.946" endtime="20201029 18:17:59.949"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:59.954" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.729999996122558e-07, 4.73000000056345e-07, 4....</msg>
<status status="PASS" starttime="20201029 18:17:59.950" endtime="20201029 18:17:59.954"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:59.958" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:17:59.957" endtime="20201029 18:17:59.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:59.961" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.729999996122558e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 18:17:59.959" endtime="20201029 18:17:59.961"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.955" endtime="20201029 18:17:59.962"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.543" endtime="20201029 18:17:59.962"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.543" endtime="20201029 18:17:59.962"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:59.971" endtime="20201029 18:17:59.985"></status>
</kw>
<msg timestamp="20201029 18:17:59.985" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:59.969" endtime="20201029 18:17:59.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:59.988" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:59.986" endtime="20201029 18:17:59.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:59.989" endtime="20201029 18:17:59.990"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.967" endtime="20201029 18:17:59.991"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.965" endtime="20201029 18:17:59.991"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:59.998" endtime="20201029 18:18:00.307"></status>
</kw>
<msg timestamp="20201029 18:18:00.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.866053042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.866053514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:59.996" endtime="20201029 18:18:00.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:00.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.866053042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.866053514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:00.313" endtime="20201029 18:18:00.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:00.323" endtime="20201029 18:18:00.324"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.994" endtime="20201029 18:18:00.325"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.992" endtime="20201029 18:18:00.325"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:00.330" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 18:18:00.326" endtime="20201029 18:18:00.330"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:00.335" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, ...</msg>
<status status="PASS" starttime="20201029 18:18:00.331" endtime="20201029 18:18:00.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:00.339" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:00.338" endtime="20201029 18:18:00.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:00.341" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 18:18:00.340" endtime="20201029 18:18:00.342"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.336" endtime="20201029 18:18:00.342"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.963" endtime="20201029 18:18:00.343"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.963" endtime="20201029 18:18:00.343"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:00.351" endtime="20201029 18:18:00.366"></status>
</kw>
<msg timestamp="20201029 18:18:00.367" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:00.349" endtime="20201029 18:18:00.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:00.369" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:00.368" endtime="20201029 18:18:00.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:00.370" endtime="20201029 18:18:00.372"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.347" endtime="20201029 18:18:00.372"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.345" endtime="20201029 18:18:00.373"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:00.379" endtime="20201029 18:18:00.696"></status>
</kw>
<msg timestamp="20201029 18:18:00.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.273991597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.273992069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:00.378" endtime="20201029 18:18:00.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:00.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.273991597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.273992069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:00.701" endtime="20201029 18:18:00.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:00.711" endtime="20201029 18:18:00.714"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.375" endtime="20201029 18:18:00.714"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.373" endtime="20201029 18:18:00.715"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:00.719" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07},...</msg>
<status status="PASS" starttime="20201029 18:18:00.715" endtime="20201029 18:18:00.719"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:00.723" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4....</msg>
<status status="PASS" starttime="20201029 18:18:00.720" endtime="20201029 18:18:00.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:00.727" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:00.726" endtime="20201029 18:18:00.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:00.730" level="INFO">VALUE: [4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201029 18:18:00.728" endtime="20201029 18:18:00.730"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.724" endtime="20201029 18:18:00.731"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.344" endtime="20201029 18:18:00.731"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.343" endtime="20201029 18:18:00.731"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:00.739" endtime="20201029 18:18:00.753"></status>
</kw>
<msg timestamp="20201029 18:18:00.753" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:00.738" endtime="20201029 18:18:00.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:00.756" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:00.754" endtime="20201029 18:18:00.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:00.757" endtime="20201029 18:18:00.758"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.735" endtime="20201029 18:18:00.759"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.733" endtime="20201029 18:18:00.759"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:00.766" endtime="20201029 18:18:01.084"></status>
</kw>
<msg timestamp="20201029 18:18:01.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.646781347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.646781819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:00.764" endtime="20201029 18:18:01.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:01.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.646781347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.646781819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:01.091" endtime="20201029 18:18:01.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:01.104" endtime="20201029 18:18:01.106"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.762" endtime="20201029 18:18:01.107"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.760" endtime="20201029 18:18:01.108"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:01.114" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {...</msg>
<status status="PASS" starttime="20201029 18:18:01.109" endtime="20201029 18:18:01.114"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:01.119" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.71...</msg>
<status status="PASS" starttime="20201029 18:18:01.115" endtime="20201029 18:18:01.120"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:01.124" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:01.123" endtime="20201029 18:18:01.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:01.126" level="INFO">VALUE: [4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 18:18:01.125" endtime="20201029 18:18:01.127"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.120" endtime="20201029 18:18:01.127"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.732" endtime="20201029 18:18:01.128"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.732" endtime="20201029 18:18:01.128"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:01.136" endtime="20201029 18:18:01.151"></status>
</kw>
<msg timestamp="20201029 18:18:01.151" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:01.135" endtime="20201029 18:18:01.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:01.154" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:01.152" endtime="20201029 18:18:01.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:01.156" endtime="20201029 18:18:01.158"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.132" endtime="20201029 18:18:01.159"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.130" endtime="20201029 18:18:01.160"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:01.169" endtime="20201029 18:18:01.492"></status>
</kw>
<msg timestamp="20201029 18:18:01.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.021831375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.021831847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:01.166" endtime="20201029 18:18:01.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:01.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.021831375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.021831847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:01.497" endtime="20201029 18:18:01.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:01.507" endtime="20201029 18:18:01.509"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.163" endtime="20201029 18:18:01.509"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.161" endtime="20201029 18:18:01.510"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:01.514" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.729999991681666e-0...</msg>
<status status="PASS" starttime="20201029 18:18:01.510" endtime="20201029 18:18:01.514"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:01.521" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.7199999997360464e-07,...</msg>
<status status="PASS" starttime="20201029 18:18:01.515" endtime="20201029 18:18:01.521"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:01.525" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:01.524" endtime="20201029 18:18:01.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:01.528" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 18:18:01.526" endtime="20201029 18:18:01.528"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.522" endtime="20201029 18:18:01.529"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.129" endtime="20201029 18:18:01.529"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.128" endtime="20201029 18:18:01.529"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:01.537" endtime="20201029 18:18:01.552"></status>
</kw>
<msg timestamp="20201029 18:18:01.553" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:01.536" endtime="20201029 18:18:01.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:01.555" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:01.554" endtime="20201029 18:18:01.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:01.556" endtime="20201029 18:18:01.558"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.533" endtime="20201029 18:18:01.558"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.531" endtime="20201029 18:18:01.559"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:01.566" endtime="20201029 18:18:01.884"></status>
</kw>
<msg timestamp="20201029 18:18:01.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.407813931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.407814403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:01.565" endtime="20201029 18:18:01.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:01.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.407813931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.407814403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:01.889" endtime="20201029 18:18:01.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:01.899" endtime="20201029 18:18:01.900"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.561" endtime="20201029 18:18:01.901"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.559" endtime="20201029 18:18:01.901"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:01.906" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 18:18:01.902" endtime="20201029 18:18:01.906"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:01.910" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000086178306e-07, 4....</msg>
<status status="PASS" starttime="20201029 18:18:01.907" endtime="20201029 18:18:01.910"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:01.914" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:01.913" endtime="20201029 18:18:01.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:01.917" level="INFO">VALUE: [4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.73000000056345e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 18:18:01.915" endtime="20201029 18:18:01.917"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.911" endtime="20201029 18:18:01.918"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.530" endtime="20201029 18:18:01.918"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.530" endtime="20201029 18:18:01.918"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:01.927" endtime="20201029 18:18:01.944"></status>
</kw>
<msg timestamp="20201029 18:18:01.944" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:01.925" endtime="20201029 18:18:01.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:01.947" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:01.945" endtime="20201029 18:18:01.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:01.948" endtime="20201029 18:18:01.949"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.922" endtime="20201029 18:18:01.950"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.920" endtime="20201029 18:18:01.950"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:01.957" endtime="20201029 18:18:02.286"></status>
</kw>
<msg timestamp="20201029 18:18:02.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.800722889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.800723361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:01.955" endtime="20201029 18:18:02.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:02.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.800722889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.800723361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:02.291" endtime="20201029 18:18:02.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:02.301" endtime="20201029 18:18:02.302"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.953" endtime="20201029 18:18:02.303"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.951" endtime="20201029 18:18:02.303"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:02.307" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-...</msg>
<status status="PASS" starttime="20201029 18:18:02.304" endtime="20201029 18:18:02.308"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:02.313" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 18:18:02.308" endtime="20201029 18:18:02.313"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:02.317" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:02.316" endtime="20201029 18:18:02.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:02.319" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 18:18:02.318" endtime="20201029 18:18:02.320"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.314" endtime="20201029 18:18:02.320"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.919" endtime="20201029 18:18:02.321"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.919" endtime="20201029 18:18:02.321"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:02.328" endtime="20201029 18:18:02.346"></status>
</kw>
<msg timestamp="20201029 18:18:02.347" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:02.327" endtime="20201029 18:18:02.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:02.349" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:02.348" endtime="20201029 18:18:02.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:02.350" endtime="20201029 18:18:02.352"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.324" endtime="20201029 18:18:02.352"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.323" endtime="20201029 18:18:02.353"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:02.360" endtime="20201029 18:18:02.673"></status>
</kw>
<msg timestamp="20201029 18:18:02.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.183511167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.183511639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:02.358" endtime="20201029 18:18:02.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:02.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.183511167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.183511639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:02.678" endtime="20201029 18:18:02.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:02.689" endtime="20201029 18:18:02.690"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.356" endtime="20201029 18:18:02.691"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.354" endtime="20201029 18:18:02.691"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:02.695" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7200000086178306e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 18:18:02.692" endtime="20201029 18:18:02.696"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:02.701" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, ...</msg>
<status status="PASS" starttime="20201029 18:18:02.696" endtime="20201029 18:18:02.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:02.705" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:02.704" endtime="20201029 18:18:02.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:02.708" level="INFO">VALUE: [4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 18:18:02.706" endtime="20201029 18:18:02.708"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.702" endtime="20201029 18:18:02.709"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.322" endtime="20201029 18:18:02.709"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.321" endtime="20201029 18:18:02.709"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:02.717" endtime="20201029 18:18:02.734"></status>
</kw>
<msg timestamp="20201029 18:18:02.735" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:02.716" endtime="20201029 18:18:02.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:02.737" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:02.736" endtime="20201029 18:18:02.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:02.738" endtime="20201029 18:18:02.740"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.713" endtime="20201029 18:18:02.741"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.712" endtime="20201029 18:18:02.741"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:02.749" endtime="20201029 18:18:03.065"></status>
</kw>
<msg timestamp="20201029 18:18:03.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.576372514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.576372986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:02.746" endtime="20201029 18:18:03.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:03.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.576372514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.576372986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:03.070" endtime="20201029 18:18:03.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:03.080" endtime="20201029 18:18:03.082"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.744" endtime="20201029 18:18:03.082"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.742" endtime="20201029 18:18:03.083"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:03.087" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7200000086178306e-...</msg>
<status status="PASS" starttime="20201029 18:18:03.083" endtime="20201029 18:18:03.087"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:03.091" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 18:18:03.088" endtime="20201029 18:18:03.092"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:03.096" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:03.095" endtime="20201029 18:18:03.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:03.098" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201029 18:18:03.097" endtime="20201029 18:18:03.099"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.092" endtime="20201029 18:18:03.099"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.710" endtime="20201029 18:18:03.099"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.710" endtime="20201029 18:18:03.100"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:03.108" endtime="20201029 18:18:03.125"></status>
</kw>
<msg timestamp="20201029 18:18:03.125" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:03.107" endtime="20201029 18:18:03.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:03.128" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:03.126" endtime="20201029 18:18:03.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:03.129" endtime="20201029 18:18:03.131"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.104" endtime="20201029 18:18:03.132"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.102" endtime="20201029 18:18:03.132"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:03.139" endtime="20201029 18:18:03.457"></status>
</kw>
<msg timestamp="20201029 18:18:03.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.952369861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.952370333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:03.137" endtime="20201029 18:18:03.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:03.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.952369861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.952370333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:03.462" endtime="20201029 18:18:03.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:03.472" endtime="20201029 18:18:03.474"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.135" endtime="20201029 18:18:03.474"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.133" endtime="20201029 18:18:03.475"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:03.479" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7200000086178306e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-...</msg>
<status status="PASS" starttime="20201029 18:18:03.476" endtime="20201029 18:18:03.479"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:03.484" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, ...</msg>
<status status="PASS" starttime="20201029 18:18:03.480" endtime="20201029 18:18:03.485"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:03.489" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:03.488" endtime="20201029 18:18:03.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:03.491" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 18:18:03.490" endtime="20201029 18:18:03.491"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.485" endtime="20201029 18:18:03.492"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.100" endtime="20201029 18:18:03.492"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.100" endtime="20201029 18:18:03.493"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.643" endtime="20201029 18:18:03.493"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:17:55.569" endtime="20201029 18:18:03.493" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:03.500" endtime="20201029 18:18:03.519"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.498" endtime="20201029 18:18:03.520"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:03.533" endtime="20201029 18:18:03.553"></status>
</kw>
<msg timestamp="20201029 18:18:03.554" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:03.531" endtime="20201029 18:18:03.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:03.556" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:03.555" endtime="20201029 18:18:03.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:18:03.559" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:18:03.557" endtime="20201029 18:18:03.560"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:03.529" endtime="20201029 18:18:03.560"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:03.527" endtime="20201029 18:18:03.561"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.525" endtime="20201029 18:18:03.561"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:18:03.566" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:18:03.565" endtime="20201029 18:18:03.566"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.562" endtime="20201029 18:18:03.566"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.524" endtime="20201029 18:18:03.567"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.524" endtime="20201029 18:18:03.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:03.567" endtime="20201029 18:18:03.569"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.522" endtime="20201029 18:18:03.569"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.521" endtime="20201029 18:18:03.570"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.497" endtime="20201029 18:18:03.570"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:03.578" endtime="20201029 18:18:03.597"></status>
</kw>
<msg timestamp="20201029 18:18:03.598" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:03.577" endtime="20201029 18:18:03.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:03.600" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:03.599" endtime="20201029 18:18:03.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:03.601" endtime="20201029 18:18:03.603"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.574" endtime="20201029 18:18:03.604"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.573" endtime="20201029 18:18:03.604"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:03.610" endtime="20201029 18:18:03.898"></status>
</kw>
<msg timestamp="20201029 18:18:03.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068608889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068614306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:03.609" endtime="20201029 18:18:03.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:03.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068608889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068614306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:03.902" endtime="20201029 18:18:03.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:03.910" endtime="20201029 18:18:03.912"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.606" endtime="20201029 18:18:03.913"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.605" endtime="20201029 18:18:03.913"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:03.917" level="INFO">${RESULT} = [{'diff': 5.416999999993677e-06}, {'diff': 5.444000000007221e-06}, {'diff': 5.431000000000186e-06}, {'diff': 5.403000000001046e-06}, {'diff': 5.416999999993677e-06}, {'diff': 5.431000000000186e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:18:03.914" endtime="20201029 18:18:03.917"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:03.922" level="INFO">${OVERHEAD} = {'diff': [5.416999999993677e-06, 5.444000000007221e-06, 5.431000000000186e-06, 5.403000000001046e-06, 5.416999999993677e-06, 5.431000000000186e-06, 5.444000000007221e-06, 5.430000000000712e-06, 5.4170...</msg>
<status status="PASS" starttime="20201029 18:18:03.918" endtime="20201029 18:18:03.922"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:03.926" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:03.925" endtime="20201029 18:18:03.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:03.928" level="INFO">VALUE: [5.416999999993677e-06, 5.444000000007221e-06, 5.431000000000186e-06, 5.403000000001046e-06, 5.416999999993677e-06, 5.431000000000186e-06, 5.444000000007221e-06, 5.430000000000712e-06, 5.417000000007555e-06, 5.444000000007221e-06, 5.402999999987168e-06, 5.443999999993343e-06, 5.416999999993677e-06, 5.473000000005834e-06, 5.444999999992817e-06, 5.444999999992817e-06, 5.415999999994203e-06, 5.430000000000712e-06, 5.4450000000066945e-06, 5.416999999993677e-06, 5.416000000008081e-06, 5.444000000007221e-06, 5.444000000007221e-06, 5.443999999993343e-06, 5.417000000007555e-06, 5.416999999993677e-06, 5.472000000006361e-06, 5.417000000007555e-06, 5.431000000000186e-06, 5.416999999993677e-06, 5.417000000007555e-06, 5.4589999999993255e-06, 5.431000000000186e-06, 5.417000000007555e-06, 5.430000000000712e-06, 5.443999999993343e-06, 5.457999999999852e-06, 5.457999999999852e-06, 5.347000000002766e-06, 5.4450000000066945e-06, 5.431000000000186e-06, 5.360999999995397e-06, 5.430000000000712e-06, 5.416000000008081e-06, 5.443999999993343e-06, 5.444000000007221e-06, 5.457999999999852e-06, 5.429999999986834e-06, 5.443999999993343e-06, 5.444999999992817e-06]</msg>
<status status="PASS" starttime="20201029 18:18:03.927" endtime="20201029 18:18:03.929"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.923" endtime="20201029 18:18:03.929"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.572" endtime="20201029 18:18:03.930"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.571" endtime="20201029 18:18:03.930"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:03.937" endtime="20201029 18:18:03.954"></status>
</kw>
<msg timestamp="20201029 18:18:03.955" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:03.936" endtime="20201029 18:18:03.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:03.957" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:03.956" endtime="20201029 18:18:03.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:03.958" endtime="20201029 18:18:03.960"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.933" endtime="20201029 18:18:03.960"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.932" endtime="20201029 18:18:03.961"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:03.967" endtime="20201029 18:18:04.270"></status>
</kw>
<msg timestamp="20201029 18:18:04.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069059486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069064944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:03.966" endtime="20201029 18:18:04.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:04.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069059486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069064944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:04.275" endtime="20201029 18:18:04.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:04.285" endtime="20201029 18:18:04.293"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.963" endtime="20201029 18:18:04.294"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.961" endtime="20201029 18:18:04.294"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:04.299" level="INFO">${RESULT} = [{'diff': 5.457999999999852e-06}, {'diff': 5.457999999999852e-06}, {'diff': 5.347000000002766e-06}, {'diff': 5.4450000000066945e-06}, {'diff': 5.431000000000186e-06}, {'diff': 5.360999999995397e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:18:04.295" endtime="20201029 18:18:04.300"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:04.304" level="INFO">${OVERHEAD} = {'diff': [5.457999999999852e-06, 5.457999999999852e-06, 5.347000000002766e-06, 5.4450000000066945e-06, 5.431000000000186e-06, 5.360999999995397e-06, 5.430000000000712e-06, 5.416000000008081e-06, 5.443...</msg>
<status status="PASS" starttime="20201029 18:18:04.300" endtime="20201029 18:18:04.304"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:04.308" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:04.307" endtime="20201029 18:18:04.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:04.311" level="INFO">VALUE: [5.457999999999852e-06, 5.457999999999852e-06, 5.347000000002766e-06, 5.4450000000066945e-06, 5.431000000000186e-06, 5.360999999995397e-06, 5.430000000000712e-06, 5.416000000008081e-06, 5.443999999993343e-06, 5.444000000007221e-06, 5.457999999999852e-06, 5.429999999986834e-06, 5.443999999993343e-06, 5.444999999992817e-06, 5.4299999999729565e-06, 5.431000000000186e-06, 5.403000000014924e-06, 5.444000000021099e-06, 5.459000000040959e-06, 5.45800000001373e-06, 5.4169999999520435e-06, 5.417000000007555e-06, 5.4159999999803254e-06, 5.430000000028468e-06, 5.499999999991623e-06, 5.375000000029662e-06, 5.417000000007555e-06, 5.431000000000186e-06, 5.416000000035837e-06, 5.4020000000432056e-06, 5.444999999992817e-06, 5.431000000000186e-06, 5.444999999992817e-06, 5.444000000021099e-06, 5.4159999999803254e-06, 5.403000000014924e-06, 5.4029999999594125e-06, 5.444999999992817e-06, 5.417000000007555e-06, 5.445000000048328e-06, 5.458999999985448e-06, 5.45800000001373e-06, 5.3609999999815194e-06, 5.417000000007555e-06, 5.403000000014924e-06, 5.444000000021099e-06, 5.3609999999815194e-06, 5.4159999999803254e-06, 5.4159999999803254e-06, 5.444000000021099e-06, 5.45800000001373e-06, 5.348000000016118e-06, 5.444999999992817e-06, 5.430000000028468e-06, 5.3889999999667815e-06, 5.389000000022293e-06, 5.458999999985448e-06, 5.4159999999803254e-06, 5.431000000000186e-06, 5.416000000035837e-06, 5.444000000021099e-06, 5.417000000007555e-06, 5.472000000006361e-06, 5.444999999992817e-06]</msg>
<status status="PASS" starttime="20201029 18:18:04.309" endtime="20201029 18:18:04.311"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.305" endtime="20201029 18:18:04.311"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.930" endtime="20201029 18:18:04.312"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.930" endtime="20201029 18:18:04.312"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:04.320" endtime="20201029 18:18:04.336"></status>
</kw>
<msg timestamp="20201029 18:18:04.336" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:04.318" endtime="20201029 18:18:04.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:04.339" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:04.337" endtime="20201029 18:18:04.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:04.340" endtime="20201029 18:18:04.341"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.316" endtime="20201029 18:18:04.342"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.314" endtime="20201029 18:18:04.342"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:04.350" endtime="20201029 18:18:04.660"></status>
</kw>
<msg timestamp="20201029 18:18:04.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.419919792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.41992525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:04.348" endtime="20201029 18:18:04.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:04.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.419919792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.41992525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:04.665" endtime="20201029 18:18:04.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:04.675" endtime="20201029 18:18:04.677"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.345" endtime="20201029 18:18:04.677"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.343" endtime="20201029 18:18:04.678"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:04.682" level="INFO">${RESULT} = [{'diff': 5.45800000001373e-06}, {'diff': 5.348000000016118e-06}, {'diff': 5.444999999992817e-06}, {'diff': 5.430000000028468e-06}, {'diff': 5.3889999999667815e-06}, {'diff': 5.389000000022293e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:18:04.679" endtime="20201029 18:18:04.682"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:04.687" level="INFO">${OVERHEAD} = {'diff': [5.45800000001373e-06, 5.348000000016118e-06, 5.444999999992817e-06, 5.430000000028468e-06, 5.3889999999667815e-06, 5.389000000022293e-06, 5.458999999985448e-06, 5.4159999999803254e-06, 5.431...</msg>
<status status="PASS" starttime="20201029 18:18:04.683" endtime="20201029 18:18:04.687"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:04.693" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:04.690" endtime="20201029 18:18:04.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:04.696" level="INFO">VALUE: [5.45800000001373e-06, 5.348000000016118e-06, 5.444999999992817e-06, 5.430000000028468e-06, 5.3889999999667815e-06, 5.389000000022293e-06, 5.458999999985448e-06, 5.4159999999803254e-06, 5.431000000000186e-06, 5.416000000035837e-06, 5.444000000021099e-06, 5.417000000007555e-06, 5.472000000006361e-06, 5.444999999992817e-06, 5.415999999924814e-06, 5.417000000007555e-06, 5.444999999992817e-06, 5.487000000026221e-06, 5.4309999999446745e-06, 5.3749999999741505e-06, 5.416000000035837e-06, 5.4309999999446745e-06, 5.4579999999582185e-06, 5.4309999999446745e-06, 5.4029999999594125e-06, 5.431000000055697e-06, 5.444999999992817e-06, 5.403000000070435e-06, 5.444999999992817e-06, 5.4309999999446745e-06, 5.444999999992817e-06, 5.499999999991623e-06, 5.417000000007555e-06, 5.472000000006361e-06, 5.4299999999729565e-06, 5.403000000070435e-06, 5.389000000022293e-06, 5.444999999992817e-06, 5.4579999999582185e-06, 5.430000000083979e-06, 5.417000000007555e-06, 5.527999999976885e-06, 5.416000000035837e-06, 5.4309999999446745e-06, 5.417000000007555e-06, 5.417000000007555e-06, 5.443999999910076e-06, 5.431000000055697e-06, 5.416000000035837e-06, 5.444000000021099e-06, 5.444999999992817e-06, 5.472000000006361e-06, 5.444999999992817e-06, 5.416000000035837e-06, 5.458000000069241e-06, 5.417000000007555e-06, 5.431000000055697e-06, 5.4859999999434805e-06, 5.444999999992817e-06, 5.4299999999729565e-06, 5.444999999992817e-06, 5.4859999999434805e-06, 5.459000000040959e-06, 5.360999999926008e-06]</msg>
<status status="PASS" starttime="20201029 18:18:04.694" endtime="20201029 18:18:04.696"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.688" endtime="20201029 18:18:04.697"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.313" endtime="20201029 18:18:04.697"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.312" endtime="20201029 18:18:04.697"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:04.705" endtime="20201029 18:18:04.722"></status>
</kw>
<msg timestamp="20201029 18:18:04.723" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:04.703" endtime="20201029 18:18:04.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:04.725" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:04.724" endtime="20201029 18:18:04.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:04.726" endtime="20201029 18:18:04.728"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.701" endtime="20201029 18:18:04.728"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.699" endtime="20201029 18:18:04.729"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:04.735" endtime="20201029 18:18:05.028"></status>
</kw>
<msg timestamp="20201029 18:18:05.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.792657111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.792662556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:04.734" endtime="20201029 18:18:05.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:05.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.792657111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.792662556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:05.033" endtime="20201029 18:18:05.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:05.043" endtime="20201029 18:18:05.045"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.731" endtime="20201029 18:18:05.046"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.729" endtime="20201029 18:18:05.046"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:05.050" level="INFO">${RESULT} = [{'diff': 5.444999999992817e-06}, {'diff': 5.472000000006361e-06}, {'diff': 5.444999999992817e-06}, {'diff': 5.416000000035837e-06}, {'diff': 5.458000000069241e-06}, {'diff': 5.417000000007555e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:18:05.047" endtime="20201029 18:18:05.050"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:05.055" level="INFO">${OVERHEAD} = {'diff': [5.444999999992817e-06, 5.472000000006361e-06, 5.444999999992817e-06, 5.416000000035837e-06, 5.458000000069241e-06, 5.417000000007555e-06, 5.431000000055697e-06, 5.4859999999434805e-06, 5.444...</msg>
<status status="PASS" starttime="20201029 18:18:05.051" endtime="20201029 18:18:05.056"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:05.060" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:05.059" endtime="20201029 18:18:05.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:05.062" level="INFO">VALUE: [5.444999999992817e-06, 5.472000000006361e-06, 5.444999999992817e-06, 5.416000000035837e-06, 5.458000000069241e-06, 5.417000000007555e-06, 5.431000000055697e-06, 5.4859999999434805e-06, 5.444999999992817e-06, 5.4299999999729565e-06, 5.444999999992817e-06, 5.4859999999434805e-06, 5.459000000040959e-06, 5.360999999926008e-06, 5.416000000035837e-06, 5.472000000006361e-06, 5.444999999992817e-06, 5.4579999999582185e-06, 5.444999999992817e-06, 5.416999999896532e-06, 5.430000000083979e-06, 5.444999999992817e-06, 5.417000000118577e-06, 5.429999999861934e-06, 5.4579999999582185e-06, 5.443999999910076e-06, 5.430000000083979e-06, 5.444999999992817e-06, 5.443999999910076e-06, 5.416000000035837e-06, 5.4309999999446745e-06, 5.444999999992817e-06, 5.416999999896532e-06, 5.416999999896532e-06, 5.444000000132121e-06, 5.4309999999446745e-06, 5.444000000132121e-06, 5.459000000040959e-06, 5.417000000118577e-06, 5.416999999896532e-06, 5.444999999992817e-06, 5.416000000035837e-06, 5.416999999896532e-06, 5.444999999992817e-06, 5.415999999813792e-06, 5.401999999987694e-06, 5.332999999829724e-06, 5.4579999999582185e-06, 5.444000000132121e-06, 5.4579999999582185e-06, 5.4309999999446745e-06, 5.444999999992817e-06, 5.443999999910076e-06, 5.4579999999582185e-06, 5.459000000040959e-06, 5.443999999910076e-06, 5.4309999999446745e-06, 5.416000000035837e-06, 5.417000000118577e-06, 5.417000000118577e-06, 5.389000000022293e-06, 5.4309999999446745e-06, 5.444000000132121e-06, 5.360999999926008e-06]</msg>
<status status="PASS" starttime="20201029 18:18:05.061" endtime="20201029 18:18:05.063"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.056" endtime="20201029 18:18:05.063"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.698" endtime="20201029 18:18:05.064"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.698" endtime="20201029 18:18:05.064"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:05.071" endtime="20201029 18:18:05.089"></status>
</kw>
<msg timestamp="20201029 18:18:05.090" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:05.070" endtime="20201029 18:18:05.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:05.092" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:05.091" endtime="20201029 18:18:05.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:05.093" endtime="20201029 18:18:05.095"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.067" endtime="20201029 18:18:05.095"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.066" endtime="20201029 18:18:05.096"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:05.102" endtime="20201029 18:18:05.407"></status>
</kw>
<msg timestamp="20201029 18:18:05.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.169568722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.169574153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:05.101" endtime="20201029 18:18:05.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:05.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.169568722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.169574153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:05.413" endtime="20201029 18:18:05.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:05.423" endtime="20201029 18:18:05.424"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.098" endtime="20201029 18:18:05.425"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.096" endtime="20201029 18:18:05.425"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:05.429" level="INFO">${RESULT} = [{'diff': 5.4309999999446745e-06}, {'diff': 5.444999999992817e-06}, {'diff': 5.443999999910076e-06}, {'diff': 5.4579999999582185e-06}, {'diff': 5.459000000040959e-06}, {'diff': 5.443999999910076e-06},...</msg>
<status status="PASS" starttime="20201029 18:18:05.426" endtime="20201029 18:18:05.430"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:05.434" level="INFO">${OVERHEAD} = {'diff': [5.4309999999446745e-06, 5.444999999992817e-06, 5.443999999910076e-06, 5.4579999999582185e-06, 5.459000000040959e-06, 5.443999999910076e-06, 5.4309999999446745e-06, 5.416000000035837e-06, 5.4...</msg>
<status status="PASS" starttime="20201029 18:18:05.430" endtime="20201029 18:18:05.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:05.438" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:05.437" endtime="20201029 18:18:05.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:05.441" level="INFO">VALUE: [5.4309999999446745e-06, 5.444999999992817e-06, 5.443999999910076e-06, 5.4579999999582185e-06, 5.459000000040959e-06, 5.443999999910076e-06, 5.4309999999446745e-06, 5.416000000035837e-06, 5.417000000118577e-06, 5.417000000118577e-06, 5.389000000022293e-06, 5.4309999999446745e-06, 5.444000000132121e-06, 5.360999999926008e-06, 5.4579999999582185e-06, 5.417000000118577e-06, 5.417000000118577e-06, 5.444999999992817e-06, 5.429999999861934e-06, 5.416999999896532e-06, 5.416999999896532e-06, 5.444999999992817e-06, 5.417000000118577e-06, 5.443999999910076e-06, 5.444000000132121e-06, 5.472000000006361e-06, 5.430000000083979e-06, 5.430000000083979e-06, 5.401999999987694e-06, 5.430000000083979e-06, 5.443999999910076e-06, 5.472000000006361e-06, 5.4579999999582185e-06, 5.4579999999582185e-06, 5.416999999896532e-06, 5.416000000035837e-06, 5.4579999999582185e-06, 5.40299999984839e-06, 5.444999999992817e-06, 5.416000000035837e-06, 5.416999999896532e-06, 5.401999999987694e-06, 5.4309999999446745e-06, 5.459000000040959e-06, 5.459000000040959e-06, 5.4309999999446745e-06, 5.403000000070435e-06, 5.458999999818914e-06, 5.417000000118577e-06, 5.443999999910076e-06, 5.429999999861934e-06, 5.430000000083979e-06, 5.389000000022293e-06, 5.416999999896532e-06, 5.431000000166719e-06, 5.4579999999582185e-06, 5.472000000006361e-06, 5.472000000006361e-06, 5.416000000035837e-06, 5.431000000166719e-06, 5.459000000040959e-06, 5.444999999992817e-06, 5.444000000132121e-06, 5.416999999896532e-06]</msg>
<status status="PASS" starttime="20201029 18:18:05.439" endtime="20201029 18:18:05.441"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.435" endtime="20201029 18:18:05.442"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.064" endtime="20201029 18:18:05.442"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.064" endtime="20201029 18:18:05.442"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:05.451" endtime="20201029 18:18:05.467"></status>
</kw>
<msg timestamp="20201029 18:18:05.467" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:05.448" endtime="20201029 18:18:05.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:05.470" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:05.468" endtime="20201029 18:18:05.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:05.471" endtime="20201029 18:18:05.472"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.446" endtime="20201029 18:18:05.473"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.444" endtime="20201029 18:18:05.473"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:05.480" endtime="20201029 18:18:05.780"></status>
</kw>
<msg timestamp="20201029 18:18:05.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.525438931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.525444361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:05.478" endtime="20201029 18:18:05.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:05.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.525438931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.525444361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:05.786" endtime="20201029 18:18:05.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:05.796" endtime="20201029 18:18:05.798"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.476" endtime="20201029 18:18:05.798"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.474" endtime="20201029 18:18:05.799"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:05.803" level="INFO">${RESULT} = [{'diff': 5.429999999861934e-06}, {'diff': 5.430000000083979e-06}, {'diff': 5.389000000022293e-06}, {'diff': 5.416999999896532e-06}, {'diff': 5.431000000166719e-06}, {'diff': 5.4579999999582185e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:18:05.799" endtime="20201029 18:18:05.803"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:05.808" level="INFO">${OVERHEAD} = {'diff': [5.429999999861934e-06, 5.430000000083979e-06, 5.389000000022293e-06, 5.416999999896532e-06, 5.431000000166719e-06, 5.4579999999582185e-06, 5.472000000006361e-06, 5.472000000006361e-06, 5.416...</msg>
<status status="PASS" starttime="20201029 18:18:05.804" endtime="20201029 18:18:05.808"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:05.812" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:05.811" endtime="20201029 18:18:05.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:05.815" level="INFO">VALUE: [5.429999999861934e-06, 5.430000000083979e-06, 5.389000000022293e-06, 5.416999999896532e-06, 5.431000000166719e-06, 5.4579999999582185e-06, 5.472000000006361e-06, 5.472000000006361e-06, 5.416000000035837e-06, 5.431000000166719e-06, 5.459000000040959e-06, 5.444999999992817e-06, 5.444000000132121e-06, 5.416999999896532e-06, 5.443999999910076e-06, 5.416999999896532e-06, 5.416000000035837e-06, 5.444999999992817e-06, 5.459000000040959e-06, 5.403000000070435e-06, 5.444999999992817e-06, 5.416000000035837e-06, 5.416999999896532e-06, 5.431000000166719e-06, 5.416999999896532e-06, 5.403000000070435e-06, 5.40299999984839e-06, 5.443999999910076e-06, 5.514000000150787e-06, 5.4579999999582185e-06, 5.4579999999582185e-06, 5.486000000054503e-06, 5.444999999992817e-06, 5.485999999832458e-06, 5.4309999999446745e-06, 5.4309999999446745e-06, 5.417000000118577e-06, 5.415999999813792e-06, 5.514000000150787e-06, 5.417000000118577e-06, 5.417000000118577e-06, 5.444999999992817e-06, 5.430000000083979e-06, 5.401999999987694e-06, 5.444999999992817e-06, 5.416000000035837e-06, 5.443999999910076e-06, 5.443999999910076e-06, 5.430000000083979e-06, 5.486000000054503e-06, 5.4309999999446745e-06, 5.444000000132121e-06, 5.3749999999741505e-06, 5.431000000166719e-06, 5.443999999910076e-06, 5.416999999896532e-06, 5.472000000006361e-06, 5.416000000035837e-06, 5.403000000070435e-06, 5.416999999896532e-06, 5.4579999999582185e-06, 5.416999999896532e-06, 5.415999999813792e-06, 5.4309999999446745e-06]</msg>
<status status="PASS" starttime="20201029 18:18:05.813" endtime="20201029 18:18:05.815"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.809" endtime="20201029 18:18:05.816"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.443" endtime="20201029 18:18:05.816"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.443" endtime="20201029 18:18:05.816"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:05.824" endtime="20201029 18:18:05.838"></status>
</kw>
<msg timestamp="20201029 18:18:05.839" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:05.822" endtime="20201029 18:18:05.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:05.841" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:05.840" endtime="20201029 18:18:05.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:05.842" endtime="20201029 18:18:05.844"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.820" endtime="20201029 18:18:05.844"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.818" endtime="20201029 18:18:05.845"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:05.851" endtime="20201029 18:18:06.153"></status>
</kw>
<msg timestamp="20201029 18:18:06.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.893173111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.893178542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:05.849" endtime="20201029 18:18:06.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:06.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.893173111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.893178542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:06.158" endtime="20201029 18:18:06.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:06.168" endtime="20201029 18:18:06.170"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.847" endtime="20201029 18:18:06.170"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.845" endtime="20201029 18:18:06.171"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:06.175" level="INFO">${RESULT} = [{'diff': 5.4309999999446745e-06}, {'diff': 5.444000000132121e-06}, {'diff': 5.3749999999741505e-06}, {'diff': 5.431000000166719e-06}, {'diff': 5.443999999910076e-06}, {'diff': 5.416999999896532e-06},...</msg>
<status status="PASS" starttime="20201029 18:18:06.172" endtime="20201029 18:18:06.176"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:06.181" level="INFO">${OVERHEAD} = {'diff': [5.4309999999446745e-06, 5.444000000132121e-06, 5.3749999999741505e-06, 5.431000000166719e-06, 5.443999999910076e-06, 5.416999999896532e-06, 5.472000000006361e-06, 5.416000000035837e-06, 5.40...</msg>
<status status="PASS" starttime="20201029 18:18:06.176" endtime="20201029 18:18:06.181"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:06.185" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:06.184" endtime="20201029 18:18:06.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:06.188" level="INFO">VALUE: [5.4309999999446745e-06, 5.444000000132121e-06, 5.3749999999741505e-06, 5.431000000166719e-06, 5.443999999910076e-06, 5.416999999896532e-06, 5.472000000006361e-06, 5.416000000035837e-06, 5.403000000070435e-06, 5.416999999896532e-06, 5.4579999999582185e-06, 5.416999999896532e-06, 5.415999999813792e-06, 5.4309999999446745e-06, 5.429999999861934e-06, 5.459000000040959e-06, 5.443999999688032e-06, 5.485999999610414e-06, 5.431000000388764e-06, 5.4309999999446745e-06, 5.417000000118577e-06, 5.4309999999446745e-06, 5.40299999984839e-06, 5.472000000228405e-06, 5.472000000228405e-06, 5.374999999752106e-06, 5.444999999770772e-06, 5.444999999770772e-06, 5.416000000035837e-06, 5.416999999674488e-06, 5.430000000306023e-06, 5.443999999688032e-06, 5.429999999861934e-06, 5.417000000118577e-06, 5.416000000035837e-06, 5.444000000132121e-06, 5.416999999674488e-06, 5.486000000054503e-06, 5.486999999693154e-06, 5.417000000118577e-06, 5.4729999998670564e-06, 5.416000000035837e-06, 5.4579999999582185e-06, 5.360999999926008e-06, 5.389000000022293e-06, 5.4309999999446745e-06, 5.444000000132121e-06, 5.4729999998670564e-06, 5.445000000214861e-06, 5.374999999752106e-06, 5.486000000054503e-06, 5.444000000132121e-06, 5.417000000118577e-06, 5.444000000132121e-06, 5.4309999999446745e-06, 5.417000000118577e-06, 5.444000000132121e-06, 5.444999999770772e-06, 5.430000000306023e-06, 5.444999999770772e-06, 5.444000000132121e-06, 5.459000000040959e-06, 5.429999999861934e-06, 5.362000000008749e-06]</msg>
<status status="PASS" starttime="20201029 18:18:06.187" endtime="20201029 18:18:06.188"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.182" endtime="20201029 18:18:06.189"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.817" endtime="20201029 18:18:06.189"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.817" endtime="20201029 18:18:06.189"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:06.197" endtime="20201029 18:18:06.215"></status>
</kw>
<msg timestamp="20201029 18:18:06.215" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:06.196" endtime="20201029 18:18:06.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:06.218" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:06.216" endtime="20201029 18:18:06.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:06.219" endtime="20201029 18:18:06.220"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.193" endtime="20201029 18:18:06.221"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.191" endtime="20201029 18:18:06.221"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:06.228" endtime="20201029 18:18:06.536"></status>
</kw>
<msg timestamp="20201029 18:18:06.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.254064861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.254070347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:06.226" endtime="20201029 18:18:06.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:06.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.254064861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.254070347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:06.541" endtime="20201029 18:18:06.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:06.551" endtime="20201029 18:18:06.552"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.224" endtime="20201029 18:18:06.553"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.222" endtime="20201029 18:18:06.553"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:06.558" level="INFO">${RESULT} = [{'diff': 5.486000000054503e-06}, {'diff': 5.444000000132121e-06}, {'diff': 5.417000000118577e-06}, {'diff': 5.444000000132121e-06}, {'diff': 5.4309999999446745e-06}, {'diff': 5.417000000118577e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:18:06.554" endtime="20201029 18:18:06.558"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:06.562" level="INFO">${OVERHEAD} = {'diff': [5.486000000054503e-06, 5.444000000132121e-06, 5.417000000118577e-06, 5.444000000132121e-06, 5.4309999999446745e-06, 5.417000000118577e-06, 5.444000000132121e-06, 5.444999999770772e-06, 5.430...</msg>
<status status="PASS" starttime="20201029 18:18:06.559" endtime="20201029 18:18:06.562"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:06.566" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:06.565" endtime="20201029 18:18:06.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:06.569" level="INFO">VALUE: [5.486000000054503e-06, 5.444000000132121e-06, 5.417000000118577e-06, 5.444000000132121e-06, 5.4309999999446745e-06, 5.417000000118577e-06, 5.444000000132121e-06, 5.444999999770772e-06, 5.430000000306023e-06, 5.444999999770772e-06, 5.444000000132121e-06, 5.459000000040959e-06, 5.429999999861934e-06, 5.362000000008749e-06, 5.444000000132121e-06, 5.416000000035837e-06, 5.403000000292479e-06, 5.4309999999446745e-06, 5.4309999999446745e-06, 5.4579999999582185e-06, 5.4309999999446745e-06, 5.444999999770772e-06, 5.40299999984839e-06, 5.4309999999446745e-06, 5.416999999674488e-06, 5.444000000132121e-06, 5.429999999861934e-06, 5.40299999984839e-06, 5.443999999688032e-06, 5.402000000209739e-06, 5.486000000054503e-06, 5.444000000132121e-06, 5.443999999688032e-06, 5.4309999999446745e-06, 5.4579999999582185e-06, 5.4579999999582185e-06, 5.444000000132121e-06, 5.444000000132121e-06, 5.459000000040959e-06, 5.444999999770772e-06, 5.527999999976885e-06, 5.459000000040959e-06, 5.444000000132121e-06, 5.444000000132121e-06, 5.375000000196195e-06, 5.4999999998806e-06, 5.444000000132121e-06, 5.443999999688032e-06, 5.444000000132121e-06, 5.4309999999446745e-06, 5.416000000035837e-06, 5.443999999688032e-06, 5.443999999688032e-06, 5.445000000214861e-06, 5.444000000132121e-06, 5.416000000035837e-06, 5.430000000306023e-06, 5.444000000132121e-06, 5.459000000040959e-06, 5.444000000132121e-06, 5.4579999999582185e-06, 5.430000000306023e-06, 5.445000000214861e-06, 5.471999999784316e-06]</msg>
<status status="PASS" starttime="20201029 18:18:06.567" endtime="20201029 18:18:06.569"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.563" endtime="20201029 18:18:06.570"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.190" endtime="20201029 18:18:06.570"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.190" endtime="20201029 18:18:06.570"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:06.579" endtime="20201029 18:18:06.598"></status>
</kw>
<msg timestamp="20201029 18:18:06.598" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:06.577" endtime="20201029 18:18:06.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:06.601" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:06.599" endtime="20201029 18:18:06.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:06.602" endtime="20201029 18:18:06.603"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.574" endtime="20201029 18:18:06.604"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.572" endtime="20201029 18:18:06.604"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:06.611" endtime="20201029 18:18:06.929"></status>
</kw>
<msg timestamp="20201029 18:18:06.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.620894778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.620900194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:06.609" endtime="20201029 18:18:06.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:06.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.620894778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.620900194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:06.934" endtime="20201029 18:18:06.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:06.944" endtime="20201029 18:18:06.946"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.607" endtime="20201029 18:18:06.946"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.605" endtime="20201029 18:18:06.947"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:06.951" level="INFO">${RESULT} = [{'diff': 5.416000000035837e-06}, {'diff': 5.443999999688032e-06}, {'diff': 5.443999999688032e-06}, {'diff': 5.445000000214861e-06}, {'diff': 5.444000000132121e-06}, {'diff': 5.416000000035837e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:18:06.947" endtime="20201029 18:18:06.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:06.956" level="INFO">${OVERHEAD} = {'diff': [5.416000000035837e-06, 5.443999999688032e-06, 5.443999999688032e-06, 5.445000000214861e-06, 5.444000000132121e-06, 5.416000000035837e-06, 5.430000000306023e-06, 5.444000000132121e-06, 5.4590...</msg>
<status status="PASS" starttime="20201029 18:18:06.952" endtime="20201029 18:18:06.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:06.960" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:06.959" endtime="20201029 18:18:06.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:06.963" level="INFO">VALUE: [5.416000000035837e-06, 5.443999999688032e-06, 5.443999999688032e-06, 5.445000000214861e-06, 5.444000000132121e-06, 5.416000000035837e-06, 5.430000000306023e-06, 5.444000000132121e-06, 5.459000000040959e-06, 5.444000000132121e-06, 5.4579999999582185e-06, 5.430000000306023e-06, 5.445000000214861e-06, 5.471999999784316e-06, 5.40299999984839e-06, 5.443999999688032e-06, 5.444000000132121e-06, 5.416999999674488e-06, 5.443999999688032e-06, 5.375000000196195e-06, 5.4309999999446745e-06, 5.416000000035837e-06, 5.4579999999582185e-06, 5.4309999999446745e-06, 5.444000000132121e-06, 5.429999999861934e-06, 5.417000000118577e-06, 5.360999999926008e-06, 5.417000000118577e-06, 5.4309999999446745e-06, 5.430000000306023e-06, 5.403000000292479e-06, 5.402000000209739e-06, 5.416000000035837e-06, 5.40299999984839e-06, 5.4309999999446745e-06, 5.45899999959687e-06, 5.4579999999582185e-06, 5.486000000054503e-06, 5.4309999999446745e-06, 5.415999999591747e-06, 5.417000000118577e-06, 5.40299999984839e-06, 5.417000000118577e-06, 5.4579999999582185e-06, 5.429999999861934e-06, 5.4309999999446745e-06, 5.4579999999582185e-06, 5.443999999688032e-06, 5.403000000292479e-06, 5.429999999861934e-06, 5.416000000035837e-06, 5.40299999984839e-06, 5.431000000388764e-06, 5.429999999861934e-06, 5.4309999999446745e-06, 5.445000000214861e-06, 5.4309999999446745e-06, 5.4309999999446745e-06, 5.444000000132121e-06, 5.443999999688032e-06, 5.487000000137243e-06, 5.471999999784316e-06, 5.40299999984839e-06]</msg>
<status status="PASS" starttime="20201029 18:18:06.961" endtime="20201029 18:18:06.963"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.957" endtime="20201029 18:18:06.964"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.571" endtime="20201029 18:18:06.964"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.571" endtime="20201029 18:18:06.964"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:06.972" endtime="20201029 18:18:06.989"></status>
</kw>
<msg timestamp="20201029 18:18:06.989" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:06.971" endtime="20201029 18:18:06.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:06.992" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:06.990" endtime="20201029 18:18:06.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:06.993" endtime="20201029 18:18:06.994"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.968" endtime="20201029 18:18:06.995"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.966" endtime="20201029 18:18:06.995"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:07.002" endtime="20201029 18:18:07.318"></status>
</kw>
<msg timestamp="20201029 18:18:07.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.992754153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.992759583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:07.001" endtime="20201029 18:18:07.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:07.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.992754153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.992759583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:07.323" endtime="20201029 18:18:07.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:07.333" endtime="20201029 18:18:07.335"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.998" endtime="20201029 18:18:07.335"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.996" endtime="20201029 18:18:07.336"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:07.340" level="INFO">${RESULT} = [{'diff': 5.429999999861934e-06}, {'diff': 5.416000000035837e-06}, {'diff': 5.40299999984839e-06}, {'diff': 5.431000000388764e-06}, {'diff': 5.429999999861934e-06}, {'diff': 5.4309999999446745e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:18:07.336" endtime="20201029 18:18:07.340"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:07.345" level="INFO">${OVERHEAD} = {'diff': [5.429999999861934e-06, 5.416000000035837e-06, 5.40299999984839e-06, 5.431000000388764e-06, 5.429999999861934e-06, 5.4309999999446745e-06, 5.445000000214861e-06, 5.4309999999446745e-06, 5.430...</msg>
<status status="PASS" starttime="20201029 18:18:07.341" endtime="20201029 18:18:07.345"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:07.349" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:07.348" endtime="20201029 18:18:07.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:07.352" level="INFO">VALUE: [5.429999999861934e-06, 5.416000000035837e-06, 5.40299999984839e-06, 5.431000000388764e-06, 5.429999999861934e-06, 5.4309999999446745e-06, 5.445000000214861e-06, 5.4309999999446745e-06, 5.4309999999446745e-06, 5.444000000132121e-06, 5.443999999688032e-06, 5.487000000137243e-06, 5.471999999784316e-06, 5.40299999984839e-06, 5.429999999861934e-06, 5.486000000054503e-06, 5.417000000118577e-06, 5.416000000035837e-06, 5.472000000228405e-06, 5.4309999999446745e-06, 5.4309999999446745e-06, 5.445000000214861e-06, 5.430000000306023e-06, 5.4309999999446745e-06, 5.429999999861934e-06, 5.417000000118577e-06, 5.429999999861934e-06, 5.4309999999446745e-06, 5.4309999999446745e-06, 5.4309999999446745e-06, 5.445000000214861e-06, 5.4309999999446745e-06, 5.417000000118577e-06, 5.4309999999446745e-06, 5.417000000118577e-06, 5.417000000118577e-06, 5.416999999674488e-06, 5.417000000118577e-06, 5.429999999861934e-06, 5.416000000035837e-06, 5.445000000214861e-06, 5.430000000306023e-06, 5.416000000035837e-06, 5.417000000118577e-06, 5.417000000118577e-06, 5.417000000118577e-06, 5.4309999999446745e-06, 5.4309999999446745e-06, 5.403000000292479e-06, 5.4579999999582185e-06, 5.444000000132121e-06, 5.444000000132121e-06, 5.444000000132121e-06, 5.417000000118577e-06, 5.445000000214861e-06, 5.444000000132121e-06, 5.445000000214861e-06, 5.416000000035837e-06, 5.445000000214861e-06, 5.486000000054503e-06, 5.4309999999446745e-06, 5.429999999861934e-06, 5.472000000228405e-06, 5.445000000214861e-06]</msg>
<status status="PASS" starttime="20201029 18:18:07.350" endtime="20201029 18:18:07.352"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.346" endtime="20201029 18:18:07.353"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.965" endtime="20201029 18:18:07.353"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.965" endtime="20201029 18:18:07.353"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:07.361" endtime="20201029 18:18:07.375"></status>
</kw>
<msg timestamp="20201029 18:18:07.376" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:07.359" endtime="20201029 18:18:07.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:07.378" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:07.377" endtime="20201029 18:18:07.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:07.379" endtime="20201029 18:18:07.381"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.357" endtime="20201029 18:18:07.381"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.355" endtime="20201029 18:18:07.382"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:07.390" endtime="20201029 18:18:07.701"></status>
</kw>
<msg timestamp="20201029 18:18:07.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.375563681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.375569125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:07.387" endtime="20201029 18:18:07.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:07.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.375563681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.375569125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:07.706" endtime="20201029 18:18:07.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:07.716" endtime="20201029 18:18:07.718"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.385" endtime="20201029 18:18:07.718"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.382" endtime="20201029 18:18:07.719"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:07.723" level="INFO">${RESULT} = [{'diff': 5.444000000132121e-06}, {'diff': 5.444000000132121e-06}, {'diff': 5.444000000132121e-06}, {'diff': 5.417000000118577e-06}, {'diff': 5.445000000214861e-06}, {'diff': 5.444000000132121e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:18:07.720" endtime="20201029 18:18:07.723"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:07.728" level="INFO">${OVERHEAD} = {'diff': [5.444000000132121e-06, 5.444000000132121e-06, 5.444000000132121e-06, 5.417000000118577e-06, 5.445000000214861e-06, 5.444000000132121e-06, 5.445000000214861e-06, 5.416000000035837e-06, 5.4450...</msg>
<status status="PASS" starttime="20201029 18:18:07.724" endtime="20201029 18:18:07.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:07.732" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:07.731" endtime="20201029 18:18:07.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:07.734" level="INFO">VALUE: [5.444000000132121e-06, 5.444000000132121e-06, 5.444000000132121e-06, 5.417000000118577e-06, 5.445000000214861e-06, 5.444000000132121e-06, 5.445000000214861e-06, 5.416000000035837e-06, 5.445000000214861e-06, 5.486000000054503e-06, 5.4309999999446745e-06, 5.429999999861934e-06, 5.472000000228405e-06, 5.445000000214861e-06, 5.429999999861934e-06, 5.444000000132121e-06, 5.444000000132121e-06, 5.417000000118577e-06, 5.444999999770772e-06, 5.4579999999582185e-06, 5.444999999770772e-06, 5.444999999770772e-06, 5.444000000132121e-06, 5.387999999939552e-06, 5.4579999999582185e-06, 5.416999999674488e-06, 5.360999999926008e-06, 5.40199999976565e-06, 5.486000000054503e-06, 5.4309999999446745e-06, 5.444999999770772e-06, 5.444000000132121e-06, 5.4309999999446745e-06, 5.471999999784316e-06, 5.444999999770772e-06, 5.40299999984839e-06, 5.443999999688032e-06, 5.374999999752106e-06, 5.430000000306023e-06, 5.403000000292479e-06, 5.416000000035837e-06, 5.430000000306023e-06, 5.417000000118577e-06, 5.514000000150787e-06, 5.4309999999446745e-06, 5.4579999999582185e-06, 5.4579999999582185e-06, 5.4579999999582185e-06, 5.443999999688032e-06, 5.4579999999582185e-06, 5.444999999770772e-06, 5.445000000214861e-06, 5.444999999770772e-06, 5.416999999674488e-06, 5.429999999861934e-06, 5.403000000292479e-06, 5.403000000292479e-06, 5.416000000035837e-06, 5.40299999984839e-06, 5.417000000118577e-06, 5.443999999688032e-06, 5.417000000118577e-06, 5.445000000214861e-06, 5.4309999999446745e-06]</msg>
<status status="PASS" starttime="20201029 18:18:07.733" endtime="20201029 18:18:07.735"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.729" endtime="20201029 18:18:07.735"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.354" endtime="20201029 18:18:07.736"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.354" endtime="20201029 18:18:07.736"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:07.745" endtime="20201029 18:18:07.767"></status>
</kw>
<msg timestamp="20201029 18:18:07.767" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:07.743" endtime="20201029 18:18:07.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:07.769" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:07.768" endtime="20201029 18:18:07.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:07.770" endtime="20201029 18:18:07.772"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.740" endtime="20201029 18:18:07.773"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.738" endtime="20201029 18:18:07.773"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:07.780" endtime="20201029 18:18:08.097"></status>
</kw>
<msg timestamp="20201029 18:18:08.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.751551944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.751557389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:07.778" endtime="20201029 18:18:08.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:08.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.751551944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.751557389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:08.102" endtime="20201029 18:18:08.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:08.112" endtime="20201029 18:18:08.114"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.776" endtime="20201029 18:18:08.114"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.774" endtime="20201029 18:18:08.115"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:08.119" level="INFO">${RESULT} = [{'diff': 5.444999999770772e-06}, {'diff': 5.445000000214861e-06}, {'diff': 5.444999999770772e-06}, {'diff': 5.416999999674488e-06}, {'diff': 5.429999999861934e-06}, {'diff': 5.403000000292479e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:18:08.115" endtime="20201029 18:18:08.119"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:08.126" level="INFO">${OVERHEAD} = {'diff': [5.444999999770772e-06, 5.445000000214861e-06, 5.444999999770772e-06, 5.416999999674488e-06, 5.429999999861934e-06, 5.403000000292479e-06, 5.403000000292479e-06, 5.416000000035837e-06, 5.4029...</msg>
<status status="PASS" starttime="20201029 18:18:08.120" endtime="20201029 18:18:08.126"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:08.130" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:08.129" endtime="20201029 18:18:08.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:08.133" level="INFO">VALUE: [5.444999999770772e-06, 5.445000000214861e-06, 5.444999999770772e-06, 5.416999999674488e-06, 5.429999999861934e-06, 5.403000000292479e-06, 5.403000000292479e-06, 5.416000000035837e-06, 5.40299999984839e-06, 5.417000000118577e-06, 5.443999999688032e-06, 5.417000000118577e-06, 5.445000000214861e-06, 5.4309999999446745e-06, 5.416999999674488e-06, 5.486000000054503e-06, 5.444000000132121e-06, 5.430000000750113e-06, 5.416000000479926e-06, 5.471999999784316e-06, 5.415999999591747e-06, 5.445000000214861e-06, 5.444000000132121e-06, 5.4309999999446745e-06, 5.347000000099911e-06, 5.445000000214861e-06, 5.429999999861934e-06, 5.444999999326683e-06, 5.487000000137243e-06, 5.4309999999446745e-06, 5.429999999861934e-06, 5.417000000562666e-06, 5.4309999999446745e-06, 5.417000000562666e-06, 5.417000000562666e-06, 5.444000000132121e-06, 5.403000000292479e-06, 5.416000000479926e-06, 5.444000000132121e-06, 5.4309999999446745e-06, 5.4309999999446745e-06, 5.471999999784316e-06, 5.444000000132121e-06, 5.416999999674488e-06, 5.4309999999446745e-06, 5.444999999326683e-06, 5.457999999514129e-06, 5.429999999861934e-06, 5.4309999999446745e-06, 5.417000000562666e-06, 5.4439999992439425e-06, 5.457999999514129e-06, 5.415999999591747e-06, 5.445000000214861e-06, 5.4729999998670564e-06, 5.445000000214861e-06, 5.374999999752106e-06, 5.4309999999446745e-06, 5.416000000479926e-06, 5.430000000750113e-06, 5.429999999861934e-06, 5.45899999959687e-06, 5.444000000132121e-06, 5.444000000132121e-06]</msg>
<status status="PASS" starttime="20201029 18:18:08.131" endtime="20201029 18:18:08.133"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.127" endtime="20201029 18:18:08.134"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.737" endtime="20201029 18:18:08.134"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.736" endtime="20201029 18:18:08.134"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:08.142" endtime="20201029 18:18:08.159"></status>
</kw>
<msg timestamp="20201029 18:18:08.159" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:08.140" endtime="20201029 18:18:08.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:08.161" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:08.160" endtime="20201029 18:18:08.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:08.162" endtime="20201029 18:18:08.164"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.138" endtime="20201029 18:18:08.165"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.136" endtime="20201029 18:18:08.165"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:08.172" endtime="20201029 18:18:08.484"></status>
</kw>
<msg timestamp="20201029 18:18:08.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.127524625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.127530069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:08.170" endtime="20201029 18:18:08.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:08.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.127524625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.127530069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:08.489" endtime="20201029 18:18:08.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:08.499" endtime="20201029 18:18:08.501"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.168" endtime="20201029 18:18:08.501"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.166" endtime="20201029 18:18:08.502"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:08.507" level="INFO">${RESULT} = [{'diff': 5.4439999992439425e-06}, {'diff': 5.457999999514129e-06}, {'diff': 5.415999999591747e-06}, {'diff': 5.445000000214861e-06}, {'diff': 5.4729999998670564e-06}, {'diff': 5.445000000214861e-06},...</msg>
<status status="PASS" starttime="20201029 18:18:08.502" endtime="20201029 18:18:08.507"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:08.511" level="INFO">${OVERHEAD} = {'diff': [5.4439999992439425e-06, 5.457999999514129e-06, 5.415999999591747e-06, 5.445000000214861e-06, 5.4729999998670564e-06, 5.445000000214861e-06, 5.374999999752106e-06, 5.4309999999446745e-06, 5.4...</msg>
<status status="PASS" starttime="20201029 18:18:08.508" endtime="20201029 18:18:08.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:08.515" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:08.514" endtime="20201029 18:18:08.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:08.518" level="INFO">VALUE: [5.4439999992439425e-06, 5.457999999514129e-06, 5.415999999591747e-06, 5.445000000214861e-06, 5.4729999998670564e-06, 5.445000000214861e-06, 5.374999999752106e-06, 5.4309999999446745e-06, 5.416000000479926e-06, 5.430000000750113e-06, 5.429999999861934e-06, 5.45899999959687e-06, 5.444000000132121e-06, 5.444000000132121e-06, 5.429999999861934e-06, 5.444999999326683e-06, 5.513999999706698e-06, 5.444000000132121e-06, 5.444000000132121e-06, 5.430000000750113e-06, 5.429999999861934e-06, 5.459000000485048e-06, 5.4309999999446745e-06, 5.403000000292479e-06, 5.429999999861934e-06, 5.416000000479926e-06, 5.444000000132121e-06, 5.429999999861934e-06, 5.416999999674488e-06, 5.444000000132121e-06, 5.45899999959687e-06, 5.444000000132121e-06, 5.429999999861934e-06, 5.403000000292479e-06, 5.458000000402308e-06, 5.4309999999446745e-06, 5.402999999404301e-06, 5.429999999861934e-06, 5.444000000132121e-06, 5.45899999959687e-06, 5.4309999999446745e-06, 5.444000000132121e-06, 5.415999999591747e-06, 5.403000000292479e-06, 5.402000000209739e-06, 5.415999999591747e-06, 5.417000000562666e-06, 5.445000000214861e-06, 5.444999999326683e-06, 5.471999999784316e-06, 5.444000000132121e-06, 5.4439999992439425e-06, 5.471999999784316e-06, 5.4309999999446745e-06, 5.417000000562666e-06, 5.429999999861934e-06, 5.429999999861934e-06, 5.360999999481919e-06, 5.445000000214861e-06, 5.403000000292479e-06, 5.431000000832853e-06, 5.416000000479926e-06, 5.416999999674488e-06, 5.444000000132121e-06]</msg>
<status status="PASS" starttime="20201029 18:18:08.516" endtime="20201029 18:18:08.518"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.512" endtime="20201029 18:18:08.519"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.135" endtime="20201029 18:18:08.519"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.135" endtime="20201029 18:18:08.519"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:08.527" endtime="20201029 18:18:08.541"></status>
</kw>
<msg timestamp="20201029 18:18:08.542" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:08.526" endtime="20201029 18:18:08.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:08.544" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:08.543" endtime="20201029 18:18:08.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:08.546" endtime="20201029 18:18:08.548"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.523" endtime="20201029 18:18:08.549"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.521" endtime="20201029 18:18:08.549"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:08.555" endtime="20201029 18:18:08.872"></status>
</kw>
<msg timestamp="20201029 18:18:08.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.515333653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.515339097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:08.554" endtime="20201029 18:18:08.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:08.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.515333653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.515339097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:08.877" endtime="20201029 18:18:08.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:08.887" endtime="20201029 18:18:08.888"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.551" endtime="20201029 18:18:08.889"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.550" endtime="20201029 18:18:08.889"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:08.893" level="INFO">${RESULT} = [{'diff': 5.444000000132121e-06}, {'diff': 5.4439999992439425e-06}, {'diff': 5.471999999784316e-06}, {'diff': 5.4309999999446745e-06}, {'diff': 5.417000000562666e-06}, {'diff': 5.429999999861934e-06},...</msg>
<status status="PASS" starttime="20201029 18:18:08.890" endtime="20201029 18:18:08.894"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:08.898" level="INFO">${OVERHEAD} = {'diff': [5.444000000132121e-06, 5.4439999992439425e-06, 5.471999999784316e-06, 5.4309999999446745e-06, 5.417000000562666e-06, 5.429999999861934e-06, 5.429999999861934e-06, 5.360999999481919e-06, 5.44...</msg>
<status status="PASS" starttime="20201029 18:18:08.894" endtime="20201029 18:18:08.899"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:08.903" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:08.901" endtime="20201029 18:18:08.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:08.905" level="INFO">VALUE: [5.444000000132121e-06, 5.4439999992439425e-06, 5.471999999784316e-06, 5.4309999999446745e-06, 5.417000000562666e-06, 5.429999999861934e-06, 5.429999999861934e-06, 5.360999999481919e-06, 5.445000000214861e-06, 5.403000000292479e-06, 5.431000000832853e-06, 5.416000000479926e-06, 5.416999999674488e-06, 5.444000000132121e-06, 5.416000000479926e-06, 5.416999999674488e-06, 5.471999999784316e-06, 5.445000000214861e-06, 5.402000000209739e-06, 5.403000000292479e-06, 5.402999999404301e-06, 5.415999999591747e-06, 5.4729999998670564e-06, 5.445000000214861e-06, 5.417000000562666e-06, 5.444000000132121e-06, 5.445000000214861e-06, 5.417000000562666e-06, 5.444999999326683e-06, 5.374999999752106e-06, 5.389000000022293e-06, 5.444000000132121e-06, 5.4309999999446745e-06, 5.486000000054503e-06, 5.4309999999446745e-06, 5.402999999404301e-06, 5.403000000292479e-06, 5.429999999861934e-06, 5.417000000562666e-06, 5.375000000640284e-06, 5.416999999674488e-06, 5.4309999999446745e-06, 5.445000000214861e-06, 5.4729999998670564e-06, 5.487000000137243e-06, 5.417000000562666e-06, 5.4309999999446745e-06, 5.486000000054503e-06, 5.416999999674488e-06, 5.416999999674488e-06, 5.4309999999446745e-06, 5.415999999591747e-06, 5.416000000479926e-06, 5.444000000132121e-06, 5.429999999861934e-06, 5.485999999166324e-06, 5.429999999861934e-06, 5.445000000214861e-06, 5.4309999999446745e-06, 5.403000000292479e-06, 5.429999999861934e-06, 5.486000000054503e-06, 5.3610000003700975e-06, 5.4309999999446745e-06]</msg>
<status status="PASS" starttime="20201029 18:18:08.904" endtime="20201029 18:18:08.905"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.899" endtime="20201029 18:18:08.906"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.520" endtime="20201029 18:18:08.906"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.520" endtime="20201029 18:18:08.907"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:08.914" endtime="20201029 18:18:08.928"></status>
</kw>
<msg timestamp="20201029 18:18:08.928" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:08.913" endtime="20201029 18:18:08.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:08.931" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:08.929" endtime="20201029 18:18:08.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:08.932" endtime="20201029 18:18:08.934"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.910" endtime="20201029 18:18:08.934"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.908" endtime="20201029 18:18:08.935"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:08.941" endtime="20201029 18:18:09.257"></status>
</kw>
<msg timestamp="20201029 18:18:09.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.886304486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.886309917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:08.940" endtime="20201029 18:18:09.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:09.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.886304486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.886309917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:09.261" endtime="20201029 18:18:09.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:09.271" endtime="20201029 18:18:09.273"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.937" endtime="20201029 18:18:09.274"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.935" endtime="20201029 18:18:09.274"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:09.278" level="INFO">${RESULT} = [{'diff': 5.4309999999446745e-06}, {'diff': 5.415999999591747e-06}, {'diff': 5.416000000479926e-06}, {'diff': 5.444000000132121e-06}, {'diff': 5.429999999861934e-06}, {'diff': 5.485999999166324e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:18:09.275" endtime="20201029 18:18:09.279"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:09.284" level="INFO">${OVERHEAD} = {'diff': [5.4309999999446745e-06, 5.415999999591747e-06, 5.416000000479926e-06, 5.444000000132121e-06, 5.429999999861934e-06, 5.485999999166324e-06, 5.429999999861934e-06, 5.445000000214861e-06, 5.430...</msg>
<status status="PASS" starttime="20201029 18:18:09.279" endtime="20201029 18:18:09.284"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:09.288" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:09.287" endtime="20201029 18:18:09.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:09.291" level="INFO">VALUE: [5.4309999999446745e-06, 5.415999999591747e-06, 5.416000000479926e-06, 5.444000000132121e-06, 5.429999999861934e-06, 5.485999999166324e-06, 5.429999999861934e-06, 5.445000000214861e-06, 5.4309999999446745e-06, 5.403000000292479e-06, 5.429999999861934e-06, 5.486000000054503e-06, 5.3610000003700975e-06, 5.4309999999446745e-06, 5.445000000214861e-06, 5.417000000562666e-06, 5.459000000485048e-06, 5.471999999784316e-06, 5.416999999674488e-06, 5.403000000292479e-06, 5.416000000479926e-06, 5.416999999674488e-06, 5.4309999999446745e-06, 5.417000000562666e-06, 5.4439999992439425e-06, 5.403000000292479e-06, 5.444000000132121e-06, 5.457999999514129e-06, 5.444000000132121e-06, 5.4309999999446745e-06, 5.389000000022293e-06, 5.4309999999446745e-06, 5.429999999861934e-06, 5.429999999861934e-06, 5.374999999752106e-06, 5.416999999674488e-06, 5.4309999999446745e-06, 5.416999999674488e-06, 5.444000000132121e-06, 5.431000000832853e-06, 5.4309999999446745e-06, 5.458000000402308e-06, 5.4309999999446745e-06, 5.445000000214861e-06, 5.458000000402308e-06, 5.457999999514129e-06, 5.457999999514129e-06, 5.445000000214861e-06, 5.429999999861934e-06, 5.4309999999446745e-06, 5.444000000132121e-06, 5.444000000132121e-06, 5.429999999861934e-06, 5.457999999514129e-06, 5.45899999959687e-06, 5.444000000132121e-06, 5.4439999992439425e-06, 5.402999999404301e-06, 5.444000000132121e-06, 5.458000000402308e-06, 5.471999999784316e-06, 5.4309999999446745e-06, 5.50000000032469e-06, 5.4309999999446745e-06]</msg>
<status status="PASS" starttime="20201029 18:18:09.289" endtime="20201029 18:18:09.291"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.285" endtime="20201029 18:18:09.292"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.907" endtime="20201029 18:18:09.292"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.907" endtime="20201029 18:18:09.292"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:09.300" endtime="20201029 18:18:09.315"></status>
</kw>
<msg timestamp="20201029 18:18:09.315" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:09.298" endtime="20201029 18:18:09.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:09.322" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:09.320" endtime="20201029 18:18:09.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:09.323" endtime="20201029 18:18:09.324"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.296" endtime="20201029 18:18:09.325"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.294" endtime="20201029 18:18:09.325"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:09.332" endtime="20201029 18:18:09.641"></status>
</kw>
<msg timestamp="20201029 18:18:09.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.26315575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.263161194, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:09.330" endtime="20201029 18:18:09.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:09.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.26315575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.263161194, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:09.646" endtime="20201029 18:18:09.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:09.656" endtime="20201029 18:18:09.657"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.328" endtime="20201029 18:18:09.658"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.326" endtime="20201029 18:18:09.658"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:09.662" level="INFO">${RESULT} = [{'diff': 5.444000000132121e-06}, {'diff': 5.444000000132121e-06}, {'diff': 5.429999999861934e-06}, {'diff': 5.457999999514129e-06}, {'diff': 5.45899999959687e-06}, {'diff': 5.444000000132121e-06}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:09.659" endtime="20201029 18:18:09.663"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:09.667" level="INFO">${OVERHEAD} = {'diff': [5.444000000132121e-06, 5.444000000132121e-06, 5.429999999861934e-06, 5.457999999514129e-06, 5.45899999959687e-06, 5.444000000132121e-06, 5.4439999992439425e-06, 5.402999999404301e-06, 5.4440...</msg>
<status status="PASS" starttime="20201029 18:18:09.663" endtime="20201029 18:18:09.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:09.671" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:09.670" endtime="20201029 18:18:09.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:09.674" level="INFO">VALUE: [5.444000000132121e-06, 5.444000000132121e-06, 5.429999999861934e-06, 5.457999999514129e-06, 5.45899999959687e-06, 5.444000000132121e-06, 5.4439999992439425e-06, 5.402999999404301e-06, 5.444000000132121e-06, 5.458000000402308e-06, 5.471999999784316e-06, 5.4309999999446745e-06, 5.50000000032469e-06, 5.4309999999446745e-06, 5.444000000132121e-06, 5.486000000054503e-06, 5.4309999999446745e-06, 5.389000000022293e-06, 5.444000000132121e-06, 5.459000000485048e-06, 5.4439999992439425e-06, 5.401999999321561e-06, 5.416999999674488e-06, 5.445000000214861e-06, 5.416999999674488e-06, 5.415999999591747e-06, 5.471999999784316e-06, 5.458000000402308e-06, 5.360999999481919e-06, 5.346999999211732e-06, 5.444999999326683e-06, 5.430000000750113e-06, 5.417000000562666e-06, 5.389000000022293e-06, 5.444000000132121e-06, 5.429999999861934e-06, 5.416000000479926e-06, 5.416999999674488e-06, 5.417000000562666e-06, 5.471999999784316e-06, 5.360999999481919e-06, 5.389000000022293e-06, 5.445000000214861e-06, 5.486000000054503e-06, 5.444000000132121e-06, 5.4309999999446745e-06, 5.458000000402308e-06, 5.416999999674488e-06, 5.429999999861934e-06, 5.417000000562666e-06, 5.471999999784316e-06, 5.45899999959687e-06, 5.4309999999446745e-06, 5.416999999674488e-06, 5.429999999861934e-06, 5.415999999591747e-06, 5.50000000032469e-06, 5.445000000214861e-06, 5.4309999999446745e-06, 5.416999999674488e-06, 5.4309999999446745e-06, 5.415999999591747e-06, 5.402000000209739e-06, 5.429999999861934e-06]</msg>
<status status="PASS" starttime="20201029 18:18:09.672" endtime="20201029 18:18:09.674"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.668" endtime="20201029 18:18:09.675"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.293" endtime="20201029 18:18:09.675"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.293" endtime="20201029 18:18:09.675"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:09.684" endtime="20201029 18:18:09.702"></status>
</kw>
<msg timestamp="20201029 18:18:09.703" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:09.682" endtime="20201029 18:18:09.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:09.705" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:09.704" endtime="20201029 18:18:09.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:09.706" endtime="20201029 18:18:09.708"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.679" endtime="20201029 18:18:09.709"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.677" endtime="20201029 18:18:09.709"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:09.715" endtime="20201029 18:18:10.032"></status>
</kw>
<msg timestamp="20201029 18:18:10.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.640067431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.640072903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:09.714" endtime="20201029 18:18:10.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:10.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.640067431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.640072903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:10.037" endtime="20201029 18:18:10.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:10.046" endtime="20201029 18:18:10.048"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.711" endtime="20201029 18:18:10.049"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.710" endtime="20201029 18:18:10.049"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:10.053" level="INFO">${RESULT} = [{'diff': 5.471999999784316e-06}, {'diff': 5.45899999959687e-06}, {'diff': 5.4309999999446745e-06}, {'diff': 5.416999999674488e-06}, {'diff': 5.429999999861934e-06}, {'diff': 5.415999999591747e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:18:10.050" endtime="20201029 18:18:10.053"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:10.058" level="INFO">${OVERHEAD} = {'diff': [5.471999999784316e-06, 5.45899999959687e-06, 5.4309999999446745e-06, 5.416999999674488e-06, 5.429999999861934e-06, 5.415999999591747e-06, 5.50000000032469e-06, 5.445000000214861e-06, 5.43099...</msg>
<status status="PASS" starttime="20201029 18:18:10.054" endtime="20201029 18:18:10.059"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:10.063" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:10.062" endtime="20201029 18:18:10.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:10.065" level="INFO">VALUE: [5.471999999784316e-06, 5.45899999959687e-06, 5.4309999999446745e-06, 5.416999999674488e-06, 5.429999999861934e-06, 5.415999999591747e-06, 5.50000000032469e-06, 5.445000000214861e-06, 5.4309999999446745e-06, 5.416999999674488e-06, 5.4309999999446745e-06, 5.415999999591747e-06, 5.402000000209739e-06, 5.429999999861934e-06, 5.471999999784316e-06, 5.4439999992439425e-06, 5.445000000214861e-06, 5.445000000214861e-06, 5.471999999784316e-06, 5.458000000402308e-06, 5.389000000022293e-06, 5.445000000214861e-06, 5.444000000132121e-06, 5.458000000402308e-06, 5.389000000022293e-06, 5.445000000214861e-06, 5.416999999674488e-06, 5.431000000832853e-06, 5.4309999999446745e-06, 5.417000000562666e-06, 5.444000000132121e-06, 5.347000000099911e-06, 5.416999999674488e-06, 5.402999999404301e-06, 5.416000000479926e-06, 5.445000000214861e-06, 5.45899999959687e-06, 5.416999999674488e-06, 5.417000000562666e-06, 5.485999999166324e-06, 5.389000000022293e-06, 5.416999999674488e-06, 5.402000000209739e-06, 5.4309999999446745e-06, 5.4729999998670564e-06, 5.445000000214861e-06, 5.444000000132121e-06, 5.403000000292479e-06, 5.417000000562666e-06, 5.4309999999446745e-06, 5.417000000562666e-06, 5.458000000402308e-06, 5.444000000132121e-06, 5.416999999674488e-06, 5.415999999591747e-06, 5.4309999999446745e-06, 5.430000000750113e-06, 5.429999999861934e-06, 5.471999999784316e-06, 5.416999999674488e-06, 5.403000000292479e-06, 5.444000000132121e-06, 5.416999999674488e-06, 5.444000000132121e-06]</msg>
<status status="PASS" starttime="20201029 18:18:10.064" endtime="20201029 18:18:10.065"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.059" endtime="20201029 18:18:10.066"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.676" endtime="20201029 18:18:10.066"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.675" endtime="20201029 18:18:10.067"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:10.074" endtime="20201029 18:18:10.089"></status>
</kw>
<msg timestamp="20201029 18:18:10.089" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:10.073" endtime="20201029 18:18:10.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:10.091" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:10.090" endtime="20201029 18:18:10.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:10.093" endtime="20201029 18:18:10.094"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.070" endtime="20201029 18:18:10.095"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.069" endtime="20201029 18:18:10.095"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:10.101" endtime="20201029 18:18:10.420"></status>
</kw>
<msg timestamp="20201029 18:18:10.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.016962069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.016967486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:10.100" endtime="20201029 18:18:10.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:10.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.016962069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.016967486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:10.425" endtime="20201029 18:18:10.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:10.434" endtime="20201029 18:18:10.436"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.097" endtime="20201029 18:18:10.437"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.096" endtime="20201029 18:18:10.437"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:10.441" level="INFO">${RESULT} = [{'diff': 5.417000000562666e-06}, {'diff': 5.458000000402308e-06}, {'diff': 5.444000000132121e-06}, {'diff': 5.416999999674488e-06}, {'diff': 5.415999999591747e-06}, {'diff': 5.4309999999446745e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:18:10.438" endtime="20201029 18:18:10.441"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:10.447" level="INFO">${OVERHEAD} = {'diff': [5.417000000562666e-06, 5.458000000402308e-06, 5.444000000132121e-06, 5.416999999674488e-06, 5.415999999591747e-06, 5.4309999999446745e-06, 5.430000000750113e-06, 5.429999999861934e-06, 5.471...</msg>
<status status="PASS" starttime="20201029 18:18:10.442" endtime="20201029 18:18:10.447"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:10.451" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:10.450" endtime="20201029 18:18:10.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:10.454" level="INFO">VALUE: [5.417000000562666e-06, 5.458000000402308e-06, 5.444000000132121e-06, 5.416999999674488e-06, 5.415999999591747e-06, 5.4309999999446745e-06, 5.430000000750113e-06, 5.429999999861934e-06, 5.471999999784316e-06, 5.416999999674488e-06, 5.403000000292479e-06, 5.444000000132121e-06, 5.416999999674488e-06, 5.444000000132121e-06, 5.459000000485048e-06, 5.445000000214861e-06, 5.4439999992439425e-06, 5.415999999591747e-06, 5.444999999326683e-06, 5.374999999752106e-06, 5.445000000214861e-06, 5.429999999861934e-06, 5.389000000022293e-06, 5.444000000132121e-06, 5.4309999999446745e-06, 5.429999999861934e-06, 5.429999999861934e-06, 5.445000000214861e-06, 5.416999999674488e-06, 5.416000000479926e-06, 5.459000000485048e-06, 5.416000000479926e-06, 5.360999999481919e-06, 5.445000000214861e-06, 5.459000000485048e-06, 5.457999999514129e-06, 5.4309999999446745e-06, 5.444000000132121e-06, 5.499999999436511e-06, 5.445000000214861e-06, 5.458000000402308e-06, 5.416999999674488e-06, 5.444000000132121e-06, 5.457999999514129e-06, 5.4309999999446745e-06, 5.416999999674488e-06, 5.416000000479926e-06, 5.471999999784316e-06, 5.429999999861934e-06, 5.402999999404301e-06, 5.4309999999446745e-06, 5.375000000640284e-06, 5.444000000132121e-06, 5.444000000132121e-06, 5.444999999326683e-06, 5.445000000214861e-06, 5.471999999784316e-06, 5.403000000292479e-06, 5.416999999674488e-06, 5.444000000132121e-06, 5.3610000003700975e-06, 5.4309999999446745e-06, 5.387999999939552e-06, 5.444000000132121e-06]</msg>
<status status="PASS" starttime="20201029 18:18:10.452" endtime="20201029 18:18:10.454"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.448" endtime="20201029 18:18:10.455"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.067" endtime="20201029 18:18:10.455"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.067" endtime="20201029 18:18:10.455"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:10.463" endtime="20201029 18:18:10.480"></status>
</kw>
<msg timestamp="20201029 18:18:10.481" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:10.461" endtime="20201029 18:18:10.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:10.483" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:10.482" endtime="20201029 18:18:10.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:10.484" endtime="20201029 18:18:10.486"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.459" endtime="20201029 18:18:10.486"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.457" endtime="20201029 18:18:10.487"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:10.494" endtime="20201029 18:18:10.806"></status>
</kw>
<msg timestamp="20201029 18:18:10.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.394731222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.394736653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:10.491" endtime="20201029 18:18:10.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:10.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.394731222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.394736653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:10.810" endtime="20201029 18:18:10.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:10.820" endtime="20201029 18:18:10.822"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.489" endtime="20201029 18:18:10.822"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.487" endtime="20201029 18:18:10.823"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:10.827" level="INFO">${RESULT} = [{'diff': 5.4309999999446745e-06}, {'diff': 5.375000000640284e-06}, {'diff': 5.444000000132121e-06}, {'diff': 5.444000000132121e-06}, {'diff': 5.444999999326683e-06}, {'diff': 5.445000000214861e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:18:10.824" endtime="20201029 18:18:10.827"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:10.832" level="INFO">${OVERHEAD} = {'diff': [5.4309999999446745e-06, 5.375000000640284e-06, 5.444000000132121e-06, 5.444000000132121e-06, 5.444999999326683e-06, 5.445000000214861e-06, 5.471999999784316e-06, 5.403000000292479e-06, 5.416...</msg>
<status status="PASS" starttime="20201029 18:18:10.828" endtime="20201029 18:18:10.832"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:10.836" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:10.835" endtime="20201029 18:18:10.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:10.838" level="INFO">VALUE: [5.4309999999446745e-06, 5.375000000640284e-06, 5.444000000132121e-06, 5.444000000132121e-06, 5.444999999326683e-06, 5.445000000214861e-06, 5.471999999784316e-06, 5.403000000292479e-06, 5.416999999674488e-06, 5.444000000132121e-06, 5.3610000003700975e-06, 5.4309999999446745e-06, 5.387999999939552e-06, 5.444000000132121e-06, 5.416999999674488e-06, 5.3610000003700975e-06, 5.458000000402308e-06, 5.430000000750113e-06, 5.444000000132121e-06, 5.430000000750113e-06, 5.444000000132121e-06, 5.444000000132121e-06, 5.444000000132121e-06, 5.4720000006724945e-06, 5.444999999326683e-06, 5.445000000214861e-06, 5.444000000132121e-06, 5.402000000209739e-06, 5.50000000032469e-06, 5.4309999999446745e-06, 5.403000000292479e-06, 5.416999999674488e-06, 5.4439999992439425e-06, 5.416999999674488e-06, 5.444000000132121e-06, 5.486000000054503e-06, 5.403000000292479e-06, 5.513999999706698e-06, 5.444000000132121e-06, 5.4309999999446745e-06, 5.444000000132121e-06, 5.415999999591747e-06, 5.389000000022293e-06, 5.527999999976885e-06, 5.4309999999446745e-06, 5.471999999784316e-06, 5.444000000132121e-06, 5.417000000562666e-06, 5.457999999514129e-06, 5.4309999999446745e-06, 5.4309999999446745e-06, 5.375000000640284e-06, 5.444000000132121e-06, 5.415999999591747e-06, 5.401999999321561e-06, 5.429999999861934e-06, 5.429999999861934e-06, 5.444000000132121e-06, 5.445000000214861e-06, 5.458000000402308e-06, 5.429999999861934e-06, 5.4309999999446745e-06, 5.444000000132121e-06, 5.444000000132121e-06]</msg>
<status status="PASS" starttime="20201029 18:18:10.837" endtime="20201029 18:18:10.839"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.832" endtime="20201029 18:18:10.839"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.456" endtime="20201029 18:18:10.840"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.455" endtime="20201029 18:18:10.840"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:10.849" endtime="20201029 18:18:10.863"></status>
</kw>
<msg timestamp="20201029 18:18:10.864" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:10.847" endtime="20201029 18:18:10.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:10.866" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:10.865" endtime="20201029 18:18:10.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:10.867" endtime="20201029 18:18:10.869"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.844" endtime="20201029 18:18:10.869"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.842" endtime="20201029 18:18:10.870"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:10.876" endtime="20201029 18:18:11.190"></status>
</kw>
<msg timestamp="20201029 18:18:11.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.777554, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.777559431, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:18:10.875" endtime="20201029 18:18:11.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.777554, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.777559431, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:18:11.195" endtime="20201029 18:18:11.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:11.205" endtime="20201029 18:18:11.207"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.872" endtime="20201029 18:18:11.207"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.870" endtime="20201029 18:18:11.208"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:11.212" level="INFO">${RESULT} = [{'diff': 5.4309999999446745e-06}, {'diff': 5.375000000640284e-06}, {'diff': 5.444000000132121e-06}, {'diff': 5.415999999591747e-06}, {'diff': 5.401999999321561e-06}, {'diff': 5.429999999861934e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:18:11.208" endtime="20201029 18:18:11.212"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:11.217" level="INFO">${OVERHEAD} = {'diff': [5.4309999999446745e-06, 5.375000000640284e-06, 5.444000000132121e-06, 5.415999999591747e-06, 5.401999999321561e-06, 5.429999999861934e-06, 5.429999999861934e-06, 5.444000000132121e-06, 5.445...</msg>
<status status="PASS" starttime="20201029 18:18:11.213" endtime="20201029 18:18:11.217"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.221" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:11.220" endtime="20201029 18:18:11.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.224" level="INFO">VALUE: [5.4309999999446745e-06, 5.375000000640284e-06, 5.444000000132121e-06, 5.415999999591747e-06, 5.401999999321561e-06, 5.429999999861934e-06, 5.429999999861934e-06, 5.444000000132121e-06, 5.445000000214861e-06, 5.458000000402308e-06, 5.429999999861934e-06, 5.4309999999446745e-06, 5.444000000132121e-06, 5.444000000132121e-06, 5.334000000800643e-06, 5.389000000022293e-06, 5.417000000562666e-06, 5.4309999999446745e-06, 5.4309999999446745e-06, 5.416999999674488e-06, 5.429999999861934e-06, 5.415999999591747e-06, 5.444000000132121e-06, 5.429999999861934e-06, 5.417000000562666e-06, 5.431000000832853e-06, 5.445000000214861e-06, 5.402999999404301e-06, 5.416999999674488e-06, 5.486000000054503e-06, 5.458000000402308e-06, 5.458000000402308e-06, 5.4309999999446745e-06, 5.445000000214861e-06, 5.431000000832853e-06, 5.444999999326683e-06, 5.445000000214861e-06, 5.416999999674488e-06, 5.486000000054503e-06, 5.4309999999446745e-06, 5.486000000054503e-06, 5.416999999674488e-06, 5.458000000402308e-06, 5.45899999959687e-06, 5.416999999674488e-06, 5.514000000594876e-06, 5.429999999861934e-06, 5.444000000132121e-06, 5.444000000132121e-06, 5.417000000562666e-06, 5.444000000132121e-06, 5.402999999404301e-06, 5.416999999674488e-06, 5.486000000054503e-06, 5.471999999784316e-06, 5.458000000402308e-06, 5.444000000132121e-06, 5.445000000214861e-06, 5.429999999861934e-06, 5.4439999992439425e-06, 5.3610000003700975e-06, 5.4309999999446745e-06, 5.403000000292479e-06, 5.3610000003700975e-06]</msg>
<status status="PASS" starttime="20201029 18:18:11.222" endtime="20201029 18:18:11.224"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.218" endtime="20201029 18:18:11.225"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.840" endtime="20201029 18:18:11.225"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.840" endtime="20201029 18:18:11.225"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.571" endtime="20201029 18:18:11.225"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:18:03.495" endtime="20201029 18:18:11.226" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:11.233" endtime="20201029 18:18:11.253"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.232" endtime="20201029 18:18:11.253"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:11.266" endtime="20201029 18:18:11.285"></status>
</kw>
<msg timestamp="20201029 18:18:11.286" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:11.265" endtime="20201029 18:18:11.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.288" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:11.287" endtime="20201029 18:18:11.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.291" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:18:11.289" endtime="20201029 18:18:11.291"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:11.262" endtime="20201029 18:18:11.292"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:11.260" endtime="20201029 18:18:11.293"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.259" endtime="20201029 18:18:11.293"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:18:11.299" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:18:11.299" endtime="20201029 18:18:11.300"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.294" endtime="20201029 18:18:11.300"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.258" endtime="20201029 18:18:11.300"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.257" endtime="20201029 18:18:11.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:11.301" endtime="20201029 18:18:11.302"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.256" endtime="20201029 18:18:11.303"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.254" endtime="20201029 18:18:11.303"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.230" endtime="20201029 18:18:11.304"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:11.312" endtime="20201029 18:18:11.340"></status>
</kw>
<msg timestamp="20201029 18:18:11.341" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:11.310" endtime="20201029 18:18:11.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.343" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:11.342" endtime="20201029 18:18:11.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:11.344" endtime="20201029 18:18:11.346"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.308" endtime="20201029 18:18:11.347"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.306" endtime="20201029 18:18:11.347"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:11.349" endtime="20201029 18:18:11.351"></status>
</kw>
<msg timestamp="20201029 18:18:11.351" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 18:18:11.348" endtime="20201029 18:18:11.352"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.356" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:18:11.355" endtime="20201029 18:18:11.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.358" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:18:11.357" endtime="20201029 18:18:11.358"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.352" endtime="20201029 18:18:11.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.362" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:18:11.361" endtime="20201029 18:18:11.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.364" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:18:11.363" endtime="20201029 18:18:11.365"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.359" endtime="20201029 18:18:11.365"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:11.371" endtime="20201029 18:18:11.657"></status>
</kw>
<msg timestamp="20201029 18:18:11.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073295569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073314111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:11.370" endtime="20201029 18:18:11.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073295569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073314111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:11.661" endtime="20201029 18:18:11.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:11.670" endtime="20201029 18:18:11.671"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.367" endtime="20201029 18:18:11.672"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.366" endtime="20201029 18:18:11.672"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:11.677" level="INFO">${RESULT} = [{'diff': 1.8541999999996395e-05}, {'diff': 2.2458000000002976e-05}, {'diff': 2.2471999999995607e-05}, {'diff': 2.2471999999995607e-05}, {'diff': 2.2556000000006904e-05}, {'diff': 2.2542000000000395e-...</msg>
<status status="PASS" starttime="20201029 18:18:11.673" endtime="20201029 18:18:11.677"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:11.681" level="INFO">${OVERHEAD} = {'diff': [1.8541999999996395e-05, 2.2458000000002976e-05, 2.2471999999995607e-05, 2.2471999999995607e-05, 2.2556000000006904e-05, 2.2542000000000395e-05, 2.2486000000002115e-05, 2.2471999999995607e-05...</msg>
<status status="PASS" starttime="20201029 18:18:11.678" endtime="20201029 18:18:11.681"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.686" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201029 18:18:11.685" endtime="20201029 18:18:11.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.688" level="INFO">VALUE: [1.8541999999996395e-05, 2.2458000000002976e-05, 2.2471999999995607e-05, 2.2471999999995607e-05, 2.2556000000006904e-05, 2.2542000000000395e-05, 2.2486000000002115e-05, 2.2471999999995607e-05, 2.2486000000002115e-05, 2.2514000000001255e-05, 2.2597999999998675e-05, 2.2542000000000395e-05, 2.2458000000002976e-05, 2.2500000000008624e-05, 2.251300000000178e-05, 2.2514000000001255e-05, 2.252700000000829e-05, 2.2513999999987377e-05, 2.2472000000009484e-05, 2.2486000000002115e-05, 2.254100000000092e-05, 2.2514000000001255e-05, 2.2471999999995607e-05, 2.2472000000009484e-05, 2.2499999999994746e-05, 2.2556000000006904e-05, 2.2486000000002115e-05, 2.2500000000008624e-05, 2.2542000000000395e-05, 2.2527999999993886e-05, 2.2514000000001255e-05, 2.2514000000001255e-05, 2.2486000000002115e-05, 2.2485999999988238e-05, 2.254100000000092e-05, 2.2514000000001255e-05, 2.2514000000001255e-05, 2.2513999999987377e-05, 2.2514000000001255e-05, 2.252700000000829e-05, 2.2485999999988238e-05, 2.2486000000002115e-05, 2.2499999999994746e-05, 2.2528000000007764e-05, 2.2542000000000395e-05, 2.2527999999993886e-05, 2.258300000000657e-05, 2.2486000000002115e-05, 2.2500000000008624e-05, 2.2526999999994413e-05]</msg>
<status status="PASS" starttime="20201029 18:18:11.687" endtime="20201029 18:18:11.689"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.682" endtime="20201029 18:18:11.690"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.304" endtime="20201029 18:18:11.690"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:18:11.228" endtime="20201029 18:18:11.691" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:11.699" endtime="20201029 18:18:11.718"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.697" endtime="20201029 18:18:11.719"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:11.733" endtime="20201029 18:18:11.752"></status>
</kw>
<msg timestamp="20201029 18:18:11.753" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:11.731" endtime="20201029 18:18:11.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.755" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:11.754" endtime="20201029 18:18:11.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.758" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:18:11.756" endtime="20201029 18:18:11.758"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:11.727" endtime="20201029 18:18:11.759"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:11.725" endtime="20201029 18:18:11.759"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.724" endtime="20201029 18:18:11.760"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:18:11.764" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:18:11.763" endtime="20201029 18:18:11.764"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.761" endtime="20201029 18:18:11.764"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.723" endtime="20201029 18:18:11.764"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.723" endtime="20201029 18:18:11.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:11.765" endtime="20201029 18:18:11.767"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.721" endtime="20201029 18:18:11.767"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.720" endtime="20201029 18:18:11.768"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.696" endtime="20201029 18:18:11.768"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:11.776" endtime="20201029 18:18:11.852"></status>
</kw>
<msg timestamp="20201029 18:18:11.852" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:11.775" endtime="20201029 18:18:11.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.855" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:11.853" endtime="20201029 18:18:11.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:11.856" endtime="20201029 18:18:11.857"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.772" endtime="20201029 18:18:11.858"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.770" endtime="20201029 18:18:11.858"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:11.860" endtime="20201029 18:18:11.862"></status>
</kw>
<msg timestamp="20201029 18:18:11.862" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 18:18:11.859" endtime="20201029 18:18:11.863"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.867" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:18:11.866" endtime="20201029 18:18:11.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.869" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:18:11.868" endtime="20201029 18:18:11.869"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.864" endtime="20201029 18:18:11.870"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.874" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:18:11.872" endtime="20201029 18:18:11.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.875" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:18:11.875" endtime="20201029 18:18:11.876"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.870" endtime="20201029 18:18:11.876"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:11.884" endtime="20201029 18:18:12.181"></status>
</kw>
<msg timestamp="20201029 18:18:12.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070485847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070506292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:11.882" endtime="20201029 18:18:12.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070485847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070506292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:12.190" endtime="20201029 18:18:12.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:12.208" endtime="20201029 18:18:12.211"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.879" endtime="20201029 18:18:12.212"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.877" endtime="20201029 18:18:12.213"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:12.221" level="INFO">${RESULT} = [{'diff': 2.044499999999394e-05}, {'diff': 2.9764000000001567e-05}, {'diff': 2.972199999999592e-05}, {'diff': 2.9792000000000707e-05}, {'diff': 2.969399999999678e-05}, {'diff': 2.9777999999994198e-05}...</msg>
<status status="PASS" starttime="20201029 18:18:12.215" endtime="20201029 18:18:12.222"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:12.230" level="INFO">${OVERHEAD} = {'diff': [2.044499999999394e-05, 2.9764000000001567e-05, 2.972199999999592e-05, 2.9792000000000707e-05, 2.969399999999678e-05, 2.9777999999994198e-05, 2.9819000000000373e-05, 2.9778000000008076e-05, 2...</msg>
<status status="PASS" starttime="20201029 18:18:12.223" endtime="20201029 18:18:12.231"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.239" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201029 18:18:12.237" endtime="20201029 18:18:12.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.244" level="INFO">VALUE: [2.044499999999394e-05, 2.9764000000001567e-05, 2.972199999999592e-05, 2.9792000000000707e-05, 2.969399999999678e-05, 2.9777999999994198e-05, 2.9819000000000373e-05, 2.9778000000008076e-05, 2.9792000000000707e-05, 2.9777000000008602e-05, 2.9792000000000707e-05, 2.9777999999994198e-05, 2.968100000000362e-05, 2.9792000000000707e-05, 2.9764000000001567e-05, 2.9777999999994198e-05, 2.972199999999592e-05, 2.9819999999999847e-05, 2.9791000000001233e-05, 2.9750000000008936e-05, 2.9764000000001567e-05, 2.9791000000001233e-05, 2.9792000000000707e-05, 2.9777999999994198e-05, 2.9764000000001567e-05, 2.986100000000602e-05, 2.9764000000001567e-05, 2.9806000000007216e-05, 2.9777999999994198e-05, 2.9736000000002427e-05, 2.972199999999592e-05, 2.9764000000001567e-05, 2.9736000000002427e-05, 2.9764000000001567e-05, 2.9749999999995058e-05, 2.970900000000276e-05, 2.9791000000001233e-05, 2.9792000000000707e-05, 2.970900000000276e-05, 2.9776999999994724e-05, 2.9680000000004148e-05, 2.973599999998855e-05, 2.9708999999988883e-05, 2.9777999999994198e-05, 2.9791000000001233e-05, 2.9792000000000707e-05, 2.9750000000008936e-05, 2.972199999999592e-05, 2.9776999999994724e-05, 2.9777999999994198e-05]</msg>
<status status="PASS" starttime="20201029 18:18:12.242" endtime="20201029 18:18:12.245"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.232" endtime="20201029 18:18:12.245"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.768" endtime="20201029 18:18:12.246"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:18:11.694" endtime="20201029 18:18:12.246" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:12.253" endtime="20201029 18:18:12.273"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.252" endtime="20201029 18:18:12.273"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:12.287" endtime="20201029 18:18:12.304"></status>
</kw>
<msg timestamp="20201029 18:18:12.305" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:12.286" endtime="20201029 18:18:12.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.307" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:12.306" endtime="20201029 18:18:12.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.310" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:18:12.308" endtime="20201029 18:18:12.310"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:12.283" endtime="20201029 18:18:12.311"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:12.281" endtime="20201029 18:18:12.312"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.279" endtime="20201029 18:18:12.312"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:18:12.316" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:18:12.315" endtime="20201029 18:18:12.316"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.313" endtime="20201029 18:18:12.316"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.279" endtime="20201029 18:18:12.316"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.278" endtime="20201029 18:18:12.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:12.317" endtime="20201029 18:18:12.319"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.277" endtime="20201029 18:18:12.319"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.274" endtime="20201029 18:18:12.320"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.250" endtime="20201029 18:18:12.320"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:12.328" endtime="20201029 18:18:12.501"></status>
</kw>
<msg timestamp="20201029 18:18:12.502" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:12.327" endtime="20201029 18:18:12.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.504" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:12.503" endtime="20201029 18:18:12.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:12.505" endtime="20201029 18:18:12.507"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.324" endtime="20201029 18:18:12.507"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.322" endtime="20201029 18:18:12.508"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:12.510" endtime="20201029 18:18:12.512"></status>
</kw>
<msg timestamp="20201029 18:18:12.513" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 18:18:12.509" endtime="20201029 18:18:12.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.517" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:18:12.516" endtime="20201029 18:18:12.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.519" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:18:12.518" endtime="20201029 18:18:12.520"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.514" endtime="20201029 18:18:12.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.524" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:18:12.523" endtime="20201029 18:18:12.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.526" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:18:12.525" endtime="20201029 18:18:12.526"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.521" endtime="20201029 18:18:12.527"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:12.533" endtime="20201029 18:18:12.828"></status>
</kw>
<msg timestamp="20201029 18:18:12.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069813708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069846556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:12.532" endtime="20201029 18:18:12.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069813708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069846556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:12.832" endtime="20201029 18:18:12.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:12.840" endtime="20201029 18:18:12.842"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.529" endtime="20201029 18:18:12.842"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.527" endtime="20201029 18:18:12.843"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:12.846" level="INFO">${RESULT} = [{'diff': 3.284800000000199e-05}, {'diff': 5.002799999999363e-05}, {'diff': 5.006899999999981e-05}, {'diff': 5.006899999999981e-05}, {'diff': 5.0139000000004597e-05}, {'diff': 5.0193999999989525e-05},...</msg>
<status status="PASS" starttime="20201029 18:18:12.843" endtime="20201029 18:18:12.847"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:12.851" level="INFO">${OVERHEAD} = {'diff': [3.284800000000199e-05, 5.002799999999363e-05, 5.006899999999981e-05, 5.006899999999981e-05, 5.0139000000004597e-05, 5.0193999999989525e-05, 5.016699999998986e-05, 5.009699999999895e-05, 5.01...</msg>
<status status="PASS" starttime="20201029 18:18:12.847" endtime="20201029 18:18:12.851"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.856" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201029 18:18:12.855" endtime="20201029 18:18:12.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.858" level="INFO">VALUE: [3.284800000000199e-05, 5.002799999999363e-05, 5.006899999999981e-05, 5.006899999999981e-05, 5.0139000000004597e-05, 5.0193999999989525e-05, 5.016699999998986e-05, 5.009699999999895e-05, 5.011099999999158e-05, 5.011100000000546e-05, 5.006899999999981e-05, 5.004200000000014e-05, 5.009699999999895e-05, 5.004100000000067e-05, 5.009699999999895e-05, 5.011100000000546e-05, 5.011099999999158e-05, 5.006899999999981e-05, 5.015299999999723e-05, 5.008400000000579e-05, 5.004200000000014e-05, 5.011099999999158e-05, 5.013899999997684e-05, 5.0111000000019335e-05, 5.0139000000004597e-05, 5.015299999999723e-05, 5.012499999998421e-05, 5.004200000000014e-05, 5.0069000000013686e-05, 5.012499999998421e-05, 5.012499999998421e-05, 5.0151999999997754e-05, 5.004200000000014e-05, 5.015299999999723e-05, 5.0125000000011966e-05, 5.005599999999277e-05, 5.00549999999933e-05, 5.004200000000014e-05, 5.01940000000034e-05, 5.016699999998986e-05, 5.002800000000751e-05, 5.004200000000014e-05, 5.007000000001316e-05, 5.009699999999895e-05, 5.0055000000021055e-05, 5.015299999999723e-05, 5.008299999997856e-05, 5.002800000000751e-05, 5.0013999999987124e-05, 5.005599999999277e-05]</msg>
<status status="PASS" starttime="20201029 18:18:12.857" endtime="20201029 18:18:12.859"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.852" endtime="20201029 18:18:12.859"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.320" endtime="20201029 18:18:12.860"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:18:12.248" endtime="20201029 18:18:12.860" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:12.867" endtime="20201029 18:18:12.887"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.865" endtime="20201029 18:18:12.887"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:12.900" endtime="20201029 18:18:12.920"></status>
</kw>
<msg timestamp="20201029 18:18:12.920" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:12.898" endtime="20201029 18:18:12.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.923" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:12.921" endtime="20201029 18:18:12.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.926" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:18:12.924" endtime="20201029 18:18:12.926"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:12.896" endtime="20201029 18:18:12.927"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:12.894" endtime="20201029 18:18:12.927"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.892" endtime="20201029 18:18:12.928"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:18:12.931" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:18:12.931" endtime="20201029 18:18:12.932"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.928" endtime="20201029 18:18:12.932"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.892" endtime="20201029 18:18:12.932"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.891" endtime="20201029 18:18:12.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:12.933" endtime="20201029 18:18:12.934"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.890" endtime="20201029 18:18:12.935"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.888" endtime="20201029 18:18:12.935"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.864" endtime="20201029 18:18:12.936"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:12.947" endtime="20201029 18:18:12.975"></status>
</kw>
<msg timestamp="20201029 18:18:12.976" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:12.945" endtime="20201029 18:18:12.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.983" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:12.979" endtime="20201029 18:18:12.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:12.986" endtime="20201029 18:18:12.990"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.940" endtime="20201029 18:18:12.991"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.938" endtime="20201029 18:18:12.992"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:12.996" endtime="20201029 18:18:13.000"></status>
</kw>
<msg timestamp="20201029 18:18:13.001" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 18:18:12.994" endtime="20201029 18:18:13.001"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:13.010" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:18:13.008" endtime="20201029 18:18:13.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:13.014" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:18:13.012" endtime="20201029 18:18:13.015"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.002" endtime="20201029 18:18:13.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:13.024" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:18:13.021" endtime="20201029 18:18:13.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:13.028" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:18:13.026" endtime="20201029 18:18:13.028"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.017" endtime="20201029 18:18:13.029"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:13.043" endtime="20201029 18:18:13.334"></status>
</kw>
<msg timestamp="20201029 18:18:13.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072150444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072168597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:13.040" endtime="20201029 18:18:13.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:13.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072150444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072168597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:13.341" endtime="20201029 18:18:13.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:13.355" endtime="20201029 18:18:13.359"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.034" endtime="20201029 18:18:13.360"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.031" endtime="20201029 18:18:13.361"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:13.369" level="INFO">${RESULT} = [{'diff': 1.8153000000006858e-05}, {'diff': 1.8193999999999155e-05}, {'diff': 1.8208000000005664e-05}, {'diff': 1.8179999999992646e-05}, {'diff': 1.8180000000006524e-05}, {'diff': 1.818099999999212e-0...</msg>
<status status="PASS" starttime="20201029 18:18:13.363" endtime="20201029 18:18:13.369"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:13.375" level="INFO">${OVERHEAD} = {'diff': [1.8153000000006858e-05, 1.8193999999999155e-05, 1.8208000000005664e-05, 1.8179999999992646e-05, 1.8180000000006524e-05, 1.818099999999212e-05, 1.819499999999863e-05, 1.819499999999863e-05, 1...</msg>
<status status="PASS" starttime="20201029 18:18:13.370" endtime="20201029 18:18:13.375"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:13.380" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201029 18:18:13.379" endtime="20201029 18:18:13.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:13.383" level="INFO">VALUE: [1.8153000000006858e-05, 1.8193999999999155e-05, 1.8208000000005664e-05, 1.8179999999992646e-05, 1.8180000000006524e-05, 1.818099999999212e-05, 1.819499999999863e-05, 1.819499999999863e-05, 1.816699999999949e-05, 1.819499999999863e-05, 1.8235999999990926e-05, 1.8193999999999155e-05, 1.816699999999949e-05, 1.8181000000005998e-05, 1.819499999999863e-05, 1.8151999999993507e-05, 1.8138000000000876e-05, 1.8193999999999155e-05, 1.8221999999998295e-05, 1.819499999999863e-05, 1.8193999999999155e-05, 1.8208000000005664e-05, 1.816699999999949e-05, 1.8194000000013033e-05, 1.8221999999998295e-05, 1.8152000000007384e-05, 1.8166000000000015e-05, 1.816699999999949e-05, 1.8236000000004804e-05, 1.8181000000005998e-05, 1.816699999999949e-05, 1.8221999999998295e-05, 1.8194000000013033e-05, 1.8180000000006524e-05, 1.8181000000005998e-05, 1.8193999999999155e-05, 1.8236000000004804e-05, 1.8209000000005138e-05, 1.8193999999999155e-05, 1.8181000000005998e-05, 1.819499999999863e-05, 1.8209000000005138e-05, 1.816699999999949e-05, 1.818099999999212e-05, 1.8193999999999155e-05, 1.819499999999863e-05, 1.8179999999992646e-05, 1.8209000000005138e-05, 1.8193999999999155e-05, 1.8125000000007718e-05]</msg>
<status status="PASS" starttime="20201029 18:18:13.381" endtime="20201029 18:18:13.384"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.376" endtime="20201029 18:18:13.384"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.936" endtime="20201029 18:18:13.385"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:18:12.862" endtime="20201029 18:18:13.385" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:13.393" endtime="20201029 18:18:13.413"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.391" endtime="20201029 18:18:13.414"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:13.429" endtime="20201029 18:18:13.448"></status>
</kw>
<msg timestamp="20201029 18:18:13.448" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:13.427" endtime="20201029 18:18:13.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:13.450" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:13.449" endtime="20201029 18:18:13.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:18:13.454" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:18:13.452" endtime="20201029 18:18:13.455"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:13.424" endtime="20201029 18:18:13.455"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:13.421" endtime="20201029 18:18:13.456"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.420" endtime="20201029 18:18:13.456"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:18:13.460" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:18:13.459" endtime="20201029 18:18:13.460"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.457" endtime="20201029 18:18:13.460"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.419" endtime="20201029 18:18:13.461"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.418" endtime="20201029 18:18:13.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:13.461" endtime="20201029 18:18:13.463"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.417" endtime="20201029 18:18:13.464"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.415" endtime="20201029 18:18:13.464"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.390" endtime="20201029 18:18:13.464"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:13.473" endtime="20201029 18:18:13.546"></status>
</kw>
<msg timestamp="20201029 18:18:13.546" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:13.471" endtime="20201029 18:18:13.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:13.549" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:13.547" endtime="20201029 18:18:13.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:13.550" endtime="20201029 18:18:13.551"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.469" endtime="20201029 18:18:13.552"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.466" endtime="20201029 18:18:13.552"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:13.554" endtime="20201029 18:18:13.556"></status>
</kw>
<msg timestamp="20201029 18:18:13.556" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 18:18:13.553" endtime="20201029 18:18:13.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:13.561" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:18:13.559" endtime="20201029 18:18:13.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:13.563" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:18:13.562" endtime="20201029 18:18:13.563"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.557" endtime="20201029 18:18:13.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:13.568" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:18:13.567" endtime="20201029 18:18:13.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:13.570" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:18:13.569" endtime="20201029 18:18:13.570"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.564" endtime="20201029 18:18:13.570"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:13.577" endtime="20201029 18:18:13.886"></status>
</kw>
<msg timestamp="20201029 18:18:13.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074873917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074903542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:13.575" endtime="20201029 18:18:13.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:13.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074873917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074903542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:13.891" endtime="20201029 18:18:13.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:13.900" endtime="20201029 18:18:13.902"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.573" endtime="20201029 18:18:13.902"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.571" endtime="20201029 18:18:13.903"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:13.907" level="INFO">${RESULT} = [{'diff': 2.962500000000534e-05}, {'diff': 2.95970000000062e-05}, {'diff': 2.9597999999991798e-05}, {'diff': 2.95970000000062e-05}, {'diff': 2.9624999999991464e-05}, {'diff': 2.9597999999991798e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:18:13.903" endtime="20201029 18:18:13.907"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:13.911" level="INFO">${OVERHEAD} = {'diff': [2.962500000000534e-05, 2.95970000000062e-05, 2.9597999999991798e-05, 2.95970000000062e-05, 2.9624999999991464e-05, 2.9597999999991798e-05, 2.962500000000534e-05, 2.9612000000012184e-05, 2.95...</msg>
<status status="PASS" starttime="20201029 18:18:13.908" endtime="20201029 18:18:13.911"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:13.915" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201029 18:18:13.914" endtime="20201029 18:18:13.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:13.918" level="INFO">VALUE: [2.962500000000534e-05, 2.95970000000062e-05, 2.9597999999991798e-05, 2.95970000000062e-05, 2.9624999999991464e-05, 2.9597999999991798e-05, 2.962500000000534e-05, 2.9612000000012184e-05, 2.9596999999992324e-05, 2.9610999999998833e-05, 2.9596999999992324e-05, 2.965300000000448e-05, 2.9568999999993184e-05, 2.9612000000012184e-05, 2.9582999999999693e-05, 2.9569000000007062e-05, 2.9610999999998833e-05, 2.9582999999999693e-05, 2.9568999999993184e-05, 2.9597999999991798e-05, 2.966599999999764e-05, 2.9694000000010656e-05, 2.965300000000448e-05, 2.95970000000062e-05, 2.9680000000004148e-05, 2.9556000000000027e-05, 2.9638999999997973e-05, 2.965300000000448e-05, 2.965300000000448e-05, 2.9596999999992324e-05, 2.9652999999990604e-05, 2.95970000000062e-05, 2.9638999999997973e-05, 2.9611999999998306e-05, 2.9611999999998306e-05, 2.965300000000448e-05, 2.9583999999999167e-05, 2.965300000000448e-05, 2.9638999999997973e-05, 2.9512999999994904e-05, 2.9638999999997973e-05, 2.961100000001271e-05, 2.9597999999991798e-05, 2.962500000000534e-05, 2.9582999999999693e-05, 2.965300000000448e-05, 2.95970000000062e-05, 2.9610999999998833e-05, 2.962500000000534e-05, 2.967999999999027e-05]</msg>
<status status="PASS" starttime="20201029 18:18:13.916" endtime="20201029 18:18:13.918"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.912" endtime="20201029 18:18:13.919"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.465" endtime="20201029 18:18:13.919"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:18:13.387" endtime="20201029 18:18:13.920" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:13.927" endtime="20201029 18:18:13.946"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.925" endtime="20201029 18:18:13.947"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:13.961" endtime="20201029 18:18:13.979"></status>
</kw>
<msg timestamp="20201029 18:18:13.980" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:13.959" endtime="20201029 18:18:13.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:13.982" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:13.981" endtime="20201029 18:18:13.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:18:13.985" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:18:13.983" endtime="20201029 18:18:13.986"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:13.957" endtime="20201029 18:18:13.986"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:13.953" endtime="20201029 18:18:13.987"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.952" endtime="20201029 18:18:13.987"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:18:13.991" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:18:13.990" endtime="20201029 18:18:13.991"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.988" endtime="20201029 18:18:13.991"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.951" endtime="20201029 18:18:13.992"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.951" endtime="20201029 18:18:13.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:13.993" endtime="20201029 18:18:13.994"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.949" endtime="20201029 18:18:13.995"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.948" endtime="20201029 18:18:13.995"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.924" endtime="20201029 18:18:13.995"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:14.004" endtime="20201029 18:18:14.182"></status>
</kw>
<msg timestamp="20201029 18:18:14.183" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:14.002" endtime="20201029 18:18:14.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:14.185" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:14.184" endtime="20201029 18:18:14.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:14.186" endtime="20201029 18:18:14.188"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.999" endtime="20201029 18:18:14.188"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.997" endtime="20201029 18:18:14.189"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:14.191" endtime="20201029 18:18:14.193"></status>
</kw>
<msg timestamp="20201029 18:18:14.193" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 18:18:14.190" endtime="20201029 18:18:14.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:14.198" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:18:14.196" endtime="20201029 18:18:14.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:14.201" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:18:14.200" endtime="20201029 18:18:14.202"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.194" endtime="20201029 18:18:14.202"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:14.208" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:18:14.206" endtime="20201029 18:18:14.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:14.215" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:18:14.209" endtime="20201029 18:18:14.216"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.203" endtime="20201029 18:18:14.217"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:14.226" endtime="20201029 18:18:14.520"></status>
</kw>
<msg timestamp="20201029 18:18:14.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074863708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074901708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:14.224" endtime="20201029 18:18:14.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:14.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074863708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074901708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:14.525" endtime="20201029 18:18:14.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:14.533" endtime="20201029 18:18:14.534"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.220" endtime="20201029 18:18:14.535"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.218" endtime="20201029 18:18:14.535"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:14.539" level="INFO">${RESULT} = [{'diff': 3.799999999999637e-05}, {'diff': 3.7888999999999284e-05}, {'diff': 3.8041000000002545e-05}, {'diff': 3.797199999999723e-05}, {'diff': 3.7930999999991055e-05}, {'diff': 3.797199999999723e-05}...</msg>
<status status="PASS" starttime="20201029 18:18:14.536" endtime="20201029 18:18:14.539"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:14.543" level="INFO">${OVERHEAD} = {'diff': [3.799999999999637e-05, 3.7888999999999284e-05, 3.8041000000002545e-05, 3.797199999999723e-05, 3.7930999999991055e-05, 3.797199999999723e-05, 3.794399999999809e-05, 3.797199999999723e-05, 3.7...</msg>
<status status="PASS" starttime="20201029 18:18:14.540" endtime="20201029 18:18:14.543"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:14.548" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201029 18:18:14.547" endtime="20201029 18:18:14.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:14.550" level="INFO">VALUE: [3.799999999999637e-05, 3.7888999999999284e-05, 3.8041000000002545e-05, 3.797199999999723e-05, 3.7930999999991055e-05, 3.797199999999723e-05, 3.794399999999809e-05, 3.797199999999723e-05, 3.7958999999990195e-05, 3.7888999999999284e-05, 3.790300000000579e-05, 3.7902999999991915e-05, 3.791600000001283e-05, 3.790300000000579e-05, 3.798599999998986e-05, 3.797199999999723e-05, 3.7944999999997564e-05, 3.794399999998421e-05, 3.795900000000407e-05, 3.788900000001316e-05, 3.797199999999723e-05, 3.8055000000009054e-05, 3.79580000000046e-05, 3.790300000000579e-05, 3.79580000000046e-05, 3.797199999999723e-05, 3.797199999999723e-05, 3.7874999999992776e-05, 3.797199999999723e-05, 3.795900000000407e-05, 3.7888999999985407e-05, 3.790200000000632e-05, 3.79580000000046e-05, 3.798599999998986e-05, 3.7916999999998424e-05, 3.797199999999723e-05, 3.794399999998421e-05, 3.792999999999158e-05, 3.7930999999991055e-05, 3.7930999999991055e-05, 3.797300000002446e-05, 3.786199999999962e-05, 3.797199999999723e-05, 3.788900000001316e-05, 3.793100000001881e-05, 3.797199999999723e-05, 3.7944999999983686e-05, 3.788900000001316e-05, 3.7957999999976844e-05, 3.7916999999998424e-05]</msg>
<status status="PASS" starttime="20201029 18:18:14.549" endtime="20201029 18:18:14.551"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.544" endtime="20201029 18:18:14.552"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.996" endtime="20201029 18:18:14.552"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:18:13.921" endtime="20201029 18:18:14.553" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:14.563" endtime="20201029 18:18:14.585"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.561" endtime="20201029 18:18:14.586"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:14.614" endtime="20201029 18:18:14.635"></status>
</kw>
<msg timestamp="20201029 18:18:14.636" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:14.611" endtime="20201029 18:18:14.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:14.641" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:14.638" endtime="20201029 18:18:14.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:18:14.647" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:18:14.643" endtime="20201029 18:18:14.648"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:14.605" endtime="20201029 18:18:14.649"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:14.600" endtime="20201029 18:18:14.650"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.598" endtime="20201029 18:18:14.651"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:18:14.658" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:18:14.657" endtime="20201029 18:18:14.659"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.653" endtime="20201029 18:18:14.660"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.596" endtime="20201029 18:18:14.660"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.595" endtime="20201029 18:18:14.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:14.662" endtime="20201029 18:18:14.665"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.591" endtime="20201029 18:18:14.665"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.588" endtime="20201029 18:18:14.665"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.560" endtime="20201029 18:18:14.666"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:18:14.669" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:18:14.678" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:18:15.818" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:18:14.668" endtime="20201029 18:18:15.819"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:18:15.822" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 18:18:15.820" endtime="20201029 18:18:15.823"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.666" endtime="20201029 18:18:15.824"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:15.828" endtime="20201029 18:18:15.849"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.826" endtime="20201029 18:18:15.849"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:15.859" endtime="20201029 18:18:15.872"></status>
</kw>
<msg timestamp="20201029 18:18:15.872" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:15.857" endtime="20201029 18:18:15.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:15.875" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:15.873" endtime="20201029 18:18:15.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:15.876" endtime="20201029 18:18:15.877"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.854" endtime="20201029 18:18:15.878"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.852" endtime="20201029 18:18:15.878"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:15.885" endtime="20201029 18:18:16.185"></status>
</kw>
<msg timestamp="20201029 18:18:16.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022148264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022167236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:15.884" endtime="20201029 18:18:16.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:16.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022148264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022167236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:16.190" endtime="20201029 18:18:16.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:16.198" endtime="20201029 18:18:16.200"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.881" endtime="20201029 18:18:16.200"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.879" endtime="20201029 18:18:16.201"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:16.205" level="INFO">${PHILIP_RES} = [{'diff': 1.8971999999999045e-05}, {'diff': 1.8958000000002945e-05}, {'diff': 1.8985999999998615e-05}, {'diff': 1.895899999999895e-05}, {'diff': 1.8916000000000766e-05}, {'diff': 1.8943999999999905e-0...</msg>
<status status="PASS" starttime="20201029 18:18:16.201" endtime="20201029 18:18:16.205"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:16.209" level="INFO">${RESULT} = {'diff': [1.8971999999999045e-05, 1.8958000000002945e-05, 1.8985999999998615e-05, 1.895899999999895e-05, 1.8916000000000766e-05, 1.8943999999999905e-05, 1.901300000000175e-05, 1.8972000000002515e-05, ...</msg>
<status status="PASS" starttime="20201029 18:18:16.206" endtime="20201029 18:18:16.210"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:16.214" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:16.213" endtime="20201029 18:18:16.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:16.216" level="INFO">VALUE: [1.8971999999999045e-05, 1.8958000000002945e-05, 1.8985999999998615e-05, 1.895899999999895e-05, 1.8916000000000766e-05, 1.8943999999999905e-05, 1.901300000000175e-05, 1.8972000000002515e-05, 1.897299999999852e-05, 1.8999999999998185e-05, 1.8986000000002085e-05, 1.9014000000001224e-05, 1.8971999999999045e-05, 1.8943999999999905e-05, 1.895899999999895e-05, 1.8985999999998615e-05, 1.894499999999938e-05, 1.886099999999849e-05, 1.8985999999998615e-05, 1.8971999999999045e-05, 1.8943999999999905e-05, 1.8985999999998615e-05, 1.8985999999998615e-05, 1.894500000000285e-05, 1.8971999999999045e-05, 1.8971999999999045e-05, 1.8957999999999475e-05, 1.9013999999997755e-05, 1.8971999999999045e-05, 1.8943999999999905e-05, 1.895899999999895e-05, 1.8943999999999905e-05, 1.8971999999999045e-05, 1.8986000000002085e-05, 1.8986000000002085e-05, 1.8973000000001988e-05, 1.8943999999999905e-05, 1.8971999999999045e-05, 1.8985999999998615e-05, 1.895900000000242e-05, 1.895899999999895e-05, 1.8985999999998615e-05, 1.8971999999999045e-05, 1.8986000000002085e-05, 1.893099999999981e-05, 1.897299999999852e-05, 1.8999999999998185e-05, 1.8929999999996866e-05, 1.9014000000001224e-05, 1.8957999999999475e-05]</msg>
<status status="PASS" starttime="20201029 18:18:16.215" endtime="20201029 18:18:16.217"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.210" endtime="20201029 18:18:16.217"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.850" endtime="20201029 18:18:16.218"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.826" endtime="20201029 18:18:16.218"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:16.220" endtime="20201029 18:18:16.239"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.219" endtime="20201029 18:18:16.240"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:16.248" endtime="20201029 18:18:16.262"></status>
</kw>
<msg timestamp="20201029 18:18:16.263" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:16.246" endtime="20201029 18:18:16.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:16.265" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:16.264" endtime="20201029 18:18:16.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:16.266" endtime="20201029 18:18:16.268"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.244" endtime="20201029 18:18:16.268"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.242" endtime="20201029 18:18:16.269"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:16.275" endtime="20201029 18:18:16.561"></status>
</kw>
<msg timestamp="20201029 18:18:16.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018247681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018275083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:16.274" endtime="20201029 18:18:16.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:16.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018247681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018275083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:16.565" endtime="20201029 18:18:16.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:16.574" endtime="20201029 18:18:16.575"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.271" endtime="20201029 18:18:16.576"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.270" endtime="20201029 18:18:16.576"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:16.580" level="INFO">${PHILIP_RES} = [{'diff': 2.7401999999999288e-05}, {'diff': 2.740300000000223e-05}, {'diff': 2.7346999999997013e-05}, {'diff': 2.7374999999999622e-05}, {'diff': 2.7416000000002327e-05}, {'diff': 2.7374999999999622e-0...</msg>
<status status="PASS" starttime="20201029 18:18:16.577" endtime="20201029 18:18:16.580"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:16.585" level="INFO">${RESULT} = {'diff': [2.7401999999999288e-05, 2.740300000000223e-05, 2.7346999999997013e-05, 2.7374999999999622e-05, 2.7416000000002327e-05, 2.7374999999999622e-05, 2.7374999999999622e-05, 2.7472000000000607e-05,...</msg>
<status status="PASS" starttime="20201029 18:18:16.581" endtime="20201029 18:18:16.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:16.589" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:16.588" endtime="20201029 18:18:16.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:16.592" level="INFO">VALUE: [2.7401999999999288e-05, 2.740300000000223e-05, 2.7346999999997013e-05, 2.7374999999999622e-05, 2.7416000000002327e-05, 2.7374999999999622e-05, 2.7374999999999622e-05, 2.7472000000000607e-05, 2.7374999999999622e-05, 2.7263999999999067e-05, 2.7388999999999192e-05, 2.7388999999999192e-05, 2.7415999999998858e-05, 2.738900000000266e-05, 2.738900000000266e-05, 2.740300000000223e-05, 2.7374999999999622e-05, 2.7374999999999622e-05, 2.7374999999999622e-05, 2.7388999999999192e-05, 2.7374999999999622e-05, 2.7374999999999622e-05, 2.7374999999999622e-05, 2.7374999999999622e-05, 2.7332999999997443e-05, 2.7347000000000482e-05, 2.7388999999999192e-05, 2.7374999999999622e-05, 2.7319000000001342e-05, 2.7388999999999192e-05, 2.738900000000266e-05, 2.7430000000001897e-05, 2.7333000000000912e-05, 2.7374999999999622e-05, 2.7361000000000052e-05, 2.7374999999999622e-05, 2.740299999999876e-05, 2.7361000000000052e-05, 2.7361000000000052e-05, 2.7333000000000912e-05, 2.7374999999999622e-05, 2.737500000000309e-05, 2.737500000000309e-05, 2.7374999999999622e-05, 2.7388999999999192e-05, 2.7374999999999622e-05, 2.7374999999999622e-05, 2.7346999999997013e-05, 2.7361000000000052e-05, 2.7374999999999622e-05]</msg>
<status status="PASS" starttime="20201029 18:18:16.591" endtime="20201029 18:18:16.593"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.586" endtime="20201029 18:18:16.593"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.241" endtime="20201029 18:18:16.593"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.218" endtime="20201029 18:18:16.594"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:16.596" endtime="20201029 18:18:16.615"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.594" endtime="20201029 18:18:16.616"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:16.624" endtime="20201029 18:18:16.640"></status>
</kw>
<msg timestamp="20201029 18:18:16.641" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:16.622" endtime="20201029 18:18:16.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:16.643" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:16.642" endtime="20201029 18:18:16.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:16.644" endtime="20201029 18:18:16.646"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.620" endtime="20201029 18:18:16.647"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.618" endtime="20201029 18:18:16.647"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:16.654" endtime="20201029 18:18:16.940"></status>
</kw>
<msg timestamp="20201029 18:18:16.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01917275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019208833, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:16.652" endtime="20201029 18:18:16.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:16.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01917275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019208833, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:16.945" endtime="20201029 18:18:16.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:16.953" endtime="20201029 18:18:16.955"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.649" endtime="20201029 18:18:16.955"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.648" endtime="20201029 18:18:16.955"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:16.959" level="INFO">${PHILIP_RES} = [{'diff': 3.6083000000002724e-05}, {'diff': 3.601400000000088e-05}, {'diff': 3.595799999999913e-05}, {'diff': 3.601400000000088e-05}, {'diff': 3.602799999999698e-05}, {'diff': 3.59580000000026e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:16.956" endtime="20201029 18:18:16.959"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:16.963" level="INFO">${RESULT} = {'diff': [3.6083000000002724e-05, 3.601400000000088e-05, 3.595799999999913e-05, 3.601400000000088e-05, 3.602799999999698e-05, 3.59580000000026e-05, 3.602800000000045e-05, 3.604200000000002e-05, 3.5999...</msg>
<status status="PASS" starttime="20201029 18:18:16.960" endtime="20201029 18:18:16.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:16.968" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:16.967" endtime="20201029 18:18:16.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:16.970" level="INFO">VALUE: [3.6083000000002724e-05, 3.601400000000088e-05, 3.595799999999913e-05, 3.601400000000088e-05, 3.602799999999698e-05, 3.59580000000026e-05, 3.602800000000045e-05, 3.604200000000002e-05, 3.599999999999784e-05, 3.594499999999903e-05, 3.598599999999827e-05, 3.602800000000045e-05, 3.594399999999956e-05, 3.598600000000174e-05, 3.605599999999959e-05, 3.6012999999997936e-05, 3.593099999999946e-05, 3.59589999999986e-05, 3.602799999999698e-05, 3.59719999999987e-05, 3.602800000000045e-05, 3.594399999999956e-05, 3.59719999999987e-05, 3.597200000000217e-05, 3.5889000000000754e-05, 3.600000000000131e-05, 3.59719999999987e-05, 3.604200000000002e-05, 3.59719999999987e-05, 3.601399999999741e-05, 3.602800000000045e-05, 3.601400000000088e-05, 3.599999999999784e-05, 3.6040999999997075e-05, 3.601400000000088e-05, 3.600000000000131e-05, 3.5889000000000754e-05, 3.601399999999741e-05, 3.604200000000002e-05, 3.597200000000217e-05, 3.598599999999827e-05, 3.604200000000002e-05, 3.601400000000088e-05, 3.6027000000000975e-05, 3.598599999999827e-05, 3.6041000000000545e-05, 3.597300000000164e-05, 3.598700000000121e-05, 3.604200000000002e-05, 3.601400000000088e-05]</msg>
<status status="PASS" starttime="20201029 18:18:16.969" endtime="20201029 18:18:16.971"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.964" endtime="20201029 18:18:16.971"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.616" endtime="20201029 18:18:16.971"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.594" endtime="20201029 18:18:16.972"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:16.974" endtime="20201029 18:18:16.993"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.973" endtime="20201029 18:18:16.994"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:17.003" endtime="20201029 18:18:17.017"></status>
</kw>
<msg timestamp="20201029 18:18:17.017" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:17.001" endtime="20201029 18:18:17.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:17.020" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:17.018" endtime="20201029 18:18:17.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:17.021" endtime="20201029 18:18:17.023"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.998" endtime="20201029 18:18:17.023"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.996" endtime="20201029 18:18:17.024"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:17.030" endtime="20201029 18:18:17.315"></status>
</kw>
<msg timestamp="20201029 18:18:17.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017849681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017894597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:17.028" endtime="20201029 18:18:17.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:17.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017849681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017894597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:17.319" endtime="20201029 18:18:17.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:17.328" endtime="20201029 18:18:17.329"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.026" endtime="20201029 18:18:17.330"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.024" endtime="20201029 18:18:17.330"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:17.334" level="INFO">${PHILIP_RES} = [{'diff': 4.491600000000248e-05}, {'diff': 4.491600000000248e-05}, {'diff': 4.4916999999998486e-05}, {'diff': 4.4916999999998486e-05}, {'diff': 4.492999999999858e-05}, {'diff': 4.4819000000001497e-05}...</msg>
<status status="PASS" starttime="20201029 18:18:17.331" endtime="20201029 18:18:17.335"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:17.339" level="INFO">${RESULT} = {'diff': [4.491600000000248e-05, 4.491600000000248e-05, 4.4916999999998486e-05, 4.4916999999998486e-05, 4.492999999999858e-05, 4.4819000000001497e-05, 4.483400000000054e-05, 4.4930999999998056e-05, 4....</msg>
<status status="PASS" starttime="20201029 18:18:17.335" endtime="20201029 18:18:17.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:17.344" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:17.342" endtime="20201029 18:18:17.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:17.347" level="INFO">VALUE: [4.491600000000248e-05, 4.491600000000248e-05, 4.4916999999998486e-05, 4.4916999999998486e-05, 4.492999999999858e-05, 4.4819000000001497e-05, 4.483400000000054e-05, 4.4930999999998056e-05, 4.492999999999858e-05, 4.4861000000000206e-05, 4.4903000000002385e-05, 4.4888999999999346e-05, 4.495800000000119e-05, 4.484799999999664e-05, 4.4861000000000206e-05, 4.4931000000001525e-05, 4.492999999999858e-05, 4.4847000000000636e-05, 4.4931000000001525e-05, 4.493000000000205e-05, 4.495800000000119e-05, 4.4917000000001955e-05, 4.4861000000000206e-05, 4.4888999999999346e-05, 4.493000000000205e-05, 4.491599999999901e-05, 4.4902999999998916e-05, 4.4916999999998486e-05, 4.4847000000000636e-05, 4.4945000000001095e-05, 4.494400000000162e-05, 4.4917000000001955e-05, 4.4847000000000636e-05, 4.494400000000162e-05, 4.4931000000001525e-05, 4.4861000000000206e-05, 4.494400000000162e-05, 4.4847000000000636e-05, 4.495800000000119e-05, 4.4916999999998486e-05, 4.49999999999999e-05, 4.501399999999947e-05, 4.4945000000001095e-05, 4.479199999999836e-05, 4.4945000000001095e-05, 4.4833000000001066e-05, 4.4847000000000636e-05, 4.4902999999998916e-05, 4.4889000000002816e-05, 4.4888999999999346e-05]</msg>
<status status="PASS" starttime="20201029 18:18:17.346" endtime="20201029 18:18:17.348"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.340" endtime="20201029 18:18:17.348"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.995" endtime="20201029 18:18:17.348"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.972" endtime="20201029 18:18:17.349"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:17.351" endtime="20201029 18:18:17.370"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.350" endtime="20201029 18:18:17.371"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:17.379" endtime="20201029 18:18:17.398"></status>
</kw>
<msg timestamp="20201029 18:18:17.398" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:17.377" endtime="20201029 18:18:17.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:17.401" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:17.399" endtime="20201029 18:18:17.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:17.402" endtime="20201029 18:18:17.404"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.375" endtime="20201029 18:18:17.404"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.373" endtime="20201029 18:18:17.405"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:17.411" endtime="20201029 18:18:17.697"></status>
</kw>
<msg timestamp="20201029 18:18:17.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017735708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017789736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:17.410" endtime="20201029 18:18:17.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:17.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017735708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017789736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:17.702" endtime="20201029 18:18:17.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:17.711" endtime="20201029 18:18:17.713"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.407" endtime="20201029 18:18:17.713"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.405" endtime="20201029 18:18:17.714"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:17.717" level="INFO">${PHILIP_RES} = [{'diff': 5.40280000000011e-05}, {'diff': 5.411099999999905e-05}, {'diff': 5.405600000000024e-05}, {'diff': 5.4013999999998064e-05}, {'diff': 5.4013999999998064e-05}, {'diff': 5.409799999999895e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:18:17.714" endtime="20201029 18:18:17.718"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:17.722" level="INFO">${RESULT} = {'diff': [5.40280000000011e-05, 5.411099999999905e-05, 5.405600000000024e-05, 5.4013999999998064e-05, 5.4013999999998064e-05, 5.409799999999895e-05, 5.405600000000024e-05, 5.3971999999999354e-05, 5.40...</msg>
<status status="PASS" starttime="20201029 18:18:17.718" endtime="20201029 18:18:17.723"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:17.727" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:17.726" endtime="20201029 18:18:17.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:17.729" level="INFO">VALUE: [5.40280000000011e-05, 5.411099999999905e-05, 5.405600000000024e-05, 5.4013999999998064e-05, 5.4013999999998064e-05, 5.409799999999895e-05, 5.405600000000024e-05, 5.3971999999999354e-05, 5.402700000000163e-05, 5.401299999999859e-05, 5.3999999999998494e-05, 5.40280000000011e-05, 5.409699999999948e-05, 5.3999999999998494e-05, 5.406899999999687e-05, 5.401400000000153e-05, 5.405600000000024e-05, 5.406900000000034e-05, 5.398600000000239e-05, 5.3957999999999784e-05, 5.406999999999981e-05, 5.409799999999895e-05, 5.409699999999948e-05, 5.405500000000077e-05, 5.4027999999997633e-05, 5.405600000000024e-05, 5.400000000000196e-05, 5.398600000000239e-05, 5.395899999999926e-05, 5.400000000000196e-05, 5.406999999999981e-05, 5.398700000000187e-05, 5.3957999999999784e-05, 5.3999999999998494e-05, 5.400000000000196e-05, 5.398600000000239e-05, 5.408399999999938e-05, 5.397200000000282e-05, 5.3985999999998924e-05, 5.406900000000034e-05, 5.405500000000077e-05, 5.408399999999938e-05, 5.409699999999948e-05, 5.408299999999991e-05, 5.40419999999972e-05, 5.397200000000282e-05, 5.406999999999981e-05, 5.4013999999998064e-05, 5.411099999999905e-05, 5.409699999999948e-05]</msg>
<status status="PASS" starttime="20201029 18:18:17.728" endtime="20201029 18:18:17.729"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.723" endtime="20201029 18:18:17.730"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.371" endtime="20201029 18:18:17.730"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.349" endtime="20201029 18:18:17.731"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:17.733" endtime="20201029 18:18:17.752"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.731" endtime="20201029 18:18:17.753"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:17.761" endtime="20201029 18:18:17.780"></status>
</kw>
<msg timestamp="20201029 18:18:17.780" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:17.759" endtime="20201029 18:18:17.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:17.783" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:17.782" endtime="20201029 18:18:17.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:17.784" endtime="20201029 18:18:17.786"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.757" endtime="20201029 18:18:17.786"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.755" endtime="20201029 18:18:17.787"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:17.793" endtime="20201029 18:18:18.080"></status>
</kw>
<msg timestamp="20201029 18:18:18.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017520389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017583861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:17.792" endtime="20201029 18:18:18.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:18.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017520389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017583861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:18.084" endtime="20201029 18:18:18.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:18.092" endtime="20201029 18:18:18.095"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.789" endtime="20201029 18:18:18.095"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.787" endtime="20201029 18:18:18.095"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:18.099" level="INFO">${PHILIP_RES} = [{'diff': 6.347199999999845e-05}, {'diff': 6.34439999999993e-05}, {'diff': 6.344500000000225e-05}, {'diff': 6.340300000000007e-05}, {'diff': 6.342999999999974e-05}, {'diff': 6.340300000000007e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:18.096" endtime="20201029 18:18:18.099"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:18.103" level="INFO">${RESULT} = {'diff': [6.347199999999845e-05, 6.34439999999993e-05, 6.344500000000225e-05, 6.340300000000007e-05, 6.342999999999974e-05, 6.340300000000007e-05, 6.338800000000103e-05, 6.347199999999845e-05, 6.34999...</msg>
<status status="PASS" starttime="20201029 18:18:18.100" endtime="20201029 18:18:18.104"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:18.108" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:18.107" endtime="20201029 18:18:18.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:18.110" level="INFO">VALUE: [6.347199999999845e-05, 6.34439999999993e-05, 6.344500000000225e-05, 6.340300000000007e-05, 6.342999999999974e-05, 6.340300000000007e-05, 6.338800000000103e-05, 6.347199999999845e-05, 6.349999999999759e-05, 6.345899999999835e-05, 6.348699999999749e-05, 6.345899999999835e-05, 6.345899999999835e-05, 6.33890000000005e-05, 6.33890000000005e-05, 6.341600000000017e-05, 6.343100000000268e-05, 6.34439999999993e-05, 6.33890000000005e-05, 6.343099999999921e-05, 6.350000000000106e-05, 6.33340000000017e-05, 6.344500000000225e-05, 6.334700000000179e-05, 6.348700000000096e-05, 6.345900000000182e-05, 6.33890000000005e-05, 6.340300000000007e-05, 6.347199999999845e-05, 6.34020000000006e-05, 6.340300000000007e-05, 6.336099999999789e-05, 6.342999999999974e-05, 6.347199999999845e-05, 6.345800000000235e-05, 6.345800000000235e-05, 6.345800000000235e-05, 6.347199999999845e-05, 6.344499999999878e-05, 6.337500000000093e-05, 6.33890000000005e-05, 6.348700000000096e-05, 6.347300000000139e-05, 6.338800000000103e-05, 6.33890000000005e-05, 6.336100000000136e-05, 6.337500000000093e-05, 6.347300000000139e-05, 6.351300000000115e-05, 6.337500000000093e-05]</msg>
<status status="PASS" starttime="20201029 18:18:18.109" endtime="20201029 18:18:18.110"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.104" endtime="20201029 18:18:18.111"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.754" endtime="20201029 18:18:18.111"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.731" endtime="20201029 18:18:18.111"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:18.114" endtime="20201029 18:18:18.133"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.112" endtime="20201029 18:18:18.134"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:18.142" endtime="20201029 18:18:18.161"></status>
</kw>
<msg timestamp="20201029 18:18:18.162" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:18.140" endtime="20201029 18:18:18.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:18.164" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:18.163" endtime="20201029 18:18:18.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:18.165" endtime="20201029 18:18:18.168"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.138" endtime="20201029 18:18:18.168"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.136" endtime="20201029 18:18:18.169"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:18.175" endtime="20201029 18:18:18.461"></status>
</kw>
<msg timestamp="20201029 18:18:18.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018494736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018567819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:18.174" endtime="20201029 18:18:18.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:18.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018494736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018567819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:18.466" endtime="20201029 18:18:18.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:18.474" endtime="20201029 18:18:18.475"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.171" endtime="20201029 18:18:18.476"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.169" endtime="20201029 18:18:18.476"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:18.480" level="INFO">${PHILIP_RES} = [{'diff': 7.30829999999981e-05}, {'diff': 7.301399999999972e-05}, {'diff': 7.301399999999972e-05}, {'diff': 7.31110000000007e-05}, {'diff': 7.313899999999984e-05}, {'diff': 7.304100000000285e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:18:18.477" endtime="20201029 18:18:18.480"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:18.484" level="INFO">${RESULT} = {'diff': [7.30829999999981e-05, 7.301399999999972e-05, 7.301399999999972e-05, 7.31110000000007e-05, 7.313899999999984e-05, 7.304100000000285e-05, 7.301399999999972e-05, 7.315299999999941e-05, 7.305600...</msg>
<status status="PASS" starttime="20201029 18:18:18.481" endtime="20201029 18:18:18.484"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:18.488" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:18.487" endtime="20201029 18:18:18.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:18.491" level="INFO">VALUE: [7.30829999999981e-05, 7.301399999999972e-05, 7.301399999999972e-05, 7.31110000000007e-05, 7.313899999999984e-05, 7.304100000000285e-05, 7.301399999999972e-05, 7.315299999999941e-05, 7.30560000000019e-05, 7.307000000000147e-05, 7.302799999999929e-05, 7.31110000000007e-05, 7.315299999999941e-05, 7.312500000000027e-05, 7.31110000000007e-05, 7.309699999999766e-05, 7.304199999999886e-05, 7.31110000000007e-05, 7.31110000000007e-05, 7.309700000000113e-05, 7.315299999999941e-05, 7.309700000000113e-05, 7.31249999999968e-05, 7.30829999999981e-05, 7.312500000000027e-05, 7.312500000000027e-05, 7.312500000000027e-05, 7.309699999999766e-05, 7.309699999999766e-05, 7.305500000000242e-05, 7.312500000000027e-05, 7.31110000000007e-05, 7.316699999999898e-05, 7.312500000000027e-05, 7.312500000000027e-05, 7.318099999999855e-05, 7.31110000000007e-05, 7.317999999999908e-05, 7.312500000000027e-05, 7.308300000000156e-05, 7.302799999999929e-05, 7.313899999999984e-05, 7.306899999999852e-05, 7.315199999999994e-05, 7.315299999999941e-05, 7.301399999999972e-05, 7.3069999999998e-05, 7.31249999999968e-05, 7.309800000000061e-05, 7.319499999999812e-05]</msg>
<status status="PASS" starttime="20201029 18:18:18.490" endtime="20201029 18:18:18.492"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.485" endtime="20201029 18:18:18.493"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.134" endtime="20201029 18:18:18.493"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.112" endtime="20201029 18:18:18.493"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:18.495" endtime="20201029 18:18:18.515"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.494" endtime="20201029 18:18:18.515"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:18.524" endtime="20201029 18:18:18.549"></status>
</kw>
<msg timestamp="20201029 18:18:18.549" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:18.522" endtime="20201029 18:18:18.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:18.551" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:18.550" endtime="20201029 18:18:18.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:18.553" endtime="20201029 18:18:18.554"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.519" endtime="20201029 18:18:18.555"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.517" endtime="20201029 18:18:18.555"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:18.561" endtime="20201029 18:18:18.847"></status>
</kw>
<msg timestamp="20201029 18:18:18.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018695361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018778389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:18.560" endtime="20201029 18:18:18.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:18.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018695361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018778389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:18.851" endtime="20201029 18:18:18.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:18.859" endtime="20201029 18:18:18.861"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.557" endtime="20201029 18:18:18.862"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.556" endtime="20201029 18:18:18.862"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:18.866" level="INFO">${PHILIP_RES} = [{'diff': 8.302799999999888e-05}, {'diff': 8.294400000000146e-05}, {'diff': 8.293100000000136e-05}, {'diff': 8.302699999999941e-05}, {'diff': 8.302800000000235e-05}, {'diff': 8.299999999999974e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:18.863" endtime="20201029 18:18:18.866"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:18.873" level="INFO">${RESULT} = {'diff': [8.302799999999888e-05, 8.294400000000146e-05, 8.293100000000136e-05, 8.302699999999941e-05, 8.302800000000235e-05, 8.299999999999974e-05, 8.304200000000192e-05, 8.291600000000232e-05, 8.3041...</msg>
<status status="PASS" starttime="20201029 18:18:18.867" endtime="20201029 18:18:18.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:18.877" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:18.876" endtime="20201029 18:18:18.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:18.879" level="INFO">VALUE: [8.302799999999888e-05, 8.294400000000146e-05, 8.293100000000136e-05, 8.302699999999941e-05, 8.302800000000235e-05, 8.299999999999974e-05, 8.304200000000192e-05, 8.291600000000232e-05, 8.304199999999845e-05, 8.306999999999759e-05, 8.299999999999974e-05, 8.306899999999812e-05, 8.29720000000006e-05, 8.305599999999802e-05, 8.294499999999747e-05, 8.301400000000278e-05, 8.302799999999888e-05, 8.301399999999931e-05, 8.304099999999898e-05, 8.302799999999888e-05, 8.295800000000103e-05, 8.293100000000136e-05, 8.301399999999931e-05, 8.288900000000265e-05, 8.294399999999799e-05, 8.301399999999931e-05, 8.295800000000103e-05, 8.29170000000018e-05, 8.302799999999888e-05, 8.306899999999812e-05, 8.298699999999964e-05, 8.305599999999802e-05, 8.294500000000093e-05, 8.294400000000146e-05, 8.302800000000235e-05, 8.302799999999888e-05, 8.29170000000018e-05, 8.300000000000321e-05, 8.29720000000006e-05, 8.304199999999845e-05, 8.302700000000288e-05, 8.293100000000136e-05, 8.292999999999842e-05, 8.290299999999876e-05, 8.305600000000149e-05, 8.30980000000002e-05, 8.298600000000017e-05, 8.304199999999845e-05, 8.304099999999898e-05, 8.305599999999802e-05]</msg>
<status status="PASS" starttime="20201029 18:18:18.878" endtime="20201029 18:18:18.880"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.874" endtime="20201029 18:18:18.880"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.516" endtime="20201029 18:18:18.881"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.493" endtime="20201029 18:18:18.881"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:18.883" endtime="20201029 18:18:18.903"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.882" endtime="20201029 18:18:18.903"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:18.911" endtime="20201029 18:18:18.936"></status>
</kw>
<msg timestamp="20201029 18:18:18.936" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:18.910" endtime="20201029 18:18:18.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:18.939" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:18.937" endtime="20201029 18:18:18.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:18.940" endtime="20201029 18:18:18.941"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.907" endtime="20201029 18:18:18.942"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.905" endtime="20201029 18:18:18.942"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:18.948" endtime="20201029 18:18:19.235"></status>
</kw>
<msg timestamp="20201029 18:18:19.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017839125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01793225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:18.947" endtime="20201029 18:18:19.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:19.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017839125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01793225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:19.239" endtime="20201029 18:18:19.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:19.249" endtime="20201029 18:18:19.252"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.944" endtime="20201029 18:18:19.253"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.943" endtime="20201029 18:18:19.253"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:19.258" level="INFO">${PHILIP_RES} = [{'diff': 9.312499999999946e-05}, {'diff': 9.318099999999774e-05}, {'diff': 9.305599999999761e-05}, {'diff': 9.319399999999783e-05}, {'diff': 9.307000000000065e-05}, {'diff': 9.31659999999987e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:19.254" endtime="20201029 18:18:19.259"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:19.263" level="INFO">${RESULT} = {'diff': [9.312499999999946e-05, 9.318099999999774e-05, 9.305599999999761e-05, 9.319399999999783e-05, 9.307000000000065e-05, 9.31659999999987e-05, 9.312499999999946e-05, 9.320800000000087e-05, 9.31249...</msg>
<status status="PASS" starttime="20201029 18:18:19.260" endtime="20201029 18:18:19.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:19.267" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:19.266" endtime="20201029 18:18:19.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:19.269" level="INFO">VALUE: [9.312499999999946e-05, 9.318099999999774e-05, 9.305599999999761e-05, 9.319399999999783e-05, 9.307000000000065e-05, 9.31659999999987e-05, 9.312499999999946e-05, 9.320800000000087e-05, 9.312499999999946e-05, 9.305599999999761e-05, 9.305600000000108e-05, 9.298599999999976e-05, 9.308400000000022e-05, 9.31529999999986e-05, 9.312499999999946e-05, 9.312500000000293e-05, 9.31659999999987e-05, 9.309799999999979e-05, 9.308400000000022e-05, 9.305600000000108e-05, 9.309799999999979e-05, 9.315300000000207e-05, 9.298599999999976e-05, 9.309699999999685e-05, 9.31659999999987e-05, 9.305599999999761e-05, 9.312499999999946e-05, 9.312499999999946e-05, 9.307000000000065e-05, 9.305599999999761e-05, 9.309700000000032e-05, 9.31659999999987e-05, 9.315300000000207e-05, 9.311099999999989e-05, 9.313899999999903e-05, 9.318000000000173e-05, 9.318100000000121e-05, 9.305599999999761e-05, 9.324999999999958e-05, 9.315300000000207e-05, 9.316700000000164e-05, 9.312499999999946e-05, 9.304200000000151e-05, 9.31529999999986e-05, 9.31529999999986e-05, 9.31940000000013e-05, 9.31529999999986e-05, 9.312499999999946e-05, 9.31529999999986e-05, 9.316699999999817e-05]</msg>
<status status="PASS" starttime="20201029 18:18:19.268" endtime="20201029 18:18:19.270"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.264" endtime="20201029 18:18:19.270"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.904" endtime="20201029 18:18:19.271"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.881" endtime="20201029 18:18:19.271"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:19.273" endtime="20201029 18:18:19.293"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.272" endtime="20201029 18:18:19.293"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:19.302" endtime="20201029 18:18:19.327"></status>
</kw>
<msg timestamp="20201029 18:18:19.328" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:19.300" endtime="20201029 18:18:19.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:19.330" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:19.329" endtime="20201029 18:18:19.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:19.331" endtime="20201029 18:18:19.334"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.298" endtime="20201029 18:18:19.334"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.295" endtime="20201029 18:18:19.335"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:19.341" endtime="20201029 18:18:19.626"></status>
</kw>
<msg timestamp="20201029 18:18:19.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019616028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019719528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:19.339" endtime="20201029 18:18:19.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:19.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019616028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019719528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:19.630" endtime="20201029 18:18:19.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:19.637" endtime="20201029 18:18:19.639"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.337" endtime="20201029 18:18:19.639"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.335" endtime="20201029 18:18:19.640"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:19.644" level="INFO">${PHILIP_RES} = [{'diff': 0.00010349999999999943}, {'diff': 0.00010345799999999725}, {'diff': 0.00010347199999999682}, {'diff': 0.00010352800000000204}, {'diff': 0.00010347200000000029}, {'diff': 0.000103555000000001...</msg>
<status status="PASS" starttime="20201029 18:18:19.641" endtime="20201029 18:18:19.644"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:19.648" level="INFO">${RESULT} = {'diff': [0.00010349999999999943, 0.00010345799999999725, 0.00010347199999999682, 0.00010352800000000204, 0.00010347200000000029, 0.0001035550000000017, 0.00010338800000000287, 0.00010340200000000244,...</msg>
<status status="PASS" starttime="20201029 18:18:19.645" endtime="20201029 18:18:19.648"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:19.652" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:19.651" endtime="20201029 18:18:19.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:19.654" level="INFO">VALUE: [0.00010349999999999943, 0.00010345799999999725, 0.00010347199999999682, 0.00010352800000000204, 0.00010347200000000029, 0.0001035550000000017, 0.00010338800000000287, 0.00010340200000000244, 0.00010345799999999725, 0.00010347200000000029, 0.00010345800000000072, 0.00010343100000000105, 0.00010348599999999986, 0.00010347200000000029, 0.00010345900000000019, 0.00010344500000000062, 0.00010345900000000019, 0.00010345800000000072, 0.000103513999999999, 0.00010348599999999986, 0.00010345900000000019, 0.00010349999999999943, 0.00010345800000000072, 0.00010345800000000072, 0.00010348599999999986, 0.00010342999999999811, 0.00010348599999999986, 0.00010349999999999943, 0.00010358400000000031, 0.00010338899999999887, 0.0001033879999999994, 0.00010349999999999943, 0.00010348599999999986, 0.000103513999999999, 0.00010347200000000029, 0.00010347200000000029, 0.00010347200000000029, 0.0001035420000000016, 0.00010350000000000636, 0.00010347299999999976, 0.00010349999999999943, 0.00010344500000000062, 0.00010352699999999909, 0.00010345900000000019, 0.000103513999999999, 0.00010347200000000029, 0.00010348599999999986, 0.00010341700000000148, 0.00010347200000000029, 0.00010348699999999933]</msg>
<status status="PASS" starttime="20201029 18:18:19.653" endtime="20201029 18:18:19.655"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.648" endtime="20201029 18:18:19.656"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.294" endtime="20201029 18:18:19.656"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.271" endtime="20201029 18:18:19.656"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:19.659" endtime="20201029 18:18:19.678"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.657" endtime="20201029 18:18:19.679"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:19.687" endtime="20201029 18:18:19.718"></status>
</kw>
<msg timestamp="20201029 18:18:19.719" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:19.686" endtime="20201029 18:18:19.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:19.721" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:19.720" endtime="20201029 18:18:19.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:19.722" endtime="20201029 18:18:19.724"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.683" endtime="20201029 18:18:19.724"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.681" endtime="20201029 18:18:19.725"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:19.731" endtime="20201029 18:18:20.016"></status>
</kw>
<msg timestamp="20201029 18:18:20.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021104083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021218236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:19.729" endtime="20201029 18:18:20.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:20.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021104083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021218236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:20.020" endtime="20201029 18:18:20.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:20.028" endtime="20201029 18:18:20.030"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.727" endtime="20201029 18:18:20.030"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.725" endtime="20201029 18:18:20.031"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:20.035" level="INFO">${PHILIP_RES} = [{'diff': 0.00011415300000000225}, {'diff': 0.00011420799999999759}, {'diff': 0.00011416699999999835}, {'diff': 0.00011422200000000063}, {'diff': 0.00011419399999999802}, {'diff': 0.000114055000000001...</msg>
<status status="PASS" starttime="20201029 18:18:20.032" endtime="20201029 18:18:20.035"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:20.039" level="INFO">${RESULT} = {'diff': [0.00011415300000000225, 0.00011420799999999759, 0.00011416699999999835, 0.00011422200000000063, 0.00011419399999999802, 0.0001140550000000018, 0.00011416600000000235, 0.0001142230000000001, ...</msg>
<status status="PASS" starttime="20201029 18:18:20.036" endtime="20201029 18:18:20.040"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:20.044" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:20.043" endtime="20201029 18:18:20.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:20.046" level="INFO">VALUE: [0.00011415300000000225, 0.00011420799999999759, 0.00011416699999999835, 0.00011422200000000063, 0.00011419399999999802, 0.0001140550000000018, 0.00011416600000000235, 0.0001142230000000001, 0.00011415299999999878, 0.00011420900000000053, 0.00011420799999999759, 0.00011422200000000063, 0.00011423599999999673, 0.00011416699999999835, 0.00011424999999999977, 0.00011420800000000106, 0.00011420799999999759, 0.00011412499999999964, 0.00011419500000000096, 0.00011415199999999931, 0.00011411199999999955, 0.00011422200000000063, 0.00011419400000000149, 0.00011419499999999749, 0.00011420900000000053, 0.00011408300000000093, 0.0001142360000000002, 0.00011422200000000063, 0.00011420800000000106, 0.00011425000000000324, 0.00011415199999999931, 0.00011413899999999921, 0.00011423599999999673, 0.00011422199999999716, 0.00011415300000000572, 0.00011422299999999663, 0.00011419499999999749, 0.00011422199999999716, 0.00011420799999999759, 0.00011426399999999587, 0.0001140970000000005, 0.00011422199999999716, 0.00011422299999999663, 0.00011412499999999964, 0.0001142499999999963, 0.00011423599999999673, 0.00011423599999999673, 0.0001142629999999964, 0.00011420799999999759, 0.00011423599999999673]</msg>
<status status="PASS" starttime="20201029 18:18:20.045" endtime="20201029 18:18:20.046"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.040" endtime="20201029 18:18:20.047"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.680" endtime="20201029 18:18:20.047"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.657" endtime="20201029 18:18:20.048"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:20.050" endtime="20201029 18:18:20.070"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.049" endtime="20201029 18:18:20.070"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:20.078" endtime="20201029 18:18:20.117"></status>
</kw>
<msg timestamp="20201029 18:18:20.117" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:20.077" endtime="20201029 18:18:20.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:20.119" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:20.118" endtime="20201029 18:18:20.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:20.120" endtime="20201029 18:18:20.122"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.074" endtime="20201029 18:18:20.123"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.072" endtime="20201029 18:18:20.123"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:20.129" endtime="20201029 18:18:20.418"></status>
</kw>
<msg timestamp="20201029 18:18:20.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021434639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021559833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:20.128" endtime="20201029 18:18:20.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:20.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021434639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021559833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:20.427" endtime="20201029 18:18:20.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:20.444" endtime="20201029 18:18:20.449"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.125" endtime="20201029 18:18:20.450"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.124" endtime="20201029 18:18:20.451"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:20.459" level="INFO">${PHILIP_RES} = [{'diff': 0.00012519400000000208}, {'diff': 0.00012516599999999947}, {'diff': 0.00012515300000000285}, {'diff': 0.00012518100000000199}, {'diff': 0.0001251389999999998}, {'diff': 0.0001251940000000020...</msg>
<status status="PASS" starttime="20201029 18:18:20.453" endtime="20201029 18:18:20.460"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:20.468" level="INFO">${RESULT} = {'diff': [0.00012519400000000208, 0.00012516599999999947, 0.00012515300000000285, 0.00012518100000000199, 0.0001251389999999998, 0.00012519400000000208, 0.00012506900000000196, 0.0001251389999999998, ...</msg>
<status status="PASS" starttime="20201029 18:18:20.461" endtime="20201029 18:18:20.468"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:20.477" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:20.475" endtime="20201029 18:18:20.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:20.482" level="INFO">VALUE: [0.00012519400000000208, 0.00012516599999999947, 0.00012515300000000285, 0.00012518100000000199, 0.0001251389999999998, 0.00012519400000000208, 0.00012506900000000196, 0.0001251389999999998, 0.00012516700000000242, 0.00012504199999999882, 0.00012504199999999882, 0.00012512500000000024, 0.00012511200000000014, 0.00012502799999999925, 0.00012504099999999935, 0.00012516700000000242, 0.00012515299999999938, 0.00012504199999999882, 0.00012512500000000024, 0.00012515299999999938, 0.00012516699999999895, 0.00012512500000000024, 0.0001251389999999998, 0.00012515299999999938, 0.0001251389999999998, 0.00012501399999999968, 0.0001250420000000023, 0.0001250689999999985, 0.00012502799999999925, 0.00012509700000000457, 0.000125165999999996, 0.00012504099999999935, 0.00012516600000000294, 0.00012501399999999968, 0.00012506999999999796, 0.0001250559999999984, 0.00012498600000000054, 0.00012501399999999968, 0.00012511100000000414, 0.00012504099999999935, 0.00012508299999999806, 0.00012504199999999882, 0.00012513899999999634, 0.00012513899999999634, 0.00012501399999999968, 0.00012508400000000447, 0.00012508299999999806, 0.00012512499999999677, 0.00012508299999999806, 0.00012516699999999548]</msg>
<status status="PASS" starttime="20201029 18:18:20.479" endtime="20201029 18:18:20.483"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.470" endtime="20201029 18:18:20.484"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.071" endtime="20201029 18:18:20.485"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.048" endtime="20201029 18:18:20.486"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:20.490" endtime="20201029 18:18:20.512"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.487" endtime="20201029 18:18:20.513"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:20.521" endtime="20201029 18:18:20.553"></status>
</kw>
<msg timestamp="20201029 18:18:20.554" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:20.520" endtime="20201029 18:18:20.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:20.556" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:20.555" endtime="20201029 18:18:20.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:20.557" endtime="20201029 18:18:20.560"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.517" endtime="20201029 18:18:20.560"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.515" endtime="20201029 18:18:20.560"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:20.567" endtime="20201029 18:18:20.852"></status>
</kw>
<msg timestamp="20201029 18:18:20.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022666861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022802958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:20.565" endtime="20201029 18:18:20.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:20.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022666861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022802958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:20.856" endtime="20201029 18:18:20.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:20.864" endtime="20201029 18:18:20.865"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.563" endtime="20201029 18:18:20.866"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.561" endtime="20201029 18:18:20.866"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:20.870" level="INFO">${PHILIP_RES} = [{'diff': 0.0001360970000000017}, {'diff': 0.00013615299999999997}, {'diff': 0.0001361390000000004}, {'diff': 0.0001361390000000004}, {'diff': 0.0001361809999999991}, {'diff': 0.00013619499999999868},...</msg>
<status status="PASS" starttime="20201029 18:18:20.867" endtime="20201029 18:18:20.870"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:20.874" level="INFO">${RESULT} = {'diff': [0.0001360970000000017, 0.00013615299999999997, 0.0001361390000000004, 0.0001361390000000004, 0.0001361809999999991, 0.00013619499999999868, 0.000136167000000003, 0.00013623599999999791, 0.00...</msg>
<status status="PASS" starttime="20201029 18:18:20.871" endtime="20201029 18:18:20.874"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:20.878" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:20.877" endtime="20201029 18:18:20.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:20.881" level="INFO">VALUE: [0.0001360970000000017, 0.00013615299999999997, 0.0001361390000000004, 0.0001361390000000004, 0.0001361809999999991, 0.00013619499999999868, 0.000136167000000003, 0.00013623599999999791, 0.00013612500000000083, 0.00013609699999999822, 0.0001362369999999974, 0.00013606899999999908, 0.0001361809999999991, 0.00013612500000000083, 0.0001361520000000005, 0.00013615299999999997, 0.00013615299999999997, 0.00013612500000000083, 0.00013630599999999923, 0.00013613899999999693, 0.00013616699999999954, 0.00013619499999999868, 0.00013615299999999997, 0.00013624999999999748, 0.0001360970000000017, 0.0001360970000000017, 0.00013615299999999997, 0.00013612500000000083, 0.00013615299999999997, 0.00013616600000000006, 0.00013615299999999997, 0.00013615299999999997, 0.00013615299999999997, 0.00013616600000000006, 0.00013617999999999963, 0.00013618100000000605, 0.00013611099999999432, 0.00013615299999999997, 0.00013620899999999825, 0.0001361809999999991, 0.00013615299999999997, 0.00013611100000000126, 0.00013615299999999997, 0.0001360280000000033, 0.00013616699999999954, 0.0001360970000000017, 0.0001361390000000004, 0.0001361390000000004, 0.0001361390000000004, 0.00013611100000000126]</msg>
<status status="PASS" starttime="20201029 18:18:20.880" endtime="20201029 18:18:20.882"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.875" endtime="20201029 18:18:20.883"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.514" endtime="20201029 18:18:20.884"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.486" endtime="20201029 18:18:20.884"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:20.886" endtime="20201029 18:18:20.905"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.885" endtime="20201029 18:18:20.906"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:20.914" endtime="20201029 18:18:20.949"></status>
</kw>
<msg timestamp="20201029 18:18:20.949" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:20.912" endtime="20201029 18:18:20.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:20.952" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:20.951" endtime="20201029 18:18:20.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:20.953" endtime="20201029 18:18:20.955"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.910" endtime="20201029 18:18:20.955"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.908" endtime="20201029 18:18:20.956"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:20.962" endtime="20201029 18:18:21.254"></status>
</kw>
<msg timestamp="20201029 18:18:21.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019618278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019765903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:20.960" endtime="20201029 18:18:21.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019618278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019765903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:21.263" endtime="20201029 18:18:21.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:21.280" endtime="20201029 18:18:21.283"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.958" endtime="20201029 18:18:21.284"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.956" endtime="20201029 18:18:21.285"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:21.293" level="INFO">${PHILIP_RES} = [{'diff': 0.00014762500000000192}, {'diff': 0.00014761099999999888}, {'diff': 0.00014752700000000146}, {'diff': 0.00014756999999999965}, {'diff': 0.00014761200000000183}, {'diff': 0.000147541000000001...</msg>
<status status="PASS" starttime="20201029 18:18:21.287" endtime="20201029 18:18:21.294"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:21.303" level="INFO">${RESULT} = {'diff': [0.00014762500000000192, 0.00014761099999999888, 0.00014752700000000146, 0.00014756999999999965, 0.00014761200000000183, 0.00014754100000000103, 0.00014761200000000183, 0.00014759700000000278...</msg>
<status status="PASS" starttime="20201029 18:18:21.295" endtime="20201029 18:18:21.304"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.312" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:21.310" endtime="20201029 18:18:21.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.317" level="INFO">VALUE: [0.00014762500000000192, 0.00014761099999999888, 0.00014752700000000146, 0.00014756999999999965, 0.00014761200000000183, 0.00014754100000000103, 0.00014761200000000183, 0.00014759700000000278, 0.00014762499999999845, 0.00014749999999999833, 0.0001476520000000016, 0.00014758299999999974, 0.00014755600000000008, 0.00014762500000000192, 0.00014758299999999974, 0.00014752799999999747, 0.0001476390000000015, 0.00014765300000000106, 0.0001476529999999976, 0.0001475969999999993, 0.0001477090000000028, 0.00014768000000000073, 0.00014761099999999888, 0.0001475550000000006, 0.0001476810000000002, 0.00014766700000000063, 0.00014762499999999845, 0.00014761100000000582, 0.0001476800000000042, 0.0001476670000000041, 0.00014756999999999965, 0.00014754100000000103, 0.00014754100000000103, 0.00014761099999999888, 0.00014762499999999845, 0.00014752800000000094, 0.00014756900000000017, 0.00014759800000000572, 0.00014752800000000094, 0.0001476120000000053, 0.0001475000000000018, 0.0001476529999999976, 0.00014765300000000453, 0.0001475969999999993, 0.0001475000000000018, 0.00014768099999999673, 0.00014762499999999845, 0.0001476670000000041, 0.0001476670000000041, 0.00014758399999999922]</msg>
<status status="PASS" starttime="20201029 18:18:21.314" endtime="20201029 18:18:21.319"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.305" endtime="20201029 18:18:21.320"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.907" endtime="20201029 18:18:21.321"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.884" endtime="20201029 18:18:21.321"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:21.325" endtime="20201029 18:18:21.344"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.323" endtime="20201029 18:18:21.345"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:21.353" endtime="20201029 18:18:21.388"></status>
</kw>
<msg timestamp="20201029 18:18:21.388" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:21.351" endtime="20201029 18:18:21.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.391" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:21.389" endtime="20201029 18:18:21.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:21.392" endtime="20201029 18:18:21.393"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.349" endtime="20201029 18:18:21.394"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.347" endtime="20201029 18:18:21.394"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:21.401" endtime="20201029 18:18:21.693"></status>
</kw>
<msg timestamp="20201029 18:18:21.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017889069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018048194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:21.400" endtime="20201029 18:18:21.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017889069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018048194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:21.699" endtime="20201029 18:18:21.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:21.710" endtime="20201029 18:18:21.713"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.397" endtime="20201029 18:18:21.713"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.395" endtime="20201029 18:18:21.714"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:21.718" level="INFO">${PHILIP_RES} = [{'diff': 0.00015912499999999954}, {'diff': 0.00015917999999999835}, {'diff': 0.00015920900000000043}, {'diff': 0.00015911100000000344}, {'diff': 0.0001592360000000001}, {'diff': 0.0001592090000000004...</msg>
<status status="PASS" starttime="20201029 18:18:21.715" endtime="20201029 18:18:21.718"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:21.722" level="INFO">${RESULT} = {'diff': [0.00015912499999999954, 0.00015917999999999835, 0.00015920900000000043, 0.00015911100000000344, 0.0001592360000000001, 0.00015920900000000043, 0.00015922200000000053, 0.00015915300000000215,...</msg>
<status status="PASS" starttime="20201029 18:18:21.719" endtime="20201029 18:18:21.722"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.726" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:21.725" endtime="20201029 18:18:21.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.729" level="INFO">VALUE: [0.00015912499999999954, 0.00015917999999999835, 0.00015920900000000043, 0.00015911100000000344, 0.0001592360000000001, 0.00015920900000000043, 0.00015922200000000053, 0.00015915300000000215, 0.00015915299999999868, 0.00015913899999999911, 0.0001590970000000004, 0.00015922200000000053, 0.00015922199999999706, 0.00015913899999999911, 0.00015916700000000172, 0.00015919399999999792, 0.00015918000000000182, 0.00015919500000000086, 0.00015915299999999868, 0.00015918000000000182, 0.00015926399999999924, 0.00015919500000000086, 0.0001592079999999975, 0.00015913899999999911, 0.00015908300000000083, 0.00015924999999999967, 0.00015911099999999997, 0.00015915300000000215, 0.00015908299999999737, 0.0001592360000000001, 0.00015915200000000268, 0.00015913899999999565, 0.0001592360000000001, 0.0001591940000000014, 0.00015913899999999565, 0.00015915300000000215, 0.00015908299999999737, 0.00015908400000000378, 0.0001591109999999965, 0.00015915300000000215, 0.00015926399999999924, 0.00015915300000000215, 0.00015904199999999813, 0.00015912500000000301, 0.00015909699999999694, 0.00015913900000000258, 0.00015916700000000172, 0.0001591810000000013, 0.00015924999999999967, 0.0001591940000000014]</msg>
<status status="PASS" starttime="20201029 18:18:21.727" endtime="20201029 18:18:21.730"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.723" endtime="20201029 18:18:21.730"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.345" endtime="20201029 18:18:21.731"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.322" endtime="20201029 18:18:21.731"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:21.733" endtime="20201029 18:18:21.753"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.732" endtime="20201029 18:18:21.753"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:21.762" endtime="20201029 18:18:21.800"></status>
</kw>
<msg timestamp="20201029 18:18:21.800" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:21.760" endtime="20201029 18:18:21.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.804" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:21.802" endtime="20201029 18:18:21.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:21.807" endtime="20201029 18:18:21.811"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.757" endtime="20201029 18:18:21.812"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.756" endtime="20201029 18:18:21.813"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:21.825" endtime="20201029 18:18:22.134"></status>
</kw>
<msg timestamp="20201029 18:18:22.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021383931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021555028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:21.822" endtime="20201029 18:18:22.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:22.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021383931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021555028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:22.139" endtime="20201029 18:18:22.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:22.147" endtime="20201029 18:18:22.148"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.818" endtime="20201029 18:18:22.149"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.814" endtime="20201029 18:18:22.149"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:22.153" level="INFO">${PHILIP_RES} = [{'diff': 0.000171097000000002}, {'diff': 0.00017102700000000068}, {'diff': 0.00017106999999999886}, {'diff': 0.00017101400000000058}, {'diff': 0.00017115300000000028}, {'diff': 0.00017102800000000015...</msg>
<status status="PASS" starttime="20201029 18:18:22.150" endtime="20201029 18:18:22.154"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:22.157" level="INFO">${RESULT} = {'diff': [0.000171097000000002, 0.00017102700000000068, 0.00017106999999999886, 0.00017101400000000058, 0.00017115300000000028, 0.00017102800000000015, 0.0001710130000000011, 0.00017102800000000015, 0...</msg>
<status status="PASS" starttime="20201029 18:18:22.154" endtime="20201029 18:18:22.158"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:22.162" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:22.161" endtime="20201029 18:18:22.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:22.164" level="INFO">VALUE: [0.000171097000000002, 0.00017102700000000068, 0.00017106999999999886, 0.00017101400000000058, 0.00017115300000000028, 0.00017102800000000015, 0.0001710130000000011, 0.00017102800000000015, 0.0001710559999999993, 0.00017101400000000058, 0.0001709719999999984, 0.00017102800000000015, 0.00017112500000000114, 0.00017101400000000058, 0.0001709719999999984, 0.000171000000000001, 0.000171000000000001, 0.00017104199999999972, 0.00017104100000000025, 0.00017101400000000058, 0.000171097000000002, 0.00017112500000000114, 0.00017108300000000243, 0.0001710139999999971, 0.00017107000000000233, 0.00017101400000000405, 0.00017105599999999582, 0.00017109800000000147, 0.00017112500000000114, 0.00017111099999999463, 0.00017115300000000028, 0.00017112500000000114, 0.000171097000000002, 0.00017106899999999592, 0.00017108300000000243, 0.00017113899999999377, 0.0001710840000000019, 0.0001711249999999942, 0.00017111100000000157, 0.0001711390000000007, 0.000171097000000002, 0.000171097000000002, 0.00017105499999999635, 0.00017102799999999668, 0.0001710139999999971, 0.00017105599999999582, 0.00017101300000000458, 0.0001710269999999972, 0.00017097299999999788, 0.00017106900000000286]</msg>
<status status="PASS" starttime="20201029 18:18:22.163" endtime="20201029 18:18:22.166"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.158" endtime="20201029 18:18:22.167"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.754" endtime="20201029 18:18:22.167"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.731" endtime="20201029 18:18:22.167"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:22.170" endtime="20201029 18:18:22.189"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.168" endtime="20201029 18:18:22.190"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:22.198" endtime="20201029 18:18:22.241"></status>
</kw>
<msg timestamp="20201029 18:18:22.242" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:22.196" endtime="20201029 18:18:22.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:22.245" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:22.243" endtime="20201029 18:18:22.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:22.246" endtime="20201029 18:18:22.248"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.194" endtime="20201029 18:18:22.248"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.192" endtime="20201029 18:18:22.249"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:22.256" endtime="20201029 18:18:22.543"></status>
</kw>
<msg timestamp="20201029 18:18:22.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022111306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022294472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:22.255" endtime="20201029 18:18:22.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:22.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022111306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022294472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:22.547" endtime="20201029 18:18:22.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:22.555" endtime="20201029 18:18:22.556"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.252" endtime="20201029 18:18:22.557"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.250" endtime="20201029 18:18:22.557"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:22.561" level="INFO">${PHILIP_RES} = [{'diff': 0.0001831659999999985}, {'diff': 0.00018320800000000068}, {'diff': 0.00018312499999999926}, {'diff': 0.00018326399999999896}, {'diff': 0.00018312499999999926}, {'diff': 0.0001832220000000002...</msg>
<status status="PASS" starttime="20201029 18:18:22.558" endtime="20201029 18:18:22.561"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:22.568" level="INFO">${RESULT} = {'diff': [0.0001831659999999985, 0.00018320800000000068, 0.00018312499999999926, 0.00018326399999999896, 0.00018312499999999926, 0.00018322200000000025, 0.00018319500000000058, 0.00018312499999999926,...</msg>
<status status="PASS" starttime="20201029 18:18:22.562" endtime="20201029 18:18:22.568"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:22.572" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:22.571" endtime="20201029 18:18:22.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:22.575" level="INFO">VALUE: [0.0001831659999999985, 0.00018320800000000068, 0.00018312499999999926, 0.00018326399999999896, 0.00018312499999999926, 0.00018322200000000025, 0.00018319500000000058, 0.00018312499999999926, 0.00018317999999999807, 0.00018316699999999797, 0.00018324999999999939, 0.00018323599999999982, 0.00018330600000000113, 0.00018313899999999883, 0.00018313899999999883, 0.00018322200000000025, 0.0001831659999999985, 0.0001832079999999972, 0.0001831529999999984, 0.00018323600000000329, 0.00018322199999999678, 0.0001831529999999984, 0.00018309700000000012, 0.00018330500000000166, 0.00018319400000000458, 0.00018324999999999592, 0.0001831529999999984, 0.00018313899999999883, 0.00018326400000000242, 0.00018322200000000372, 0.00018323600000000329, 0.00018301400000000217, 0.00018312499999999926, 0.00018323600000000329, 0.00018311100000000663, 0.00018322199999999678, 0.00018312499999999926, 0.00018320899999999668, 0.00018318099999999754, 0.00018319399999999764, 0.00018316699999999797, 0.00018301400000000217, 0.00018313899999999883, 0.00018312499999999926, 0.00018322299999999625, 0.00018309700000000012, 0.0001831109999999997, 0.00018322200000000372, 0.00018326400000000242, 0.00018323600000000329]</msg>
<status status="PASS" starttime="20201029 18:18:22.573" endtime="20201029 18:18:22.575"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.569" endtime="20201029 18:18:22.576"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.190" endtime="20201029 18:18:22.576"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.168" endtime="20201029 18:18:22.576"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:22.579" endtime="20201029 18:18:22.598"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.577" endtime="20201029 18:18:22.599"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:22.607" endtime="20201029 18:18:22.649"></status>
</kw>
<msg timestamp="20201029 18:18:22.649" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:22.605" endtime="20201029 18:18:22.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:22.652" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:22.650" endtime="20201029 18:18:22.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:22.653" endtime="20201029 18:18:22.654"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.603" endtime="20201029 18:18:22.655"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.601" endtime="20201029 18:18:22.655"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:22.662" endtime="20201029 18:18:22.959"></status>
</kw>
<msg timestamp="20201029 18:18:22.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020025667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020221347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:22.660" endtime="20201029 18:18:22.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:22.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020025667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020221347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:22.963" endtime="20201029 18:18:22.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:22.971" endtime="20201029 18:18:22.973"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.658" endtime="20201029 18:18:22.974"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.656" endtime="20201029 18:18:22.974"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:22.978" level="INFO">${PHILIP_RES} = [{'diff': 0.00019568000000000016}, {'diff': 0.0001955140000000008}, {'diff': 0.00019550000000000123}, {'diff': 0.00019555500000000003}, {'diff': 0.0001954169999999998}, {'diff': 0.00019551399999999733...</msg>
<status status="PASS" starttime="20201029 18:18:22.975" endtime="20201029 18:18:22.978"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:22.982" level="INFO">${RESULT} = {'diff': [0.00019568000000000016, 0.0001955140000000008, 0.00019550000000000123, 0.00019555500000000003, 0.0001954169999999998, 0.00019551399999999733, 0.00019547199999999862, 0.00019558299999999917, ...</msg>
<status status="PASS" starttime="20201029 18:18:22.979" endtime="20201029 18:18:22.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:22.986" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:22.985" endtime="20201029 18:18:22.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:22.989" level="INFO">VALUE: [0.00019568000000000016, 0.0001955140000000008, 0.00019550000000000123, 0.00019555500000000003, 0.0001954169999999998, 0.00019551399999999733, 0.00019547199999999862, 0.00019558299999999917, 0.0001955140000000008, 0.0001956119999999978, 0.00019561099999999831, 0.00019550000000000123, 0.00019563899999999745, 0.00019552800000000037, 0.00019554199999999994, 0.0001955559999999995, 0.00019541600000000034, 0.0001955689999999996, 0.00019559699999999874, 0.0001955140000000008, 0.00019552800000000037, 0.00019559700000000568, 0.00019555500000000003, 0.0001955140000000008, 0.00019562499999999788, 0.0001955559999999995, 0.00019559700000000568, 0.00019554100000000046, 0.00019554100000000046, 0.00019548599999999472, 0.0001956390000000044, 0.00019552800000000037, 0.00019554100000000046, 0.0001955270000000009, 0.00019550000000000123, 0.00019550000000000123, 0.00019548600000000166, 0.00019550000000000123, 0.00019554199999999994, 0.00019542999999999644, 0.00019554199999999994, 0.00019556999999999908, 0.0001954720000000021, 0.00019554100000000046, 0.00019554199999999994, 0.00019561099999999831, 0.00019550000000000123, 0.0001954720000000021, 0.0001955689999999996, 0.00019562500000000482]</msg>
<status status="PASS" starttime="20201029 18:18:22.987" endtime="20201029 18:18:22.989"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.983" endtime="20201029 18:18:22.990"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.599" endtime="20201029 18:18:22.990"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.577" endtime="20201029 18:18:22.990"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:22.993" endtime="20201029 18:18:23.012"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.991" endtime="20201029 18:18:23.013"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:23.021" endtime="20201029 18:18:23.065"></status>
</kw>
<msg timestamp="20201029 18:18:23.066" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:23.019" endtime="20201029 18:18:23.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.068" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:23.067" endtime="20201029 18:18:23.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:23.069" endtime="20201029 18:18:23.071"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.017" endtime="20201029 18:18:23.072"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.015" endtime="20201029 18:18:23.072"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:23.079" endtime="20201029 18:18:23.366"></status>
</kw>
<msg timestamp="20201029 18:18:23.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017961819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018170208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:23.077" endtime="20201029 18:18:23.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017961819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018170208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:23.370" endtime="20201029 18:18:23.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:23.378" endtime="20201029 18:18:23.380"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.075" endtime="20201029 18:18:23.381"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.073" endtime="20201029 18:18:23.381"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:23.385" level="INFO">${PHILIP_RES} = [{'diff': 0.0002083889999999998}, {'diff': 0.00020831900000000195}, {'diff': 0.0002083049999999989}, {'diff': 0.00020829200000000228}, {'diff': 0.00020834800000000056}, {'diff': 0.00020826400000000314...</msg>
<status status="PASS" starttime="20201029 18:18:23.382" endtime="20201029 18:18:23.385"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:23.389" level="INFO">${RESULT} = {'diff': [0.0002083889999999998, 0.00020831900000000195, 0.0002083049999999989, 0.00020829200000000228, 0.00020834800000000056, 0.00020826400000000314, 0.0002082500000000001, 0.0002082089999999974, 0....</msg>
<status status="PASS" starttime="20201029 18:18:23.386" endtime="20201029 18:18:23.389"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.394" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:23.393" endtime="20201029 18:18:23.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.396" level="INFO">VALUE: [0.0002083889999999998, 0.00020831900000000195, 0.0002083049999999989, 0.00020829200000000228, 0.00020834800000000056, 0.00020826400000000314, 0.0002082500000000001, 0.0002082089999999974, 0.00020830599999999838, 0.00020833399999999752, 0.00020827799999999924, 0.00020815199999999964, 0.00020822200000000096, 0.00020827699999999977, 0.00020826399999999967, 0.00020823600000000053, 0.00020816700000000216, 0.0002082919999999988, 0.00020830599999999838, 0.00020816700000000216, 0.0002083470000000011, 0.00020820799999999792, 0.0002082919999999988, 0.0002082500000000001, 0.000208237, 0.0002082919999999988, 0.0002082919999999988, 0.0002082500000000001, 0.0002082919999999988, 0.00020829099999999934, 0.00020819499999999436, 0.0002082919999999988, 0.0002082919999999988, 0.00020833299999999805, 0.00020822200000000096, 0.00020833399999999752, 0.00020813899999999608, 0.00020829099999999934, 0.00020831999999999795, 0.0002082500000000001, 0.0002081379999999966, 0.00020831900000000542, 0.00020834699999999762, 0.0002081950000000013, 0.00020823600000000053, 0.0002083049999999989, 0.00020823600000000053, 0.00020834700000000456, 0.0002082500000000001, 0.00020833399999999752]</msg>
<status status="PASS" starttime="20201029 18:18:23.395" endtime="20201029 18:18:23.398"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.390" endtime="20201029 18:18:23.398"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.014" endtime="20201029 18:18:23.399"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.991" endtime="20201029 18:18:23.399"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:23.401" endtime="20201029 18:18:23.421"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.400" endtime="20201029 18:18:23.421"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:23.431" endtime="20201029 18:18:23.476"></status>
</kw>
<msg timestamp="20201029 18:18:23.477" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:23.429" endtime="20201029 18:18:23.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.479" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:23.478" endtime="20201029 18:18:23.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:23.480" endtime="20201029 18:18:23.482"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.426" endtime="20201029 18:18:23.483"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.424" endtime="20201029 18:18:23.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:23.490" endtime="20201029 18:18:23.798"></status>
</kw>
<msg timestamp="20201029 18:18:23.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021179264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021400403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:23.488" endtime="20201029 18:18:23.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021179264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021400403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:23.802" endtime="20201029 18:18:23.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:23.810" endtime="20201029 18:18:23.811"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.485" endtime="20201029 18:18:23.812"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.484" endtime="20201029 18:18:23.812"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:23.816" level="INFO">${PHILIP_RES} = [{'diff': 0.00022113899999999867}, {'diff': 0.00022111099999999953}, {'diff': 0.0002211249999999991}, {'diff': 0.00022109699999999996}, {'diff': 0.00022111099999999953}, {'diff': 0.0002210830000000004...</msg>
<status status="PASS" starttime="20201029 18:18:23.813" endtime="20201029 18:18:23.817"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:23.821" level="INFO">${RESULT} = {'diff': [0.00022113899999999867, 0.00022111099999999953, 0.0002211249999999991, 0.00022109699999999996, 0.00022111099999999953, 0.0002210830000000004, 0.00022118100000000085, 0.0002211669999999978, 0...</msg>
<status status="PASS" starttime="20201029 18:18:23.817" endtime="20201029 18:18:23.821"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.826" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:23.825" endtime="20201029 18:18:23.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.828" level="INFO">VALUE: [0.00022113899999999867, 0.00022111099999999953, 0.0002211249999999991, 0.00022109699999999996, 0.00022111099999999953, 0.0002210830000000004, 0.00022118100000000085, 0.0002211669999999978, 0.00022115199999999877, 0.00022116599999999834, 0.00022119500000000042, 0.0002211530000000017, 0.00022106899999999735, 0.0002211249999999991, 0.00022106900000000082, 0.00022118100000000085, 0.00022120800000000052, 0.0002211389999999952, 0.00022108300000000386, 0.00022124999999999923, 0.00022112500000000257, 0.00022113900000000214, 0.00022122200000000009, 0.0002209859999999994, 0.00022097199999999984, 0.0002209310000000006, 0.00022099999999999898, 0.00022100000000000591, 0.00022105499999999778, 0.00022105500000000472, 0.00022113900000000214, 0.00022109700000000343, 0.00022112500000000257, 0.00022099999999999898, 0.00022113900000000214, 0.00022104100000000515, 0.00022101399999999854, 0.00022098699999999888, 0.00022104199999999768, 0.00022097199999999984, 0.00022099999999999898, 0.00022108400000000333, 0.00022105499999999778, 0.00022112500000000257, 0.00022108400000000333, 0.00022099999999999898, 0.00022108299999999692, 0.00022104199999999768, 0.00022106999999999682, 0.00022108300000000386]</msg>
<status status="PASS" starttime="20201029 18:18:23.827" endtime="20201029 18:18:23.829"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.822" endtime="20201029 18:18:23.830"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.422" endtime="20201029 18:18:23.830"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.399" endtime="20201029 18:18:23.830"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:23.833" endtime="20201029 18:18:23.852"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.831" endtime="20201029 18:18:23.853"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:23.861" endtime="20201029 18:18:23.910"></status>
</kw>
<msg timestamp="20201029 18:18:23.910" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:23.860" endtime="20201029 18:18:23.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.913" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:23.911" endtime="20201029 18:18:23.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:23.914" endtime="20201029 18:18:23.916"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.857" endtime="20201029 18:18:23.916"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.855" endtime="20201029 18:18:23.917"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:23.923" endtime="20201029 18:18:24.209"></status>
</kw>
<msg timestamp="20201029 18:18:24.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021755361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021989694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:23.922" endtime="20201029 18:18:24.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:24.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021755361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021989694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:24.213" endtime="20201029 18:18:24.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:24.221" endtime="20201029 18:18:24.224"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.919" endtime="20201029 18:18:24.225"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.917" endtime="20201029 18:18:24.225"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:24.229" level="INFO">${PHILIP_RES} = [{'diff': 0.00023433299999999976}, {'diff': 0.00023423600000000225}, {'diff': 0.00023420799999999964}, {'diff': 0.00023430500000000062}, {'diff': 0.00023433399999999924}, {'diff': 0.000234222000000002...</msg>
<status status="PASS" starttime="20201029 18:18:24.226" endtime="20201029 18:18:24.229"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:24.233" level="INFO">${RESULT} = {'diff': [0.00023433299999999976, 0.00023423600000000225, 0.00023420799999999964, 0.00023430500000000062, 0.00023433399999999924, 0.00023422200000000268, 0.00023427699999999801, 0.00023440300000000108...</msg>
<status status="PASS" starttime="20201029 18:18:24.230" endtime="20201029 18:18:24.233"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:24.238" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:24.237" endtime="20201029 18:18:24.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:24.240" level="INFO">VALUE: [0.00023433299999999976, 0.00023423600000000225, 0.00023420799999999964, 0.00023430500000000062, 0.00023433399999999924, 0.00023422200000000268, 0.00023427699999999801, 0.00023440300000000108, 0.00023426399999999792, 0.00023422299999999868, 0.0002342219999999992, 0.00023433399999999924, 0.00023429200000000053, 0.00023429200000000053, 0.0002342779999999975, 0.00023427800000000443, 0.0002342779999999975, 0.00023426400000000486, 0.00023430599999999663, 0.00023438800000000204, 0.00023423599999999878, 0.000234292000000004, 0.00023423599999999878, 0.00023433300000000323, 0.00023431899999999672, 0.000234292000000004, 0.00023424999999999835, 0.00023424999999999835, 0.000234292000000004, 0.00023426400000000486, 0.00023437500000000194, 0.00023430599999999663, 0.0002342500000000053, 0.00023426399999999792, 0.00023434699999999586, 0.00023429099999999758, 0.0002342500000000053, 0.0002342779999999975, 0.00023431900000000366, 0.00023426399999999792, 0.00023434699999999586, 0.0002343890000000015, 0.00023419400000000007, 0.00023423600000000572, 0.00023433300000000323, 0.0002341529999999939, 0.00023431900000000366, 0.0002343050000000041, 0.00023422200000000615, 0.00023436100000000237]</msg>
<status status="PASS" starttime="20201029 18:18:24.239" endtime="20201029 18:18:24.241"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.234" endtime="20201029 18:18:24.242"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.854" endtime="20201029 18:18:24.242"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.831" endtime="20201029 18:18:24.242"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:24.245" endtime="20201029 18:18:24.264"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.243" endtime="20201029 18:18:24.265"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:24.273" endtime="20201029 18:18:24.321"></status>
</kw>
<msg timestamp="20201029 18:18:24.322" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:24.271" endtime="20201029 18:18:24.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:24.325" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:24.323" endtime="20201029 18:18:24.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:24.326" endtime="20201029 18:18:24.328"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.269" endtime="20201029 18:18:24.329"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.267" endtime="20201029 18:18:24.329"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:24.336" endtime="20201029 18:18:24.622"></status>
</kw>
<msg timestamp="20201029 18:18:24.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022109431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022357069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:24.334" endtime="20201029 18:18:24.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:24.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022109431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022357069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:24.626" endtime="20201029 18:18:24.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:24.634" endtime="20201029 18:18:24.636"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.332" endtime="20201029 18:18:24.637"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.330" endtime="20201029 18:18:24.637"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:24.641" level="INFO">${PHILIP_RES} = [{'diff': 0.0002476380000000014}, {'diff': 0.0002476519999999975}, {'diff': 0.000247667}, {'diff': 0.00024772199999999883}, {'diff': 0.00024773600000000187}, {'diff': 0.00024766600000000055}, {'diff':...</msg>
<status status="PASS" starttime="20201029 18:18:24.638" endtime="20201029 18:18:24.641"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:24.645" level="INFO">${RESULT} = {'diff': [0.0002476380000000014, 0.0002476519999999975, 0.000247667, 0.00024772199999999883, 0.00024773600000000187, 0.00024766600000000055, 0.00024773600000000187, 0.0002476109999999983, 0.0002477079...</msg>
<status status="PASS" starttime="20201029 18:18:24.642" endtime="20201029 18:18:24.645"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:24.650" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:24.649" endtime="20201029 18:18:24.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:24.652" level="INFO">VALUE: [0.0002476380000000014, 0.0002476519999999975, 0.000247667, 0.00024772199999999883, 0.00024773600000000187, 0.00024766600000000055, 0.00024773600000000187, 0.0002476109999999983, 0.00024770799999999926, 0.0002476800000000001, 0.0002476109999999983, 0.0002477770000000011, 0.00024774999999999797, 0.00024780599999999625, 0.0002476390000000009, 0.00024761100000000175, 0.0002477640000000045, 0.0002476390000000009, 0.000247861000000002, 0.0002476800000000001, 0.0002476939999999997, 0.00024761100000000175, 0.00024765300000000046, 0.0002477919999999967, 0.00024769499999999917, 0.0002476939999999997, 0.0002477359999999984, 0.0002476250000000013, 0.0002477500000000049, 0.0002476390000000009, 0.0002475970000000022, 0.0002477500000000049, 0.00024770799999999926, 0.0002477779999999971, 0.00024774999999999797, 0.00024774999999999797, 0.0002477359999999984, 0.00024765300000000046, 0.0002476390000000009, 0.0002477359999999984, 0.00024779100000000415, 0.000247667, 0.00024776399999999754, 0.0002476390000000009, 0.00024765300000000046, 0.0002476250000000013, 0.00024773600000000534, 0.0002476249999999944, 0.000247667, 0.00024772199999999883]</msg>
<status status="PASS" starttime="20201029 18:18:24.651" endtime="20201029 18:18:24.654"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.646" endtime="20201029 18:18:24.654"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.265" endtime="20201029 18:18:24.655"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.243" endtime="20201029 18:18:24.655"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:24.657" endtime="20201029 18:18:24.677"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.656" endtime="20201029 18:18:24.677"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:24.686" endtime="20201029 18:18:24.737"></status>
</kw>
<msg timestamp="20201029 18:18:24.738" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:24.684" endtime="20201029 18:18:24.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:24.740" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:24.739" endtime="20201029 18:18:24.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:24.741" endtime="20201029 18:18:24.743"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.681" endtime="20201029 18:18:24.744"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.680" endtime="20201029 18:18:24.744"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:24.751" endtime="20201029 18:18:25.037"></status>
</kw>
<msg timestamp="20201029 18:18:25.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021240264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021501569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:24.749" endtime="20201029 18:18:25.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:25.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021240264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021501569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:25.041" endtime="20201029 18:18:25.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:25.049" endtime="20201029 18:18:25.051"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.747" endtime="20201029 18:18:25.051"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.745" endtime="20201029 18:18:25.052"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:25.056" level="INFO">${PHILIP_RES} = [{'diff': 0.00026130500000000334}, {'diff': 0.00026112499999999747}, {'diff': 0.0002611810000000027}, {'diff': 0.0002610270000000005}, {'diff': 0.00026117999999999975}, {'diff': 0.0002611939999999993}...</msg>
<status status="PASS" starttime="20201029 18:18:25.053" endtime="20201029 18:18:25.056"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:25.061" level="INFO">${RESULT} = {'diff': [0.00026130500000000334, 0.00026112499999999747, 0.0002611810000000027, 0.0002610270000000005, 0.00026117999999999975, 0.0002611939999999993, 0.0002612079999999989, 0.0002611939999999993, 0.0...</msg>
<status status="PASS" starttime="20201029 18:18:25.057" endtime="20201029 18:18:25.061"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:25.065" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:25.064" endtime="20201029 18:18:25.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:25.068" level="INFO">VALUE: [0.00026130500000000334, 0.00026112499999999747, 0.0002611810000000027, 0.0002610270000000005, 0.00026117999999999975, 0.0002611939999999993, 0.0002612079999999989, 0.0002611939999999993, 0.0002612079999999989, 0.00026122199999999846, 0.0002612360000000015, 0.0002612499999999976, 0.0002612230000000014, 0.0002612499999999976, 0.0002611390000000005, 0.0002611660000000002, 0.0002611530000000001, 0.0002612640000000041, 0.0002613049999999964, 0.0002612640000000041, 0.0002612079999999989, 0.0002612780000000037, 0.0002611809999999992, 0.0002612780000000037, 0.00026117999999999975, 0.00026125000000000453, 0.00026112500000000094, 0.0002611390000000005, 0.0002611530000000001, 0.0002613330000000025, 0.0002612369999999975, 0.0002611530000000001, 0.00026123600000000496, 0.000261235999999998, 0.00026127699999999726, 0.00026117999999999975, 0.00026104199999999605, 0.0002612640000000041, 0.00026125000000000453, 0.0002612780000000037, 0.0002612079999999989, 0.00026122199999999846, 0.0002610970000000018, 0.0002611949999999988, 0.0002612079999999989, 0.0002612499999999976, 0.00026129200000000324, 0.00026122199999999846, 0.00026119400000000625, 0.00026129200000000324]</msg>
<status status="PASS" starttime="20201029 18:18:25.066" endtime="20201029 18:18:25.073"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.062" endtime="20201029 18:18:25.074"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.678" endtime="20201029 18:18:25.075"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.655" endtime="20201029 18:18:25.075"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:25.077" endtime="20201029 18:18:25.097"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.076" endtime="20201029 18:18:25.097"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:25.106" endtime="20201029 18:18:25.158"></status>
</kw>
<msg timestamp="20201029 18:18:25.159" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:25.104" endtime="20201029 18:18:25.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:25.170" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:25.164" endtime="20201029 18:18:25.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:25.172" endtime="20201029 18:18:25.177"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.101" endtime="20201029 18:18:25.179"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.100" endtime="20201029 18:18:25.180"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:25.194" endtime="20201029 18:18:25.486"></status>
</kw>
<msg timestamp="20201029 18:18:25.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018321514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018596597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:25.191" endtime="20201029 18:18:25.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:25.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018321514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018596597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:25.490" endtime="20201029 18:18:25.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:25.498" endtime="20201029 18:18:25.501"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.185" endtime="20201029 18:18:25.501"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.181" endtime="20201029 18:18:25.502"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:25.506" level="INFO">${PHILIP_RES} = [{'diff': 0.0002750829999999989}, {'diff': 0.0002751530000000002}, {'diff': 0.0002751110000000015}, {'diff': 0.00027511200000000097}, {'diff': 0.0002750690000000028}, {'diff': 0.0002751810000000028}, ...</msg>
<status status="PASS" starttime="20201029 18:18:25.502" endtime="20201029 18:18:25.506"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:25.509" level="INFO">${RESULT} = {'diff': [0.0002750829999999989, 0.0002751530000000002, 0.0002751110000000015, 0.00027511200000000097, 0.0002750690000000028, 0.0002751810000000028, 0.0002751119999999975, 0.00027516699999999977, 0.00...</msg>
<status status="PASS" starttime="20201029 18:18:25.507" endtime="20201029 18:18:25.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:25.514" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:25.513" endtime="20201029 18:18:25.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:25.516" level="INFO">VALUE: [0.0002750829999999989, 0.0002751530000000002, 0.0002751110000000015, 0.00027511200000000097, 0.0002750690000000028, 0.0002751810000000028, 0.0002751119999999975, 0.00027516699999999977, 0.0002750690000000028, 0.0002750140000000005, 0.0002750559999999992, 0.00027505499999999974, 0.0002750280000000001, 0.0002750829999999989, 0.00027513899999999716, 0.00027512500000000106, 0.0002750559999999992, 0.00027516699999999977, 0.0002750829999999954, 0.00027512500000000106, 0.0002750840000000018, 0.0002750550000000032, 0.00027513900000000063, 0.00027513900000000063, 0.0002751110000000015, 0.00027499999999999747, 0.00027502699999999713, 0.0002750560000000027, 0.00027512500000000106, 0.0002750690000000028, 0.0002750549999999963, 0.0002750980000000014, 0.0002751110000000015, 0.00027508300000000235, 0.0002750840000000018, 0.0002750420000000031, 0.00027499999999999747, 0.00027508300000000235, 0.0002752639999999973, 0.00027515299999999326, 0.0002751949999999989, 0.00027511099999999455, 0.0002751110000000015, 0.0002750549999999963, 0.0002752219999999986, 0.0002750829999999954, 0.0002751249999999941, 0.00027498600000000484, 0.0002750699999999953, 0.0002750829999999954]</msg>
<status status="PASS" starttime="20201029 18:18:25.515" endtime="20201029 18:18:25.517"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.510" endtime="20201029 18:18:25.517"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.098" endtime="20201029 18:18:25.518"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.075" endtime="20201029 18:18:25.518"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:25.520" endtime="20201029 18:18:25.540"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.519" endtime="20201029 18:18:25.540"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:25.548" endtime="20201029 18:18:25.597"></status>
</kw>
<msg timestamp="20201029 18:18:25.598" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:25.547" endtime="20201029 18:18:25.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:25.600" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:25.599" endtime="20201029 18:18:25.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:25.601" endtime="20201029 18:18:25.604"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.544" endtime="20201029 18:18:25.604"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.542" endtime="20201029 18:18:25.605"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:25.611" endtime="20201029 18:18:25.897"></status>
</kw>
<msg timestamp="20201029 18:18:25.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017560653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017849806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:25.610" endtime="20201029 18:18:25.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:25.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017560653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017849806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:25.901" endtime="20201029 18:18:25.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:25.909" endtime="20201029 18:18:25.910"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.607" endtime="20201029 18:18:25.911"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.605" endtime="20201029 18:18:25.911"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:25.915" level="INFO">${PHILIP_RES} = [{'diff': 0.0002891530000000003}, {'diff': 0.0002891389999999973}, {'diff': 0.000289082999999999}, {'diff': 0.0002891530000000003}, {'diff': 0.0002892089999999986}, {'diff': 0.0002892640000000009}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:25.912" endtime="20201029 18:18:25.915"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:25.919" level="INFO">${RESULT} = {'diff': [0.0002891530000000003, 0.0002891389999999973, 0.000289082999999999, 0.0002891530000000003, 0.0002892089999999986, 0.0002892640000000009, 0.0002891249999999977, 0.0002892229999999982, 0.00028...</msg>
<status status="PASS" starttime="20201029 18:18:25.916" endtime="20201029 18:18:25.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:25.923" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:25.922" endtime="20201029 18:18:25.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:25.926" level="INFO">VALUE: [0.0002891530000000003, 0.0002891389999999973, 0.000289082999999999, 0.0002891530000000003, 0.0002892089999999986, 0.0002892640000000009, 0.0002891249999999977, 0.0002892229999999982, 0.0002891530000000003, 0.0002891250000000012, 0.0002892500000000013, 0.0002891669999999999, 0.0002890969999999986, 0.00028923600000000174, 0.00028913900000000076, 0.00028919399999999956, 0.00028919499999999904, 0.00028930600000000306, 0.0002891530000000003, 0.00028929199999999655, 0.0002892639999999974, 0.00028924999999999784, 0.00028919499999999904, 0.00028922200000000564, 0.00028923599999999827, 0.00028920799999999913, 0.0002890690000000029, 0.00028923599999999827, 0.0002892089999999986, 0.00028919399999999956, 0.00028909700000000205, 0.000289277999999997, 0.00028918099999999947, 0.0002894439999999998, 0.00028918099999999947, 0.00028918099999999947, 0.00028920799999999913, 0.0002892780000000039, 0.00028920799999999913, 0.00028924999999999784, 0.00028923599999999827, 0.00028918, 0.00028918099999999947, 0.00028913900000000076, 0.0002891669999999999, 0.0002891389999999938, 0.0002892639999999974, 0.00028913900000000076, 0.0002892920000000035, 0.0002891940000000065]</msg>
<status status="PASS" starttime="20201029 18:18:25.924" endtime="20201029 18:18:25.927"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.920" endtime="20201029 18:18:25.928"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.541" endtime="20201029 18:18:25.928"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.518" endtime="20201029 18:18:25.928"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:25.931" endtime="20201029 18:18:25.950"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.929" endtime="20201029 18:18:25.951"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:25.959" endtime="20201029 18:18:26.015"></status>
</kw>
<msg timestamp="20201029 18:18:26.016" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:25.957" endtime="20201029 18:18:26.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:26.021" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:26.019" endtime="20201029 18:18:26.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:26.024" endtime="20201029 18:18:26.027"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.954" endtime="20201029 18:18:26.028"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.953" endtime="20201029 18:18:26.029"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:26.042" endtime="20201029 18:18:26.346"></status>
</kw>
<msg timestamp="20201029 18:18:26.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019259806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019563583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:26.039" endtime="20201029 18:18:26.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:26.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019259806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019563583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:26.350" endtime="20201029 18:18:26.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:26.358" endtime="20201029 18:18:26.360"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.034" endtime="20201029 18:18:26.360"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.030" endtime="20201029 18:18:26.361"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:26.365" level="INFO">${PHILIP_RES} = [{'diff': 0.00030377699999999813}, {'diff': 0.00030383399999999935}, {'diff': 0.00030366600000000105}, {'diff': 0.0003037220000000028}, {'diff': 0.00030365300000000095}, {'diff': 0.0003036810000000001...</msg>
<status status="PASS" starttime="20201029 18:18:26.361" endtime="20201029 18:18:26.365"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:26.371" level="INFO">${RESULT} = {'diff': [0.00030377699999999813, 0.00030383399999999935, 0.00030366600000000105, 0.0003037220000000028, 0.00030365300000000095, 0.0003036810000000001, 0.00030361099999999877, 0.0003036389999999979, 0...</msg>
<status status="PASS" starttime="20201029 18:18:26.366" endtime="20201029 18:18:26.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:26.376" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:26.375" endtime="20201029 18:18:26.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:26.378" level="INFO">VALUE: [0.00030377699999999813, 0.00030383399999999935, 0.00030366600000000105, 0.0003037220000000028, 0.00030365300000000095, 0.0003036810000000001, 0.00030361099999999877, 0.0003036389999999979, 0.00030376399999999804, 0.0003036940000000002, 0.0003036390000000014, 0.00030376399999999804, 0.00030370799999999976, 0.00030365300000000095, 0.00030356900000000353, 0.0003036800000000006, 0.0003037219999999993, 0.0003037919999999972, 0.0003036670000000005, 0.00030366600000000105, 0.00030377800000000454, 0.0003037219999999993, 0.0003037920000000041, 0.00030365300000000095, 0.00030356999999999607, 0.0003037359999999989, 0.0003036800000000006, 0.00030365300000000095, 0.0003036800000000006, 0.00030381899999999684, 0.0003036800000000006, 0.00030379100000000464, 0.0003037779999999976, 0.00030373600000000583, 0.0003037359999999989, 0.00030363899999999444, 0.0003038339999999959, 0.00030370799999999976, 0.000303764000000005, 0.0003037500000000054, 0.0003037219999999993, 0.00030387500000000206, 0.00030370799999999976, 0.00030369499999999966, 0.00030374999999999847, 0.00030370899999999923, 0.0003037359999999989, 0.0003037359999999989, 0.0003037500000000054, 0.00030369499999999966]</msg>
<status status="PASS" starttime="20201029 18:18:26.377" endtime="20201029 18:18:26.379"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.372" endtime="20201029 18:18:26.379"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.951" endtime="20201029 18:18:26.380"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.929" endtime="20201029 18:18:26.380"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:26.382" endtime="20201029 18:18:26.402"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.381" endtime="20201029 18:18:26.402"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:26.410" endtime="20201029 18:18:26.467"></status>
</kw>
<msg timestamp="20201029 18:18:26.467" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:26.409" endtime="20201029 18:18:26.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:26.470" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:26.468" endtime="20201029 18:18:26.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:26.471" endtime="20201029 18:18:26.473"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.406" endtime="20201029 18:18:26.473"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.404" endtime="20201029 18:18:26.474"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:26.481" endtime="20201029 18:18:26.767"></status>
</kw>
<msg timestamp="20201029 18:18:26.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019646319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019964639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:26.479" endtime="20201029 18:18:26.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:26.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019646319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019964639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:26.771" endtime="20201029 18:18:26.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:26.779" endtime="20201029 18:18:26.782"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.476" endtime="20201029 18:18:26.782"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.474" endtime="20201029 18:18:26.783"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:26.786" level="INFO">${PHILIP_RES} = [{'diff': 0.0003183200000000004}, {'diff': 0.0003182359999999995}, {'diff': 0.00031829200000000127}, {'diff': 0.0003182780000000017}, {'diff': 0.00031826399999999866}, {'diff': 0.0003182359999999995},...</msg>
<status status="PASS" starttime="20201029 18:18:26.783" endtime="20201029 18:18:26.787"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:26.790" level="INFO">${RESULT} = {'diff': [0.0003183200000000004, 0.0003182359999999995, 0.00031829200000000127, 0.0003182780000000017, 0.00031826399999999866, 0.0003182359999999995, 0.0003182229999999994, 0.00031825000000000256, 0.0...</msg>
<status status="PASS" starttime="20201029 18:18:26.787" endtime="20201029 18:18:26.790"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:26.795" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:26.794" endtime="20201029 18:18:26.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:26.797" level="INFO">VALUE: [0.0003183200000000004, 0.0003182359999999995, 0.00031829200000000127, 0.0003182780000000017, 0.00031826399999999866, 0.0003182359999999995, 0.0003182229999999994, 0.00031825000000000256, 0.0003183470000000001, 0.00031819399999999734, 0.00031826399999999866, 0.0003181529999999981, 0.0003181940000000008, 0.00031820800000000385, 0.000318139000000002, 0.00031827800000000517, 0.0003182359999999995, 0.00031830500000000483, 0.0003183200000000039, 0.00031822199999999995, 0.0003181530000000016, 0.00031830500000000483, 0.0003182080000000004, 0.00031829200000000474, 0.0003183049999999979, 0.0003181810000000007, 0.0003181940000000008, 0.0003182499999999991, 0.000318236999999999, 0.00031826399999999866, 0.00031812500000000243, 0.0003182499999999991, 0.0003181249999999955, 0.00031809800000000277, 0.0003181940000000008, 0.0003182359999999995, 0.0003182080000000004, 0.0003182499999999991, 0.0003181950000000003, 0.0003181810000000007, 0.00031820899999999985, 0.00031815299999999463, 0.0003182080000000004, 0.0003181810000000007, 0.00031812500000000243, 0.00031818000000000124, 0.00031822199999999995, 0.0003183609999999962, 0.00031825000000000603, 0.0003184029999999949]</msg>
<status status="PASS" starttime="20201029 18:18:26.796" endtime="20201029 18:18:26.798"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.791" endtime="20201029 18:18:26.798"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.403" endtime="20201029 18:18:26.799"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.380" endtime="20201029 18:18:26.799"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:26.801" endtime="20201029 18:18:26.821"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.800" endtime="20201029 18:18:26.821"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:26.829" endtime="20201029 18:18:26.885"></status>
</kw>
<msg timestamp="20201029 18:18:26.886" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:26.828" endtime="20201029 18:18:26.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:26.891" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:26.888" endtime="20201029 18:18:26.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:26.893" endtime="20201029 18:18:26.898"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.825" endtime="20201029 18:18:26.899"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.823" endtime="20201029 18:18:26.900"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:26.914" endtime="20201029 18:18:27.206"></status>
</kw>
<msg timestamp="20201029 18:18:27.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017772153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018105389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:26.911" endtime="20201029 18:18:27.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:27.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017772153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018105389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:27.210" endtime="20201029 18:18:27.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:27.218" endtime="20201029 18:18:27.219"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.905" endtime="20201029 18:18:27.220"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.901" endtime="20201029 18:18:27.220"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:27.224" level="INFO">${PHILIP_RES} = [{'diff': 0.00033323600000000064}, {'diff': 0.0003332639999999998}, {'diff': 0.00033313899999999966}, {'diff': 0.00033302699999999963}, {'diff': 0.00033313899999999966}, {'diff': 0.0003330970000000009...</msg>
<status status="PASS" starttime="20201029 18:18:27.221" endtime="20201029 18:18:27.224"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:27.228" level="INFO">${RESULT} = {'diff': [0.00033323600000000064, 0.0003332639999999998, 0.00033313899999999966, 0.00033302699999999963, 0.00033313899999999966, 0.00033309700000000095, 0.0003331669999999988, 0.0003330980000000004, 0...</msg>
<status status="PASS" starttime="20201029 18:18:27.225" endtime="20201029 18:18:27.228"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:27.232" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:27.231" endtime="20201029 18:18:27.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:27.235" level="INFO">VALUE: [0.00033323600000000064, 0.0003332639999999998, 0.00033313899999999966, 0.00033302699999999963, 0.00033313899999999966, 0.00033309700000000095, 0.0003331669999999988, 0.0003330980000000004, 0.0003330700000000013, 0.00033322200000000107, 0.0003331659999999993, 0.0003331110000000005, 0.00033301399999999953, 0.0003331530000000027, 0.0003330829999999979, 0.00033305499999999877, 0.0003330829999999979, 0.00033299999999999996, 0.00033295800000000125, 0.0003330839999999974, 0.00033301399999999953, 0.00033306899999999834, 0.0003330690000000053, 0.000333111000000004, 0.00033309799999999695, 0.00033318100000000184, 0.00033311099999999705, 0.00033322200000000107, 0.0003330829999999979, 0.0003330279999999991, 0.00033308300000000485, 0.00033323600000000064, 0.0003331119999999965, 0.00033305499999999877, 0.000333111000000004, 0.0003330839999999974, 0.00033315299999999576, 0.0003331389999999962, 0.0003329860000000004, 0.000333111000000004, 0.00033320899999999404, 0.0003330970000000044, 0.0003331389999999962, 0.00033318100000000184, 0.00033307000000000475, 0.000333111000000004, 0.00033305599999999824, 0.0003330969999999975, 0.00033306899999999834, 0.0003330689999999914]</msg>
<status status="PASS" starttime="20201029 18:18:27.234" endtime="20201029 18:18:27.236"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.229" endtime="20201029 18:18:27.237"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.822" endtime="20201029 18:18:27.237"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.799" endtime="20201029 18:18:27.237"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:27.240" endtime="20201029 18:18:27.259"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.238" endtime="20201029 18:18:27.260"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:27.268" endtime="20201029 18:18:27.330"></status>
</kw>
<msg timestamp="20201029 18:18:27.331" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:27.266" endtime="20201029 18:18:27.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:27.333" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:27.332" endtime="20201029 18:18:27.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:27.334" endtime="20201029 18:18:27.336"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.264" endtime="20201029 18:18:27.337"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.262" endtime="20201029 18:18:27.337"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:27.343" endtime="20201029 18:18:27.629"></status>
</kw>
<msg timestamp="20201029 18:18:27.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021319069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021667444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:27.342" endtime="20201029 18:18:27.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:27.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021319069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021667444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:27.633" endtime="20201029 18:18:27.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:27.640" endtime="20201029 18:18:27.642"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.339" endtime="20201029 18:18:27.643"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.338" endtime="20201029 18:18:27.643"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:27.647" level="INFO">${PHILIP_RES} = [{'diff': 0.00034837500000000146}, {'diff': 0.0003483609999999984}, {'diff': 0.00034833399999999876}, {'diff': 0.0003482780000000005}, {'diff': 0.000348374999999998}, {'diff': 0.00034845900000000235},...</msg>
<status status="PASS" starttime="20201029 18:18:27.644" endtime="20201029 18:18:27.647"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:27.652" level="INFO">${RESULT} = {'diff': [0.00034837500000000146, 0.0003483609999999984, 0.00034833399999999876, 0.0003482780000000005, 0.000348374999999998, 0.00034845900000000235, 0.00034840299999999713, 0.0003482780000000005, 0.0...</msg>
<status status="PASS" starttime="20201029 18:18:27.648" endtime="20201029 18:18:27.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:27.656" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:27.655" endtime="20201029 18:18:27.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:27.658" level="INFO">VALUE: [0.00034837500000000146, 0.0003483609999999984, 0.00034833399999999876, 0.0003482780000000005, 0.000348374999999998, 0.00034845900000000235, 0.00034840299999999713, 0.0003482780000000005, 0.00034834699999999885, 0.00034834699999999885, 0.00034834699999999885, 0.00034838899999999756, 0.0003483189999999997, 0.000348374999999998, 0.0003483329999999993, 0.00034833399999999876, 0.00034833399999999876, 0.00034834699999999885, 0.00034834699999999885, 0.00034833399999999876, 0.0003483330000000062, 0.000348374999999998, 0.0003483199999999992, 0.00034847200000000245, 0.0003483609999999984, 0.000348374999999998, 0.0003483199999999992, 0.0003484450000000028, 0.000348277000000001, 0.00034833399999999876, 0.0003483329999999993, 0.00034822199999999526, 0.00034847200000000245, 0.0003483189999999997, 0.0003484440000000033, 0.000348277000000001, 0.00034819500000000253, 0.00034833399999999876, 0.000348374999999998, 0.00034834699999999885, 0.0003482780000000005, 0.0003482640000000009, 0.0003483890000000045, 0.00034822199999999526, 0.00034836100000000536, 0.00034827799999999354, 0.0003483050000000071, 0.00034845799999999594, 0.0003482780000000074, 0.0003484159999999903]</msg>
<status status="PASS" starttime="20201029 18:18:27.657" endtime="20201029 18:18:27.659"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.653" endtime="20201029 18:18:27.660"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.260" endtime="20201029 18:18:27.660"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.238" endtime="20201029 18:18:27.660"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:27.663" endtime="20201029 18:18:27.682"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.661" endtime="20201029 18:18:27.683"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:27.691" endtime="20201029 18:18:27.753"></status>
</kw>
<msg timestamp="20201029 18:18:27.753" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:27.689" endtime="20201029 18:18:27.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:27.755" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:27.754" endtime="20201029 18:18:27.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:27.756" endtime="20201029 18:18:27.758"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.687" endtime="20201029 18:18:27.758"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.685" endtime="20201029 18:18:27.759"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:27.766" endtime="20201029 18:18:28.051"></status>
</kw>
<msg timestamp="20201029 18:18:28.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020399528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02076325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:27.764" endtime="20201029 18:18:28.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020399528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02076325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:28.055" endtime="20201029 18:18:28.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.063" endtime="20201029 18:18:28.065"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.761" endtime="20201029 18:18:28.066"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.759" endtime="20201029 18:18:28.066"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:28.070" level="INFO">${PHILIP_RES} = [{'diff': 0.00036372200000000035}, {'diff': 0.0003637080000000008}, {'diff': 0.0003636529999999985}, {'diff': 0.0003636529999999985}, {'diff': 0.0003636940000000012}, {'diff': 0.00036372200000000035},...</msg>
<status status="PASS" starttime="20201029 18:18:28.067" endtime="20201029 18:18:28.070"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:28.075" level="INFO">${RESULT} = {'diff': [0.00036372200000000035, 0.0003637080000000008, 0.0003636529999999985, 0.0003636529999999985, 0.0003636940000000012, 0.00036372200000000035, 0.0003636950000000007, 0.0003637080000000008, 0.00...</msg>
<status status="PASS" starttime="20201029 18:18:28.071" endtime="20201029 18:18:28.075"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.079" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:28.078" endtime="20201029 18:18:28.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.081" level="INFO">VALUE: [0.00036372200000000035, 0.0003637080000000008, 0.0003636529999999985, 0.0003636529999999985, 0.0003636940000000012, 0.00036372200000000035, 0.0003636950000000007, 0.0003637080000000008, 0.00036363899999999894, 0.00036354100000000195, 0.00036363899999999894, 0.00036363899999999894, 0.00036365300000000544, 0.000363749999999996, 0.00036358400000000013, 0.00036363899999999894, 0.0003636529999999985, 0.00036362499999999937, 0.0003635970000000002, 0.0003636659999999986, 0.00036358300000000066, 0.00036370800000000425, 0.0003636109999999998, 0.000363667000000005, 0.0003635270000000024, 0.0003636949999999972, 0.00036363899999999894, 0.0003635140000000023, 0.00036349999999999577, 0.000363667000000005, 0.0003636109999999998, 0.0003636659999999986, 0.0003637220000000038, 0.0003636940000000047, 0.00036358300000000066, 0.00036362499999999937, 0.0003637079999999973, 0.00036369500000000415, 0.0003636940000000047, 0.0003637219999999969, 0.00036362499999999937, 0.0003636669999999981, 0.00036349999999999577, 0.0003637360000000034, 0.0003636949999999972, 0.0003636109999999998, 0.00036376400000000253, 0.0003636249999999924, 0.0003637500000000099, 0.0003636250000000063]</msg>
<status status="PASS" starttime="20201029 18:18:28.080" endtime="20201029 18:18:28.082"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.076" endtime="20201029 18:18:28.083"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.683" endtime="20201029 18:18:28.083"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.661" endtime="20201029 18:18:28.083"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:28.086" endtime="20201029 18:18:28.105"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.084" endtime="20201029 18:18:28.106"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.114" endtime="20201029 18:18:28.175"></status>
</kw>
<msg timestamp="20201029 18:18:28.176" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:28.112" endtime="20201029 18:18:28.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.178" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:28.177" endtime="20201029 18:18:28.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.179" endtime="20201029 18:18:28.182"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.109" endtime="20201029 18:18:28.182"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.108" endtime="20201029 18:18:28.183"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.189" endtime="20201029 18:18:28.491"></status>
</kw>
<msg timestamp="20201029 18:18:28.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019479417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019858653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:28.187" endtime="20201029 18:18:28.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019479417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019858653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:28.500" endtime="20201029 18:18:28.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.510" endtime="20201029 18:18:28.512"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.185" endtime="20201029 18:18:28.513"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.183" endtime="20201029 18:18:28.513"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:28.517" level="INFO">${PHILIP_RES} = [{'diff': 0.00037923600000000154}, {'diff': 0.00037913900000000056}, {'diff': 0.0003793189999999995}, {'diff': 0.00037919499999999884}, {'diff': 0.00037920799999999893}, {'diff': 0.0003792079999999989...</msg>
<status status="PASS" starttime="20201029 18:18:28.514" endtime="20201029 18:18:28.518"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:28.521" level="INFO">${RESULT} = {'diff': [0.00037923600000000154, 0.00037913900000000056, 0.0003793189999999995, 0.00037919499999999884, 0.00037920799999999893, 0.00037920799999999893, 0.00037923600000000154, 0.00037919399999999936,...</msg>
<status status="PASS" starttime="20201029 18:18:28.518" endtime="20201029 18:18:28.521"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.526" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:28.525" endtime="20201029 18:18:28.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.528" level="INFO">VALUE: [0.00037923600000000154, 0.00037913900000000056, 0.0003793189999999995, 0.00037919499999999884, 0.00037920799999999893, 0.00037920799999999893, 0.00037923600000000154, 0.00037919399999999936, 0.00037919399999999936, 0.0003793059999999994, 0.0003793059999999994, 0.0003791669999999997, 0.0003792769999999973, 0.0003792359999999981, 0.0003792630000000047, 0.0003793059999999959, 0.0003792359999999981, 0.00037918099999999927, 0.00037922200000000544, 0.0003792219999999985, 0.00037920799999999893, 0.00037919499999999884, 0.00037924999999999764, 0.0003793329999999956, 0.00037947199999999875, 0.00037945899999999866, 0.000379318999999996, 0.00037936100000000167, 0.00037947199999999875, 0.0003794309999999995, 0.000379334000000002, 0.00037937500000000124, 0.0003793470000000021, 0.0003793890000000008, 0.0003794579999999992, 0.0003794030000000004, 0.0003794999999999979, 0.00037930499999999645, 0.00037943000000000005, 0.00037947199999999875, 0.0003793329999999956, 0.0003793890000000008, 0.0003794579999999992, 0.0003793470000000021, 0.00037936099999999473, 0.00037943000000000005, 0.0003795560000000031, 0.0003793060000000098, 0.0003794030000000004, 0.00037943000000000005]</msg>
<status status="PASS" starttime="20201029 18:18:28.527" endtime="20201029 18:18:28.530"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.522" endtime="20201029 18:18:28.530"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.106" endtime="20201029 18:18:28.531"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.084" endtime="20201029 18:18:28.531"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:28.533" endtime="20201029 18:18:28.552"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.532" endtime="20201029 18:18:28.553"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.561" endtime="20201029 18:18:28.627"></status>
</kw>
<msg timestamp="20201029 18:18:28.627" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:28.559" endtime="20201029 18:18:28.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.629" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:28.628" endtime="20201029 18:18:28.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.631" endtime="20201029 18:18:28.632"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.557" endtime="20201029 18:18:28.633"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.555" endtime="20201029 18:18:28.633"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.639" endtime="20201029 18:18:28.925"></status>
</kw>
<msg timestamp="20201029 18:18:28.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019210694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019605667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:28.638" endtime="20201029 18:18:28.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019210694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019605667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:28.929" endtime="20201029 18:18:28.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.936" endtime="20201029 18:18:28.938"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.635" endtime="20201029 18:18:28.938"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.634" endtime="20201029 18:18:28.939"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:28.943" level="INFO">${PHILIP_RES} = [{'diff': 0.00039497299999999985}, {'diff': 0.00039501400000000256}, {'diff': 0.00039504099999999875}, {'diff': 0.0003950139999999991}, {'diff': 0.0003950550000000018}, {'diff': 0.0003951389999999992}...</msg>
<status status="PASS" starttime="20201029 18:18:28.940" endtime="20201029 18:18:28.943"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:28.947" level="INFO">${RESULT} = {'diff': [0.00039497299999999985, 0.00039501400000000256, 0.00039504099999999875, 0.0003950139999999991, 0.0003950550000000018, 0.0003951389999999992, 0.00039505600000000127, 0.0003950689999999979, 0....</msg>
<status status="PASS" starttime="20201029 18:18:28.944" endtime="20201029 18:18:28.948"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.952" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:28.951" endtime="20201029 18:18:28.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.954" level="INFO">VALUE: [0.00039497299999999985, 0.00039501400000000256, 0.00039504099999999875, 0.0003950139999999991, 0.0003950550000000018, 0.0003951389999999992, 0.00039505600000000127, 0.0003950689999999979, 0.00039508399999999694, 0.00039512499999999964, 0.0003950420000000017, 0.00039508300000000093, 0.0003951250000000031, 0.00039502799999999866, 0.00039498599999999995, 0.0003950139999999991, 0.00039508299999999746, 0.0003950689999999979, 0.0003950410000000057, 0.00039504200000000517, 0.00039509699999999703, 0.00039522200000000063, 0.00039506999999999737, 0.000395112000000003, 0.0003950129999999996, 0.0003950549999999983, 0.0003950700000000043, 0.00039502799999999866, 0.0003951670000000018, 0.0003951380000000032, 0.0003950559999999978, 0.00039504199999999823, 0.0003949999999999995, 0.0003951250000000031, 0.0003951109999999966, 0.00039505600000000474, 0.0003951109999999966, 0.0003951800000000019, 0.0003951659999999954, 0.00039522200000000063, 0.0003950700000000043, 0.0003951529999999953, 0.000395179999999995, 0.00039511100000000354, 0.0003949590000000003, 0.00039509699999999703, 0.00039493000000000167, 0.00039512500000001005, 0.00039504199999999823, 0.00039505500000000526]</msg>
<status status="PASS" starttime="20201029 18:18:28.953" endtime="20201029 18:18:28.955"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.948" endtime="20201029 18:18:28.955"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.554" endtime="20201029 18:18:28.956"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.531" endtime="20201029 18:18:28.956"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:28.958" endtime="20201029 18:18:28.978"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.957" endtime="20201029 18:18:28.978"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.986" endtime="20201029 18:18:29.059"></status>
</kw>
<msg timestamp="20201029 18:18:29.060" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:28.985" endtime="20201029 18:18:29.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:29.062" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:29.061" endtime="20201029 18:18:29.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:29.063" endtime="20201029 18:18:29.065"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.982" endtime="20201029 18:18:29.065"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.980" endtime="20201029 18:18:29.066"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:29.072" endtime="20201029 18:18:29.376"></status>
</kw>
<msg timestamp="20201029 18:18:29.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020982083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021393458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:29.070" endtime="20201029 18:18:29.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:29.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020982083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021393458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:29.379" endtime="20201029 18:18:29.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:29.387" endtime="20201029 18:18:29.390"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.068" endtime="20201029 18:18:29.390"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.066" endtime="20201029 18:18:29.391"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:29.395" level="INFO">${PHILIP_RES} = [{'diff': 0.000411375000000002}, {'diff': 0.0004114029999999977}, {'diff': 0.00041131999999999974}, {'diff': 0.00041137499999999855}, {'diff': 0.00041115299999999744}, {'diff': 0.00041123599999999885}...</msg>
<status status="PASS" starttime="20201029 18:18:29.392" endtime="20201029 18:18:29.395"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:29.399" level="INFO">${RESULT} = {'diff': [0.000411375000000002, 0.0004114029999999977, 0.00041131999999999974, 0.00041137499999999855, 0.00041115299999999744, 0.00041123599999999885, 0.00041113900000000134, 0.000411263999999998, 0.0...</msg>
<status status="PASS" starttime="20201029 18:18:29.396" endtime="20201029 18:18:29.399"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:29.403" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:29.402" endtime="20201029 18:18:29.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:29.405" level="INFO">VALUE: [0.000411375000000002, 0.0004114029999999977, 0.00041131999999999974, 0.00041137499999999855, 0.00041115299999999744, 0.00041123599999999885, 0.00041113900000000134, 0.000411263999999998, 0.00041113900000000134, 0.000411166999999997, 0.0004111939999999967, 0.00041112500000000524, 0.0004111939999999967, 0.00041113899999999787, 0.00041100000000000164, 0.000411166999999997, 0.00041109699999999916, 0.00041133299999999984, 0.0004111390000000048, 0.0004111249999999983, 0.0004111939999999967, 0.00041104200000000035, 0.0004112080000000032, 0.00041115199999999796, 0.00041112500000000524, 0.0004112500000000019, 0.00041104200000000035, 0.0004111249999999983, 0.0004111799999999971, 0.0004111249999999983, 0.0004111520000000049, 0.00041120799999999624, 0.0004112360000000023, 0.00041113899999999787, 0.00041111099999999873, 0.0004112230000000022, 0.00041116700000000395, 0.000411166999999997, 0.0004111799999999971, 0.00041115299999999744, 0.0004111940000000036, 0.00041123600000000926, 0.0004111249999999983, 0.00041116600000000447, 0.0004111249999999983, 0.0004111390000000048, 0.0004112080000000101, 0.0004110980000000125, 0.0004111799999999971, 0.00041118100000001045]</msg>
<status status="PASS" starttime="20201029 18:18:29.404" endtime="20201029 18:18:29.406"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.399" endtime="20201029 18:18:29.406"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.979" endtime="20201029 18:18:29.407"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.956" endtime="20201029 18:18:29.407"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:29.409" endtime="20201029 18:18:29.429"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.408" endtime="20201029 18:18:29.429"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:29.437" endtime="20201029 18:18:29.505"></status>
</kw>
<msg timestamp="20201029 18:18:29.506" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:29.436" endtime="20201029 18:18:29.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:29.508" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:29.507" endtime="20201029 18:18:29.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:29.509" endtime="20201029 18:18:29.512"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.433" endtime="20201029 18:18:29.513"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.431" endtime="20201029 18:18:29.513"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:29.520" endtime="20201029 18:18:29.806"></status>
</kw>
<msg timestamp="20201029 18:18:29.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017146056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017573597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:29.518" endtime="20201029 18:18:29.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:29.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017146056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017573597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:29.810" endtime="20201029 18:18:29.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:29.818" endtime="20201029 18:18:29.819"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.515" endtime="20201029 18:18:29.820"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.514" endtime="20201029 18:18:29.820"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:29.824" level="INFO">${PHILIP_RES} = [{'diff': 0.00042754100000000003}, {'diff': 0.0004277220000000019}, {'diff': 0.0004274999999999973}, {'diff': 0.0004277360000000015}, {'diff': 0.0004276390000000005}, {'diff': 0.0004277220000000019}, ...</msg>
<status status="PASS" starttime="20201029 18:18:29.821" endtime="20201029 18:18:29.824"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:29.828" level="INFO">${RESULT} = {'diff': [0.00042754100000000003, 0.0004277220000000019, 0.0004274999999999973, 0.0004277360000000015, 0.0004276390000000005, 0.0004277220000000019, 0.00042766699999999963, 0.00042769500000000224, 0.0...</msg>
<status status="PASS" starttime="20201029 18:18:29.825" endtime="20201029 18:18:29.828"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:29.832" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:29.831" endtime="20201029 18:18:29.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:29.835" level="INFO">VALUE: [0.00042754100000000003, 0.0004277220000000019, 0.0004274999999999973, 0.0004277360000000015, 0.0004276390000000005, 0.0004277220000000019, 0.00042766699999999963, 0.00042769500000000224, 0.00042769499999999877, 0.00042759800000000125, 0.00042756899999999917, 0.00042770800000000234, 0.00042752799999999994, 0.00042754099999999656, 0.00042765300000000006, 0.0004274449999999985, 0.00042758299999999527, 0.0004274730000000046, 0.0004276250000000009, 0.0004275830000000022, 0.000427735999999998, 0.0004276250000000009, 0.0004276809999999992, 0.00042755500000000307, 0.0004275830000000022, 0.0004275970000000018, 0.00042765300000000006, 0.00042752799999999647, 0.00042752700000000393, 0.0004276250000000009, 0.00042754199999999604, 0.0004274999999999973, 0.00042759800000000125, 0.0004276109999999944, 0.00042756900000000264, 0.00042752799999999647, 0.000427638000000001, 0.00042759800000000125, 0.000427542000000003, 0.0004275689999999957, 0.00042751400000000384, 0.00042745800000000556, 0.00042758300000000915, 0.00042755499999999613, 0.00042758300000000915, 0.00042752799999999647, 0.0004276250000000009, 0.0004275559999999956, 0.0004276250000000009, 0.000427542000000003]</msg>
<status status="PASS" starttime="20201029 18:18:29.833" endtime="20201029 18:18:29.836"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.829" endtime="20201029 18:18:29.837"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.430" endtime="20201029 18:18:29.837"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.407" endtime="20201029 18:18:29.837"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:29.840" endtime="20201029 18:18:29.859"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.838" endtime="20201029 18:18:29.860"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:29.868" endtime="20201029 18:18:29.938"></status>
</kw>
<msg timestamp="20201029 18:18:29.938" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:29.866" endtime="20201029 18:18:29.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:29.941" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:29.939" endtime="20201029 18:18:29.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:29.942" endtime="20201029 18:18:29.943"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.864" endtime="20201029 18:18:29.944"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.862" endtime="20201029 18:18:29.944"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:29.951" endtime="20201029 18:18:30.252"></status>
</kw>
<msg timestamp="20201029 18:18:30.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018876278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019320694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:29.949" endtime="20201029 18:18:30.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018876278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019320694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:30.256" endtime="20201029 18:18:30.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.264" endtime="20201029 18:18:30.265"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.947" endtime="20201029 18:18:30.266"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.945" endtime="20201029 18:18:30.266"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:30.270" level="INFO">${PHILIP_RES} = [{'diff': 0.00044441599999999956}, {'diff': 0.0004443189999999986}, {'diff': 0.00044441699999999904}, {'diff': 0.00044433299999999815}, {'diff': 0.00044441699999999904}, {'diff': 0.0004444029999999994...</msg>
<status status="PASS" starttime="20201029 18:18:30.267" endtime="20201029 18:18:30.270"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:30.277" level="INFO">${RESULT} = {'diff': [0.00044441599999999956, 0.0004443189999999986, 0.00044441699999999904, 0.00044433299999999815, 0.00044441699999999904, 0.00044440299999999947, 0.0004443189999999986, 0.00044422200000000106, ...</msg>
<status status="PASS" starttime="20201029 18:18:30.271" endtime="20201029 18:18:30.277"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.281" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:30.280" endtime="20201029 18:18:30.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.284" level="INFO">VALUE: [0.00044441599999999956, 0.0004443189999999986, 0.00044441699999999904, 0.00044433299999999815, 0.00044441699999999904, 0.00044440299999999947, 0.0004443189999999986, 0.00044422200000000106, 0.00044448700000000035, 0.0004443189999999986, 0.0004443470000000012, 0.0004445279999999996, 0.00044431999999999805, 0.0004442919999999989, 0.0004444170000000025, 0.00044426399999999977, 0.00044427699999999987, 0.0004443750000000038, 0.00044443099999999514, 0.00044445800000000174, 0.0004444589999999943, 0.00044450000000000045, 0.00044423600000000063, 0.0004442910000000064, 0.00044444500000000164, 0.0004443620000000037, 0.00044431999999999805, 0.0004442919999999989, 0.0004443750000000038, 0.0004444720000000013, 0.0004444019999999965, 0.000444402999999996, 0.0004444019999999965, 0.00044431999999999805, 0.00044450000000000045, 0.0004443469999999977, 0.00044434700000000465, 0.0004444720000000013, 0.0004443610000000042, 0.0004445130000000075, 0.0004443610000000042, 0.0004443060000000054, 0.0004442919999999989, 0.0004443469999999977, 0.00044444500000000164, 0.00044437499999999686, 0.00044423600000000063, 0.000444431000000009, 0.00044431999999999805, 0.0004443060000000054]</msg>
<status status="PASS" starttime="20201029 18:18:30.282" endtime="20201029 18:18:30.289"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.278" endtime="20201029 18:18:30.290"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.860" endtime="20201029 18:18:30.290"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.838" endtime="20201029 18:18:30.291"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:30.293" endtime="20201029 18:18:30.313"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.292" endtime="20201029 18:18:30.313"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.321" endtime="20201029 18:18:30.391"></status>
</kw>
<msg timestamp="20201029 18:18:30.392" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:30.320" endtime="20201029 18:18:30.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.397" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:30.393" endtime="20201029 18:18:30.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.398" endtime="20201029 18:18:30.401"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.317" endtime="20201029 18:18:30.402"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.315" endtime="20201029 18:18:30.402"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.409" endtime="20201029 18:18:30.695"></status>
</kw>
<msg timestamp="20201029 18:18:30.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017520083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017981417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:30.407" endtime="20201029 18:18:30.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017520083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017981417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:30.699" endtime="20201029 18:18:30.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.707" endtime="20201029 18:18:30.708"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.404" endtime="20201029 18:18:30.709"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.403" endtime="20201029 18:18:30.709"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:30.713" level="INFO">${PHILIP_RES} = [{'diff': 0.00046133400000000074}, {'diff': 0.00046123699999999976}, {'diff': 0.00046124999999999985}, {'diff': 0.00046112499999999973}, {'diff': 0.00046123699999999976}, {'diff': 0.000461417000000002...</msg>
<status status="PASS" starttime="20201029 18:18:30.710" endtime="20201029 18:18:30.713"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:30.717" level="INFO">${RESULT} = {'diff': [0.00046133400000000074, 0.00046123699999999976, 0.00046124999999999985, 0.00046112499999999973, 0.00046123699999999976, 0.00046141700000000216, 0.00046129199999999856, 0.00046129199999999856...</msg>
<status status="PASS" starttime="20201029 18:18:30.714" endtime="20201029 18:18:30.717"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.721" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:30.720" endtime="20201029 18:18:30.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.724" level="INFO">VALUE: [0.00046133400000000074, 0.00046123699999999976, 0.00046124999999999985, 0.00046112499999999973, 0.00046123699999999976, 0.00046141700000000216, 0.00046129199999999856, 0.00046129199999999856, 0.00046129200000000203, 0.00046120800000000114, 0.0004613329999999978, 0.000461180000000002, 0.0004612919999999951, 0.00046122300000000366, 0.0004614169999999987, 0.00046112499999999973, 0.0004610970000000006, 0.00046126399999999596, 0.00046129100000000256, 0.0004610970000000006, 0.00046115299999999887, 0.0004612640000000029, 0.0004612499999999964, 0.0004611389999999993, 0.00046115299999999887, 0.00046115299999999887, 0.0004611939999999981, 0.00046119400000000504, 0.0004613610000000004, 0.0004613049999999952, 0.0004613049999999952, 0.00046134700000000084, 0.00046133299999999433, 0.00046138899999999955, 0.0004611519999999994, 0.0004613480000000003, 0.00046123600000000375, 0.00046143099999999826, 0.0004614449999999909, 0.0004612640000000029, 0.0004614299999999988, 0.0004611949999999976, 0.00046118100000000495, 0.00046122199999999725, 0.0004615139999999962, 0.0004612359999999899, 0.0004613340000000077, 0.0004614029999999991, 0.00046129200000000203, 0.0004615000000000036]</msg>
<status status="PASS" starttime="20201029 18:18:30.722" endtime="20201029 18:18:30.724"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.718" endtime="20201029 18:18:30.725"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.314" endtime="20201029 18:18:30.725"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.291" endtime="20201029 18:18:30.726"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:30.728" endtime="20201029 18:18:30.747"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.727" endtime="20201029 18:18:30.748"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.756" endtime="20201029 18:18:30.833"></status>
</kw>
<msg timestamp="20201029 18:18:30.833" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:30.754" endtime="20201029 18:18:30.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.838" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:30.836" endtime="20201029 18:18:30.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.841" endtime="20201029 18:18:30.846"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.752" endtime="20201029 18:18:30.847"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.750" endtime="20201029 18:18:30.848"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.861" endtime="20201029 18:18:31.153"></status>
</kw>
<msg timestamp="20201029 18:18:31.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019820986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020299347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:30.858" endtime="20201029 18:18:31.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:31.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019820986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020299347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:31.157" endtime="20201029 18:18:31.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:31.165" endtime="20201029 18:18:31.167"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.853" endtime="20201029 18:18:31.167"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.849" endtime="20201029 18:18:31.168"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:31.171" level="INFO">${PHILIP_RES} = [{'diff': 0.00047836100000000006}, {'diff': 0.00047820900000000027}, {'diff': 0.00047820900000000027}, {'diff': 0.00047833299999999745}, {'diff': 0.00047836100000000006}, {'diff': 0.000478235999999999...</msg>
<status status="PASS" starttime="20201029 18:18:31.168" endtime="20201029 18:18:31.172"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:31.175" level="INFO">${RESULT} = {'diff': [0.00047836100000000006, 0.00047820900000000027, 0.00047820900000000027, 0.00047833299999999745, 0.00047836100000000006, 0.00047823599999999994, 0.0004782080000000008, 0.00047827799999999865,...</msg>
<status status="PASS" starttime="20201029 18:18:31.172" endtime="20201029 18:18:31.176"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:31.180" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:31.179" endtime="20201029 18:18:31.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:31.182" level="INFO">VALUE: [0.00047836100000000006, 0.00047820900000000027, 0.00047820900000000027, 0.00047833299999999745, 0.00047836100000000006, 0.00047823599999999994, 0.0004782080000000008, 0.00047827799999999865, 0.0004781379999999995, 0.000478362000000003, 0.0004783330000000044, 0.00047827799999999865, 0.00047833299999999745, 0.00047823599999999994, 0.0004782499999999995, 0.00047830600000000473, 0.0004784590000000005, 0.0004783059999999978, 0.0004783190000000048, 0.00047822299999999984, 0.00047818000000000166, 0.00047827799999999865, 0.00047823599999999994, 0.0004783059999999978, 0.0004783059999999978, 0.0004783750000000031, 0.00047823599999999994, 0.0004783609999999966, 0.00047836100000000353, 0.0004782499999999995, 0.00047820799999999386, 0.00047816700000000156, 0.0004782919999999982, 0.0004782499999999995, 0.0004782499999999995, 0.00047819400000000123, 0.00047822200000000037, 0.0004782909999999918, 0.00047820799999999386, 0.00047826399999999214, 0.0004783190000000048, 0.0004782910000000057, 0.0004784310000000014, 0.0004783049999999983, 0.00047822200000000037, 0.0004782499999999995, 0.00047809799999999625, 0.0004781110000000033, 0.00047827799999999865, 0.000478264000000006]</msg>
<status status="PASS" starttime="20201029 18:18:31.181" endtime="20201029 18:18:31.184"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.176" endtime="20201029 18:18:31.184"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.748" endtime="20201029 18:18:31.185"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.726" endtime="20201029 18:18:31.185"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:31.187" endtime="20201029 18:18:31.206"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.186" endtime="20201029 18:18:31.207"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:31.215" endtime="20201029 18:18:31.290"></status>
</kw>
<msg timestamp="20201029 18:18:31.290" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:31.213" endtime="20201029 18:18:31.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:31.293" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:31.291" endtime="20201029 18:18:31.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:31.294" endtime="20201029 18:18:31.296"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.211" endtime="20201029 18:18:31.296"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.209" endtime="20201029 18:18:31.297"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:31.303" endtime="20201029 18:18:31.589"></status>
</kw>
<msg timestamp="20201029 18:18:31.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018002931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018498556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:31.301" endtime="20201029 18:18:31.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:31.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018002931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018498556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:31.593" endtime="20201029 18:18:31.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:31.601" endtime="20201029 18:18:31.602"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.299" endtime="20201029 18:18:31.603"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.297" endtime="20201029 18:18:31.603"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:31.607" level="INFO">${PHILIP_RES} = [{'diff': 0.0004956249999999995}, {'diff': 0.0004955420000000016}, {'diff': 0.0004955549999999982}, {'diff': 0.0004955830000000008}, {'diff': 0.0004954999999999994}, {'diff': 0.0004955000000000029}, {...</msg>
<status status="PASS" starttime="20201029 18:18:31.604" endtime="20201029 18:18:31.607"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:31.612" level="INFO">${RESULT} = {'diff': [0.0004956249999999995, 0.0004955420000000016, 0.0004955549999999982, 0.0004955830000000008, 0.0004954999999999994, 0.0004955000000000029, 0.0004955969999999969, 0.000495513999999999, 0.00049...</msg>
<status status="PASS" starttime="20201029 18:18:31.608" endtime="20201029 18:18:31.612"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:31.616" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:31.615" endtime="20201029 18:18:31.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:31.618" level="INFO">VALUE: [0.0004956249999999995, 0.0004955420000000016, 0.0004955549999999982, 0.0004955830000000008, 0.0004954999999999994, 0.0004955000000000029, 0.0004955969999999969, 0.000495513999999999, 0.0004956669999999982, 0.000495513999999999, 0.0004955420000000016, 0.0004956529999999987, 0.0004956529999999987, 0.000495611, 0.0004954860000000033, 0.000495611, 0.0004956669999999982, 0.0004956389999999991, 0.0004956529999999987, 0.0004957639999999958, 0.0004957910000000024, 0.0004957920000000018, 0.000495721999999997, 0.0004957919999999949, 0.0004956949999999974, 0.000495721999999997, 0.0004957359999999966, 0.0004956939999999979, 0.0004957919999999949, 0.0004957779999999953, 0.0004958060000000014, 0.0004957920000000018, 0.0004958890000000063, 0.0004956939999999979, 0.0004956670000000052, 0.0004957910000000093, 0.0004956529999999987, 0.0004956940000000049, 0.0004958329999999872, 0.0004957639999999958, 0.0004956249999999995, 0.0004956529999999987, 0.0004958889999999994, 0.0004958889999999994, 0.0004957500000000031, 0.0004957359999999966, 0.0004957500000000031, 0.0004956799999999983, 0.0004958330000000011, 0.0004958330000000011]</msg>
<status status="PASS" starttime="20201029 18:18:31.617" endtime="20201029 18:18:31.619"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.613" endtime="20201029 18:18:31.620"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.207" endtime="20201029 18:18:31.620"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.185" endtime="20201029 18:18:31.620"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:31.623" endtime="20201029 18:18:31.644"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.621" endtime="20201029 18:18:31.645"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:31.661" endtime="20201029 18:18:31.738"></status>
</kw>
<msg timestamp="20201029 18:18:31.739" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:31.658" endtime="20201029 18:18:31.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:31.744" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:31.741" endtime="20201029 18:18:31.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:31.746" endtime="20201029 18:18:31.749"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.653" endtime="20201029 18:18:31.751"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.649" endtime="20201029 18:18:31.752"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:31.765" endtime="20201029 18:18:32.059"></status>
</kw>
<msg timestamp="20201029 18:18:32.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029345069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029858361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:31.762" endtime="20201029 18:18:32.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029345069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029858361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:32.064" endtime="20201029 18:18:32.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.071" endtime="20201029 18:18:32.073"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.756" endtime="20201029 18:18:32.074"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.753" endtime="20201029 18:18:32.074"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:32.078" level="INFO">${PHILIP_RES} = [{'diff': 0.0005132919999999985}, {'diff': 0.0005130840000000005}, {'diff': 0.0005129999999999996}, {'diff': 0.0005131389999999958}, {'diff': 0.0005131529999999954}, {'diff': 0.0005131530000000023}, {...</msg>
<status status="PASS" starttime="20201029 18:18:32.075" endtime="20201029 18:18:32.078"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:32.082" level="INFO">${RESULT} = {'diff': [0.0005132919999999985, 0.0005130840000000005, 0.0005129999999999996, 0.0005131389999999958, 0.0005131529999999954, 0.0005131530000000023, 0.0005129999999999996, 0.0005130690000000049, 0.0005...</msg>
<status status="PASS" starttime="20201029 18:18:32.079" endtime="20201029 18:18:32.082"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.086" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:32.085" endtime="20201029 18:18:32.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.088" level="INFO">VALUE: [0.0005132919999999985, 0.0005130840000000005, 0.0005129999999999996, 0.0005131389999999958, 0.0005131529999999954, 0.0005131530000000023, 0.0005129999999999996, 0.0005130690000000049, 0.0005132230000000002, 0.0005130969999999971, 0.0005131110000000036, 0.0005130279999999987, 0.0005132090000000006, 0.0005130829999999975, 0.0005131110000000036, 0.0005130420000000052, 0.0005130279999999987, 0.0005131390000000027, 0.0005129160000000021, 0.000512986, 0.0005130419999999983, 0.0005129579999999939, 0.0005131529999999954, 0.0005131940000000015, 0.000512986, 0.0005132090000000006, 0.0005130139999999922, 0.0005130140000000061, 0.0005130829999999975, 0.0005130419999999913, 0.0005130560000000117, 0.0005131250000000032, 0.0005131109999999967, 0.0005131250000000032, 0.0005130140000000061, 0.0005131250000000032, 0.0005132360000000002, 0.0005130980000000035, 0.0005130549999999984, 0.000513180000000002, 0.0005129720000000004, 0.0005129859999999931, 0.0005130549999999984, 0.0005129720000000004, 0.0005130840000000109, 0.0005131530000000023, 0.0005130559999999978, 0.0005129859999999931, 0.000513180000000002, 0.0005131390000000097]</msg>
<status status="PASS" starttime="20201029 18:18:32.087" endtime="20201029 18:18:32.089"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.082" endtime="20201029 18:18:32.090"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.646" endtime="20201029 18:18:32.090"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.621" endtime="20201029 18:18:32.090"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:32.093" endtime="20201029 18:18:32.112"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.091" endtime="20201029 18:18:32.113"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.121" endtime="20201029 18:18:32.204"></status>
</kw>
<msg timestamp="20201029 18:18:32.205" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:32.119" endtime="20201029 18:18:32.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.207" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:32.206" endtime="20201029 18:18:32.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.208" endtime="20201029 18:18:32.211"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.116" endtime="20201029 18:18:32.211"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.115" endtime="20201029 18:18:32.212"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.218" endtime="20201029 18:18:32.504"></status>
</kw>
<msg timestamp="20201029 18:18:32.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021644139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022175014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:32.217" endtime="20201029 18:18:32.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021644139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022175014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:32.508" endtime="20201029 18:18:32.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.516" endtime="20201029 18:18:32.517"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.214" endtime="20201029 18:18:32.518"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.212" endtime="20201029 18:18:32.518"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:32.522" level="INFO">${PHILIP_RES} = [{'diff': 0.0005308750000000001}, {'diff': 0.0005309440000000019}, {'diff': 0.0005311250000000003}, {'diff': 0.0005309309999999984}, {'diff': 0.0005310130000000003}, {'diff': 0.0005310700000000015}, {...</msg>
<status status="PASS" starttime="20201029 18:18:32.519" endtime="20201029 18:18:32.522"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:32.526" level="INFO">${RESULT} = {'diff': [0.0005308750000000001, 0.0005309440000000019, 0.0005311250000000003, 0.0005309309999999984, 0.0005310130000000003, 0.0005310700000000015, 0.0005310279999999994, 0.0005308889999999997, 0.0005...</msg>
<status status="PASS" starttime="20201029 18:18:32.523" endtime="20201029 18:18:32.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.530" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:32.529" endtime="20201029 18:18:32.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.533" level="INFO">VALUE: [0.0005308750000000001, 0.0005309440000000019, 0.0005311250000000003, 0.0005309309999999984, 0.0005310130000000003, 0.0005310700000000015, 0.0005310279999999994, 0.0005308889999999997, 0.000530944999999998, 0.0005310000000000037, 0.0005309169999999988, 0.0005309719999999976, 0.0005309999999999968, 0.0005309860000000041, 0.0005308889999999997, 0.0005310410000000029, 0.0005310970000000012, 0.0005310140000000033, 0.0005310140000000033, 0.0005309999999999968, 0.000530957999999998, 0.0005309589999999975, 0.0005311669999999991, 0.0005309440000000054, 0.000530958000000005, 0.0005310969999999943, 0.0005312629999999971, 0.0005311529999999995, 0.0005312079999999983, 0.0005311389999999999, 0.0005312359999999905, 0.0005312359999999905, 0.0005311380000000004, 0.0005311809999999917, 0.0005311519999999931, 0.0005311939999999987, 0.0005312360000000044, 0.0005312219999999979, 0.0005311250000000073, 0.0005312639999999896, 0.00053127800000001, 0.0005311249999999934, 0.0005311250000000073, 0.0005312779999999961, 0.0005311800000000061, 0.0005311110000000008, 0.0005313049999999958, 0.0005309439999999915, 0.0005309169999999919, 0.0005310139999999963]</msg>
<status status="PASS" starttime="20201029 18:18:32.531" endtime="20201029 18:18:32.534"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.527" endtime="20201029 18:18:32.535"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.113" endtime="20201029 18:18:32.535"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.090" endtime="20201029 18:18:32.535"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:32.538" endtime="20201029 18:18:32.559"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.536" endtime="20201029 18:18:32.560"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.578" endtime="20201029 18:18:32.663"></status>
</kw>
<msg timestamp="20201029 18:18:32.664" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:32.575" endtime="20201029 18:18:32.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.669" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:32.666" endtime="20201029 18:18:32.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.671" endtime="20201029 18:18:32.674"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.569" endtime="20201029 18:18:32.675"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.564" endtime="20201029 18:18:32.676"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.690" endtime="20201029 18:18:32.984"></status>
</kw>
<msg timestamp="20201029 18:18:32.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033836653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034385903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:32.686" endtime="20201029 18:18:32.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033836653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034385903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:32.988" endtime="20201029 18:18:32.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.995" endtime="20201029 18:18:32.997"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.681" endtime="20201029 18:18:32.998"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.677" endtime="20201029 18:18:32.998"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:33.002" level="INFO">${PHILIP_RES} = [{'diff': 0.0005492500000000011}, {'diff': 0.000549221999999995}, {'diff': 0.0005491249999999975}, {'diff': 0.0005491250000000045}, {'diff': 0.0005491250000000045}, {'diff': 0.0005490689999999993}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:32.999" endtime="20201029 18:18:33.002"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:33.007" level="INFO">${RESULT} = {'diff': [0.0005492500000000011, 0.000549221999999995, 0.0005491249999999975, 0.0005491250000000045, 0.0005491250000000045, 0.0005490689999999993, 0.0005491529999999967, 0.0005490829999999988, 0.00054...</msg>
<status status="PASS" starttime="20201029 18:18:33.003" endtime="20201029 18:18:33.007"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:33.011" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:33.010" endtime="20201029 18:18:33.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:33.013" level="INFO">VALUE: [0.0005492500000000011, 0.000549221999999995, 0.0005491249999999975, 0.0005491250000000045, 0.0005491250000000045, 0.0005490689999999993, 0.0005491529999999967, 0.0005490829999999988, 0.0005490559999999992, 0.0005491389999999971, 0.000549110999999998, 0.000549139000000004, 0.0005492359999999946, 0.0005490969999999984, 0.000549110999999998, 0.0005491249999999975, 0.000549110999999998, 0.0005492090000000019, 0.0005491810000000028, 0.000549139000000004, 0.0005492079999999955, 0.0005492230000000015, 0.0005491800000000102, 0.0005491799999999963, 0.0005493339999999985, 0.0005492640000000076, 0.0005491529999999967, 0.0005492780000000003, 0.0005492919999999929, 0.000549139000000004, 0.0005492090000000088, 0.0005490140000000004, 0.0005491529999999967, 0.0005490550000000066, 0.0005492079999999955, 0.0005491249999999975, 0.0005491249999999975, 0.0005492079999999955, 0.0005490689999999993, 0.0005490560000000061, 0.0005491659999999898, 0.000549139000000004, 0.000549208999999995, 0.0005492640000000076, 0.0005491110000000049, 0.0005493200000000059, 0.0005492079999999955, 0.0005491799999999963, 0.000549208999999995, 0.0005491530000000105]</msg>
<status status="PASS" starttime="20201029 18:18:33.012" endtime="20201029 18:18:33.014"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.007" endtime="20201029 18:18:33.015"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.561" endtime="20201029 18:18:33.015"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.536" endtime="20201029 18:18:33.015"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:33.017" endtime="20201029 18:18:33.037"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.016" endtime="20201029 18:18:33.037"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:33.045" endtime="20201029 18:18:33.133"></status>
</kw>
<msg timestamp="20201029 18:18:33.134" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:33.044" endtime="20201029 18:18:33.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:33.136" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:33.135" endtime="20201029 18:18:33.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:33.137" endtime="20201029 18:18:33.138"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.041" endtime="20201029 18:18:33.139"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.039" endtime="20201029 18:18:33.139"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:33.146" endtime="20201029 18:18:33.433"></status>
</kw>
<msg timestamp="20201029 18:18:33.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021237681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0218055, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:18:33.144" endtime="20201029 18:18:33.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:33.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021237681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0218055, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:18:33.437" endtime="20201029 18:18:33.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:33.444" endtime="20201029 18:18:33.446"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.142" endtime="20201029 18:18:33.447"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.140" endtime="20201029 18:18:33.447"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:33.453" level="INFO">${PHILIP_RES} = [{'diff': 0.0005678189999999972}, {'diff': 0.0005676940000000005}, {'diff': 0.0005677780000000014}, {'diff': 0.0005678609999999994}, {'diff': 0.000567792000000001}, {'diff': 0.0005677499999999988}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:33.448" endtime="20201029 18:18:33.453"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:33.461" level="INFO">${RESULT} = {'diff': [0.0005678189999999972, 0.0005676940000000005, 0.0005677780000000014, 0.0005678609999999994, 0.000567792000000001, 0.0005677499999999988, 0.0005676389999999983, 0.0005677499999999988, 0.00056...</msg>
<status status="PASS" starttime="20201029 18:18:33.455" endtime="20201029 18:18:33.462"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:33.470" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:33.468" endtime="20201029 18:18:33.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:33.475" level="INFO">VALUE: [0.0005678189999999972, 0.0005676940000000005, 0.0005677780000000014, 0.0005678609999999994, 0.000567792000000001, 0.0005677499999999988, 0.0005676389999999983, 0.0005677499999999988, 0.0005675560000000038, 0.0005675280000000046, 0.0005678610000000028, 0.0005678609999999959, 0.0005678749999999955, 0.000567790999999998, 0.000567777999999998, 0.000567695, 0.0005677229999999991, 0.0005677229999999991, 0.0005677219999999997, 0.0005677359999999992, 0.0005676529999999944, 0.0005676940000000005, 0.0005676529999999944, 0.0005677630000000058, 0.0005678330000000037, 0.0005677639999999984, 0.0005677079999999932, 0.0005676810000000004, 0.0005676940000000005, 0.0005676950000000069, 0.0005678610000000028, 0.0005676810000000004, 0.0005676530000000013, 0.0005676810000000004, 0.0005676520000000018, 0.0005677359999999992, 0.0005676520000000018, 0.0005677359999999992, 0.0005676110000000095, 0.0005675410000000047, 0.0005677639999999984, 0.0005678189999999972, 0.0005678200000000105, 0.0005675550000000112, 0.000567374999999995, 0.0005675420000000042, 0.0005674170000000006, 0.0005674300000000077, 0.0005674729999999989, 0.0005674440000000003]</msg>
<status status="PASS" starttime="20201029 18:18:33.472" endtime="20201029 18:18:33.477"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.463" endtime="20201029 18:18:33.478"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.038" endtime="20201029 18:18:33.479"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.016" endtime="20201029 18:18:33.479"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:33.484" endtime="20201029 18:18:33.505"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.481" endtime="20201029 18:18:33.507"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:33.523" endtime="20201029 18:18:33.612"></status>
</kw>
<msg timestamp="20201029 18:18:33.612" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:33.520" endtime="20201029 18:18:33.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:33.615" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:33.613" endtime="20201029 18:18:33.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:33.616" endtime="20201029 18:18:33.618"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.515" endtime="20201029 18:18:33.619"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.511" endtime="20201029 18:18:33.619"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:33.626" endtime="20201029 18:18:33.913"></status>
</kw>
<msg timestamp="20201029 18:18:33.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031362819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031949167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:33.624" endtime="20201029 18:18:33.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:33.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031362819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031949167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:33.917" endtime="20201029 18:18:33.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:33.925" endtime="20201029 18:18:33.926"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.621" endtime="20201029 18:18:33.927"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.620" endtime="20201029 18:18:33.927"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:33.931" level="INFO">${PHILIP_RES} = [{'diff': 0.0005863480000000004}, {'diff': 0.0005862920000000021}, {'diff': 0.0005862089999999973}, {'diff': 0.0005863750000000001}, {'diff': 0.000586264000000003}, {'diff': 0.0005863189999999949}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:33.928" endtime="20201029 18:18:33.931"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:33.935" level="INFO">${RESULT} = {'diff': [0.0005863480000000004, 0.0005862920000000021, 0.0005862089999999973, 0.0005863750000000001, 0.000586264000000003, 0.0005863189999999949, 0.0005862080000000047, 0.0005862779999999956, 0.00058...</msg>
<status status="PASS" starttime="20201029 18:18:33.932" endtime="20201029 18:18:33.935"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:33.939" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:33.938" endtime="20201029 18:18:33.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:33.941" level="INFO">VALUE: [0.0005863480000000004, 0.0005862920000000021, 0.0005862089999999973, 0.0005863750000000001, 0.000586264000000003, 0.0005863189999999949, 0.0005862080000000047, 0.0005862779999999956, 0.0005863750000000001, 0.0005863889999999997, 0.0005862780000000026, 0.0005862220000000043, 0.0005862500000000034, 0.0005863610000000005, 0.0005862639999999961, 0.000586347000000001, 0.000586264000000003, 0.0005863190000000018, 0.0005861799999999986, 0.000586346999999994, 0.0005863049999999953, 0.0005863050000000092, 0.0005863059999999948, 0.0005862630000000035, 0.0005861110000000003, 0.0005864859999999972, 0.0005863049999999953, 0.000586347000000001, 0.0005862769999999962, 0.0005863329999999944, 0.0005863890000000066, 0.0005862079999999908, 0.0005862499999999965, 0.0005863750000000001, 0.0005864159999999924, 0.000586347000000001, 0.0005861249999999929, 0.0005863750000000001, 0.0005864999999999898, 0.0005863339999999939, 0.000586264000000003, 0.0005860140000000097, 0.0005862910000000027, 0.0005863610000000075, 0.0005864169999999919, 0.0005862360000000039, 0.0005864170000000057, 0.0005862920000000021, 0.0005863059999999948, 0.0005864029999999992]</msg>
<status status="PASS" starttime="20201029 18:18:33.940" endtime="20201029 18:18:33.943"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.936" endtime="20201029 18:18:33.944"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.508" endtime="20201029 18:18:33.944"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.480" endtime="20201029 18:18:33.944"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:33.947" endtime="20201029 18:18:33.966"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.945" endtime="20201029 18:18:33.967"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:33.974" endtime="20201029 18:18:34.063"></status>
</kw>
<msg timestamp="20201029 18:18:34.064" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:33.973" endtime="20201029 18:18:34.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.066" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:34.065" endtime="20201029 18:18:34.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:34.067" endtime="20201029 18:18:34.069"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.970" endtime="20201029 18:18:34.069"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.968" endtime="20201029 18:18:34.069"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:34.076" endtime="20201029 18:18:34.376"></status>
</kw>
<msg timestamp="20201029 18:18:34.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021646778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022251764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:34.074" endtime="20201029 18:18:34.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021646778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022251764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:34.380" endtime="20201029 18:18:34.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:34.387" endtime="20201029 18:18:34.389"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.072" endtime="20201029 18:18:34.390"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.070" endtime="20201029 18:18:34.390"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:34.394" level="INFO">${PHILIP_RES} = [{'diff': 0.0006049860000000018}, {'diff': 0.0006048750000000012}, {'diff': 0.0006049439999999996}, {'diff': 0.0006048890000000008}, {'diff': 0.0006050280000000005}, {'diff': 0.0006048750000000012}, {...</msg>
<status status="PASS" starttime="20201029 18:18:34.391" endtime="20201029 18:18:34.394"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:34.401" level="INFO">${RESULT} = {'diff': [0.0006049860000000018, 0.0006048750000000012, 0.0006049439999999996, 0.0006048890000000008, 0.0006050280000000005, 0.0006048750000000012, 0.0006050560000000031, 0.0006051940000000033, 0.0006...</msg>
<status status="PASS" starttime="20201029 18:18:34.395" endtime="20201029 18:18:34.401"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.405" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:34.404" endtime="20201029 18:18:34.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.408" level="INFO">VALUE: [0.0006049860000000018, 0.0006048750000000012, 0.0006049439999999996, 0.0006048890000000008, 0.0006050280000000005, 0.0006048750000000012, 0.0006050560000000031, 0.0006051940000000033, 0.0006049030000000039, 0.0006048890000000043, 0.0006050550000000002, 0.0006049439999999962, 0.0006048479999999981, 0.0006048610000000051, 0.0006050280000000005, 0.0006048329999999991, 0.0006049860000000018, 0.0006049450000000026, 0.0006047780000000003, 0.0006049170000000034, 0.0006049450000000026, 0.0006047919999999998, 0.0006051529999999972, 0.0006049580000000027, 0.0006050699999999992, 0.0006049449999999956, 0.0006050140000000009, 0.0006049169999999965, 0.0006048749999999908, 0.0006049870000000013, 0.0006048190000000064, 0.0006050420000000001, 0.0006047780000000003, 0.0006048609999999982, 0.0006047910000000073, 0.0006050000000000083, 0.0006047909999999934, 0.0006050689999999997, 0.0006050550000000071, 0.0006048049999999999, 0.0006047780000000003, 0.000604819999999992, 0.0006049999999999944, 0.0006050689999999997, 0.0006049169999999965, 0.000604931000000003, 0.0006049860000000018, 0.0006049579999999888, 0.0006050560000000066, 0.0006049999999999944]</msg>
<status status="PASS" starttime="20201029 18:18:34.406" endtime="20201029 18:18:34.408"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.402" endtime="20201029 18:18:34.409"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.967" endtime="20201029 18:18:34.409"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.945" endtime="20201029 18:18:34.409"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:34.412" endtime="20201029 18:18:34.431"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.410" endtime="20201029 18:18:34.432"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:34.440" endtime="20201029 18:18:34.531"></status>
</kw>
<msg timestamp="20201029 18:18:34.531" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:34.438" endtime="20201029 18:18:34.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.534" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:34.532" endtime="20201029 18:18:34.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:34.535" endtime="20201029 18:18:34.536"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.436" endtime="20201029 18:18:34.537"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.434" endtime="20201029 18:18:34.537"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:34.544" endtime="20201029 18:18:34.830"></status>
</kw>
<msg timestamp="20201029 18:18:34.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018549875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019174139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:34.542" endtime="20201029 18:18:34.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018549875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019174139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:34.834" endtime="20201029 18:18:34.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:34.842" endtime="20201029 18:18:34.843"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.539" endtime="20201029 18:18:34.844"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.538" endtime="20201029 18:18:34.844"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:34.848" level="INFO">${PHILIP_RES} = [{'diff': 0.0006242639999999994}, {'diff': 0.0006240970000000005}, {'diff': 0.0006244030000000025}, {'diff': 0.0006241660000000024}, {'diff': 0.0006242219999999972}, {'diff': 0.0006240840000000004}, {...</msg>
<status status="PASS" starttime="20201029 18:18:34.845" endtime="20201029 18:18:34.848"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:34.852" level="INFO">${RESULT} = {'diff': [0.0006242639999999994, 0.0006240970000000005, 0.0006244030000000025, 0.0006241660000000024, 0.0006242219999999972, 0.0006240840000000004, 0.0006242769999999995, 0.0006242079999999976, 0.0006...</msg>
<status status="PASS" starttime="20201029 18:18:34.849" endtime="20201029 18:18:34.852"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.856" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:34.855" endtime="20201029 18:18:34.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.859" level="INFO">VALUE: [0.0006242639999999994, 0.0006240970000000005, 0.0006244030000000025, 0.0006241660000000024, 0.0006242219999999972, 0.0006240840000000004, 0.0006242769999999995, 0.0006242079999999976, 0.0006240139999999991, 0.0006241529999999954, 0.0006244019999999961, 0.0006245279999999992, 0.0006244730000000004, 0.0006244590000000008, 0.0006244309999999947, 0.0006243469999999973, 0.0006243059999999981, 0.0006244029999999956, 0.0006241940000000015, 0.0006242499999999998, 0.0006243329999999978, 0.0006242360000000002, 0.0006243609999999969, 0.0006241390000000027, 0.000624290999999999, 0.000624306000000005, 0.0006243330000000047, 0.0006244310000000017, 0.0006244030000000095, 0.0006243469999999973, 0.000624290999999999, 0.0006243049999999917, 0.000624389000000003, 0.0006242639999999994, 0.0006242080000000011, 0.0006243469999999973, 0.000624306000000005, 0.0006243049999999917, 0.0006244590000000078, 0.0006244030000000095, 0.0006244170000000021, 0.00062436099999999, 0.0006243479999999968, 0.0006244170000000021, 0.0006244720000000009, 0.0006244299999999953, 0.0006243469999999973, 0.0006243050000000055, 0.0006242090000000006, 0.0006245689999999915]</msg>
<status status="PASS" starttime="20201029 18:18:34.857" endtime="20201029 18:18:34.859"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.853" endtime="20201029 18:18:34.860"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.432" endtime="20201029 18:18:34.860"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.410" endtime="20201029 18:18:34.860"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:34.863" endtime="20201029 18:18:34.882"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.861" endtime="20201029 18:18:34.883"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:34.890" endtime="20201029 18:18:34.982"></status>
</kw>
<msg timestamp="20201029 18:18:34.983" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:34.889" endtime="20201029 18:18:34.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.985" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:34.984" endtime="20201029 18:18:34.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:34.986" endtime="20201029 18:18:34.989"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.887" endtime="20201029 18:18:34.989"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.885" endtime="20201029 18:18:34.990"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:34.996" endtime="20201029 18:18:35.294"></status>
</kw>
<msg timestamp="20201029 18:18:35.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019794153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020437833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:34.994" endtime="20201029 18:18:35.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:35.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019794153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020437833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:35.298" endtime="20201029 18:18:35.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.306" endtime="20201029 18:18:35.307"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.992" endtime="20201029 18:18:35.308"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.990" endtime="20201029 18:18:35.308"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:35.312" level="INFO">${PHILIP_RES} = [{'diff': 0.0006436800000000006}, {'diff': 0.0006437359999999989}, {'diff': 0.0006436529999999975}, {'diff': 0.0006437370000000019}, {'diff': 0.0006436659999999976}, {'diff': 0.0006436810000000001}, {...</msg>
<status status="PASS" starttime="20201029 18:18:35.309" endtime="20201029 18:18:35.312"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:35.316" level="INFO">${RESULT} = {'diff': [0.0006436800000000006, 0.0006437359999999989, 0.0006436529999999975, 0.0006437370000000019, 0.0006436659999999976, 0.0006436810000000001, 0.0006437360000000024, 0.0006435280000000043, 0.0006...</msg>
<status status="PASS" starttime="20201029 18:18:35.313" endtime="20201029 18:18:35.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:35.320" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:35.319" endtime="20201029 18:18:35.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:35.323" level="INFO">VALUE: [0.0006436800000000006, 0.0006437359999999989, 0.0006436529999999975, 0.0006437370000000019, 0.0006436659999999976, 0.0006436810000000001, 0.0006437360000000024, 0.0006435280000000043, 0.0006436810000000001, 0.0006438470000000029, 0.0006436520000000015, 0.000643458999999999, 0.0006434859999999987, 0.0006435839999999957, 0.000643554999999997, 0.0006435970000000027, 0.0006435979999999952, 0.0006434579999999995, 0.000643653000000001, 0.0006435280000000043, 0.0006436390000000014, 0.0006435280000000043, 0.0006435139999999978, 0.0006434170000000003, 0.0006433050000000037, 0.0006433190000000033, 0.0006434449999999994, 0.0006433750000000016, 0.0006432920000000036, 0.000643458999999999, 0.0006434030000000007, 0.0006433059999999963, 0.0006434719999999922, 0.0006433190000000033, 0.000643278000000011, 0.0006433339999999954, 0.0006434859999999987, 0.0006431949999999992, 0.0006433889999999942, 0.0006433329999999959, 0.0006433189999999894, 0.0006432779999999971, 0.0006432360000000054, 0.0006433889999999942, 0.0006432219999999989, 0.0006434859999999987, 0.0006433889999999942, 0.0006433889999999942, 0.000643249999999998, 0.0006433609999999951]</msg>
<status status="PASS" starttime="20201029 18:18:35.321" endtime="20201029 18:18:35.328"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.317" endtime="20201029 18:18:35.329"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.883" endtime="20201029 18:18:35.329"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.861" endtime="20201029 18:18:35.330"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:35.332" endtime="20201029 18:18:35.351"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.330" endtime="20201029 18:18:35.352"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.360" endtime="20201029 18:18:35.455"></status>
</kw>
<msg timestamp="20201029 18:18:35.455" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:35.359" endtime="20201029 18:18:35.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:35.457" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:35.456" endtime="20201029 18:18:35.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.458" endtime="20201029 18:18:35.460"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.356" endtime="20201029 18:18:35.460"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.354" endtime="20201029 18:18:35.461"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.467" endtime="20201029 18:18:35.754"></status>
</kw>
<msg timestamp="20201029 18:18:35.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017697333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018360333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:35.466" endtime="20201029 18:18:35.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:35.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017697333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018360333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:35.758" endtime="20201029 18:18:35.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.765" endtime="20201029 18:18:35.767"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.463" endtime="20201029 18:18:35.768"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.461" endtime="20201029 18:18:35.768"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:35.772" level="INFO">${PHILIP_RES} = [{'diff': 0.0006630000000000004}, {'diff': 0.0006629439999999986}, {'diff': 0.0006629440000000021}, {'diff': 0.000662916999999999}, {'diff': 0.0006628620000000002}, {'diff': 0.0006630550000000027}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:35.769" endtime="20201029 18:18:35.772"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:35.777" level="INFO">${RESULT} = {'diff': [0.0006630000000000004, 0.0006629439999999986, 0.0006629440000000021, 0.000662916999999999, 0.0006628620000000002, 0.0006630550000000027, 0.0006630830000000018, 0.0006630549999999992, 0.00066...</msg>
<status status="PASS" starttime="20201029 18:18:35.773" endtime="20201029 18:18:35.777"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:35.781" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:35.780" endtime="20201029 18:18:35.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:35.783" level="INFO">VALUE: [0.0006630000000000004, 0.0006629439999999986, 0.0006629440000000021, 0.000662916999999999, 0.0006628620000000002, 0.0006630550000000027, 0.0006630830000000018, 0.0006630549999999992, 0.0006630560000000021, 0.0006630550000000027, 0.0006629449999999981, 0.0006629860000000043, 0.0006628889999999998, 0.0006628469999999942, 0.0006630279999999961, 0.0006631809999999988, 0.0006631799999999993, 0.0006632359999999976, 0.0006633329999999951, 0.0006634020000000004, 0.0006633060000000024, 0.0006631939999999989, 0.0006633750000000008, 0.0006634860000000048, 0.000663304999999996, 0.0006634029999999999, 0.0006634029999999999, 0.0006632359999999976, 0.000663319999999995, 0.0006632779999999894, 0.0006631940000000058, 0.0006635409999999897, 0.0006633330000000021, 0.0006634169999999995, 0.000663444000000013, 0.0006633330000000021, 0.0006634579999999918, 0.0006632780000000033, 0.0006632780000000033, 0.0006632089999999979, 0.0006631809999999988, 0.0006630969999999875, 0.0006630700000000017, 0.0006629729999999973, 0.0006633050000000029, 0.0006628889999999998, 0.0006630000000000108, 0.0006628889999999998, 0.0006632369999999971, 0.0006630410000000031]</msg>
<status status="PASS" starttime="20201029 18:18:35.782" endtime="20201029 18:18:35.784"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.777" endtime="20201029 18:18:35.784"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.353" endtime="20201029 18:18:35.785"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.330" endtime="20201029 18:18:35.785"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:35.787" endtime="20201029 18:18:35.807"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.786" endtime="20201029 18:18:35.807"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.815" endtime="20201029 18:18:35.914"></status>
</kw>
<msg timestamp="20201029 18:18:35.914" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:35.814" endtime="20201029 18:18:35.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:35.919" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:35.917" endtime="20201029 18:18:35.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.922" endtime="20201029 18:18:35.925"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.811" endtime="20201029 18:18:35.926"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.809" endtime="20201029 18:18:35.927"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.940" endtime="20201029 18:18:36.234"></status>
</kw>
<msg timestamp="20201029 18:18:36.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019465222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020148486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:35.937" endtime="20201029 18:18:36.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:36.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019465222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020148486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:36.238" endtime="20201029 18:18:36.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:36.246" endtime="20201029 18:18:36.248"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.932" endtime="20201029 18:18:36.248"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.928" endtime="20201029 18:18:36.249"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:36.253" level="INFO">${PHILIP_RES} = [{'diff': 0.0006832639999999994}, {'diff': 0.0006832079999999977}, {'diff': 0.0006832360000000003}, {'diff': 0.0006829720000000004}, {'diff': 0.0006831389999999993}, {'diff': 0.000683083000000001}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:36.249" endtime="20201029 18:18:36.253"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:36.257" level="INFO">${RESULT} = {'diff': [0.0006832639999999994, 0.0006832079999999977, 0.0006832360000000003, 0.0006829720000000004, 0.0006831389999999993, 0.000683083000000001, 0.000683083000000001, 0.0006830140000000026, 0.000683...</msg>
<status status="PASS" starttime="20201029 18:18:36.254" endtime="20201029 18:18:36.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:36.261" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:36.260" endtime="20201029 18:18:36.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:36.263" level="INFO">VALUE: [0.0006832639999999994, 0.0006832079999999977, 0.0006832360000000003, 0.0006829720000000004, 0.0006831389999999993, 0.000683083000000001, 0.000683083000000001, 0.0006830140000000026, 0.0006831110000000001, 0.0006831119999999996, 0.0006830550000000019, 0.0006830130000000031, 0.000683000000000003, 0.0006831529999999988, 0.0006832639999999959, 0.0006834029999999991, 0.0006830970000000006, 0.0006834159999999992, 0.0006832630000000034, 0.0006832919999999951, 0.0006833060000000016, 0.0006831659999999989, 0.0006832910000000025, 0.0006831669999999984, 0.0006832219999999972, 0.0006832500000000033, 0.0006832779999999955, 0.0006832500000000102, 0.0006833890000000065, 0.0006834169999999917, 0.0006832360000000037, 0.0006832640000000029, 0.0006832640000000029, 0.0006833470000000008, 0.0006832090000000041, 0.0006832369999999893, 0.0006834019999999996, 0.0006834579999999979, 0.0006833470000000008, 0.0006833200000000011, 0.0006832360000000037, 0.0006832780000000094, 0.0006834170000000056, 0.0006832640000000029, 0.0006831949999999976, 0.0006833890000000065, 0.0006833879999999931, 0.0006833329999999943, 0.0006832359999999899, 0.0006833890000000065]</msg>
<status status="PASS" starttime="20201029 18:18:36.262" endtime="20201029 18:18:36.264"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.257" endtime="20201029 18:18:36.264"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.808" endtime="20201029 18:18:36.265"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.785" endtime="20201029 18:18:36.265"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:36.267" endtime="20201029 18:18:36.287"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.266" endtime="20201029 18:18:36.287"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:36.295" endtime="20201029 18:18:36.390"></status>
</kw>
<msg timestamp="20201029 18:18:36.390" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:36.294" endtime="20201029 18:18:36.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:36.393" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:36.391" endtime="20201029 18:18:36.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:36.394" endtime="20201029 18:18:36.396"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.291" endtime="20201029 18:18:36.397"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.289" endtime="20201029 18:18:36.397"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:36.403" endtime="20201029 18:18:36.689"></status>
</kw>
<msg timestamp="20201029 18:18:36.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016868944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017572333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:36.402" endtime="20201029 18:18:36.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:36.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016868944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017572333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:36.693" endtime="20201029 18:18:36.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:36.711" endtime="20201029 18:18:36.714"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.399" endtime="20201029 18:18:36.715"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.398" endtime="20201029 18:18:36.716"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:36.724" level="INFO">${PHILIP_RES} = [{'diff': 0.0007033889999999987}, {'diff': 0.0007031940000000007}, {'diff': 0.0007031249999999989}, {'diff': 0.0007030969999999997}, {'diff': 0.0007031390000000019}, {'diff': 0.0007031950000000002}, {...</msg>
<status status="PASS" starttime="20201029 18:18:36.718" endtime="20201029 18:18:36.725"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:36.733" level="INFO">${RESULT} = {'diff': [0.0007033889999999987, 0.0007031940000000007, 0.0007031249999999989, 0.0007030969999999997, 0.0007031390000000019, 0.0007031950000000002, 0.0007030839999999997, 0.0007031250000000024, 0.0007...</msg>
<status status="PASS" starttime="20201029 18:18:36.726" endtime="20201029 18:18:36.733"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:36.741" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:36.739" endtime="20201029 18:18:36.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:36.746" level="INFO">VALUE: [0.0007033889999999987, 0.0007031940000000007, 0.0007031249999999989, 0.0007030969999999997, 0.0007031390000000019, 0.0007031950000000002, 0.0007030839999999997, 0.0007031250000000024, 0.0007031669999999976, 0.0007031390000000054, 0.0007030689999999937, 0.0007029860000000027, 0.000703055000000001, 0.0007033190000000009, 0.0007030140000000018, 0.000703055000000001, 0.0007031660000000051, 0.0007032219999999964, 0.0007030979999999992, 0.0007032780000000016, 0.0007030830000000002, 0.0007029719999999962, 0.0007031119999999988, 0.0007031249999999989, 0.0007031799999999977, 0.0007031810000000041, 0.0007033470000000069, 0.0007032500000000025, 0.0007031109999999924, 0.0007030830000000071, 0.0007031110000000063, 0.0007031939999999903, 0.0007032080000000107, 0.0007033199999999934, 0.0007031110000000063, 0.0007032500000000025, 0.0007030560000000075, 0.000703055000000008, 0.000703152999999998, 0.0007032360000000099, 0.0007031389999999915, 0.0007030140000000018, 0.0007031799999999977, 0.0007031380000000059, 0.0007032220000000033, 0.0007031799999999977, 0.0007030690000000006, 0.0007030969999999997, 0.0007030700000000001, 0.0007032639999999951]</msg>
<status status="PASS" starttime="20201029 18:18:36.744" endtime="20201029 18:18:36.749"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.734" endtime="20201029 18:18:36.751"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.288" endtime="20201029 18:18:36.751"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.265" endtime="20201029 18:18:36.752"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:36.757" endtime="20201029 18:18:36.778"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.754" endtime="20201029 18:18:36.779"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:36.795" endtime="20201029 18:18:36.896"></status>
</kw>
<msg timestamp="20201029 18:18:36.897" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:36.793" endtime="20201029 18:18:36.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:36.899" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:36.898" endtime="20201029 18:18:36.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:36.900" endtime="20201029 18:18:36.902"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.787" endtime="20201029 18:18:36.902"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.783" endtime="20201029 18:18:36.903"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:36.909" endtime="20201029 18:18:37.197"></status>
</kw>
<msg timestamp="20201029 18:18:37.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029282014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030005597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:36.907" endtime="20201029 18:18:37.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:37.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029282014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030005597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:37.201" endtime="20201029 18:18:37.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:37.209" endtime="20201029 18:18:37.210"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.905" endtime="20201029 18:18:37.211"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.903" endtime="20201029 18:18:37.211"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:37.215" level="INFO">${PHILIP_RES} = [{'diff': 0.0007235829999999999}, {'diff': 0.0007236110000000025}, {'diff': 0.0007238479999999992}, {'diff': 0.0007233889999999979}, {'diff': 0.0007236390000000051}, {'diff': 0.0007236949999999964}, {...</msg>
<status status="PASS" starttime="20201029 18:18:37.212" endtime="20201029 18:18:37.215"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:37.220" level="INFO">${RESULT} = {'diff': [0.0007235829999999999, 0.0007236110000000025, 0.0007238479999999992, 0.0007233889999999979, 0.0007236390000000051, 0.0007236949999999964, 0.0007237500000000022, 0.000723722000000003, 0.00072...</msg>
<status status="PASS" starttime="20201029 18:18:37.216" endtime="20201029 18:18:37.220"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:37.224" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:37.223" endtime="20201029 18:18:37.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:37.227" level="INFO">VALUE: [0.0007235829999999999, 0.0007236110000000025, 0.0007238479999999992, 0.0007233889999999979, 0.0007236390000000051, 0.0007236949999999964, 0.0007237500000000022, 0.000723722000000003, 0.0007236799999999974, 0.0007235969999999994, 0.0007236809999999969, 0.0007236659999999978, 0.0007236389999999981, 0.000723708999999996, 0.0007234720000000028, 0.0007237500000000022, 0.0007236249999999986, 0.0007235969999999994, 0.0007236389999999981, 0.0007236810000000038, 0.0007238339999999926, 0.0007236249999999916, 0.0007234869999999949, 0.0007236379999999987, 0.0007235969999999925, 0.0007235140000000084, 0.0007237779999999944, 0.0007235970000000064, 0.0007237229999999956, 0.0007238060000000074, 0.0007236529999999908, 0.0007237230000000094, 0.0007236249999999916, 0.0007239169999999906, 0.0007236119999999985, 0.0007237360000000026, 0.000723693999999997, 0.0007237219999999961, 0.0007237909999999875, 0.0007236950000000103, 0.000723693999999997, 0.0007235969999999925, 0.0007238610000000062, 0.0007236669999999973, 0.0007237909999999875, 0.0007237640000000017, 0.0007237080000000035, 0.0007235699999999928, 0.0007238190000000005, 0.0007237640000000017]</msg>
<status status="PASS" starttime="20201029 18:18:37.225" endtime="20201029 18:18:37.227"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.221" endtime="20201029 18:18:37.228"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.780" endtime="20201029 18:18:37.228"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.753" endtime="20201029 18:18:37.229"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.825" endtime="20201029 18:18:37.229"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:18:14.558" endtime="20201029 18:18:37.229" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 18:17:53.994" endtime="20201029 18:18:37.238"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:18:37.306" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:18:37.314" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:18:38.514" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:18:37.305" endtime="20201029 18:18:38.515"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:18:38.517" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 18:18:38.516" endtime="20201029 18:18:38.518"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.304" endtime="20201029 18:18:38.518"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:38.520" endtime="20201029 18:18:38.711"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.519" endtime="20201029 18:18:38.711"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:38.723" endtime="20201029 18:18:38.741"></status>
</kw>
<msg timestamp="20201029 18:18:38.742" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:38.722" endtime="20201029 18:18:38.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:38.744" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:38.743" endtime="20201029 18:18:38.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:18:38.748" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:18:38.745" endtime="20201029 18:18:38.748"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:38.719" endtime="20201029 18:18:38.749"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:38.717" endtime="20201029 18:18:38.750"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.716" endtime="20201029 18:18:38.751"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:18:38.756" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:18:38.755" endtime="20201029 18:18:38.757"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.752" endtime="20201029 18:18:38.757"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.715" endtime="20201029 18:18:38.757"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.715" endtime="20201029 18:18:38.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:38.758" endtime="20201029 18:18:38.759"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.713" endtime="20201029 18:18:38.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:38.760" endtime="20201029 18:18:38.762"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.712" endtime="20201029 18:18:38.763"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.302" endtime="20201029 18:18:38.763"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:38.769" endtime="20201029 18:18:38.788"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.767" endtime="20201029 18:18:38.789"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:38.802" endtime="20201029 18:18:38.822"></status>
</kw>
<msg timestamp="20201029 18:18:38.822" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:38.800" endtime="20201029 18:18:38.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:38.825" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:38.823" endtime="20201029 18:18:38.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:18:38.827" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:18:38.826" endtime="20201029 18:18:38.828"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:38.798" endtime="20201029 18:18:38.828"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:38.795" endtime="20201029 18:18:38.829"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.794" endtime="20201029 18:18:38.829"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:18:38.833" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:18:38.832" endtime="20201029 18:18:38.833"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.830" endtime="20201029 18:18:38.834"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.794" endtime="20201029 18:18:38.834"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.793" endtime="20201029 18:18:38.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:38.835" endtime="20201029 18:18:38.836"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.791" endtime="20201029 18:18:38.837"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.790" endtime="20201029 18:18:38.837"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.766" endtime="20201029 18:18:38.837"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:38.848" endtime="20201029 18:18:38.886"></status>
</kw>
<msg timestamp="20201029 18:18:38.886" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:38.846" endtime="20201029 18:18:38.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:38.889" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:38.887" endtime="20201029 18:18:38.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:38.890" endtime="20201029 18:18:38.892"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.843" endtime="20201029 18:18:38.892"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.841" endtime="20201029 18:18:38.893"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:38.899" endtime="20201029 18:18:39.211"></status>
</kw>
<msg timestamp="20201029 18:18:39.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074433764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074771486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:38.897" endtime="20201029 18:18:39.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074433764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074771486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:39.215" endtime="20201029 18:18:39.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:39.224" endtime="20201029 18:18:39.225"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.895" endtime="20201029 18:18:39.226"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.893" endtime="20201029 18:18:39.226"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:39.230" level="INFO">${RESULT} = [{'diff': 0.00033772199999999863}, {'diff': 0.00033923600000000664}, {'diff': 0.0003416529999999973}, {'diff': 0.00034141699999999664}, {'diff': 0.0003423199999999932}, {'diff': 0.0003429589999999899}...</msg>
<status status="PASS" starttime="20201029 18:18:39.227" endtime="20201029 18:18:39.230"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:39.234" level="INFO">${ACCURACY} = {'diff': [0.00033772199999999863, 0.00033923600000000664, 0.0003416529999999973, 0.00034141699999999664, 0.0003423199999999932, 0.0003429589999999899, 0.0003382639999999909, 0.0003396390000000027, 0.0...</msg>
<status status="PASS" starttime="20201029 18:18:39.231" endtime="20201029 18:18:39.234"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.240" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201029 18:18:39.238" endtime="20201029 18:18:39.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.242" level="INFO">VALUE: [0.00033772199999999863, 0.00033923600000000664, 0.0003416529999999973, 0.00034141699999999664, 0.0003423199999999932, 0.0003429589999999899, 0.0003382639999999909, 0.0003396390000000027, 0.00034405599999999537, 0.00033798600000001233, 0.00034032000000000506, 0.00033984700000000423, 0.00033841600000000804, 0.00034293099999999077, 0.0003419030000000045, 0.0003381249999999947, 0.00033893100000000065, 0.0003439300000000062, 0.0003425830000000074, 0.0003382920000000039, 0.0003412780000000004, 0.0003400970000000114, 0.0003442079999999986, 0.00033987500000000337, 0.0003403890000000104, 0.0003435130000000036, 0.0003442780000000034, 0.00034148600000000195, 0.0003412089999999951, 0.00033773600000000514, 0.00033948599999999995, 0.0003434590000000043, 0.0003383890000000084, 0.0003441250000000007, 0.0003383889999999945, 0.0003392499999999993, 0.00033818000000000736, 0.00034236099999999936, 0.00033855599999998987, 0.0003431249999999997, 0.00033929099999999157, 0.00034154200000000023, 0.0003424439999999973, 0.0003399440000000087, 0.0003378890000000079, 0.00033873600000000614, 0.0003402630000000073, 0.0003417780000000009, 0.00034147199999999545, 0.0003410830000000059]</msg>
<status status="PASS" starttime="20201029 18:18:39.241" endtime="20201029 18:18:39.242"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.235" endtime="20201029 18:18:39.243"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:39.246" endtime="20201029 18:18:39.266"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.245" endtime="20201029 18:18:39.266"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.244" endtime="20201029 18:18:39.267"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.839" endtime="20201029 18:18:39.267"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.838" endtime="20201029 18:18:39.267"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:39.276" endtime="20201029 18:18:39.313"></status>
</kw>
<msg timestamp="20201029 18:18:39.313" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:39.274" endtime="20201029 18:18:39.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.316" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:39.314" endtime="20201029 18:18:39.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:39.317" endtime="20201029 18:18:39.318"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.272" endtime="20201029 18:18:39.319"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.270" endtime="20201029 18:18:39.319"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:39.327" endtime="20201029 18:18:39.614"></status>
</kw>
<msg timestamp="20201029 18:18:39.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023640917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023985847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:39.324" endtime="20201029 18:18:39.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023640917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023985847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:39.618" endtime="20201029 18:18:39.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:39.626" endtime="20201029 18:18:39.628"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.321" endtime="20201029 18:18:39.628"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.320" endtime="20201029 18:18:39.629"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:39.633" level="INFO">${RESULT} = [{'diff': 0.00034493000000000024}, {'diff': 0.00033962499999999965}, {'diff': 0.0003385839999999994}, {'diff': 0.0003443330000000022}, {'diff': 0.00033930500000000155}, {'diff': 0.0003430560000000013}...</msg>
<status status="PASS" starttime="20201029 18:18:39.629" endtime="20201029 18:18:39.633"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:39.638" level="INFO">${ACCURACY} = {'diff': [0.00034493000000000024, 0.00033962499999999965, 0.0003385839999999994, 0.0003443330000000022, 0.00033930500000000155, 0.0003430560000000013, 0.00034433299999999875, 0.0003419310000000002, 0....</msg>
<status status="PASS" starttime="20201029 18:18:39.634" endtime="20201029 18:18:39.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.642" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201029 18:18:39.641" endtime="20201029 18:18:39.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.644" level="INFO">VALUE: [0.00034493000000000024, 0.00033962499999999965, 0.0003385839999999994, 0.0003443330000000022, 0.00033930500000000155, 0.0003430560000000013, 0.00034433299999999875, 0.0003419310000000002, 0.00034390299999999957, 0.00034226400000000184, 0.0003382499999999983, 0.0003434449999999978, 0.0003406529999999998, 0.00033952800000000213, 0.0003387919999999975, 0.0003392359999999997, 0.0003431940000000015, 0.0003396110000000001, 0.0003420139999999981, 0.000342986, 0.00034072199999999817, 0.0003392499999999993, 0.00034391599999999967, 0.00033887500000000237, 0.00034434699999999485, 0.0003379030000000005, 0.0003394720000000004, 0.00034419499999999853, 0.0003437089999999976, 0.0003380689999999964, 0.0003441380000000008, 0.00034252800000000166, 0.00033898599999999945, 0.0003409170000000031, 0.00034441699999999964, 0.00033916600000000185, 0.0003435700000000014, 0.0003397919999999985, 0.00033776399999999734, 0.00033809800000000195, 0.00034009699999999754, 0.0003417079999999961, 0.000343777999999996, 0.0003399450000000012, 0.0003401659999999959, 0.0003393199999999971, 0.000343679999999999, 0.00033808299999999597, 0.0003435969999999941, 0.000338194]</msg>
<status status="PASS" starttime="20201029 18:18:39.643" endtime="20201029 18:18:39.645"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.638" endtime="20201029 18:18:39.645"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:39.649" endtime="20201029 18:18:39.668"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.647" endtime="20201029 18:18:39.669"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.646" endtime="20201029 18:18:39.669"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.268" endtime="20201029 18:18:39.670"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.268" endtime="20201029 18:18:39.670"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:39.681" endtime="20201029 18:18:39.721"></status>
</kw>
<msg timestamp="20201029 18:18:39.721" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:39.679" endtime="20201029 18:18:39.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:39.722" endtime="20201029 18:18:39.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:39.725" endtime="20201029 18:18:39.726"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.676" endtime="20201029 18:18:39.727"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.673" endtime="20201029 18:18:39.727"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:39.734" endtime="20201029 18:18:40.021"></status>
</kw>
<msg timestamp="20201029 18:18:40.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028126819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028487111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:39.733" endtime="20201029 18:18:40.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028126819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028487111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:40.025" endtime="20201029 18:18:40.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:40.033" endtime="20201029 18:18:40.035"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.730" endtime="20201029 18:18:40.035"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.728" endtime="20201029 18:18:40.036"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:40.039" level="INFO">${RESULT} = [{'diff': 0.00036029199999999817}, {'diff': 0.00033962499999999965}, {'diff': 0.00034152800000000066}, {'diff': 0.00034104199999999973}, {'diff': 0.0003403190000000021}, {'diff': 0.000339097}, {'diff'...</msg>
<status status="PASS" starttime="20201029 18:18:40.036" endtime="20201029 18:18:40.040"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:40.043" level="INFO">${ACCURACY} = {'diff': [0.00036029199999999817, 0.00033962499999999965, 0.00034152800000000066, 0.00034104199999999973, 0.0003403190000000021, 0.000339097, 0.0003424589999999998, 0.0003392499999999993, 0.0003442910...</msg>
<status status="PASS" starttime="20201029 18:18:40.040" endtime="20201029 18:18:40.044"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.048" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201029 18:18:40.047" endtime="20201029 18:18:40.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.052" level="INFO">VALUE: [0.00036029199999999817, 0.00033962499999999965, 0.00034152800000000066, 0.00034104199999999973, 0.0003403190000000021, 0.000339097, 0.0003424589999999998, 0.0003392499999999993, 0.0003442910000000035, 0.0003377500000000047, 0.00034304200000000173, 0.0003415270000000012, 0.00033865300000000126, 0.00034131899999999965, 0.00034288900000000594, 0.0003391810000000009, 0.00034304200000000173, 0.0003398469999999973, 0.0003435549999999954, 0.0003397360000000002, 0.00033950000000000646, 0.00034002799999999916, 0.0003409720000000019, 0.0003394999999999995, 0.00033890299999999457, 0.00033820799999999956, 0.00034080599999999905, 0.0003383329999999962, 0.00034186099999999886, 0.0003403889999999965, 0.0003419999999999951, 0.0003384999999999985, 0.0003405270000000002, 0.00034391699999999914, 0.0003441669999999994, 0.000342485999999996, 0.0003404720000000014, 0.00033787500000000137, 0.0003392499999999993, 0.00034142999999999674, 0.00034041599999999617, 0.0003402779999999994, 0.0003413339999999987, 0.00033855499999999733, 0.00034102800000000016, 0.00034298600000000345, 0.00034237499999999893, 0.0003437920000000025, 0.0003379579999999993, 0.00034144400000000324]</msg>
<status status="PASS" starttime="20201029 18:18:40.050" endtime="20201029 18:18:40.053"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.044" endtime="20201029 18:18:40.053"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:40.057" endtime="20201029 18:18:40.077"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.056" endtime="20201029 18:18:40.078"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.054" endtime="20201029 18:18:40.079"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.671" endtime="20201029 18:18:40.079"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.670" endtime="20201029 18:18:40.080"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:40.090" endtime="20201029 18:18:40.127"></status>
</kw>
<msg timestamp="20201029 18:18:40.128" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:40.087" endtime="20201029 18:18:40.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:40.129" endtime="20201029 18:18:40.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:40.131" endtime="20201029 18:18:40.133"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.085" endtime="20201029 18:18:40.134"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.083" endtime="20201029 18:18:40.134"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:40.141" endtime="20201029 18:18:40.426"></status>
</kw>
<msg timestamp="20201029 18:18:40.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026503764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026858167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:40.139" endtime="20201029 18:18:40.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026503764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026858167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:40.430" endtime="20201029 18:18:40.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:40.439" endtime="20201029 18:18:40.440"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.136" endtime="20201029 18:18:40.441"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.135" endtime="20201029 18:18:40.441"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:40.445" level="INFO">${RESULT} = [{'diff': 0.00035440299999999966}, {'diff': 0.0003411110000000016}, {'diff': 0.0003430829999999975}, {'diff': 0.000338096999999999}, {'diff': 0.00034273599999999974}, {'diff': 0.00033902800000000163},...</msg>
<status status="PASS" starttime="20201029 18:18:40.442" endtime="20201029 18:18:40.445"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:40.449" level="INFO">${ACCURACY} = {'diff': [0.00035440299999999966, 0.0003411110000000016, 0.0003430829999999975, 0.000338096999999999, 0.00034273599999999974, 0.00033902800000000163, 0.00033851400000000156, 0.0003411660000000004, 0.0...</msg>
<status status="PASS" starttime="20201029 18:18:40.446" endtime="20201029 18:18:40.449"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.454" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201029 18:18:40.453" endtime="20201029 18:18:40.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.456" level="INFO">VALUE: [0.00035440299999999966, 0.0003411110000000016, 0.0003430829999999975, 0.000338096999999999, 0.00034273599999999974, 0.00033902800000000163, 0.00033851400000000156, 0.0003411660000000004, 0.0003379579999999993, 0.00034299999999999956, 0.00034098600000000145, 0.0003437079999999981, 0.0003378749999999979, 0.0003404720000000014, 0.0003437360000000042, 0.000339888999999996, 0.00034347300000000386, 0.0003394439999999943, 0.00033783300000000266, 0.00034019499999999453, 0.00034336100000000036, 0.00033838900000000144, 0.0003399720000000009, 0.0003384449999999997, 0.0003396250000000031, 0.00034136099999999836, 0.00034387500000000043, 0.000344276999999997, 0.0003417500000000018, 0.0003422780000000014, 0.00034258300000000047, 0.0003383610000000023, 0.00034011100000000405, 0.00034447300000000486, 0.0003433189999999947, 0.00034323599999999677, 0.00033902799999999816, 0.0003385269999999982, 0.00034119500000000247, 0.00034352800000000266, 0.0003397779999999989, 0.00034055499999999933, 0.0003391659999999949, 0.00034340299999999907, 0.0003415140000000011, 0.00033902799999999816, 0.00034358299999999453, 0.0003390699999999969, 0.0003404729999999939, 0.0003439309999999987]</msg>
<status status="PASS" starttime="20201029 18:18:40.455" endtime="20201029 18:18:40.457"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.450" endtime="20201029 18:18:40.458"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:40.461" endtime="20201029 18:18:40.481"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.460" endtime="20201029 18:18:40.482"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.459" endtime="20201029 18:18:40.482"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.081" endtime="20201029 18:18:40.482"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.080" endtime="20201029 18:18:40.482"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:40.491" endtime="20201029 18:18:40.530"></status>
</kw>
<msg timestamp="20201029 18:18:40.531" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:40.489" endtime="20201029 18:18:40.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.534" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:40.532" endtime="20201029 18:18:40.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:40.535" endtime="20201029 18:18:40.538"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.487" endtime="20201029 18:18:40.538"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.485" endtime="20201029 18:18:40.539"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:40.548" endtime="20201029 18:18:40.845"></status>
</kw>
<msg timestamp="20201029 18:18:40.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024347292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024684819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:40.545" endtime="20201029 18:18:40.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024347292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024684819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:40.849" endtime="20201029 18:18:40.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:40.857" endtime="20201029 18:18:40.859"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.542" endtime="20201029 18:18:40.859"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.539" endtime="20201029 18:18:40.860"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:40.864" level="INFO">${RESULT} = [{'diff': 0.00033752700000000066}, {'diff': 0.0003428470000000003}, {'diff': 0.00034148700000000143}, {'diff': 0.00034012500000000015}, {'diff': 0.00034154100000000076}, {'diff': 0.0003383050000000005...</msg>
<status status="PASS" starttime="20201029 18:18:40.861" endtime="20201029 18:18:40.864"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:40.869" level="INFO">${ACCURACY} = {'diff': [0.00033752700000000066, 0.0003428470000000003, 0.00034148700000000143, 0.00034012500000000015, 0.00034154100000000076, 0.00033830500000000055, 0.000340291999999999, 0.0003433470000000008, 0....</msg>
<status status="PASS" starttime="20201029 18:18:40.865" endtime="20201029 18:18:40.869"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.874" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201029 18:18:40.872" endtime="20201029 18:18:40.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.876" level="INFO">VALUE: [0.00033752700000000066, 0.0003428470000000003, 0.00034148700000000143, 0.00034012500000000015, 0.00034154100000000076, 0.00033830500000000055, 0.000340291999999999, 0.0003433470000000008, 0.0003444439999999993, 0.000339291999999998, 0.0003437079999999981, 0.0003393200000000006, 0.0003399169999999986, 0.0003395560000000013, 0.00034205599999999683, 0.0003422780000000014, 0.00034234799999999926, 0.00034058299999999847, 0.00034097199999999495, 0.00033884700000000323, 0.000343292000000002, 0.0003399720000000009, 0.00034291599999999867, 0.0003419720000000029, 0.00034272200000000363, 0.00034387500000000043, 0.0003392779999999984, 0.00034120800000000256, 0.0003413329999999992, 0.00033922200000000013, 0.00034291699999999814, 0.0003388049999999976, 0.00034087499999999743, 0.0003428470000000003, 0.0003401810000000019, 0.00033887500000000237, 0.00033802799999999716, 0.0003423469999999998, 0.00034038900000000344, 0.000344000000000004, 0.0003433889999999995, 0.0003431110000000001, 0.0003416940000000035, 0.0003388469999999963, 0.00034222200000000313, 0.00033884700000000323, 0.00034022200000000113, 0.0003440140000000036, 0.0003410970000000055, 0.00034076400000000034]</msg>
<status status="PASS" starttime="20201029 18:18:40.875" endtime="20201029 18:18:40.876"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.870" endtime="20201029 18:18:40.877"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:40.881" endtime="20201029 18:18:40.900"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.879" endtime="20201029 18:18:40.901"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.878" endtime="20201029 18:18:40.901"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.483" endtime="20201029 18:18:40.901"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.483" endtime="20201029 18:18:40.901"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:40.911" endtime="20201029 18:18:40.945"></status>
</kw>
<msg timestamp="20201029 18:18:40.946" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:40.909" endtime="20201029 18:18:40.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.948" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:40.947" endtime="20201029 18:18:40.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:40.950" endtime="20201029 18:18:40.951"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.907" endtime="20201029 18:18:40.952"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.904" endtime="20201029 18:18:40.952"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:40.959" endtime="20201029 18:18:41.248"></status>
</kw>
<msg timestamp="20201029 18:18:41.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022246167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022597806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:40.957" endtime="20201029 18:18:41.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:41.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022246167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022597806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:41.252" endtime="20201029 18:18:41.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:41.260" endtime="20201029 18:18:41.262"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.955" endtime="20201029 18:18:41.263"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.953" endtime="20201029 18:18:41.263"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:41.267" level="INFO">${RESULT} = [{'diff': 0.0003516390000000008}, {'diff': 0.00034341599999999917}, {'diff': 0.00034270900000000007}, {'diff': 0.00034062500000000065}, {'diff': 0.00034372200000000117}, {'diff': 0.0003405699999999984...</msg>
<status status="PASS" starttime="20201029 18:18:41.264" endtime="20201029 18:18:41.267"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:41.271" level="INFO">${ACCURACY} = {'diff': [0.0003516390000000008, 0.00034341599999999917, 0.00034270900000000007, 0.00034062500000000065, 0.00034372200000000117, 0.0003405699999999984, 0.0003434170000000021, 0.00034404200000000273, 0...</msg>
<status status="PASS" starttime="20201029 18:18:41.268" endtime="20201029 18:18:41.271"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:41.276" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201029 18:18:41.275" endtime="20201029 18:18:41.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:41.278" level="INFO">VALUE: [0.0003516390000000008, 0.00034341599999999917, 0.00034270900000000007, 0.00034062500000000065, 0.00034372200000000117, 0.0003405699999999984, 0.0003434170000000021, 0.00034404200000000273, 0.000343582999999998, 0.0003412079999999991, 0.00034023599999999724, 0.00034406899999999893, 0.00034145799999999935, 0.00033988899999999947, 0.0003398190000000016, 0.00034052799999999966, 0.000341694, 0.0003391810000000009, 0.0003386810000000004, 0.00034252800000000166, 0.0003425700000000004, 0.00033884699999999976, 0.0003384170000000006, 0.00033841599999999764, 0.0003379450000000027, 0.00034158399999999894, 0.00034373599999999727, 0.00034126300000000137, 0.0003393610000000033, 0.00034436100000000136, 0.00033952799999999866, 0.0003415559999999998, 0.0003393889999999955, 0.0003382499999999983, 0.0003427089999999966, 0.00034297199999999695, 0.00034173599999999527, 0.00033840200000000153, 0.00034080599999999905, 0.00034266700000000483, 0.00033880599999999705, 0.0003442079999999986, 0.00034237500000000587, 0.0003411799999999965, 0.0003442079999999986, 0.0003437219999999977, 0.0003410559999999993, 0.0003404170000000026, 0.00034386100000000086, 0.00034298600000000345]</msg>
<status status="PASS" starttime="20201029 18:18:41.277" endtime="20201029 18:18:41.279"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.272" endtime="20201029 18:18:41.279"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:41.283" endtime="20201029 18:18:41.302"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.281" endtime="20201029 18:18:41.303"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.280" endtime="20201029 18:18:41.303"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.902" endtime="20201029 18:18:41.304"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.902" endtime="20201029 18:18:41.304"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:41.313" endtime="20201029 18:18:41.348"></status>
</kw>
<msg timestamp="20201029 18:18:41.349" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:41.312" endtime="20201029 18:18:41.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:41.351" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:41.350" endtime="20201029 18:18:41.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:41.352" endtime="20201029 18:18:41.354"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.309" endtime="20201029 18:18:41.355"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.307" endtime="20201029 18:18:41.355"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:41.362" endtime="20201029 18:18:41.649"></status>
</kw>
<msg timestamp="20201029 18:18:41.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021799403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022152403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:41.360" endtime="20201029 18:18:41.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:41.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021799403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022152403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:41.653" endtime="20201029 18:18:41.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:41.661" endtime="20201029 18:18:41.663"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.358" endtime="20201029 18:18:41.664"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.356" endtime="20201029 18:18:41.664"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:41.668" level="INFO">${RESULT} = [{'diff': 0.0003530000000000026}, {'diff': 0.0003377779999999969}, {'diff': 0.0003414719999999989}, {'diff': 0.00034245800000000035}, {'diff': 0.00033970800000000106}, {'diff': 0.0003440829999999985},...</msg>
<status status="PASS" starttime="20201029 18:18:41.665" endtime="20201029 18:18:41.668"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:41.672" level="INFO">${ACCURACY} = {'diff': [0.0003530000000000026, 0.0003377779999999969, 0.0003414719999999989, 0.00034245800000000035, 0.00033970800000000106, 0.0003440829999999985, 0.0003394309999999977, 0.00034058399999999794, 0.0...</msg>
<status status="PASS" starttime="20201029 18:18:41.669" endtime="20201029 18:18:41.672"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:41.677" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201029 18:18:41.676" endtime="20201029 18:18:41.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:41.679" level="INFO">VALUE: [0.0003530000000000026, 0.0003377779999999969, 0.0003414719999999989, 0.00034245800000000035, 0.00033970800000000106, 0.0003440829999999985, 0.0003394309999999977, 0.00034058399999999794, 0.0003397779999999989, 0.0003406110000000011, 0.0003422780000000014, 0.00034413900000000025, 0.000342888999999999, 0.00034186099999999886, 0.00034108299999999897, 0.0003404439999999988, 0.0003437639999999999, 0.00033943100000000115, 0.0003394999999999995, 0.00034273599999999974, 0.00033788900000000094, 0.00033837500000000187, 0.0003403199999999981, 0.0003388330000000002, 0.0003406390000000002, 0.00034001299999999665, 0.0003383060000000035, 0.0003411249999999977, 0.00034068099999999546, 0.000343403000000006, 0.00034137499999999793, 0.0003407919999999995, 0.0003394450000000007, 0.00034405599999999537, 0.0003441799999999995, 0.00034072299999999417, 0.00034197199999999595, 0.0003417079999999961, 0.00034159699999999904, 0.00033955499999999833, 0.00034098600000000145, 0.0003398199999999976, 0.0003410830000000059, 0.00034098600000000145, 0.0003404590000000013, 0.0003441250000000007, 0.0003410559999999993, 0.00033798599999999845, 0.00034081899999999915, 0.0003391250000000026]</msg>
<status status="PASS" starttime="20201029 18:18:41.678" endtime="20201029 18:18:41.680"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.673" endtime="20201029 18:18:41.681"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:41.685" endtime="20201029 18:18:41.705"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.684" endtime="20201029 18:18:41.705"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.682" endtime="20201029 18:18:41.706"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.305" endtime="20201029 18:18:41.706"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.305" endtime="20201029 18:18:41.706"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:41.715" endtime="20201029 18:18:41.752"></status>
</kw>
<msg timestamp="20201029 18:18:41.753" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:41.713" endtime="20201029 18:18:41.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:41.758" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:41.755" endtime="20201029 18:18:41.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:41.760" endtime="20201029 18:18:41.762"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.711" endtime="20201029 18:18:41.763"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.709" endtime="20201029 18:18:41.764"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:41.772" endtime="20201029 18:18:42.058"></status>
</kw>
<msg timestamp="20201029 18:18:42.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0214055, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021748583, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:18:41.770" endtime="20201029 18:18:42.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0214055, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021748583, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:18:42.063" endtime="20201029 18:18:42.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.071" endtime="20201029 18:18:42.072"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.767" endtime="20201029 18:18:42.073"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.765" endtime="20201029 18:18:42.073"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:42.077" level="INFO">${RESULT} = [{'diff': 0.0003430829999999975}, {'diff': 0.0003418469999999993}, {'diff': 0.0003410980000000015}, {'diff': 0.00033765300000000026}, {'diff': 0.00034190300000000104}, {'diff': 0.0003417639999999979},...</msg>
<status status="PASS" starttime="20201029 18:18:42.074" endtime="20201029 18:18:42.078"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:42.083" level="INFO">${ACCURACY} = {'diff': [0.0003430829999999975, 0.0003418469999999993, 0.0003410980000000015, 0.00033765300000000026, 0.00034190300000000104, 0.0003417639999999979, 0.00034400000000000056, 0.00034022200000000113, 0....</msg>
<status status="PASS" starttime="20201029 18:18:42.078" endtime="20201029 18:18:42.083"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.087" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201029 18:18:42.086" endtime="20201029 18:18:42.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.090" level="INFO">VALUE: [0.0003430829999999975, 0.0003418469999999993, 0.0003410980000000015, 0.00033765300000000026, 0.00034190300000000104, 0.0003417639999999979, 0.00034400000000000056, 0.00034022200000000113, 0.00033795900000000226, 0.0003398339999999972, 0.00034118099999999943, 0.00033957000000000084, 0.00034231900000000065, 0.0003379030000000005, 0.0003430139999999991, 0.00034383299999999825, 0.00034342999999999874, 0.0003431659999999989, 0.0003426109999999996, 0.00034240300000000154, 0.00034149999999999806, 0.0003383190000000001, 0.0003441110000000011, 0.00034173599999999874, 0.0003384579999999998, 0.0003397360000000002, 0.0003394450000000007, 0.00034209699999999954, 0.00034397199999999795, 0.0003380970000000025, 0.0003382779999999974, 0.0003405140000000001, 0.0003425130000000026, 0.0003434019999999996, 0.0003432780000000024, 0.0003405140000000001, 0.0003383610000000023, 0.0003433889999999995, 0.0003392369999999992, 0.0003382359999999987, 0.0003388879999999955, 0.00034041599999999617, 0.0003396249999999962, 0.0003428330000000007, 0.0003409309999999957, 0.00033802799999999716, 0.0003415689999999999, 0.00034, 0.00034395899999999785, 0.00033815300000000076]</msg>
<status status="PASS" starttime="20201029 18:18:42.088" endtime="20201029 18:18:42.090"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.083" endtime="20201029 18:18:42.091"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:42.095" endtime="20201029 18:18:42.114"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.093" endtime="20201029 18:18:42.115"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.092" endtime="20201029 18:18:42.115"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.707" endtime="20201029 18:18:42.116"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.706" endtime="20201029 18:18:42.116"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.125" endtime="20201029 18:18:42.161"></status>
</kw>
<msg timestamp="20201029 18:18:42.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:42.123" endtime="20201029 18:18:42.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.164" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:42.163" endtime="20201029 18:18:42.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.166" endtime="20201029 18:18:42.167"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.120" endtime="20201029 18:18:42.168"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.118" endtime="20201029 18:18:42.168"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.175" endtime="20201029 18:18:42.462"></status>
</kw>
<msg timestamp="20201029 18:18:42.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023801347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02413275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:42.173" endtime="20201029 18:18:42.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023801347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02413275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:42.467" endtime="20201029 18:18:42.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.475" endtime="20201029 18:18:42.477"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.171" endtime="20201029 18:18:42.477"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.169" endtime="20201029 18:18:42.478"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:42.482" level="INFO">${RESULT} = [{'diff': 0.00033140300000000095}, {'diff': 0.0003443059999999991}, {'diff': 0.00033772199999999863}, {'diff': 0.00034268100000000093}, {'diff': 0.0003394999999999995}, {'diff': 0.0003405970000000015}...</msg>
<status status="PASS" starttime="20201029 18:18:42.479" endtime="20201029 18:18:42.482"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:42.486" level="INFO">${ACCURACY} = {'diff': [0.00033140300000000095, 0.0003443059999999991, 0.00033772199999999863, 0.00034268100000000093, 0.0003394999999999995, 0.0003405970000000015, 0.0003415140000000011, 0.0003387640000000018, 0.0...</msg>
<status status="PASS" starttime="20201029 18:18:42.483" endtime="20201029 18:18:42.486"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.491" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201029 18:18:42.489" endtime="20201029 18:18:42.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.493" level="INFO">VALUE: [0.00033140300000000095, 0.0003443059999999991, 0.00033772199999999863, 0.00034268100000000093, 0.0003394999999999995, 0.0003405970000000015, 0.0003415140000000011, 0.0003387640000000018, 0.0003380970000000025, 0.0003389439999999973, 0.0003434720000000009, 0.00034287499999999943, 0.0003408620000000008, 0.0003431669999999984, 0.0003395269999999992, 0.0003424170000000011, 0.000339306000000001, 0.00033926399999999884, 0.0003441669999999994, 0.00033998600000000045, 0.0003398329999999977, 0.00034337499999999993, 0.0003433200000000011, 0.0003433330000000012, 0.00034191599999999767, 0.0003416669999999969, 0.0003426379999999993, 0.00034429099999999657, 0.00033905499999999783, 0.0003436250000000002, 0.00033836099999999536, 0.00033887499999999543, 0.0003377229999999981, 0.0003387499999999988, 0.0003381809999999999, 0.0003434309999999982, 0.0003437219999999977, 0.00034048600000000095, 0.00034373699999999674, 0.00034381900000000215, 0.00034294400000000475, 0.0003410559999999993, 0.00033855600000000374, 0.00034187499999999843, 0.0003434590000000043, 0.0003412360000000017, 0.0003422780000000014, 0.00034004199999999873, 0.000340888999999997, 0.0003424019999999986]</msg>
<status status="PASS" starttime="20201029 18:18:42.492" endtime="20201029 18:18:42.494"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.487" endtime="20201029 18:18:42.494"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:42.498" endtime="20201029 18:18:42.518"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.497" endtime="20201029 18:18:42.519"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.495" endtime="20201029 18:18:42.520"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.117" endtime="20201029 18:18:42.520"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.116" endtime="20201029 18:18:42.520"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.532" endtime="20201029 18:18:42.573"></status>
</kw>
<msg timestamp="20201029 18:18:42.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:42.529" endtime="20201029 18:18:42.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.576" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:42.575" endtime="20201029 18:18:42.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.578" endtime="20201029 18:18:42.579"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.526" endtime="20201029 18:18:42.580"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.523" endtime="20201029 18:18:42.580"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.587" endtime="20201029 18:18:42.873"></status>
</kw>
<msg timestamp="20201029 18:18:42.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032559125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032916014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:42.585" endtime="20201029 18:18:42.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032559125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032916014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:42.877" endtime="20201029 18:18:42.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.885" endtime="20201029 18:18:42.887"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.583" endtime="20201029 18:18:42.888"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.581" endtime="20201029 18:18:42.888"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:42.892" level="INFO">${RESULT} = [{'diff': 0.0003568889999999991}, {'diff': 0.0003434309999999982}, {'diff': 0.0003418469999999993}, {'diff': 0.00034223599999999577}, {'diff': 0.0003414579999999959}, {'diff': 0.00034368099999999846},...</msg>
<status status="PASS" starttime="20201029 18:18:42.889" endtime="20201029 18:18:42.892"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:42.896" level="INFO">${ACCURACY} = {'diff': [0.0003568889999999991, 0.0003434309999999982, 0.0003418469999999993, 0.00034223599999999577, 0.0003414579999999959, 0.00034368099999999846, 0.00033976399999999934, 0.00034237499999999893, 0....</msg>
<status status="PASS" starttime="20201029 18:18:42.893" endtime="20201029 18:18:42.897"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.901" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201029 18:18:42.900" endtime="20201029 18:18:42.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.903" level="INFO">VALUE: [0.0003568889999999991, 0.0003434309999999982, 0.0003418469999999993, 0.00034223599999999577, 0.0003414579999999959, 0.00034368099999999846, 0.00033976399999999934, 0.00034237499999999893, 0.00034102800000000016, 0.00034086099999999786, 0.0003378190000000031, 0.00034386100000000086, 0.00034059800000000445, 0.00034372200000000463, 0.00034116600000000386, 0.0003445700000000024, 0.0003424579999999969, 0.00034288900000000594, 0.0003417230000000021, 0.0003412360000000017, 0.0003395139999999991, 0.0003384999999999985, 0.00034392999999999924, 0.0003390830000000039, 0.00034040299999999607, 0.00033930599999999755, 0.00034342999999999874, 0.00034298600000000345, 0.0003431669999999984, 0.00034408300000000197, 0.0003416249999999982, 0.0003382779999999974, 0.00034265199999999885, 0.0003431119999999996, 0.00033983300000000466, 0.00033919500000000047, 0.00034263899999999875, 0.00034197199999999595, 0.0003423330000000002, 0.000337999999999998, 0.0003389030000000015, 0.0003398610000000038, 0.0003443200000000021, 0.00034430600000000255, 0.00033981899999999815, 0.0003385410000000047, 0.0003388190000000041, 0.00034004199999999873, 0.0003429170000000051, 0.00034065300000000326]</msg>
<status status="PASS" starttime="20201029 18:18:42.902" endtime="20201029 18:18:42.905"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.897" endtime="20201029 18:18:42.906"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:42.909" endtime="20201029 18:18:42.929"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.908" endtime="20201029 18:18:42.930"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.907" endtime="20201029 18:18:42.930"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.521" endtime="20201029 18:18:42.930"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.521" endtime="20201029 18:18:42.930"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.939" endtime="20201029 18:18:42.978"></status>
</kw>
<msg timestamp="20201029 18:18:42.978" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:42.938" endtime="20201029 18:18:42.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.981" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:42.980" endtime="20201029 18:18:42.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.982" endtime="20201029 18:18:42.984"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.935" endtime="20201029 18:18:42.984"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.933" endtime="20201029 18:18:42.985"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.991" endtime="20201029 18:18:43.278"></status>
</kw>
<msg timestamp="20201029 18:18:43.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023248306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023603222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:42.990" endtime="20201029 18:18:43.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:43.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023248306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023603222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:43.282" endtime="20201029 18:18:43.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:43.291" endtime="20201029 18:18:43.292"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.987" endtime="20201029 18:18:43.293"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.985" endtime="20201029 18:18:43.293"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:43.297" level="INFO">${RESULT} = [{'diff': 0.00035491600000000026}, {'diff': 0.0003386940000000005}, {'diff': 0.0003402500000000003}, {'diff': 0.0003431530000000023}, {'diff': 0.00034323600000000024}, {'diff': 0.00034204200000000073}...</msg>
<status status="PASS" starttime="20201029 18:18:43.294" endtime="20201029 18:18:43.298"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:43.302" level="INFO">${ACCURACY} = {'diff': [0.00035491600000000026, 0.0003386940000000005, 0.0003402500000000003, 0.0003431530000000023, 0.00034323600000000024, 0.00034204200000000073, 0.0003421669999999974, 0.00033862499999999865, 0....</msg>
<status status="PASS" starttime="20201029 18:18:43.298" endtime="20201029 18:18:43.303"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:43.307" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201029 18:18:43.306" endtime="20201029 18:18:43.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:43.309" level="INFO">VALUE: [0.00035491600000000026, 0.0003386940000000005, 0.0003402500000000003, 0.0003431530000000023, 0.00034323600000000024, 0.00034204200000000073, 0.0003421669999999974, 0.00033862499999999865, 0.00033855499999999733, 0.00034354199999999877, 0.0003422499999999988, 0.0003408329999999987, 0.00034142999999999674, 0.00034222299999999914, 0.0003439590000000013, 0.0003436529999999993, 0.0003424719999999999, 0.0003396110000000001, 0.0003390979999999995, 0.000339097, 0.00034305500000000183, 0.0003423889999999985, 0.0003432500000000033, 0.0003422500000000023, 0.0003403049999999991, 0.0003418480000000057, 0.00033865300000000126, 0.0003436529999999993, 0.0003377920000000034, 0.0003387359999999992, 0.000341888999999998, 0.0003419590000000028, 0.00033922200000000013, 0.00034419399999999906, 0.00034223699999999524, 0.00034174999999999484, 0.00034436100000000136, 0.0003392499999999993, 0.0003397919999999985, 0.00034356899999999496, 0.00033944400000000124, 0.0003389719999999999, 0.0003402230000000006, 0.0003439999999999971, 0.00034016700000000233, 0.00033987499999999643, 0.00033820799999999956, 0.0003414999999999946, 0.00034187500000000537, 0.0003412360000000017]</msg>
<status status="PASS" starttime="20201029 18:18:43.308" endtime="20201029 18:18:43.310"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.303" endtime="20201029 18:18:43.311"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:43.315" endtime="20201029 18:18:43.334"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.313" endtime="20201029 18:18:43.335"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.312" endtime="20201029 18:18:43.335"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.931" endtime="20201029 18:18:43.335"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.931" endtime="20201029 18:18:43.335"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:43.344" endtime="20201029 18:18:43.383"></status>
</kw>
<msg timestamp="20201029 18:18:43.383" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:43.343" endtime="20201029 18:18:43.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:43.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:43.384" endtime="20201029 18:18:43.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:43.387" endtime="20201029 18:18:43.388"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.340" endtime="20201029 18:18:43.389"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.338" endtime="20201029 18:18:43.389"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:43.396" endtime="20201029 18:18:43.684"></status>
</kw>
<msg timestamp="20201029 18:18:43.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024981583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025329597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:43.395" endtime="20201029 18:18:43.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:43.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024981583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025329597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:43.689" endtime="20201029 18:18:43.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:43.697" endtime="20201029 18:18:43.699"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.392" endtime="20201029 18:18:43.699"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.390" endtime="20201029 18:18:43.700"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:43.704" level="INFO">${RESULT} = [{'diff': 0.0003480139999999972}, {'diff': 0.0003399450000000012}, {'diff': 0.0003397779999999989}, {'diff': 0.00033936099999999983}, {'diff': 0.00033954100000000223}, {'diff': 0.0003424170000000011},...</msg>
<status status="PASS" starttime="20201029 18:18:43.700" endtime="20201029 18:18:43.704"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:43.708" level="INFO">${ACCURACY} = {'diff': [0.0003480139999999972, 0.0003399450000000012, 0.0003397779999999989, 0.00033936099999999983, 0.00033954100000000223, 0.0003424170000000011, 0.0003377780000000004, 0.00034126400000000084, 0.0...</msg>
<status status="PASS" starttime="20201029 18:18:43.705" endtime="20201029 18:18:43.708"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:43.713" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201029 18:18:43.711" endtime="20201029 18:18:43.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:43.715" level="INFO">VALUE: [0.0003480139999999972, 0.0003399450000000012, 0.0003397779999999989, 0.00033936099999999983, 0.00033954100000000223, 0.0003424170000000011, 0.0003377780000000004, 0.00034126400000000084, 0.0003424440000000008, 0.0003392499999999993, 0.0003411529999999968, 0.00034076400000000034, 0.00034254199999999776, 0.00033801400000000106, 0.00033834799999999873, 0.0003390269999999987, 0.0003423469999999998, 0.0003413750000000014, 0.00034369399999999856, 0.0003435700000000014, 0.000341791000000001, 0.00033826399999999784, 0.00034337499999999993, 0.0003400559999999983, 0.0003425140000000021, 0.00034263899999999875, 0.0003405140000000001, 0.0003400139999999996, 0.0003429019999999991, 0.0003412500000000013, 0.00034119500000000247, 0.0003418339999999992, 0.0003426249999999992, 0.0003435279999999957, 0.0003423200000000001, 0.0003396940000000015, 0.00034, 0.0003409579999999954, 0.00034202800000000116, 0.0003385139999999981, 0.00034130599999999955, 0.00034187499999999843, 0.0003411669999999964, 0.00034259700000000004, 0.00033793099999999965, 0.0003379170000000001, 0.0003423330000000002, 0.00033998600000000045, 0.0003443200000000021, 0.0003435000000000035]</msg>
<status status="PASS" starttime="20201029 18:18:43.714" endtime="20201029 18:18:43.716"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.709" endtime="20201029 18:18:43.716"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:43.720" endtime="20201029 18:18:43.740"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.719" endtime="20201029 18:18:43.740"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.717" endtime="20201029 18:18:43.741"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.336" endtime="20201029 18:18:43.741"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.336" endtime="20201029 18:18:43.741"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:43.751" endtime="20201029 18:18:43.789"></status>
</kw>
<msg timestamp="20201029 18:18:43.790" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:43.749" endtime="20201029 18:18:43.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:43.792" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:43.791" endtime="20201029 18:18:43.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:43.794" endtime="20201029 18:18:43.795"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.746" endtime="20201029 18:18:43.796"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.744" endtime="20201029 18:18:43.796"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:43.803" endtime="20201029 18:18:44.089"></status>
</kw>
<msg timestamp="20201029 18:18:44.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026363639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026701139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:43.801" endtime="20201029 18:18:44.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026363639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026701139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:44.094" endtime="20201029 18:18:44.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:44.102" endtime="20201029 18:18:44.104"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.799" endtime="20201029 18:18:44.104"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.797" endtime="20201029 18:18:44.105"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:44.109" level="INFO">${RESULT} = [{'diff': 0.0003374999999999975}, {'diff': 0.0003436529999999993}, {'diff': 0.0003409589999999983}, {'diff': 0.0003435139999999996}, {'diff': 0.00034090300000000004}, {'diff': 0.0003383190000000001}, ...</msg>
<status status="PASS" starttime="20201029 18:18:44.105" endtime="20201029 18:18:44.109"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:44.113" level="INFO">${ACCURACY} = {'diff': [0.0003374999999999975, 0.0003436529999999993, 0.0003409589999999983, 0.0003435139999999996, 0.00034090300000000004, 0.0003383190000000001, 0.00034209699999999954, 0.0003437219999999977, 0.00...</msg>
<status status="PASS" starttime="20201029 18:18:44.110" endtime="20201029 18:18:44.113"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.117" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201029 18:18:44.116" endtime="20201029 18:18:44.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.120" level="INFO">VALUE: [0.0003374999999999975, 0.0003436529999999993, 0.0003409589999999983, 0.0003435139999999996, 0.00034090300000000004, 0.0003383190000000001, 0.00034209699999999954, 0.0003437219999999977, 0.00034340299999999907, 0.00034180600000000005, 0.0003406390000000002, 0.0003378749999999979, 0.00034086099999999786, 0.00034376400000000334, 0.0003399160000000026, 0.00033930599999999755, 0.0003412219999999952, 0.00033832000000000306, 0.0003397779999999989, 0.0003404590000000013, 0.00034240299999999807, 0.00034108299999999897, 0.0003423050000000011, 0.0003406940000000025, 0.0003413329999999992, 0.0003442360000000047, 0.0003405000000000005, 0.0003434160000000061, 0.00034318099999999796, 0.00034137500000000487, 0.0003432639999999959, 0.0003402500000000003, 0.0003414720000000024, 0.00034273599999999627, 0.0003382770000000049, 0.0003392499999999993, 0.00034131899999999965, 0.00033848599999999895, 0.0003407360000000012, 0.0003394999999999995, 0.0003384300000000007, 0.0003419579999999964, 0.00033842999999999374, 0.0003433200000000011, 0.00033977800000000585, 0.0003392359999999997, 0.00034347199999999745, 0.00033970800000000106, 0.00033837499999999493, 0.00034181900000000015]</msg>
<status status="PASS" starttime="20201029 18:18:44.118" endtime="20201029 18:18:44.121"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.114" endtime="20201029 18:18:44.122"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:44.126" endtime="20201029 18:18:44.145"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.124" endtime="20201029 18:18:44.146"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.123" endtime="20201029 18:18:44.146"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.742" endtime="20201029 18:18:44.146"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.741" endtime="20201029 18:18:44.147"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:44.156" endtime="20201029 18:18:44.191"></status>
</kw>
<msg timestamp="20201029 18:18:44.192" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:44.154" endtime="20201029 18:18:44.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:44.193" endtime="20201029 18:18:44.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:44.195" endtime="20201029 18:18:44.197"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.151" endtime="20201029 18:18:44.197"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.149" endtime="20201029 18:18:44.198"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:44.205" endtime="20201029 18:18:44.491"></status>
</kw>
<msg timestamp="20201029 18:18:44.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022637931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022988097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:44.203" endtime="20201029 18:18:44.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022637931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022988097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:44.495" endtime="20201029 18:18:44.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:44.503" endtime="20201029 18:18:44.505"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.200" endtime="20201029 18:18:44.505"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.199" endtime="20201029 18:18:44.506"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:44.510" level="INFO">${RESULT} = [{'diff': 0.000350165999999999}, {'diff': 0.0003394299999999982}, {'diff': 0.0003417499999999983}, {'diff': 0.0003404580000000018}, {'diff': 0.0003427639999999989}, {'diff': 0.00033802800000000063}, {...</msg>
<status status="PASS" starttime="20201029 18:18:44.507" endtime="20201029 18:18:44.510"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:44.515" level="INFO">${ACCURACY} = {'diff': [0.000350165999999999, 0.0003394299999999982, 0.0003417499999999983, 0.0003404580000000018, 0.0003427639999999989, 0.00033802800000000063, 0.00034002800000000263, 0.0003395699999999974, 0.000...</msg>
<status status="PASS" starttime="20201029 18:18:44.511" endtime="20201029 18:18:44.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.519" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201029 18:18:44.518" endtime="20201029 18:18:44.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.522" level="INFO">VALUE: [0.000350165999999999, 0.0003394299999999982, 0.0003417499999999983, 0.0003404580000000018, 0.0003427639999999989, 0.00033802800000000063, 0.00034002800000000263, 0.0003395699999999974, 0.00034336100000000036, 0.0003426390000000022, 0.000339194000000001, 0.00034254199999999776, 0.0003442089999999981, 0.0003380559999999998, 0.0003430409999999988, 0.0003377640000000008, 0.0003377770000000009, 0.0003398749999999999, 0.0003414170000000001, 0.0003378610000000018, 0.0003385550000000008, 0.00034198700000000193, 0.00034336100000000036, 0.000342485999999996, 0.0003443470000000018, 0.00034190299999999757, 0.0003442500000000043, 0.0003401810000000019, 0.0003404300000000027, 0.00034004199999999873, 0.00033832000000000306, 0.0003410270000000007, 0.000342292000000001, 0.0003404439999999953, 0.00033843100000000015, 0.0003419449999999963, 0.0003395139999999991, 0.00034032000000000506, 0.0003391390000000022, 0.0003415979999999985, 0.00034013899999999625, 0.00033887499999999543, 0.0003378469999999953, 0.0003416669999999969, 0.0003418469999999993, 0.0003379160000000006, 0.0003390559999999973, 0.00034273599999999627, 0.00034113899999999725, 0.0003386810000000004]</msg>
<status status="PASS" starttime="20201029 18:18:44.521" endtime="20201029 18:18:44.523"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.516" endtime="20201029 18:18:44.523"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:44.527" endtime="20201029 18:18:44.547"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.526" endtime="20201029 18:18:44.547"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.524" endtime="20201029 18:18:44.548"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.148" endtime="20201029 18:18:44.548"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.147" endtime="20201029 18:18:44.548"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:44.557" endtime="20201029 18:18:44.594"></status>
</kw>
<msg timestamp="20201029 18:18:44.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:44.555" endtime="20201029 18:18:44.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.597" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:44.596" endtime="20201029 18:18:44.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:44.598" endtime="20201029 18:18:44.600"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.553" endtime="20201029 18:18:44.600"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.550" endtime="20201029 18:18:44.601"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:44.608" endtime="20201029 18:18:44.896"></status>
</kw>
<msg timestamp="20201029 18:18:44.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023233292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023570222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:44.606" endtime="20201029 18:18:44.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023233292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023570222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:44.900" endtime="20201029 18:18:44.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:44.908" endtime="20201029 18:18:44.910"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.603" endtime="20201029 18:18:44.911"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.601" endtime="20201029 18:18:44.911"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:44.915" level="INFO">${RESULT} = [{'diff': 0.0003369299999999992}, {'diff': 0.0003426109999999996}, {'diff': 0.0003402500000000003}, {'diff': 0.0003417360000000022}, {'diff': 0.0003436379999999968}, {'diff': 0.0003433059999999981}, {...</msg>
<status status="PASS" starttime="20201029 18:18:44.912" endtime="20201029 18:18:44.916"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:44.919" level="INFO">${ACCURACY} = {'diff': [0.0003369299999999992, 0.0003426109999999996, 0.0003402500000000003, 0.0003417360000000022, 0.0003436379999999968, 0.0003433059999999981, 0.0003419719999999994, 0.0003408329999999987, 0.0003...</msg>
<status status="PASS" starttime="20201029 18:18:44.916" endtime="20201029 18:18:44.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.924" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201029 18:18:44.923" endtime="20201029 18:18:44.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.927" level="INFO">VALUE: [0.0003369299999999992, 0.0003426109999999996, 0.0003402500000000003, 0.0003417360000000022, 0.0003436379999999968, 0.0003433059999999981, 0.0003419719999999994, 0.0003408329999999987, 0.0003378189999999996, 0.0003430409999999988, 0.0003379300000000002, 0.00034043100000000215, 0.00034040299999999954, 0.0003407779999999999, 0.00034038899999999997, 0.0003414729999999984, 0.0003408750000000009, 0.0003386529999999978, 0.00033970800000000106, 0.00034038899999999997, 0.0003382780000000009, 0.0003415279999999972, 0.00034374999999999684, 0.00033784700000000223, 0.00034370800000000507, 0.0003385830000000034, 0.0003411109999999981, 0.0003438200000000016, 0.00034359700000000104, 0.000338999999999999, 0.0003422079999999966, 0.00033987499999999643, 0.0003384999999999985, 0.00033804200000000367, 0.00033859699999999604, 0.00034413900000000025, 0.0003421529999999978, 0.00034020900000000104, 0.0003419859999999955, 0.00034055499999999933, 0.00033898700000000587, 0.0003384579999999998, 0.00033805600000000324, 0.00034266700000000483, 0.00034290299999999857, 0.0003402500000000003, 0.00034, 0.00034411099999999417, 0.0003408199999999986, 0.0003392369999999992]</msg>
<status status="PASS" starttime="20201029 18:18:44.925" endtime="20201029 18:18:44.927"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.920" endtime="20201029 18:18:44.928"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:44.932" endtime="20201029 18:18:44.951"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.930" endtime="20201029 18:18:44.952"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.929" endtime="20201029 18:18:44.952"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.549" endtime="20201029 18:18:44.952"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.548" endtime="20201029 18:18:44.953"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:44.962" endtime="20201029 18:18:45.005"></status>
</kw>
<msg timestamp="20201029 18:18:45.006" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:44.960" endtime="20201029 18:18:45.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:45.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:45.007" endtime="20201029 18:18:45.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:45.009" endtime="20201029 18:18:45.012"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.957" endtime="20201029 18:18:45.012"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.955" endtime="20201029 18:18:45.013"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:45.021" endtime="20201029 18:18:45.307"></status>
</kw>
<msg timestamp="20201029 18:18:45.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025653944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025991264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:45.019" endtime="20201029 18:18:45.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:45.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025653944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025991264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:45.311" endtime="20201029 18:18:45.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:45.319" endtime="20201029 18:18:45.321"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.015" endtime="20201029 18:18:45.321"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.014" endtime="20201029 18:18:45.322"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:45.326" level="INFO">${RESULT} = [{'diff': 0.0003373199999999986}, {'diff': 0.00034401300000000065}, {'diff': 0.00034105499999999983}, {'diff': 0.00033898599999999945}, {'diff': 0.0003394169999999981}, {'diff': 0.00034172299999999864...</msg>
<status status="PASS" starttime="20201029 18:18:45.323" endtime="20201029 18:18:45.326"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:45.330" level="INFO">${ACCURACY} = {'diff': [0.0003373199999999986, 0.00034401300000000065, 0.00034105499999999983, 0.00033898599999999945, 0.0003394169999999981, 0.00034172299999999864, 0.00034005499999999883, 0.00034088900000000047, ...</msg>
<status status="PASS" starttime="20201029 18:18:45.327" endtime="20201029 18:18:45.330"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:45.335" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201029 18:18:45.334" endtime="20201029 18:18:45.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:45.337" level="INFO">VALUE: [0.0003373199999999986, 0.00034401300000000065, 0.00034105499999999983, 0.00033898599999999945, 0.0003394169999999981, 0.00034172299999999864, 0.00034005499999999883, 0.00034088900000000047, 0.00034036100000000083, 0.00033817999999999696, 0.0003427920000000015, 0.0003409169999999996, 0.00034355499999999886, 0.000342888999999999, 0.0003413329999999992, 0.00034347199999999745, 0.0003443200000000021, 0.00034290299999999857, 0.00034231900000000065, 0.000342194000000004, 0.00034186099999999886, 0.00034148700000000143, 0.0003426669999999979, 0.00033808399999999544, 0.0003443189999999957, 0.0003407919999999995, 0.00033836200000000177, 0.00034044400000000224, 0.0003392229999999996, 0.0003416800000000039, 0.00034258300000000047, 0.0003439309999999987, 0.00033834799999999526, 0.0003425690000000009, 0.00034047300000000086, 0.000340806000000006, 0.000341194000000003, 0.000341791000000001, 0.00033987499999999643, 0.00034008399999999744, 0.0003420699999999999, 0.0003423469999999998, 0.00034170800000000306, 0.00034320800000000456, 0.00033834700000000273, 0.00034, 0.0003387779999999979, 0.00034180600000000005, 0.00034226400000000184, 0.00033987499999999643]</msg>
<status status="PASS" starttime="20201029 18:18:45.336" endtime="20201029 18:18:45.339"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.331" endtime="20201029 18:18:45.340"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:45.343" endtime="20201029 18:18:45.363"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.342" endtime="20201029 18:18:45.363"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.341" endtime="20201029 18:18:45.364"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.953" endtime="20201029 18:18:45.364"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.953" endtime="20201029 18:18:45.364"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:45.373" endtime="20201029 18:18:45.407"></status>
</kw>
<msg timestamp="20201029 18:18:45.408" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:45.371" endtime="20201029 18:18:45.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:45.410" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:45.409" endtime="20201029 18:18:45.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:45.411" endtime="20201029 18:18:45.413"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.369" endtime="20201029 18:18:45.414"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.367" endtime="20201029 18:18:45.414"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:45.421" endtime="20201029 18:18:45.707"></status>
</kw>
<msg timestamp="20201029 18:18:45.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020925083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021257097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:45.419" endtime="20201029 18:18:45.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:45.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020925083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021257097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:45.712" endtime="20201029 18:18:45.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:45.720" endtime="20201029 18:18:45.722"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.417" endtime="20201029 18:18:45.722"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.415" endtime="20201029 18:18:45.723"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:45.727" level="INFO">${RESULT} = [{'diff': 0.00033201399999999853}, {'diff': 0.0003413750000000014}, {'diff': 0.00033783300000000266}, {'diff': 0.00034108299999999897}, {'diff': 0.0003414170000000001}, {'diff': 0.00033936099999999983...</msg>
<status status="PASS" starttime="20201029 18:18:45.724" endtime="20201029 18:18:45.727"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:45.732" level="INFO">${ACCURACY} = {'diff': [0.00033201399999999853, 0.0003413750000000014, 0.00033783300000000266, 0.00034108299999999897, 0.0003414170000000001, 0.00033936099999999983, 0.00034319499999999753, 0.00033986100000000033, ...</msg>
<status status="PASS" starttime="20201029 18:18:45.728" endtime="20201029 18:18:45.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:45.736" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201029 18:18:45.735" endtime="20201029 18:18:45.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:45.739" level="INFO">VALUE: [0.00033201399999999853, 0.0003413750000000014, 0.00033783300000000266, 0.00034108299999999897, 0.0003414170000000001, 0.00033936099999999983, 0.00034319499999999753, 0.00033986100000000033, 0.0003420690000000004, 0.00034355499999999886, 0.00034168000000000046, 0.0003388749999999989, 0.00034020900000000104, 0.00034155500000000033, 0.00034172199999999917, 0.0003417639999999979, 0.0003384170000000006, 0.0003414300000000002, 0.0003379579999999993, 0.00034084800000000123, 0.0003399580000000013, 0.0003384719999999994, 0.00034330600000000155, 0.0003421530000000013, 0.00033840299999999754, 0.00034255499999999786, 0.0003441799999999995, 0.00034002800000000263, 0.0003401390000000032, 0.0003411249999999977, 0.0003402360000000007, 0.0003422219999999962, 0.0003395830000000044, 0.0003424869999999955, 0.00034397199999999795, 0.0003399590000000008, 0.00033948599999999995, 0.00033990200000000304, 0.00034048600000000095, 0.0003416669999999969, 0.00034315199999999935, 0.00034391599999999967, 0.0003392779999999984, 0.00034052799999999966, 0.00034270800000000406, 0.0003422360000000027, 0.0003434580000000048, 0.0003380129999999981, 0.00033959699999999704, 0.00034337499999999993]</msg>
<status status="PASS" starttime="20201029 18:18:45.738" endtime="20201029 18:18:45.744"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.733" endtime="20201029 18:18:45.745"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:45.749" endtime="20201029 18:18:45.768"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.747" endtime="20201029 18:18:45.769"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.746" endtime="20201029 18:18:45.769"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.365" endtime="20201029 18:18:45.769"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.365" endtime="20201029 18:18:45.769"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:45.779" endtime="20201029 18:18:45.814"></status>
</kw>
<msg timestamp="20201029 18:18:45.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:45.777" endtime="20201029 18:18:45.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:45.817" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:45.816" endtime="20201029 18:18:45.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:45.818" endtime="20201029 18:18:45.820"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.774" endtime="20201029 18:18:45.820"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.772" endtime="20201029 18:18:45.821"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:45.828" endtime="20201029 18:18:46.115"></status>
</kw>
<msg timestamp="20201029 18:18:46.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022596694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022947569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:45.826" endtime="20201029 18:18:46.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:46.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022596694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022947569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:46.119" endtime="20201029 18:18:46.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:46.127" endtime="20201029 18:18:46.129"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.823" endtime="20201029 18:18:46.130"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.821" endtime="20201029 18:18:46.130"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:46.134" level="INFO">${RESULT} = [{'diff': 0.0003508750000000005}, {'diff': 0.000341888999999998}, {'diff': 0.0003407360000000012}, {'diff': 0.00033883399999999966}, {'diff': 0.0003414439999999998}, {'diff': 0.00033836099999999883}, ...</msg>
<status status="PASS" starttime="20201029 18:18:46.131" endtime="20201029 18:18:46.134"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:46.138" level="INFO">${ACCURACY} = {'diff': [0.0003508750000000005, 0.000341888999999998, 0.0003407360000000012, 0.00033883399999999966, 0.0003414439999999998, 0.00033836099999999883, 0.0003410559999999993, 0.00034105499999999983, 0.00...</msg>
<status status="PASS" starttime="20201029 18:18:46.135" endtime="20201029 18:18:46.138"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:46.143" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201029 18:18:46.142" endtime="20201029 18:18:46.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:46.145" level="INFO">VALUE: [0.0003508750000000005, 0.000341888999999998, 0.0003407360000000012, 0.00033883399999999966, 0.0003414439999999998, 0.00033836099999999883, 0.0003410559999999993, 0.00034105499999999983, 0.0003430690000000014, 0.00034134700000000226, 0.00034016699999999886, 0.00034277799999999845, 0.00034104100000000026, 0.0003408329999999987, 0.0003427920000000015, 0.0003404309999999987, 0.0003438189999999987, 0.0003411530000000003, 0.000338999999999999, 0.0003391109999999996, 0.00033970800000000106, 0.00034097300000000136, 0.00033862499999999865, 0.00034105599999999583, 0.0003426109999999996, 0.0003420140000000016, 0.00034270800000000406, 0.0003396800000000019, 0.00034191599999999767, 0.0003429580000000043, 0.00034418099999999896, 0.0003394720000000004, 0.0003408469999999983, 0.00033881899999999715, 0.0003396390000000027, 0.0003411390000000042, 0.0003439999999999971, 0.0003415000000000015, 0.00033784700000000223, 0.0003425560000000008, 0.0003439449999999983, 0.00034433399999999476, 0.0003414579999999959, 0.0003395559999999978, 0.0003407230000000011, 0.0003441529999999998, 0.0003439579999999984, 0.000338888999999995, 0.00034334699999999385, 0.0003392079999999936]</msg>
<status status="PASS" starttime="20201029 18:18:46.144" endtime="20201029 18:18:46.146"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.139" endtime="20201029 18:18:46.147"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:46.151" endtime="20201029 18:18:46.170"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.149" endtime="20201029 18:18:46.171"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.148" endtime="20201029 18:18:46.171"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.770" endtime="20201029 18:18:46.171"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.770" endtime="20201029 18:18:46.171"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:46.180" endtime="20201029 18:18:46.221"></status>
</kw>
<msg timestamp="20201029 18:18:46.221" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:46.179" endtime="20201029 18:18:46.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:46.224" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:46.223" endtime="20201029 18:18:46.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:46.225" endtime="20201029 18:18:46.227"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.176" endtime="20201029 18:18:46.227"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.174" endtime="20201029 18:18:46.228"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:46.234" endtime="20201029 18:18:46.520"></status>
</kw>
<msg timestamp="20201029 18:18:46.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027661653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028021264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:46.233" endtime="20201029 18:18:46.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:46.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027661653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028021264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:46.524" endtime="20201029 18:18:46.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:46.533" endtime="20201029 18:18:46.534"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.230" endtime="20201029 18:18:46.535"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.228" endtime="20201029 18:18:46.535"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:46.539" level="INFO">${RESULT} = [{'diff': 0.00035961099999999926}, {'diff': 0.00033798599999999845}, {'diff': 0.0003397360000000002}, {'diff': 0.00033783399999999866}, {'diff': 0.00034077700000000044}, {'diff': 0.0003412500000000013...</msg>
<status status="PASS" starttime="20201029 18:18:46.536" endtime="20201029 18:18:46.539"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:46.543" level="INFO">${ACCURACY} = {'diff': [0.00035961099999999926, 0.00033798599999999845, 0.0003397360000000002, 0.00033783399999999866, 0.00034077700000000044, 0.0003412500000000013, 0.0003378610000000018, 0.0003408049999999996, 0....</msg>
<status status="PASS" starttime="20201029 18:18:46.540" endtime="20201029 18:18:46.544"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:46.548" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201029 18:18:46.547" endtime="20201029 18:18:46.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:46.550" level="INFO">VALUE: [0.00035961099999999926, 0.00033798599999999845, 0.0003397360000000002, 0.00033783399999999866, 0.00034077700000000044, 0.0003412500000000013, 0.0003378610000000018, 0.0003408049999999996, 0.0003426669999999979, 0.00034400000000000056, 0.0003411799999999965, 0.0003409439999999958, 0.00034319499999999753, 0.00034009699999999754, 0.00033884799999999576, 0.00034358300000000147, 0.0003399450000000012, 0.00034172200000000263, 0.00033840299999999407, 0.00033772199999999863, 0.00033776299999999787, 0.00033786099999999486, 0.0003389589999999998, 0.00034127700000000094, 0.00034148600000000195, 0.0003386800000000009, 0.0003391250000000026, 0.0003397499999999998, 0.0003387499999999988, 0.0003408469999999983, 0.00034204200000000073, 0.00034230600000000055, 0.00033984700000000423, 0.0003410699999999989, 0.0003407779999999999, 0.00034434699999999485, 0.000344000000000004, 0.000343889, 0.00034337499999999993, 0.0003383060000000035, 0.00034202800000000116, 0.00034418099999999896, 0.0003387499999999988, 0.0003404720000000014, 0.0003442079999999986, 0.0003443470000000018, 0.00033843100000000015, 0.0003388049999999976, 0.00034116600000000386, 0.00034174999999999484]</msg>
<status status="PASS" starttime="20201029 18:18:46.549" endtime="20201029 18:18:46.552"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.544" endtime="20201029 18:18:46.553"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:46.556" endtime="20201029 18:18:46.576"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.555" endtime="20201029 18:18:46.577"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.554" endtime="20201029 18:18:46.577"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.172" endtime="20201029 18:18:46.577"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.172" endtime="20201029 18:18:46.577"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:46.586" endtime="20201029 18:18:46.623"></status>
</kw>
<msg timestamp="20201029 18:18:46.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:46.585" endtime="20201029 18:18:46.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:46.626" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:46.625" endtime="20201029 18:18:46.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:46.628" endtime="20201029 18:18:46.629"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.582" endtime="20201029 18:18:46.630"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.580" endtime="20201029 18:18:46.630"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:46.637" endtime="20201029 18:18:46.922"></status>
</kw>
<msg timestamp="20201029 18:18:46.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023677194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024025444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:46.635" endtime="20201029 18:18:46.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:46.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023677194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024025444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:46.926" endtime="20201029 18:18:46.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:46.934" endtime="20201029 18:18:46.936"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.633" endtime="20201029 18:18:46.937"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.631" endtime="20201029 18:18:46.937"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:46.941" level="INFO">${RESULT} = [{'diff': 0.00034825000000000134}, {'diff': 0.0003403750000000004}, {'diff': 0.00033852799999999766}, {'diff': 0.00033972200000000063}, {'diff': 0.0003410559999999993}, {'diff': 0.0003426530000000018}...</msg>
<status status="PASS" starttime="20201029 18:18:46.938" endtime="20201029 18:18:46.941"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:46.946" level="INFO">${ACCURACY} = {'diff': [0.00034825000000000134, 0.0003403750000000004, 0.00033852799999999766, 0.00033972200000000063, 0.0003410559999999993, 0.0003426530000000018, 0.00033816700000000033, 0.0003379580000000028, 0....</msg>
<status status="PASS" starttime="20201029 18:18:46.942" endtime="20201029 18:18:46.946"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:46.951" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201029 18:18:46.950" endtime="20201029 18:18:46.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:46.953" level="INFO">VALUE: [0.00034825000000000134, 0.0003403750000000004, 0.00033852799999999766, 0.00033972200000000063, 0.0003410559999999993, 0.0003426530000000018, 0.00033816700000000033, 0.0003379580000000028, 0.0003428750000000029, 0.0003441669999999994, 0.00034316700000000186, 0.000338291000000001, 0.0003424170000000011, 0.0003389030000000015, 0.0003415689999999999, 0.00034281900000000115, 0.00034299999999999956, 0.0003441529999999998, 0.000341694, 0.0003411660000000004, 0.00034218000000000096, 0.0003377359999999982, 0.0003442639999999969, 0.0003400699999999979, 0.0003441110000000011, 0.00033836099999999536, 0.00034374999999999684, 0.0003394590000000003, 0.00034279199999999455, 0.00034402800000000316, 0.0003382640000000048, 0.0003436810000000054, 0.0003411249999999977, 0.00033998600000000045, 0.00034380499999999564, 0.0003438200000000016, 0.0003389300000000012, 0.00034370900000000454, 0.0003404580000000018, 0.00033834700000000273, 0.00034254200000000123, 0.00034070900000000154, 0.0003413329999999992, 0.00034219500000000347, 0.0003421379999999988, 0.00034126400000000084, 0.00034176400000000134, 0.0003390420000000047, 0.00034197199999999595, 0.00034241699999999764]</msg>
<status status="PASS" starttime="20201029 18:18:46.952" endtime="20201029 18:18:46.954"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.947" endtime="20201029 18:18:46.954"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:46.958" endtime="20201029 18:18:46.978"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.957" endtime="20201029 18:18:46.978"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.955" endtime="20201029 18:18:46.979"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.578" endtime="20201029 18:18:46.979"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.578" endtime="20201029 18:18:46.979"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:46.988" endtime="20201029 18:18:47.025"></status>
</kw>
<msg timestamp="20201029 18:18:47.026" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:46.986" endtime="20201029 18:18:47.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:47.028" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:47.027" endtime="20201029 18:18:47.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:47.029" endtime="20201029 18:18:47.031"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.984" endtime="20201029 18:18:47.031"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.982" endtime="20201029 18:18:47.032"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:47.039" endtime="20201029 18:18:47.326"></status>
</kw>
<msg timestamp="20201029 18:18:47.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023799097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024141208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:47.037" endtime="20201029 18:18:47.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:47.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023799097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024141208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:47.331" endtime="20201029 18:18:47.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:47.339" endtime="20201029 18:18:47.341"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.034" endtime="20201029 18:18:47.341"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.033" endtime="20201029 18:18:47.342"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:47.346" level="INFO">${RESULT} = [{'diff': 0.0003421109999999991}, {'diff': 0.000343986000000001}, {'diff': 0.00034359700000000104}, {'diff': 0.00034187499999999843}, {'diff': 0.00034366700000000236}, {'diff': 0.00034090300000000004}...</msg>
<status status="PASS" starttime="20201029 18:18:47.343" endtime="20201029 18:18:47.346"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:47.350" level="INFO">${ACCURACY} = {'diff': [0.0003421109999999991, 0.000343986000000001, 0.00034359700000000104, 0.00034187499999999843, 0.00034366700000000236, 0.00034090300000000004, 0.0003440140000000001, 0.0003384719999999994, 0.0...</msg>
<status status="PASS" starttime="20201029 18:18:47.347" endtime="20201029 18:18:47.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:47.354" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201029 18:18:47.353" endtime="20201029 18:18:47.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:47.357" level="INFO">VALUE: [0.0003421109999999991, 0.000343986000000001, 0.00034359700000000104, 0.00034187499999999843, 0.00034366700000000236, 0.00034090300000000004, 0.0003440140000000001, 0.0003384719999999994, 0.00033981899999999815, 0.0003380550000000003, 0.0003405970000000015, 0.00034194499999999975, 0.00033898599999999945, 0.00034241600000000164, 0.00034266700000000136, 0.00034437500000000093, 0.0003405840000000014, 0.00034081899999999915, 0.0003431530000000023, 0.00033984700000000076, 0.00034305500000000183, 0.000340888999999997, 0.0003411250000000046, 0.00034119500000000247, 0.00033930599999999755, 0.00034419399999999906, 0.00033837499999999493, 0.0003414019999999976, 0.0003394300000000017, 0.0003382920000000039, 0.0003416109999999986, 0.00034237499999999893, 0.0003421109999999991, 0.00034395899999999785, 0.00033926399999999884, 0.00034426400000000384, 0.00033979100000000595, 0.00034176400000000134, 0.00034015300000000276, 0.00034402800000000316, 0.0003416109999999986, 0.00033794399999999974, 0.0003391810000000009, 0.0003396810000000014, 0.0003393190000000046, 0.00033833300000000316, 0.0003402079999999946, 0.0003414579999999959, 0.00034236099999999936, 0.00034202699999999475]</msg>
<status status="PASS" starttime="20201029 18:18:47.356" endtime="20201029 18:18:47.358"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.351" endtime="20201029 18:18:47.358"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:47.362" endtime="20201029 18:18:47.382"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.361" endtime="20201029 18:18:47.382"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.359" endtime="20201029 18:18:47.383"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.980" endtime="20201029 18:18:47.383"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.979" endtime="20201029 18:18:47.383"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:47.392" endtime="20201029 18:18:47.428"></status>
</kw>
<msg timestamp="20201029 18:18:47.428" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:47.390" endtime="20201029 18:18:47.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:47.431" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:47.429" endtime="20201029 18:18:47.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:47.432" endtime="20201029 18:18:47.434"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.388" endtime="20201029 18:18:47.434"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.386" endtime="20201029 18:18:47.435"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:47.441" endtime="20201029 18:18:47.728"></status>
</kw>
<msg timestamp="20201029 18:18:47.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021773431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022112639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:47.440" endtime="20201029 18:18:47.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:47.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021773431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022112639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:47.732" endtime="20201029 18:18:47.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:47.741" endtime="20201029 18:18:47.742"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.437" endtime="20201029 18:18:47.743"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.435" endtime="20201029 18:18:47.743"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:47.748" level="INFO">${RESULT} = [{'diff': 0.00033920800000000056}, {'diff': 0.00033934700000000026}, {'diff': 0.00034359700000000104}, {'diff': 0.0003441250000000007}, {'diff': 0.0003393749999999994}, {'diff': 0.00033990299999999904...</msg>
<status status="PASS" starttime="20201029 18:18:47.744" endtime="20201029 18:18:47.748"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:47.752" level="INFO">${ACCURACY} = {'diff': [0.00033920800000000056, 0.00033934700000000026, 0.00034359700000000104, 0.0003441250000000007, 0.0003393749999999994, 0.00033990299999999904, 0.00033944400000000124, 0.0003394170000000016, 0...</msg>
<status status="PASS" starttime="20201029 18:18:47.749" endtime="20201029 18:18:47.752"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:47.756" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201029 18:18:47.755" endtime="20201029 18:18:47.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:47.759" level="INFO">VALUE: [0.00033920800000000056, 0.00033934700000000026, 0.00034359700000000104, 0.0003441250000000007, 0.0003393749999999994, 0.00033990299999999904, 0.00033944400000000124, 0.0003394170000000016, 0.0003440560000000023, 0.0003441669999999994, 0.0003378749999999979, 0.0003413329999999992, 0.00034012500000000015, 0.0003402779999999994, 0.00034191699999999714, 0.0003396529999999988, 0.0003402500000000003, 0.00034209699999999954, 0.00034095799999999885, 0.0003393749999999994, 0.00034263800000000275, 0.0003415270000000012, 0.0003433189999999982, 0.0003431110000000001, 0.0003383329999999997, 0.0003393330000000007, 0.0003412079999999956, 0.00034158299999999947, 0.00034434699999999485, 0.0003400840000000044, 0.00034134700000000573, 0.00034401399999999666, 0.0003401390000000032, 0.000341679999999997, 0.00034102800000000016, 0.0003394449999999938, 0.00034193100000000365, 0.00034192999999999724, 0.00034351399999999616, 0.0003414160000000041, 0.00034208299999999997, 0.00033979100000000595, 0.0003396810000000014, 0.000340791, 0.00034141699999999664, 0.0003392369999999992, 0.00034409700000000154, 0.00033998600000000045, 0.0003436250000000002, 0.00034241699999999764]</msg>
<status status="PASS" starttime="20201029 18:18:47.757" endtime="20201029 18:18:47.760"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.753" endtime="20201029 18:18:47.761"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:47.765" endtime="20201029 18:18:47.784"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.763" endtime="20201029 18:18:47.785"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.762" endtime="20201029 18:18:47.785"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.384" endtime="20201029 18:18:47.786"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.383" endtime="20201029 18:18:47.786"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:47.795" endtime="20201029 18:18:47.828"></status>
</kw>
<msg timestamp="20201029 18:18:47.829" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:47.793" endtime="20201029 18:18:47.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:47.831" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:47.830" endtime="20201029 18:18:47.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:47.833" endtime="20201029 18:18:47.834"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.790" endtime="20201029 18:18:47.835"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.788" endtime="20201029 18:18:47.835"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:47.842" endtime="20201029 18:18:48.129"></status>
</kw>
<msg timestamp="20201029 18:18:48.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020977153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021333194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:47.840" endtime="20201029 18:18:48.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020977153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021333194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:48.133" endtime="20201029 18:18:48.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.142" endtime="20201029 18:18:48.143"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.838" endtime="20201029 18:18:48.144"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.836" endtime="20201029 18:18:48.144"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:48.148" level="INFO">${RESULT} = [{'diff': 0.0003560410000000014}, {'diff': 0.00033802800000000063}, {'diff': 0.0003382359999999987}, {'diff': 0.00034152800000000066}, {'diff': 0.000343889}, {'diff': 0.0003434730000000004}, {'diff': ...</msg>
<status status="PASS" starttime="20201029 18:18:48.145" endtime="20201029 18:18:48.149"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:48.153" level="INFO">${ACCURACY} = {'diff': [0.0003560410000000014, 0.00033802800000000063, 0.0003382359999999987, 0.00034152800000000066, 0.000343889, 0.0003434730000000004, 0.0003395970000000005, 0.00033854199999999723, 0.00033970900...</msg>
<status status="PASS" starttime="20201029 18:18:48.149" endtime="20201029 18:18:48.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.158" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201029 18:18:48.157" endtime="20201029 18:18:48.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.160" level="INFO">VALUE: [0.0003560410000000014, 0.00033802800000000063, 0.0003382359999999987, 0.00034152800000000066, 0.000343889, 0.0003434730000000004, 0.0003395970000000005, 0.00033854199999999723, 0.00033970900000000054, 0.00034409699999999807, 0.00034105499999999983, 0.0003432639999999994, 0.000342000000000002, 0.0003401110000000006, 0.0003413620000000013, 0.000343388, 0.00033934700000000026, 0.0003423200000000001, 0.00034130599999999955, 0.0003414450000000027, 0.0003443609999999979, 0.0003432780000000024, 0.00034168099999999993, 0.0003440409999999998, 0.00033808299999999944, 0.0003431110000000001, 0.0003441669999999994, 0.000339097, 0.00034387500000000043, 0.00033877699999999844, 0.0003394999999999995, 0.0003401800000000024, 0.0003407360000000012, 0.0003416109999999986, 0.0003378049999999966, 0.00034176400000000134, 0.0003423050000000011, 0.0003443330000000022, 0.000338403000000001, 0.00033815300000000076, 0.0003409580000000023, 0.0003437360000000042, 0.0003380559999999963, 0.0003413050000000001, 0.0003392779999999984, 0.00034304100000000226, 0.000342679999999998, 0.00033915300000000176, 0.0003434590000000043, 0.00034308400000000044]</msg>
<status status="PASS" starttime="20201029 18:18:48.159" endtime="20201029 18:18:48.161"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.154" endtime="20201029 18:18:48.162"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:48.166" endtime="20201029 18:18:48.185"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.164" endtime="20201029 18:18:48.186"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.163" endtime="20201029 18:18:48.186"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.787" endtime="20201029 18:18:48.186"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.786" endtime="20201029 18:18:48.186"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.195" endtime="20201029 18:18:48.231"></status>
</kw>
<msg timestamp="20201029 18:18:48.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:48.194" endtime="20201029 18:18:48.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:48.233" endtime="20201029 18:18:48.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.235" endtime="20201029 18:18:48.237"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.191" endtime="20201029 18:18:48.238"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.189" endtime="20201029 18:18:48.238"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.245" endtime="20201029 18:18:48.531"></status>
</kw>
<msg timestamp="20201029 18:18:48.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022214792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022562056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:48.243" endtime="20201029 18:18:48.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022214792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022562056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:48.535" endtime="20201029 18:18:48.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.543" endtime="20201029 18:18:48.545"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.240" endtime="20201029 18:18:48.546"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.239" endtime="20201029 18:18:48.546"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:48.550" level="INFO">${RESULT} = [{'diff': 0.0003472639999999999}, {'diff': 0.00034442999999999974}, {'diff': 0.0003444019999999971}, {'diff': 0.00034019500000000147}, {'diff': 0.0003416109999999986}, {'diff': 0.00034006900000000187}...</msg>
<status status="PASS" starttime="20201029 18:18:48.547" endtime="20201029 18:18:48.550"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:48.554" level="INFO">${ACCURACY} = {'diff': [0.0003472639999999999, 0.00034442999999999974, 0.0003444019999999971, 0.00034019500000000147, 0.0003416109999999986, 0.00034006900000000187, 0.0003435690000000019, 0.00033902800000000163, 0....</msg>
<status status="PASS" starttime="20201029 18:18:48.551" endtime="20201029 18:18:48.555"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.559" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201029 18:18:48.558" endtime="20201029 18:18:48.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.562" level="INFO">VALUE: [0.0003472639999999999, 0.00034442999999999974, 0.0003444019999999971, 0.00034019500000000147, 0.0003416109999999986, 0.00034006900000000187, 0.0003435690000000019, 0.00033902800000000163, 0.0003414309999999997, 0.0003390139999999986, 0.00033948599999999995, 0.0003412500000000013, 0.0003404169999999991, 0.000343791999999999, 0.0003380839999999989, 0.00034136099999999836, 0.00034190300000000104, 0.00034168000000000046, 0.00033948599999999995, 0.0003429590000000003, 0.0003392359999999997, 0.0003383329999999997, 0.00034, 0.00034313899999999925, 0.00033933400000000016, 0.0003387640000000053, 0.0003435140000000031, 0.00034188900000000494, 0.0003404720000000014, 0.00034348600000000395, 0.00034144400000000324, 0.00034255599999999387, 0.0003427079999999971, 0.0003416249999999982, 0.0003385559999999968, 0.0003379160000000006, 0.0003380970000000025, 0.00034005499999999883, 0.00034266600000000536, 0.00034374999999999684, 0.00034043100000000215, 0.0003380830000000029, 0.00034058299999999847, 0.00034040200000000354, 0.00034137499999999793, 0.00033937500000000287, 0.0003435000000000035, 0.00034122200000000213, 0.00034241699999999764, 0.0003387779999999979]</msg>
<status status="PASS" starttime="20201029 18:18:48.560" endtime="20201029 18:18:48.562"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.555" endtime="20201029 18:18:48.563"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:48.567" endtime="20201029 18:18:48.586"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.565" endtime="20201029 18:18:48.587"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.564" endtime="20201029 18:18:48.587"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.187" endtime="20201029 18:18:48.588"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.187" endtime="20201029 18:18:48.588"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.597" endtime="20201029 18:18:48.633"></status>
</kw>
<msg timestamp="20201029 18:18:48.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:48.595" endtime="20201029 18:18:48.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:48.635" endtime="20201029 18:18:48.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.637" endtime="20201029 18:18:48.639"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.592" endtime="20201029 18:18:48.639"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.590" endtime="20201029 18:18:48.640"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.646" endtime="20201029 18:18:48.932"></status>
</kw>
<msg timestamp="20201029 18:18:48.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022947431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023298639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:48.645" endtime="20201029 18:18:48.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022947431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023298639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:48.936" endtime="20201029 18:18:48.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.945" endtime="20201029 18:18:48.946"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.642" endtime="20201029 18:18:48.947"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.640" endtime="20201029 18:18:48.947"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:48.951" level="INFO">${RESULT} = [{'diff': 0.0003512079999999987}, {'diff': 0.0003421249999999987}, {'diff': 0.00033826299999999837}, {'diff': 0.0003394580000000008}, {'diff': 0.00033790200000000103}, {'diff': 0.00033830500000000055}...</msg>
<status status="PASS" starttime="20201029 18:18:48.948" endtime="20201029 18:18:48.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:48.956" level="INFO">${ACCURACY} = {'diff': [0.0003512079999999987, 0.0003421249999999987, 0.00033826299999999837, 0.0003394580000000008, 0.00033790200000000103, 0.00033830500000000055, 0.00034223599999999924, 0.0003443890000000005, 0....</msg>
<status status="PASS" starttime="20201029 18:18:48.952" endtime="20201029 18:18:48.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.960" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201029 18:18:48.959" endtime="20201029 18:18:48.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.963" level="INFO">VALUE: [0.0003512079999999987, 0.0003421249999999987, 0.00033826299999999837, 0.0003394580000000008, 0.00033790200000000103, 0.00033830500000000055, 0.00034223599999999924, 0.0003443890000000005, 0.0003389719999999999, 0.0003389719999999999, 0.0003401389999999997, 0.0003379030000000005, 0.0003401939999999985, 0.00034155500000000033, 0.0003431249999999997, 0.00034098600000000145, 0.00034083400000000166, 0.0003431529999999988, 0.0003414719999999989, 0.00033929200000000145, 0.0003398749999999999, 0.00034202800000000116, 0.0003393049999999981, 0.0003417780000000009, 0.00033988900000000294, 0.00034002799999999916, 0.00033998600000000045, 0.00034273599999999627, 0.00033915300000000176, 0.0003386810000000004, 0.0003398339999999972, 0.000343889, 0.00034419499999999853, 0.0003380700000000028, 0.00034020900000000104, 0.0003396250000000031, 0.0003389450000000002, 0.0003434999999999966, 0.0003399720000000009, 0.00034187499999999843, 0.0003406940000000025, 0.0003416109999999986, 0.00034436100000000136, 0.00034398700000000393, 0.00034358300000000147, 0.0003408199999999986, 0.0003420970000000065, 0.0003419720000000029, 0.0003390700000000038, 0.00034220800000000356]</msg>
<status status="PASS" starttime="20201029 18:18:48.961" endtime="20201029 18:18:48.964"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.956" endtime="20201029 18:18:48.965"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:48.969" endtime="20201029 18:18:48.988"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.967" endtime="20201029 18:18:48.989"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.966" endtime="20201029 18:18:48.989"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.589" endtime="20201029 18:18:48.989"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.588" endtime="20201029 18:18:48.989"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.998" endtime="20201029 18:18:49.035"></status>
</kw>
<msg timestamp="20201029 18:18:49.035" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:48.997" endtime="20201029 18:18:49.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:49.038" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:49.036" endtime="20201029 18:18:49.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:49.039" endtime="20201029 18:18:49.040"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.994" endtime="20201029 18:18:49.041"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.992" endtime="20201029 18:18:49.041"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:49.048" endtime="20201029 18:18:49.334"></status>
</kw>
<msg timestamp="20201029 18:18:49.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022981208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023316014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:49.047" endtime="20201029 18:18:49.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:49.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022981208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023316014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:49.338" endtime="20201029 18:18:49.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:49.348" endtime="20201029 18:18:49.351"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.044" endtime="20201029 18:18:49.351"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.042" endtime="20201029 18:18:49.352"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:49.360" level="INFO">${RESULT} = [{'diff': 0.000334806}, {'diff': 0.0003391389999999987}, {'diff': 0.0003386940000000005}, {'diff': 0.0003410689999999994}, {'diff': 0.0003432369999999997}, {'diff': 0.00034101299999999765}, {'diff': 0...</msg>
<status status="PASS" starttime="20201029 18:18:49.353" endtime="20201029 18:18:49.361"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:49.370" level="INFO">${ACCURACY} = {'diff': [0.000334806, 0.0003391389999999987, 0.0003386940000000005, 0.0003410689999999994, 0.0003432369999999997, 0.00034101299999999765, 0.0003399580000000013, 0.0003382360000000022, 0.0003408890000...</msg>
<status status="PASS" starttime="20201029 18:18:49.363" endtime="20201029 18:18:49.371"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:49.378" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201029 18:18:49.377" endtime="20201029 18:18:49.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:49.381" level="INFO">VALUE: [0.000334806, 0.0003391389999999987, 0.0003386940000000005, 0.0003410689999999994, 0.0003432369999999997, 0.00034101299999999765, 0.0003399580000000013, 0.0003382360000000022, 0.00034088900000000047, 0.0003393749999999994, 0.0003407779999999999, 0.00033961199999999955, 0.00033872199999999963, 0.0003416520000000013, 0.0003444309999999992, 0.0003436669999999989, 0.00034163800000000175, 0.00033856900000000037, 0.00034094499999999875, 0.0003379170000000001, 0.0003389719999999999, 0.0003426669999999979, 0.0003440409999999998, 0.00034259700000000004, 0.0003387640000000053, 0.0003420140000000016, 0.0003411810000000029, 0.00034440299999999313, 0.0003408469999999983, 0.00034319399999999806, 0.00034222200000000313, 0.00034061100000000455, 0.00033880599999999705, 0.00034259700000000004, 0.00033838900000000144, 0.0003401250000000036, 0.00034274999999999584, 0.0003427079999999971, 0.0003379030000000005, 0.00033898599999999945, 0.00034087500000000437, 0.0003379170000000001, 0.00034316700000000533, 0.0003419030000000045, 0.00034323599999999677, 0.00033952799999999866, 0.0003389580000000003, 0.0003426529999999983, 0.00034287499999999943, 0.0003396669999999949]</msg>
<status status="PASS" starttime="20201029 18:18:49.380" endtime="20201029 18:18:49.382"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.372" endtime="20201029 18:18:49.382"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:49.386" endtime="20201029 18:18:49.406"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.385" endtime="20201029 18:18:49.406"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.383" endtime="20201029 18:18:49.406"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.990" endtime="20201029 18:18:49.407"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.990" endtime="20201029 18:18:49.407"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:49.416" endtime="20201029 18:18:49.451"></status>
</kw>
<msg timestamp="20201029 18:18:49.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:49.414" endtime="20201029 18:18:49.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:49.454" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:49.453" endtime="20201029 18:18:49.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:49.455" endtime="20201029 18:18:49.457"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.412" endtime="20201029 18:18:49.458"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.409" endtime="20201029 18:18:49.458"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:49.465" endtime="20201029 18:18:49.752"></status>
</kw>
<msg timestamp="20201029 18:18:49.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022592236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022951972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:49.463" endtime="20201029 18:18:49.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:49.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022592236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022951972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:49.756" endtime="20201029 18:18:49.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:49.764" endtime="20201029 18:18:49.766"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.460" endtime="20201029 18:18:49.767"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.459" endtime="20201029 18:18:49.767"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:49.771" level="INFO">${RESULT} = [{'diff': 0.0003597359999999994}, {'diff': 0.0003443470000000018}, {'diff': 0.00033793099999999965}, {'diff': 0.0003403330000000017}, {'diff': 0.0003439019999999966}, {'diff': 0.0003421940000000005}, ...</msg>
<status status="PASS" starttime="20201029 18:18:49.768" endtime="20201029 18:18:49.771"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:49.775" level="INFO">${ACCURACY} = {'diff': [0.0003597359999999994, 0.0003443470000000018, 0.00033793099999999965, 0.0003403330000000017, 0.0003439019999999966, 0.0003421940000000005, 0.00033888900000000194, 0.00034292999999999824, 0.0...</msg>
<status status="PASS" starttime="20201029 18:18:49.772" endtime="20201029 18:18:49.775"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:49.780" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201029 18:18:49.779" endtime="20201029 18:18:49.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:49.782" level="INFO">VALUE: [0.0003597359999999994, 0.0003443470000000018, 0.00033793099999999965, 0.0003403330000000017, 0.0003439019999999966, 0.0003421940000000005, 0.00033888900000000194, 0.00034292999999999824, 0.0003438609999999974, 0.00033844400000000024, 0.0003381529999999973, 0.00034062500000000065, 0.0003407499999999973, 0.00034405500000000283, 0.00034442999999999974, 0.00033948599999999995, 0.00034112500000000115, 0.00034127699999999747, 0.000340791, 0.0003436530000000028, 0.00034373599999999727, 0.0003415559999999998, 0.000338999999999999, 0.0003428050000000016, 0.0003384170000000006, 0.0003432780000000024, 0.0003386390000000017, 0.00033908299999999697, 0.000339291999999998, 0.0003410689999999994, 0.0003394170000000016, 0.0003410689999999994, 0.0003384579999999998, 0.0003411249999999977, 0.0003389719999999999, 0.0003407219999999947, 0.00034184799999999876, 0.0003405140000000001, 0.0003420699999999999, 0.00033997300000000036, 0.00033937500000000287, 0.0003409170000000031, 0.00033922200000000013, 0.00034248600000000295, 0.0003435140000000031, 0.00034402800000000316, 0.0003422500000000023, 0.0003392499999999993, 0.000343679999999999, 0.00033822199999999913]</msg>
<status status="PASS" starttime="20201029 18:18:49.781" endtime="20201029 18:18:49.783"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.776" endtime="20201029 18:18:49.784"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:49.787" endtime="20201029 18:18:49.807"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.786" endtime="20201029 18:18:49.807"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.785" endtime="20201029 18:18:49.808"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.408" endtime="20201029 18:18:49.808"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.407" endtime="20201029 18:18:49.808"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:49.817" endtime="20201029 18:18:49.859"></status>
</kw>
<msg timestamp="20201029 18:18:49.860" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:49.816" endtime="20201029 18:18:49.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:49.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:49.861" endtime="20201029 18:18:49.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:49.864" endtime="20201029 18:18:49.865"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.813" endtime="20201029 18:18:49.866"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.811" endtime="20201029 18:18:49.866"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:49.873" endtime="20201029 18:18:50.160"></status>
</kw>
<msg timestamp="20201029 18:18:50.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028258417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028591181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:49.871" endtime="20201029 18:18:50.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028258417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028591181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:50.164" endtime="20201029 18:18:50.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:50.172" endtime="20201029 18:18:50.174"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.869" endtime="20201029 18:18:50.175"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.867" endtime="20201029 18:18:50.175"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:50.179" level="INFO">${RESULT} = [{'diff': 0.0003327639999999993}, {'diff': 0.000343986000000001}, {'diff': 0.0003411109999999981}, {'diff': 0.0003395840000000004}, {'diff': 0.0003380000000000015}, {'diff': 0.00034058300000000194}, {...</msg>
<status status="PASS" starttime="20201029 18:18:50.176" endtime="20201029 18:18:50.179"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:50.183" level="INFO">${ACCURACY} = {'diff': [0.0003327639999999993, 0.000343986000000001, 0.0003411109999999981, 0.0003395840000000004, 0.0003380000000000015, 0.00034058300000000194, 0.0003409299999999997, 0.00034305499999999836, 0.000...</msg>
<status status="PASS" starttime="20201029 18:18:50.180" endtime="20201029 18:18:50.183"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.188" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201029 18:18:50.187" endtime="20201029 18:18:50.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.190" level="INFO">VALUE: [0.0003327639999999993, 0.000343986000000001, 0.0003411109999999981, 0.0003395840000000004, 0.0003380000000000015, 0.00034058300000000194, 0.0003409299999999997, 0.00034305499999999836, 0.0003413889999999975, 0.00034308400000000044, 0.0003426810000000044, 0.0003425419999999943, 0.0003435419999999953, 0.00033916600000000185, 0.0003442089999999981, 0.00033841699999999364, 0.00034136099999999836, 0.0003412500000000013, 0.0003408329999999987, 0.0003402370000000002, 0.00034376400000000334, 0.000338679999999994, 0.0003431110000000001, 0.00034313899999999925, 0.00034280600000000105, 0.0003419019999999981, 0.00033998699999999993, 0.0003389170000000011, 0.0003425140000000021, 0.0003387499999999988, 0.0003404580000000018, 0.0003381390000000012, 0.00033926399999999884, 0.0003408879999999975, 0.00033848599999999895, 0.00034369500000000497, 0.00034359700000000104, 0.00034058299999999847, 0.00034105499999999983, 0.00033931899999999765, 0.0003404300000000027, 0.00033788900000000094, 0.0003426529999999983, 0.0003419720000000029, 0.0003394450000000007, 0.0003383060000000035, 0.0003401250000000036, 0.00033843100000000015, 0.00033954099999999876, 0.00034144400000000324]</msg>
<status status="PASS" starttime="20201029 18:18:50.189" endtime="20201029 18:18:50.192"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.184" endtime="20201029 18:18:50.192"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:50.196" endtime="20201029 18:18:50.216"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.195" endtime="20201029 18:18:50.216"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.193" endtime="20201029 18:18:50.217"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.809" endtime="20201029 18:18:50.217"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.809" endtime="20201029 18:18:50.217"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:50.226" endtime="20201029 18:18:50.261"></status>
</kw>
<msg timestamp="20201029 18:18:50.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:50.224" endtime="20201029 18:18:50.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.264" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:50.262" endtime="20201029 18:18:50.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:50.265" endtime="20201029 18:18:50.267"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.222" endtime="20201029 18:18:50.267"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.220" endtime="20201029 18:18:50.268"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:50.274" endtime="20201029 18:18:50.560"></status>
</kw>
<msg timestamp="20201029 18:18:50.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021313639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021667292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:50.273" endtime="20201029 18:18:50.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021313639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021667292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:50.564" endtime="20201029 18:18:50.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:50.573" endtime="20201029 18:18:50.574"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.270" endtime="20201029 18:18:50.575"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.268" endtime="20201029 18:18:50.575"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:50.579" level="INFO">${RESULT} = [{'diff': 0.0003536530000000024}, {'diff': 0.0003424449999999968}, {'diff': 0.00034190300000000104}, {'diff': 0.0003418469999999993}, {'diff': 0.00034202800000000116}, {'diff': 0.00034336100000000036}...</msg>
<status status="PASS" starttime="20201029 18:18:50.576" endtime="20201029 18:18:50.580"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:50.584" level="INFO">${ACCURACY} = {'diff': [0.0003536530000000024, 0.0003424449999999968, 0.00034190300000000104, 0.0003418469999999993, 0.00034202800000000116, 0.00034336100000000036, 0.00034094499999999875, 0.000341097999999998, 0.0...</msg>
<status status="PASS" starttime="20201029 18:18:50.580" endtime="20201029 18:18:50.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.589" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201029 18:18:50.588" endtime="20201029 18:18:50.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.591" level="INFO">VALUE: [0.0003536530000000024, 0.0003424449999999968, 0.00034190300000000104, 0.0003418469999999993, 0.00034202800000000116, 0.00034336100000000036, 0.00034094499999999875, 0.000341097999999998, 0.0003409720000000019, 0.00034147300000000186, 0.0003402779999999994, 0.0003399439999999983, 0.00034411099999999764, 0.00034336100000000036, 0.0003405559999999988, 0.00033986100000000033, 0.0003409589999999983, 0.0003414309999999997, 0.00034408400000000144, 0.00034152800000000066, 0.00033820799999999956, 0.00034154200000000023, 0.0003429310000000012, 0.0003413469999999988, 0.00034133400000000216, 0.0003437080000000016, 0.0003406109999999976, 0.00034291600000000214, 0.0003421669999999974, 0.0003435140000000031, 0.00034252800000000166, 0.0003397499999999998, 0.0003400689999999984, 0.0003399160000000026, 0.0003384999999999985, 0.0003385139999999981, 0.0003387499999999988, 0.00033787500000000137, 0.00034131899999999965, 0.00034058299999999847, 0.00034176400000000134, 0.0003427230000000031, 0.00034392999999999924, 0.00034244400000000424, 0.000338597000000003, 0.00033966700000000183, 0.00034434800000000126, 0.00034373599999999727, 0.0003392500000000062, 0.0003430549999999949]</msg>
<status status="PASS" starttime="20201029 18:18:50.590" endtime="20201029 18:18:50.592"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.585" endtime="20201029 18:18:50.593"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:50.597" endtime="20201029 18:18:50.616"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.595" endtime="20201029 18:18:50.617"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.594" endtime="20201029 18:18:50.617"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.218" endtime="20201029 18:18:50.617"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.217" endtime="20201029 18:18:50.617"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:50.626" endtime="20201029 18:18:50.667"></status>
</kw>
<msg timestamp="20201029 18:18:50.668" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:50.625" endtime="20201029 18:18:50.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:50.669" endtime="20201029 18:18:50.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:50.671" endtime="20201029 18:18:50.673"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.622" endtime="20201029 18:18:50.674"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.620" endtime="20201029 18:18:50.674"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:50.681" endtime="20201029 18:18:50.969"></status>
</kw>
<msg timestamp="20201029 18:18:50.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022844028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023180972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:50.679" endtime="20201029 18:18:50.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022844028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023180972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:50.973" endtime="20201029 18:18:50.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:50.981" endtime="20201029 18:18:50.983"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.676" endtime="20201029 18:18:50.984"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.675" endtime="20201029 18:18:50.984"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:50.988" level="INFO">${RESULT} = [{'diff': 0.0003369440000000022}, {'diff': 0.0003435980000000005}, {'diff': 0.0003403750000000004}, {'diff': 0.0003413339999999987}, {'diff': 0.0003434720000000009}, {'diff': 0.0003388060000000005}, {...</msg>
<status status="PASS" starttime="20201029 18:18:50.985" endtime="20201029 18:18:50.988"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:50.992" level="INFO">${ACCURACY} = {'diff': [0.0003369440000000022, 0.0003435980000000005, 0.0003403750000000004, 0.0003413339999999987, 0.0003434720000000009, 0.0003388060000000005, 0.0003394999999999995, 0.00034304100000000226, 0.000...</msg>
<status status="PASS" starttime="20201029 18:18:50.989" endtime="20201029 18:18:50.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.997" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201029 18:18:50.996" endtime="20201029 18:18:50.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.999" level="INFO">VALUE: [0.0003369440000000022, 0.0003435980000000005, 0.0003403750000000004, 0.0003413339999999987, 0.0003434720000000009, 0.0003388060000000005, 0.0003394999999999995, 0.00034304100000000226, 0.0003438049999999991, 0.00034066699999999936, 0.0003387499999999988, 0.00034026399999999984, 0.0003395139999999991, 0.00033976399999999934, 0.00033888899999999847, 0.0003423469999999998, 0.00033851400000000156, 0.00034286099999999986, 0.00034341699999999864, 0.0003414719999999989, 0.00034320900000000057, 0.0003434860000000005, 0.0003420690000000004, 0.0003444720000000019, 0.000339679999999995, 0.000342292000000001, 0.0003433470000000008, 0.00034097300000000136, 0.0003386390000000017, 0.00033992999999999524, 0.00033965300000000226, 0.00034170800000000306, 0.0003442219999999982, 0.000339194000000001, 0.0003402500000000003, 0.000338597000000003, 0.0003411119999999976, 0.00034437500000000093, 0.0003409450000000022, 0.00034409700000000154, 0.00034298600000000345, 0.00034209699999999954, 0.0003380559999999963, 0.00034109699999999854, 0.00034222200000000313, 0.0003414590000000023, 0.0003428330000000007, 0.00034401399999999666, 0.00034102800000000016, 0.00034020800000000156]</msg>
<status status="PASS" starttime="20201029 18:18:50.998" endtime="20201029 18:18:51.000"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.993" endtime="20201029 18:18:51.001"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:51.005" endtime="20201029 18:18:51.024"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.003" endtime="20201029 18:18:51.025"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.002" endtime="20201029 18:18:51.025"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.618" endtime="20201029 18:18:51.025"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.618" endtime="20201029 18:18:51.025"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.034" endtime="20201029 18:18:51.069"></status>
</kw>
<msg timestamp="20201029 18:18:51.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:51.033" endtime="20201029 18:18:51.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.072" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:51.071" endtime="20201029 18:18:51.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.073" endtime="20201029 18:18:51.075"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.030" endtime="20201029 18:18:51.076"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.028" endtime="20201029 18:18:51.076"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.083" endtime="20201029 18:18:51.369"></status>
</kw>
<msg timestamp="20201029 18:18:51.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021766458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022117042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:51.081" endtime="20201029 18:18:51.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021766458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022117042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:51.373" endtime="20201029 18:18:51.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.381" endtime="20201029 18:18:51.383"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.078" endtime="20201029 18:18:51.384"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.077" endtime="20201029 18:18:51.384"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:51.388" level="INFO">${RESULT} = [{'diff': 0.000350584000000001}, {'diff': 0.00034216700000000086}, {'diff': 0.0003386109999999991}, {'diff': 0.00033883399999999966}, {'diff': 0.00034098600000000145}, {'diff': 0.0003443470000000018},...</msg>
<status status="PASS" starttime="20201029 18:18:51.385" endtime="20201029 18:18:51.388"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:51.392" level="INFO">${ACCURACY} = {'diff': [0.000350584000000001, 0.00034216700000000086, 0.0003386109999999991, 0.00033883399999999966, 0.00034098600000000145, 0.0003443470000000018, 0.0003416530000000008, 0.00034002799999999916, 0.0...</msg>
<status status="PASS" starttime="20201029 18:18:51.389" endtime="20201029 18:18:51.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.397" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201029 18:18:51.396" endtime="20201029 18:18:51.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.399" level="INFO">VALUE: [0.000350584000000001, 0.00034216700000000086, 0.0003386109999999991, 0.00033883399999999966, 0.00034098600000000145, 0.0003443470000000018, 0.0003416530000000008, 0.00034002799999999916, 0.0003398330000000012, 0.0003391250000000026, 0.000343694000000002, 0.00033957000000000084, 0.0003398749999999999, 0.0003382359999999987, 0.0003412780000000004, 0.00033843100000000015, 0.000343889, 0.00034295800000000085, 0.0003424859999999995, 0.00034123599999999824, 0.00034379099999999954, 0.00033830500000000055, 0.00033916600000000185, 0.0003421940000000005, 0.00034304199999999826, 0.0003435700000000014, 0.00034142999999999674, 0.00033952799999999866, 0.00034147300000000186, 0.00034052799999999966, 0.0003382359999999987, 0.00034322299999999667, 0.000337999999999998, 0.00033920800000000056, 0.00034363899999999975, 0.0003401250000000036, 0.00033848599999999895, 0.0003436110000000006, 0.0003402360000000007, 0.0003379170000000001, 0.00034104199999999973, 0.0003438609999999939, 0.0003440409999999963, 0.0003416669999999969, 0.00034406899999999546, 0.00034230600000000055, 0.0003385700000000033, 0.00034280600000000105, 0.00033837499999999493, 0.00033948599999999995]</msg>
<status status="PASS" starttime="20201029 18:18:51.398" endtime="20201029 18:18:51.401"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.393" endtime="20201029 18:18:51.401"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:51.405" endtime="20201029 18:18:51.425"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.404" endtime="20201029 18:18:51.425"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.402" endtime="20201029 18:18:51.426"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.026" endtime="20201029 18:18:51.426"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.026" endtime="20201029 18:18:51.426"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.435" endtime="20201029 18:18:51.471"></status>
</kw>
<msg timestamp="20201029 18:18:51.471" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:51.434" endtime="20201029 18:18:51.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.474" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:51.472" endtime="20201029 18:18:51.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.475" endtime="20201029 18:18:51.477"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.431" endtime="20201029 18:18:51.477"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.429" endtime="20201029 18:18:51.478"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.484" endtime="20201029 18:18:51.771"></status>
</kw>
<msg timestamp="20201029 18:18:51.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023021625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0233605, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:18:51.483" endtime="20201029 18:18:51.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023021625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0233605, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:18:51.776" endtime="20201029 18:18:51.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.784" endtime="20201029 18:18:51.786"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.480" endtime="20201029 18:18:51.786"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.478" endtime="20201029 18:18:51.787"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:51.791" level="INFO">${RESULT} = [{'diff': 0.0003388749999999989}, {'diff': 0.0003395560000000013}, {'diff': 0.00034008299999999797}, {'diff': 0.00034166700000000036}, {'diff': 0.0003391389999999987}, {'diff': 0.0003433889999999995},...</msg>
<status status="PASS" starttime="20201029 18:18:51.787" endtime="20201029 18:18:51.791"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:51.796" level="INFO">${ACCURACY} = {'diff': [0.0003388749999999989, 0.0003395560000000013, 0.00034008299999999797, 0.00034166700000000036, 0.0003391389999999987, 0.0003433889999999995, 0.000338790999999998, 0.00034145799999999935, 0.00...</msg>
<status status="PASS" starttime="20201029 18:18:51.792" endtime="20201029 18:18:51.796"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.800" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201029 18:18:51.799" endtime="20201029 18:18:51.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.803" level="INFO">VALUE: [0.0003388749999999989, 0.0003395560000000013, 0.00034008299999999797, 0.00034166700000000036, 0.0003391389999999987, 0.0003433889999999995, 0.000338790999999998, 0.00034145799999999935, 0.0003391389999999987, 0.000342888999999999, 0.0003385969999999995, 0.0003430699999999974, 0.0003393749999999994, 0.0003421119999999986, 0.00034027699999999994, 0.00034098600000000145, 0.00034072200000000163, 0.000341000000000001, 0.00033957000000000084, 0.00033875000000000224, 0.0003412360000000017, 0.00034141599999999717, 0.0003411390000000007, 0.0003392359999999997, 0.0003430700000000009, 0.00034252800000000166, 0.00034015300000000276, 0.00034154200000000023, 0.0003427219999999967, 0.0003439720000000049, 0.00033977699999999944, 0.00033948599999999995, 0.0003402779999999994, 0.0003421529999999978, 0.00034231900000000065, 0.00033788900000000094, 0.00033788900000000094, 0.00034251399999999516, 0.00034198600000000245, 0.0003433200000000011, 0.0003434309999999982, 0.0003401250000000036, 0.0003422500000000023, 0.00034429199999999605, 0.000341679999999997, 0.00034370800000000507, 0.00034131899999999965, 0.0003384719999999994, 0.000341000000000001, 0.00034237499999999893]</msg>
<status status="PASS" starttime="20201029 18:18:51.801" endtime="20201029 18:18:51.804"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.797" endtime="20201029 18:18:51.804"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:51.808" endtime="20201029 18:18:51.827"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.806" endtime="20201029 18:18:51.828"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.805" endtime="20201029 18:18:51.828"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.427" endtime="20201029 18:18:51.829"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.426" endtime="20201029 18:18:51.829"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.838" endtime="20201029 18:18:51.874"></status>
</kw>
<msg timestamp="20201029 18:18:51.875" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:51.836" endtime="20201029 18:18:51.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.878" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:51.876" endtime="20201029 18:18:51.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.879" endtime="20201029 18:18:51.881"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.834" endtime="20201029 18:18:51.881"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.831" endtime="20201029 18:18:51.882"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.888" endtime="20201029 18:18:52.175"></status>
</kw>
<msg timestamp="20201029 18:18:52.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022233736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022588236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:51.887" endtime="20201029 18:18:52.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022233736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022588236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:52.180" endtime="20201029 18:18:52.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.188" endtime="20201029 18:18:52.190"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.884" endtime="20201029 18:18:52.190"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.882" endtime="20201029 18:18:52.191"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:52.195" level="INFO">${RESULT} = [{'diff': 0.00035450000000000065}, {'diff': 0.00034316700000000186}, {'diff': 0.0003415559999999998}, {'diff': 0.00034086100000000133}, {'diff': 0.00034372200000000117}, {'diff': 0.0003440689999999989...</msg>
<status status="PASS" starttime="20201029 18:18:52.191" endtime="20201029 18:18:52.195"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:52.199" level="INFO">${ACCURACY} = {'diff': [0.00035450000000000065, 0.00034316700000000186, 0.0003415559999999998, 0.00034086100000000133, 0.00034372200000000117, 0.00034406899999999893, 0.00034045799999999835, 0.0003407230000000011, ...</msg>
<status status="PASS" starttime="20201029 18:18:52.196" endtime="20201029 18:18:52.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.203" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201029 18:18:52.202" endtime="20201029 18:18:52.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.206" level="INFO">VALUE: [0.00035450000000000065, 0.00034316700000000186, 0.0003415559999999998, 0.00034086100000000133, 0.00034372200000000117, 0.00034406899999999893, 0.00034045799999999835, 0.0003407230000000011, 0.0003383190000000001, 0.0003434439999999983, 0.0003403199999999981, 0.0003402779999999994, 0.00033852800000000113, 0.0003379449999999992, 0.00034083400000000166, 0.00034381900000000215, 0.0003405840000000014, 0.0003436110000000006, 0.0003420279999999977, 0.00034429100000000004, 0.00033997300000000036, 0.0003392359999999997, 0.00034334800000000026, 0.000338999999999999, 0.0003401390000000032, 0.0003383329999999962, 0.00034141699999999664, 0.0003423889999999985, 0.0003378199999999956, 0.00033801400000000453, 0.00034390299999999957, 0.0003396669999999949, 0.0003431110000000001, 0.0003398610000000038, 0.0003434309999999982, 0.00034180600000000005, 0.00033870899999999954, 0.0003382229999999986, 0.000342485999999996, 0.00033965300000000226, 0.0003405000000000005, 0.0003377499999999978, 0.0003436110000000006, 0.00034016700000000233, 0.0003441669999999994, 0.0003422500000000023, 0.00033798599999999845, 0.0003390700000000038, 0.00034281900000000115, 0.0003381809999999999]</msg>
<status status="PASS" starttime="20201029 18:18:52.205" endtime="20201029 18:18:52.207"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.200" endtime="20201029 18:18:52.207"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:52.211" endtime="20201029 18:18:52.231"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.209" endtime="20201029 18:18:52.231"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.208" endtime="20201029 18:18:52.232"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.830" endtime="20201029 18:18:52.232"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.829" endtime="20201029 18:18:52.232"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.241" endtime="20201029 18:18:52.280"></status>
</kw>
<msg timestamp="20201029 18:18:52.281" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:52.239" endtime="20201029 18:18:52.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.283" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:52.282" endtime="20201029 18:18:52.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.285" endtime="20201029 18:18:52.286"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.237" endtime="20201029 18:18:52.287"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.235" endtime="20201029 18:18:52.287"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.294" endtime="20201029 18:18:52.579"></status>
</kw>
<msg timestamp="20201029 18:18:52.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026050444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026388861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:52.292" endtime="20201029 18:18:52.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026050444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026388861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:52.584" endtime="20201029 18:18:52.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.592" endtime="20201029 18:18:52.594"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.290" endtime="20201029 18:18:52.594"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.288" endtime="20201029 18:18:52.595"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:52.599" level="INFO">${RESULT} = [{'diff': 0.0003384170000000006}, {'diff': 0.0003441659999999999}, {'diff': 0.00034272299999999964}, {'diff': 0.00033870800000000006}, {'diff': 0.0003383749999999984}, {'diff': 0.000341097000000002}, ...</msg>
<status status="PASS" starttime="20201029 18:18:52.596" endtime="20201029 18:18:52.599"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:52.603" level="INFO">${ACCURACY} = {'diff': [0.0003384170000000006, 0.0003441659999999999, 0.00034272299999999964, 0.00033870800000000006, 0.0003383749999999984, 0.000341097000000002, 0.0003414300000000002, 0.0003441249999999972, 0.000...</msg>
<status status="PASS" starttime="20201029 18:18:52.600" endtime="20201029 18:18:52.603"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.608" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201029 18:18:52.606" endtime="20201029 18:18:52.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.610" level="INFO">VALUE: [0.0003384170000000006, 0.0003441659999999999, 0.00034272299999999964, 0.00033870800000000006, 0.0003383749999999984, 0.000341097000000002, 0.0003414300000000002, 0.0003441249999999972, 0.0003417079999999996, 0.00034322300000000014, 0.0003432499999999998, 0.00033986100000000033, 0.00033922200000000013, 0.0003390420000000012, 0.00034408299999999503, 0.0003402779999999994, 0.0003377359999999982, 0.0003408049999999996, 0.0003437079999999981, 0.000337888999999994, 0.00034445899999999835, 0.00034130599999999955, 0.0003429999999999961, 0.000339597000000004, 0.0003432500000000033, 0.0003430690000000014, 0.00033987499999999643, 0.00034351399999999616, 0.000338403000000001, 0.0003396659999999954, 0.00033816700000000033, 0.0003378610000000018, 0.00034215199999999835, 0.00034087499999999743, 0.0003407779999999999, 0.00034042999999999574, 0.00034202800000000116, 0.0003401669999999954, 0.00034154200000000023, 0.0003409030000000035, 0.000339612000000003, 0.0003433340000000007, 0.0003413469999999988, 0.00033898599999999945, 0.0003439999999999971, 0.00034323599999999677, 0.00034070900000000154, 0.00034120800000000256, 0.0003389719999999999, 0.0003422500000000023]</msg>
<status status="PASS" starttime="20201029 18:18:52.609" endtime="20201029 18:18:52.612"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.604" endtime="20201029 18:18:52.612"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:52.616" endtime="20201029 18:18:52.636"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.615" endtime="20201029 18:18:52.636"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.613" endtime="20201029 18:18:52.637"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.233" endtime="20201029 18:18:52.637"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.232" endtime="20201029 18:18:52.637"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.646" endtime="20201029 18:18:52.682"></status>
</kw>
<msg timestamp="20201029 18:18:52.682" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:52.644" endtime="20201029 18:18:52.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:52.684" endtime="20201029 18:18:52.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.686" endtime="20201029 18:18:52.688"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.642" endtime="20201029 18:18:52.688"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.639" endtime="20201029 18:18:52.689"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.695" endtime="20201029 18:18:52.981"></status>
</kw>
<msg timestamp="20201029 18:18:52.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022951458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023311722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:52.694" endtime="20201029 18:18:52.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022951458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023311722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:52.986" endtime="20201029 18:18:52.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.994" endtime="20201029 18:18:52.996"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.691" endtime="20201029 18:18:52.996"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.689" endtime="20201029 18:18:52.997"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:53.001" level="INFO">${RESULT} = [{'diff': 0.00036026399999999903}, {'diff': 0.00033948599999999995}, {'diff': 0.00034280600000000105}, {'diff': 0.0003410689999999994}, {'diff': 0.0003388330000000002}, {'diff': 0.00034249999999999906...</msg>
<status status="PASS" starttime="20201029 18:18:52.997" endtime="20201029 18:18:53.001"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:53.006" level="INFO">${ACCURACY} = {'diff': [0.00036026399999999903, 0.00033948599999999995, 0.00034280600000000105, 0.0003410689999999994, 0.0003388330000000002, 0.00034249999999999906, 0.00033938899999999897, 0.0003414720000000024, 0...</msg>
<status status="PASS" starttime="20201029 18:18:53.002" endtime="20201029 18:18:53.006"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.010" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201029 18:18:53.009" endtime="20201029 18:18:53.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.013" level="INFO">VALUE: [0.00036026399999999903, 0.00033948599999999995, 0.00034280600000000105, 0.0003410689999999994, 0.0003388330000000002, 0.00034249999999999906, 0.00033938899999999897, 0.0003414720000000024, 0.0003380420000000002, 0.0003388190000000006, 0.00033968099999999793, 0.00034291699999999814, 0.00033941599999999864, 0.0003392779999999984, 0.0003391389999999987, 0.0003421109999999991, 0.0003419019999999981, 0.000343195000000001, 0.00034231900000000065, 0.00034126400000000084, 0.0003441659999999999, 0.0003379030000000005, 0.00034411099999999764, 0.0003383610000000023, 0.0003434309999999982, 0.0003382499999999983, 0.00033948599999999995, 0.00034190299999999757, 0.00033809699999999554, 0.0003406529999999963, 0.0003439449999999983, 0.00033837500000000187, 0.0003377499999999978, 0.00034363899999999975, 0.00033936200000000277, 0.0003434720000000044, 0.0003442780000000034, 0.000340387999999997, 0.00034441699999999964, 0.000341791000000001, 0.000340888999999997, 0.0003392499999999993, 0.00034413900000000025, 0.00034370800000000507, 0.0003420140000000016, 0.00034379099999999607, 0.0003436810000000054, 0.0003380970000000025, 0.0003389589999999998, 0.00034240299999999807]</msg>
<status status="PASS" starttime="20201029 18:18:53.011" endtime="20201029 18:18:53.014"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.006" endtime="20201029 18:18:53.014"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:53.018" endtime="20201029 18:18:53.037"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.016" endtime="20201029 18:18:53.038"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.015" endtime="20201029 18:18:53.038"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.638" endtime="20201029 18:18:53.039"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.637" endtime="20201029 18:18:53.039"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.048" endtime="20201029 18:18:53.085"></status>
</kw>
<msg timestamp="20201029 18:18:53.085" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:53.046" endtime="20201029 18:18:53.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:53.086" endtime="20201029 18:18:53.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.089" endtime="20201029 18:18:53.091"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.044" endtime="20201029 18:18:53.091"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.041" endtime="20201029 18:18:53.092"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.098" endtime="20201029 18:18:53.386"></status>
</kw>
<msg timestamp="20201029 18:18:53.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023069542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023412389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:53.097" endtime="20201029 18:18:53.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023069542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023412389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:53.390" endtime="20201029 18:18:53.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.398" endtime="20201029 18:18:53.400"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.094" endtime="20201029 18:18:53.400"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.092" endtime="20201029 18:18:53.401"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:53.405" level="INFO">${RESULT} = [{'diff': 0.0003428470000000003}, {'diff': 0.00034181900000000015}, {'diff': 0.0003404450000000017}, {'diff': 0.0003437500000000003}, {'diff': 0.0003442219999999982}, {'diff': 0.0003414300000000002}, ...</msg>
<status status="PASS" starttime="20201029 18:18:53.402" endtime="20201029 18:18:53.405"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:53.409" level="INFO">${ACCURACY} = {'diff': [0.0003428470000000003, 0.00034181900000000015, 0.0003404450000000017, 0.0003437500000000003, 0.0003442219999999982, 0.0003414300000000002, 0.000338597000000003, 0.0003389589999999998, 0.0003...</msg>
<status status="PASS" starttime="20201029 18:18:53.406" endtime="20201029 18:18:53.409"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.414" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201029 18:18:53.412" endtime="20201029 18:18:53.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.416" level="INFO">VALUE: [0.0003428470000000003, 0.00034181900000000015, 0.0003404450000000017, 0.0003437500000000003, 0.0003442219999999982, 0.0003414300000000002, 0.000338597000000003, 0.0003389589999999998, 0.0003410140000000006, 0.0003443189999999992, 0.0003428750000000029, 0.0003430560000000013, 0.0003394169999999981, 0.0003429310000000012, 0.00034390299999999957, 0.0003421390000000017, 0.00033969500000000097, 0.00033991599999999914, 0.0003423339999999997, 0.0003409309999999992, 0.0003407779999999999, 0.0003406949999999985, 0.0003412360000000017, 0.00033936099999999636, 0.0003407500000000008, 0.0003398049999999986, 0.0003387359999999992, 0.0003385700000000033, 0.00033954199999999823, 0.0003434999999999966, 0.0003420560000000003, 0.00034097199999999495, 0.0003431799999999985, 0.0003390689999999974, 0.00034319500000000447, 0.00034016700000000233, 0.0003439999999999971, 0.0003396250000000031, 0.00033955600000000474, 0.0003416810000000034, 0.0003423889999999985, 0.00034026399999999984, 0.0003406380000000042, 0.0003415000000000015, 0.0003432910000000025, 0.0003416390000000047, 0.00033870899999999954, 0.00034159699999999904, 0.00034308300000000097, 0.00034401399999999666]</msg>
<status status="PASS" starttime="20201029 18:18:53.415" endtime="20201029 18:18:53.417"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.410" endtime="20201029 18:18:53.417"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:53.421" endtime="20201029 18:18:53.441"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.420" endtime="20201029 18:18:53.441"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.418" endtime="20201029 18:18:53.442"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.040" endtime="20201029 18:18:53.442"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.039" endtime="20201029 18:18:53.442"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.451" endtime="20201029 18:18:53.491"></status>
</kw>
<msg timestamp="20201029 18:18:53.492" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:53.449" endtime="20201029 18:18:53.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.495" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:53.493" endtime="20201029 18:18:53.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.496" endtime="20201029 18:18:53.497"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.447" endtime="20201029 18:18:53.498"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.445" endtime="20201029 18:18:53.498"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.505" endtime="20201029 18:18:53.791"></status>
</kw>
<msg timestamp="20201029 18:18:53.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026728361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027086167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:53.503" endtime="20201029 18:18:53.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026728361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027086167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:53.795" endtime="20201029 18:18:53.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.804" endtime="20201029 18:18:53.805"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.501" endtime="20201029 18:18:53.806"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.499" endtime="20201029 18:18:53.806"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:53.810" level="INFO">${RESULT} = [{'diff': 0.0003578060000000022}, {'diff': 0.0003434730000000004}, {'diff': 0.00034318100000000143}, {'diff': 0.0003438200000000016}, {'diff': 0.00033940299999999854}, {'diff': 0.000339194000000001}, ...</msg>
<status status="PASS" starttime="20201029 18:18:53.807" endtime="20201029 18:18:53.811"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:53.815" level="INFO">${ACCURACY} = {'diff': [0.0003578060000000022, 0.0003434730000000004, 0.00034318100000000143, 0.0003438200000000016, 0.00033940299999999854, 0.000339194000000001, 0.00034029200000000245, 0.0003408750000000009, 0.00...</msg>
<status status="PASS" starttime="20201029 18:18:53.811" endtime="20201029 18:18:53.815"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.819" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201029 18:18:53.818" endtime="20201029 18:18:53.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.822" level="INFO">VALUE: [0.0003578060000000022, 0.0003434730000000004, 0.00034318100000000143, 0.0003438200000000016, 0.00033940299999999854, 0.000339194000000001, 0.00034029200000000245, 0.0003408750000000009, 0.0003416660000000009, 0.0003383329999999997, 0.000339306000000001, 0.0003394299999999982, 0.0003421249999999987, 0.000339790999999999, 0.0003427920000000015, 0.0003393049999999981, 0.00034190299999999757, 0.00034287499999999943, 0.0003412910000000005, 0.000343889, 0.00033902700000000563, 0.0003394860000000069, 0.0003400139999999996, 0.00034220800000000356, 0.00033872199999999963, 0.0003442219999999982, 0.00034302699999999575, 0.00034105600000000624, 0.00034304200000000173, 0.00034409700000000154, 0.0003403610000000043, 0.00034258300000000047, 0.0003397360000000002, 0.00033883300000000366, 0.00034354200000000223, 0.00033905499999999783, 0.00034319499999999753, 0.0003428470000000003, 0.00033998600000000045, 0.00034161100000000555, 0.0003381529999999938, 0.0003380559999999963, 0.00034315199999999935, 0.00034356899999999496, 0.00033988900000000294, 0.00033883300000000366, 0.0003399030000000025, 0.0003395139999999991, 0.00034334800000000026, 0.00033793099999999965]</msg>
<status status="PASS" starttime="20201029 18:18:53.820" endtime="20201029 18:18:53.823"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.815" endtime="20201029 18:18:53.824"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:53.828" endtime="20201029 18:18:53.847"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.826" endtime="20201029 18:18:53.848"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.825" endtime="20201029 18:18:53.848"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.443" endtime="20201029 18:18:53.848"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.442" endtime="20201029 18:18:53.848"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.857" endtime="20201029 18:18:53.893"></status>
</kw>
<msg timestamp="20201029 18:18:53.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:53.856" endtime="20201029 18:18:53.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:53.895" endtime="20201029 18:18:53.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.897" endtime="20201029 18:18:53.899"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.853" endtime="20201029 18:18:53.900"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.851" endtime="20201029 18:18:53.900"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.908" endtime="20201029 18:18:54.194"></status>
</kw>
<msg timestamp="20201029 18:18:54.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022248694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022596972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:53.906" endtime="20201029 18:18:54.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:54.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022248694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022596972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:54.198" endtime="20201029 18:18:54.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:54.207" endtime="20201029 18:18:54.208"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.903" endtime="20201029 18:18:54.209"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.901" endtime="20201029 18:18:54.209"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:54.214" level="INFO">${RESULT} = [{'diff': 0.0003482780000000005}, {'diff': 0.0003418329999999997}, {'diff': 0.0003404439999999988}, {'diff': 0.00033876399999999834}, {'diff': 0.00034259700000000004}, {'diff': 0.0003382499999999983},...</msg>
<status status="PASS" starttime="20201029 18:18:54.210" endtime="20201029 18:18:54.214"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:54.218" level="INFO">${ACCURACY} = {'diff': [0.0003482780000000005, 0.0003418329999999997, 0.0003404439999999988, 0.00033876399999999834, 0.00034259700000000004, 0.0003382499999999983, 0.0003403329999999982, 0.000338999999999999, 0.000...</msg>
<status status="PASS" starttime="20201029 18:18:54.215" endtime="20201029 18:18:54.219"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:54.223" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201029 18:18:54.222" endtime="20201029 18:18:54.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:54.226" level="INFO">VALUE: [0.0003482780000000005, 0.0003418329999999997, 0.0003404439999999988, 0.00033876399999999834, 0.00034259700000000004, 0.0003382499999999983, 0.0003403329999999982, 0.000338999999999999, 0.0003434720000000009, 0.00033802700000000116, 0.0003435140000000031, 0.00033954099999999876, 0.00034195799999999985, 0.00033837500000000187, 0.0003438469999999978, 0.00034109699999999854, 0.00033787500000000137, 0.000338500000000002, 0.0003386940000000005, 0.0003426950000000005, 0.00034397199999999795, 0.00034418099999999896, 0.00034223599999999924, 0.00033925000000000274, 0.00034013899999999625, 0.00034142999999999674, 0.0003382359999999987, 0.00033920800000000056, 0.00034281900000000115, 0.0003393329999999972, 0.00034340299999999907, 0.00034202800000000116, 0.0003383610000000023, 0.0003394720000000004, 0.0003427500000000028, 0.00034408300000000197, 0.0003392909999999985, 0.00034237499999999893, 0.0003381390000000012, 0.00034302800000000216, 0.00034258399999999994, 0.00034222200000000313, 0.0003409449999999953, 0.0003382920000000039, 0.00034086099999999786, 0.0003423610000000063, 0.0003424579999999969, 0.0003427500000000028, 0.00034269499999999703, 0.0003379170000000001]</msg>
<status status="PASS" starttime="20201029 18:18:54.224" endtime="20201029 18:18:54.226"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.219" endtime="20201029 18:18:54.227"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:54.231" endtime="20201029 18:18:54.250"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.229" endtime="20201029 18:18:54.251"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.228" endtime="20201029 18:18:54.251"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.849" endtime="20201029 18:18:54.251"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.849" endtime="20201029 18:18:54.252"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:54.261" endtime="20201029 18:18:54.295"></status>
</kw>
<msg timestamp="20201029 18:18:54.295" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:54.259" endtime="20201029 18:18:54.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:54.298" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:54.296" endtime="20201029 18:18:54.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:54.299" endtime="20201029 18:18:54.301"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.256" endtime="20201029 18:18:54.301"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.254" endtime="20201029 18:18:54.302"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:54.308" endtime="20201029 18:18:54.595"></status>
</kw>
<msg timestamp="20201029 18:18:54.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021098847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021455847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:54.307" endtime="20201029 18:18:54.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:54.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021098847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021455847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:54.599" endtime="20201029 18:18:54.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:54.607" endtime="20201029 18:18:54.609"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.304" endtime="20201029 18:18:54.610"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.302" endtime="20201029 18:18:54.610"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:54.614" level="INFO">${RESULT} = [{'diff': 0.0003569999999999997}, {'diff': 0.0003414019999999976}, {'diff': 0.0003434449999999978}, {'diff': 0.00034147300000000186}, {'diff': 0.0003400840000000009}, {'diff': 0.000341985999999999}, {...</msg>
<status status="PASS" starttime="20201029 18:18:54.611" endtime="20201029 18:18:54.615"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:54.619" level="INFO">${ACCURACY} = {'diff': [0.0003569999999999997, 0.0003414019999999976, 0.0003434449999999978, 0.00034147300000000186, 0.0003400840000000009, 0.000341985999999999, 0.0003377780000000004, 0.0003384719999999994, 0.0003...</msg>
<status status="PASS" starttime="20201029 18:18:54.615" endtime="20201029 18:18:54.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:54.623" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201029 18:18:54.622" endtime="20201029 18:18:54.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:54.626" level="INFO">VALUE: [0.0003569999999999997, 0.0003414019999999976, 0.0003434449999999978, 0.00034147300000000186, 0.0003400840000000009, 0.000341985999999999, 0.0003377780000000004, 0.0003384719999999994, 0.0003405140000000001, 0.00034227700000000194, 0.0003428470000000003, 0.00034148600000000195, 0.00034133400000000216, 0.00034004199999999873, 0.0003432219999999972, 0.0003425000000000025, 0.00034086100000000133, 0.00034222199999999967, 0.00033965300000000226, 0.000340598000000001, 0.00034008299999999797, 0.0003403469999999978, 0.00034333299999999775, 0.000340306000000002, 0.00033815300000000076, 0.0003392359999999997, 0.00033820799999999956, 0.0003379589999999988, 0.0003393199999999971, 0.00033887500000000237, 0.0003400689999999984, 0.00034402800000000316, 0.0003426529999999983, 0.0003425700000000004, 0.00034422299999999767, 0.00033922200000000013, 0.0003427370000000027, 0.00034011100000000405, 0.0003443890000000005, 0.00033833300000000316, 0.00034030599999999855, 0.00034072200000000163, 0.0003382640000000048, 0.0003389160000000016, 0.00034305500000000183, 0.00033898599999999945, 0.0003395139999999991, 0.00034422200000000513, 0.00034406999999999494, 0.0003426669999999979]</msg>
<status status="PASS" starttime="20201029 18:18:54.624" endtime="20201029 18:18:54.626"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.619" endtime="20201029 18:18:54.627"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:54.631" endtime="20201029 18:18:54.650"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.629" endtime="20201029 18:18:54.651"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.628" endtime="20201029 18:18:54.651"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.253" endtime="20201029 18:18:54.651"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.252" endtime="20201029 18:18:54.652"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:54.661" endtime="20201029 18:18:54.696"></status>
</kw>
<msg timestamp="20201029 18:18:54.697" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:54.659" endtime="20201029 18:18:54.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:54.699" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:54.698" endtime="20201029 18:18:54.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:54.701" endtime="20201029 18:18:54.702"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.656" endtime="20201029 18:18:54.703"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.654" endtime="20201029 18:18:54.703"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:54.710" endtime="20201029 18:18:54.995"></status>
</kw>
<msg timestamp="20201029 18:18:54.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022957125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023306625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:54.708" endtime="20201029 18:18:54.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:55.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022957125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023306625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:55.000" endtime="20201029 18:18:55.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:55.008" endtime="20201029 18:18:55.010"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.706" endtime="20201029 18:18:55.010"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.704" endtime="20201029 18:18:55.011"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:55.015" level="INFO">${RESULT} = [{'diff': 0.0003495000000000026}, {'diff': 0.0003406249999999972}, {'diff': 0.0003425979999999995}, {'diff': 0.0003427639999999989}, {'diff': 0.00033934799999999973}, {'diff': 0.0003411390000000007}, ...</msg>
<status status="PASS" starttime="20201029 18:18:55.012" endtime="20201029 18:18:55.015"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:55.019" level="INFO">${ACCURACY} = {'diff': [0.0003495000000000026, 0.0003406249999999972, 0.0003425979999999995, 0.0003427639999999989, 0.00033934799999999973, 0.0003411390000000007, 0.0003384449999999997, 0.0003433609999999969, 0.000...</msg>
<status status="PASS" starttime="20201029 18:18:55.016" endtime="20201029 18:18:55.019"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:55.024" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201029 18:18:55.023" endtime="20201029 18:18:55.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:55.026" level="INFO">VALUE: [0.0003495000000000026, 0.0003406249999999972, 0.0003425979999999995, 0.0003427639999999989, 0.00033934799999999973, 0.0003411390000000007, 0.0003384449999999997, 0.0003433609999999969, 0.00034340300000000254, 0.00034206899999999693, 0.00034266700000000136, 0.00034377799999999945, 0.0003379719999999989, 0.00033870899999999954, 0.0003428470000000003, 0.000341985999999999, 0.0003392640000000023, 0.00033838900000000144, 0.00034280600000000105, 0.00034149999999999806, 0.0003413469999999988, 0.0003412370000000012, 0.00034030599999999855, 0.0003415000000000015, 0.0003410140000000006, 0.00034165300000000426, 0.0003398469999999973, 0.000340194000000002, 0.0003384719999999994, 0.000342679999999998, 0.0003437360000000042, 0.0003406249999999972, 0.0003431529999999988, 0.00034118099999999596, 0.00033993100000000165, 0.0003380840000000024, 0.0003397499999999998, 0.0003439439999999988, 0.0003419859999999955, 0.00034431900000000265, 0.0003387919999999975, 0.000342888999999999, 0.0003433330000000012, 0.0003396390000000027, 0.00033788900000000094, 0.0003386250000000021, 0.000343777999999996, 0.0003440409999999963, 0.0003393889999999955, 0.0003408049999999996]</msg>
<status status="PASS" starttime="20201029 18:18:55.025" endtime="20201029 18:18:55.028"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.020" endtime="20201029 18:18:55.028"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:55.032" endtime="20201029 18:18:55.052"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.031" endtime="20201029 18:18:55.052"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.029" endtime="20201029 18:18:55.053"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.653" endtime="20201029 18:18:55.053"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.652" endtime="20201029 18:18:55.053"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:55.062" endtime="20201029 18:18:55.098"></status>
</kw>
<msg timestamp="20201029 18:18:55.099" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:55.061" endtime="20201029 18:18:55.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:55.101" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:55.100" endtime="20201029 18:18:55.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:55.102" endtime="20201029 18:18:55.104"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.058" endtime="20201029 18:18:55.104"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.056" endtime="20201029 18:18:55.105"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:55.111" endtime="20201029 18:18:55.398"></status>
</kw>
<msg timestamp="20201029 18:18:55.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023243653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023600014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:55.110" endtime="20201029 18:18:55.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:55.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023243653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023600014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:55.402" endtime="20201029 18:18:55.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:55.410" endtime="20201029 18:18:55.412"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.107" endtime="20201029 18:18:55.413"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.105" endtime="20201029 18:18:55.413"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:55.417" level="INFO">${RESULT} = [{'diff': 0.0003563609999999995}, {'diff': 0.00033868099999999693}, {'diff': 0.000341097999999998}, {'diff': 0.00034373599999999727}, {'diff': 0.0003394860000000034}, {'diff': 0.00033830500000000055},...</msg>
<status status="PASS" starttime="20201029 18:18:55.414" endtime="20201029 18:18:55.417"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:55.422" level="INFO">${ACCURACY} = {'diff': [0.0003563609999999995, 0.00033868099999999693, 0.000341097999999998, 0.00034373599999999727, 0.0003394860000000034, 0.00033830500000000055, 0.00034241699999999764, 0.0003435279999999992, 0.0...</msg>
<status status="PASS" starttime="20201029 18:18:55.418" endtime="20201029 18:18:55.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:55.427" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201029 18:18:55.426" endtime="20201029 18:18:55.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:55.429" level="INFO">VALUE: [0.0003563609999999995, 0.00033868099999999693, 0.000341097999999998, 0.00034373599999999727, 0.0003394860000000034, 0.00033830500000000055, 0.00034241699999999764, 0.0003435279999999992, 0.0003380269999999977, 0.00033780500000000005, 0.00034240299999999807, 0.00033822199999999913, 0.0003443890000000005, 0.000341292, 0.0003419170000000006, 0.0003403750000000004, 0.0003431390000000027, 0.000338306, 0.00033957000000000084, 0.00033926399999999884, 0.0003439449999999983, 0.0003399719999999974, 0.00034258300000000047, 0.00033798599999999845, 0.00034205500000000083, 0.0003429439999999978, 0.0003437079999999981, 0.0003419450000000032, 0.00033804199999999673, 0.00033888900000000194, 0.0003427500000000028, 0.0003439999999999971, 0.000343777999999996, 0.0003438749999999935, 0.0003381250000000016, 0.0003442079999999986, 0.0003386669999999939, 0.00034348600000000395, 0.0003400139999999996, 0.00034066700000000283, 0.00033983300000000466, 0.0003430130000000031, 0.00033904199999999773, 0.0003439999999999971, 0.0003406249999999972, 0.00034209699999999954, 0.00034226400000000184, 0.0003421109999999991, 0.0003379860000000054, 0.00033887500000000237]</msg>
<status status="PASS" starttime="20201029 18:18:55.428" endtime="20201029 18:18:55.430"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.423" endtime="20201029 18:18:55.430"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:55.434" endtime="20201029 18:18:55.454"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.433" endtime="20201029 18:18:55.454"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.431" endtime="20201029 18:18:55.455"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.054" endtime="20201029 18:18:55.455"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.054" endtime="20201029 18:18:55.455"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:55.464" endtime="20201029 18:18:55.501"></status>
</kw>
<msg timestamp="20201029 18:18:55.502" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:55.463" endtime="20201029 18:18:55.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:55.504" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:55.503" endtime="20201029 18:18:55.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:55.505" endtime="20201029 18:18:55.507"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.460" endtime="20201029 18:18:55.507"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.458" endtime="20201029 18:18:55.508"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:55.515" endtime="20201029 18:18:55.801"></status>
</kw>
<msg timestamp="20201029 18:18:55.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023189417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023523806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:55.513" endtime="20201029 18:18:55.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:55.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023189417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023523806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:55.805" endtime="20201029 18:18:55.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:55.813" endtime="20201029 18:18:55.815"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.510" endtime="20201029 18:18:55.815"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.508" endtime="20201029 18:18:55.816"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:55.820" level="INFO">${RESULT} = [{'diff': 0.0003343890000000009}, {'diff': 0.00033876299999999887}, {'diff': 0.0003424589999999998}, {'diff': 0.0003442079999999986}, {'diff': 0.00034086100000000133}, {'diff': 0.0003388480000000027},...</msg>
<status status="PASS" starttime="20201029 18:18:55.817" endtime="20201029 18:18:55.820"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:55.824" level="INFO">${ACCURACY} = {'diff': [0.0003343890000000009, 0.00033876299999999887, 0.0003424589999999998, 0.0003442079999999986, 0.00034086100000000133, 0.0003388480000000027, 0.0003434170000000021, 0.0003391109999999996, 0.00...</msg>
<status status="PASS" starttime="20201029 18:18:55.821" endtime="20201029 18:18:55.824"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:55.829" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201029 18:18:55.828" endtime="20201029 18:18:55.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:55.831" level="INFO">VALUE: [0.0003343890000000009, 0.00033876299999999887, 0.0003424589999999998, 0.0003442079999999986, 0.00034086100000000133, 0.0003388480000000027, 0.0003434170000000021, 0.0003391109999999996, 0.0003378610000000018, 0.0003411110000000016, 0.0003401109999999971, 0.00034176400000000134, 0.00034008300000000144, 0.00033938900000000244, 0.0003422080000000001, 0.0003380000000000015, 0.00033994400000000174, 0.0003402779999999994, 0.00034409700000000154, 0.0003392499999999993, 0.0003426109999999996, 0.0003406800000000029, 0.00033787500000000137, 0.00033902799999999816, 0.00033911100000000305, 0.00034259700000000004, 0.00033872199999999963, 0.0003429999999999961, 0.00034055499999999933, 0.00034424999999999734, 0.00033850000000000546, 0.0003430270000000027, 0.00033965300000000226, 0.0003416109999999986, 0.0003433479999999933, 0.00033888900000000194, 0.0003390970000000035, 0.0003418339999999992, 0.000343000000000003, 0.0003441669999999994, 0.0003434170000000056, 0.0003418050000000006, 0.0003404580000000018, 0.00034137499999999793, 0.00034276400000000234, 0.000340403000000003, 0.0003424170000000046, 0.00034286099999999986, 0.0003382779999999974, 0.0003441110000000011]</msg>
<status status="PASS" starttime="20201029 18:18:55.830" endtime="20201029 18:18:55.832"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.825" endtime="20201029 18:18:55.833"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:55.836" endtime="20201029 18:18:55.856"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.835" endtime="20201029 18:18:55.856"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.834" endtime="20201029 18:18:55.857"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.456" endtime="20201029 18:18:55.857"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.456" endtime="20201029 18:18:55.857"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:55.866" endtime="20201029 18:18:55.903"></status>
</kw>
<msg timestamp="20201029 18:18:55.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:55.864" endtime="20201029 18:18:55.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:55.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:55.904" endtime="20201029 18:18:55.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:55.907" endtime="20201029 18:18:55.908"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.862" endtime="20201029 18:18:55.909"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.860" endtime="20201029 18:18:55.909"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:55.916" endtime="20201029 18:18:56.202"></status>
</kw>
<msg timestamp="20201029 18:18:56.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023224417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023577083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:55.915" endtime="20201029 18:18:56.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:56.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023224417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023577083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:56.207" endtime="20201029 18:18:56.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:56.215" endtime="20201029 18:18:56.217"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.912" endtime="20201029 18:18:56.217"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.910" endtime="20201029 18:18:56.218"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:56.222" level="INFO">${RESULT} = [{'diff': 0.000352665999999998}, {'diff': 0.0003437080000000016}, {'diff': 0.0003425279999999982}, {'diff': 0.00034287499999999943}, {'diff': 0.0003404580000000018}, {'diff': 0.00034138900000000097}, ...</msg>
<status status="PASS" starttime="20201029 18:18:56.219" endtime="20201029 18:18:56.222"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:56.226" level="INFO">${ACCURACY} = {'diff': [0.000352665999999998, 0.0003437080000000016, 0.0003425279999999982, 0.00034287499999999943, 0.0003404580000000018, 0.00034138900000000097, 0.0003404580000000018, 0.0003379030000000005, 0.000...</msg>
<status status="PASS" starttime="20201029 18:18:56.223" endtime="20201029 18:18:56.226"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:56.230" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201029 18:18:56.229" endtime="20201029 18:18:56.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:56.233" level="INFO">VALUE: [0.000352665999999998, 0.0003437080000000016, 0.0003425279999999982, 0.00034287499999999943, 0.0003404580000000018, 0.00034138900000000097, 0.0003404580000000018, 0.0003379030000000005, 0.0003435409999999993, 0.0003387499999999988, 0.0003428750000000029, 0.0003420140000000016, 0.0003423200000000001, 0.00034322300000000014, 0.00034387500000000043, 0.0003436529999999993, 0.0003409719999999984, 0.00034119500000000247, 0.0003403880000000005, 0.00034208299999999997, 0.0003417920000000005, 0.00034368099999999846, 0.00034093100000000265, 0.0003415689999999999, 0.00033811100000000205, 0.0003403049999999991, 0.0003434999999999966, 0.00033801400000000453, 0.0003434309999999982, 0.00033783300000000266, 0.00034308400000000044, 0.0003412079999999956, 0.0003421250000000056, 0.0003411799999999965, 0.0003417230000000021, 0.00034363899999999975, 0.00034059699999999804, 0.0003432910000000025, 0.00033887499999999543, 0.0003392369999999992, 0.0003428340000000002, 0.0003439439999999988, 0.0003433470000000008, 0.00034369399999999856, 0.0003410689999999994, 0.00033936099999999636, 0.0003439309999999987, 0.0003443470000000018, 0.0003423330000000002, 0.0003429580000000043]</msg>
<status status="PASS" starttime="20201029 18:18:56.232" endtime="20201029 18:18:56.239"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.227" endtime="20201029 18:18:56.240"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:56.244" endtime="20201029 18:18:56.263"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.242" endtime="20201029 18:18:56.264"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.241" endtime="20201029 18:18:56.264"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.858" endtime="20201029 18:18:56.264"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.857" endtime="20201029 18:18:56.264"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:56.273" endtime="20201029 18:18:56.314"></status>
</kw>
<msg timestamp="20201029 18:18:56.315" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:56.272" endtime="20201029 18:18:56.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:56.317" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:56.316" endtime="20201029 18:18:56.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:56.318" endtime="20201029 18:18:56.320"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.269" endtime="20201029 18:18:56.320"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.267" endtime="20201029 18:18:56.321"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:56.328" endtime="20201029 18:18:56.614"></status>
</kw>
<msg timestamp="20201029 18:18:56.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022864181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023200514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:56.326" endtime="20201029 18:18:56.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:56.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022864181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023200514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:56.618" endtime="20201029 18:18:56.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:56.626" endtime="20201029 18:18:56.628"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.323" endtime="20201029 18:18:56.628"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.322" endtime="20201029 18:18:56.629"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:56.633" level="INFO">${RESULT} = [{'diff': 0.0003363329999999977}, {'diff': 0.00034259700000000004}, {'diff': 0.0003411530000000003}, {'diff': 0.00034340299999999907}, {'diff': 0.00034036100000000083}, {'diff': 0.0003411520000000008}...</msg>
<status status="PASS" starttime="20201029 18:18:56.630" endtime="20201029 18:18:56.633"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:56.638" level="INFO">${ACCURACY} = {'diff': [0.0003363329999999977, 0.00034259700000000004, 0.0003411530000000003, 0.00034340299999999907, 0.00034036100000000083, 0.0003411520000000008, 0.00033934700000000026, 0.00034076400000000034, 0...</msg>
<status status="PASS" starttime="20201029 18:18:56.634" endtime="20201029 18:18:56.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:56.643" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201029 18:18:56.641" endtime="20201029 18:18:56.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:56.645" level="INFO">VALUE: [0.0003363329999999977, 0.00034259700000000004, 0.0003411530000000003, 0.00034340299999999907, 0.00034036100000000083, 0.0003411520000000008, 0.00033934700000000026, 0.00034076400000000034, 0.00034168099999999993, 0.00033988899999999947, 0.0003409439999999993, 0.00033808299999999944, 0.0003442219999999982, 0.000338403000000001, 0.0003429590000000003, 0.0003392499999999993, 0.00034163899999999775, 0.00033837500000000187, 0.000340985999999998, 0.00034140300000000054, 0.0003382640000000013, 0.0003419310000000002, 0.0003382780000000009, 0.0003378469999999953, 0.0003384999999999985, 0.00033986099999999686, 0.0003405699999999984, 0.0003430549999999949, 0.00033998600000000045, 0.00033990299999999557, 0.00034295899999999685, 0.00033972200000000063, 0.0003418199999999996, 0.00034105499999999983, 0.00034397199999999795, 0.0003417920000000005, 0.0003384719999999994, 0.00034304200000000173, 0.0003445140000000041, 0.00033911100000000305, 0.0003431810000000049, 0.0003427780000000019, 0.0003424720000000034, 0.0003425690000000009, 0.0003402219999999942, 0.0003416529999999973, 0.0003414170000000036, 0.00034086099999999786, 0.0003437500000000038, 0.00033847299999999886]</msg>
<status status="PASS" starttime="20201029 18:18:56.644" endtime="20201029 18:18:56.646"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.639" endtime="20201029 18:18:56.646"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:56.650" endtime="20201029 18:18:56.670"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.649" endtime="20201029 18:18:56.670"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.647" endtime="20201029 18:18:56.671"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.265" endtime="20201029 18:18:56.671"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.265" endtime="20201029 18:18:56.671"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:56.680" endtime="20201029 18:18:56.716"></status>
</kw>
<msg timestamp="20201029 18:18:56.717" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:56.678" endtime="20201029 18:18:56.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:56.719" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:56.718" endtime="20201029 18:18:56.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:56.720" endtime="20201029 18:18:56.722"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.676" endtime="20201029 18:18:56.722"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.674" endtime="20201029 18:18:56.723"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:56.729" endtime="20201029 18:18:57.017"></status>
</kw>
<msg timestamp="20201029 18:18:57.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023215083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023551069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:56.728" endtime="20201029 18:18:57.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:57.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023215083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023551069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:57.021" endtime="20201029 18:18:57.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:57.030" endtime="20201029 18:18:57.031"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.725" endtime="20201029 18:18:57.032"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.724" endtime="20201029 18:18:57.032"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:57.036" level="INFO">${RESULT} = [{'diff': 0.0003359859999999999}, {'diff': 0.00034319399999999806}, {'diff': 0.00033779199999999995}, {'diff': 0.0003435980000000005}, {'diff': 0.00034144499999999925}, {'diff': 0.00033880500000000105...</msg>
<status status="PASS" starttime="20201029 18:18:57.033" endtime="20201029 18:18:57.037"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:57.041" level="INFO">${ACCURACY} = {'diff': [0.0003359859999999999, 0.00034319399999999806, 0.00033779199999999995, 0.0003435980000000005, 0.00034144499999999925, 0.00033880500000000105, 0.0003430140000000026, 0.0003401529999999993, 0....</msg>
<status status="PASS" starttime="20201029 18:18:57.037" endtime="20201029 18:18:57.041"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:57.045" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201029 18:18:57.044" endtime="20201029 18:18:57.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:57.048" level="INFO">VALUE: [0.0003359859999999999, 0.00034319399999999806, 0.00033779199999999995, 0.0003435980000000005, 0.00034144499999999925, 0.00033880500000000105, 0.0003430140000000026, 0.0003401529999999993, 0.00034172200000000263, 0.0003377229999999981, 0.00034322200000000067, 0.00033756899999999937, 0.00033956900000000137, 0.00033930599999999755, 0.00033776399999999734, 0.000338403000000001, 0.00033884699999999976, 0.0003395840000000004, 0.00034395800000000185, 0.00033806999999999934, 0.0003393749999999994, 0.0003439309999999987, 0.0003399439999999983, 0.00034122200000000213, 0.00033858399999999594, 0.0003410689999999994, 0.0003430560000000013, 0.00033990200000000304, 0.00034005499999999883, 0.000339403000000002, 0.0003424160000000051, 0.00033908299999999697, 0.00034036099999999736, 0.0003435549999999954, 0.00033955499999999833, 0.0003416390000000047, 0.00034252800000000166, 0.0003419309999999967, 0.000342777999999995, 0.0003398049999999986, 0.0003441799999999995, 0.00033838900000000144, 0.00034402800000000316, 0.0003402370000000002, 0.00033926399999999884, 0.0003425140000000021, 0.0003426109999999996, 0.000338291999999997, 0.00033822199999999913, 0.0003379449999999992]</msg>
<status status="PASS" starttime="20201029 18:18:57.046" endtime="20201029 18:18:57.048"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.041" endtime="20201029 18:18:57.049"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:57.053" endtime="20201029 18:18:57.072"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.051" endtime="20201029 18:18:57.073"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.050" endtime="20201029 18:18:57.073"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.672" endtime="20201029 18:18:57.074"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.671" endtime="20201029 18:18:57.074"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:57.083" endtime="20201029 18:18:57.124"></status>
</kw>
<msg timestamp="20201029 18:18:57.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:57.081" endtime="20201029 18:18:57.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:57.127" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:57.126" endtime="20201029 18:18:57.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:57.128" endtime="20201029 18:18:57.130"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.078" endtime="20201029 18:18:57.130"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.076" endtime="20201029 18:18:57.131"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:57.137" endtime="20201029 18:18:57.423"></status>
</kw>
<msg timestamp="20201029 18:18:57.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027495764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027834097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:57.136" endtime="20201029 18:18:57.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:57.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027495764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027834097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:57.427" endtime="20201029 18:18:57.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:57.435" endtime="20201029 18:18:57.437"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.133" endtime="20201029 18:18:57.438"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.131" endtime="20201029 18:18:57.438"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:57.442" level="INFO">${RESULT} = [{'diff': 0.0003383329999999997}, {'diff': 0.00034237499999999893}, {'diff': 0.00034112500000000115}, {'diff': 0.00034148600000000195}, {'diff': 0.00034122200000000213}, {'diff': 0.0003435970000000010...</msg>
<status status="PASS" starttime="20201029 18:18:57.439" endtime="20201029 18:18:57.442"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:57.446" level="INFO">${ACCURACY} = {'diff': [0.0003383329999999997, 0.00034237499999999893, 0.00034112500000000115, 0.00034148600000000195, 0.00034122200000000213, 0.00034359700000000104, 0.00033888900000000194, 0.0003418050000000006, ...</msg>
<status status="PASS" starttime="20201029 18:18:57.443" endtime="20201029 18:18:57.446"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:57.451" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201029 18:18:57.450" endtime="20201029 18:18:57.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:57.453" level="INFO">VALUE: [0.0003383329999999997, 0.00034237499999999893, 0.00034112500000000115, 0.00034148600000000195, 0.00034122200000000213, 0.00034359700000000104, 0.00033888900000000194, 0.0003418050000000006, 0.00034286199999999933, 0.0003401389999999997, 0.000340985999999998, 0.00034308300000000097, 0.0003437639999999964, 0.00033852799999999766, 0.00033816700000000033, 0.000341000000000001, 0.00033855600000000374, 0.000338999999999999, 0.0003434579999999979, 0.0003405700000000053, 0.0003402360000000007, 0.000342888999999999, 0.0003386800000000009, 0.00034137500000000487, 0.0003435140000000031, 0.00034, 0.000341292, 0.000338194, 0.00034268099999999746, 0.0003441250000000007, 0.000342888999999999, 0.00033836099999999536, 0.00034369399999999856, 0.0003384160000000011, 0.0003384449999999997, 0.00034176400000000134, 0.00034211100000000605, 0.00034170800000000306, 0.0003416529999999973, 0.00034059699999999804, 0.0003399170000000021, 0.00033826399999999784, 0.00034198600000000245, 0.00034226400000000184, 0.0003420270000000017, 0.0003379160000000006, 0.00034091699999999614, 0.0003397360000000002, 0.0003442219999999982, 0.00034198600000000245]</msg>
<status status="PASS" starttime="20201029 18:18:57.452" endtime="20201029 18:18:57.455"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.447" endtime="20201029 18:18:57.455"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:57.459" endtime="20201029 18:18:57.479"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.458" endtime="20201029 18:18:57.479"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.456" endtime="20201029 18:18:57.479"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.075" endtime="20201029 18:18:57.480"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.074" endtime="20201029 18:18:57.480"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:57.489" endtime="20201029 18:18:57.526"></status>
</kw>
<msg timestamp="20201029 18:18:57.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:57.487" endtime="20201029 18:18:57.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:57.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:57.528" endtime="20201029 18:18:57.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:57.530" endtime="20201029 18:18:57.532"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.485" endtime="20201029 18:18:57.532"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.482" endtime="20201029 18:18:57.533"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:57.539" endtime="20201029 18:18:57.827"></status>
</kw>
<msg timestamp="20201029 18:18:57.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023170778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023518764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:57.538" endtime="20201029 18:18:57.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:57.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023170778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023518764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:57.834" endtime="20201029 18:18:57.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:57.845" endtime="20201029 18:18:57.847"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.535" endtime="20201029 18:18:57.848"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.534" endtime="20201029 18:18:57.849"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:57.853" level="INFO">${RESULT} = [{'diff': 0.0003479860000000015}, {'diff': 0.0003409439999999993}, {'diff': 0.0003442500000000008}, {'diff': 0.00034262500000000265}, {'diff': 0.0003427499999999993}, {'diff': 0.0003390000000000025}, ...</msg>
<status status="PASS" starttime="20201029 18:18:57.849" endtime="20201029 18:18:57.853"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:57.858" level="INFO">${ACCURACY} = {'diff': [0.0003479860000000015, 0.0003409439999999993, 0.0003442500000000008, 0.00034262500000000265, 0.0003427499999999993, 0.0003390000000000025, 0.00034377699999999997, 0.0003380139999999976, 0.00...</msg>
<status status="PASS" starttime="20201029 18:18:57.854" endtime="20201029 18:18:57.858"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:57.862" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201029 18:18:57.861" endtime="20201029 18:18:57.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:57.865" level="INFO">VALUE: [0.0003479860000000015, 0.0003409439999999993, 0.0003442500000000008, 0.00034262500000000265, 0.0003427499999999993, 0.0003390000000000025, 0.00034377699999999997, 0.0003380139999999976, 0.0003433470000000008, 0.000340194000000002, 0.0003387229999999991, 0.0003431390000000027, 0.0003439440000000023, 0.000341097000000002, 0.00034073599999999774, 0.0003391109999999996, 0.00034038900000000344, 0.00034062500000000065, 0.0003424019999999986, 0.0003405000000000005, 0.0003443189999999992, 0.0003432080000000011, 0.00033920800000000056, 0.0003410689999999994, 0.0003393339999999967, 0.00034081899999999915, 0.00034247199999999645, 0.0003380139999999976, 0.0003387920000000044, 0.0003426659999999984, 0.0003423050000000011, 0.00033966700000000183, 0.00033806900000000334, 0.00034204200000000073, 0.00033840299999999407, 0.000339403000000002, 0.00034124999999999434, 0.0003437500000000038, 0.0003442780000000034, 0.0003396800000000019, 0.00034342999999999874, 0.00034286099999999986, 0.00034091599999999667, 0.00033855600000000374, 0.0003430279999999952, 0.00034080599999999905, 0.0003428329999999938, 0.00034230600000000055, 0.0003396810000000014, 0.0003427639999999954]</msg>
<status status="PASS" starttime="20201029 18:18:57.864" endtime="20201029 18:18:57.866"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.859" endtime="20201029 18:18:57.866"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:57.870" endtime="20201029 18:18:57.890"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.869" endtime="20201029 18:18:57.890"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.867" endtime="20201029 18:18:57.890"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.481" endtime="20201029 18:18:57.891"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.480" endtime="20201029 18:18:57.891"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:57.900" endtime="20201029 18:18:57.937"></status>
</kw>
<msg timestamp="20201029 18:18:57.938" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:57.898" endtime="20201029 18:18:57.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:57.940" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:57.939" endtime="20201029 18:18:57.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:57.941" endtime="20201029 18:18:57.943"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.896" endtime="20201029 18:18:57.944"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.894" endtime="20201029 18:18:57.944"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:57.951" endtime="20201029 18:18:58.238"></status>
</kw>
<msg timestamp="20201029 18:18:58.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024128306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024487556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:57.949" endtime="20201029 18:18:58.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:58.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024128306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024487556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:58.243" endtime="20201029 18:18:58.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:58.251" endtime="20201029 18:18:58.253"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.946" endtime="20201029 18:18:58.253"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.945" endtime="20201029 18:18:58.254"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:58.258" level="INFO">${RESULT} = [{'diff': 0.00035925000000000193}, {'diff': 0.0003389719999999999}, {'diff': 0.00033912499999999915}, {'diff': 0.00034084700000000176}, {'diff': 0.00034240300000000154}, {'diff': 0.0003389020000000020...</msg>
<status status="PASS" starttime="20201029 18:18:58.255" endtime="20201029 18:18:58.258"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:58.262" level="INFO">${ACCURACY} = {'diff': [0.00035925000000000193, 0.0003389719999999999, 0.00033912499999999915, 0.00034084700000000176, 0.00034240300000000154, 0.00033890200000000203, 0.0003394169999999981, 0.0003432639999999994, 0...</msg>
<status status="PASS" starttime="20201029 18:18:58.259" endtime="20201029 18:18:58.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:58.266" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201029 18:18:58.265" endtime="20201029 18:18:58.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:58.269" level="INFO">VALUE: [0.00035925000000000193, 0.0003389719999999999, 0.00033912499999999915, 0.00034084700000000176, 0.00034240300000000154, 0.00033890200000000203, 0.0003394169999999981, 0.0003432639999999994, 0.00034138900000000097, 0.00034254200000000123, 0.0003395139999999991, 0.0003389169999999976, 0.0003390420000000012, 0.0003434720000000009, 0.00034058300000000194, 0.00034280600000000105, 0.00034291600000000214, 0.00034154200000000023, 0.0003397360000000002, 0.0003421520000000018, 0.0003426659999999984, 0.00034331900000000165, 0.00034037499999999693, 0.00034063899999999675, 0.00034370900000000454, 0.0003403049999999991, 0.0003398329999999977, 0.0003401799999999955, 0.0003432370000000032, 0.000343889, 0.0003378329999999957, 0.00033955499999999833, 0.00033887500000000237, 0.0003411390000000042, 0.0003441529999999998, 0.0003410140000000006, 0.0003393329999999972, 0.00033898599999999945, 0.00034402800000000316, 0.0003405689999999989, 0.00034190299999999757, 0.0003384579999999998, 0.0003392920000000049, 0.0003417500000000018, 0.00033865300000000126, 0.0003417500000000018, 0.0003441669999999994, 0.00034008299999999797, 0.00033937500000000287, 0.0003423330000000002]</msg>
<status status="PASS" starttime="20201029 18:18:58.268" endtime="20201029 18:18:58.270"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.263" endtime="20201029 18:18:58.270"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:58.274" endtime="20201029 18:18:58.294"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.273" endtime="20201029 18:18:58.294"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.271" endtime="20201029 18:18:58.295"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.892" endtime="20201029 18:18:58.295"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.891" endtime="20201029 18:18:58.295"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:58.304" endtime="20201029 18:18:58.339"></status>
</kw>
<msg timestamp="20201029 18:18:58.339" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:58.302" endtime="20201029 18:18:58.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:58.342" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:58.340" endtime="20201029 18:18:58.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:58.343" endtime="20201029 18:18:58.345"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.300" endtime="20201029 18:18:58.345"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.298" endtime="20201029 18:18:58.346"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:58.352" endtime="20201029 18:18:58.639"></status>
</kw>
<msg timestamp="20201029 18:18:58.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021930694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022280819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:58.351" endtime="20201029 18:18:58.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:58.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021930694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022280819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:58.643" endtime="20201029 18:18:58.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:58.651" endtime="20201029 18:18:58.653"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.348" endtime="20201029 18:18:58.654"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.346" endtime="20201029 18:18:58.654"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:58.658" level="INFO">${RESULT} = [{'diff': 0.00035012499999999974}, {'diff': 0.00033998600000000045}, {'diff': 0.0003438330000000017}, {'diff': 0.0003411660000000004}, {'diff': 0.00033986099999999686}, {'diff': 0.00034088900000000047...</msg>
<status status="PASS" starttime="20201029 18:18:58.655" endtime="20201029 18:18:58.658"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:58.662" level="INFO">${ACCURACY} = {'diff': [0.00035012499999999974, 0.00033998600000000045, 0.0003438330000000017, 0.0003411660000000004, 0.00033986099999999686, 0.00034088900000000047, 0.00034052799999999966, 0.0003412079999999991, 0...</msg>
<status status="PASS" starttime="20201029 18:18:58.659" endtime="20201029 18:18:58.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:58.667" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201029 18:18:58.666" endtime="20201029 18:18:58.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:58.669" level="INFO">VALUE: [0.00035012499999999974, 0.00033998600000000045, 0.0003438330000000017, 0.0003411660000000004, 0.00033986099999999686, 0.00034088900000000047, 0.00034052799999999966, 0.0003412079999999991, 0.00034286099999999986, 0.00034058299999999847, 0.00034377799999999945, 0.00034277799999999845, 0.00033802800000000063, 0.0003409169999999996, 0.0003419310000000002, 0.0003393619999999993, 0.00034026399999999984, 0.00033979200000000195, 0.0003409450000000022, 0.00033884699999999976, 0.0003378199999999991, 0.0003395269999999992, 0.0003434730000000004, 0.00034331900000000165, 0.00033830500000000055, 0.0003377779999999969, 0.00034169500000000297, 0.00033877699999999844, 0.00033898599999999945, 0.00034037499999999693, 0.00034148600000000195, 0.00034111100000000505, 0.0003426390000000057, 0.00033904099999999826, 0.00034342999999999874, 0.0003409579999999954, 0.0003376799999999999, 0.00034173599999999527, 0.0003409580000000023, 0.00034158399999999894, 0.0003412780000000004, 0.00033922200000000013, 0.0003439579999999984, 0.00034326400000000284, 0.0003421379999999988, 0.0003381390000000012, 0.00033848599999999895, 0.00034022200000000113, 0.00034318099999999796, 0.00034345899999999735]</msg>
<status status="PASS" starttime="20201029 18:18:58.668" endtime="20201029 18:18:58.671"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.663" endtime="20201029 18:18:58.671"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:58.675" endtime="20201029 18:18:58.695"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.674" endtime="20201029 18:18:58.695"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.672" endtime="20201029 18:18:58.696"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.296" endtime="20201029 18:18:58.696"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.295" endtime="20201029 18:18:58.696"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:58.705" endtime="20201029 18:18:58.743"></status>
</kw>
<msg timestamp="20201029 18:18:58.744" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:58.703" endtime="20201029 18:18:58.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:58.746" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:58.745" endtime="20201029 18:18:58.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:58.747" endtime="20201029 18:18:58.749"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.701" endtime="20201029 18:18:58.749"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.699" endtime="20201029 18:18:58.750"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:58.756" endtime="20201029 18:18:59.044"></status>
</kw>
<msg timestamp="20201029 18:18:59.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022860875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023192736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:58.755" endtime="20201029 18:18:59.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:59.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022860875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023192736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:59.048" endtime="20201029 18:18:59.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:59.056" endtime="20201029 18:18:59.058"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.752" endtime="20201029 18:18:59.058"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.750" endtime="20201029 18:18:59.059"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:59.063" level="INFO">${RESULT} = [{'diff': 0.00033186099999999927}, {'diff': 0.00033838900000000144}, {'diff': 0.0003407360000000012}, {'diff': 0.00034340299999999907}, {'diff': 0.000341387999999998}, {'diff': 0.00034148600000000195}...</msg>
<status status="PASS" starttime="20201029 18:18:59.060" endtime="20201029 18:18:59.063"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:59.068" level="INFO">${ACCURACY} = {'diff': [0.00033186099999999927, 0.00033838900000000144, 0.0003407360000000012, 0.00034340299999999907, 0.000341387999999998, 0.00034148600000000195, 0.0003420690000000004, 0.00034322300000000014, 0....</msg>
<status status="PASS" starttime="20201029 18:18:59.064" endtime="20201029 18:18:59.068"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:59.073" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201029 18:18:59.071" endtime="20201029 18:18:59.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:59.075" level="INFO">VALUE: [0.00033186099999999927, 0.00033838900000000144, 0.0003407360000000012, 0.00034340299999999907, 0.000341387999999998, 0.00034148600000000195, 0.0003420690000000004, 0.00034322300000000014, 0.0003393330000000007, 0.00034358300000000147, 0.00034294500000000075, 0.00033816600000000085, 0.00034, 0.0003386389999999982, 0.00034081899999999915, 0.00033937500000000287, 0.00033993100000000165, 0.00034043100000000215, 0.0003388200000000001, 0.00034063800000000075, 0.0003406109999999976, 0.0003424859999999995, 0.00034013800000000025, 0.0003411249999999977, 0.00034119500000000247, 0.00034108399999999844, 0.0003394170000000016, 0.0003413610000000053, 0.0003402779999999994, 0.0003404170000000026, 0.00034242999999999774, 0.00034141599999999717, 0.0003380139999999976, 0.00034195899999999585, 0.0003406250000000041, 0.0003440140000000036, 0.00033898699999999893, 0.00034136099999999836, 0.00034040200000000354, 0.0003409859999999945, 0.00033937500000000287, 0.000342292000000001, 0.0003407779999999999, 0.0003441529999999998, 0.00034105499999999983, 0.0003384579999999998, 0.0003382499999999983, 0.00033990299999999557, 0.0003420690000000004, 0.00034236199999999883]</msg>
<status status="PASS" starttime="20201029 18:18:59.074" endtime="20201029 18:18:59.076"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.069" endtime="20201029 18:18:59.077"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:59.080" endtime="20201029 18:18:59.100"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.079" endtime="20201029 18:18:59.100"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.078" endtime="20201029 18:18:59.101"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.697" endtime="20201029 18:18:59.101"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.696" endtime="20201029 18:18:59.101"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:59.110" endtime="20201029 18:18:59.148"></status>
</kw>
<msg timestamp="20201029 18:18:59.149" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:59.108" endtime="20201029 18:18:59.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:59.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:59.150" endtime="20201029 18:18:59.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:59.152" endtime="20201029 18:18:59.154"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.106" endtime="20201029 18:18:59.155"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.104" endtime="20201029 18:18:59.155"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:59.162" endtime="20201029 18:18:59.449"></status>
</kw>
<msg timestamp="20201029 18:18:59.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024794292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025154097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:59.160" endtime="20201029 18:18:59.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:59.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024794292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025154097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:59.454" endtime="20201029 18:18:59.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:59.462" endtime="20201029 18:18:59.464"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.158" endtime="20201029 18:18:59.464"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.156" endtime="20201029 18:18:59.465"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:59.469" level="INFO">${RESULT} = [{'diff': 0.00035980500000000123}, {'diff': 0.0003381809999999999}, {'diff': 0.0003405000000000005}, {'diff': 0.00034038899999999997}, {'diff': 0.0003387780000000014}, {'diff': 0.0003420690000000004},...</msg>
<status status="PASS" starttime="20201029 18:18:59.466" endtime="20201029 18:18:59.469"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:59.473" level="INFO">${ACCURACY} = {'diff': [0.00035980500000000123, 0.0003381809999999999, 0.0003405000000000005, 0.00034038899999999997, 0.0003387780000000014, 0.0003420690000000004, 0.00033840199999999807, 0.00034242999999999774, 0....</msg>
<status status="PASS" starttime="20201029 18:18:59.470" endtime="20201029 18:18:59.473"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:59.478" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201029 18:18:59.476" endtime="20201029 18:18:59.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:59.480" level="INFO">VALUE: [0.00035980500000000123, 0.0003381809999999999, 0.0003405000000000005, 0.00034038899999999997, 0.0003387780000000014, 0.0003420690000000004, 0.00033840199999999807, 0.00034242999999999774, 0.0003391109999999996, 0.0003409169999999996, 0.00034076400000000034, 0.0003435560000000018, 0.00034194499999999975, 0.00034344500000000125, 0.0003381390000000012, 0.00034391599999999967, 0.0003396110000000001, 0.0003380420000000002, 0.00034326400000000284, 0.000340806000000006, 0.0003389439999999938, 0.0003426659999999984, 0.0003418329999999997, 0.00034165300000000426, 0.000342679999999998, 0.00034280499999999464, 0.0003398610000000038, 0.0003397230000000001, 0.0003416529999999973, 0.00033865300000000126, 0.00034245899999999635, 0.000339597000000004, 0.00033808299999999597, 0.0003378049999999966, 0.00034286099999999986, 0.0003440279999999962, 0.00033787500000000137, 0.00034141699999999664, 0.00033976399999999934, 0.0003429450000000042, 0.00034418099999999896, 0.0003423200000000001, 0.0003399580000000013, 0.00033911100000000305, 0.0003380139999999976, 0.00034097199999999495, 0.0003412360000000017, 0.00034105499999999983, 0.0003424450000000037, 0.00034143100000000315]</msg>
<status status="PASS" starttime="20201029 18:18:59.479" endtime="20201029 18:18:59.481"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.474" endtime="20201029 18:18:59.481"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:59.485" endtime="20201029 18:18:59.505"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.484" endtime="20201029 18:18:59.505"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.483" endtime="20201029 18:18:59.506"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.102" endtime="20201029 18:18:59.506"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.101" endtime="20201029 18:18:59.506"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:59.515" endtime="20201029 18:18:59.550"></status>
</kw>
<msg timestamp="20201029 18:18:59.550" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:59.514" endtime="20201029 18:18:59.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:59.553" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:59.552" endtime="20201029 18:18:59.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:59.554" endtime="20201029 18:18:59.556"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.511" endtime="20201029 18:18:59.556"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.509" endtime="20201029 18:18:59.557"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:59.564" endtime="20201029 18:18:59.851"></status>
</kw>
<msg timestamp="20201029 18:18:59.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021639764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021970278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:59.562" endtime="20201029 18:18:59.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:59.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021639764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021970278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:59.855" endtime="20201029 18:18:59.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:59.863" endtime="20201029 18:18:59.865"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.559" endtime="20201029 18:18:59.866"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.557" endtime="20201029 18:18:59.866"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:59.870" level="INFO">${RESULT} = [{'diff': 0.0003305140000000005}, {'diff': 0.00033806899999999987}, {'diff': 0.0003413199999999991}, {'diff': 0.000338403000000001}, {'diff': 0.0003438330000000017}, {'diff': 0.00033976399999999934}, ...</msg>
<status status="PASS" starttime="20201029 18:18:59.867" endtime="20201029 18:18:59.870"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:59.874" level="INFO">${ACCURACY} = {'diff': [0.0003305140000000005, 0.00033806899999999987, 0.0003413199999999991, 0.000338403000000001, 0.0003438330000000017, 0.00033976399999999934, 0.0003416109999999986, 0.0003424310000000007, 0.000...</msg>
<status status="PASS" starttime="20201029 18:18:59.871" endtime="20201029 18:18:59.875"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:59.879" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201029 18:18:59.878" endtime="20201029 18:18:59.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:59.881" level="INFO">VALUE: [0.0003305140000000005, 0.00033806899999999987, 0.0003413199999999991, 0.000338403000000001, 0.0003438330000000017, 0.00033976399999999934, 0.0003416109999999986, 0.0003424310000000007, 0.00033856999999999984, 0.00033779199999999995, 0.00034091600000000014, 0.00033991599999999914, 0.00034291599999999867, 0.0003377359999999982, 0.0003421110000000026, 0.0003421119999999986, 0.0003406529999999998, 0.0003431390000000027, 0.00034363899999999975, 0.0003395550000000018, 0.0003379580000000028, 0.00033948699999999943, 0.00034059699999999804, 0.00034022200000000113, 0.000341097999999998, 0.000337597000000002, 0.00034159699999999904, 0.0003402500000000003, 0.00033922200000000013, 0.0003439859999999975, 0.0003409590000000018, 0.0003381520000000013, 0.0003440419999999958, 0.000339305000000005, 0.00034187500000000537, 0.0003441250000000007, 0.0003427920000000015, 0.00033972200000000063, 0.0003424450000000037, 0.00034418099999999896, 0.00034358300000000147, 0.0003406109999999976, 0.00034205500000000083, 0.0003391249999999957, 0.00033976399999999934, 0.000337806000000003, 0.0003441110000000011, 0.00034276400000000234, 0.0003406940000000025, 0.00034342999999999874]</msg>
<status status="PASS" starttime="20201029 18:18:59.880" endtime="20201029 18:18:59.883"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.875" endtime="20201029 18:18:59.884"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:59.888" endtime="20201029 18:18:59.907"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.886" endtime="20201029 18:18:59.908"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.885" endtime="20201029 18:18:59.908"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.507" endtime="20201029 18:18:59.908"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.507" endtime="20201029 18:18:59.908"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:59.917" endtime="20201029 18:18:59.952"></status>
</kw>
<msg timestamp="20201029 18:18:59.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:59.916" endtime="20201029 18:18:59.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:59.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:59.953" endtime="20201029 18:18:59.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:59.956" endtime="20201029 18:18:59.958"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.913" endtime="20201029 18:18:59.958"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.911" endtime="20201029 18:18:59.959"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:59.965" endtime="20201029 18:19:00.252"></status>
</kw>
<msg timestamp="20201029 18:19:00.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021366708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021724792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:59.964" endtime="20201029 18:19:00.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:00.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021366708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021724792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:00.256" endtime="20201029 18:19:00.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:00.265" endtime="20201029 18:19:00.266"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.961" endtime="20201029 18:19:00.267"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.959" endtime="20201029 18:19:00.267"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:00.271" level="INFO">${RESULT} = [{'diff': 0.0003580839999999981}, {'diff': 0.0003434860000000005}, {'diff': 0.00033976399999999934}, {'diff': 0.00034019500000000147}, {'diff': 0.0003387780000000014}, {'diff': 0.00033966700000000183}...</msg>
<status status="PASS" starttime="20201029 18:19:00.268" endtime="20201029 18:19:00.271"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:00.276" level="INFO">${ACCURACY} = {'diff': [0.0003580839999999981, 0.0003434860000000005, 0.00033976399999999934, 0.00034019500000000147, 0.0003387780000000014, 0.00033966700000000183, 0.00034222199999999967, 0.0003400139999999996, 0....</msg>
<status status="PASS" starttime="20201029 18:19:00.272" endtime="20201029 18:19:00.277"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:00.281" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201029 18:19:00.280" endtime="20201029 18:19:00.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:00.284" level="INFO">VALUE: [0.0003580839999999981, 0.0003434860000000005, 0.00033976399999999934, 0.00034019500000000147, 0.0003387780000000014, 0.00033966700000000183, 0.00034222199999999967, 0.0003400139999999996, 0.00034433299999999875, 0.0003422079999999966, 0.00034030500000000255, 0.0003425700000000004, 0.0003401810000000019, 0.00033861100000000255, 0.00034340299999999907, 0.00034436100000000136, 0.00034356899999999843, 0.0003431249999999997, 0.0003422500000000023, 0.0003403750000000004, 0.0003429309999999977, 0.00034256899999999743, 0.0003392780000000019, 0.00034270900000000007, 0.00034149999999999806, 0.0003424729999999994, 0.00033875000000000224, 0.00034019500000000147, 0.00034192999999999724, 0.0003436110000000006, 0.00034081899999999915, 0.0003405699999999984, 0.00034329199999999505, 0.00034369399999999856, 0.0003409439999999958, 0.00034186199999999833, 0.00034138900000000444, 0.00034305500000000183, 0.0003397779999999989, 0.0003413339999999987, 0.0003435700000000014, 0.0003402360000000007, 0.0003414580000000028, 0.00034408300000000197, 0.0003403889999999965, 0.0003407079999999951, 0.0003438470000000013, 0.00034186099999999886, 0.0003422779999999945, 0.00033958299999999747]</msg>
<status status="PASS" starttime="20201029 18:19:00.282" endtime="20201029 18:19:00.284"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.277" endtime="20201029 18:19:00.285"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:00.289" endtime="20201029 18:19:00.308"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.287" endtime="20201029 18:19:00.309"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.286" endtime="20201029 18:19:00.309"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.909" endtime="20201029 18:19:00.309"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.909" endtime="20201029 18:19:00.309"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:00.318" endtime="20201029 18:19:00.353"></status>
</kw>
<msg timestamp="20201029 18:19:00.354" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:00.317" endtime="20201029 18:19:00.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:00.356" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:00.355" endtime="20201029 18:19:00.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:00.357" endtime="20201029 18:19:00.359"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.314" endtime="20201029 18:19:00.360"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.312" endtime="20201029 18:19:00.360"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:00.367" endtime="20201029 18:19:00.654"></status>
</kw>
<msg timestamp="20201029 18:19:00.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022135764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022482778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:00.365" endtime="20201029 18:19:00.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:00.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022135764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022482778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:00.658" endtime="20201029 18:19:00.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:00.667" endtime="20201029 18:19:00.669"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.362" endtime="20201029 18:19:00.669"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.361" endtime="20201029 18:19:00.670"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:00.674" level="INFO">${RESULT} = [{'diff': 0.00034701399999999966}, {'diff': 0.00034008300000000144}, {'diff': 0.0003378619999999978}, {'diff': 0.0003383610000000023}, {'diff': 0.00034406899999999893}, {'diff': 0.00034095799999999885...</msg>
<status status="PASS" starttime="20201029 18:19:00.670" endtime="20201029 18:19:00.674"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:00.678" level="INFO">${ACCURACY} = {'diff': [0.00034701399999999966, 0.00034008300000000144, 0.0003378619999999978, 0.0003383610000000023, 0.00034406899999999893, 0.00034095799999999885, 0.0003382640000000013, 0.00034159699999999904, 0...</msg>
<status status="PASS" starttime="20201029 18:19:00.675" endtime="20201029 18:19:00.678"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:00.682" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201029 18:19:00.681" endtime="20201029 18:19:00.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:00.685" level="INFO">VALUE: [0.00034701399999999966, 0.00034008300000000144, 0.0003378619999999978, 0.0003383610000000023, 0.00034406899999999893, 0.00034095799999999885, 0.0003382640000000013, 0.00034159699999999904, 0.00034323600000000024, 0.00033993100000000165, 0.00033866700000000083, 0.0003387499999999988, 0.0003432080000000011, 0.00034088900000000047, 0.00034338900000000297, 0.00034240300000000154, 0.0003398749999999999, 0.0003409169999999996, 0.0003422369999999987, 0.0003443340000000017, 0.00034377799999999945, 0.00034058399999999794, 0.0003410269999999972, 0.0003385969999999995, 0.0003430829999999975, 0.0003407500000000008, 0.00033898599999999945, 0.000339403000000002, 0.0003431529999999988, 0.0003400139999999996, 0.00034020800000000156, 0.0003408469999999983, 0.0003395830000000044, 0.00034008299999999797, 0.0003390970000000035, 0.0003429449999999973, 0.0003397369999999997, 0.00034191699999999714, 0.0003383049999999971, 0.0003379579999999993, 0.0003435000000000035, 0.00034031899999999865, 0.00033986099999999686, 0.00034180600000000005, 0.00033887500000000237, 0.0003399580000000013, 0.00034052799999999966, 0.00034376400000000334, 0.0003401810000000019, 0.0003393469999999968]</msg>
<status status="PASS" starttime="20201029 18:19:00.684" endtime="20201029 18:19:00.686"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.679" endtime="20201029 18:19:00.687"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:00.690" endtime="20201029 18:19:00.710"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.689" endtime="20201029 18:19:00.710"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.688" endtime="20201029 18:19:00.711"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.310" endtime="20201029 18:19:00.711"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.310" endtime="20201029 18:19:00.711"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:00.721" endtime="20201029 18:19:00.761"></status>
</kw>
<msg timestamp="20201029 18:19:00.762" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:00.719" endtime="20201029 18:19:00.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:00.764" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:00.763" endtime="20201029 18:19:00.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:00.765" endtime="20201029 18:19:00.767"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.716" endtime="20201029 18:19:00.768"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.714" endtime="20201029 18:19:00.768"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:00.775" endtime="20201029 18:19:01.064"></status>
</kw>
<msg timestamp="20201029 18:19:01.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027325417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027659847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:00.773" endtime="20201029 18:19:01.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:01.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027325417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027659847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:01.074" endtime="20201029 18:19:01.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:01.092" endtime="20201029 18:19:01.095"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.770" endtime="20201029 18:19:01.097"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.769" endtime="20201029 18:19:01.098"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:01.106" level="INFO">${RESULT} = [{'diff': 0.00033443000000000014}, {'diff': 0.0003395689999999979}, {'diff': 0.0003418339999999992}, {'diff': 0.0003427639999999989}, {'diff': 0.0003435139999999996}, {'diff': 0.00033801400000000106},...</msg>
<status status="PASS" starttime="20201029 18:19:01.099" endtime="20201029 18:19:01.106"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:01.114" level="INFO">${ACCURACY} = {'diff': [0.00033443000000000014, 0.0003395689999999979, 0.0003418339999999992, 0.0003427639999999989, 0.0003435139999999996, 0.00033801400000000106, 0.0003418329999999997, 0.00034070900000000154, 0.0...</msg>
<status status="PASS" starttime="20201029 18:19:01.108" endtime="20201029 18:19:01.115"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:01.125" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201029 18:19:01.122" endtime="20201029 18:19:01.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:01.129" level="INFO">VALUE: [0.00033443000000000014, 0.0003395689999999979, 0.0003418339999999992, 0.0003427639999999989, 0.0003435139999999996, 0.00033801400000000106, 0.0003418329999999997, 0.00034070900000000154, 0.00033902800000000163, 0.00034098600000000145, 0.0003393330000000007, 0.0003435140000000031, 0.00034136099999999836, 0.0003441529999999998, 0.00034340299999999907, 0.00034070800000000206, 0.0003383199999999961, 0.00034170800000000306, 0.0003401659999999959, 0.0003420699999999999, 0.00034304100000000226, 0.00033893100000000065, 0.00034259700000000004, 0.0003424590000000033, 0.00034337499999999993, 0.0003413199999999991, 0.00033838900000000144, 0.00034226400000000184, 0.0003432780000000024, 0.00033779100000000395, 0.00033993100000000165, 0.0003432079999999976, 0.0003413199999999991, 0.0003441250000000007, 0.00034326400000000284, 0.00033866600000000135, 0.000338403000000001, 0.00033833400000000263, 0.0003402500000000003, 0.00033809699999999554, 0.00033851400000000503, 0.00034143100000000315, 0.0003440419999999958, 0.0003435700000000014, 0.00033833400000000263, 0.00034065300000000326, 0.0003386940000000005, 0.00033872199999999963, 0.00033908299999999697, 0.0003409030000000035]</msg>
<status status="PASS" starttime="20201029 18:19:01.127" endtime="20201029 18:19:01.133"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.116" endtime="20201029 18:19:01.134"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:01.141" endtime="20201029 18:19:01.161"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.138" endtime="20201029 18:19:01.162"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.136" endtime="20201029 18:19:01.162"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.713" endtime="20201029 18:19:01.163"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.712" endtime="20201029 18:19:01.163"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:01.171" endtime="20201029 18:19:01.208"></status>
</kw>
<msg timestamp="20201029 18:19:01.208" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:01.170" endtime="20201029 18:19:01.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:01.211" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:01.209" endtime="20201029 18:19:01.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:01.212" endtime="20201029 18:19:01.213"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.167" endtime="20201029 18:19:01.214"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.165" endtime="20201029 18:19:01.214"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:01.221" endtime="20201029 18:19:01.508"></status>
</kw>
<msg timestamp="20201029 18:19:01.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023039306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023374903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:01.219" endtime="20201029 18:19:01.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:01.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023039306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023374903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:01.512" endtime="20201029 18:19:01.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:01.521" endtime="20201029 18:19:01.523"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.217" endtime="20201029 18:19:01.523"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.215" endtime="20201029 18:19:01.524"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:01.527" level="INFO">${RESULT} = [{'diff': 0.000335597}, {'diff': 0.00034066699999999936}, {'diff': 0.0003397779999999989}, {'diff': 0.00033957000000000084}, {'diff': 0.000343986000000001}, {'diff': 0.00034176400000000134}, {'diff': ...</msg>
<status status="PASS" starttime="20201029 18:19:01.524" endtime="20201029 18:19:01.528"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:01.532" level="INFO">${ACCURACY} = {'diff': [0.000335597, 0.00034066699999999936, 0.0003397779999999989, 0.00033957000000000084, 0.000343986000000001, 0.00034176400000000134, 0.0003408750000000009, 0.00034294500000000075, 0.00034083400...</msg>
<status status="PASS" starttime="20201029 18:19:01.528" endtime="20201029 18:19:01.532"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:01.537" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201029 18:19:01.536" endtime="20201029 18:19:01.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:01.539" level="INFO">VALUE: [0.000335597, 0.00034066699999999936, 0.0003397779999999989, 0.00033957000000000084, 0.000343986000000001, 0.00034176400000000134, 0.0003408750000000009, 0.00034294500000000075, 0.00034083400000000166, 0.0003408750000000009, 0.00033862499999999865, 0.00034302800000000216, 0.00033920900000000004, 0.00033858299999999994, 0.0003442500000000008, 0.0003394999999999995, 0.0003379579999999993, 0.00034012500000000015, 0.0003396519999999993, 0.0003422919999999975, 0.00034369399999999856, 0.0003421799999999975, 0.00033801400000000106, 0.0003385410000000047, 0.0003432360000000037, 0.0003423050000000011, 0.000341000000000001, 0.00033837500000000187, 0.0003442089999999981, 0.0003399449999999943, 0.000337999999999998, 0.0003425000000000025, 0.00033944400000000124, 0.00034218099999999696, 0.00034258300000000047, 0.00033798599999999845, 0.00034286099999999986, 0.0003406940000000025, 0.0003406249999999972, 0.00033927800000000535, 0.00033948599999999995, 0.00033888900000000194, 0.000344276999999997, 0.00034398600000000445, 0.00034254200000000123, 0.0003439450000000052, 0.00033930599999999755, 0.00034140299999999707, 0.00034144400000000324, 0.0003400269999999997]</msg>
<status status="PASS" starttime="20201029 18:19:01.538" endtime="20201029 18:19:01.540"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.533" endtime="20201029 18:19:01.540"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:01.544" endtime="20201029 18:19:01.563"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.542" endtime="20201029 18:19:01.564"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.541" endtime="20201029 18:19:01.564"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.164" endtime="20201029 18:19:01.564"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.163" endtime="20201029 18:19:01.565"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:01.573" endtime="20201029 18:19:01.609"></status>
</kw>
<msg timestamp="20201029 18:19:01.610" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:01.571" endtime="20201029 18:19:01.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:01.612" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:01.611" endtime="20201029 18:19:01.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:01.613" endtime="20201029 18:19:01.615"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.569" endtime="20201029 18:19:01.615"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.567" endtime="20201029 18:19:01.616"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:01.622" endtime="20201029 18:19:01.925"></status>
</kw>
<msg timestamp="20201029 18:19:01.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023016083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023347389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:01.621" endtime="20201029 18:19:01.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:01.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023016083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023347389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:01.934" endtime="20201029 18:19:01.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:01.953" endtime="20201029 18:19:01.956"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.618" endtime="20201029 18:19:01.957"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.616" endtime="20201029 18:19:01.958"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:01.965" level="INFO">${RESULT} = [{'diff': 0.00033130599999999996}, {'diff': 0.00033811199999999805}, {'diff': 0.0003424719999999999}, {'diff': 0.0003428470000000003}, {'diff': 0.00033923700000000265}, {'diff': 0.00033954100000000223...</msg>
<status status="PASS" starttime="20201029 18:19:01.960" endtime="20201029 18:19:01.965"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:01.969" level="INFO">${ACCURACY} = {'diff': [0.00033130599999999996, 0.00033811199999999805, 0.0003424719999999999, 0.0003428470000000003, 0.00033923700000000265, 0.00033954100000000223, 0.0003428200000000006, 0.0003376939999999995, 0....</msg>
<status status="PASS" starttime="20201029 18:19:01.966" endtime="20201029 18:19:01.969"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:01.974" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201029 18:19:01.973" endtime="20201029 18:19:01.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:01.976" level="INFO">VALUE: [0.00033130599999999996, 0.00033811199999999805, 0.0003424719999999999, 0.0003428470000000003, 0.00033923700000000265, 0.00033954100000000223, 0.0003428200000000006, 0.0003376939999999995, 0.00033788899999999747, 0.0003437639999999999, 0.00034290299999999857, 0.0003383610000000023, 0.0003414439999999998, 0.0003427080000000006, 0.0003405270000000002, 0.0003415689999999999, 0.0003404309999999987, 0.00034034800000000073, 0.0003391109999999996, 0.00033887500000000237, 0.00033788899999999747, 0.0003432499999999998, 0.0003385839999999994, 0.00033861100000000255, 0.00033915300000000176, 0.00033963899999999575, 0.0003401390000000032, 0.0003424439999999973, 0.00034258399999999994, 0.0003393060000000045, 0.0003379300000000002, 0.0003437079999999981, 0.0003412230000000016, 0.00034126400000000084, 0.00034037499999999693, 0.0003411800000000034, 0.0003418329999999997, 0.0003443330000000022, 0.0003442360000000047, 0.00034008299999999797, 0.0003382229999999986, 0.0003387920000000044, 0.0003426810000000044, 0.00033919399999999406, 0.00033905499999999783, 0.0003417920000000005, 0.00034387500000000043, 0.0003423189999999937, 0.0003381250000000016, 0.00034313899999999925]</msg>
<status status="PASS" starttime="20201029 18:19:01.975" endtime="20201029 18:19:01.977"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.970" endtime="20201029 18:19:01.977"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:01.981" endtime="20201029 18:19:02.001"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.979" endtime="20201029 18:19:02.001"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.978" endtime="20201029 18:19:02.001"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.565" endtime="20201029 18:19:02.002"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.565" endtime="20201029 18:19:02.002"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:02.010" endtime="20201029 18:19:02.051"></status>
</kw>
<msg timestamp="20201029 18:19:02.052" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:02.009" endtime="20201029 18:19:02.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:02.054" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:02.053" endtime="20201029 18:19:02.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:02.055" endtime="20201029 18:19:02.057"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.006" endtime="20201029 18:19:02.057"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.004" endtime="20201029 18:19:02.058"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:02.064" endtime="20201029 18:19:02.350"></status>
</kw>
<msg timestamp="20201029 18:19:02.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022893389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023251889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:02.063" endtime="20201029 18:19:02.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:02.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022893389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023251889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:02.354" endtime="20201029 18:19:02.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:02.363" endtime="20201029 18:19:02.364"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.060" endtime="20201029 18:19:02.365"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.058" endtime="20201029 18:19:02.365"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:02.369" level="INFO">${RESULT} = [{'diff': 0.0003585000000000012}, {'diff': 0.0003393469999999968}, {'diff': 0.0003436250000000002}, {'diff': 0.00034048600000000095}, {'diff': 0.0003411249999999977}, {'diff': 0.0003403329999999982}, ...</msg>
<status status="PASS" starttime="20201029 18:19:02.366" endtime="20201029 18:19:02.369"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:02.373" level="INFO">${ACCURACY} = {'diff': [0.0003585000000000012, 0.0003393469999999968, 0.0003436250000000002, 0.00034048600000000095, 0.0003411249999999977, 0.0003403329999999982, 0.0003397779999999989, 0.0003441529999999998, 0.000...</msg>
<status status="PASS" starttime="20201029 18:19:02.370" endtime="20201029 18:19:02.373"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:02.377" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201029 18:19:02.376" endtime="20201029 18:19:02.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:02.380" level="INFO">VALUE: [0.0003585000000000012, 0.0003393469999999968, 0.0003436250000000002, 0.00034048600000000095, 0.0003411249999999977, 0.0003403329999999982, 0.0003397779999999989, 0.0003441529999999998, 0.0003436659999999994, 0.0003383190000000001, 0.00034172199999999917, 0.00034323600000000024, 0.000339291999999998, 0.00033779199999999995, 0.0003407499999999973, 0.00034266700000000136, 0.0003391109999999996, 0.0003423200000000001, 0.0003427080000000006, 0.00034359700000000104, 0.0003397499999999998, 0.00034095799999999885, 0.0003385839999999994, 0.00034154200000000023, 0.00033884700000000323, 0.0003442360000000047, 0.0003401390000000032, 0.0003405689999999989, 0.0003404580000000018, 0.0003430700000000009, 0.00034387500000000043, 0.00034304100000000226, 0.0003396810000000014, 0.00034087499999999743, 0.00034102800000000016, 0.00033854199999999723, 0.00034227700000000194, 0.00033890299999999457, 0.0003411529999999968, 0.00034030599999999855, 0.00033948599999999995, 0.00034104100000000026, 0.00034323599999999677, 0.0003403199999999981, 0.0003409580000000023, 0.00034293100000000465, 0.0003385559999999968, 0.0003442219999999982, 0.0003378049999999966, 0.00034080599999999905]</msg>
<status status="PASS" starttime="20201029 18:19:02.378" endtime="20201029 18:19:02.381"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.374" endtime="20201029 18:19:02.382"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:02.385" endtime="20201029 18:19:02.405"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.384" endtime="20201029 18:19:02.405"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.383" endtime="20201029 18:19:02.406"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.003" endtime="20201029 18:19:02.406"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.002" endtime="20201029 18:19:02.406"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:02.415" endtime="20201029 18:19:02.449"></status>
</kw>
<msg timestamp="20201029 18:19:02.450" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:02.413" endtime="20201029 18:19:02.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:02.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:02.451" endtime="20201029 18:19:02.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:02.453" endtime="20201029 18:19:02.455"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.411" endtime="20201029 18:19:02.455"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.409" endtime="20201029 18:19:02.456"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:02.462" endtime="20201029 18:19:02.768"></status>
</kw>
<msg timestamp="20201029 18:19:02.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020398681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020731264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:02.460" endtime="20201029 18:19:02.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:02.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020398681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020731264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:02.775" endtime="20201029 18:19:02.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:02.783" endtime="20201029 18:19:02.785"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.458" endtime="20201029 18:19:02.786"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.456" endtime="20201029 18:19:02.786"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:02.790" level="INFO">${RESULT} = [{'diff': 0.0003325830000000009}, {'diff': 0.00034212500000000215}, {'diff': 0.00033906900000000087}, {'diff': 0.00034019500000000147}, {'diff': 0.00033870800000000006}, {'diff': 0.0003408610000000013...</msg>
<status status="PASS" starttime="20201029 18:19:02.787" endtime="20201029 18:19:02.790"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:02.795" level="INFO">${ACCURACY} = {'diff': [0.0003325830000000009, 0.00034212500000000215, 0.00033906900000000087, 0.00034019500000000147, 0.00033870800000000006, 0.00034086100000000133, 0.0003443469999999983, 0.000343889, 0.000340971...</msg>
<status status="PASS" starttime="20201029 18:19:02.791" endtime="20201029 18:19:02.795"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:02.799" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201029 18:19:02.798" endtime="20201029 18:19:02.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:02.801" level="INFO">VALUE: [0.0003325830000000009, 0.00034212500000000215, 0.00033906900000000087, 0.00034019500000000147, 0.00033870800000000006, 0.00034086100000000133, 0.0003443469999999983, 0.000343889, 0.0003409719999999984, 0.0003436250000000002, 0.00033826399999999784, 0.0003441529999999998, 0.0003414309999999997, 0.0003377910000000005, 0.0003411660000000004, 0.00034355500000000233, 0.0003409589999999983, 0.00034372300000000064, 0.0003391529999999983, 0.00033912499999999915, 0.00034413900000000025, 0.00033944400000000124, 0.0003402500000000003, 0.00033883399999999966, 0.00034359700000000104, 0.00034054199999999923, 0.0003431940000000015, 0.0003424719999999999, 0.0003439579999999984, 0.00033862499999999865, 0.0003390269999999987, 0.0003424309999999972, 0.00033966700000000183, 0.000338999999999999, 0.0003409439999999958, 0.0003391529999999948, 0.00033859699999999604, 0.0003427920000000015, 0.0003421249999999987, 0.000344098000000001, 0.00034087500000000437, 0.0003388329999999967, 0.0003393329999999972, 0.00033968099999999446, 0.000341000000000001, 0.00034326400000000284, 0.0003392499999999993, 0.00034087500000000437, 0.00034159699999999904, 0.00034386100000000086]</msg>
<status status="PASS" starttime="20201029 18:19:02.800" endtime="20201029 18:19:02.802"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.795" endtime="20201029 18:19:02.803"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:02.808" endtime="20201029 18:19:02.828"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.806" endtime="20201029 18:19:02.828"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.804" endtime="20201029 18:19:02.829"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.407" endtime="20201029 18:19:02.829"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.406" endtime="20201029 18:19:02.829"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:02.838" endtime="20201029 18:19:02.876"></status>
</kw>
<msg timestamp="20201029 18:19:02.876" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:02.836" endtime="20201029 18:19:02.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:02.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:02.877" endtime="20201029 18:19:02.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:02.880" endtime="20201029 18:19:02.881"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.834" endtime="20201029 18:19:02.882"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.831" endtime="20201029 18:19:02.882"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:02.889" endtime="20201029 18:19:03.175"></status>
</kw>
<msg timestamp="20201029 18:19:03.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024579958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024924514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:02.887" endtime="20201029 18:19:03.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024579958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024924514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:03.179" endtime="20201029 18:19:03.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:03.187" endtime="20201029 18:19:03.189"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.885" endtime="20201029 18:19:03.189"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.883" endtime="20201029 18:19:03.190"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:03.194" level="INFO">${RESULT} = [{'diff': 0.00034455599999999934}, {'diff': 0.00034281900000000115}, {'diff': 0.0003381250000000016}, {'diff': 0.00034277799999999845}, {'diff': 0.0003387359999999992}, {'diff': 0.0003432080000000011}...</msg>
<status status="PASS" starttime="20201029 18:19:03.190" endtime="20201029 18:19:03.194"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:03.198" level="INFO">${ACCURACY} = {'diff': [0.00034455599999999934, 0.00034281900000000115, 0.0003381250000000016, 0.00034277799999999845, 0.0003387359999999992, 0.0003432080000000011, 0.00033845900000000276, 0.0003391390000000022, 0....</msg>
<status status="PASS" starttime="20201029 18:19:03.195" endtime="20201029 18:19:03.198"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.202" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201029 18:19:03.201" endtime="20201029 18:19:03.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.204" level="INFO">VALUE: [0.00034455599999999934, 0.00034281900000000115, 0.0003381250000000016, 0.00034277799999999845, 0.0003387359999999992, 0.0003432080000000011, 0.00033845900000000276, 0.0003391390000000022, 0.00034423599999999777, 0.00034355500000000233, 0.00033916699999999786, 0.00034436200000000083, 0.00034281900000000115, 0.0003418050000000006, 0.00034066600000000336, 0.00034286099999999986, 0.0003390420000000012, 0.00034204100000000126, 0.00033966700000000183, 0.00034319499999999753, 0.00034358300000000147, 0.0003399449999999943, 0.00034186099999999886, 0.000341777999999994, 0.00034409700000000154, 0.00034190299999999757, 0.00033976399999999934, 0.0003420560000000003, 0.0003390830000000039, 0.0003393329999999972, 0.00033988900000000294, 0.0003421109999999991, 0.00034298700000000293, 0.00033954199999999823, 0.00034436100000000136, 0.0003435140000000031, 0.0003387919999999975, 0.0003408329999999987, 0.00033952799999999866, 0.00034320800000000456, 0.00034113899999999725, 0.00034122299999999467, 0.0003380139999999976, 0.000337999999999998, 0.0003406390000000037, 0.0003433050000000021, 0.0003384579999999998, 0.00033819499999999947, 0.0003402500000000003, 0.0003438749999999935]</msg>
<status status="PASS" starttime="20201029 18:19:03.203" endtime="20201029 18:19:03.205"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.198" endtime="20201029 18:19:03.206"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:03.209" endtime="20201029 18:19:03.228"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.208" endtime="20201029 18:19:03.229"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.206" endtime="20201029 18:19:03.229"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.830" endtime="20201029 18:19:03.230"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.829" endtime="20201029 18:19:03.230"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:03.238" endtime="20201029 18:19:03.273"></status>
</kw>
<msg timestamp="20201029 18:19:03.274" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:03.237" endtime="20201029 18:19:03.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.276" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:03.275" endtime="20201029 18:19:03.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:03.277" endtime="20201029 18:19:03.279"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.234" endtime="20201029 18:19:03.279"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.232" endtime="20201029 18:19:03.280"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:03.286" endtime="20201029 18:19:03.571"></status>
</kw>
<msg timestamp="20201029 18:19:03.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020737403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021093389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:03.285" endtime="20201029 18:19:03.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020737403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021093389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:03.575" endtime="20201029 18:19:03.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:03.583" endtime="20201029 18:19:03.585"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.282" endtime="20201029 18:19:03.585"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.280" endtime="20201029 18:19:03.586"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:03.590" level="INFO">${RESULT} = [{'diff': 0.0003559859999999991}, {'diff': 0.0003436250000000002}, {'diff': 0.00034163899999999775}, {'diff': 0.0003411390000000007}, {'diff': 0.0003383749999999984}, {'diff': 0.00034390299999999957},...</msg>
<status status="PASS" starttime="20201029 18:19:03.587" endtime="20201029 18:19:03.590"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:03.594" level="INFO">${ACCURACY} = {'diff': [0.0003559859999999991, 0.0003436250000000002, 0.00034163899999999775, 0.0003411390000000007, 0.0003383749999999984, 0.00034390299999999957, 0.0003416949999999995, 0.0003419719999999994, 0.00...</msg>
<status status="PASS" starttime="20201029 18:19:03.591" endtime="20201029 18:19:03.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.598" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201029 18:19:03.597" endtime="20201029 18:19:03.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.600" level="INFO">VALUE: [0.0003559859999999991, 0.0003436250000000002, 0.00034163899999999775, 0.0003411390000000007, 0.0003383749999999984, 0.00034390299999999957, 0.0003416949999999995, 0.0003419719999999994, 0.0003379160000000006, 0.00034309700000000054, 0.0003392359999999997, 0.000338999999999999, 0.0003415699999999994, 0.00033870800000000006, 0.0003379719999999989, 0.00033986099999999686, 0.0003402780000000029, 0.0003380550000000003, 0.00034322200000000067, 0.00034241600000000164, 0.0003419170000000006, 0.00034163899999999775, 0.0003379300000000002, 0.0003423200000000001, 0.00034308300000000097, 0.00033962499999999965, 0.00034318099999999796, 0.0003420560000000003, 0.0003403469999999978, 0.0003396109999999966, 0.000341292, 0.00034213899999999825, 0.0003383610000000023, 0.0003403889999999965, 0.000340888999999997, 0.0003443200000000021, 0.0003440140000000036, 0.00033854199999999723, 0.0003387359999999992, 0.00034419399999999906, 0.00033811100000000205, 0.00034181900000000015, 0.00034402699999999675, 0.0003410970000000055, 0.00034359700000000104, 0.00034144400000000324, 0.0003441669999999994, 0.00034255500000000133, 0.0003426390000000057, 0.00034318099999999796]</msg>
<status status="PASS" starttime="20201029 18:19:03.599" endtime="20201029 18:19:03.602"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.594" endtime="20201029 18:19:03.603"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:03.606" endtime="20201029 18:19:03.626"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.605" endtime="20201029 18:19:03.626"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.604" endtime="20201029 18:19:03.626"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.231" endtime="20201029 18:19:03.627"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.230" endtime="20201029 18:19:03.627"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:03.635" endtime="20201029 18:19:03.669"></status>
</kw>
<msg timestamp="20201029 18:19:03.669" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:03.634" endtime="20201029 18:19:03.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.672" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:03.670" endtime="20201029 18:19:03.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:03.673" endtime="20201029 18:19:03.675"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.631" endtime="20201029 18:19:03.675"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.629" endtime="20201029 18:19:03.675"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:03.682" endtime="20201029 18:19:03.968"></status>
</kw>
<msg timestamp="20201029 18:19:03.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020554431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020895444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:03.680" endtime="20201029 18:19:03.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020554431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020895444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:03.972" endtime="20201029 18:19:03.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:03.980" endtime="20201029 18:19:03.981"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.678" endtime="20201029 18:19:03.982"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.676" endtime="20201029 18:19:03.982"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:03.986" level="INFO">${RESULT} = [{'diff': 0.00034101299999999765}, {'diff': 0.0003435139999999996}, {'diff': 0.0003396110000000001}, {'diff': 0.0003388330000000002}, {'diff': 0.0003401529999999993}, {'diff': 0.00033955499999999833},...</msg>
<status status="PASS" starttime="20201029 18:19:03.983" endtime="20201029 18:19:03.986"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:03.991" level="INFO">${ACCURACY} = {'diff': [0.00034101299999999765, 0.0003435139999999996, 0.0003396110000000001, 0.0003388330000000002, 0.0003401529999999993, 0.00033955499999999833, 0.00033815300000000076, 0.0003417920000000005, 0.0...</msg>
<status status="PASS" starttime="20201029 18:19:03.987" endtime="20201029 18:19:03.991"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.995" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201029 18:19:03.994" endtime="20201029 18:19:03.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.998" level="INFO">VALUE: [0.00034101299999999765, 0.0003435139999999996, 0.0003396110000000001, 0.0003388330000000002, 0.0003401529999999993, 0.00033955499999999833, 0.00033815300000000076, 0.0003417920000000005, 0.00033970800000000106, 0.00034319399999999806, 0.0003423889999999985, 0.0003444860000000015, 0.0003388330000000002, 0.0003385129999999986, 0.000341985999999999, 0.00034172199999999917, 0.00034169500000000297, 0.000338403000000001, 0.0003380559999999998, 0.00033902799999999816, 0.0003387640000000018, 0.00034395800000000185, 0.0003415970000000025, 0.00033954199999999823, 0.0003379579999999993, 0.0003381809999999999, 0.00034190299999999757, 0.00034299999999999956, 0.0003390129999999991, 0.00034359700000000104, 0.0003388610000000028, 0.0003419449999999963, 0.0003436940000000055, 0.000338291999999997, 0.0003393610000000033, 0.0003395699999999974, 0.000341000000000001, 0.00034402699999999675, 0.00034166700000000383, 0.0003413889999999975, 0.00034290299999999857, 0.0003377779999999969, 0.0003397360000000002, 0.000343000000000003, 0.0003397089999999936, 0.0003438200000000016, 0.0003411669999999964, 0.00034086099999999786, 0.0003443330000000022, 0.0003421669999999974]</msg>
<status status="PASS" starttime="20201029 18:19:03.996" endtime="20201029 18:19:03.999"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.992" endtime="20201029 18:19:03.999"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:04.003" endtime="20201029 18:19:04.022"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.001" endtime="20201029 18:19:04.023"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.000" endtime="20201029 18:19:04.023"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.628" endtime="20201029 18:19:04.023"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.627" endtime="20201029 18:19:04.024"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:04.032" endtime="20201029 18:19:04.067"></status>
</kw>
<msg timestamp="20201029 18:19:04.067" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:04.031" endtime="20201029 18:19:04.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:04.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:04.068" endtime="20201029 18:19:04.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:04.071" endtime="20201029 18:19:04.073"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.028" endtime="20201029 18:19:04.073"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.026" endtime="20201029 18:19:04.073"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:04.080" endtime="20201029 18:19:04.368"></status>
</kw>
<msg timestamp="20201029 18:19:04.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020803264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021162139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:04.078" endtime="20201029 18:19:04.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:04.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020803264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021162139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:04.372" endtime="20201029 18:19:04.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:04.380" endtime="20201029 18:19:04.382"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.076" endtime="20201029 18:19:04.382"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.074" endtime="20201029 18:19:04.383"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:04.387" level="INFO">${RESULT} = [{'diff': 0.00035887500000000155}, {'diff': 0.0003438330000000017}, {'diff': 0.0003429300000000017}, {'diff': 0.0003379030000000005}, {'diff': 0.000343791000000003}, {'diff': 0.0003410699999999989}, {...</msg>
<status status="PASS" starttime="20201029 18:19:04.383" endtime="20201029 18:19:04.387"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:04.390" level="INFO">${ACCURACY} = {'diff': [0.00035887500000000155, 0.0003438330000000017, 0.0003429300000000017, 0.0003379030000000005, 0.000343791000000003, 0.0003410699999999989, 0.0003402500000000003, 0.0003395420000000017, 0.0003...</msg>
<status status="PASS" starttime="20201029 18:19:04.387" endtime="20201029 18:19:04.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:04.395" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201029 18:19:04.394" endtime="20201029 18:19:04.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:04.397" level="INFO">VALUE: [0.00035887500000000155, 0.0003438330000000017, 0.0003429300000000017, 0.0003379030000000005, 0.000343791000000003, 0.0003410699999999989, 0.0003402500000000003, 0.0003395420000000017, 0.0003419440000000003, 0.0003397499999999998, 0.0003397360000000002, 0.0003379719999999989, 0.00034277699999999897, 0.00034405599999999883, 0.0003393469999999968, 0.00034130599999999955, 0.0003403750000000004, 0.0003386250000000021, 0.00033898599999999945, 0.00033890299999999804, 0.0003419440000000003, 0.00034359700000000104, 0.00034431999999999865, 0.000338403000000001, 0.00034423600000000124, 0.00033986100000000033, 0.0003379030000000005, 0.0003388190000000006, 0.00033984700000000076, 0.00034204200000000073, 0.0003378190000000031, 0.00034063899999999675, 0.0003381249999999947, 0.00034374999999999684, 0.0003394309999999942, 0.00034072200000000163, 0.0003402779999999994, 0.000343986999999997, 0.0003406800000000029, 0.00034387500000000043, 0.0003431110000000001, 0.00034205500000000083, 0.00033966700000000183, 0.0003419720000000029, 0.00034391699999999914, 0.0003403889999999965, 0.000343889, 0.0003441659999999999, 0.0003408199999999986, 0.0003376809999999994]</msg>
<status status="PASS" starttime="20201029 18:19:04.396" endtime="20201029 18:19:04.398"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.391" endtime="20201029 18:19:04.399"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:04.402" endtime="20201029 18:19:04.422"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.401" endtime="20201029 18:19:04.422"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.400" endtime="20201029 18:19:04.423"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.024" endtime="20201029 18:19:04.423"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.024" endtime="20201029 18:19:04.423"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:04.432" endtime="20201029 18:19:04.470"></status>
</kw>
<msg timestamp="20201029 18:19:04.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:04.430" endtime="20201029 18:19:04.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:04.473" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:04.471" endtime="20201029 18:19:04.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:04.474" endtime="20201029 18:19:04.476"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.427" endtime="20201029 18:19:04.476"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.425" endtime="20201029 18:19:04.477"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:04.483" endtime="20201029 18:19:04.769"></status>
</kw>
<msg timestamp="20201029 18:19:04.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023269736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023626236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:04.482" endtime="20201029 18:19:04.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:04.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023269736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023626236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:04.773" endtime="20201029 18:19:04.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:04.781" endtime="20201029 18:19:04.783"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.479" endtime="20201029 18:19:04.783"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.477" endtime="20201029 18:19:04.783"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:04.787" level="INFO">${RESULT} = [{'diff': 0.0003564999999999992}, {'diff': 0.00034330600000000155}, {'diff': 0.0003398190000000016}, {'diff': 0.0003387780000000014}, {'diff': 0.00034136100000000183}, {'diff': 0.0003427499999999993},...</msg>
<status status="PASS" starttime="20201029 18:19:04.784" endtime="20201029 18:19:04.788"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:04.791" level="INFO">${ACCURACY} = {'diff': [0.0003564999999999992, 0.00034330600000000155, 0.0003398190000000016, 0.0003387780000000014, 0.00034136100000000183, 0.0003427499999999993, 0.000343986000000001, 0.0003428470000000003, 0.000...</msg>
<status status="PASS" starttime="20201029 18:19:04.788" endtime="20201029 18:19:04.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:04.796" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201029 18:19:04.795" endtime="20201029 18:19:04.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:04.798" level="INFO">VALUE: [0.0003564999999999992, 0.00034330600000000155, 0.0003398190000000016, 0.0003387780000000014, 0.00034136100000000183, 0.0003427499999999993, 0.000343986000000001, 0.0003428470000000003, 0.0003401659999999994, 0.00034104199999999973, 0.0003430560000000013, 0.00033779199999999995, 0.0003420699999999999, 0.00033884699999999976, 0.00034218100000000043, 0.00033916700000000133, 0.00033993100000000165, 0.00034038899999999997, 0.0003425140000000021, 0.00034022200000000113, 0.0003405970000000015, 0.00033869499999999997, 0.00034424999999999734, 0.0003443329999999953, 0.00033920900000000004, 0.0003431110000000001, 0.0003380970000000025, 0.0003379579999999993, 0.00034131899999999965, 0.0003396109999999966, 0.0003395280000000056, 0.0003442639999999969, 0.0003436659999999994, 0.0003392229999999996, 0.0003395559999999978, 0.0003423330000000002, 0.00034116700000000333, 0.00033816700000000033, 0.0003417500000000018, 0.00033983300000000466, 0.0003385830000000034, 0.0003390970000000035, 0.00034374999999999684, 0.0003413329999999992, 0.00033893100000000065, 0.00034158299999999947, 0.0003412360000000017, 0.0003400559999999983, 0.00034366700000000583, 0.00034087500000000437]</msg>
<status status="PASS" starttime="20201029 18:19:04.797" endtime="20201029 18:19:04.800"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.792" endtime="20201029 18:19:04.800"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:04.804" endtime="20201029 18:19:04.823"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.802" endtime="20201029 18:19:04.824"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.801" endtime="20201029 18:19:04.824"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.424" endtime="20201029 18:19:04.824"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.423" endtime="20201029 18:19:04.824"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:04.833" endtime="20201029 18:19:04.870"></status>
</kw>
<msg timestamp="20201029 18:19:04.871" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:04.831" endtime="20201029 18:19:04.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:04.873" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:04.872" endtime="20201029 18:19:04.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:04.874" endtime="20201029 18:19:04.876"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.829" endtime="20201029 18:19:04.876"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.827" endtime="20201029 18:19:04.877"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:04.883" endtime="20201029 18:19:05.170"></status>
</kw>
<msg timestamp="20201029 18:19:05.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023711347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024064681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:04.882" endtime="20201029 18:19:05.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:05.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023711347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024064681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:05.174" endtime="20201029 18:19:05.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:05.182" endtime="20201029 18:19:05.184"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.879" endtime="20201029 18:19:05.184"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.877" endtime="20201029 18:19:05.185"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:05.188" level="INFO">${RESULT} = [{'diff': 0.0003533340000000003}, {'diff': 0.0003408469999999983}, {'diff': 0.00034359700000000104}, {'diff': 0.0003417780000000009}, {'diff': 0.00033952800000000213}, {'diff': 0.00034220900000000304}...</msg>
<status status="PASS" starttime="20201029 18:19:05.185" endtime="20201029 18:19:05.189"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:05.193" level="INFO">${ACCURACY} = {'diff': [0.0003533340000000003, 0.0003408469999999983, 0.00034359700000000104, 0.0003417780000000009, 0.00033952800000000213, 0.00034220900000000304, 0.00034054199999999923, 0.0003383199999999996, 0....</msg>
<status status="PASS" starttime="20201029 18:19:05.189" endtime="20201029 18:19:05.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:05.198" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201029 18:19:05.197" endtime="20201029 18:19:05.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:05.200" level="INFO">VALUE: [0.0003533340000000003, 0.0003408469999999983, 0.00034359700000000104, 0.0003417780000000009, 0.00033952800000000213, 0.00034220900000000304, 0.00034054199999999923, 0.0003383199999999996, 0.0003422639999999984, 0.0003436110000000006, 0.00034281999999999715, 0.00034327799999999895, 0.00034230600000000055, 0.0003417780000000009, 0.0003411390000000007, 0.000338096999999999, 0.0003402909999999995, 0.00033967999999999846, 0.00033888900000000194, 0.0003389170000000011, 0.00033888899999999847, 0.00034330499999999514, 0.0003432780000000024, 0.0003441110000000011, 0.0003439999999999971, 0.0003402360000000007, 0.0003426379999999993, 0.000343889, 0.0003401810000000019, 0.00034141599999999717, 0.00034104199999999973, 0.00033965300000000226, 0.0003436110000000006, 0.00033965300000000226, 0.00034137500000000487, 0.00034220900000000304, 0.00033765300000000026, 0.00034237499999999893, 0.0003409170000000031, 0.0003410140000000006, 0.0003425419999999943, 0.00034286099999999986, 0.0003391250000000026, 0.00034373599999999727, 0.0003433050000000021, 0.0003377359999999982, 0.00034036099999999736, 0.00034066600000000336, 0.0003394720000000004, 0.00033869499999999997]</msg>
<status status="PASS" starttime="20201029 18:19:05.199" endtime="20201029 18:19:05.201"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.194" endtime="20201029 18:19:05.202"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:05.205" endtime="20201029 18:19:05.225"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.204" endtime="20201029 18:19:05.225"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.203" endtime="20201029 18:19:05.225"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.825" endtime="20201029 18:19:05.226"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.825" endtime="20201029 18:19:05.226"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:05.235" endtime="20201029 18:19:05.272"></status>
</kw>
<msg timestamp="20201029 18:19:05.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:05.233" endtime="20201029 18:19:05.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:05.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:05.273" endtime="20201029 18:19:05.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:05.276" endtime="20201029 18:19:05.277"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.230" endtime="20201029 18:19:05.278"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.228" endtime="20201029 18:19:05.278"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:05.285" endtime="20201029 18:19:05.571"></status>
</kw>
<msg timestamp="20201029 18:19:05.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024214528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024566597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:05.283" endtime="20201029 18:19:05.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:05.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024214528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024566597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:05.575" endtime="20201029 18:19:05.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:05.583" endtime="20201029 18:19:05.585"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.281" endtime="20201029 18:19:05.585"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.279" endtime="20201029 18:19:05.586"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:05.589" level="INFO">${RESULT} = [{'diff': 0.000352069}, {'diff': 0.000343292000000002}, {'diff': 0.0003380970000000025}, {'diff': 0.0003418049999999971}, {'diff': 0.000343195000000001}, {'diff': 0.0003400139999999996}, {'diff': 0.00...</msg>
<status status="PASS" starttime="20201029 18:19:05.586" endtime="20201029 18:19:05.590"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:05.593" level="INFO">${ACCURACY} = {'diff': [0.000352069, 0.000343292000000002, 0.0003380970000000025, 0.0003418049999999971, 0.000343195000000001, 0.0003400139999999996, 0.00033802800000000063, 0.00034230600000000055, 0.00034177799999...</msg>
<status status="PASS" starttime="20201029 18:19:05.590" endtime="20201029 18:19:05.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:05.598" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201029 18:19:05.597" endtime="20201029 18:19:05.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:05.600" level="INFO">VALUE: [0.000352069, 0.000343292000000002, 0.0003380970000000025, 0.0003418049999999971, 0.000343195000000001, 0.0003400139999999996, 0.00033802800000000063, 0.00034230600000000055, 0.00034177799999999744, 0.00034180600000000005, 0.0003411520000000008, 0.00034295800000000085, 0.00034036100000000083, 0.00034099999999999756, 0.0003419719999999994, 0.0003438189999999987, 0.0003406110000000011, 0.0003399309999999982, 0.00034176400000000134, 0.000343097000000004, 0.00034347199999999745, 0.00033947299999999986, 0.0003404590000000013, 0.00034272200000000363, 0.000338999999999999, 0.0003405140000000001, 0.0003444579999999989, 0.00034076400000000034, 0.0003386250000000021, 0.0003399030000000025, 0.00033890200000000203, 0.00033855600000000374, 0.00034259700000000004, 0.0003405979999999975, 0.0003379160000000006, 0.0003405699999999984, 0.0003431669999999984, 0.00033922200000000013, 0.00034154200000000023, 0.00034066700000000283, 0.0003425270000000022, 0.00033942999999999474, 0.00034336199999999983, 0.0003403889999999965, 0.0003421249999999987, 0.0003414160000000041, 0.00034413900000000025, 0.00034004199999999873, 0.0003381390000000012, 0.00033959699999999704]</msg>
<status status="PASS" starttime="20201029 18:19:05.599" endtime="20201029 18:19:05.601"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.594" endtime="20201029 18:19:05.601"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:05.608" endtime="20201029 18:19:05.630"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.605" endtime="20201029 18:19:05.631"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.603" endtime="20201029 18:19:05.632"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.227" endtime="20201029 18:19:05.632"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.226" endtime="20201029 18:19:05.633"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:05.651" endtime="20201029 18:19:05.691"></status>
</kw>
<msg timestamp="20201029 18:19:05.692" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:05.648" endtime="20201029 18:19:05.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:05.697" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:05.694" endtime="20201029 18:19:05.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:05.700" endtime="20201029 18:19:05.703"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.642" endtime="20201029 18:19:05.704"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.638" endtime="20201029 18:19:05.704"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:05.711" endtime="20201029 18:19:05.997"></status>
</kw>
<msg timestamp="20201029 18:19:06.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037365417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037725403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:05.709" endtime="20201029 18:19:06.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:06.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037365417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037725403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:06.001" endtime="20201029 18:19:06.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:06.009" endtime="20201029 18:19:06.011"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.707" endtime="20201029 18:19:06.012"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.705" endtime="20201029 18:19:06.012"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:06.016" level="INFO">${RESULT} = [{'diff': 0.00035998599999999964}, {'diff': 0.00033808399999999544}, {'diff': 0.0003413469999999988}, {'diff': 0.0003402779999999994}, {'diff': 0.0003396390000000027}, {'diff': 0.0003404720000000014},...</msg>
<status status="PASS" starttime="20201029 18:19:06.013" endtime="20201029 18:19:06.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:06.020" level="INFO">${ACCURACY} = {'diff': [0.00035998599999999964, 0.00033808399999999544, 0.0003413469999999988, 0.0003402779999999994, 0.0003396390000000027, 0.0003404720000000014, 0.0003393049999999981, 0.00034343100000000515, 0.0...</msg>
<status status="PASS" starttime="20201029 18:19:06.017" endtime="20201029 18:19:06.020"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:06.024" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201029 18:19:06.023" endtime="20201029 18:19:06.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:06.027" level="INFO">VALUE: [0.00035998599999999964, 0.00033808399999999544, 0.0003413469999999988, 0.0003402779999999994, 0.0003396390000000027, 0.0003404720000000014, 0.0003393049999999981, 0.00034343100000000515, 0.00034036099999999736, 0.0003394580000000008, 0.00034424999999999734, 0.0003428470000000003, 0.0003426379999999993, 0.00034070800000000206, 0.00033890299999999457, 0.00033827800000000435, 0.0003445140000000041, 0.000344194000000006, 0.0003414999999999946, 0.00034248600000000295, 0.00033829100000000445, 0.0003385139999999981, 0.0003394580000000008, 0.00034151399999999416, 0.00034380600000000205, 0.00034034700000000473, 0.0003436529999999993, 0.0003407779999999999, 0.0003444020000000006, 0.000339403000000002, 0.0003398050000000055, 0.00033870800000000006, 0.0003389589999999998, 0.0003417639999999944, 0.00034337499999999993, 0.0003402360000000007, 0.00033833400000000263, 0.0003421249999999987, 0.0003391810000000009, 0.0003423469999999998, 0.00034159699999999904, 0.0003412780000000004, 0.00034101399999999366, 0.0003405000000000005, 0.00034152800000000066, 0.00034165300000000426, 0.0003406109999999976, 0.0003412360000000017, 0.0003380970000000025, 0.0003395269999999992]</msg>
<status status="PASS" starttime="20201029 18:19:06.025" endtime="20201029 18:19:06.028"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.021" endtime="20201029 18:19:06.029"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:06.033" endtime="20201029 18:19:06.052"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.031" endtime="20201029 18:19:06.053"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.030" endtime="20201029 18:19:06.053"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.635" endtime="20201029 18:19:06.053"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.634" endtime="20201029 18:19:06.053"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:06.062" endtime="20201029 18:19:06.096"></status>
</kw>
<msg timestamp="20201029 18:19:06.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:06.061" endtime="20201029 18:19:06.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:06.099" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:06.098" endtime="20201029 18:19:06.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:06.100" endtime="20201029 18:19:06.102"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.058" endtime="20201029 18:19:06.103"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.056" endtime="20201029 18:19:06.103"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:06.110" endtime="20201029 18:19:06.395"></status>
</kw>
<msg timestamp="20201029 18:19:06.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020570736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020913292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:06.108" endtime="20201029 18:19:06.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:06.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020570736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020913292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:06.399" endtime="20201029 18:19:06.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:06.407" endtime="20201029 18:19:06.409"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.106" endtime="20201029 18:19:06.409"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.104" endtime="20201029 18:19:06.410"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:06.414" level="INFO">${RESULT} = [{'diff': 0.0003425560000000008}, {'diff': 0.0003385840000000029}, {'diff': 0.0003438609999999974}, {'diff': 0.0003427639999999989}, {'diff': 0.0003432089999999971}, {'diff': 0.0003407500000000008}, {...</msg>
<status status="PASS" starttime="20201029 18:19:06.410" endtime="20201029 18:19:06.414"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:06.419" level="INFO">${ACCURACY} = {'diff': [0.0003425560000000008, 0.0003385840000000029, 0.0003438609999999974, 0.0003427639999999989, 0.0003432089999999971, 0.0003407500000000008, 0.00034140300000000054, 0.0003424310000000007, 0.000...</msg>
<status status="PASS" starttime="20201029 18:19:06.415" endtime="20201029 18:19:06.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:06.427" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201029 18:19:06.425" endtime="20201029 18:19:06.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:06.432" level="INFO">VALUE: [0.0003425560000000008, 0.0003385840000000029, 0.0003438609999999974, 0.0003427639999999989, 0.0003432089999999971, 0.0003407500000000008, 0.00034140300000000054, 0.0003424310000000007, 0.00034427799999999995, 0.0003416109999999986, 0.000343582999999998, 0.0003433049999999986, 0.0003416530000000008, 0.0003392779999999984, 0.00033916700000000133, 0.00033886099999999933, 0.00033852800000000113, 0.00034081899999999915, 0.00034022200000000113, 0.00034154200000000023, 0.00034304199999999826, 0.0003380700000000028, 0.0003429590000000003, 0.0003442080000000021, 0.00033943100000000115, 0.00033851400000000156, 0.00034299999999999956, 0.0003403750000000004, 0.0003421390000000017, 0.00033862499999999865, 0.0003413469999999988, 0.00034348600000000395, 0.00034161100000000555, 0.0003391390000000022, 0.00034111100000000505, 0.00034384800000000076, 0.0003382220000000061, 0.0003417089999999956, 0.0003404590000000013, 0.0003396800000000019, 0.0003383190000000036, 0.00034429199999999605, 0.0003393060000000045, 0.0003400139999999996, 0.00034020800000000156, 0.0003415979999999985, 0.0003397779999999989, 0.00034397199999999795, 0.00033966600000000235, 0.00033863899999999475]</msg>
<status status="PASS" starttime="20201029 18:19:06.430" endtime="20201029 18:19:06.433"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.420" endtime="20201029 18:19:06.434"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:06.441" endtime="20201029 18:19:06.463"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.439" endtime="20201029 18:19:06.463"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.437" endtime="20201029 18:19:06.464"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.054" endtime="20201029 18:19:06.464"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.054" endtime="20201029 18:19:06.464"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:06.473" endtime="20201029 18:19:06.508"></status>
</kw>
<msg timestamp="20201029 18:19:06.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:06.471" endtime="20201029 18:19:06.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:06.511" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:06.510" endtime="20201029 18:19:06.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:06.512" endtime="20201029 18:19:06.514"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.469" endtime="20201029 18:19:06.514"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.467" endtime="20201029 18:19:06.515"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:06.521" endtime="20201029 18:19:06.808"></status>
</kw>
<msg timestamp="20201029 18:19:06.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022025736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022385097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:06.520" endtime="20201029 18:19:06.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:06.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022025736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022385097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:06.812" endtime="20201029 18:19:06.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:06.820" endtime="20201029 18:19:06.822"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.517" endtime="20201029 18:19:06.822"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.515" endtime="20201029 18:19:06.823"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:06.827" level="INFO">${RESULT} = [{'diff': 0.000359360999999999}, {'diff': 0.00033977699999999944}, {'diff': 0.0003411530000000003}, {'diff': 0.00034222199999999967}, {'diff': 0.00034041599999999964}, {'diff': 0.00033812499999999815}...</msg>
<status status="PASS" starttime="20201029 18:19:06.823" endtime="20201029 18:19:06.827"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:06.831" level="INFO">${ACCURACY} = {'diff': [0.000359360999999999, 0.00033977699999999944, 0.0003411530000000003, 0.00034222199999999967, 0.00034041599999999964, 0.00033812499999999815, 0.00034198600000000245, 0.00034187499999999843, 0...</msg>
<status status="PASS" starttime="20201029 18:19:06.828" endtime="20201029 18:19:06.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:06.835" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201029 18:19:06.834" endtime="20201029 18:19:06.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:06.838" level="INFO">VALUE: [0.000359360999999999, 0.00033977699999999944, 0.0003411530000000003, 0.00034222199999999967, 0.00034041599999999964, 0.00033812499999999815, 0.00034198600000000245, 0.00034187499999999843, 0.00033802800000000063, 0.0003427780000000019, 0.00034272299999999964, 0.00033819500000000294, 0.0003384870000000019, 0.00034138900000000097, 0.00034354199999999877, 0.00034286099999999986, 0.00034240300000000154, 0.00034390300000000304, 0.0003397499999999998, 0.0003410689999999994, 0.0003402909999999995, 0.0003424170000000011, 0.0003394309999999977, 0.0003442640000000004, 0.00033970800000000106, 0.0003417500000000018, 0.0003435560000000018, 0.0003401799999999955, 0.00034058299999999847, 0.0003425560000000008, 0.0003388199999999966, 0.000338612000000002, 0.00033852799999999766, 0.0003396940000000015, 0.00033916700000000133, 0.00033786099999999486, 0.00034059699999999804, 0.0003405000000000005, 0.00033906900000000434, 0.00034391699999999914, 0.0003394999999999995, 0.00033804200000000367, 0.000338387999999995, 0.0003389579999999934, 0.00034102800000000016, 0.00034342999999999874, 0.0003436529999999993, 0.0003381799999999935, 0.0003383610000000023, 0.0003420560000000003]</msg>
<status status="PASS" starttime="20201029 18:19:06.836" endtime="20201029 18:19:06.838"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.831" endtime="20201029 18:19:06.839"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:06.843" endtime="20201029 18:19:06.862"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.841" endtime="20201029 18:19:06.863"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.840" endtime="20201029 18:19:06.863"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.465" endtime="20201029 18:19:06.863"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.464" endtime="20201029 18:19:06.864"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:06.872" endtime="20201029 18:19:06.910"></status>
</kw>
<msg timestamp="20201029 18:19:06.910" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:06.871" endtime="20201029 18:19:06.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:06.913" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:06.911" endtime="20201029 18:19:06.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:06.914" endtime="20201029 18:19:06.915"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.868" endtime="20201029 18:19:06.916"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.866" endtime="20201029 18:19:06.916"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:06.923" endtime="20201029 18:19:07.209"></status>
</kw>
<msg timestamp="20201029 18:19:07.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024422056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024768083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:06.921" endtime="20201029 18:19:07.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:07.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024422056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024768083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:07.213" endtime="20201029 18:19:07.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:07.221" endtime="20201029 18:19:07.223"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.919" endtime="20201029 18:19:07.224"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.917" endtime="20201029 18:19:07.224"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:07.228" level="INFO">${RESULT} = [{'diff': 0.00034602699999999875}, {'diff': 0.0003411660000000004}, {'diff': 0.0003397919999999985}, {'diff': 0.0003427500000000028}, {'diff': 0.00034091600000000014}, {'diff': 0.0003441799999999995},...</msg>
<status status="PASS" starttime="20201029 18:19:07.225" endtime="20201029 18:19:07.228"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:07.232" level="INFO">${ACCURACY} = {'diff': [0.00034602699999999875, 0.0003411660000000004, 0.0003397919999999985, 0.0003427500000000028, 0.00034091600000000014, 0.0003441799999999995, 0.00034244500000000025, 0.00034130599999999955, 0....</msg>
<status status="PASS" starttime="20201029 18:19:07.229" endtime="20201029 18:19:07.232"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:07.237" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201029 18:19:07.236" endtime="20201029 18:19:07.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:07.239" level="INFO">VALUE: [0.00034602699999999875, 0.0003411660000000004, 0.0003397919999999985, 0.0003427500000000028, 0.00034091600000000014, 0.0003441799999999995, 0.00034244500000000025, 0.00034130599999999955, 0.00034309700000000054, 0.0003396110000000001, 0.00034369399999999856, 0.0003430690000000014, 0.00034336100000000036, 0.0003379030000000005, 0.00034066699999999936, 0.00033856900000000037, 0.0003436530000000028, 0.0003389169999999976, 0.0003394859999999965, 0.00034437500000000093, 0.00034131899999999965, 0.00034334699999999385, 0.000342000000000002, 0.0003390559999999973, 0.00034002799999999916, 0.0003425140000000021, 0.00034172200000000263, 0.00034391599999999967, 0.0003424450000000037, 0.000338888999999995, 0.00034248700000000243, 0.0003412780000000004, 0.00034087499999999743, 0.00033984700000000423, 0.00033819499999999947, 0.0003439309999999987, 0.0003416529999999973, 0.0003391249999999957, 0.0003429579999999974, 0.00034022200000000113, 0.00034172299999999517, 0.00034098600000000145, 0.00033804199999999673, 0.00034052799999999966, 0.00034368099999999846, 0.000338888999999995, 0.0003394439999999943, 0.0003405689999999989, 0.00034270800000000406, 0.0003430700000000009]</msg>
<status status="PASS" starttime="20201029 18:19:07.238" endtime="20201029 18:19:07.240"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.233" endtime="20201029 18:19:07.241"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:07.245" endtime="20201029 18:19:07.264"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.243" endtime="20201029 18:19:07.265"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.242" endtime="20201029 18:19:07.265"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.864" endtime="20201029 18:19:07.265"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.864" endtime="20201029 18:19:07.265"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:07.274" endtime="20201029 18:19:07.313"></status>
</kw>
<msg timestamp="20201029 18:19:07.313" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:07.272" endtime="20201029 18:19:07.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:07.315" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:07.314" endtime="20201029 18:19:07.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:07.317" endtime="20201029 18:19:07.318"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.270" endtime="20201029 18:19:07.320"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.268" endtime="20201029 18:19:07.320"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:07.326" endtime="20201029 18:19:07.612"></status>
</kw>
<msg timestamp="20201029 18:19:07.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024417306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024773903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:07.325" endtime="20201029 18:19:07.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:07.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024417306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024773903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:07.616" endtime="20201029 18:19:07.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:07.624" endtime="20201029 18:19:07.625"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.322" endtime="20201029 18:19:07.626"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.321" endtime="20201029 18:19:07.626"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:07.630" level="INFO">${RESULT} = [{'diff': 0.00035659700000000016}, {'diff': 0.000342097999999999}, {'diff': 0.00033870800000000006}, {'diff': 0.0003392499999999993}, {'diff': 0.00034381999999999815}, {'diff': 0.00034409699999999807}...</msg>
<status status="PASS" starttime="20201029 18:19:07.627" endtime="20201029 18:19:07.630"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:07.635" level="INFO">${ACCURACY} = {'diff': [0.00035659700000000016, 0.000342097999999999, 0.00033870800000000006, 0.0003392499999999993, 0.00034381999999999815, 0.00034409699999999807, 0.0003434730000000004, 0.000339097, 0.00034311100...</msg>
<status status="PASS" starttime="20201029 18:19:07.631" endtime="20201029 18:19:07.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:07.639" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201029 18:19:07.638" endtime="20201029 18:19:07.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:07.642" level="INFO">VALUE: [0.00035659700000000016, 0.000342097999999999, 0.00033870800000000006, 0.0003392499999999993, 0.00034381999999999815, 0.00034409699999999807, 0.0003434730000000004, 0.000339097, 0.0003431110000000001, 0.0003391529999999983, 0.0003437500000000003, 0.0003396110000000001, 0.00033970900000000054, 0.00033884699999999976, 0.0003395970000000005, 0.000342679999999998, 0.0003422500000000023, 0.00034299999999999956, 0.00033872199999999617, 0.00034258300000000047, 0.00033776399999999734, 0.00034059699999999804, 0.00034002799999999916, 0.0003387499999999988, 0.00034391599999999967, 0.0003429450000000042, 0.00034355500000000233, 0.00034119399999999606, 0.0003426940000000045, 0.000341000000000001, 0.00034242999999999774, 0.0003414579999999959, 0.00033927800000000535, 0.0003431810000000049, 0.00033802799999999716, 0.0003427219999999967, 0.0003380689999999964, 0.0003425419999999943, 0.00034013899999999625, 0.0003386810000000004, 0.00034223599999999577, 0.00034140299999999707, 0.0003406249999999972, 0.0003425140000000021, 0.0003434999999999966, 0.0003410689999999994, 0.0003435700000000014, 0.00033838900000000144, 0.0003383480000000022, 0.00034248600000000295]</msg>
<status status="PASS" starttime="20201029 18:19:07.640" endtime="20201029 18:19:07.643"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.636" endtime="20201029 18:19:07.643"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:07.647" endtime="20201029 18:19:07.666"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.645" endtime="20201029 18:19:07.667"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.644" endtime="20201029 18:19:07.667"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.266" endtime="20201029 18:19:07.667"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.266" endtime="20201029 18:19:07.668"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:07.676" endtime="20201029 18:19:07.714"></status>
</kw>
<msg timestamp="20201029 18:19:07.715" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:07.675" endtime="20201029 18:19:07.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:07.717" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:07.716" endtime="20201029 18:19:07.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:07.718" endtime="20201029 18:19:07.721"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.672" endtime="20201029 18:19:07.721"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.670" endtime="20201029 18:19:07.722"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:07.728" endtime="20201029 18:19:08.024"></status>
</kw>
<msg timestamp="20201029 18:19:08.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024210361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024567153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:07.726" endtime="20201029 18:19:08.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024210361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024567153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:08.028" endtime="20201029 18:19:08.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.036" endtime="20201029 18:19:08.038"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.724" endtime="20201029 18:19:08.038"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.722" endtime="20201029 18:19:08.039"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:08.042" level="INFO">${RESULT} = [{'diff': 0.0003567920000000016}, {'diff': 0.0003391390000000022}, {'diff': 0.00034070899999999807}, {'diff': 0.0003392780000000019}, {'diff': 0.00034076400000000034}, {'diff': 0.0003404299999999992},...</msg>
<status status="PASS" starttime="20201029 18:19:08.039" endtime="20201029 18:19:08.043"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:08.046" level="INFO">${ACCURACY} = {'diff': [0.0003567920000000016, 0.0003391390000000022, 0.00034070899999999807, 0.0003392780000000019, 0.00034076400000000034, 0.0003404299999999992, 0.00034034800000000073, 0.00033954199999999823, 0....</msg>
<status status="PASS" starttime="20201029 18:19:08.043" endtime="20201029 18:19:08.047"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.051" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201029 18:19:08.050" endtime="20201029 18:19:08.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.053" level="INFO">VALUE: [0.0003567920000000016, 0.0003391390000000022, 0.00034070899999999807, 0.0003392780000000019, 0.00034076400000000034, 0.0003404299999999992, 0.00034034800000000073, 0.00033954199999999823, 0.00034266700000000136, 0.0003437219999999977, 0.0003424300000000012, 0.00034309699999999707, 0.000340791, 0.00033990299999999904, 0.0003428470000000003, 0.00034255500000000133, 0.00034386100000000086, 0.00034313899999999925, 0.0003401389999999997, 0.0003426110000000031, 0.00033859699999999604, 0.0003412910000000005, 0.0003385700000000033, 0.0003402360000000007, 0.00034137499999999793, 0.0003439449999999983, 0.0003429579999999974, 0.00034072200000000163, 0.0003404579999999949, 0.0003434309999999982, 0.0003406250000000041, 0.00034063899999999675, 0.00034272299999999617, 0.00034336100000000036, 0.0003385420000000042, 0.0003413889999999975, 0.00033820899999999904, 0.0003379590000000057, 0.0003424720000000034, 0.000338291999999997, 0.000341888999999998, 0.00033884700000000323, 0.000342000000000002, 0.0003414449999999958, 0.00034398600000000445, 0.00034098600000000145, 0.00034287499999999943, 0.000341097999999998, 0.00033836200000000177, 0.00034304100000000226]</msg>
<status status="PASS" starttime="20201029 18:19:08.052" endtime="20201029 18:19:08.054"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.047" endtime="20201029 18:19:08.055"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:08.058" endtime="20201029 18:19:08.078"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.057" endtime="20201029 18:19:08.078"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.056" endtime="20201029 18:19:08.079"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.668" endtime="20201029 18:19:08.079"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.668" endtime="20201029 18:19:08.079"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.088" endtime="20201029 18:19:08.126"></status>
</kw>
<msg timestamp="20201029 18:19:08.126" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:08.086" endtime="20201029 18:19:08.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:08.128" endtime="20201029 18:19:08.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.130" endtime="20201029 18:19:08.132"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.084" endtime="20201029 18:19:08.132"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.081" endtime="20201029 18:19:08.133"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.139" endtime="20201029 18:19:08.423"></status>
</kw>
<msg timestamp="20201029 18:19:08.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024779764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025122528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:08.138" endtime="20201029 18:19:08.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024779764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025122528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:08.428" endtime="20201029 18:19:08.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.436" endtime="20201029 18:19:08.437"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.135" endtime="20201029 18:19:08.438"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.133" endtime="20201029 18:19:08.438"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:08.442" level="INFO">${RESULT} = [{'diff': 0.00034276400000000234}, {'diff': 0.00034218000000000096}, {'diff': 0.00034236099999999936}, {'diff': 0.0003431249999999997}, {'diff': 0.0003401110000000006}, {'diff': 0.0003382640000000013}...</msg>
<status status="PASS" starttime="20201029 18:19:08.439" endtime="20201029 18:19:08.443"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:08.446" level="INFO">${ACCURACY} = {'diff': [0.00034276400000000234, 0.00034218000000000096, 0.00034236099999999936, 0.0003431249999999997, 0.0003401110000000006, 0.0003382640000000013, 0.00034162500000000165, 0.0003407919999999995, 0....</msg>
<status status="PASS" starttime="20201029 18:19:08.443" endtime="20201029 18:19:08.446"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.451" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201029 18:19:08.450" endtime="20201029 18:19:08.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.453" level="INFO">VALUE: [0.00034276400000000234, 0.00034218000000000096, 0.00034236099999999936, 0.0003431249999999997, 0.0003401110000000006, 0.0003382640000000013, 0.00034162500000000165, 0.0003407919999999995, 0.00033856999999999984, 0.000341194999999999, 0.0003428340000000002, 0.0003396810000000014, 0.0003406390000000002, 0.00034108299999999897, 0.0003394999999999995, 0.00034397199999999795, 0.00034187499999999843, 0.0003382909999999975, 0.00034222200000000313, 0.0003441110000000011, 0.0003394300000000017, 0.00034054199999999923, 0.00034298700000000293, 0.0003442360000000047, 0.0003434439999999983, 0.00033952799999999866, 0.0003396109999999966, 0.0003396810000000014, 0.0003417360000000022, 0.0003392909999999985, 0.00034087499999999743, 0.0003409579999999954, 0.0003435409999999958, 0.00034147199999999545, 0.00034230600000000055, 0.00034387500000000043, 0.00034092999999999624, 0.00033819499999999947, 0.00034165199999999785, 0.0003398469999999973, 0.0003426669999999979, 0.0003379030000000005, 0.0003389160000000016, 0.00034422200000000513, 0.00034236199999999883, 0.0003384719999999994, 0.0003436529999999993, 0.0003433200000000011, 0.00034401399999999666, 0.00034055499999999933]</msg>
<status status="PASS" starttime="20201029 18:19:08.452" endtime="20201029 18:19:08.455"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.447" endtime="20201029 18:19:08.455"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:08.459" endtime="20201029 18:19:08.478"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.457" endtime="20201029 18:19:08.479"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.456" endtime="20201029 18:19:08.479"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.080" endtime="20201029 18:19:08.479"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.079" endtime="20201029 18:19:08.479"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.488" endtime="20201029 18:19:08.522"></status>
</kw>
<msg timestamp="20201029 18:19:08.523" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:08.487" endtime="20201029 18:19:08.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.525" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:08.524" endtime="20201029 18:19:08.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.526" endtime="20201029 18:19:08.528"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.484" endtime="20201029 18:19:08.529"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.482" endtime="20201029 18:19:08.529"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.535" endtime="20201029 18:19:08.821"></status>
</kw>
<msg timestamp="20201029 18:19:08.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021102125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021445611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:08.534" endtime="20201029 18:19:08.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021102125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021445611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:08.825" endtime="20201029 18:19:08.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.833" endtime="20201029 18:19:08.835"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.531" endtime="20201029 18:19:08.835"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.530" endtime="20201029 18:19:08.836"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:08.840" level="INFO">${RESULT} = [{'diff': 0.0003434860000000005}, {'diff': 0.0003380559999999998}, {'diff': 0.0003432639999999994}, {'diff': 0.00033963799999999975}, {'diff': 0.0003429720000000004}, {'diff': 0.00034427799999999995},...</msg>
<status status="PASS" starttime="20201029 18:19:08.837" endtime="20201029 18:19:08.840"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:08.845" level="INFO">${ACCURACY} = {'diff': [0.0003434860000000005, 0.0003380559999999998, 0.0003432639999999994, 0.00033963799999999975, 0.0003429720000000004, 0.00034427799999999995, 0.0003382640000000013, 0.0003406109999999976, 0.00...</msg>
<status status="PASS" starttime="20201029 18:19:08.841" endtime="20201029 18:19:08.845"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.849" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201029 18:19:08.848" endtime="20201029 18:19:08.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.852" level="INFO">VALUE: [0.0003434860000000005, 0.0003380559999999998, 0.0003432639999999994, 0.00033963799999999975, 0.0003429720000000004, 0.00034427799999999995, 0.0003382640000000013, 0.0003406109999999976, 0.00033870899999999954, 0.00034441699999999964, 0.00033893100000000065, 0.00034036100000000083, 0.0003416529999999973, 0.0003438189999999987, 0.0003440699999999984, 0.0003409169999999996, 0.0003390559999999973, 0.00033934799999999973, 0.0003421110000000026, 0.00034318100000000143, 0.00034341699999999864, 0.00033926399999999884, 0.0003431659999999989, 0.0003394999999999995, 0.0003414719999999989, 0.0003408750000000009, 0.000343694000000002, 0.0003438609999999974, 0.000338999999999999, 0.0003416109999999986, 0.00034374999999999684, 0.00034034799999999726, 0.00034165300000000426, 0.00034418099999999896, 0.00034358299999999453, 0.00034281900000000115, 0.00034286099999999986, 0.00034087500000000437, 0.0003433050000000021, 0.0003432219999999972, 0.0003415130000000016, 0.000343292000000002, 0.0003402360000000007, 0.00034204200000000073, 0.00034301399999999566, 0.000342485999999996, 0.0003405140000000001, 0.00034104199999999973, 0.00034309700000000054, 0.00033834799999999526]</msg>
<status status="PASS" starttime="20201029 18:19:08.850" endtime="20201029 18:19:08.853"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.846" endtime="20201029 18:19:08.853"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:08.857" endtime="20201029 18:19:08.876"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.855" endtime="20201029 18:19:08.877"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.854" endtime="20201029 18:19:08.877"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.480" endtime="20201029 18:19:08.877"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.480" endtime="20201029 18:19:08.877"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.886" endtime="20201029 18:19:08.921"></status>
</kw>
<msg timestamp="20201029 18:19:08.922" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:08.885" endtime="20201029 18:19:08.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.924" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:08.923" endtime="20201029 18:19:08.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.925" endtime="20201029 18:19:08.927"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.882" endtime="20201029 18:19:08.927"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.880" endtime="20201029 18:19:08.928"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.934" endtime="20201029 18:19:09.221"></status>
</kw>
<msg timestamp="20201029 18:19:09.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020152542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020512028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:08.933" endtime="20201029 18:19:09.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:09.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020152542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020512028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:09.226" endtime="20201029 18:19:09.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:09.234" endtime="20201029 18:19:09.235"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.930" endtime="20201029 18:19:09.236"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.928" endtime="20201029 18:19:09.236"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:09.240" level="INFO">${RESULT} = [{'diff': 0.0003594860000000026}, {'diff': 0.00034244500000000025}, {'diff': 0.0003409589999999983}, {'diff': 0.00034263899999999875}, {'diff': 0.0003415689999999999}, {'diff': 0.00034384800000000076}...</msg>
<status status="PASS" starttime="20201029 18:19:09.237" endtime="20201029 18:19:09.240"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:09.244" level="INFO">${ACCURACY} = {'diff': [0.0003594860000000026, 0.00034244500000000025, 0.0003409589999999983, 0.00034263899999999875, 0.0003415689999999999, 0.00034384800000000076, 0.0003388190000000006, 0.0003439439999999988, 0.0...</msg>
<status status="PASS" starttime="20201029 18:19:09.241" endtime="20201029 18:19:09.244"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:09.248" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201029 18:19:09.247" endtime="20201029 18:19:09.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:09.251" level="INFO">VALUE: [0.0003594860000000026, 0.00034244500000000025, 0.0003409589999999983, 0.00034263899999999875, 0.0003415689999999999, 0.00034384800000000076, 0.0003388190000000006, 0.0003439439999999988, 0.00033908300000000044, 0.0003405000000000005, 0.0003413469999999988, 0.00034008300000000144, 0.0003432219999999972, 0.0003422639999999984, 0.0003399030000000025, 0.00034183400000000266, 0.0003377910000000005, 0.0003419720000000029, 0.0003407370000000007, 0.0003413330000000027, 0.0003381250000000016, 0.0003432080000000011, 0.0003424440000000008, 0.00033988900000000294, 0.0003422629999999989, 0.00034309700000000054, 0.0003425139999999986, 0.00034148600000000195, 0.0003384589999999993, 0.00034404199999999927, 0.0003434310000000017, 0.0003381109999999951, 0.00034270800000000406, 0.00034336100000000036, 0.00034270800000000406, 0.0003443200000000021, 0.00034204200000000073, 0.0003408469999999983, 0.00034419399999999906, 0.0003433200000000011, 0.00034013899999999625, 0.00033859699999999604, 0.00033922200000000013, 0.0003383480000000022, 0.0003402089999999941, 0.00034429099999999657, 0.00033794399999999974, 0.0003412780000000004, 0.0003403049999999991, 0.0003376939999999995]</msg>
<status status="PASS" starttime="20201029 18:19:09.249" endtime="20201029 18:19:09.251"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.245" endtime="20201029 18:19:09.252"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:09.256" endtime="20201029 18:19:09.275"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.254" endtime="20201029 18:19:09.276"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.253" endtime="20201029 18:19:09.276"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.878" endtime="20201029 18:19:09.276"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.878" endtime="20201029 18:19:09.276"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:09.285" endtime="20201029 18:19:09.322"></status>
</kw>
<msg timestamp="20201029 18:19:09.322" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:09.283" endtime="20201029 18:19:09.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:09.325" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:09.323" endtime="20201029 18:19:09.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:09.326" endtime="20201029 18:19:09.327"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.281" endtime="20201029 18:19:09.328"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.279" endtime="20201029 18:19:09.328"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:09.335" endtime="20201029 18:19:09.633"></status>
</kw>
<msg timestamp="20201029 18:19:09.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023084986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023415792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:09.333" endtime="20201029 18:19:09.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:09.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023084986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023415792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:09.637" endtime="20201029 18:19:09.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:09.645" endtime="20201029 18:19:09.647"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.331" endtime="20201029 18:19:09.648"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.329" endtime="20201029 18:19:09.648"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:09.652" level="INFO">${RESULT} = [{'diff': 0.00033080600000000293}, {'diff': 0.00034272200000000017}, {'diff': 0.0003404720000000014}, {'diff': 0.0003385969999999995}, {'diff': 0.0003386109999999991}, {'diff': 0.00034166700000000036}...</msg>
<status status="PASS" starttime="20201029 18:19:09.649" endtime="20201029 18:19:09.652"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:09.656" level="INFO">${ACCURACY} = {'diff': [0.00033080600000000293, 0.00034272200000000017, 0.0003404720000000014, 0.0003385969999999995, 0.0003386109999999991, 0.00034166700000000036, 0.0003431529999999988, 0.0003417500000000018, 0.0...</msg>
<status status="PASS" starttime="20201029 18:19:09.653" endtime="20201029 18:19:09.656"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:09.660" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201029 18:19:09.659" endtime="20201029 18:19:09.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:09.663" level="INFO">VALUE: [0.00033080600000000293, 0.00034272200000000017, 0.0003404720000000014, 0.0003385969999999995, 0.0003386109999999991, 0.00034166700000000036, 0.0003431529999999988, 0.0003417500000000018, 0.00033865300000000126, 0.0003381380000000017, 0.0003427639999999989, 0.0003430279999999987, 0.00034048600000000095, 0.00034180600000000005, 0.00033943100000000115, 0.0003417780000000009, 0.00033851400000000156, 0.00034422200000000167, 0.0003397499999999998, 0.0003415559999999998, 0.0003437500000000003, 0.00034280600000000105, 0.00033916700000000133, 0.00033793099999999965, 0.0003400139999999996, 0.0003389719999999999, 0.00033802799999999716, 0.0003382779999999974, 0.00033888900000000194, 0.0003383190000000036, 0.0003377919999999965, 0.000340597000000005, 0.00034308400000000044, 0.0003435279999999957, 0.0003427500000000028, 0.0003403469999999978, 0.00033842999999999374, 0.0003437639999999964, 0.000339806000000005, 0.0003403610000000043, 0.00034126400000000084, 0.0003429999999999961, 0.0003406249999999972, 0.00033827699999999794, 0.00034120900000000204, 0.0003422079999999966, 0.00033990200000000304, 0.0003385689999999969, 0.0003382499999999983, 0.000342000000000002]</msg>
<status status="PASS" starttime="20201029 18:19:09.661" endtime="20201029 18:19:09.664"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.657" endtime="20201029 18:19:09.665"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:09.668" endtime="20201029 18:19:09.688"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.667" endtime="20201029 18:19:09.688"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.666" endtime="20201029 18:19:09.689"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.277" endtime="20201029 18:19:09.689"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.277" endtime="20201029 18:19:09.689"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:09.698" endtime="20201029 18:19:09.734"></status>
</kw>
<msg timestamp="20201029 18:19:09.734" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:09.696" endtime="20201029 18:19:09.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:09.736" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:09.735" endtime="20201029 18:19:09.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:09.737" endtime="20201029 18:19:09.739"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.694" endtime="20201029 18:19:09.740"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.692" endtime="20201029 18:19:09.740"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:09.746" endtime="20201029 18:19:10.032"></status>
</kw>
<msg timestamp="20201029 18:19:10.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022268847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022610931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:09.745" endtime="20201029 18:19:10.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:10.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022268847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022610931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:10.036" endtime="20201029 18:19:10.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:10.044" endtime="20201029 18:19:10.046"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.742" endtime="20201029 18:19:10.046"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.741" endtime="20201029 18:19:10.047"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:10.051" level="INFO">${RESULT} = [{'diff': 0.00034208399999999944}, {'diff': 0.0003411390000000007}, {'diff': 0.00034268000000000146}, {'diff': 0.0003426379999999993}, {'diff': 0.000343582999999998}, {'diff': 0.00033986100000000033},...</msg>
<status status="PASS" starttime="20201029 18:19:10.048" endtime="20201029 18:19:10.051"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:10.056" level="INFO">${ACCURACY} = {'diff': [0.00034208399999999944, 0.0003411390000000007, 0.00034268000000000146, 0.0003426379999999993, 0.000343582999999998, 0.00033986100000000033, 0.0003393199999999971, 0.0003405270000000002, 0.00...</msg>
<status status="PASS" starttime="20201029 18:19:10.052" endtime="20201029 18:19:10.056"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:10.060" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201029 18:19:10.059" endtime="20201029 18:19:10.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:10.062" level="INFO">VALUE: [0.00034208399999999944, 0.0003411390000000007, 0.00034268000000000146, 0.0003426379999999993, 0.000343582999999998, 0.00033986100000000033, 0.0003393199999999971, 0.0003405270000000002, 0.00033848599999999895, 0.00033825000000000174, 0.0003392359999999997, 0.00034054099999999976, 0.00033952800000000213, 0.000342000000000002, 0.0003381800000000004, 0.0003415970000000025, 0.00034363899999999975, 0.0003405420000000027, 0.0003441110000000011, 0.0003432919999999985, 0.00033819499999999947, 0.000344195000000002, 0.0003406810000000024, 0.00034259700000000004, 0.00033984700000000076, 0.0003443330000000022, 0.0003390280000000051, 0.0003392499999999993, 0.000344194000000006, 0.00034430499999999614, 0.00033856900000000384, 0.0003407230000000011, 0.0003395139999999991, 0.0003406379999999973, 0.000342888999999999, 0.000342194000000004, 0.0003434579999999979, 0.00034147199999999545, 0.0003432360000000037, 0.00034093100000000265, 0.00033898599999999945, 0.00034287499999999943, 0.00034268099999999746, 0.0003442639999999969, 0.000339888999999996, 0.0003417500000000018, 0.0003405689999999989, 0.00033942999999999474, 0.0003430549999999949, 0.0003422089999999961]</msg>
<status status="PASS" starttime="20201029 18:19:10.061" endtime="20201029 18:19:10.063"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.056" endtime="20201029 18:19:10.064"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:10.067" endtime="20201029 18:19:10.087"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.066" endtime="20201029 18:19:10.087"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.065" endtime="20201029 18:19:10.087"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.690" endtime="20201029 18:19:10.088"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.690" endtime="20201029 18:19:10.088"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:10.097" endtime="20201029 18:19:10.132"></status>
</kw>
<msg timestamp="20201029 18:19:10.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:10.095" endtime="20201029 18:19:10.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:10.135" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:10.133" endtime="20201029 18:19:10.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:10.136" endtime="20201029 18:19:10.138"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.093" endtime="20201029 18:19:10.139"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.090" endtime="20201029 18:19:10.139"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:10.146" endtime="20201029 18:19:10.432"></status>
</kw>
<msg timestamp="20201029 18:19:10.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020418833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020762931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:10.144" endtime="20201029 18:19:10.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:10.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020418833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020762931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:10.436" endtime="20201029 18:19:10.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:10.444" endtime="20201029 18:19:10.446"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.142" endtime="20201029 18:19:10.446"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.140" endtime="20201029 18:19:10.447"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:10.450" level="INFO">${RESULT} = [{'diff': 0.00034409799999999754}, {'diff': 0.00034}, {'diff': 0.0003430829999999975}, {'diff': 0.00033822199999999913}, {'diff': 0.00034076400000000034}, {'diff': 0.0003386800000000009}, {'diff': 0.0...</msg>
<status status="PASS" starttime="20201029 18:19:10.447" endtime="20201029 18:19:10.451"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:10.454" level="INFO">${ACCURACY} = {'diff': [0.00034409799999999754, 0.00034, 0.0003430829999999975, 0.00033822199999999913, 0.00034076400000000034, 0.0003386800000000009, 0.0003392779999999984, 0.00033769400000000296, 0.00033994399999...</msg>
<status status="PASS" starttime="20201029 18:19:10.451" endtime="20201029 18:19:10.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:10.459" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201029 18:19:10.458" endtime="20201029 18:19:10.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:10.461" level="INFO">VALUE: [0.00034409799999999754, 0.00034, 0.0003430829999999975, 0.00033822199999999913, 0.00034076400000000034, 0.0003386800000000009, 0.0003392779999999984, 0.00033769400000000296, 0.0003399439999999983, 0.0003393190000000011, 0.00034052799999999966, 0.00033843100000000015, 0.0003408199999999986, 0.0003408329999999987, 0.000340985999999998, 0.0003443609999999979, 0.0003377229999999981, 0.0003425409999999983, 0.0003412499999999978, 0.0003382640000000013, 0.00034340299999999907, 0.00033945799999999735, 0.0003402779999999994, 0.0003439439999999988, 0.00034058300000000194, 0.0003381250000000016, 0.000341292, 0.000341292, 0.00033816700000000033, 0.00034423599999999777, 0.0003379030000000005, 0.00033894400000000074, 0.0003394170000000016, 0.0003395139999999991, 0.0003390840000000034, 0.00034219499999999653, 0.00034158399999999894, 0.00034048600000000095, 0.00033944400000000124, 0.00033784700000000223, 0.00034429199999999605, 0.0003400840000000044, 0.0003383060000000035, 0.0003406529999999963, 0.0003396109999999966, 0.0003438200000000016, 0.00033904199999999773, 0.0003409720000000019, 0.000337806000000003, 0.0003439580000000053]</msg>
<status status="PASS" starttime="20201029 18:19:10.460" endtime="20201029 18:19:10.462"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.455" endtime="20201029 18:19:10.462"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:10.466" endtime="20201029 18:19:10.485"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.464" endtime="20201029 18:19:10.486"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.463" endtime="20201029 18:19:10.486"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.089" endtime="20201029 18:19:10.486"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.088" endtime="20201029 18:19:10.487"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:10.495" endtime="20201029 18:19:10.532"></status>
</kw>
<msg timestamp="20201029 18:19:10.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:10.494" endtime="20201029 18:19:10.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:10.535" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:10.533" endtime="20201029 18:19:10.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:10.536" endtime="20201029 18:19:10.537"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.491" endtime="20201029 18:19:10.538"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.489" endtime="20201029 18:19:10.538"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:10.545" endtime="20201029 18:19:10.831"></status>
</kw>
<msg timestamp="20201029 18:19:10.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023579556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023922903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:10.543" endtime="20201029 18:19:10.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:10.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023579556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023922903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:10.835" endtime="20201029 18:19:10.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:10.844" endtime="20201029 18:19:10.845"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.541" endtime="20201029 18:19:10.846"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.539" endtime="20201029 18:19:10.846"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:10.850" level="INFO">${RESULT} = [{'diff': 0.0003433469999999973}, {'diff': 0.00034245800000000035}, {'diff': 0.0003420560000000003}, {'diff': 0.0003405840000000014}, {'diff': 0.00033836099999999883}, {'diff': 0.00034358300000000147}...</msg>
<status status="PASS" starttime="20201029 18:19:10.847" endtime="20201029 18:19:10.851"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:10.854" level="INFO">${ACCURACY} = {'diff': [0.0003433469999999973, 0.00034245800000000035, 0.0003420560000000003, 0.0003405840000000014, 0.00033836099999999883, 0.00034358300000000147, 0.0003435980000000005, 0.000341694, 0.00034011200...</msg>
<status status="PASS" starttime="20201029 18:19:10.851" endtime="20201029 18:19:10.855"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:10.861" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201029 18:19:10.858" endtime="20201029 18:19:10.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:10.866" level="INFO">VALUE: [0.0003433469999999973, 0.00034245800000000035, 0.0003420560000000003, 0.0003405840000000014, 0.00033836099999999883, 0.00034358300000000147, 0.0003435980000000005, 0.000341694, 0.00034011200000000005, 0.00034309700000000054, 0.0003410699999999989, 0.00034279099999999854, 0.00034249999999999906, 0.00034280600000000105, 0.0003421109999999991, 0.0003412780000000004, 0.0003382499999999983, 0.00034, 0.0003437639999999999, 0.0003426249999999992, 0.0003404590000000013, 0.0003419310000000002, 0.0003404439999999953, 0.000343292000000002, 0.00034308300000000097, 0.00034168099999999646, 0.00034247199999999645, 0.0003394300000000017, 0.00034418099999999896, 0.00034091599999999667, 0.0003414450000000027, 0.0003426109999999996, 0.0003433200000000011, 0.0003420690000000004, 0.0003437079999999981, 0.00034136199999999783, 0.00034384699999999435, 0.0003416810000000034, 0.0003396810000000014, 0.000337790999999997, 0.0003439859999999975, 0.0003386250000000021, 0.0003396529999999953, 0.0003382779999999974, 0.00034181900000000015, 0.00034126300000000137, 0.00034423599999999777, 0.0003392359999999997, 0.0003430700000000009, 0.0003435560000000018]</msg>
<status status="PASS" starttime="20201029 18:19:10.863" endtime="20201029 18:19:10.869"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.855" endtime="20201029 18:19:10.871"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:10.879" endtime="20201029 18:19:10.901"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.875" endtime="20201029 18:19:10.902"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.873" endtime="20201029 18:19:10.903"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.488" endtime="20201029 18:19:10.904"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.487" endtime="20201029 18:19:10.904"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:10.923" endtime="20201029 18:19:10.961"></status>
</kw>
<msg timestamp="20201029 18:19:10.961" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:10.920" endtime="20201029 18:19:10.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:10.964" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:10.962" endtime="20201029 18:19:10.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:10.965" endtime="20201029 18:19:10.967"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.914" endtime="20201029 18:19:10.967"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.909" endtime="20201029 18:19:10.968"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:10.974" endtime="20201029 18:19:11.260"></status>
</kw>
<msg timestamp="20201029 18:19:11.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037169611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037525153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:10.973" endtime="20201029 18:19:11.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:11.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037169611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037525153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:11.265" endtime="20201029 18:19:11.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:11.273" endtime="20201029 18:19:11.274"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.970" endtime="20201029 18:19:11.275"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.968" endtime="20201029 18:19:11.275"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:11.279" level="INFO">${RESULT} = [{'diff': 0.00035554200000000036}, {'diff': 0.00033969500000000097}, {'diff': 0.0003429579999999974}, {'diff': 0.0003429580000000043}, {'diff': 0.000343292000000002}, {'diff': 0.00033870899999999954},...</msg>
<status status="PASS" starttime="20201029 18:19:11.276" endtime="20201029 18:19:11.280"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:11.284" level="INFO">${ACCURACY} = {'diff': [0.00035554200000000036, 0.00033969500000000097, 0.0003429579999999974, 0.0003429580000000043, 0.000343292000000002, 0.00033870899999999954, 0.0003425560000000008, 0.0003403329999999982, 0.00...</msg>
<status status="PASS" starttime="20201029 18:19:11.280" endtime="20201029 18:19:11.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:11.289" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201029 18:19:11.288" endtime="20201029 18:19:11.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:11.292" level="INFO">VALUE: [0.00035554200000000036, 0.00033969500000000097, 0.0003429579999999974, 0.0003429580000000043, 0.000343292000000002, 0.00033870899999999954, 0.0003425560000000008, 0.0003403329999999982, 0.0003439020000000001, 0.00034254100000000176, 0.00034115199999999735, 0.0003428340000000002, 0.0003396800000000019, 0.0003396249999999962, 0.0003395420000000052, 0.00034215300000000476, 0.0003395269999999992, 0.00034320800000000456, 0.00034131899999999965, 0.000339597000000004, 0.00034297199999999695, 0.00034186099999999886, 0.0003389170000000011, 0.00033919500000000047, 0.0003412079999999956, 0.0003398339999999972, 0.0003435279999999957, 0.0003434449999999978, 0.00034208399999999944, 0.0003412089999999951, 0.0003427639999999954, 0.0003438050000000026, 0.0003421109999999991, 0.0003390830000000039, 0.00034359700000000104, 0.0003392359999999997, 0.0003414019999999976, 0.00033877800000000485, 0.0003377499999999978, 0.00034208299999999997, 0.0003409579999999954, 0.0003377499999999978, 0.0003414580000000028, 0.00033981899999999815, 0.00034169399999999656, 0.0003402360000000007, 0.0003401390000000032, 0.00033848699999999843, 0.00033886099999999586, 0.0003404720000000014]</msg>
<status status="PASS" starttime="20201029 18:19:11.290" endtime="20201029 18:19:11.292"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.285" endtime="20201029 18:19:11.293"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:11.297" endtime="20201029 18:19:11.316"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.295" endtime="20201029 18:19:11.317"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.294" endtime="20201029 18:19:11.317"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.906" endtime="20201029 18:19:11.317"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.905" endtime="20201029 18:19:11.318"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:11.327" endtime="20201029 18:19:11.361"></status>
</kw>
<msg timestamp="20201029 18:19:11.362" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:11.325" endtime="20201029 18:19:11.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:11.365" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:11.363" endtime="20201029 18:19:11.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:11.366" endtime="20201029 18:19:11.367"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.322" endtime="20201029 18:19:11.368"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.320" endtime="20201029 18:19:11.368"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:11.375" endtime="20201029 18:19:11.662"></status>
</kw>
<msg timestamp="20201029 18:19:11.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021740153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022082458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:11.373" endtime="20201029 18:19:11.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:11.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021740153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022082458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:11.666" endtime="20201029 18:19:11.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:11.675" endtime="20201029 18:19:11.676"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.371" endtime="20201029 18:19:11.677"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.369" endtime="20201029 18:19:11.677"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:11.681" level="INFO">${RESULT} = [{'diff': 0.0003423049999999976}, {'diff': 0.00034133400000000216}, {'diff': 0.0003434309999999982}, {'diff': 0.00033972200000000063}, {'diff': 0.0003441250000000007}, {'diff': 0.00034299999999999956}...</msg>
<status status="PASS" starttime="20201029 18:19:11.678" endtime="20201029 18:19:11.681"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:11.685" level="INFO">${ACCURACY} = {'diff': [0.0003423049999999976, 0.00034133400000000216, 0.0003434309999999982, 0.00033972200000000063, 0.0003441250000000007, 0.00034299999999999956, 0.00034240299999999807, 0.00033944400000000124, 0...</msg>
<status status="PASS" starttime="20201029 18:19:11.682" endtime="20201029 18:19:11.686"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:11.690" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201029 18:19:11.689" endtime="20201029 18:19:11.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:11.692" level="INFO">VALUE: [0.0003423049999999976, 0.00034133400000000216, 0.0003434309999999982, 0.00033972200000000063, 0.0003441250000000007, 0.00034299999999999956, 0.00034240299999999807, 0.00033944400000000124, 0.00034017999999999896, 0.0003419439999999968, 0.00033870800000000006, 0.0003416520000000013, 0.0003427780000000019, 0.0003380420000000002, 0.0003393190000000011, 0.00034238900000000197, 0.0003384170000000006, 0.000337999999999998, 0.0003404170000000026, 0.0003412500000000013, 0.0003386529999999978, 0.0003405000000000005, 0.0003412499999999978, 0.0003395699999999974, 0.00034409699999999807, 0.0003408330000000022, 0.0003392499999999993, 0.0003381390000000012, 0.00033894400000000074, 0.0003393329999999972, 0.0003414300000000037, 0.0003440419999999958, 0.00034126400000000084, 0.000342000000000002, 0.00034119399999999606, 0.0003396390000000027, 0.0003439720000000049, 0.00034259700000000004, 0.00034042999999999574, 0.0003403610000000043, 0.00033850000000000546, 0.000339194000000001, 0.00034340299999999907, 0.00034320800000000456, 0.0003384579999999998, 0.00033887499999999543, 0.0003421669999999974, 0.00034436100000000136, 0.0003425690000000009, 0.00033861100000000255]</msg>
<status status="PASS" starttime="20201029 18:19:11.691" endtime="20201029 18:19:11.697"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.686" endtime="20201029 18:19:11.698"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:11.701" endtime="20201029 18:19:11.721"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.700" endtime="20201029 18:19:11.722"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.699" endtime="20201029 18:19:11.722"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.318" endtime="20201029 18:19:11.722"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.318" endtime="20201029 18:19:11.722"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:11.731" endtime="20201029 18:19:11.768"></status>
</kw>
<msg timestamp="20201029 18:19:11.769" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:11.730" endtime="20201029 18:19:11.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:11.771" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:11.770" endtime="20201029 18:19:11.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:11.772" endtime="20201029 18:19:11.774"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.727" endtime="20201029 18:19:11.775"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.725" endtime="20201029 18:19:11.775"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:11.782" endtime="20201029 18:19:12.067"></status>
</kw>
<msg timestamp="20201029 18:19:12.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023830306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024188181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:11.780" endtime="20201029 18:19:12.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:12.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023830306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024188181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:12.071" endtime="20201029 18:19:12.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:12.079" endtime="20201029 18:19:12.081"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.777" endtime="20201029 18:19:12.082"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.776" endtime="20201029 18:19:12.082"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:12.086" level="INFO">${RESULT} = [{'diff': 0.00035787500000000055}, {'diff': 0.00033937500000000287}, {'diff': 0.0003414719999999989}, {'diff': 0.0003442080000000021}, {'diff': 0.00034188900000000147}, {'diff': 0.0003434310000000017}...</msg>
<status status="PASS" starttime="20201029 18:19:12.083" endtime="20201029 18:19:12.086"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:12.090" level="INFO">${ACCURACY} = {'diff': [0.00035787500000000055, 0.00033937500000000287, 0.0003414719999999989, 0.0003442080000000021, 0.00034188900000000147, 0.0003434310000000017, 0.0003394999999999995, 0.0003380139999999976, 0.0...</msg>
<status status="PASS" starttime="20201029 18:19:12.087" endtime="20201029 18:19:12.090"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:12.095" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201029 18:19:12.094" endtime="20201029 18:19:12.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:12.097" level="INFO">VALUE: [0.00035787500000000055, 0.00033937500000000287, 0.0003414719999999989, 0.0003442080000000021, 0.00034188900000000147, 0.0003434310000000017, 0.0003394999999999995, 0.0003380139999999976, 0.00034002799999999916, 0.0003408620000000008, 0.00034086100000000133, 0.0003396389999999992, 0.00033854100000000123, 0.00033801400000000106, 0.00034386100000000086, 0.00034395800000000185, 0.0003419450000000032, 0.0003409719999999984, 0.0003440699999999984, 0.0003433330000000012, 0.0003420139999999981, 0.0003440690000000024, 0.0003398339999999972, 0.00034111100000000505, 0.00034158399999999894, 0.00033837499999999493, 0.000342403000000005, 0.0003401529999999958, 0.0003380139999999976, 0.000338597000000003, 0.0003401390000000032, 0.0003443890000000005, 0.0003381800000000004, 0.000337999999999998, 0.0003401529999999958, 0.00034086099999999786, 0.0003414720000000024, 0.00033794399999999974, 0.00033798599999999845, 0.0003397360000000002, 0.0003389450000000002, 0.00034038900000000344, 0.00034105499999999983, 0.0003389719999999999, 0.0003383889999999945, 0.00034348600000000395, 0.0003441669999999994, 0.0003418329999999997, 0.0003386940000000005, 0.00034070800000000206]</msg>
<status status="PASS" starttime="20201029 18:19:12.096" endtime="20201029 18:19:12.099"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.091" endtime="20201029 18:19:12.100"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:12.103" endtime="20201029 18:19:12.123"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.102" endtime="20201029 18:19:12.124"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.101" endtime="20201029 18:19:12.124"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.723" endtime="20201029 18:19:12.124"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.723" endtime="20201029 18:19:12.124"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:12.133" endtime="20201029 18:19:12.175"></status>
</kw>
<msg timestamp="20201029 18:19:12.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:12.131" endtime="20201029 18:19:12.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:12.179" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:12.177" endtime="20201029 18:19:12.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:12.181" endtime="20201029 18:19:12.183"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.129" endtime="20201029 18:19:12.184"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.127" endtime="20201029 18:19:12.185"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:12.193" endtime="20201029 18:19:12.480"></status>
</kw>
<msg timestamp="20201029 18:19:12.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023927847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024263625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:12.192" endtime="20201029 18:19:12.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:12.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023927847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024263625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:12.484" endtime="20201029 18:19:12.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:12.493" endtime="20201029 18:19:12.494"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.189" endtime="20201029 18:19:12.495"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.186" endtime="20201029 18:19:12.495"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:12.499" level="INFO">${RESULT} = [{'diff': 0.00033577800000000185}, {'diff': 0.00034086100000000133}, {'diff': 0.000342000000000002}, {'diff': 0.00034077700000000044}, {'diff': 0.000338403000000001}, {'diff': 0.00033794399999999974},...</msg>
<status status="PASS" starttime="20201029 18:19:12.496" endtime="20201029 18:19:12.500"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:12.504" level="INFO">${ACCURACY} = {'diff': [0.00033577800000000185, 0.00034086100000000133, 0.000342000000000002, 0.00034077700000000044, 0.000338403000000001, 0.00033794399999999974, 0.00033838900000000144, 0.00034238900000000197, 0....</msg>
<status status="PASS" starttime="20201029 18:19:12.500" endtime="20201029 18:19:12.505"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:12.509" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201029 18:19:12.508" endtime="20201029 18:19:12.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:12.511" level="INFO">VALUE: [0.00033577800000000185, 0.00034086100000000133, 0.000342000000000002, 0.00034077700000000044, 0.000338403000000001, 0.00033794399999999974, 0.00033838900000000144, 0.00034238900000000197, 0.00034437500000000093, 0.0003432499999999998, 0.00034234799999999926, 0.00034199999999999856, 0.0003415140000000011, 0.0003442500000000008, 0.0003400689999999984, 0.0003401109999999971, 0.0003441250000000007, 0.00034363899999999975, 0.00034168000000000046, 0.000338403000000001, 0.0003431249999999997, 0.00034091699999999614, 0.0003429720000000039, 0.00033781899999999615, 0.00034176400000000134, 0.0003405559999999988, 0.0003433340000000007, 0.00034104199999999973, 0.00034347300000000386, 0.000341292, 0.0003390970000000035, 0.0003426379999999993, 0.00034074999999999384, 0.00034302800000000216, 0.0003391250000000026, 0.0003386940000000005, 0.0003390280000000051, 0.00034306899999999446, 0.0003442079999999986, 0.0003412370000000012, 0.0003441529999999998, 0.0003423050000000011, 0.0003396810000000014, 0.00033888900000000194, 0.00033820799999999956, 0.0003394300000000017, 0.00034281900000000115, 0.0003400420000000057, 0.0003380139999999976, 0.00034297199999999695]</msg>
<status status="PASS" starttime="20201029 18:19:12.510" endtime="20201029 18:19:12.512"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.505" endtime="20201029 18:19:12.513"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:12.517" endtime="20201029 18:19:12.536"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.515" endtime="20201029 18:19:12.537"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.514" endtime="20201029 18:19:12.537"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.125" endtime="20201029 18:19:12.537"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.125" endtime="20201029 18:19:12.538"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:12.547" endtime="20201029 18:19:12.583"></status>
</kw>
<msg timestamp="20201029 18:19:12.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:12.545" endtime="20201029 18:19:12.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:12.586" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:12.584" endtime="20201029 18:19:12.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:12.587" endtime="20201029 18:19:12.589"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.542" endtime="20201029 18:19:12.589"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.540" endtime="20201029 18:19:12.590"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:12.596" endtime="20201029 18:19:12.884"></status>
</kw>
<msg timestamp="20201029 18:19:12.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022517139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022870597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:12.595" endtime="20201029 18:19:12.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:12.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022517139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022870597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:12.888" endtime="20201029 18:19:12.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:12.896" endtime="20201029 18:19:12.898"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.592" endtime="20201029 18:19:12.899"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.590" endtime="20201029 18:19:12.899"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:12.903" level="INFO">${RESULT} = [{'diff': 0.00035345800000000094}, {'diff': 0.0003386520000000018}, {'diff': 0.0003381390000000012}, {'diff': 0.0003411119999999976}, {'diff': 0.0003407360000000012}, {'diff': 0.0003390129999999991}, ...</msg>
<status status="PASS" starttime="20201029 18:19:12.900" endtime="20201029 18:19:12.903"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:12.907" level="INFO">${ACCURACY} = {'diff': [0.00035345800000000094, 0.0003386520000000018, 0.0003381390000000012, 0.0003411119999999976, 0.0003407360000000012, 0.0003390129999999991, 0.0003431660000000024, 0.000338194, 0.0003432639999...</msg>
<status status="PASS" starttime="20201029 18:19:12.904" endtime="20201029 18:19:12.907"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:12.912" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201029 18:19:12.911" endtime="20201029 18:19:12.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:12.914" level="INFO">VALUE: [0.00035345800000000094, 0.0003386520000000018, 0.0003381390000000012, 0.0003411119999999976, 0.0003407360000000012, 0.0003390129999999991, 0.0003431660000000024, 0.000338194, 0.0003432639999999994, 0.0003392640000000023, 0.0003422780000000014, 0.0003393190000000011, 0.0003417369999999982, 0.0003407079999999986, 0.00034036100000000083, 0.00034334800000000026, 0.0003421940000000005, 0.00033998600000000045, 0.0003443200000000021, 0.00033986100000000033, 0.0003378199999999991, 0.00034395800000000185, 0.0003437370000000002, 0.0003422370000000022, 0.0003394720000000004, 0.0003403329999999982, 0.0003382220000000061, 0.00034391699999999914, 0.0003411799999999965, 0.0003429579999999974, 0.0003406390000000037, 0.00034287500000000637, 0.0003411810000000029, 0.00033844400000000024, 0.0003403889999999965, 0.00034258300000000047, 0.0003435549999999954, 0.00034263899999999875, 0.00034409700000000154, 0.0003419309999999967, 0.00034408299999999503, 0.0003427219999999967, 0.0003394999999999995, 0.00034048600000000095, 0.0003441529999999998, 0.00033804199999999673, 0.00034318099999999796, 0.0003386390000000017, 0.0003442219999999982, 0.00034043100000000215]</msg>
<status status="PASS" starttime="20201029 18:19:12.913" endtime="20201029 18:19:12.915"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.908" endtime="20201029 18:19:12.916"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:12.919" endtime="20201029 18:19:12.939"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.918" endtime="20201029 18:19:12.940"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.917" endtime="20201029 18:19:12.940"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.539" endtime="20201029 18:19:12.940"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.538" endtime="20201029 18:19:12.940"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:12.949" endtime="20201029 18:19:12.984"></status>
</kw>
<msg timestamp="20201029 18:19:12.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:12.948" endtime="20201029 18:19:12.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:12.987" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:12.986" endtime="20201029 18:19:12.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:12.988" endtime="20201029 18:19:12.990"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.945" endtime="20201029 18:19:12.991"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.943" endtime="20201029 18:19:12.991"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:12.998" endtime="20201029 18:19:13.284"></status>
</kw>
<msg timestamp="20201029 18:19:13.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021751278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022105, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:19:12.996" endtime="20201029 18:19:13.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:13.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021751278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022105, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:19:13.289" endtime="20201029 18:19:13.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:13.297" endtime="20201029 18:19:13.299"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.994" endtime="20201029 18:19:13.299"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.992" endtime="20201029 18:19:13.300"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:13.304" level="INFO">${RESULT} = [{'diff': 0.00035372200000000076}, {'diff': 0.00033856900000000037}, {'diff': 0.0003401110000000006}, {'diff': 0.00034302800000000216}, {'diff': 0.0003416669999999969}, {'diff': 0.00034055499999999933...</msg>
<status status="PASS" starttime="20201029 18:19:13.300" endtime="20201029 18:19:13.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:13.308" level="INFO">${ACCURACY} = {'diff': [0.00035372200000000076, 0.00033856900000000037, 0.0003401110000000006, 0.00034302800000000216, 0.0003416669999999969, 0.00034055499999999933, 0.0003406249999999972, 0.0003397499999999998, 0....</msg>
<status status="PASS" starttime="20201029 18:19:13.305" endtime="20201029 18:19:13.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:13.312" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201029 18:19:13.311" endtime="20201029 18:19:13.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:13.315" level="INFO">VALUE: [0.00035372200000000076, 0.00033856900000000037, 0.0003401110000000006, 0.00034302800000000216, 0.0003416669999999969, 0.00034055499999999933, 0.0003406249999999972, 0.0003397499999999998, 0.0003384299999999972, 0.0003391109999999996, 0.0003439310000000022, 0.0003405979999999975, 0.0003416530000000008, 0.0003383749999999984, 0.0003396940000000015, 0.00033829200000000045, 0.00034218000000000096, 0.00034144499999999925, 0.0003432919999999985, 0.00033834799999999873, 0.0003399580000000013, 0.0003427079999999971, 0.00034386100000000086, 0.00033940299999999854, 0.0003406390000000002, 0.00033870800000000006, 0.0003401799999999955, 0.0003381390000000012, 0.00034429099999999657, 0.0003427780000000019, 0.0003384579999999998, 0.00033766699999999983, 0.0003418339999999992, 0.0003440279999999962, 0.00034381900000000215, 0.00033861100000000255, 0.00034304100000000226, 0.00034363899999999975, 0.0003402500000000003, 0.000340291999999999, 0.00034355500000000233, 0.00034397199999999795, 0.0003383610000000023, 0.00034341699999999864, 0.0003425270000000022, 0.0003386810000000004, 0.0003406529999999963, 0.00034324999999999634, 0.0003406109999999976, 0.0003440700000000019]</msg>
<status status="PASS" starttime="20201029 18:19:13.313" endtime="20201029 18:19:13.316"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.309" endtime="20201029 18:19:13.317"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:13.321" endtime="20201029 18:19:13.340"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.319" endtime="20201029 18:19:13.341"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.318" endtime="20201029 18:19:13.341"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.941" endtime="20201029 18:19:13.342"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.941" endtime="20201029 18:19:13.342"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:13.351" endtime="20201029 18:19:13.386"></status>
</kw>
<msg timestamp="20201029 18:19:13.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:13.349" endtime="20201029 18:19:13.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:13.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:13.388" endtime="20201029 18:19:13.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:13.390" endtime="20201029 18:19:13.392"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.346" endtime="20201029 18:19:13.392"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.344" endtime="20201029 18:19:13.393"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:13.400" endtime="20201029 18:19:13.685"></status>
</kw>
<msg timestamp="20201029 18:19:13.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022250222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022590694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:13.398" endtime="20201029 18:19:13.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:13.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022250222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022590694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:13.690" endtime="20201029 18:19:13.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:13.698" endtime="20201029 18:19:13.700"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.395" endtime="20201029 18:19:13.700"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.394" endtime="20201029 18:19:13.701"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:13.705" level="INFO">${RESULT} = [{'diff': 0.0003404720000000014}, {'diff': 0.00034038899999999997}, {'diff': 0.0003422369999999987}, {'diff': 0.00034341699999999864}, {'diff': 0.0003402779999999994}, {'diff': 0.0003437639999999999},...</msg>
<status status="PASS" starttime="20201029 18:19:13.701" endtime="20201029 18:19:13.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:13.710" level="INFO">${ACCURACY} = {'diff': [0.0003404720000000014, 0.00034038899999999997, 0.0003422369999999987, 0.00034341699999999864, 0.0003402779999999994, 0.0003437639999999999, 0.0003417079999999996, 0.0003426530000000018, 0.00...</msg>
<status status="PASS" starttime="20201029 18:19:13.706" endtime="20201029 18:19:13.710"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:13.714" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201029 18:19:13.713" endtime="20201029 18:19:13.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:13.717" level="INFO">VALUE: [0.0003404720000000014, 0.00034038899999999997, 0.0003422369999999987, 0.00034341699999999864, 0.0003402779999999994, 0.0003437639999999999, 0.0003417079999999996, 0.0003426530000000018, 0.0003444449999999988, 0.0003386390000000017, 0.00033841599999999764, 0.0003390560000000008, 0.00034038899999999997, 0.0003395139999999991, 0.0003436110000000006, 0.00034055499999999933, 0.000339291999999998, 0.00033844400000000024, 0.00034177699999999797, 0.0003408750000000009, 0.00034309700000000054, 0.00034054199999999923, 0.00034392999999999924, 0.0003386529999999978, 0.00034388900000000347, 0.000342485999999996, 0.00034355500000000233, 0.00034126400000000084, 0.00034354100000000276, 0.00034191699999999714, 0.0003425000000000025, 0.00034313899999999925, 0.0003410140000000006, 0.0003430279999999952, 0.00034337499999999993, 0.00033987499999999643, 0.0003402500000000003, 0.00033822199999999913, 0.0003397640000000063, 0.00033952799999999866, 0.00034005600000000524, 0.0003413469999999988, 0.00033892999999999424, 0.0003419450000000032, 0.0003387919999999975, 0.00034419499999999853, 0.00033866600000000135, 0.00034163899999999775, 0.0003430140000000026, 0.00034437500000000093]</msg>
<status status="PASS" starttime="20201029 18:19:13.715" endtime="20201029 18:19:13.718"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.711" endtime="20201029 18:19:13.718"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:13.722" endtime="20201029 18:19:13.741"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.720" endtime="20201029 18:19:13.742"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.719" endtime="20201029 18:19:13.742"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.343" endtime="20201029 18:19:13.743"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.342" endtime="20201029 18:19:13.743"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:13.752" endtime="20201029 18:19:13.788"></status>
</kw>
<msg timestamp="20201029 18:19:13.788" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:13.750" endtime="20201029 18:19:13.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:13.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:13.789" endtime="20201029 18:19:13.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:13.792" endtime="20201029 18:19:13.793"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.748" endtime="20201029 18:19:13.794"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.745" endtime="20201029 18:19:13.794"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:13.801" endtime="20201029 18:19:14.088"></status>
</kw>
<msg timestamp="20201029 18:19:14.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023017944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023358694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:13.800" endtime="20201029 18:19:14.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:14.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023017944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023358694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:14.092" endtime="20201029 18:19:14.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:14.100" endtime="20201029 18:19:14.102"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.797" endtime="20201029 18:19:14.103"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.795" endtime="20201029 18:19:14.103"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:14.107" level="INFO">${RESULT} = [{'diff': 0.0003407500000000008}, {'diff': 0.0003430409999999988}, {'diff': 0.0003423469999999998}, {'diff': 0.0003394999999999995}, {'diff': 0.0003382360000000022}, {'diff': 0.00033847200000000285}, ...</msg>
<status status="PASS" starttime="20201029 18:19:14.104" endtime="20201029 18:19:14.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:14.111" level="INFO">${ACCURACY} = {'diff': [0.0003407500000000008, 0.0003430409999999988, 0.0003423469999999998, 0.0003394999999999995, 0.0003382360000000022, 0.00033847200000000285, 0.00034154200000000023, 0.00034172199999999917, 0.0...</msg>
<status status="PASS" starttime="20201029 18:19:14.108" endtime="20201029 18:19:14.112"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:14.116" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201029 18:19:14.115" endtime="20201029 18:19:14.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:14.118" level="INFO">VALUE: [0.0003407500000000008, 0.0003430409999999988, 0.0003423469999999998, 0.0003394999999999995, 0.0003382360000000022, 0.00033847200000000285, 0.00034154200000000023, 0.00034172199999999917, 0.0003407360000000012, 0.0003428470000000003, 0.0003405140000000001, 0.00034020900000000104, 0.00034098600000000145, 0.0003439309999999987, 0.0003433340000000007, 0.0003421109999999991, 0.0003410139999999971, 0.000342888999999999, 0.00034273599999999974, 0.00033802700000000116, 0.0003420139999999981, 0.0003442089999999981, 0.00034391699999999567, 0.00034116700000000333, 0.0003383339999999957, 0.00033898599999999945, 0.00034159699999999904, 0.00034329199999999505, 0.0003423889999999985, 0.00033998600000000045, 0.00033959800000000345, 0.0003387919999999975, 0.00034290200000000604, 0.0003385700000000033, 0.0003397920000000054, 0.0003435980000000005, 0.0003409720000000019, 0.00034047199999999445, 0.0003441799999999995, 0.00034369500000000497, 0.0003407360000000012, 0.00034088900000000394, 0.00034141599999999717, 0.0003408329999999987, 0.0003396390000000027, 0.00034394400000000575, 0.00034029100000000645, 0.0003382909999999975, 0.00033915300000000176, 0.00033911100000000305]</msg>
<status status="PASS" starttime="20201029 18:19:14.117" endtime="20201029 18:19:14.119"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.112" endtime="20201029 18:19:14.120"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:14.124" endtime="20201029 18:19:14.143"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.122" endtime="20201029 18:19:14.144"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.121" endtime="20201029 18:19:14.144"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.744" endtime="20201029 18:19:14.144"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.743" endtime="20201029 18:19:14.144"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:14.154" endtime="20201029 18:19:14.190"></status>
</kw>
<msg timestamp="20201029 18:19:14.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:14.152" endtime="20201029 18:19:14.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:14.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:14.192" endtime="20201029 18:19:14.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:14.195" endtime="20201029 18:19:14.196"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.149" endtime="20201029 18:19:14.197"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.147" endtime="20201029 18:19:14.198"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:14.205" endtime="20201029 18:19:14.491"></status>
</kw>
<msg timestamp="20201029 18:19:14.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023336875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023675653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:14.203" endtime="20201029 18:19:14.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:14.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023336875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023675653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:14.496" endtime="20201029 18:19:14.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:14.504" endtime="20201029 18:19:14.506"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.200" endtime="20201029 18:19:14.506"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.198" endtime="20201029 18:19:14.507"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:14.511" level="INFO">${RESULT} = [{'diff': 0.0003387780000000014}, {'diff': 0.00034400000000000056}, {'diff': 0.0003424300000000012}, {'diff': 0.00034118099999999943}, {'diff': 0.0003397779999999989}, {'diff': 0.0003391529999999983},...</msg>
<status status="PASS" starttime="20201029 18:19:14.508" endtime="20201029 18:19:14.511"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:14.515" level="INFO">${ACCURACY} = {'diff': [0.0003387780000000014, 0.00034400000000000056, 0.0003424300000000012, 0.00034118099999999943, 0.0003397779999999989, 0.0003391529999999983, 0.0003410689999999994, 0.00033884700000000323, 0.0...</msg>
<status status="PASS" starttime="20201029 18:19:14.512" endtime="20201029 18:19:14.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:14.520" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201029 18:19:14.519" endtime="20201029 18:19:14.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:14.522" level="INFO">VALUE: [0.0003387780000000014, 0.00034400000000000056, 0.0003424300000000012, 0.00034118099999999943, 0.0003397779999999989, 0.0003391529999999983, 0.0003410689999999994, 0.00033884700000000323, 0.0003439579999999984, 0.00034392999999999924, 0.0003436529999999993, 0.0003384860000000024, 0.00033908300000000044, 0.00033893100000000065, 0.00034405499999999936, 0.0003433189999999982, 0.0003407079999999986, 0.000338306, 0.0003432499999999998, 0.000339403000000002, 0.0003418050000000006, 0.0003419589999999993, 0.00034069500000000197, 0.00034173599999999527, 0.0003431249999999997, 0.0003389030000000015, 0.0003425140000000021, 0.0003391249999999957, 0.0003417360000000022, 0.0003391250000000026, 0.0003406810000000024, 0.0003443890000000005, 0.000344292000000003, 0.000340291999999999, 0.00034, 0.00034313899999999925, 0.0003404580000000018, 0.00033800000000000496, 0.0003394580000000008, 0.0003392920000000049, 0.00033990299999999557, 0.00033943100000000115, 0.0003439859999999975, 0.0003394580000000008, 0.0003394999999999995, 0.00034176400000000134, 0.00034231900000000065, 0.0003390139999999986, 0.00034440300000000007, 0.00033922200000000013]</msg>
<status status="PASS" starttime="20201029 18:19:14.521" endtime="20201029 18:19:14.524"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.516" endtime="20201029 18:19:14.525"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:14.528" endtime="20201029 18:19:14.548"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.527" endtime="20201029 18:19:14.548"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.526" endtime="20201029 18:19:14.549"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.145" endtime="20201029 18:19:14.549"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.145" endtime="20201029 18:19:14.549"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:14.558" endtime="20201029 18:19:14.593"></status>
</kw>
<msg timestamp="20201029 18:19:14.594" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:14.557" endtime="20201029 18:19:14.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:14.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:14.595" endtime="20201029 18:19:14.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:14.597" endtime="20201029 18:19:14.599"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.554" endtime="20201029 18:19:14.599"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.552" endtime="20201029 18:19:14.600"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:14.607" endtime="20201029 18:19:14.893"></status>
</kw>
<msg timestamp="20201029 18:19:14.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020659653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021019458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:14.605" endtime="20201029 18:19:14.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:14.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020659653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021019458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:14.897" endtime="20201029 18:19:14.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:14.906" endtime="20201029 18:19:14.907"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.602" endtime="20201029 18:19:14.908"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.600" endtime="20201029 18:19:14.908"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:14.912" level="INFO">${RESULT} = [{'diff': 0.00035980500000000123}, {'diff': 0.0003420140000000016}, {'diff': 0.00033958299999999747}, {'diff': 0.0003440409999999998}, {'diff': 0.00033833399999999916}, {'diff': 0.0003437639999999999}...</msg>
<status status="PASS" starttime="20201029 18:19:14.909" endtime="20201029 18:19:14.913"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:14.917" level="INFO">${ACCURACY} = {'diff': [0.00035980500000000123, 0.0003420140000000016, 0.00033958299999999747, 0.0003440409999999998, 0.00033833399999999916, 0.0003437639999999999, 0.00033976399999999934, 0.00034383299999999825, 0...</msg>
<status status="PASS" starttime="20201029 18:19:14.913" endtime="20201029 18:19:14.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:14.922" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201029 18:19:14.921" endtime="20201029 18:19:14.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:14.925" level="INFO">VALUE: [0.00035980500000000123, 0.0003420140000000016, 0.00033958299999999747, 0.0003440409999999998, 0.00033833399999999916, 0.0003437639999999999, 0.00033976399999999934, 0.00034383299999999825, 0.0003422629999999989, 0.00034270900000000007, 0.00034130599999999955, 0.0003407360000000012, 0.00034392999999999924, 0.000341000000000001, 0.000338500000000002, 0.000339194000000001, 0.0003405559999999988, 0.0003410140000000006, 0.00033806899999999987, 0.0003442080000000021, 0.0003435279999999992, 0.00033898599999999945, 0.00033902799999999816, 0.00033884699999999976, 0.0003404719999999979, 0.0003388749999999989, 0.0003431940000000015, 0.0003416530000000008, 0.00033926399999999884, 0.0003406940000000025, 0.00033987500000000337, 0.00034081899999999915, 0.00033991599999999567, 0.000341292, 0.0003383889999999945, 0.0003412780000000004, 0.0003377779999999969, 0.00033916700000000133, 0.00034105499999999983, 0.00034241699999999764, 0.00034052799999999966, 0.0003437920000000025, 0.0003439309999999987, 0.00034201399999999466, 0.0003394580000000008, 0.00034419399999999906, 0.00034304100000000226, 0.00034226400000000184, 0.00034391599999999967, 0.0003442089999999981]</msg>
<status status="PASS" starttime="20201029 18:19:14.923" endtime="20201029 18:19:14.925"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.918" endtime="20201029 18:19:14.926"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:14.930" endtime="20201029 18:19:14.949"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.928" endtime="20201029 18:19:14.950"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.927" endtime="20201029 18:19:14.950"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.550" endtime="20201029 18:19:14.950"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.549" endtime="20201029 18:19:14.951"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:14.960" endtime="20201029 18:19:14.994"></status>
</kw>
<msg timestamp="20201029 18:19:14.994" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:14.958" endtime="20201029 18:19:14.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:14.997" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:14.995" endtime="20201029 18:19:14.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:14.998" endtime="20201029 18:19:14.999"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.955" endtime="20201029 18:19:15.000"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.953" endtime="20201029 18:19:15.001"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:15.007" endtime="20201029 18:19:15.294"></status>
</kw>
<msg timestamp="20201029 18:19:15.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021117097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021465444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:15.006" endtime="20201029 18:19:15.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:15.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021117097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021465444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:15.298" endtime="20201029 18:19:15.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:15.306" endtime="20201029 18:19:15.308"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.003" endtime="20201029 18:19:15.308"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.001" endtime="20201029 18:19:15.309"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:15.313" level="INFO">${RESULT} = [{'diff': 0.00034834699999999885}, {'diff': 0.00034131899999999965}, {'diff': 0.0003436250000000002}, {'diff': 0.00034254199999999776}, {'diff': 0.0003383480000000022}, {'diff': 0.0003439730000000009}...</msg>
<status status="PASS" starttime="20201029 18:19:15.310" endtime="20201029 18:19:15.313"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:15.317" level="INFO">${ACCURACY} = {'diff': [0.00034834699999999885, 0.00034131899999999965, 0.0003436250000000002, 0.00034254199999999776, 0.0003383480000000022, 0.0003439730000000009, 0.0003421119999999986, 0.00034359699999999757, 0....</msg>
<status status="PASS" starttime="20201029 18:19:15.314" endtime="20201029 18:19:15.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:15.322" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201029 18:19:15.321" endtime="20201029 18:19:15.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:15.324" level="INFO">VALUE: [0.00034834699999999885, 0.00034131899999999965, 0.0003436250000000002, 0.00034254199999999776, 0.0003383480000000022, 0.0003439730000000009, 0.0003421119999999986, 0.00034359699999999757, 0.0003406529999999998, 0.00034159699999999904, 0.00033944400000000124, 0.00033862499999999865, 0.0003404439999999988, 0.00033786099999999833, 0.00034370900000000107, 0.00034048600000000095, 0.00033870800000000006, 0.00034373599999999727, 0.00034054199999999923, 0.0003408339999999982, 0.0003395689999999979, 0.00034418099999999896, 0.0003440409999999998, 0.00034244500000000025, 0.0003402500000000003, 0.00034, 0.00034237499999999893, 0.0003382779999999974, 0.00034363899999999975, 0.00034126400000000084, 0.00034418099999999896, 0.00034008299999999797, 0.0003407360000000012, 0.0003433050000000021, 0.00033894400000000074, 0.00033904199999999773, 0.00034104199999999973, 0.0003431110000000001, 0.00034220800000000356, 0.000344000000000004, 0.0003387500000000057, 0.00033837500000000187, 0.00034409700000000154, 0.0003417500000000018, 0.00033804200000000367, 0.0003415699999999994, 0.00034205500000000083, 0.00034104199999999973, 0.00034447199999999845, 0.00033898599999999945]</msg>
<status status="PASS" starttime="20201029 18:19:15.323" endtime="20201029 18:19:15.325"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.318" endtime="20201029 18:19:15.326"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:15.329" endtime="20201029 18:19:15.349"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.328" endtime="20201029 18:19:15.350"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.327" endtime="20201029 18:19:15.350"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.951" endtime="20201029 18:19:15.350"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.951" endtime="20201029 18:19:15.350"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:15.359" endtime="20201029 18:19:15.400"></status>
</kw>
<msg timestamp="20201029 18:19:15.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:15.358" endtime="20201029 18:19:15.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:15.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:15.402" endtime="20201029 18:19:15.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:15.405" endtime="20201029 18:19:15.406"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.355" endtime="20201029 18:19:15.407"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.353" endtime="20201029 18:19:15.407"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:15.414" endtime="20201029 18:19:15.700"></status>
</kw>
<msg timestamp="20201029 18:19:15.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028264236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028615806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:15.413" endtime="20201029 18:19:15.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:15.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028264236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028615806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:15.705" endtime="20201029 18:19:15.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:15.713" endtime="20201029 18:19:15.715"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.410" endtime="20201029 18:19:15.715"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.408" endtime="20201029 18:19:15.716"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:15.720" level="INFO">${RESULT} = [{'diff': 0.00035156999999999897}, {'diff': 0.0003417499999999983}, {'diff': 0.0003442640000000004}, {'diff': 0.0003428189999999977}, {'diff': 0.0003426669999999979}, {'diff': 0.0003411390000000007}, ...</msg>
<status status="PASS" starttime="20201029 18:19:15.716" endtime="20201029 18:19:15.720"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:15.724" level="INFO">${ACCURACY} = {'diff': [0.00035156999999999897, 0.0003417499999999983, 0.0003442640000000004, 0.0003428189999999977, 0.0003426669999999979, 0.0003411390000000007, 0.0003416390000000012, 0.0003386810000000004, 0.000...</msg>
<status status="PASS" starttime="20201029 18:19:15.721" endtime="20201029 18:19:15.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:15.728" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201029 18:19:15.727" endtime="20201029 18:19:15.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:15.731" level="INFO">VALUE: [0.00035156999999999897, 0.0003417499999999983, 0.0003442640000000004, 0.0003428189999999977, 0.0003426669999999979, 0.0003411390000000007, 0.0003416390000000012, 0.0003386810000000004, 0.00034054199999999923, 0.0003389300000000012, 0.0003397920000000054, 0.0003424580000000038, 0.00034418099999999896, 0.0003382229999999986, 0.0003412500000000013, 0.0003401810000000019, 0.000342194000000004, 0.00034027699999999994, 0.00033933300000000416, 0.00034223599999999577, 0.0003429579999999974, 0.000343777999999996, 0.0003404590000000013, 0.0003436110000000006, 0.00034274999999999584, 0.0003401810000000019, 0.0003437500000000038, 0.000343777999999996, 0.00034148600000000195, 0.00033872199999999963, 0.0003396249999999962, 0.0003441529999999998, 0.00033911100000000305, 0.0003386659999999944, 0.0003414999999999946, 0.000341292, 0.00034423599999999777, 0.0003430690000000014, 0.0003384170000000006, 0.00033970900000000054, 0.0003382909999999975, 0.00034043100000000215, 0.0003399450000000012, 0.00034297300000000336, 0.00034319399999999806, 0.0003381250000000016, 0.00034434699999999485, 0.00034341599999999917, 0.00034258300000000047, 0.00034331900000000165]</msg>
<status status="PASS" starttime="20201029 18:19:15.729" endtime="20201029 18:19:15.732"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.725" endtime="20201029 18:19:15.733"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:15.737" endtime="20201029 18:19:15.756"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.735" endtime="20201029 18:19:15.757"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.734" endtime="20201029 18:19:15.757"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.351" endtime="20201029 18:19:15.757"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.351" endtime="20201029 18:19:15.758"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:15.767" endtime="20201029 18:19:15.805"></status>
</kw>
<msg timestamp="20201029 18:19:15.806" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:15.765" endtime="20201029 18:19:15.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:15.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:15.807" endtime="20201029 18:19:15.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:15.809" endtime="20201029 18:19:15.811"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.763" endtime="20201029 18:19:15.812"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.760" endtime="20201029 18:19:15.812"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:15.819" endtime="20201029 18:19:16.105"></status>
</kw>
<msg timestamp="20201029 18:19:16.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022889222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023240431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:15.817" endtime="20201029 18:19:16.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:16.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022889222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023240431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:16.109" endtime="20201029 18:19:16.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:16.118" endtime="20201029 18:19:16.119"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.814" endtime="20201029 18:19:16.120"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.813" endtime="20201029 18:19:16.120"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:16.125" level="INFO">${RESULT} = [{'diff': 0.00035120899999999816}, {'diff': 0.00034040200000000007}, {'diff': 0.0003394999999999995}, {'diff': 0.00034083400000000166}, {'diff': 0.0003386529999999978}, {'diff': 0.00033966699999999836...</msg>
<status status="PASS" starttime="20201029 18:19:16.121" endtime="20201029 18:19:16.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:16.129" level="INFO">${ACCURACY} = {'diff': [0.00035120899999999816, 0.00034040200000000007, 0.0003394999999999995, 0.00034083400000000166, 0.0003386529999999978, 0.00033966699999999836, 0.00033916700000000133, 0.0003443340000000017, 0...</msg>
<status status="PASS" starttime="20201029 18:19:16.126" endtime="20201029 18:19:16.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:16.134" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201029 18:19:16.133" endtime="20201029 18:19:16.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:16.137" level="INFO">VALUE: [0.00035120899999999816, 0.00034040200000000007, 0.0003394999999999995, 0.00034083400000000166, 0.0003386529999999978, 0.00033966699999999836, 0.00033916700000000133, 0.0003443340000000017, 0.00034158299999999947, 0.0003423050000000011, 0.000342791999999998, 0.00033861100000000255, 0.0003420139999999981, 0.0003391390000000022, 0.000341000000000001, 0.0003422499999999988, 0.00034099999999999756, 0.00033888899999999847, 0.00034237499999999893, 0.0003401659999999994, 0.00034094499999999875, 0.000343791999999999, 0.00034272299999999964, 0.00034326400000000284, 0.0003399300000000022, 0.00033802799999999716, 0.0003435690000000019, 0.00034065199999999685, 0.0003415279999999937, 0.00033882000000000356, 0.00034036099999999736, 0.000343889, 0.0003396520000000028, 0.00034074999999999384, 0.00034118099999999596, 0.00033843100000000015, 0.000342888999999999, 0.0003407779999999999, 0.00033780599999999605, 0.00034422200000000513, 0.0003381250000000016, 0.00033970800000000106, 0.00034347199999999745, 0.0003410689999999994, 0.00033994400000000174, 0.00034126400000000084, 0.00033970900000000054, 0.00034220800000000356, 0.00034359700000000104, 0.00033920800000000056]</msg>
<status status="PASS" starttime="20201029 18:19:16.135" endtime="20201029 18:19:16.137"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.130" endtime="20201029 18:19:16.138"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:16.142" endtime="20201029 18:19:16.161"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.140" endtime="20201029 18:19:16.162"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.139" endtime="20201029 18:19:16.162"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.759" endtime="20201029 18:19:16.163"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.758" endtime="20201029 18:19:16.163"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:16.172" endtime="20201029 18:19:16.210"></status>
</kw>
<msg timestamp="20201029 18:19:16.210" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:16.170" endtime="20201029 18:19:16.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:16.213" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:16.212" endtime="20201029 18:19:16.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:16.214" endtime="20201029 18:19:16.216"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.167" endtime="20201029 18:19:16.216"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.165" endtime="20201029 18:19:16.217"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:16.223" endtime="20201029 18:19:16.510"></status>
</kw>
<msg timestamp="20201029 18:19:16.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024781444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025130125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:16.222" endtime="20201029 18:19:16.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:16.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024781444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025130125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:16.515" endtime="20201029 18:19:16.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:16.523" endtime="20201029 18:19:16.525"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.219" endtime="20201029 18:19:16.526"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.217" endtime="20201029 18:19:16.526"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:16.530" level="INFO">${RESULT} = [{'diff': 0.000348681}, {'diff': 0.00033870800000000006}, {'diff': 0.000341292}, {'diff': 0.0003420699999999999}, {'diff': 0.00034337499999999993}, {'diff': 0.0003435699999999979}, {'diff': 0.00033940...</msg>
<status status="PASS" starttime="20201029 18:19:16.527" endtime="20201029 18:19:16.530"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:16.534" level="INFO">${ACCURACY} = {'diff': [0.000348681, 0.00033870800000000006, 0.000341292, 0.0003420699999999999, 0.00034337499999999993, 0.0003435699999999979, 0.000339403000000002, 0.00034355499999999886, 0.0003403469999999978, 0...</msg>
<status status="PASS" starttime="20201029 18:19:16.531" endtime="20201029 18:19:16.534"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:16.539" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201029 18:19:16.538" endtime="20201029 18:19:16.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:16.541" level="INFO">VALUE: [0.000348681, 0.00033870800000000006, 0.000341292, 0.0003420699999999999, 0.00034337499999999993, 0.0003435699999999979, 0.000339403000000002, 0.00034355499999999886, 0.0003403469999999978, 0.00034055499999999933, 0.00034354199999999877, 0.0003389170000000011, 0.00034373600000000074, 0.00033875000000000224, 0.00034022200000000113, 0.0003430690000000014, 0.00033936099999999983, 0.00034209699999999954, 0.0003421390000000052, 0.0003400139999999996, 0.0003386250000000021, 0.00033987500000000337, 0.00034008299999999797, 0.00034254200000000123, 0.00034423599999999777, 0.0003382630000000053, 0.0003436110000000006, 0.00034208299999999997, 0.00034184799999999876, 0.0003417780000000009, 0.00034102800000000016, 0.0003387229999999991, 0.0003403049999999991, 0.00034315199999999935, 0.0003418199999999996, 0.0003416250000000051, 0.0003402360000000007, 0.0003433050000000021, 0.00034342999999999874, 0.0003388049999999976, 0.00033966700000000183, 0.00033948599999999995, 0.0003395139999999991, 0.0003421249999999987, 0.0003405140000000001, 0.000341000000000001, 0.00034191699999999714, 0.0003442639999999969, 0.0003439439999999988, 0.0003409449999999953]</msg>
<status status="PASS" starttime="20201029 18:19:16.540" endtime="20201029 18:19:16.542"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.535" endtime="20201029 18:19:16.543"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:16.546" endtime="20201029 18:19:16.566"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.545" endtime="20201029 18:19:16.566"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.544" endtime="20201029 18:19:16.567"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.164" endtime="20201029 18:19:16.567"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.163" endtime="20201029 18:19:16.567"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:16.576" endtime="20201029 18:19:16.611"></status>
</kw>
<msg timestamp="20201029 18:19:16.612" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:16.574" endtime="20201029 18:19:16.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:16.615" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:16.613" endtime="20201029 18:19:16.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:16.616" endtime="20201029 18:19:16.617"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.572" endtime="20201029 18:19:16.618"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.570" endtime="20201029 18:19:16.618"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:16.625" endtime="20201029 18:19:16.911"></status>
</kw>
<msg timestamp="20201029 18:19:16.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022317736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022671625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:16.624" endtime="20201029 18:19:16.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:16.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022317736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022671625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:16.916" endtime="20201029 18:19:16.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:16.924" endtime="20201029 18:19:16.926"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.621" endtime="20201029 18:19:16.927"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.619" endtime="20201029 18:19:16.927"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:16.931" level="INFO">${RESULT} = [{'diff': 0.0003538889999999996}, {'diff': 0.00034181900000000015}, {'diff': 0.00033794399999999974}, {'diff': 0.00034133400000000216}, {'diff': 0.0003403469999999978}, {'diff': 0.00033820799999999956...</msg>
<status status="PASS" starttime="20201029 18:19:16.928" endtime="20201029 18:19:16.931"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:16.935" level="INFO">${ACCURACY} = {'diff': [0.0003538889999999996, 0.00034181900000000015, 0.00033794399999999974, 0.00034133400000000216, 0.0003403469999999978, 0.00033820799999999956, 0.00034437500000000093, 0.000343889, 0.000338931...</msg>
<status status="PASS" starttime="20201029 18:19:16.932" endtime="20201029 18:19:16.935"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:16.940" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201029 18:19:16.939" endtime="20201029 18:19:16.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:16.942" level="INFO">VALUE: [0.0003538889999999996, 0.00034181900000000015, 0.00033794399999999974, 0.00034133400000000216, 0.0003403469999999978, 0.00033820799999999956, 0.00034437500000000093, 0.000343889, 0.00033893100000000065, 0.000339306000000001, 0.00034259700000000004, 0.0003389450000000002, 0.00034020800000000156, 0.00034368099999999846, 0.000343292000000002, 0.0003395699999999974, 0.000341985999999999, 0.00034254200000000123, 0.00034354200000000223, 0.0003417500000000018, 0.00033801400000000106, 0.00034018099999999843, 0.00034054199999999923, 0.00034131899999999965, 0.0003400269999999997, 0.00033783300000000266, 0.0003428050000000016, 0.0003440690000000024, 0.0003419859999999955, 0.0003444309999999992, 0.00034236099999999936, 0.00034359700000000104, 0.0003407230000000011, 0.00033804199999999673, 0.0003429999999999961, 0.0003434590000000043, 0.00034424999999999734, 0.0003399580000000013, 0.0003409859999999945, 0.000339291999999998, 0.000344000000000004, 0.0003428330000000007, 0.0003423330000000002, 0.00034240299999999807, 0.00033893100000000065, 0.0003430140000000026, 0.0003385139999999981, 0.0003396250000000031, 0.00033911100000000305, 0.0003389170000000011]</msg>
<status status="PASS" starttime="20201029 18:19:16.941" endtime="20201029 18:19:16.949"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.936" endtime="20201029 18:19:16.949"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:16.953" endtime="20201029 18:19:16.973"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.952" endtime="20201029 18:19:16.973"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.950" endtime="20201029 18:19:16.974"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.568" endtime="20201029 18:19:16.974"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.567" endtime="20201029 18:19:16.974"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:16.983" endtime="20201029 18:19:17.018"></status>
</kw>
<msg timestamp="20201029 18:19:17.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:16.981" endtime="20201029 18:19:17.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:17.021" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:17.020" endtime="20201029 18:19:17.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:17.023" endtime="20201029 18:19:17.024"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.979" endtime="20201029 18:19:17.025"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.977" endtime="20201029 18:19:17.025"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:17.032" endtime="20201029 18:19:17.318"></status>
</kw>
<msg timestamp="20201029 18:19:17.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022226375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022570042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:17.030" endtime="20201029 18:19:17.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:17.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022226375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022570042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:17.323" endtime="20201029 18:19:17.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:17.331" endtime="20201029 18:19:17.333"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.028" endtime="20201029 18:19:17.333"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.026" endtime="20201029 18:19:17.334"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:17.338" level="INFO">${RESULT} = [{'diff': 0.0003436669999999989}, {'diff': 0.00033983400000000066}, {'diff': 0.0003401109999999971}, {'diff': 0.00034450000000000106}, {'diff': 0.0003412230000000016}, {'diff': 0.0003435139999999996},...</msg>
<status status="PASS" starttime="20201029 18:19:17.335" endtime="20201029 18:19:17.338"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:17.343" level="INFO">${ACCURACY} = {'diff': [0.0003436669999999989, 0.00033983400000000066, 0.0003401109999999971, 0.00034450000000000106, 0.0003412230000000016, 0.0003435139999999996, 0.0003432639999999994, 0.0003401939999999985, 0.00...</msg>
<status status="PASS" starttime="20201029 18:19:17.339" endtime="20201029 18:19:17.343"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:17.347" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201029 18:19:17.346" endtime="20201029 18:19:17.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:17.350" level="INFO">VALUE: [0.0003436669999999989, 0.00033983400000000066, 0.0003401109999999971, 0.00034450000000000106, 0.0003412230000000016, 0.0003435139999999996, 0.0003432639999999994, 0.0003401939999999985, 0.00033980599999999805, 0.0003436250000000002, 0.00034440300000000007, 0.00034263899999999875, 0.0003405560000000023, 0.00034377799999999945, 0.00034368000000000246, 0.0003391659999999984, 0.00034016600000000285, 0.000343098, 0.0003390560000000008, 0.00034126400000000084, 0.00033972200000000063, 0.0003388060000000005, 0.0003415140000000011, 0.0003402500000000003, 0.00034352699999999625, 0.0003408469999999983, 0.0003409720000000019, 0.0003412230000000016, 0.00034202800000000116, 0.00033847299999999886, 0.00034152800000000066, 0.000344000000000004, 0.0003429449999999973, 0.00034352800000000266, 0.00033854199999999723, 0.00034423599999999777, 0.0003396249999999962, 0.0003385139999999981, 0.000338999999999999, 0.0003442079999999986, 0.0003428200000000006, 0.0003401800000000024, 0.0003431659999999989, 0.0003442780000000034, 0.00034159699999999904, 0.0003425279999999947, 0.00033937500000000287, 0.0003409450000000022, 0.00034437500000000093, 0.000341292]</msg>
<status status="PASS" starttime="20201029 18:19:17.349" endtime="20201029 18:19:17.351"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.344" endtime="20201029 18:19:17.351"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:17.355" endtime="20201029 18:19:17.375"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.354" endtime="20201029 18:19:17.375"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.352" endtime="20201029 18:19:17.376"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.975" endtime="20201029 18:19:17.376"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.974" endtime="20201029 18:19:17.376"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:17.385" endtime="20201029 18:19:17.420"></status>
</kw>
<msg timestamp="20201029 18:19:17.420" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:17.383" endtime="20201029 18:19:17.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:17.423" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:17.421" endtime="20201029 18:19:17.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:17.424" endtime="20201029 18:19:17.426"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.381" endtime="20201029 18:19:17.426"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.378" endtime="20201029 18:19:17.427"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:17.433" endtime="20201029 18:19:17.721"></status>
</kw>
<msg timestamp="20201029 18:19:17.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022298597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022649472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:17.432" endtime="20201029 18:19:17.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:17.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022298597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022649472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:17.726" endtime="20201029 18:19:17.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:17.734" endtime="20201029 18:19:17.736"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.429" endtime="20201029 18:19:17.736"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.427" endtime="20201029 18:19:17.737"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:17.741" level="INFO">${RESULT} = [{'diff': 0.0003508750000000005}, {'diff': 0.0003443059999999991}, {'diff': 0.00033952799999999866}, {'diff': 0.0003385560000000003}, {'diff': 0.00034005499999999883}, {'diff': 0.0003428200000000006},...</msg>
<status status="PASS" starttime="20201029 18:19:17.738" endtime="20201029 18:19:17.741"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:17.745" level="INFO">${ACCURACY} = {'diff': [0.0003508750000000005, 0.0003443059999999991, 0.00033952799999999866, 0.0003385560000000003, 0.00034005499999999883, 0.0003428200000000006, 0.000341194999999999, 0.0003443609999999979, 0.000...</msg>
<status status="PASS" starttime="20201029 18:19:17.742" endtime="20201029 18:19:17.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:17.749" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201029 18:19:17.748" endtime="20201029 18:19:17.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:17.752" level="INFO">VALUE: [0.0003508750000000005, 0.0003443059999999991, 0.00033952799999999866, 0.0003385560000000003, 0.00034005499999999883, 0.0003428200000000006, 0.000341194999999999, 0.0003443609999999979, 0.0003431110000000001, 0.0003407500000000008, 0.00034173599999999874, 0.00034044499999999825, 0.0003381250000000016, 0.00034084800000000123, 0.00033829200000000045, 0.00034131899999999965, 0.0003382640000000013, 0.00033884799999999923, 0.00034134700000000226, 0.00034391599999999967, 0.0003391520000000023, 0.0003431529999999988, 0.00034015300000000276, 0.000342986, 0.0003409309999999992, 0.00034326300000000337, 0.0003391390000000022, 0.00034019499999999453, 0.00034258300000000047, 0.00033894400000000074, 0.00033987499999999643, 0.00034298700000000293, 0.0003412370000000012, 0.0003381249999999947, 0.00033969500000000097, 0.00034120800000000256, 0.00034186099999999886, 0.0003387499999999988, 0.00034180600000000005, 0.0003432360000000037, 0.0003419579999999964, 0.0003437500000000038, 0.0003437920000000025, 0.00033959699999999704, 0.0003411380000000047, 0.00034127700000000094, 0.0003390280000000051, 0.0003416249999999982, 0.00033938900000000244, 0.00034088900000000394]</msg>
<status status="PASS" starttime="20201029 18:19:17.750" endtime="20201029 18:19:17.753"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.746" endtime="20201029 18:19:17.753"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:17.758" endtime="20201029 18:19:17.777"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.756" endtime="20201029 18:19:17.778"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.754" endtime="20201029 18:19:17.778"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.377" endtime="20201029 18:19:17.778"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.376" endtime="20201029 18:19:17.778"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:17.787" endtime="20201029 18:19:17.827"></status>
</kw>
<msg timestamp="20201029 18:19:17.828" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:17.786" endtime="20201029 18:19:17.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:17.831" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:17.829" endtime="20201029 18:19:17.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:17.833" endtime="20201029 18:19:17.835"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.783" endtime="20201029 18:19:17.836"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.781" endtime="20201029 18:19:17.836"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:17.843" endtime="20201029 18:19:18.130"></status>
</kw>
<msg timestamp="20201029 18:19:18.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021819444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022150333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:17.841" endtime="20201029 18:19:18.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:18.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021819444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022150333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:18.134" endtime="20201029 18:19:18.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:18.142" endtime="20201029 18:19:18.144"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.838" endtime="20201029 18:19:18.144"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.837" endtime="20201029 18:19:18.145"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:18.149" level="INFO">${RESULT} = [{'diff': 0.0003308890000000009}, {'diff': 0.0003394300000000017}, {'diff': 0.00034159699999999904}, {'diff': 0.0003423330000000002}, {'diff': 0.00034268000000000146}, {'diff': 0.00034423599999999777}...</msg>
<status status="PASS" starttime="20201029 18:19:18.146" endtime="20201029 18:19:18.149"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:18.153" level="INFO">${ACCURACY} = {'diff': [0.0003308890000000009, 0.0003394300000000017, 0.00034159699999999904, 0.0003423330000000002, 0.00034268000000000146, 0.00034423599999999777, 0.00034059699999999804, 0.00034195799999999985, 0...</msg>
<status status="PASS" starttime="20201029 18:19:18.150" endtime="20201029 18:19:18.153"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:18.158" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201029 18:19:18.157" endtime="20201029 18:19:18.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:18.160" level="INFO">VALUE: [0.0003308890000000009, 0.0003394300000000017, 0.00034159699999999904, 0.0003423330000000002, 0.00034268000000000146, 0.00034423599999999777, 0.00034059699999999804, 0.00034195799999999985, 0.0003439440000000023, 0.00034056900000000237, 0.00034220899999999957, 0.0003418339999999992, 0.0003413469999999988, 0.0003420270000000017, 0.0003433330000000012, 0.0003443330000000022, 0.0003395139999999991, 0.00034199999999999856, 0.00034437500000000093, 0.0003398749999999999, 0.0003415140000000011, 0.00033843100000000015, 0.00034363899999999975, 0.0003424719999999999, 0.0003386250000000021, 0.0003428190000000046, 0.00034019399999999506, 0.000342292000000001, 0.0003413199999999991, 0.0003393329999999972, 0.0003426529999999983, 0.000343889, 0.0003406249999999972, 0.00034084799999999776, 0.00034087499999999743, 0.000341000000000001, 0.0003397499999999998, 0.0003430690000000014, 0.00034, 0.0003381520000000013, 0.00034120900000000204, 0.00033987499999999643, 0.00034108399999999844, 0.0003412500000000013, 0.00034005600000000524, 0.00033934700000000373, 0.0003407500000000008, 0.00034041599999999617, 0.00034116700000000333, 0.0003431799999999985]</msg>
<status status="PASS" starttime="20201029 18:19:18.159" endtime="20201029 18:19:18.162"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.154" endtime="20201029 18:19:18.162"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:18.166" endtime="20201029 18:19:18.186"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.165" endtime="20201029 18:19:18.186"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.163" endtime="20201029 18:19:18.187"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.779" endtime="20201029 18:19:18.187"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.779" endtime="20201029 18:19:18.187"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:18.196" endtime="20201029 18:19:18.234"></status>
</kw>
<msg timestamp="20201029 18:19:18.235" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:18.195" endtime="20201029 18:19:18.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:18.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:18.236" endtime="20201029 18:19:18.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:18.239" endtime="20201029 18:19:18.240"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.192" endtime="20201029 18:19:18.241"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.190" endtime="20201029 18:19:18.241"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:18.248" endtime="20201029 18:19:18.535"></status>
</kw>
<msg timestamp="20201029 18:19:18.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025037028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025383208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:18.246" endtime="20201029 18:19:18.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:18.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025037028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025383208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:18.539" endtime="20201029 18:19:18.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:18.547" endtime="20201029 18:19:18.549"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.244" endtime="20201029 18:19:18.550"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.242" endtime="20201029 18:19:18.550"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:18.554" level="INFO">${RESULT} = [{'diff': 0.0003461800000000015}, {'diff': 0.0003386109999999991}, {'diff': 0.00034008300000000144}, {'diff': 0.0003431530000000023}, {'diff': 0.00034408400000000144}, {'diff': 0.0003382499999999983},...</msg>
<status status="PASS" starttime="20201029 18:19:18.551" endtime="20201029 18:19:18.554"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:18.559" level="INFO">${ACCURACY} = {'diff': [0.0003461800000000015, 0.0003386109999999991, 0.00034008300000000144, 0.0003431530000000023, 0.00034408400000000144, 0.0003382499999999983, 0.0003393330000000007, 0.00034118099999999943, 0.0...</msg>
<status status="PASS" starttime="20201029 18:19:18.555" endtime="20201029 18:19:18.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:18.564" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201029 18:19:18.563" endtime="20201029 18:19:18.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:18.566" level="INFO">VALUE: [0.0003461800000000015, 0.0003386109999999991, 0.00034008300000000144, 0.0003431530000000023, 0.00034408400000000144, 0.0003382499999999983, 0.0003393330000000007, 0.00034118099999999943, 0.00034149999999999806, 0.00034002799999999916, 0.00034058300000000194, 0.0003379579999999993, 0.00033880500000000105, 0.0003401110000000006, 0.00033786099999999833, 0.00033836099999999883, 0.0003398749999999999, 0.0003403199999999981, 0.0003398199999999976, 0.0003411669999999964, 0.00034005499999999883, 0.0003411529999999968, 0.00034037499999999693, 0.0003386669999999939, 0.0003412500000000013, 0.0003425560000000008, 0.00034293100000000465, 0.0003392359999999997, 0.00034141599999999717, 0.0003439579999999984, 0.00033981899999999815, 0.00034436100000000136, 0.0003431249999999997, 0.00034084700000000523, 0.00034258300000000047, 0.00034059699999999804, 0.0003397499999999998, 0.0003410559999999993, 0.00034187499999999843, 0.00034359700000000104, 0.0003438340000000012, 0.0003433330000000012, 0.0003433470000000008, 0.0003419030000000045, 0.00033837500000000187, 0.0003405689999999989, 0.0003415140000000011, 0.0003436659999999994, 0.000344276999999997, 0.00034108299999999897]</msg>
<status status="PASS" starttime="20201029 18:19:18.565" endtime="20201029 18:19:18.567"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.560" endtime="20201029 18:19:18.568"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:18.572" endtime="20201029 18:19:18.591"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.570" endtime="20201029 18:19:18.592"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.569" endtime="20201029 18:19:18.592"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.188" endtime="20201029 18:19:18.593"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.187" endtime="20201029 18:19:18.593"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:18.602" endtime="20201029 18:19:18.636"></status>
</kw>
<msg timestamp="20201029 18:19:18.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:18.600" endtime="20201029 18:19:18.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:18.639" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:18.638" endtime="20201029 18:19:18.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:18.640" endtime="20201029 18:19:18.642"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.597" endtime="20201029 18:19:18.643"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.595" endtime="20201029 18:19:18.643"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:18.650" endtime="20201029 18:19:18.939"></status>
</kw>
<msg timestamp="20201029 18:19:18.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021555444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021893083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:18.648" endtime="20201029 18:19:18.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:18.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021555444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021893083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:18.944" endtime="20201029 18:19:18.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:18.955" endtime="20201029 18:19:18.957"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.645" endtime="20201029 18:19:18.958"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.644" endtime="20201029 18:19:18.958"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:18.962" level="INFO">${RESULT} = [{'diff': 0.0003376390000000007}, {'diff': 0.0003393330000000007}, {'diff': 0.00034091599999999667}, {'diff': 0.00034354200000000223}, {'diff': 0.00033854100000000123}, {'diff': 0.0003416109999999986}...</msg>
<status status="PASS" starttime="20201029 18:19:18.959" endtime="20201029 18:19:18.962"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:18.966" level="INFO">${ACCURACY} = {'diff': [0.0003376390000000007, 0.0003393330000000007, 0.00034091599999999667, 0.00034354200000000223, 0.00033854100000000123, 0.0003416109999999986, 0.00034104100000000026, 0.00033933400000000016, 0...</msg>
<status status="PASS" starttime="20201029 18:19:18.963" endtime="20201029 18:19:18.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:18.971" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201029 18:19:18.970" endtime="20201029 18:19:18.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:18.973" level="INFO">VALUE: [0.0003376390000000007, 0.0003393330000000007, 0.00034091599999999667, 0.00034354200000000223, 0.00033854100000000123, 0.0003416109999999986, 0.00034104100000000026, 0.00033933400000000016, 0.0003381809999999999, 0.0003381109999999986, 0.000342694000000001, 0.0003393330000000007, 0.00034055499999999933, 0.0003438049999999991, 0.00034220899999999957, 0.00033916699999999786, 0.00034172299999999864, 0.0003443469999999983, 0.0003391109999999996, 0.0003442919999999995, 0.000339500000000003, 0.00034361099999999714, 0.00034188900000000147, 0.00034058299999999847, 0.00033954099999999876, 0.0003436669999999989, 0.0003431110000000001, 0.000338403000000001, 0.000341597000000006, 0.0003423339999999997, 0.00034076400000000034, 0.0003414170000000036, 0.0003436529999999993, 0.000343485999999997, 0.0003387779999999979, 0.0003378049999999966, 0.0003427230000000031, 0.0003443470000000018, 0.0003435690000000019, 0.00033934700000000373, 0.0003411659999999969, 0.0003427500000000028, 0.0003407219999999947, 0.00034069499999999503, 0.0003423329999999933, 0.00034215300000000476, 0.00033811100000000205, 0.00033866600000000135, 0.00034155500000000033, 0.00034037500000000387]</msg>
<status status="PASS" starttime="20201029 18:19:18.972" endtime="20201029 18:19:18.974"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.967" endtime="20201029 18:19:18.975"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:18.979" endtime="20201029 18:19:18.998"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.977" endtime="20201029 18:19:18.999"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.976" endtime="20201029 18:19:18.999"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.594" endtime="20201029 18:19:18.999"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.593" endtime="20201029 18:19:19.000"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:19.009" endtime="20201029 18:19:19.048"></status>
</kw>
<msg timestamp="20201029 18:19:19.049" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:19.007" endtime="20201029 18:19:19.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:19.051" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:19.050" endtime="20201029 18:19:19.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:19.052" endtime="20201029 18:19:19.054"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.004" endtime="20201029 18:19:19.055"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.002" endtime="20201029 18:19:19.055"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:19.062" endtime="20201029 18:19:19.378"></status>
</kw>
<msg timestamp="20201029 18:19:19.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026609639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026953278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:19.060" endtime="20201029 18:19:19.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:19.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026609639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026953278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:19.383" endtime="20201029 18:19:19.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:19.391" endtime="20201029 18:19:19.393"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.057" endtime="20201029 18:19:19.393"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.056" endtime="20201029 18:19:19.394"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:19.398" level="INFO">${RESULT} = [{'diff': 0.00034363899999999975}, {'diff': 0.00033787500000000137}, {'diff': 0.0003409169999999996}, {'diff': 0.00034277799999999845}, {'diff': 0.0003432499999999998}, {'diff': 0.0003436950000000015}...</msg>
<status status="PASS" starttime="20201029 18:19:19.394" endtime="20201029 18:19:19.398"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:19.402" level="INFO">${ACCURACY} = {'diff': [0.00034363899999999975, 0.00033787500000000137, 0.0003409169999999996, 0.00034277799999999845, 0.0003432499999999998, 0.0003436950000000015, 0.00033815300000000076, 0.00034352800000000266, 0...</msg>
<status status="PASS" starttime="20201029 18:19:19.399" endtime="20201029 18:19:19.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:19.406" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201029 18:19:19.405" endtime="20201029 18:19:19.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:19.409" level="INFO">VALUE: [0.00034363899999999975, 0.00033787500000000137, 0.0003409169999999996, 0.00034277799999999845, 0.0003432499999999998, 0.0003436950000000015, 0.00033815300000000076, 0.00034352800000000266, 0.00033970800000000106, 0.0003403330000000017, 0.00034122200000000213, 0.0003443189999999992, 0.00034262500000000265, 0.00034324999999999634, 0.0003442219999999982, 0.00034102800000000016, 0.000339097999999996, 0.00034406899999999546, 0.00033861100000000255, 0.00033970800000000106, 0.00033991699999999514, 0.00034054199999999923, 0.00034236099999999936, 0.0003429030000000055, 0.00034022200000000113, 0.00034044400000000224, 0.000338999999999999, 0.0003406249999999972, 0.0003409580000000023, 0.00034318099999999796, 0.00033866600000000135, 0.0003440279999999962, 0.00034281900000000115, 0.00034408300000000197, 0.0003417780000000009, 0.0003431249999999997, 0.0003389719999999999, 0.0003420690000000004, 0.00034115300000000376, 0.0003392359999999997, 0.0003436659999999994, 0.0003392359999999997, 0.0003420560000000003, 0.00034409700000000154, 0.0003414439999999963, 0.0003443059999999956, 0.00034422200000000513, 0.0003429439999999978, 0.00033916700000000133, 0.0003387920000000044]</msg>
<status status="PASS" starttime="20201029 18:19:19.407" endtime="20201029 18:19:19.410"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.403" endtime="20201029 18:19:19.411"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:19.415" endtime="20201029 18:19:19.434"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.413" endtime="20201029 18:19:19.435"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.412" endtime="20201029 18:19:19.435"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.001" endtime="20201029 18:19:19.436"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.000" endtime="20201029 18:19:19.436"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.838" endtime="20201029 18:19:19.436"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201029 18:18:38.763" endtime="20201029 18:19:19.436" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:19.443" endtime="20201029 18:19:19.463"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.442" endtime="20201029 18:19:19.463"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:19.477" endtime="20201029 18:19:19.496"></status>
</kw>
<msg timestamp="20201029 18:19:19.497" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:19.476" endtime="20201029 18:19:19.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:19.500" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:19.498" endtime="20201029 18:19:19.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:19:19.503" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:19:19.501" endtime="20201029 18:19:19.503"></status>
</kw>
<status status="FAIL" starttime="20201029 18:19:19.473" endtime="20201029 18:19:19.504"></status>
</kw>
<status status="FAIL" starttime="20201029 18:19:19.470" endtime="20201029 18:19:19.504"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.469" endtime="20201029 18:19:19.505"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:19:19.508" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:19:19.508" endtime="20201029 18:19:19.509"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.505" endtime="20201029 18:19:19.509"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.468" endtime="20201029 18:19:19.509"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.467" endtime="20201029 18:19:19.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:19.510" endtime="20201029 18:19:19.512"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.466" endtime="20201029 18:19:19.512"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.464" endtime="20201029 18:19:19.513"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.440" endtime="20201029 18:19:19.513"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:19.524" endtime="20201029 18:19:19.561"></status>
</kw>
<msg timestamp="20201029 18:19:19.561" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:19.522" endtime="20201029 18:19:19.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:19.564" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:19.563" endtime="20201029 18:19:19.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:19.566" endtime="20201029 18:19:19.567"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.518" endtime="20201029 18:19:19.568"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.516" endtime="20201029 18:19:19.569"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:19.575" endtime="20201029 18:19:19.861"></status>
</kw>
<msg timestamp="20201029 18:19:19.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074407597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074786667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:19.574" endtime="20201029 18:19:19.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:19.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074407597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074786667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:19.866" endtime="20201029 18:19:19.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:19.874" endtime="20201029 18:19:19.876"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.571" endtime="20201029 18:19:19.876"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.569" endtime="20201029 18:19:19.877"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:19.881" level="INFO">${RESULT} = [{'diff': 0.00037906999999999524}, {'diff': 0.0003570409999999885}, {'diff': 0.00038587499999999386}, {'diff': 0.0003593890000000016}, {'diff': 0.0003850420000000021}, {'diff': 0.000385931000000006}, ...</msg>
<status status="PASS" starttime="20201029 18:19:19.878" endtime="20201029 18:19:19.881"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:19.885" level="INFO">${ACCURACY} = {'diff': [0.00037906999999999524, 0.0003570409999999885, 0.00038587499999999386, 0.0003593890000000016, 0.0003850420000000021, 0.000385931000000006, 0.0003579999999999972, 0.0003575269999999964, 0.000...</msg>
<status status="PASS" starttime="20201029 18:19:19.882" endtime="20201029 18:19:19.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:19.890" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201029 18:19:19.889" endtime="20201029 18:19:19.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:19.893" level="INFO">VALUE: [0.00037906999999999524, 0.0003570409999999885, 0.00038587499999999386, 0.0003593890000000016, 0.0003850420000000021, 0.000385931000000006, 0.0003579999999999972, 0.0003575269999999964, 0.0003602500000000064, 0.00035913899999999443, 0.0003588749999999946, 0.0003862220000000055, 0.00035615299999999794, 0.0003572500000000034, 0.00035923699999999836, 0.0003594160000000013, 0.00035858299999999566, 0.0003590690000000035, 0.0003600690000000045, 0.0003577359999999974, 0.00036031899999999784, 0.0003582219999999914, 0.00038499999999999646, 0.0003851110000000074, 0.00036029199999999817, 0.00035876399999999753, 0.00036095799999999456, 0.0003582500000000044, 0.000359861000000003, 0.0003854020000000069, 0.0003572499999999895, 0.00035976399999999853, 0.00038605499999999626, 0.0003589449999999994, 0.0003574999999999967, 0.00038545900000000466, 0.0003860970000000019, 0.0003589859999999917, 0.0003848879999999999, 0.00036008299999999716, 0.0003857779999999894, 0.0003579309999999919, 0.0003565549999999945, 0.0003604299999999949, 0.00035634799999999245, 0.0003569860000000036, 0.00035747199999999757, 0.000360861000000004, 0.0003585140000000042, 0.0003564999999999957]</msg>
<status status="PASS" starttime="20201029 18:19:19.891" endtime="20201029 18:19:19.893"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.886" endtime="20201029 18:19:19.894"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:19.898" endtime="20201029 18:19:19.917"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.896" endtime="20201029 18:19:19.918"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.895" endtime="20201029 18:19:19.918"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.515" endtime="20201029 18:19:19.918"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.514" endtime="20201029 18:19:19.918"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:19.928" endtime="20201029 18:19:19.964"></status>
</kw>
<msg timestamp="20201029 18:19:19.964" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:19.926" endtime="20201029 18:19:19.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:19.967" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:19.965" endtime="20201029 18:19:19.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:19.968" endtime="20201029 18:19:19.970"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.923" endtime="20201029 18:19:19.970"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.921" endtime="20201029 18:19:19.971"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:19.978" endtime="20201029 18:19:20.264"></status>
</kw>
<msg timestamp="20201029 18:19:20.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022162236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022547819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:19.976" endtime="20201029 18:19:20.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:20.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022162236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022547819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:20.268" endtime="20201029 18:19:20.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:20.276" endtime="20201029 18:19:20.278"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.973" endtime="20201029 18:19:20.279"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.971" endtime="20201029 18:19:20.279"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:20.283" level="INFO">${RESULT} = [{'diff': 0.00038558300000000184}, {'diff': 0.0003575829999999981}, {'diff': 0.00038576400000000025}, {'diff': 0.00036066699999999854}, {'diff': 0.0003861110000000015}, {'diff': 0.0003608060000000017}...</msg>
<status status="PASS" starttime="20201029 18:19:20.280" endtime="20201029 18:19:20.283"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:20.289" level="INFO">${ACCURACY} = {'diff': [0.00038558300000000184, 0.0003575829999999981, 0.00038576400000000025, 0.00036066699999999854, 0.0003861110000000015, 0.0003608060000000017, 0.0003586250000000013, 0.0003606389999999994, 0.0...</msg>
<status status="PASS" starttime="20201029 18:19:20.284" endtime="20201029 18:19:20.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:20.294" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201029 18:19:20.293" endtime="20201029 18:19:20.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:20.297" level="INFO">VALUE: [0.00038558300000000184, 0.0003575829999999981, 0.00038576400000000025, 0.00036066699999999854, 0.0003861110000000015, 0.0003608060000000017, 0.0003586250000000013, 0.0003606389999999994, 0.00035943000000000086, 0.0003607229999999968, 0.0003605970000000007, 0.0003607360000000004, 0.00035683300000000084, 0.00035873600000000186, 0.000360361, 0.00035844399999999943, 0.00035627799999999807, 0.0003857079999999985, 0.0003576250000000003, 0.000358167000000003, 0.000360555999999998, 0.0003595269999999984, 0.0003852360000000006, 0.000357070000000001, 0.0003600420000000014, 0.0003589999999999982, 0.0003591390000000014, 0.0003588470000000024, 0.000360555999999998, 0.0003570690000000015, 0.0003606390000000029, 0.0003573610000000005, 0.00035750000000000365, 0.00035944400000000043, 0.0003568479999999999, 0.0003610559999999985, 0.00035776400000000347, 0.0003568060000000012, 0.000360346999999997, 0.00038513900000000656, 0.00035755600000000193, 0.0003573610000000005, 0.00035861100000000173, 0.00036086200000000346, 0.0003597779999999981, 0.00038558300000000184, 0.00038557000000000174, 0.00035611200000000565, 0.00035926399999999803, 0.00038501400000000296]</msg>
<status status="PASS" starttime="20201029 18:19:20.295" endtime="20201029 18:19:20.297"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.290" endtime="20201029 18:19:20.298"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:20.302" endtime="20201029 18:19:20.321"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.300" endtime="20201029 18:19:20.322"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.299" endtime="20201029 18:19:20.322"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.919" endtime="20201029 18:19:20.322"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.919" endtime="20201029 18:19:20.323"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:20.332" endtime="20201029 18:19:20.369"></status>
</kw>
<msg timestamp="20201029 18:19:20.370" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:20.330" endtime="20201029 18:19:20.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:20.372" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:20.371" endtime="20201029 18:19:20.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:20.374" endtime="20201029 18:19:20.375"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.328" endtime="20201029 18:19:20.376"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.325" endtime="20201029 18:19:20.376"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:20.383" endtime="20201029 18:19:20.671"></status>
</kw>
<msg timestamp="20201029 18:19:20.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025020056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025387694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:20.381" endtime="20201029 18:19:20.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:20.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025020056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025387694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:20.675" endtime="20201029 18:19:20.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:20.684" endtime="20201029 18:19:20.685"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.379" endtime="20201029 18:19:20.686"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.377" endtime="20201029 18:19:20.686"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:20.690" level="INFO">${RESULT} = [{'diff': 0.000367638}, {'diff': 0.0003588470000000024}, {'diff': 0.00035701399999999925}, {'diff': 0.0003579999999999972}, {'diff': 0.0003851389999999996}, {'diff': 0.00035647200000000004}, {'diff': ...</msg>
<status status="PASS" starttime="20201029 18:19:20.687" endtime="20201029 18:19:20.690"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:20.694" level="INFO">${ACCURACY} = {'diff': [0.000367638, 0.0003588470000000024, 0.00035701399999999925, 0.0003579999999999972, 0.0003851389999999996, 0.00035647200000000004, 0.00038512500000000005, 0.00035624999999999893, 0.0003588610...</msg>
<status status="PASS" starttime="20201029 18:19:20.691" endtime="20201029 18:19:20.695"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:20.699" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201029 18:19:20.698" endtime="20201029 18:19:20.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:20.701" level="INFO">VALUE: [0.000367638, 0.0003588470000000024, 0.00035701399999999925, 0.0003579999999999972, 0.0003851389999999996, 0.00035647200000000004, 0.00038512500000000005, 0.00035624999999999893, 0.000358861000000002, 0.00038509699999999744, 0.00035708400000000057, 0.0003860140000000005, 0.00038498600000000036, 0.00036111200000000024, 0.00038506900000000177, 0.0003570279999999988, 0.00035791699999999926, 0.0003579029999999997, 0.00038629200000000335, 0.0003599030000000017, 0.0003850420000000021, 0.00035720799999999775, 0.00038581999999999506, 0.0003851110000000005, 0.0003851110000000005, 0.00035931899999999684, 0.0003564860000000031, 0.0003592500000000054, 0.0003608470000000044, 0.0003857090000000049, 0.00035715299999999894, 0.00035808400000000157, 0.00035770799999999825, 0.0003850560000000017, 0.0003582500000000044, 0.0003581939999999992, 0.00035752799999999585, 0.00035997200000000007, 0.00035765199999999997, 0.0003575280000000028, 0.000386611000000002, 0.00035943100000000033, 0.00035677800000000204, 0.00038566699999999926, 0.00035638900000000556, 0.00035943100000000033, 0.0003566249999999993, 0.0003858750000000008, 0.0003572089999999972, 0.0003607090000000007]</msg>
<status status="PASS" starttime="20201029 18:19:20.700" endtime="20201029 18:19:20.702"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.695" endtime="20201029 18:19:20.702"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:20.706" endtime="20201029 18:19:20.726"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.705" endtime="20201029 18:19:20.727"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.703" endtime="20201029 18:19:20.727"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.323" endtime="20201029 18:19:20.727"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.323" endtime="20201029 18:19:20.727"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:20.737" endtime="20201029 18:19:20.772"></status>
</kw>
<msg timestamp="20201029 18:19:20.773" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:20.735" endtime="20201029 18:19:20.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:20.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:20.774" endtime="20201029 18:19:20.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:20.776" endtime="20201029 18:19:20.778"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.732" endtime="20201029 18:19:20.779"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.730" endtime="20201029 18:19:20.779"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:20.786" endtime="20201029 18:19:21.072"></status>
</kw>
<msg timestamp="20201029 18:19:21.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022454708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022823514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:20.784" endtime="20201029 18:19:21.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:21.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022454708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022823514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:21.077" endtime="20201029 18:19:21.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:21.085" endtime="20201029 18:19:21.087"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.781" endtime="20201029 18:19:21.088"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.780" endtime="20201029 18:19:21.088"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:21.092" level="INFO">${RESULT} = [{'diff': 0.0003688059999999993}, {'diff': 0.00035979200000000114}, {'diff': 0.0003573470000000009}, {'diff': 0.0003596810000000006}, {'diff': 0.0003609029999999992}, {'diff': 0.00035879200000000014},...</msg>
<status status="PASS" starttime="20201029 18:19:21.089" endtime="20201029 18:19:21.092"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:21.096" level="INFO">${ACCURACY} = {'diff': [0.0003688059999999993, 0.00035979200000000114, 0.0003573470000000009, 0.0003596810000000006, 0.0003609029999999992, 0.00035879200000000014, 0.0003593190000000003, 0.0003583059999999992, 0.00...</msg>
<status status="PASS" starttime="20201029 18:19:21.093" endtime="20201029 18:19:21.097"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:21.101" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201029 18:19:21.100" endtime="20201029 18:19:21.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:21.103" level="INFO">VALUE: [0.0003688059999999993, 0.00035979200000000114, 0.0003573470000000009, 0.0003596810000000006, 0.0003609029999999992, 0.00035879200000000014, 0.0003593190000000003, 0.0003583059999999992, 0.0003609029999999992, 0.00036076399999999953, 0.0003567769999999991, 0.00036013799999999943, 0.0003580409999999999, 0.00035742999999999886, 0.00035741699999999876, 0.0003862919999999999, 0.0003581809999999991, 0.00035975000000000243, 0.00035783300000000184, 0.00035747200000000104, 0.00035687499999999955, 0.00035644500000000037, 0.0003603890000000026, 0.00035976399999999853, 0.0003860970000000019, 0.00036037500000000305, 0.00036047300000000004, 0.00038529200000000235, 0.00035826399999999703, 0.00035944400000000043, 0.0003604160000000023, 0.0003568750000000065, 0.0003608889999999962, 0.00035915300000000094, 0.0003605419999999984, 0.00036052799999999885, 0.00038575000000000415, 0.0003605270000000063, 0.0003864589999999987, 0.0003592229999999988, 0.00038636100000000173, 0.00038595799999999875, 0.0003600139999999988, 0.00038557000000000174, 0.0003562920000000011, 0.0003606120000000032, 0.00035659799999999964, 0.0003578469999999945, 0.00035726400000000297, 0.0003861520000000007]</msg>
<status status="PASS" starttime="20201029 18:19:21.102" endtime="20201029 18:19:21.105"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.097" endtime="20201029 18:19:21.106"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:21.109" endtime="20201029 18:19:21.129"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.108" endtime="20201029 18:19:21.130"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.107" endtime="20201029 18:19:21.130"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.728" endtime="20201029 18:19:21.130"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.728" endtime="20201029 18:19:21.130"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:21.139" endtime="20201029 18:19:21.174"></status>
</kw>
<msg timestamp="20201029 18:19:21.174" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:21.138" endtime="20201029 18:19:21.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:21.177" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:21.176" endtime="20201029 18:19:21.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:21.178" endtime="20201029 18:19:21.180"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.135" endtime="20201029 18:19:21.180"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.133" endtime="20201029 18:19:21.181"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:21.188" endtime="20201029 18:19:21.474"></status>
</kw>
<msg timestamp="20201029 18:19:21.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021065722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021432972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:21.186" endtime="20201029 18:19:21.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:21.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021065722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021432972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:21.478" endtime="20201029 18:19:21.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:21.487" endtime="20201029 18:19:21.489"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.183" endtime="20201029 18:19:21.489"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.181" endtime="20201029 18:19:21.490"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:21.494" level="INFO">${RESULT} = [{'diff': 0.000367250000000003}, {'diff': 0.00035987500000000255}, {'diff': 0.0003600689999999976}, {'diff': 0.00038640300000000044}, {'diff': 0.00035975000000000243}, {'diff': 0.00036094499999999793}...</msg>
<status status="PASS" starttime="20201029 18:19:21.491" endtime="20201029 18:19:21.494"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:21.499" level="INFO">${ACCURACY} = {'diff': [0.000367250000000003, 0.00035987500000000255, 0.0003600689999999976, 0.00038640300000000044, 0.00035975000000000243, 0.00036094499999999793, 0.0003864729999999983, 0.00035654200000000136, 0....</msg>
<status status="PASS" starttime="20201029 18:19:21.495" endtime="20201029 18:19:21.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:21.504" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201029 18:19:21.503" endtime="20201029 18:19:21.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:21.506" level="INFO">VALUE: [0.000367250000000003, 0.00035987500000000255, 0.0003600689999999976, 0.00038640300000000044, 0.00035975000000000243, 0.00036094499999999793, 0.0003864729999999983, 0.00035654200000000136, 0.0003585830000000026, 0.0003566530000000019, 0.0003573470000000009, 0.00035965300000000144, 0.00035790300000000316, 0.0003595830000000001, 0.0003592359999999989, 0.0003608190000000018, 0.000357457999999998, 0.0003609030000000027, 0.0003603200000000008, 0.00035623599999999936, 0.00035677799999999857, 0.0003563609999999995, 0.00035820799999999875, 0.0003849720000000008, 0.0003597779999999981, 0.00035669400000000115, 0.0003856659999999998, 0.00038572199999999807, 0.0003605969999999972, 0.00035932000000000325, 0.00035791699999999926, 0.0003567219999999968, 0.0003853330000000016, 0.00038584700000000166, 0.00038523599999999714, 0.0003862919999999964, 0.00035632000000000025, 0.00038583299999999515, 0.00035715299999999894, 0.0003586390000000009, 0.00035943100000000033, 0.00035715199999999947, 0.0003569019999999992, 0.0003593749999999951, 0.00035865300000000044, 0.00035980499999999777, 0.0003850560000000017, 0.00035952799999999785, 0.00035809700000000166, 0.0003600830000000041]</msg>
<status status="PASS" starttime="20201029 18:19:21.505" endtime="20201029 18:19:21.507"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.500" endtime="20201029 18:19:21.508"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:21.511" endtime="20201029 18:19:21.531"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.510" endtime="20201029 18:19:21.532"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.509" endtime="20201029 18:19:21.532"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.131" endtime="20201029 18:19:21.532"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.131" endtime="20201029 18:19:21.532"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:21.541" endtime="20201029 18:19:21.575"></status>
</kw>
<msg timestamp="20201029 18:19:21.576" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:21.540" endtime="20201029 18:19:21.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:21.579" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:21.577" endtime="20201029 18:19:21.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:21.580" endtime="20201029 18:19:21.581"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.537" endtime="20201029 18:19:21.582"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.535" endtime="20201029 18:19:21.582"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:21.589" endtime="20201029 18:19:21.875"></status>
</kw>
<msg timestamp="20201029 18:19:21.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020895986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021265486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:21.587" endtime="20201029 18:19:21.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:21.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020895986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021265486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:21.880" endtime="20201029 18:19:21.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:21.888" endtime="20201029 18:19:21.890"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.585" endtime="20201029 18:19:21.891"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.583" endtime="20201029 18:19:21.891"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:21.895" level="INFO">${RESULT} = [{'diff': 0.00036950000000000177}, {'diff': 0.0003591390000000014}, {'diff': 0.0003857360000000011}, {'diff': 0.00035761099999999726}, {'diff': 0.0003609169999999988}, {'diff': 0.00035916600000000104}...</msg>
<status status="PASS" starttime="20201029 18:19:21.892" endtime="20201029 18:19:21.895"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:21.899" level="INFO">${ACCURACY} = {'diff': [0.00036950000000000177, 0.0003591390000000014, 0.0003857360000000011, 0.00035761099999999726, 0.0003609169999999988, 0.00035916600000000104, 0.0003575000000000002, 0.00035870799999999925, 0....</msg>
<status status="PASS" starttime="20201029 18:19:21.896" endtime="20201029 18:19:21.899"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:21.904" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201029 18:19:21.903" endtime="20201029 18:19:21.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:21.906" level="INFO">VALUE: [0.00036950000000000177, 0.0003591390000000014, 0.0003857360000000011, 0.00035761099999999726, 0.0003609169999999988, 0.00035916600000000104, 0.0003575000000000002, 0.00035870799999999925, 0.00035956900000000055, 0.0003603200000000008, 0.0003584020000000007, 0.0003593619999999985, 0.0003595830000000001, 0.0003567080000000007, 0.00035726400000000297, 0.00035929200000000064, 0.00038572200000000154, 0.000356861, 0.00035704200000000186, 0.00035938899999999815, 0.00035661099999999973, 0.0003605840000000006, 0.0003859309999999991, 0.0003592359999999989, 0.0003855970000000014, 0.00035623599999999936, 0.0003859590000000017, 0.0003855840000000013, 0.00035681899999999434, 0.00035847199999999857, 0.00035704099999999545, 0.0003586809999999996, 0.0003608749999999966, 0.0003591390000000014, 0.00035809800000000114, 0.00038586100000000123, 0.0003610419999999989, 0.0003563050000000012, 0.0003574860000000041, 0.00035881899999999634, 0.00035708400000000057, 0.00035902799999999735, 0.0003580969999999947, 0.0003586390000000009, 0.0003854439999999987, 0.00035733300000000134, 0.00035648599999999614, 0.00035737500000000005, 0.00035644399999999743, 0.0003857910000000034]</msg>
<status status="PASS" starttime="20201029 18:19:21.905" endtime="20201029 18:19:21.907"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.900" endtime="20201029 18:19:21.908"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:21.911" endtime="20201029 18:19:21.931"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.910" endtime="20201029 18:19:21.932"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.909" endtime="20201029 18:19:21.932"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.533" endtime="20201029 18:19:21.932"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.533" endtime="20201029 18:19:21.932"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:21.941" endtime="20201029 18:19:21.977"></status>
</kw>
<msg timestamp="20201029 18:19:21.978" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:21.940" endtime="20201029 18:19:21.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:21.980" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:21.979" endtime="20201029 18:19:21.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:21.981" endtime="20201029 18:19:21.983"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.937" endtime="20201029 18:19:21.984"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.935" endtime="20201029 18:19:21.984"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:21.991" endtime="20201029 18:19:22.277"></status>
</kw>
<msg timestamp="20201029 18:19:22.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022815458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023174028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:21.989" endtime="20201029 18:19:22.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:22.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022815458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023174028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:22.281" endtime="20201029 18:19:22.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:22.290" endtime="20201029 18:19:22.291"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.986" endtime="20201029 18:19:22.292"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.985" endtime="20201029 18:19:22.292"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:22.296" level="INFO">${RESULT} = [{'diff': 0.00035856999999999903}, {'diff': 0.0003568050000000017}, {'diff': 0.0003602359999999999}, {'diff': 0.00035622299999999926}, {'diff': 0.00036094499999999793}, {'diff': 0.00035905599999999996...</msg>
<status status="PASS" starttime="20201029 18:19:22.293" endtime="20201029 18:19:22.297"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:22.301" level="INFO">${ACCURACY} = {'diff': [0.00035856999999999903, 0.0003568050000000017, 0.0003602359999999999, 0.00035622299999999926, 0.00036094499999999793, 0.00035905599999999996, 0.0003849589999999972, 0.0003575419999999989, 0....</msg>
<status status="PASS" starttime="20201029 18:19:22.297" endtime="20201029 18:19:22.301"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:22.305" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201029 18:19:22.304" endtime="20201029 18:19:22.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:22.308" level="INFO">VALUE: [0.00035856999999999903, 0.0003568050000000017, 0.0003602359999999999, 0.00035622299999999926, 0.00036094499999999793, 0.00035905599999999996, 0.0003849589999999972, 0.0003575419999999989, 0.000360862, 0.0003861390000000006, 0.0003574029999999992, 0.0003849439999999982, 0.0003856529999999997, 0.00035651399999999875, 0.00035924999999999846, 0.00038570900000000144, 0.0003603890000000026, 0.0003861660000000003, 0.00038548600000000086, 0.0003600830000000006, 0.0003560409999999979, 0.0003565280000000018, 0.00036091599999999585, 0.00038613800000000115, 0.0003850839999999939, 0.00035622200000000326, 0.0003582359999999979, 0.00035820900000000516, 0.0003847780000000023, 0.0003590830000000031, 0.00035919499999999965, 0.00035861100000000173, 0.00035622200000000326, 0.000385013999999996, 0.0003608060000000052, 0.00035607, 0.0003591250000000018, 0.0003579449999999984, 0.0003574029999999992, 0.00038536100000000073, 0.00038513800000000015, 0.00035908299999999616, 0.00035997299999999954, 0.00036074999999999996, 0.0003569999999999962, 0.00035650000000000265, 0.00035927800000000454, 0.00035843099999999933, 0.0003578050000000027, 0.0003596250000000023]</msg>
<status status="PASS" starttime="20201029 18:19:22.306" endtime="20201029 18:19:22.314"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.301" endtime="20201029 18:19:22.314"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:22.319" endtime="20201029 18:19:22.338"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.317" endtime="20201029 18:19:22.339"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.316" endtime="20201029 18:19:22.339"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.933" endtime="20201029 18:19:22.340"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.933" endtime="20201029 18:19:22.340"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:22.349" endtime="20201029 18:19:22.384"></status>
</kw>
<msg timestamp="20201029 18:19:22.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:22.347" endtime="20201029 18:19:22.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:22.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:22.385" endtime="20201029 18:19:22.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:22.388" endtime="20201029 18:19:22.390"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.345" endtime="20201029 18:19:22.390"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.342" endtime="20201029 18:19:22.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:22.397" endtime="20201029 18:19:22.684"></status>
</kw>
<msg timestamp="20201029 18:19:22.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022509861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022890389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:22.396" endtime="20201029 18:19:22.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:22.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022509861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022890389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:22.688" endtime="20201029 18:19:22.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:22.696" endtime="20201029 18:19:22.698"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.393" endtime="20201029 18:19:22.698"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.391" endtime="20201029 18:19:22.699"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:22.703" level="INFO">${RESULT} = [{'diff': 0.0003805280000000015}, {'diff': 0.0003561530000000014}, {'diff': 0.00035659700000000016}, {'diff': 0.00035615299999999794}, {'diff': 0.0003601389999999989}, {'diff': 0.0003581809999999991},...</msg>
<status status="PASS" starttime="20201029 18:19:22.700" endtime="20201029 18:19:22.703"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:22.710" level="INFO">${ACCURACY} = {'diff': [0.0003805280000000015, 0.0003561530000000014, 0.00035659700000000016, 0.00035615299999999794, 0.0003601389999999989, 0.0003581809999999991, 0.0003854170000000025, 0.00035779199999999914, 0.0...</msg>
<status status="PASS" starttime="20201029 18:19:22.704" endtime="20201029 18:19:22.710"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:22.715" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201029 18:19:22.714" endtime="20201029 18:19:22.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:22.717" level="INFO">VALUE: [0.0003805280000000015, 0.0003561530000000014, 0.00035659700000000016, 0.00035615299999999794, 0.0003601389999999989, 0.0003581809999999991, 0.0003854170000000025, 0.00035779199999999914, 0.0003580000000000007, 0.0003595420000000009, 0.0003595139999999983, 0.000359360999999999, 0.0003859169999999995, 0.00038530599999999846, 0.00038486100000000023, 0.00035906900000000005, 0.0003588199999999993, 0.0003849299999999986, 0.0003857919999999994, 0.0003603749999999996, 0.00038640300000000044, 0.00038538899999999987, 0.00035759800000000064, 0.00035925000000000193, 0.0003601940000000012, 0.00035731899999999484, 0.00035970800000000025, 0.00035768000000000605, 0.00038538899999999987, 0.00036030499999999827, 0.0003849440000000051, 0.0003602909999999987, 0.00038604100000000363, 0.0003571809999999981, 0.000358667, 0.00035752799999999585, 0.0003856390000000001, 0.00035863899999999393, 0.00035693099999999783, 0.0003586109999999948, 0.00035677800000000204, 0.0003858880000000009, 0.0003853750000000003, 0.000358070000000002, 0.0003598890000000021, 0.00038590299999999994, 0.0003580129999999973, 0.0003572500000000034, 0.0003594030000000012, 0.00035682000000000075]</msg>
<status status="PASS" starttime="20201029 18:19:22.716" endtime="20201029 18:19:22.718"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.711" endtime="20201029 18:19:22.719"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:22.722" endtime="20201029 18:19:22.742"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.721" endtime="20201029 18:19:22.743"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.720" endtime="20201029 18:19:22.743"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.341" endtime="20201029 18:19:22.743"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.340" endtime="20201029 18:19:22.743"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:22.752" endtime="20201029 18:19:22.787"></status>
</kw>
<msg timestamp="20201029 18:19:22.787" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:22.751" endtime="20201029 18:19:22.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:22.790" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:22.788" endtime="20201029 18:19:22.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:22.791" endtime="20201029 18:19:22.792"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.748" endtime="20201029 18:19:22.793"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.746" endtime="20201029 18:19:22.794"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:22.800" endtime="20201029 18:19:23.087"></status>
</kw>
<msg timestamp="20201029 18:19:23.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02078075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021139597, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:19:22.799" endtime="20201029 18:19:23.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:23.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02078075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021139597, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:19:23.091" endtime="20201029 18:19:23.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:23.100" endtime="20201029 18:19:23.101"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.796" endtime="20201029 18:19:23.102"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.794" endtime="20201029 18:19:23.102"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:23.106" level="INFO">${RESULT} = [{'diff': 0.00035884699999999894}, {'diff': 0.00036044400000000143}, {'diff': 0.00035706999999999753}, {'diff': 0.00035837500000000105}, {'diff': 0.0003589860000000021}, {'diff': 0.0003864019999999975...</msg>
<status status="PASS" starttime="20201029 18:19:23.103" endtime="20201029 18:19:23.106"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:23.110" level="INFO">${ACCURACY} = {'diff': [0.00035884699999999894, 0.00036044400000000143, 0.00035706999999999753, 0.00035837500000000105, 0.0003589860000000021, 0.0003864019999999975, 0.0003576670000000025, 0.0003566249999999993, 0....</msg>
<status status="PASS" starttime="20201029 18:19:23.107" endtime="20201029 18:19:23.111"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:23.115" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201029 18:19:23.114" endtime="20201029 18:19:23.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:23.118" level="INFO">VALUE: [0.00035884699999999894, 0.00036044400000000143, 0.00035706999999999753, 0.00035837500000000105, 0.0003589860000000021, 0.0003864019999999975, 0.0003576670000000025, 0.0003566249999999993, 0.00035673599999999986, 0.0003593479999999989, 0.00036037500000000305, 0.00035682000000000075, 0.0003594030000000012, 0.0003585700000000025, 0.0003851389999999996, 0.0003607360000000004, 0.0003602220000000003, 0.00035876399999999753, 0.00035759700000000116, 0.00038520900000000094, 0.0003597359999999994, 0.00035679099999999866, 0.0003851389999999996, 0.00035632000000000025, 0.00035908400000000257, 0.00036026299999999956, 0.0003606940000000017, 0.0003593479999999989, 0.00035925000000000193, 0.00035820799999999875, 0.0003860279999999966, 0.0003567920000000016, 0.0003595270000000053, 0.0003846670000000052, 0.00036024999999999946, 0.00035697199999999707, 0.00038495799999999775, 0.0003592769999999981, 0.00035887500000000155, 0.0003571799999999986, 0.0003847079999999975, 0.0003599999999999992, 0.0003574159999999993, 0.00035920799999999975, 0.00036069500000000115, 0.00036073699999999986, 0.0003586939999999997, 0.00036086099999999705, 0.00035759700000000116, 0.0003604999999999997]</msg>
<status status="PASS" starttime="20201029 18:19:23.116" endtime="20201029 18:19:23.118"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.111" endtime="20201029 18:19:23.119"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:23.123" endtime="20201029 18:19:23.142"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.121" endtime="20201029 18:19:23.143"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.120" endtime="20201029 18:19:23.143"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.744" endtime="20201029 18:19:23.143"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.744" endtime="20201029 18:19:23.144"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:23.153" endtime="20201029 18:19:23.193"></status>
</kw>
<msg timestamp="20201029 18:19:23.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:23.151" endtime="20201029 18:19:23.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:23.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:23.195" endtime="20201029 18:19:23.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:23.197" endtime="20201029 18:19:23.199"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.148" endtime="20201029 18:19:23.200"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.146" endtime="20201029 18:19:23.200"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:23.207" endtime="20201029 18:19:23.493"></status>
</kw>
<msg timestamp="20201029 18:19:23.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022501083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022875625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:23.205" endtime="20201029 18:19:23.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:23.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022501083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022875625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:23.497" endtime="20201029 18:19:23.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:23.506" endtime="20201029 18:19:23.507"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.202" endtime="20201029 18:19:23.508"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.201" endtime="20201029 18:19:23.508"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:23.512" level="INFO">${RESULT} = [{'diff': 0.00037454199999999854}, {'diff': 0.00035741700000000223}, {'diff': 0.0003860559999999992}, {'diff': 0.00035961099999999926}, {'diff': 0.00035708400000000057}, {'diff': 0.0003865130000000015...</msg>
<status status="PASS" starttime="20201029 18:19:23.509" endtime="20201029 18:19:23.513"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:23.517" level="INFO">${ACCURACY} = {'diff': [0.00037454199999999854, 0.00035741700000000223, 0.0003860559999999992, 0.00035961099999999926, 0.00035708400000000057, 0.0003865130000000015, 0.0003857500000000007, 0.00036067999999999864, 0...</msg>
<status status="PASS" starttime="20201029 18:19:23.514" endtime="20201029 18:19:23.517"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:23.521" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201029 18:19:23.520" endtime="20201029 18:19:23.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:23.524" level="INFO">VALUE: [0.00037454199999999854, 0.00035741700000000223, 0.0003860559999999992, 0.00035961099999999926, 0.00035708400000000057, 0.0003865130000000015, 0.0003857500000000007, 0.00036067999999999864, 0.0003605969999999972, 0.0003585969999999987, 0.0003856939999999989, 0.0003860000000000009, 0.0003593610000000025, 0.00035911099999999876, 0.0003595420000000009, 0.00036111200000000024, 0.0003857079999999985, 0.00035659799999999964, 0.0003859169999999995, 0.00036007000000000053, 0.00035906999999999953, 0.00038659699999999894, 0.00036031899999999784, 0.0003860279999999966, 0.00035854099999999695, 0.00035755500000000245, 0.0003581380000000009, 0.00035659799999999964, 0.0003591670000000005, 0.0003566940000000046, 0.0003611940000000022, 0.0003573470000000009, 0.0003607360000000004, 0.0003855420000000026, 0.0003859169999999995, 0.00035676399999999553, 0.00036079199999999867, 0.00035966600000000154, 0.0003589579999999995, 0.00035798599999999764, 0.0003572219999999973, 0.0003855139999999965, 0.0003578890000000001, 0.0003577920000000026, 0.00035873600000000533, 0.00038662500000000155, 0.00035997200000000007, 0.0003611390000000034, 0.0003858189999999956, 0.0003596810000000006]</msg>
<status status="PASS" starttime="20201029 18:19:23.522" endtime="20201029 18:19:23.525"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.517" endtime="20201029 18:19:23.526"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:23.530" endtime="20201029 18:19:23.549"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.528" endtime="20201029 18:19:23.550"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.527" endtime="20201029 18:19:23.550"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.145" endtime="20201029 18:19:23.551"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.144" endtime="20201029 18:19:23.551"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:23.560" endtime="20201029 18:19:23.595"></status>
</kw>
<msg timestamp="20201029 18:19:23.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:23.558" endtime="20201029 18:19:23.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:23.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:23.597" endtime="20201029 18:19:23.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:23.599" endtime="20201029 18:19:23.601"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.556" endtime="20201029 18:19:23.602"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.553" endtime="20201029 18:19:23.602"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:23.609" endtime="20201029 18:19:23.895"></status>
</kw>
<msg timestamp="20201029 18:19:23.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022280556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022653639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:23.607" endtime="20201029 18:19:23.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:23.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022280556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022653639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:23.899" endtime="20201029 18:19:23.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:23.908" endtime="20201029 18:19:23.910"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.605" endtime="20201029 18:19:23.910"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.603" endtime="20201029 18:19:23.911"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:23.915" level="INFO">${RESULT} = [{'diff': 0.00037308299999999975}, {'diff': 0.00036026399999999903}, {'diff': 0.00035808400000000157}, {'diff': 0.00038620900000000194}, {'diff': 0.00036043099999999786}, {'diff': 0.000358722999999998...</msg>
<status status="PASS" starttime="20201029 18:19:23.911" endtime="20201029 18:19:23.915"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:23.920" level="INFO">${ACCURACY} = {'diff': [0.00037308299999999975, 0.00036026399999999903, 0.00035808400000000157, 0.00038620900000000194, 0.00036043099999999786, 0.0003587229999999983, 0.0003597909999999982, 0.0003859169999999995, 0...</msg>
<status status="PASS" starttime="20201029 18:19:23.916" endtime="20201029 18:19:23.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:23.924" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201029 18:19:23.923" endtime="20201029 18:19:23.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:23.927" level="INFO">VALUE: [0.00037308299999999975, 0.00036026399999999903, 0.00035808400000000157, 0.00038620900000000194, 0.00036043099999999786, 0.0003587229999999983, 0.0003597909999999982, 0.0003859169999999995, 0.0003598479999999994, 0.00035929200000000064, 0.0003855000000000004, 0.00036040199999999925, 0.0003590280000000008, 0.0003582080000000022, 0.0003592219999999993, 0.00036076399999999953, 0.00035674999999999943, 0.00036074999999999996, 0.00035920799999999975, 0.00036056900000000155, 0.000357861000000001, 0.0003570969999999972, 0.00038590200000000047, 0.0003565280000000018, 0.00035887500000000155, 0.0003588480000000019, 0.000361054999999999, 0.0003571799999999986, 0.00038516699999999876, 0.0003865970000000024, 0.00038516699999999876, 0.0003570269999999959, 0.00038623599999999814, 0.0003599999999999992, 0.00038649999999999796, 0.00035826400000000397, 0.0003866530000000007, 0.00038659699999999547, 0.00035629100000000163, 0.00038605599999999574, 0.00035637499999999905, 0.00036108400000000457, 0.0003568889999999991, 0.00035759700000000116, 0.000357666999999999, 0.0003608329999999979, 0.00036076400000000647, 0.0003855550000000027, 0.00035670900000000366, 0.0003603610000000035]</msg>
<status status="PASS" starttime="20201029 18:19:23.926" endtime="20201029 18:19:23.928"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.921" endtime="20201029 18:19:23.928"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:23.932" endtime="20201029 18:19:23.952"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.931" endtime="20201029 18:19:23.952"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.929" endtime="20201029 18:19:23.953"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.552" endtime="20201029 18:19:23.953"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.551" endtime="20201029 18:19:23.953"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:23.962" endtime="20201029 18:19:23.997"></status>
</kw>
<msg timestamp="20201029 18:19:23.997" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:23.960" endtime="20201029 18:19:23.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:24.000" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:23.998" endtime="20201029 18:19:24.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:24.001" endtime="20201029 18:19:24.003"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.958" endtime="20201029 18:19:24.003"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.956" endtime="20201029 18:19:24.004"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:24.010" endtime="20201029 18:19:24.298"></status>
</kw>
<msg timestamp="20201029 18:19:24.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021728264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022112778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:24.009" endtime="20201029 18:19:24.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:24.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021728264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022112778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:24.302" endtime="20201029 18:19:24.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:24.311" endtime="20201029 18:19:24.312"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.006" endtime="20201029 18:19:24.313"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.004" endtime="20201029 18:19:24.313"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:24.317" level="INFO">${RESULT} = [{'diff': 0.000384513999999999}, {'diff': 0.00035720799999999775}, {'diff': 0.0003858339999999981}, {'diff': 0.0003602220000000003}, {'diff': 0.0003578189999999988}, {'diff': 0.0003572220000000008}, {...</msg>
<status status="PASS" starttime="20201029 18:19:24.314" endtime="20201029 18:19:24.318"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:24.321" level="INFO">${ACCURACY} = {'diff': [0.000384513999999999, 0.00035720799999999775, 0.0003858339999999981, 0.0003602220000000003, 0.0003578189999999988, 0.0003572220000000008, 0.00036020800000000075, 0.0003587769999999976, 0.000...</msg>
<status status="PASS" starttime="20201029 18:19:24.318" endtime="20201029 18:19:24.322"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:24.326" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201029 18:19:24.325" endtime="20201029 18:19:24.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:24.329" level="INFO">VALUE: [0.000384513999999999, 0.00035720799999999775, 0.0003858339999999981, 0.0003602220000000003, 0.0003578189999999988, 0.0003572220000000008, 0.00036020800000000075, 0.0003587769999999976, 0.0003609029999999992, 0.00035906999999999953, 0.0003571809999999981, 0.0003604169999999983, 0.00035691700000000173, 0.00035805600000000243, 0.0003578059999999987, 0.0003583470000000019, 0.0003848749999999998, 0.00038522199999999757, 0.00038602800000000007, 0.00036036200000000296, 0.0003580419999999994, 0.00035888899999999765, 0.0003573059999999982, 0.0003567080000000007, 0.0003849999999999999, 0.00035750000000000365, 0.0003579159999999998, 0.0003581939999999992, 0.0003608469999999975, 0.00038558300000000184, 0.0003602090000000002, 0.0003595830000000036, 0.00035955500000000445, 0.00035841699999999976, 0.0003585410000000039, 0.00036058299999999766, 0.00035883300000000284, 0.00038541700000000595, 0.0003602779999999986, 0.00035830499999999627, 0.00038579200000000285, 0.0003590140000000047, 0.0003577359999999974, 0.00038516699999999876, 0.00035798599999999764, 0.00038586100000000123, 0.00038640300000000044, 0.0003561249999999988, 0.000385611000000001, 0.0003598749999999956]</msg>
<status status="PASS" starttime="20201029 18:19:24.327" endtime="20201029 18:19:24.330"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.322" endtime="20201029 18:19:24.330"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:24.334" endtime="20201029 18:19:24.354"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.332" endtime="20201029 18:19:24.354"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.331" endtime="20201029 18:19:24.355"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.954" endtime="20201029 18:19:24.355"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.954" endtime="20201029 18:19:24.355"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:24.365" endtime="20201029 18:19:24.405"></status>
</kw>
<msg timestamp="20201029 18:19:24.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:24.363" endtime="20201029 18:19:24.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:24.408" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:24.407" endtime="20201029 18:19:24.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:24.410" endtime="20201029 18:19:24.411"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.360" endtime="20201029 18:19:24.412"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.358" endtime="20201029 18:19:24.412"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:24.419" endtime="20201029 18:19:24.705"></status>
</kw>
<msg timestamp="20201029 18:19:24.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026955403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027323694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:24.417" endtime="20201029 18:19:24.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:24.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026955403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027323694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:24.709" endtime="20201029 18:19:24.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:24.718" endtime="20201029 18:19:24.719"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.415" endtime="20201029 18:19:24.720"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.413" endtime="20201029 18:19:24.720"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:24.724" level="INFO">${RESULT} = [{'diff': 0.00036829099999999976}, {'diff': 0.0003851110000000005}, {'diff': 0.00038502799999999907}, {'diff': 0.0003850970000000009}, {'diff': 0.00035997299999999954}, {'diff': 0.0003594160000000013}...</msg>
<status status="PASS" starttime="20201029 18:19:24.721" endtime="20201029 18:19:24.725"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:24.729" level="INFO">${ACCURACY} = {'diff': [0.00036829099999999976, 0.0003851110000000005, 0.00038502799999999907, 0.0003850970000000009, 0.00035997299999999954, 0.0003594160000000013, 0.0003575000000000002, 0.0003857500000000007, 0.0...</msg>
<status status="PASS" starttime="20201029 18:19:24.725" endtime="20201029 18:19:24.729"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:24.733" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201029 18:19:24.732" endtime="20201029 18:19:24.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:24.736" level="INFO">VALUE: [0.00036829099999999976, 0.0003851110000000005, 0.00038502799999999907, 0.0003850970000000009, 0.00035997299999999954, 0.0003594160000000013, 0.0003575000000000002, 0.0003857500000000007, 0.0003569860000000001, 0.0003860000000000009, 0.0003597219999999998, 0.00035919400000000365, 0.00038561099999999404, 0.00035774999999999696, 0.000359861000000003, 0.0003567080000000042, 0.00038620899999999847, 0.00038488899999999937, 0.00035861100000000173, 0.0003563469999999999, 0.00035820799999999875, 0.00038572299999999754, 0.0003606390000000029, 0.00035627800000000154, 0.00038613800000000115, 0.0003594999999999987, 0.0003589449999999994, 0.0003575969999999942, 0.00036076399999999953, 0.00038568100000000577, 0.0003594999999999987, 0.00035848599999999814, 0.0003851659999999993, 0.00038565300000000663, 0.00035655600000000093, 0.000359959, 0.000385611000000001, 0.00036081899999999834, 0.00035783300000000184, 0.0003587080000000062, 0.00035754200000000236, 0.0003850000000000034, 0.00035687499999999955, 0.0003565139999999953, 0.00035709700000000066, 0.00035824999999999746, 0.0003595419999999974, 0.0003586250000000013, 0.0003591670000000005, 0.0003862499999999977]</msg>
<status status="PASS" starttime="20201029 18:19:24.735" endtime="20201029 18:19:24.738"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.730" endtime="20201029 18:19:24.738"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:24.742" endtime="20201029 18:19:24.761"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.740" endtime="20201029 18:19:24.762"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.739" endtime="20201029 18:19:24.762"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.356" endtime="20201029 18:19:24.763"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.356" endtime="20201029 18:19:24.763"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:24.772" endtime="20201029 18:19:24.806"></status>
</kw>
<msg timestamp="20201029 18:19:24.807" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:24.770" endtime="20201029 18:19:24.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:24.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:24.808" endtime="20201029 18:19:24.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:24.810" endtime="20201029 18:19:24.812"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.767" endtime="20201029 18:19:24.813"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.765" endtime="20201029 18:19:24.813"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:24.820" endtime="20201029 18:19:25.107"></status>
</kw>
<msg timestamp="20201029 18:19:25.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021006347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021389, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:19:24.818" endtime="20201029 18:19:25.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:25.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021006347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021389, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:19:25.111" endtime="20201029 18:19:25.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:25.119" endtime="20201029 18:19:25.121"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.816" endtime="20201029 18:19:25.122"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.814" endtime="20201029 18:19:25.122"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:25.126" level="INFO">${RESULT} = [{'diff': 0.0003826529999999967}, {'diff': 0.00035747200000000104}, {'diff': 0.0003584020000000007}, {'diff': 0.00035669499999999715}, {'diff': 0.00035656899999999755}, {'diff': 0.0003600970000000002}...</msg>
<status status="PASS" starttime="20201029 18:19:25.123" endtime="20201029 18:19:25.126"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:25.131" level="INFO">${ACCURACY} = {'diff': [0.0003826529999999967, 0.00035747200000000104, 0.0003584020000000007, 0.00035669499999999715, 0.00035656899999999755, 0.0003600970000000002, 0.00038602800000000007, 0.0003591390000000014, 0....</msg>
<status status="PASS" starttime="20201029 18:19:25.127" endtime="20201029 18:19:25.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:25.136" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201029 18:19:25.135" endtime="20201029 18:19:25.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:25.138" level="INFO">VALUE: [0.0003826529999999967, 0.00035747200000000104, 0.0003584020000000007, 0.00035669499999999715, 0.00035656899999999755, 0.0003600970000000002, 0.00038602800000000007, 0.0003591390000000014, 0.0003563339999999998, 0.00035765199999999997, 0.00038588900000000037, 0.00035693000000000183, 0.0003610269999999999, 0.0003595689999999971, 0.00035692999999999836, 0.00035705599999999796, 0.0003602770000000026, 0.0003858330000000021, 0.00035988899999999865, 0.00035729199999999864, 0.0003585969999999987, 0.00036026399999999903, 0.00035661099999999973, 0.00036011099999999976, 0.00038530500000000245, 0.0003585419999999999, 0.00038552800000000303, 0.0003576120000000002, 0.0003862499999999977, 0.00038527699999999637, 0.00038636100000000173, 0.0003568060000000012, 0.0003606250000000033, 0.000356958999999997, 0.00035594500000000334, 0.0003593610000000025, 0.0003849439999999982, 0.00036030499999999827, 0.0003576809999999986, 0.000386417, 0.0003601250000000028, 0.00038516699999999876, 0.0003585419999999964, 0.00036083300000000484, 0.0003577089999999977, 0.0003604999999999997, 0.0003856390000000001, 0.0003585549999999965, 0.00035630599999999374, 0.000358555999999996]</msg>
<status status="PASS" starttime="20201029 18:19:25.137" endtime="20201029 18:19:25.139"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.132" endtime="20201029 18:19:25.140"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:25.144" endtime="20201029 18:19:25.163"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.142" endtime="20201029 18:19:25.164"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.141" endtime="20201029 18:19:25.164"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.764" endtime="20201029 18:19:25.164"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.763" endtime="20201029 18:19:25.164"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:25.173" endtime="20201029 18:19:25.208"></status>
</kw>
<msg timestamp="20201029 18:19:25.208" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:25.172" endtime="20201029 18:19:25.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:25.211" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:25.209" endtime="20201029 18:19:25.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:25.212" endtime="20201029 18:19:25.214"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.169" endtime="20201029 18:19:25.214"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.167" endtime="20201029 18:19:25.215"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:25.221" endtime="20201029 18:19:25.509"></status>
</kw>
<msg timestamp="20201029 18:19:25.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021298347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021683819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:25.220" endtime="20201029 18:19:25.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:25.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021298347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021683819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:25.513" endtime="20201029 18:19:25.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:25.521" endtime="20201029 18:19:25.523"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.217" endtime="20201029 18:19:25.524"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.215" endtime="20201029 18:19:25.524"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:25.528" level="INFO">${RESULT} = [{'diff': 0.0003854720000000013}, {'diff': 0.00036056999999999756}, {'diff': 0.00035741699999999876}, {'diff': 0.00036020800000000075}, {'diff': 0.00035683300000000084}, {'diff': 0.0003593749999999986...</msg>
<status status="PASS" starttime="20201029 18:19:25.525" endtime="20201029 18:19:25.528"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:25.533" level="INFO">${ACCURACY} = {'diff': [0.0003854720000000013, 0.00036056999999999756, 0.00035741699999999876, 0.00036020800000000075, 0.00035683300000000084, 0.0003593749999999986, 0.00035905599999999996, 0.00036120899999999775, ...</msg>
<status status="PASS" starttime="20201029 18:19:25.529" endtime="20201029 18:19:25.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:25.537" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201029 18:19:25.536" endtime="20201029 18:19:25.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:25.540" level="INFO">VALUE: [0.0003854720000000013, 0.00036056999999999756, 0.00035741699999999876, 0.00036020800000000075, 0.00035683300000000084, 0.0003593749999999986, 0.00035905599999999996, 0.00036120899999999775, 0.0003566799999999981, 0.00038543100000000205, 0.0003568889999999991, 0.0003576800000000026, 0.0003852779999999993, 0.0003592219999999993, 0.00035783300000000184, 0.00035818100000000255, 0.00035948599999999914, 0.00035909700000000266, 0.00035629099999999816, 0.00035626400000000197, 0.0003563469999999999, 0.000385207999999998, 0.000357070000000001, 0.0003575700000000015, 0.0003607360000000004, 0.00035694399999999793, 0.00035944400000000043, 0.0003859439999999992, 0.00035893100000000677, 0.00035700000000000315, 0.00035682000000000075, 0.0003578890000000001, 0.00035824999999999746, 0.00035797199999999807, 0.0003574860000000041, 0.0003608469999999975, 0.00035704200000000186, 0.00035687499999999955, 0.0003574860000000041, 0.0003568470000000004, 0.0003852499999999967, 0.0003565700000000005, 0.00035638900000000556, 0.00035724999999999646, 0.00036091700000000226, 0.00035991700000000126, 0.00035661099999999973, 0.0003584999999999977, 0.00035797299999999754, 0.00038616699999999976]</msg>
<status status="PASS" starttime="20201029 18:19:25.538" endtime="20201029 18:19:25.540"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.533" endtime="20201029 18:19:25.541"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:25.545" endtime="20201029 18:19:25.564"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.543" endtime="20201029 18:19:25.565"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.542" endtime="20201029 18:19:25.565"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.165" endtime="20201029 18:19:25.565"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.165" endtime="20201029 18:19:25.566"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:25.575" endtime="20201029 18:19:25.610"></status>
</kw>
<msg timestamp="20201029 18:19:25.610" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:25.573" endtime="20201029 18:19:25.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:25.613" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:25.611" endtime="20201029 18:19:25.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:25.614" endtime="20201029 18:19:25.616"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.570" endtime="20201029 18:19:25.616"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.568" endtime="20201029 18:19:25.617"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:25.623" endtime="20201029 18:19:25.909"></status>
</kw>
<msg timestamp="20201029 18:19:25.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021999125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022375931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:25.622" endtime="20201029 18:19:25.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:25.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021999125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022375931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:25.913" endtime="20201029 18:19:25.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:25.922" endtime="20201029 18:19:25.923"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.619" endtime="20201029 18:19:25.924"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.617" endtime="20201029 18:19:25.924"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:25.928" level="INFO">${RESULT} = [{'diff': 0.00037680600000000036}, {'diff': 0.000386110999999998}, {'diff': 0.00035920799999999975}, {'diff': 0.00035952799999999785}, {'diff': 0.0003609159999999993}, {'diff': 0.00035997200000000007}...</msg>
<status status="PASS" starttime="20201029 18:19:25.925" endtime="20201029 18:19:25.928"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:25.933" level="INFO">${ACCURACY} = {'diff': [0.00037680600000000036, 0.000386110999999998, 0.00035920799999999975, 0.00035952799999999785, 0.0003609159999999993, 0.00035997200000000007, 0.000358764000000001, 0.0003583199999999988, 0.00...</msg>
<status status="PASS" starttime="20201029 18:19:25.929" endtime="20201029 18:19:25.933"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:25.937" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201029 18:19:25.936" endtime="20201029 18:19:25.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:25.940" level="INFO">VALUE: [0.00037680600000000036, 0.000386110999999998, 0.00035920799999999975, 0.00035952799999999785, 0.0003609159999999993, 0.00035997200000000007, 0.000358764000000001, 0.0003583199999999988, 0.0003854720000000013, 0.0003579159999999998, 0.00035705600000000143, 0.00035933399999999935, 0.00035877800000000057, 0.0003583470000000019, 0.00038620900000000194, 0.0003605970000000007, 0.00038541599999999954, 0.00035775000000000043, 0.0003561950000000001, 0.0003588890000000011, 0.00038561200000000045, 0.00036024999999999946, 0.00035780499999999923, 0.00035920799999999975, 0.00038520899999999747, 0.0003859859999999979, 0.00036023699999999936, 0.00038588900000000037, 0.0003855970000000014, 0.00035709800000000014, 0.0003602220000000003, 0.0003566249999999993, 0.00036036099999999655, 0.00035683300000000084, 0.00035824999999999746, 0.0003581950000000056, 0.00035987500000000255, 0.0003580690000000025, 0.0003850839999999939, 0.0003565139999999953, 0.0003576940000000056, 0.0003566799999999981, 0.0003598469999999965, 0.0003601109999999963, 0.00035637499999999905, 0.00036058299999999766, 0.00035693100000000477, 0.0003571669999999985, 0.0003567359999999964, 0.0003848190000000015]</msg>
<status status="PASS" starttime="20201029 18:19:25.938" endtime="20201029 18:19:25.941"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.933" endtime="20201029 18:19:25.942"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:25.946" endtime="20201029 18:19:25.965"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.944" endtime="20201029 18:19:25.966"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.943" endtime="20201029 18:19:25.966"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.567" endtime="20201029 18:19:25.966"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.566" endtime="20201029 18:19:25.966"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:25.975" endtime="20201029 18:19:26.011"></status>
</kw>
<msg timestamp="20201029 18:19:26.012" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:25.974" endtime="20201029 18:19:26.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:26.014" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:26.013" endtime="20201029 18:19:26.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:26.015" endtime="20201029 18:19:26.017"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.971" endtime="20201029 18:19:26.018"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.969" endtime="20201029 18:19:26.018"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:26.025" endtime="20201029 18:19:26.310"></status>
</kw>
<msg timestamp="20201029 18:19:26.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023114403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023479472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:26.023" endtime="20201029 18:19:26.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:26.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023114403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023479472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:26.315" endtime="20201029 18:19:26.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:26.323" endtime="20201029 18:19:26.325"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.020" endtime="20201029 18:19:26.325"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.019" endtime="20201029 18:19:26.326"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:26.330" level="INFO">${RESULT} = [{'diff': 0.0003650690000000026}, {'diff': 0.00035816600000000004}, {'diff': 0.00035815299999999994}, {'diff': 0.00036084700000000094}, {'diff': 0.0003860689999999993}, {'diff': 0.0003592089999999992}...</msg>
<status status="PASS" starttime="20201029 18:19:26.326" endtime="20201029 18:19:26.330"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:26.337" level="INFO">${ACCURACY} = {'diff': [0.0003650690000000026, 0.00035816600000000004, 0.00035815299999999994, 0.00036084700000000094, 0.0003860689999999993, 0.0003592089999999992, 0.0003568470000000004, 0.00035832000000000225, 0....</msg>
<status status="PASS" starttime="20201029 18:19:26.331" endtime="20201029 18:19:26.338"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:26.342" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201029 18:19:26.341" endtime="20201029 18:19:26.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:26.345" level="INFO">VALUE: [0.0003650690000000026, 0.00035816600000000004, 0.00035815299999999994, 0.00036084700000000094, 0.0003860689999999993, 0.0003592089999999992, 0.0003568470000000004, 0.00035832000000000225, 0.00035941700000000076, 0.00035795800000000197, 0.0003582770000000006, 0.0003608610000000005, 0.00038590299999999994, 0.0003588890000000011, 0.0003575000000000002, 0.00036041700000000176, 0.0003585130000000013, 0.0003570280000000023, 0.00035952799999999785, 0.00035933399999999935, 0.00038593100000000255, 0.00038627799999999685, 0.0003600690000000045, 0.0003573329999999944, 0.00036061199999999627, 0.000360943999999995, 0.0003577779999999961, 0.00035970800000000025, 0.0003598329999999969, 0.00036097200000000107, 0.0003595280000000048, 0.000359070000000003, 0.00035759700000000116, 0.00035624999999999546, 0.0003582779999999966, 0.00035994400000000093, 0.00035855600000000293, 0.0003570410000000024, 0.00035809700000000166, 0.00038523599999999714, 0.0003577779999999961, 0.0003857079999999985, 0.00035887500000000155, 0.0003859589999999982, 0.00035718000000000555, 0.0003610000000000002, 0.00035687499999999955, 0.00035679100000000213, 0.0003588890000000011, 0.00035826400000000397]</msg>
<status status="PASS" starttime="20201029 18:19:26.343" endtime="20201029 18:19:26.345"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.338" endtime="20201029 18:19:26.346"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:26.350" endtime="20201029 18:19:26.369"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.348" endtime="20201029 18:19:26.370"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.347" endtime="20201029 18:19:26.370"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.967" endtime="20201029 18:19:26.370"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.967" endtime="20201029 18:19:26.370"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:26.380" endtime="20201029 18:19:26.419"></status>
</kw>
<msg timestamp="20201029 18:19:26.420" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:26.378" endtime="20201029 18:19:26.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:26.422" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:26.421" endtime="20201029 18:19:26.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:26.423" endtime="20201029 18:19:26.425"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.376" endtime="20201029 18:19:26.426"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.373" endtime="20201029 18:19:26.426"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:26.433" endtime="20201029 18:19:26.720"></status>
</kw>
<msg timestamp="20201029 18:19:26.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026062375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026437361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:26.431" endtime="20201029 18:19:26.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:26.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026062375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026437361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:26.724" endtime="20201029 18:19:26.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:26.733" endtime="20201029 18:19:26.734"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.429" endtime="20201029 18:19:26.735"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.427" endtime="20201029 18:19:26.735"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:26.739" level="INFO">${RESULT} = [{'diff': 0.00037498600000000076}, {'diff': 0.0003582229999999978}, {'diff': 0.00038501400000000296}, {'diff': 0.00036029200000000164}, {'diff': 0.0003859309999999991}, {'diff': 0.00035842999999999986...</msg>
<status status="PASS" starttime="20201029 18:19:26.736" endtime="20201029 18:19:26.739"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:26.743" level="INFO">${ACCURACY} = {'diff': [0.00037498600000000076, 0.0003582229999999978, 0.00038501400000000296, 0.00036029200000000164, 0.0003859309999999991, 0.00035842999999999986, 0.000385723000000001, 0.00035777800000000304, 0....</msg>
<status status="PASS" starttime="20201029 18:19:26.740" endtime="20201029 18:19:26.744"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:26.748" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201029 18:19:26.747" endtime="20201029 18:19:26.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:26.750" level="INFO">VALUE: [0.00037498600000000076, 0.0003582229999999978, 0.00038501400000000296, 0.00036029200000000164, 0.0003859309999999991, 0.00035842999999999986, 0.000385723000000001, 0.00035777800000000304, 0.0003848749999999998, 0.0003577359999999974, 0.000385304999999999, 0.0003583749999999976, 0.0003608469999999975, 0.0003601950000000041, 0.0003851519999999997, 0.0003605549999999985, 0.00036065300000000244, 0.0003597219999999998, 0.0003570140000000027, 0.00036076300000000006, 0.00035832000000000225, 0.00036029199999999817, 0.000385013999999996, 0.00038604100000000363, 0.0003848330000000011, 0.0003584999999999977, 0.00035824999999999746, 0.0003594999999999987, 0.0003585689999999961, 0.000359346999999996, 0.0003594999999999987, 0.0003580139999999968, 0.00035806999999999506, 0.000358972000000006, 0.0003601109999999963, 0.0003852499999999967, 0.0003570689999999946, 0.0003861530000000002, 0.0003856939999999989, 0.0003596250000000023, 0.0003565700000000005, 0.0003859169999999995, 0.0003848190000000015, 0.00035826400000000397, 0.00038502700000000306, 0.0003582089999999982, 0.00038512500000000005, 0.00035642999999999786, 0.0003561249999999988, 0.0003571939999999982]</msg>
<status status="PASS" starttime="20201029 18:19:26.749" endtime="20201029 18:19:26.751"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.744" endtime="20201029 18:19:26.752"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:26.756" endtime="20201029 18:19:26.775"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.754" endtime="20201029 18:19:26.776"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.753" endtime="20201029 18:19:26.776"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.371" endtime="20201029 18:19:26.776"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.371" endtime="20201029 18:19:26.776"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:26.786" endtime="20201029 18:19:26.821"></status>
</kw>
<msg timestamp="20201029 18:19:26.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:26.784" endtime="20201029 18:19:26.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:26.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:26.823" endtime="20201029 18:19:26.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:26.825" endtime="20201029 18:19:26.827"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.781" endtime="20201029 18:19:26.827"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.779" endtime="20201029 18:19:26.828"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:26.835" endtime="20201029 18:19:27.125"></status>
</kw>
<msg timestamp="20201029 18:19:27.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021917375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022295653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:26.833" endtime="20201029 18:19:27.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:27.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021917375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022295653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:27.131" endtime="20201029 18:19:27.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:27.140" endtime="20201029 18:19:27.141"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.830" endtime="20201029 18:19:27.142"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.828" endtime="20201029 18:19:27.143"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:27.146" level="INFO">${RESULT} = [{'diff': 0.00037827799999999925}, {'diff': 0.000385416999999999}, {'diff': 0.00036044499999999743}, {'diff': 0.0003584999999999977}, {'diff': 0.00038644499999999915}, {'diff': 0.0003562219999999998},...</msg>
<status status="PASS" starttime="20201029 18:19:27.143" endtime="20201029 18:19:27.147"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:27.151" level="INFO">${ACCURACY} = {'diff': [0.00037827799999999925, 0.000385416999999999, 0.00036044499999999743, 0.0003584999999999977, 0.00038644499999999915, 0.0003562219999999998, 0.00035929100000000116, 0.00038507000000000124, 0....</msg>
<status status="PASS" starttime="20201029 18:19:27.148" endtime="20201029 18:19:27.151"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:27.155" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201029 18:19:27.154" endtime="20201029 18:19:27.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:27.158" level="INFO">VALUE: [0.00037827799999999925, 0.000385416999999999, 0.00036044499999999743, 0.0003584999999999977, 0.00038644499999999915, 0.0003562219999999998, 0.00035929100000000116, 0.00038507000000000124, 0.0003600139999999988, 0.0003857079999999985, 0.0003563469999999999, 0.0003561669999999975, 0.00035727799999999907, 0.00038520899999999747, 0.0003864309999999996, 0.00035682000000000075, 0.00035812499999999733, 0.00038641600000000054, 0.0003861530000000002, 0.0003566250000000028, 0.00038609699999999844, 0.00035957000000000003, 0.0003864309999999996, 0.00035847199999999857, 0.00038565300000000316, 0.0003593889999999947, 0.00035897199999999907, 0.0003858469999999947, 0.0003575139999999963, 0.0003597219999999998, 0.0003861530000000002, 0.0003604999999999997, 0.00035776400000000347, 0.0003592920000000041, 0.0003597779999999981, 0.0003584720000000055, 0.00038566699999999926, 0.00038641600000000054, 0.0003568750000000065, 0.000385319000000002, 0.0003588060000000032, 0.00035716599999999904, 0.00035798700000000405, 0.0003861939999999994, 0.00035697199999999707, 0.0003601669999999946, 0.0003602359999999999, 0.0003848749999999998, 0.00038570899999999797, 0.0003601380000000029]</msg>
<status status="PASS" starttime="20201029 18:19:27.156" endtime="20201029 18:19:27.159"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.151" endtime="20201029 18:19:27.160"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:27.164" endtime="20201029 18:19:27.183"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.162" endtime="20201029 18:19:27.184"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.161" endtime="20201029 18:19:27.184"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.777" endtime="20201029 18:19:27.185"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.777" endtime="20201029 18:19:27.185"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:27.194" endtime="20201029 18:19:27.228"></status>
</kw>
<msg timestamp="20201029 18:19:27.228" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:27.192" endtime="20201029 18:19:27.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:27.231" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:27.229" endtime="20201029 18:19:27.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:27.232" endtime="20201029 18:19:27.233"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.189" endtime="20201029 18:19:27.234"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.187" endtime="20201029 18:19:27.234"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:27.241" endtime="20201029 18:19:27.527"></status>
</kw>
<msg timestamp="20201029 18:19:27.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020639153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021011792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:27.240" endtime="20201029 18:19:27.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:27.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020639153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021011792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:27.531" endtime="20201029 18:19:27.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:27.539" endtime="20201029 18:19:27.541"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.237" endtime="20201029 18:19:27.541"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.235" endtime="20201029 18:19:27.542"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:27.546" level="INFO">${RESULT} = [{'diff': 0.000372639000000001}, {'diff': 0.0003608480000000004}, {'diff': 0.00036020800000000075}, {'diff': 0.0003589020000000012}, {'diff': 0.0003591810000000001}, {'diff': 0.0003576809999999986}, {...</msg>
<status status="PASS" starttime="20201029 18:19:27.543" endtime="20201029 18:19:27.546"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:27.551" level="INFO">${ACCURACY} = {'diff': [0.000372639000000001, 0.0003608480000000004, 0.00036020800000000075, 0.0003589020000000012, 0.0003591810000000001, 0.0003576809999999986, 0.0003861110000000015, 0.0003610139999999998, 0.0003...</msg>
<status status="PASS" starttime="20201029 18:19:27.547" endtime="20201029 18:19:27.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:27.555" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201029 18:19:27.554" endtime="20201029 18:19:27.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:27.558" level="INFO">VALUE: [0.000372639000000001, 0.0003608480000000004, 0.00036020800000000075, 0.0003589020000000012, 0.0003591810000000001, 0.0003576809999999986, 0.0003861110000000015, 0.0003610139999999998, 0.000358070000000002, 0.0003565969999999967, 0.00035666599999999854, 0.0003583329999999989, 0.00035925000000000193, 0.0003566249999999993, 0.0003583879999999977, 0.000359360999999999, 0.0003566119999999992, 0.0003591670000000005, 0.0003574860000000006, 0.00035680499999999823, 0.00036013799999999943, 0.0003566950000000006, 0.0003862910000000004, 0.0003582640000000005, 0.000360054999999998, 0.00035920799999999975, 0.0003858469999999982, 0.0003609450000000014, 0.000357167000000002, 0.00035692999999999836, 0.00035622200000000326, 0.0003598890000000021, 0.00036030599999999774, 0.00036098600000000064, 0.0003855420000000026, 0.00035679100000000213, 0.0003588329999999959, 0.0003591940000000002, 0.00035627700000000206, 0.00035933300000000334, 0.00035741699999999876, 0.000386417, 0.000357457999999998, 0.00035644399999999743, 0.0003608469999999975, 0.00038606899999999583, 0.00035666700000000495, 0.00038645900000000566, 0.00035797299999999754, 0.00035883300000000284]</msg>
<status status="PASS" starttime="20201029 18:19:27.556" endtime="20201029 18:19:27.562"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.552" endtime="20201029 18:19:27.563"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:27.567" endtime="20201029 18:19:27.586"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.565" endtime="20201029 18:19:27.587"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.564" endtime="20201029 18:19:27.587"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.186" endtime="20201029 18:19:27.587"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.185" endtime="20201029 18:19:27.587"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:27.596" endtime="20201029 18:19:27.639"></status>
</kw>
<msg timestamp="20201029 18:19:27.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:27.594" endtime="20201029 18:19:27.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:27.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:27.641" endtime="20201029 18:19:27.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:27.643" endtime="20201029 18:19:27.645"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.592" endtime="20201029 18:19:27.645"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.590" endtime="20201029 18:19:27.646"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:27.652" endtime="20201029 18:19:27.953"></status>
</kw>
<msg timestamp="20201029 18:19:27.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024984778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025352764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:27.651" endtime="20201029 18:19:27.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:27.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024984778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025352764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:27.962" endtime="20201029 18:19:27.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:27.982" endtime="20201029 18:19:27.985"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.648" endtime="20201029 18:19:27.987"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.646" endtime="20201029 18:19:27.988"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:27.996" level="INFO">${RESULT} = [{'diff': 0.0003679860000000007}, {'diff': 0.0003563190000000008}, {'diff': 0.0003600420000000014}, {'diff': 0.0003569999999999997}, {'diff': 0.0003580279999999998}, {'diff': 0.000360862}, {'diff': 0....</msg>
<status status="PASS" starttime="20201029 18:19:27.989" endtime="20201029 18:19:27.997"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:28.005" level="INFO">${ACCURACY} = {'diff': [0.0003679860000000007, 0.0003563190000000008, 0.0003600420000000014, 0.0003569999999999997, 0.0003580279999999998, 0.000360862, 0.00035879200000000014, 0.0003582080000000022, 0.0003857909999...</msg>
<status status="PASS" starttime="20201029 18:19:27.998" endtime="20201029 18:19:28.005"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.009" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201029 18:19:28.008" endtime="20201029 18:19:28.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.012" level="INFO">VALUE: [0.0003679860000000007, 0.0003563190000000008, 0.0003600420000000014, 0.0003569999999999997, 0.0003580279999999998, 0.000360862, 0.00035879200000000014, 0.0003582080000000022, 0.0003857909999999999, 0.00035920799999999975, 0.00036074999999999996, 0.00035756899999999855, 0.00035887500000000155, 0.0003864859999999984, 0.00036080599999999824, 0.00036040199999999925, 0.0003859169999999995, 0.0003584999999999977, 0.00036067999999999517, 0.0003565700000000005, 0.0003562219999999963, 0.0003587219999999988, 0.00038490299999999894, 0.0003575700000000015, 0.0003601940000000012, 0.00036036099999999655, 0.000385931000000006, 0.0003854860000000043, 0.00036024999999999946, 0.0003565280000000018, 0.00035633300000000034, 0.0003605419999999984, 0.0003604590000000005, 0.00035897199999999907, 0.00035815299999999994, 0.00038599999999999746, 0.0003578470000000014, 0.0003568889999999991, 0.0003563469999999999, 0.0003605280000000058, 0.0003863750000000013, 0.0003585280000000038, 0.00038527799999999585, 0.0003611669999999956, 0.0003587920000000036, 0.0003597909999999982, 0.00038599999999999746, 0.0003594590000000064, 0.00038567999999999936, 0.0003564860000000031]</msg>
<status status="PASS" starttime="20201029 18:19:28.010" endtime="20201029 18:19:28.013"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.006" endtime="20201029 18:19:28.013"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:28.017" endtime="20201029 18:19:28.036"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.015" endtime="20201029 18:19:28.037"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.014" endtime="20201029 18:19:28.037"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.588" endtime="20201029 18:19:28.038"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.588" endtime="20201029 18:19:28.038"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:28.047" endtime="20201029 18:19:28.082"></status>
</kw>
<msg timestamp="20201029 18:19:28.083" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:28.045" endtime="20201029 18:19:28.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.085" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:28.084" endtime="20201029 18:19:28.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:28.086" endtime="20201029 18:19:28.088"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.043" endtime="20201029 18:19:28.089"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.040" endtime="20201029 18:19:28.089"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:28.096" endtime="20201029 18:19:28.383"></status>
</kw>
<msg timestamp="20201029 18:19:28.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021602056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021981806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:28.094" endtime="20201029 18:19:28.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021602056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021981806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:28.387" endtime="20201029 18:19:28.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:28.395" endtime="20201029 18:19:28.397"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.092" endtime="20201029 18:19:28.397"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.090" endtime="20201029 18:19:28.398"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:28.402" level="INFO">${RESULT} = [{'diff': 0.00037974999999999814}, {'diff': 0.000358958999999999}, {'diff': 0.00035797200000000154}, {'diff': 0.0003581669999999995}, {'diff': 0.00035840199999999725}, {'diff': 0.00035984699999999994}...</msg>
<status status="PASS" starttime="20201029 18:19:28.399" endtime="20201029 18:19:28.402"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:28.406" level="INFO">${ACCURACY} = {'diff': [0.00037974999999999814, 0.000358958999999999, 0.00035797200000000154, 0.0003581669999999995, 0.00035840199999999725, 0.00035984699999999994, 0.00038538899999999987, 0.00035716599999999904, 0...</msg>
<status status="PASS" starttime="20201029 18:19:28.403" endtime="20201029 18:19:28.406"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.411" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201029 18:19:28.410" endtime="20201029 18:19:28.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.414" level="INFO">VALUE: [0.00037974999999999814, 0.000358958999999999, 0.00035797200000000154, 0.0003581669999999995, 0.00035840199999999725, 0.00035984699999999994, 0.00038538899999999987, 0.00035716599999999904, 0.00035997200000000007, 0.00038517999999999886, 0.0003593329999999999, 0.0003590000000000017, 0.0003587219999999988, 0.00035773600000000086, 0.00035808400000000157, 0.00035837500000000105, 0.0003599160000000018, 0.0003584589999999985, 0.00035777799999999957, 0.00035829199999999964, 0.00038486100000000023, 0.000384917000000002, 0.00038495799999999775, 0.0003592219999999993, 0.0003571249999999998, 0.00035867999999999664, 0.000358555999999996, 0.0003852360000000041, 0.00036091700000000226, 0.0003591800000000006, 0.00035755600000000193, 0.00038536100000000073, 0.00036037500000000305, 0.0003593889999999947, 0.0003860279999999966, 0.00035679100000000213, 0.0003606109999999968, 0.0003849030000000059, 0.0003570139999999958, 0.00035806999999999506, 0.0003568479999999999, 0.0003596810000000006, 0.0003580689999999956, 0.00038625000000000465, 0.00035969500000000015, 0.0003591250000000018, 0.00036069399999999474, 0.0003563469999999999, 0.0003583340000000018, 0.0003862639999999973]</msg>
<status status="PASS" starttime="20201029 18:19:28.412" endtime="20201029 18:19:28.415"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.407" endtime="20201029 18:19:28.416"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:28.420" endtime="20201029 18:19:28.439"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.418" endtime="20201029 18:19:28.440"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.417" endtime="20201029 18:19:28.440"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.039" endtime="20201029 18:19:28.441"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.038" endtime="20201029 18:19:28.441"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:28.449" endtime="20201029 18:19:28.484"></status>
</kw>
<msg timestamp="20201029 18:19:28.484" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:28.448" endtime="20201029 18:19:28.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.487" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:28.485" endtime="20201029 18:19:28.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:28.488" endtime="20201029 18:19:28.490"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.445" endtime="20201029 18:19:28.490"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.443" endtime="20201029 18:19:28.491"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:28.497" endtime="20201029 18:19:28.807"></status>
</kw>
<msg timestamp="20201029 18:19:28.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020573597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020955958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:28.495" endtime="20201029 18:19:28.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020573597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020955958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:28.815" endtime="20201029 18:19:28.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:28.823" endtime="20201029 18:19:28.825"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.493" endtime="20201029 18:19:28.825"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.491" endtime="20201029 18:19:28.826"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:28.830" level="INFO">${RESULT} = [{'diff': 0.0003823610000000012}, {'diff': 0.00036030599999999774}, {'diff': 0.00038544499999999815}, {'diff': 0.000385319999999998}, {'diff': 0.0003602779999999986}, {'diff': 0.00036076300000000006},...</msg>
<status status="PASS" starttime="20201029 18:19:28.826" endtime="20201029 18:19:28.830"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:28.835" level="INFO">${ACCURACY} = {'diff': [0.0003823610000000012, 0.00036030599999999774, 0.00038544499999999815, 0.000385319999999998, 0.0003602779999999986, 0.00036076300000000006, 0.0003590969999999992, 0.00035665199999999897, 0.0...</msg>
<status status="PASS" starttime="20201029 18:19:28.831" endtime="20201029 18:19:28.835"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.839" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201029 18:19:28.838" endtime="20201029 18:19:28.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.842" level="INFO">VALUE: [0.0003823610000000012, 0.00036030599999999774, 0.00038544499999999815, 0.000385319999999998, 0.0003602779999999986, 0.00036076300000000006, 0.0003590969999999992, 0.00035665199999999897, 0.00038595799999999875, 0.00038562500000000055, 0.0003597779999999981, 0.0003561530000000014, 0.0003566939999999977, 0.00038508299999999787, 0.00035975000000000243, 0.000386110999999998, 0.00035737500000000005, 0.00035784699999999794, 0.0003576250000000003, 0.0003610550000000025, 0.00038502800000000253, 0.00038538899999999987, 0.00036005600000000096, 0.0003589449999999994, 0.0003849999999999999, 0.0003565279999999983, 0.0003860140000000005, 0.0003575830000000016, 0.000357457999999998, 0.0003563050000000012, 0.0003561249999999988, 0.0003604450000000009, 0.0003605689999999981, 0.00035687499999999955, 0.00036024999999999946, 0.0003581250000000008, 0.0003606940000000017, 0.00038519400000000537, 0.00038599999999999746, 0.0003563479999999994, 0.00036097200000000107, 0.0003607220000000008, 0.0003566249999999993, 0.00038544499999999815, 0.0003861390000000006, 0.0003588050000000037, 0.0003863330000000026, 0.00038586100000000123, 0.0003598329999999969, 0.0003570830000000011]</msg>
<status status="PASS" starttime="20201029 18:19:28.841" endtime="20201029 18:19:28.843"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.836" endtime="20201029 18:19:28.843"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:28.847" endtime="20201029 18:19:28.867"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.846" endtime="20201029 18:19:28.867"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.844" endtime="20201029 18:19:28.867"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.442" endtime="20201029 18:19:28.868"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.441" endtime="20201029 18:19:28.868"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:28.877" endtime="20201029 18:19:28.911"></status>
</kw>
<msg timestamp="20201029 18:19:28.912" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:28.875" endtime="20201029 18:19:28.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.914" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:28.913" endtime="20201029 18:19:28.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:28.916" endtime="20201029 18:19:28.917"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.873" endtime="20201029 18:19:28.918"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.870" endtime="20201029 18:19:28.918"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:28.925" endtime="20201029 18:19:29.215"></status>
</kw>
<msg timestamp="20201029 18:19:29.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020523181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020906764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:28.923" endtime="20201029 18:19:29.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:29.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020523181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020906764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:29.219" endtime="20201029 18:19:29.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:29.227" endtime="20201029 18:19:29.229"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.921" endtime="20201029 18:19:29.230"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.919" endtime="20201029 18:19:29.230"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:29.234" level="INFO">${RESULT} = [{'diff': 0.00038358299999999984}, {'diff': 0.0003603890000000026}, {'diff': 0.0003564999999999992}, {'diff': 0.00035741699999999876}, {'diff': 0.000358360999999998}, {'diff': 0.0003603190000000013}, ...</msg>
<status status="PASS" starttime="20201029 18:19:29.231" endtime="20201029 18:19:29.234"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:29.238" level="INFO">${ACCURACY} = {'diff': [0.00038358299999999984, 0.0003603890000000026, 0.0003564999999999992, 0.00035741699999999876, 0.000358360999999998, 0.0003603190000000013, 0.000359360999999999, 0.0003575969999999977, 0.0003...</msg>
<status status="PASS" starttime="20201029 18:19:29.235" endtime="20201029 18:19:29.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:29.243" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201029 18:19:29.242" endtime="20201029 18:19:29.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:29.245" level="INFO">VALUE: [0.00038358299999999984, 0.0003603890000000026, 0.0003564999999999992, 0.00035741699999999876, 0.000358360999999998, 0.0003603190000000013, 0.000359360999999999, 0.0003575969999999977, 0.00035652699999999884, 0.0003570280000000023, 0.00035658400000000007, 0.0003862500000000012, 0.00035724999999999993, 0.00036080499999999877, 0.0003599030000000017, 0.0003574029999999992, 0.0003589860000000021, 0.0003563889999999986, 0.00035626400000000197, 0.00038508300000000134, 0.00036054099999999895, 0.0003591120000000017, 0.00038540299999999944, 0.00035823699999999736, 0.0003610969999999977, 0.00038626400000000075, 0.0003601939999999977, 0.0003578749999999971, 0.00035859700000000216, 0.00038623599999999814, 0.000357666999999999, 0.0003586809999999996, 0.00035647199999999657, 0.00038522199999999757, 0.00035831899999999584, 0.0003573190000000018, 0.0003853609999999938, 0.00036112499999999687, 0.0003850409999999957, 0.0003851949999999979, 0.0003607769999999996, 0.00036008299999999716, 0.0003589579999999995, 0.0003600139999999988, 0.00036048600000000014, 0.0003590690000000035, 0.00038536100000000073, 0.000359070000000003, 0.0003563469999999999, 0.00035693099999999783]</msg>
<status status="PASS" starttime="20201029 18:19:29.244" endtime="20201029 18:19:29.246"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.239" endtime="20201029 18:19:29.247"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:29.251" endtime="20201029 18:19:29.270"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.249" endtime="20201029 18:19:29.271"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.248" endtime="20201029 18:19:29.271"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.869" endtime="20201029 18:19:29.271"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.868" endtime="20201029 18:19:29.271"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:29.280" endtime="20201029 18:19:29.317"></status>
</kw>
<msg timestamp="20201029 18:19:29.318" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:29.279" endtime="20201029 18:19:29.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:29.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:29.319" endtime="20201029 18:19:29.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:29.321" endtime="20201029 18:19:29.323"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.276" endtime="20201029 18:19:29.324"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.274" endtime="20201029 18:19:29.324"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:29.330" endtime="20201029 18:19:29.616"></status>
</kw>
<msg timestamp="20201029 18:19:29.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023967569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024337153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:29.329" endtime="20201029 18:19:29.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:29.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023967569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024337153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:29.620" endtime="20201029 18:19:29.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:29.629" endtime="20201029 18:19:29.630"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.326" endtime="20201029 18:19:29.631"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.325" endtime="20201029 18:19:29.631"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:29.635" level="INFO">${RESULT} = [{'diff': 0.0003695839999999992}, {'diff': 0.0003848469999999972}, {'diff': 0.0003588479999999984}, {'diff': 0.0003595969999999997}, {'diff': 0.0003578470000000014}, {'diff': 0.00036106900000000205}, ...</msg>
<status status="PASS" starttime="20201029 18:19:29.632" endtime="20201029 18:19:29.636"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:29.640" level="INFO">${ACCURACY} = {'diff': [0.0003695839999999992, 0.0003848469999999972, 0.0003588479999999984, 0.0003595969999999997, 0.0003578470000000014, 0.00036106900000000205, 0.000356666999999998, 0.00038640300000000044, 0.000...</msg>
<status status="PASS" starttime="20201029 18:19:29.636" endtime="20201029 18:19:29.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:29.644" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201029 18:19:29.643" endtime="20201029 18:19:29.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:29.647" level="INFO">VALUE: [0.0003695839999999992, 0.0003848469999999972, 0.0003588479999999984, 0.0003595969999999997, 0.0003578470000000014, 0.00036106900000000205, 0.000356666999999998, 0.00038640300000000044, 0.00038520900000000094, 0.00036081899999999834, 0.00038636100000000173, 0.0003562219999999998, 0.0003595420000000009, 0.000359458, 0.00035970800000000025, 0.0003604590000000005, 0.00035912499999999833, 0.0003593190000000003, 0.00036077800000000257, 0.000359458, 0.0003566520000000059, 0.000385820000000002, 0.0003602090000000002, 0.00035943000000000086, 0.0003565830000000006, 0.00035891700000000026, 0.00038618099999999933, 0.0003851659999999993, 0.0003576250000000003, 0.00035876400000000447, 0.00035759700000000116, 0.00035704200000000186, 0.00036052799999999885, 0.00038562500000000055, 0.0003560140000000017, 0.0003566799999999981, 0.00036048600000000014, 0.00036026399999999903, 0.00035619499999999665, 0.0003863469999999952, 0.00038580500000000295, 0.00036093100000000183, 0.0003864309999999996, 0.0003603329999999974, 0.00035720799999999775, 0.0003594309999999934, 0.00035926400000000497, 0.000385611000000001, 0.0003587359999999984, 0.0003607220000000008]</msg>
<status status="PASS" starttime="20201029 18:19:29.645" endtime="20201029 18:19:29.648"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.640" endtime="20201029 18:19:29.649"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:29.653" endtime="20201029 18:19:29.672"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.651" endtime="20201029 18:19:29.673"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.650" endtime="20201029 18:19:29.673"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.272" endtime="20201029 18:19:29.673"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.272" endtime="20201029 18:19:29.674"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:29.683" endtime="20201029 18:19:29.720"></status>
</kw>
<msg timestamp="20201029 18:19:29.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:29.681" endtime="20201029 18:19:29.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:29.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:29.722" endtime="20201029 18:19:29.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:29.724" endtime="20201029 18:19:29.726"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.678" endtime="20201029 18:19:29.726"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.676" endtime="20201029 18:19:29.727"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:29.734" endtime="20201029 18:19:30.020"></status>
</kw>
<msg timestamp="20201029 18:19:30.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023674139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024057222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:29.732" endtime="20201029 18:19:30.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:30.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023674139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024057222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:30.024" endtime="20201029 18:19:30.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:30.033" endtime="20201029 18:19:30.034"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.729" endtime="20201029 18:19:30.035"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.727" endtime="20201029 18:19:30.035"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:30.039" level="INFO">${RESULT} = [{'diff': 0.00038308299999999934}, {'diff': 0.0003851529999999992}, {'diff': 0.00038519500000000137}, {'diff': 0.0003853060000000019}, {'diff': 0.0003853620000000002}, {'diff': 0.00036093100000000183}...</msg>
<status status="PASS" starttime="20201029 18:19:30.036" endtime="20201029 18:19:30.040"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:30.047" level="INFO">${ACCURACY} = {'diff': [0.00038308299999999934, 0.0003851529999999992, 0.00038519500000000137, 0.0003853060000000019, 0.0003853620000000002, 0.00036093100000000183, 0.0003588329999999994, 0.00036059800000000017, 0....</msg>
<status status="PASS" starttime="20201029 18:19:30.040" endtime="20201029 18:19:30.047"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:30.052" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201029 18:19:30.051" endtime="20201029 18:19:30.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:30.054" level="INFO">VALUE: [0.00038308299999999934, 0.0003851529999999992, 0.00038519500000000137, 0.0003853060000000019, 0.0003853620000000002, 0.00036093100000000183, 0.0003588329999999994, 0.00036059800000000017, 0.00036066599999999907, 0.0003608610000000005, 0.0003572920000000021, 0.00035911100000000223, 0.00035861100000000173, 0.00035920799999999975, 0.000360959000000001, 0.00035995799999999703, 0.00038638900000000087, 0.0003603749999999996, 0.00035875000000000143, 0.00035915300000000094, 0.0003573480000000004, 0.0003575140000000032, 0.00035998599999999964, 0.00035893099999999983, 0.0003561389999999984, 0.0003567359999999964, 0.00035687499999999955, 0.00035672300000000323, 0.00035956999999999656, 0.0003575830000000016, 0.0003593199999999963, 0.0003855970000000014, 0.00035969500000000015, 0.0003578340000000013, 0.0003861390000000006, 0.00035645800000000394, 0.00038480500000000195, 0.00035943100000000033, 0.0003567229999999963, 0.0003860970000000019, 0.0003851659999999993, 0.00038529099999999594, 0.00036008399999999663, 0.0003562500000000024, 0.000386013999999997, 0.0003600689999999976, 0.00036018099999999414, 0.0003596250000000023, 0.0003847360000000036, 0.0003567500000000029]</msg>
<status status="PASS" starttime="20201029 18:19:30.053" endtime="20201029 18:19:30.055"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.048" endtime="20201029 18:19:30.056"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:30.059" endtime="20201029 18:19:30.079"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.058" endtime="20201029 18:19:30.079"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.057" endtime="20201029 18:19:30.080"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.675" endtime="20201029 18:19:30.080"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.674" endtime="20201029 18:19:30.080"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:30.089" endtime="20201029 18:19:30.127"></status>
</kw>
<msg timestamp="20201029 18:19:30.127" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:30.088" endtime="20201029 18:19:30.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:30.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:30.128" endtime="20201029 18:19:30.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:30.131" endtime="20201029 18:19:30.133"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.085" endtime="20201029 18:19:30.133"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.083" endtime="20201029 18:19:30.134"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:30.140" endtime="20201029 18:19:30.427"></status>
</kw>
<msg timestamp="20201029 18:19:30.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024181125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024546514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:30.139" endtime="20201029 18:19:30.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:30.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024181125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024546514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:30.432" endtime="20201029 18:19:30.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:30.441" endtime="20201029 18:19:30.442"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.136" endtime="20201029 18:19:30.443"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.134" endtime="20201029 18:19:30.444"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:30.448" level="INFO">${RESULT} = [{'diff': 0.0003653889999999972}, {'diff': 0.0003564859999999996}, {'diff': 0.00035842999999999986}, {'diff': 0.00035655599999999746}, {'diff': 0.0003853750000000003}, {'diff': 0.0003590139999999978},...</msg>
<status status="PASS" starttime="20201029 18:19:30.444" endtime="20201029 18:19:30.448"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:30.452" level="INFO">${ACCURACY} = {'diff': [0.0003653889999999972, 0.0003564859999999996, 0.00035842999999999986, 0.00035655599999999746, 0.0003853750000000003, 0.0003590139999999978, 0.0003856659999999998, 0.00035627800000000154, 0.0...</msg>
<status status="PASS" starttime="20201029 18:19:30.449" endtime="20201029 18:19:30.452"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:30.457" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201029 18:19:30.456" endtime="20201029 18:19:30.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:30.459" level="INFO">VALUE: [0.0003653889999999972, 0.0003564859999999996, 0.00035842999999999986, 0.00035655599999999746, 0.0003853750000000003, 0.0003590139999999978, 0.0003856659999999998, 0.00035627800000000154, 0.00035673599999999986, 0.0003850970000000009, 0.0003857779999999998, 0.0003561950000000001, 0.00038540299999999944, 0.0003580969999999982, 0.00035787500000000055, 0.00035642999999999786, 0.0003849999999999999, 0.00035724999999999993, 0.0003848329999999976, 0.00038538899999999987, 0.0003569159999999988, 0.000385305999999995, 0.00035826400000000397, 0.000356666999999998, 0.00038499999999999646, 0.00038595799999999875, 0.00035641699999999776, 0.0003594590000000064, 0.00038541599999999954, 0.0003572219999999973, 0.00035950000000000565, 0.00036012499999999587, 0.00038640300000000044, 0.000385416999999999, 0.00036037500000000305, 0.00038504199999999517, 0.0003562080000000037, 0.0003565830000000006, 0.00036097200000000107, 0.00038616699999999976, 0.0003575280000000028, 0.000385611000000001, 0.00038554100000000313, 0.00035711100000000023, 0.0003860699999999953, 0.00038512500000000005, 0.0003583890000000006, 0.0003579579999999985, 0.00035824999999999746, 0.0003566810000000045]</msg>
<status status="PASS" starttime="20201029 18:19:30.458" endtime="20201029 18:19:30.460"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.453" endtime="20201029 18:19:30.461"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:30.464" endtime="20201029 18:19:30.484"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.463" endtime="20201029 18:19:30.484"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.462" endtime="20201029 18:19:30.485"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.081" endtime="20201029 18:19:30.485"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.080" endtime="20201029 18:19:30.485"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:30.494" endtime="20201029 18:19:30.533"></status>
</kw>
<msg timestamp="20201029 18:19:30.534" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:30.493" endtime="20201029 18:19:30.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:30.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:30.535" endtime="20201029 18:19:30.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:30.537" endtime="20201029 18:19:30.539"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.490" endtime="20201029 18:19:30.540"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.488" endtime="20201029 18:19:30.540"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:30.547" endtime="20201029 18:19:30.833"></status>
</kw>
<msg timestamp="20201029 18:19:30.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026013764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026378556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:30.545" endtime="20201029 18:19:30.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:30.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026013764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026378556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:30.838" endtime="20201029 18:19:30.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:30.846" endtime="20201029 18:19:30.848"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.543" endtime="20201029 18:19:30.848"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.541" endtime="20201029 18:19:30.849"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:30.853" level="INFO">${RESULT} = [{'diff': 0.0003647919999999992}, {'diff': 0.0003572639999999995}, {'diff': 0.00035706999999999753}, {'diff': 0.00035727799999999907}, {'diff': 0.000358070000000002}, {'diff': 0.00038562500000000055},...</msg>
<status status="PASS" starttime="20201029 18:19:30.850" endtime="20201029 18:19:30.853"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:30.857" level="INFO">${ACCURACY} = {'diff': [0.0003647919999999992, 0.0003572639999999995, 0.00035706999999999753, 0.00035727799999999907, 0.000358070000000002, 0.00038562500000000055, 0.00038561200000000045, 0.0003861660000000003, 0.0...</msg>
<status status="PASS" starttime="20201029 18:19:30.854" endtime="20201029 18:19:30.857"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:30.861" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201029 18:19:30.860" endtime="20201029 18:19:30.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:30.864" level="INFO">VALUE: [0.0003647919999999992, 0.0003572639999999995, 0.00035706999999999753, 0.00035727799999999907, 0.000358070000000002, 0.00038562500000000055, 0.00038561200000000045, 0.0003861660000000003, 0.00038502800000000253, 0.00036104099999999945, 0.000357457999999998, 0.00035859700000000216, 0.0003595420000000009, 0.00035924999999999846, 0.00035933300000000334, 0.0003567500000000029, 0.00035623600000000283, 0.0003569029999999987, 0.0003861530000000002, 0.0003568889999999991, 0.00035611100000000617, 0.00035990299999999475, 0.0003568199999999938, 0.0003591670000000005, 0.00038534700000000116, 0.00035852799999999685, 0.00038497200000000426, 0.00035822300000000473, 0.00035770799999999825, 0.000360555999999998, 0.00035633300000000034, 0.0003571249999999998, 0.0003601250000000028, 0.0003588190000000033, 0.00038516699999999876, 0.00035759700000000116, 0.00035812499999999386, 0.000385416999999999, 0.0003606800000000021, 0.0003573470000000009, 0.0003863750000000013, 0.00035641699999999776, 0.0003856249999999936, 0.0003863609999999948, 0.0003567920000000016, 0.0003602500000000064, 0.0003563190000000008, 0.00038584700000000166, 0.000357473000000004, 0.0003603340000000038]</msg>
<status status="PASS" starttime="20201029 18:19:30.863" endtime="20201029 18:19:30.866"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.858" endtime="20201029 18:19:30.866"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:30.870" endtime="20201029 18:19:30.889"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.868" endtime="20201029 18:19:30.890"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.867" endtime="20201029 18:19:30.890"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.486" endtime="20201029 18:19:30.891"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.486" endtime="20201029 18:19:30.891"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:30.900" endtime="20201029 18:19:30.939"></status>
</kw>
<msg timestamp="20201029 18:19:30.940" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:30.898" endtime="20201029 18:19:30.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:30.942" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:30.941" endtime="20201029 18:19:30.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:30.943" endtime="20201029 18:19:30.945"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.896" endtime="20201029 18:19:30.946"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.894" endtime="20201029 18:19:30.946"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:30.953" endtime="20201029 18:19:31.239"></status>
</kw>
<msg timestamp="20201029 18:19:31.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022268806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022644375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:30.951" endtime="20201029 18:19:31.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:31.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022268806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022644375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:31.244" endtime="20201029 18:19:31.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:31.252" endtime="20201029 18:19:31.254"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.948" endtime="20201029 18:19:31.254"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.947" endtime="20201029 18:19:31.255"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:31.259" level="INFO">${RESULT} = [{'diff': 0.0003755690000000027}, {'diff': 0.00035973699999999886}, {'diff': 0.00035952799999999785}, {'diff': 0.00035875000000000143}, {'diff': 0.0003855699999999983}, {'diff': 0.00035601399999999825...</msg>
<status status="PASS" starttime="20201029 18:19:31.255" endtime="20201029 18:19:31.259"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:31.264" level="INFO">${ACCURACY} = {'diff': [0.0003755690000000027, 0.00035973699999999886, 0.00035952799999999785, 0.00035875000000000143, 0.0003855699999999983, 0.00035601399999999825, 0.0003602909999999987, 0.0003585000000000012, 0....</msg>
<status status="PASS" starttime="20201029 18:19:31.260" endtime="20201029 18:19:31.264"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:31.268" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201029 18:19:31.267" endtime="20201029 18:19:31.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:31.271" level="INFO">VALUE: [0.0003755690000000027, 0.00035973699999999886, 0.00035952799999999785, 0.00035875000000000143, 0.0003855699999999983, 0.00035601399999999825, 0.0003602909999999987, 0.0003585000000000012, 0.0003593199999999998, 0.0003566389999999989, 0.000386013000000001, 0.00038509699999999744, 0.00036044400000000143, 0.0003856939999999989, 0.00035687499999999955, 0.00038548700000000033, 0.0003564859999999996, 0.00035842999999999986, 0.00038608299999999887, 0.0003589030000000007, 0.0003610269999999999, 0.00035644500000000037, 0.00038584700000000166, 0.00035856899999999955, 0.00038527799999999585, 0.0003568190000000013, 0.0003587920000000036, 0.00035669499999999715, 0.0003562779999999946, 0.0003585139999999973, 0.00035970800000000025, 0.0003607079999999943, 0.0003593329999999964, 0.0003603190000000048, 0.00035694399999999793, 0.000358861000000002, 0.000385722000000005, 0.00036045799999999406, 0.0003851529999999992, 0.0003606800000000021, 0.00038640300000000044, 0.00035619499999999665, 0.0003582219999999983, 0.00035830499999999627, 0.00035700000000000315, 0.0003578060000000022, 0.0003850279999999956, 0.0003602220000000003, 0.00035704200000000186, 0.0003572229999999968]</msg>
<status status="PASS" starttime="20201029 18:19:31.269" endtime="20201029 18:19:31.272"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.265" endtime="20201029 18:19:31.272"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:31.276" endtime="20201029 18:19:31.295"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.274" endtime="20201029 18:19:31.296"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.273" endtime="20201029 18:19:31.296"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.892" endtime="20201029 18:19:31.297"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.891" endtime="20201029 18:19:31.297"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:31.306" endtime="20201029 18:19:31.342"></status>
</kw>
<msg timestamp="20201029 18:19:31.342" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:31.304" endtime="20201029 18:19:31.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:31.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:31.343" endtime="20201029 18:19:31.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:31.346" endtime="20201029 18:19:31.348"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.302" endtime="20201029 18:19:31.348"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.299" endtime="20201029 18:19:31.349"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:31.355" endtime="20201029 18:19:31.643"></status>
</kw>
<msg timestamp="20201029 18:19:31.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0231985, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023577083, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:19:31.354" endtime="20201029 18:19:31.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:31.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0231985, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023577083, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:19:31.647" endtime="20201029 18:19:31.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:31.656" endtime="20201029 18:19:31.657"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.351" endtime="20201029 18:19:31.658"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.349" endtime="20201029 18:19:31.658"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:31.662" level="INFO">${RESULT} = [{'diff': 0.0003785829999999983}, {'diff': 0.0003562080000000002}, {'diff': 0.0003581809999999991}, {'diff': 0.00035615299999999794}, {'diff': 0.0003855970000000014}, {'diff': 0.0003584030000000002}, ...</msg>
<status status="PASS" starttime="20201029 18:19:31.659" endtime="20201029 18:19:31.663"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:31.667" level="INFO">${ACCURACY} = {'diff': [0.0003785829999999983, 0.0003562080000000002, 0.0003581809999999991, 0.00035615299999999794, 0.0003855970000000014, 0.0003584030000000002, 0.00038519500000000137, 0.00036080599999999824, 0.0...</msg>
<status status="PASS" starttime="20201029 18:19:31.663" endtime="20201029 18:19:31.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:31.671" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201029 18:19:31.670" endtime="20201029 18:19:31.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:31.674" level="INFO">VALUE: [0.0003785829999999983, 0.0003562080000000002, 0.0003581809999999991, 0.00035615299999999794, 0.0003855970000000014, 0.0003584030000000002, 0.00038519500000000137, 0.00036080599999999824, 0.00035829100000000016, 0.00035661099999999973, 0.0003590969999999992, 0.00035641600000000176, 0.0003608610000000005, 0.0003853750000000003, 0.0003562219999999998, 0.00035929200000000064, 0.00035745800000000147, 0.0003576250000000003, 0.0003860560000000027, 0.00035801400000000025, 0.0003563469999999999, 0.00035970899999999625, 0.0003575689999999951, 0.0003861249999999941, 0.00036063899999999594, 0.000385207999999998, 0.00035850000000000465, 0.00038516699999999876, 0.00038591700000000645, 0.00038645799999999925, 0.000356666999999998, 0.0003563469999999999, 0.00035824999999999746, 0.0003852220000000045, 0.0003599869999999991, 0.0003586390000000009, 0.0003605830000000046, 0.0003606659999999956, 0.0003599450000000004, 0.0003570830000000011, 0.00035827800000000354, 0.000356457999999997, 0.0003860840000000018, 0.00035970900000000666, 0.00038562500000000055, 0.000385416999999999, 0.00036047300000000004, 0.0003583879999999942, 0.0003851939999999984, 0.00035715299999999894]</msg>
<status status="PASS" starttime="20201029 18:19:31.672" endtime="20201029 18:19:31.674"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.667" endtime="20201029 18:19:31.675"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:31.679" endtime="20201029 18:19:31.698"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.677" endtime="20201029 18:19:31.699"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.676" endtime="20201029 18:19:31.699"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.298" endtime="20201029 18:19:31.699"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.297" endtime="20201029 18:19:31.700"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:31.709" endtime="20201029 18:19:31.745"></status>
</kw>
<msg timestamp="20201029 18:19:31.745" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:31.707" endtime="20201029 18:19:31.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:31.748" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:31.746" endtime="20201029 18:19:31.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:31.749" endtime="20201029 18:19:31.750"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.704" endtime="20201029 18:19:31.751"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.702" endtime="20201029 18:19:31.751"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:31.758" endtime="20201029 18:19:32.044"></status>
</kw>
<msg timestamp="20201029 18:19:32.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022413361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022788125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:31.757" endtime="20201029 18:19:32.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:32.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022413361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022788125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:32.048" endtime="20201029 18:19:32.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:32.057" endtime="20201029 18:19:32.058"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.754" endtime="20201029 18:19:32.059"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.752" endtime="20201029 18:19:32.059"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:32.063" level="INFO">${RESULT} = [{'diff': 0.00037476399999999965}, {'diff': 0.00035683300000000084}, {'diff': 0.0003585139999999973}, {'diff': 0.00035873600000000186}, {'diff': 0.0003603060000000012}, {'diff': 0.0003584730000000015}...</msg>
<status status="PASS" starttime="20201029 18:19:32.060" endtime="20201029 18:19:32.064"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:32.068" level="INFO">${ACCURACY} = {'diff': [0.00037476399999999965, 0.00035683300000000084, 0.0003585139999999973, 0.00035873600000000186, 0.0003603060000000012, 0.0003584730000000015, 0.00035791600000000326, 0.00038622299999999804, 0...</msg>
<status status="PASS" starttime="20201029 18:19:32.064" endtime="20201029 18:19:32.068"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:32.072" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201029 18:19:32.071" endtime="20201029 18:19:32.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:32.075" level="INFO">VALUE: [0.00037476399999999965, 0.00035683300000000084, 0.0003585139999999973, 0.00035873600000000186, 0.0003603060000000012, 0.0003584730000000015, 0.00035791600000000326, 0.00038622299999999804, 0.0003602079999999973, 0.00038598600000000136, 0.0003582220000000018, 0.0003592359999999989, 0.0003589860000000021, 0.00036054099999999895, 0.00035957000000000003, 0.0003604169999999983, 0.00038580599999999896, 0.000356569000000001, 0.0003849160000000025, 0.00038530500000000245, 0.0003587359999999984, 0.0003572920000000021, 0.00035886200000000146, 0.0003596810000000006, 0.0003861110000000015, 0.00035973699999999886, 0.0003599030000000017, 0.0003861660000000003, 0.000386013999999997, 0.0003564449999999969, 0.000385820000000002, 0.000356861, 0.0003853609999999938, 0.00035847199999999857, 0.0003599580000000005, 0.0003608190000000053, 0.00035872200000000576, 0.00038538899999999987, 0.0003602779999999986, 0.0003581799999999996, 0.00035944400000000043, 0.0003610000000000002, 0.0003601810000000011, 0.00035869499999999915, 0.00035847199999999857, 0.0003591250000000018, 0.0003591390000000014, 0.00036116600000000304, 0.0003580270000000038, 0.0003576250000000003]</msg>
<status status="PASS" starttime="20201029 18:19:32.073" endtime="20201029 18:19:32.076"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.068" endtime="20201029 18:19:32.077"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:32.081" endtime="20201029 18:19:32.100"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.079" endtime="20201029 18:19:32.101"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.078" endtime="20201029 18:19:32.101"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.701" endtime="20201029 18:19:32.101"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.700" endtime="20201029 18:19:32.101"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:32.110" endtime="20201029 18:19:32.146"></status>
</kw>
<msg timestamp="20201029 18:19:32.147" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:32.109" endtime="20201029 18:19:32.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:32.149" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:32.148" endtime="20201029 18:19:32.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:32.150" endtime="20201029 18:19:32.152"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.106" endtime="20201029 18:19:32.153"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.104" endtime="20201029 18:19:32.153"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:32.160" endtime="20201029 18:19:32.447"></status>
</kw>
<msg timestamp="20201029 18:19:32.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022425653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022788347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:32.158" endtime="20201029 18:19:32.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:32.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022425653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022788347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:32.451" endtime="20201029 18:19:32.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:32.459" endtime="20201029 18:19:32.461"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.156" endtime="20201029 18:19:32.462"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.154" endtime="20201029 18:19:32.462"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:32.466" level="INFO">${RESULT} = [{'diff': 0.0003626940000000002}, {'diff': 0.00035887500000000155}, {'diff': 0.00038570899999999797}, {'diff': 0.00035898599999999864}, {'diff': 0.000360652999999999}, {'diff': 0.00035961100000000273}...</msg>
<status status="PASS" starttime="20201029 18:19:32.463" endtime="20201029 18:19:32.467"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:32.472" level="INFO">${ACCURACY} = {'diff': [0.0003626940000000002, 0.00035887500000000155, 0.00038570899999999797, 0.00035898599999999864, 0.000360652999999999, 0.00035961100000000273, 0.0003569999999999997, 0.0003860980000000014, 0.0...</msg>
<status status="PASS" starttime="20201029 18:19:32.467" endtime="20201029 18:19:32.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:32.477" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201029 18:19:32.476" endtime="20201029 18:19:32.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:32.480" level="INFO">VALUE: [0.0003626940000000002, 0.00035887500000000155, 0.00038570899999999797, 0.00035898599999999864, 0.000360652999999999, 0.00035961100000000273, 0.0003569999999999997, 0.0003860980000000014, 0.00035797200000000154, 0.0003849169999999985, 0.0003580829999999986, 0.00038605499999999973, 0.0003567220000000003, 0.00035659799999999964, 0.00035923600000000236, 0.0003853750000000003, 0.0003858469999999982, 0.00035897199999999907, 0.00035833300000000234, 0.00035801400000000025, 0.00038586100000000123, 0.00035733300000000134, 0.00035732000000000125, 0.00038536100000000073, 0.00038575000000000415, 0.00035954200000000436, 0.0003599450000000004, 0.0003572219999999973, 0.00035898599999999864, 0.00035715299999999894, 0.00036059700000000416, 0.00035772200000000476, 0.0003561939999999972, 0.00035774999999999696, 0.00036058400000000407, 0.00035788800000000065, 0.00038620899999999847, 0.00038602800000000353, 0.00036097200000000107, 0.00035683300000000084, 0.0003579029999999997, 0.0003568060000000012, 0.000359070000000003, 0.0003577909999999962, 0.0003863750000000013, 0.0003856390000000001, 0.0003857079999999985, 0.0003854309999999986, 0.0003583060000000027, 0.00035976399999999853]</msg>
<status status="PASS" starttime="20201029 18:19:32.478" endtime="20201029 18:19:32.481"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.473" endtime="20201029 18:19:32.481"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:32.485" endtime="20201029 18:19:32.504"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.483" endtime="20201029 18:19:32.505"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.482" endtime="20201029 18:19:32.505"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.102" endtime="20201029 18:19:32.506"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.102" endtime="20201029 18:19:32.506"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:32.515" endtime="20201029 18:19:32.553"></status>
</kw>
<msg timestamp="20201029 18:19:32.553" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:32.513" endtime="20201029 18:19:32.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:32.556" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:32.554" endtime="20201029 18:19:32.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:32.557" endtime="20201029 18:19:32.559"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.510" endtime="20201029 18:19:32.559"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.508" endtime="20201029 18:19:32.560"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:32.566" endtime="20201029 18:19:32.854"></status>
</kw>
<msg timestamp="20201029 18:19:32.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025046361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025414139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:32.565" endtime="20201029 18:19:32.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:32.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025046361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025414139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:32.859" endtime="20201029 18:19:32.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:32.869" endtime="20201029 18:19:32.870"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.562" endtime="20201029 18:19:32.871"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.560" endtime="20201029 18:19:32.871"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:32.876" level="INFO">${RESULT} = [{'diff': 0.00036777799999999916}, {'diff': 0.0003609719999999976}, {'diff': 0.00036005600000000096}, {'diff': 0.00035951400000000175}, {'diff': 0.0003586390000000009}, {'diff': 0.00036070800000000125...</msg>
<status status="PASS" starttime="20201029 18:19:32.872" endtime="20201029 18:19:32.876"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:32.880" level="INFO">${ACCURACY} = {'diff': [0.00036777799999999916, 0.0003609719999999976, 0.00036005600000000096, 0.00035951400000000175, 0.0003586390000000009, 0.00036070800000000125, 0.0003567920000000016, 0.00035955600000000046, 0...</msg>
<status status="PASS" starttime="20201029 18:19:32.877" endtime="20201029 18:19:32.881"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:32.885" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201029 18:19:32.884" endtime="20201029 18:19:32.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:32.888" level="INFO">VALUE: [0.00036777799999999916, 0.0003609719999999976, 0.00036005600000000096, 0.00035951400000000175, 0.0003586390000000009, 0.00036070800000000125, 0.0003567920000000016, 0.00035955600000000046, 0.00036081899999999834, 0.0003578890000000001, 0.00035737500000000005, 0.000385319999999998, 0.00038641600000000054, 0.00035984699999999994, 0.00035661099999999973, 0.00035851400000000075, 0.0003864859999999984, 0.0003610830000000051, 0.00038644499999999915, 0.00035994499999999346, 0.0003564029999999982, 0.00038508300000000134, 0.0003596250000000023, 0.0003592359999999989, 0.00035750000000000365, 0.0003602359999999999, 0.00035887500000000155, 0.00035670900000000366, 0.00035777700000000356, 0.00038540299999999944, 0.0003592500000000054, 0.00035827800000000354, 0.0003576809999999986, 0.0003864439999999997, 0.0003862919999999964, 0.0003576120000000002, 0.0003587219999999988, 0.0003866390000000011, 0.0003575700000000015, 0.000386305999999996, 0.00038579200000000285, 0.00038507000000000124, 0.0003861660000000003, 0.0003611800000000026, 0.00036074999999999996, 0.00035650000000000265, 0.000359861000000003, 0.00035865300000000044, 0.00035980499999999777, 0.00036102799999999935]</msg>
<status status="PASS" starttime="20201029 18:19:32.886" endtime="20201029 18:19:32.897"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.881" endtime="20201029 18:19:32.898"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:32.902" endtime="20201029 18:19:32.921"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.900" endtime="20201029 18:19:32.922"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.899" endtime="20201029 18:19:32.922"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.507" endtime="20201029 18:19:32.923"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.506" endtime="20201029 18:19:32.923"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:32.932" endtime="20201029 18:19:32.971"></status>
</kw>
<msg timestamp="20201029 18:19:32.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:32.930" endtime="20201029 18:19:32.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:32.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:32.972" endtime="20201029 18:19:32.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:32.975" endtime="20201029 18:19:32.977"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.928" endtime="20201029 18:19:32.977"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.925" endtime="20201029 18:19:32.978"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:32.984" endtime="20201029 18:19:33.271"></status>
</kw>
<msg timestamp="20201029 18:19:33.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025102, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02548475, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 18:19:32.983" endtime="20201029 18:19:33.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:33.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025102, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02548475, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 18:19:33.275" endtime="20201029 18:19:33.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:33.283" endtime="20201029 18:19:33.285"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.980" endtime="20201029 18:19:33.286"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.978" endtime="20201029 18:19:33.286"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:33.290" level="INFO">${RESULT} = [{'diff': 0.00038275000000000114}, {'diff': 0.0003594449999999999}, {'diff': 0.0003608750000000001}, {'diff': 0.00035809700000000166}, {'diff': 0.00035973700000000233}, {'diff': 0.0003599580000000005}...</msg>
<status status="PASS" starttime="20201029 18:19:33.287" endtime="20201029 18:19:33.290"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:33.294" level="INFO">${ACCURACY} = {'diff': [0.00038275000000000114, 0.0003594449999999999, 0.0003608750000000001, 0.00035809700000000166, 0.00035973700000000233, 0.0003599580000000005, 0.0003607220000000008, 0.0003862780000000003, 0.0...</msg>
<status status="PASS" starttime="20201029 18:19:33.291" endtime="20201029 18:19:33.294"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:33.299" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201029 18:19:33.298" endtime="20201029 18:19:33.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:33.301" level="INFO">VALUE: [0.00038275000000000114, 0.0003594449999999999, 0.0003608750000000001, 0.00035809700000000166, 0.00035973700000000233, 0.0003599580000000005, 0.0003607220000000008, 0.0003862780000000003, 0.00035713900000000284, 0.0003574019999999997, 0.0003578749999999971, 0.0003608610000000005, 0.00038490299999999894, 0.0003610410000000029, 0.0003578890000000001, 0.0003579159999999998, 0.00036077800000000257, 0.0003566809999999976, 0.00038508300000000134, 0.00036079199999999867, 0.0003590140000000047, 0.00035659700000000016, 0.0003599030000000017, 0.0003610139999999998, 0.00038580500000000295, 0.00038566699999999926, 0.000359458, 0.00035998599999999964, 0.00035791699999999926, 0.00038484700000000066, 0.0003569579999999975, 0.00038575000000000415, 0.00038602800000000353, 0.0003592500000000054, 0.0003587359999999984, 0.0003606800000000021, 0.0003858750000000008, 0.00035623699999999536, 0.00035858299999999566, 0.0003589030000000007, 0.0003599580000000005, 0.0003594030000000012, 0.00035744399999999843, 0.00035750000000000365, 0.00035909700000000266, 0.000356666999999998, 0.00035794399999999893, 0.00038590200000000047, 0.0003574300000000058, 0.00035704200000000186]</msg>
<status status="PASS" starttime="20201029 18:19:33.300" endtime="20201029 18:19:33.303"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.295" endtime="20201029 18:19:33.304"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:33.307" endtime="20201029 18:19:33.327"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.306" endtime="20201029 18:19:33.327"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.305" endtime="20201029 18:19:33.328"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.924" endtime="20201029 18:19:33.328"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.923" endtime="20201029 18:19:33.328"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:33.337" endtime="20201029 18:19:33.374"></status>
</kw>
<msg timestamp="20201029 18:19:33.374" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:33.336" endtime="20201029 18:19:33.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:33.377" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:33.375" endtime="20201029 18:19:33.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:33.378" endtime="20201029 18:19:33.379"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.333" endtime="20201029 18:19:33.380"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.331" endtime="20201029 18:19:33.380"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:33.387" endtime="20201029 18:19:33.673"></status>
</kw>
<msg timestamp="20201029 18:19:33.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021568847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021932903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:33.385" endtime="20201029 18:19:33.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:33.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021568847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021932903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:33.677" endtime="20201029 18:19:33.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:33.685" endtime="20201029 18:19:33.687"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.383" endtime="20201029 18:19:33.688"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.381" endtime="20201029 18:19:33.688"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:33.692" level="INFO">${RESULT} = [{'diff': 0.0003640560000000015}, {'diff': 0.0003600420000000014}, {'diff': 0.00038622199999999857}, {'diff': 0.0003569860000000001}, {'diff': 0.0003579860000000011}, {'diff': 0.0003856390000000001}, ...</msg>
<status status="PASS" starttime="20201029 18:19:33.689" endtime="20201029 18:19:33.692"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:33.700" level="INFO">${ACCURACY} = {'diff': [0.0003640560000000015, 0.0003600420000000014, 0.00038622199999999857, 0.0003569860000000001, 0.0003579860000000011, 0.0003856390000000001, 0.000359458, 0.0003563479999999994, 0.0003568889999...</msg>
<status status="PASS" starttime="20201029 18:19:33.693" endtime="20201029 18:19:33.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:33.705" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201029 18:19:33.704" endtime="20201029 18:19:33.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:33.707" level="INFO">VALUE: [0.0003640560000000015, 0.0003600420000000014, 0.00038622199999999857, 0.0003569860000000001, 0.0003579860000000011, 0.0003856390000000001, 0.000359458, 0.0003563479999999994, 0.0003568889999999991, 0.0003562080000000002, 0.00035901400000000125, 0.0003864300000000001, 0.00035906999999999953, 0.00035737500000000005, 0.0003583890000000006, 0.0003857909999999999, 0.0003568050000000017, 0.0003595410000000014, 0.0003612079999999983, 0.00035837500000000105, 0.0003582089999999982, 0.0003608880000000002, 0.0003855550000000027, 0.0003593190000000003, 0.00036088899999999965, 0.0003851939999999984, 0.0003584999999999977, 0.0003859859999999979, 0.00035805600000000243, 0.00035908299999999616, 0.00036068099999999464, 0.0003569029999999987, 0.00035737500000000005, 0.00038658300000000284, 0.0003862770000000043, 0.00036018099999999414, 0.0003865970000000024, 0.00035666599999999854, 0.0003858750000000008, 0.00038608300000000234, 0.0003605410000000059, 0.00035958399999999613, 0.00036081899999999834, 0.00038599999999999746, 0.0003588890000000011, 0.00035831899999999584, 0.0003858060000000024, 0.0003610559999999985, 0.00035874999999999796, 0.00036002799999999835]</msg>
<status status="PASS" starttime="20201029 18:19:33.706" endtime="20201029 18:19:33.708"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.701" endtime="20201029 18:19:33.708"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:33.712" endtime="20201029 18:19:33.732"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.711" endtime="20201029 18:19:33.732"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.709" endtime="20201029 18:19:33.733"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.329" endtime="20201029 18:19:33.733"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.329" endtime="20201029 18:19:33.733"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:33.742" endtime="20201029 18:19:33.779"></status>
</kw>
<msg timestamp="20201029 18:19:33.780" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:33.740" endtime="20201029 18:19:33.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:33.782" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:33.781" endtime="20201029 18:19:33.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:33.783" endtime="20201029 18:19:33.785"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.738" endtime="20201029 18:19:33.785"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.736" endtime="20201029 18:19:33.786"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:33.793" endtime="20201029 18:19:34.082"></status>
</kw>
<msg timestamp="20201029 18:19:34.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023650875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024033681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:33.791" endtime="20201029 18:19:34.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:34.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023650875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024033681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:34.086" endtime="20201029 18:19:34.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:34.094" endtime="20201029 18:19:34.096"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.788" endtime="20201029 18:19:34.097"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.786" endtime="20201029 18:19:34.097"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:34.101" level="INFO">${RESULT} = [{'diff': 0.0003828060000000029}, {'diff': 0.0003853469999999977}, {'diff': 0.00036047300000000004}, {'diff': 0.000386305}, {'diff': 0.00035624999999999893}, {'diff': 0.00035879200000000014}, {'diff':...</msg>
<status status="PASS" starttime="20201029 18:19:34.098" endtime="20201029 18:19:34.101"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:34.105" level="INFO">${ACCURACY} = {'diff': [0.0003828060000000029, 0.0003853469999999977, 0.00036047300000000004, 0.000386305, 0.00035624999999999893, 0.00035879200000000014, 0.0003850139999999995, 0.00035852700000000085, 0.0003563330...</msg>
<status status="PASS" starttime="20201029 18:19:34.102" endtime="20201029 18:19:34.106"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:34.110" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201029 18:19:34.109" endtime="20201029 18:19:34.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:34.113" level="INFO">VALUE: [0.0003828060000000029, 0.0003853469999999977, 0.00036047300000000004, 0.000386305, 0.00035624999999999893, 0.00035879200000000014, 0.0003850139999999995, 0.00035852700000000085, 0.00035633300000000034, 0.0003853200000000015, 0.0003596250000000023, 0.000385820000000002, 0.00035865300000000044, 0.0003605970000000007, 0.00038476399999999925, 0.0003583189999999993, 0.00035784699999999794, 0.0003588199999999993, 0.0003851389999999996, 0.00035632000000000025, 0.00036044399999999796, 0.0003594999999999987, 0.0003580830000000021, 0.00038570800000000544, 0.0003566249999999993, 0.0003860279999999966, 0.00038495799999999775, 0.00035742999999999886, 0.0003567219999999968, 0.0003850269999999961, 0.00035655600000000093, 0.00036073599999999345, 0.0003584020000000007, 0.00035859700000000216, 0.00035711100000000023, 0.0003603890000000026, 0.0003857079999999985, 0.00038504100000000263, 0.0003590419999999969, 0.00038562500000000055, 0.0003607360000000004, 0.00035787500000000055, 0.0003853200000000015, 0.00035761100000000073, 0.00035829199999999617, 0.00035641699999999776, 0.00035798599999999764, 0.00035776400000000347, 0.0003572920000000021, 0.0003591670000000005]</msg>
<status status="PASS" starttime="20201029 18:19:34.111" endtime="20201029 18:19:34.113"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.106" endtime="20201029 18:19:34.114"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:34.118" endtime="20201029 18:19:34.137"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.116" endtime="20201029 18:19:34.138"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.115" endtime="20201029 18:19:34.138"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.734" endtime="20201029 18:19:34.138"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.734" endtime="20201029 18:19:34.139"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:34.148" endtime="20201029 18:19:34.186"></status>
</kw>
<msg timestamp="20201029 18:19:34.186" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:34.146" endtime="20201029 18:19:34.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:34.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:34.187" endtime="20201029 18:19:34.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:34.190" endtime="20201029 18:19:34.191"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.143" endtime="20201029 18:19:34.192"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.141" endtime="20201029 18:19:34.192"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:34.199" endtime="20201029 18:19:34.485"></status>
</kw>
<msg timestamp="20201029 18:19:34.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025135486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025517833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:34.198" endtime="20201029 18:19:34.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:34.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025135486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025517833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:34.489" endtime="20201029 18:19:34.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:34.498" endtime="20201029 18:19:34.500"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.195" endtime="20201029 18:19:34.500"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.193" endtime="20201029 18:19:34.501"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:34.505" level="INFO">${RESULT} = [{'diff': 0.00038234700000000163}, {'diff': 0.0003590829999999996}, {'diff': 0.0003594030000000012}, {'diff': 0.0003594860000000026}, {'diff': 0.00035938899999999815}, {'diff': 0.00035980499999999777}...</msg>
<status status="PASS" starttime="20201029 18:19:34.501" endtime="20201029 18:19:34.505"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:34.509" level="INFO">${ACCURACY} = {'diff': [0.00038234700000000163, 0.0003590829999999996, 0.0003594030000000012, 0.0003594860000000026, 0.00035938899999999815, 0.00035980499999999777, 0.00035629199999999764, 0.00035973700000000233, 0...</msg>
<status status="PASS" starttime="20201029 18:19:34.506" endtime="20201029 18:19:34.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:34.514" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201029 18:19:34.513" endtime="20201029 18:19:34.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:34.517" level="INFO">VALUE: [0.00038234700000000163, 0.0003590829999999996, 0.0003594030000000012, 0.0003594860000000026, 0.00035938899999999815, 0.00035980499999999777, 0.00035629199999999764, 0.00035973700000000233, 0.0003588470000000024, 0.00036029200000000164, 0.0003561389999999984, 0.00038588900000000037, 0.0003855970000000014, 0.00035727799999999907, 0.00035974999999999896, 0.000385611000000001, 0.00038551400000000347, 0.00035730599999999474, 0.0003572359999999969, 0.00038579200000000285, 0.0003586939999999997, 0.00035880499999999677, 0.0003609160000000028, 0.00038622199999999857, 0.00038538899999999987, 0.00035891700000000026, 0.00035954099999999795, 0.0003853750000000003, 0.00035947199999999957, 0.0003607360000000004, 0.0003561249999999988, 0.0003561249999999988, 0.00038509699999999397, 0.0003602220000000003, 0.00036061100000000373, 0.00035897299999999854, 0.00035669499999999715, 0.0003580280000000033, 0.00035745800000000494, 0.00035777700000000356, 0.00035641600000000523, 0.0003562500000000024, 0.00038506900000000177, 0.0003583190000000028, 0.00035776400000000347, 0.0003570690000000015, 0.00035761100000000073, 0.00036076399999999953, 0.00036024999999999946, 0.00035726399999999603]</msg>
<status status="PASS" starttime="20201029 18:19:34.515" endtime="20201029 18:19:34.518"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.510" endtime="20201029 18:19:34.519"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:34.523" endtime="20201029 18:19:34.542"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.521" endtime="20201029 18:19:34.543"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.520" endtime="20201029 18:19:34.543"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.139" endtime="20201029 18:19:34.544"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.139" endtime="20201029 18:19:34.544"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:34.553" endtime="20201029 18:19:34.587"></status>
</kw>
<msg timestamp="20201029 18:19:34.588" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:34.551" endtime="20201029 18:19:34.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:34.590" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:34.589" endtime="20201029 18:19:34.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:34.591" endtime="20201029 18:19:34.593"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.549" endtime="20201029 18:19:34.594"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.546" endtime="20201029 18:19:34.594"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:34.601" endtime="20201029 18:19:34.887"></status>
</kw>
<msg timestamp="20201029 18:19:34.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021925167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022282486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:34.599" endtime="20201029 18:19:34.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:34.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021925167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022282486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:34.891" endtime="20201029 18:19:34.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:34.900" endtime="20201029 18:19:34.902"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.597" endtime="20201029 18:19:34.902"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.595" endtime="20201029 18:19:34.903"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:34.907" level="INFO">${RESULT} = [{'diff': 0.0003573190000000018}, {'diff': 0.00036111100000000076}, {'diff': 0.00035751399999999975}, {'diff': 0.00035737500000000005}, {'diff': 0.00035919499999999965}, {'diff': 0.0003566249999999993...</msg>
<status status="PASS" starttime="20201029 18:19:34.904" endtime="20201029 18:19:34.907"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:34.912" level="INFO">${ACCURACY} = {'diff': [0.0003573190000000018, 0.00036111100000000076, 0.00035751399999999975, 0.00035737500000000005, 0.00035919499999999965, 0.0003566249999999993, 0.0003861530000000002, 0.00035976399999999853, 0...</msg>
<status status="PASS" starttime="20201029 18:19:34.908" endtime="20201029 18:19:34.912"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:34.916" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201029 18:19:34.915" endtime="20201029 18:19:34.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:34.919" level="INFO">VALUE: [0.0003573190000000018, 0.00036111100000000076, 0.00035751399999999975, 0.00035737500000000005, 0.00035919499999999965, 0.0003566249999999993, 0.0003861530000000002, 0.00035976399999999853, 0.0003865279999999971, 0.0003594730000000025, 0.00035994400000000093, 0.00036026399999999903, 0.0003574029999999992, 0.00035705599999999796, 0.000359667000000001, 0.0003563890000000021, 0.00035829100000000016, 0.00035791699999999926, 0.00035788800000000065, 0.00035997200000000007, 0.00038509699999999744, 0.0003604020000000027, 0.0003858190000000025, 0.0003565700000000005, 0.0003568889999999991, 0.00038556900000000227, 0.00035987500000000255, 0.0003584030000000002, 0.0003857079999999985, 0.0003576810000000055, 0.00038612500000000105, 0.000361054999999999, 0.00035965300000000144, 0.00036093000000000236, 0.00038597300000000473, 0.0003583749999999941, 0.000357346999999994, 0.00035854099999999695, 0.00036054099999999895, 0.00038608300000000234, 0.0003572219999999973, 0.00035633300000000034, 0.0003579029999999997, 0.0003592920000000041, 0.0003584590000000054, 0.0003573889999999996, 0.0003581390000000004, 0.00036098600000000064, 0.00035970800000000025, 0.0003567080000000042]</msg>
<status status="PASS" starttime="20201029 18:19:34.917" endtime="20201029 18:19:34.920"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.913" endtime="20201029 18:19:34.920"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:34.924" endtime="20201029 18:19:34.944"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.923" endtime="20201029 18:19:34.944"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.921" endtime="20201029 18:19:34.945"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.545" endtime="20201029 18:19:34.945"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.544" endtime="20201029 18:19:34.945"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:34.954" endtime="20201029 18:19:34.990"></status>
</kw>
<msg timestamp="20201029 18:19:34.991" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:34.953" endtime="20201029 18:19:34.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:34.993" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:34.992" endtime="20201029 18:19:34.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:34.994" endtime="20201029 18:19:34.996"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.950" endtime="20201029 18:19:34.997"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.948" endtime="20201029 18:19:34.997"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:35.004" endtime="20201029 18:19:35.291"></status>
</kw>
<msg timestamp="20201029 18:19:35.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022524972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022900694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:35.002" endtime="20201029 18:19:35.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:35.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022524972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022900694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:35.295" endtime="20201029 18:19:35.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:35.304" endtime="20201029 18:19:35.305"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.000" endtime="20201029 18:19:35.306"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.998" endtime="20201029 18:19:35.306"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:35.310" level="INFO">${RESULT} = [{'diff': 0.0003757219999999985}, {'diff': 0.0003857779999999998}, {'diff': 0.0003575700000000015}, {'diff': 0.00035751399999999975}, {'diff': 0.00035693000000000183}, {'diff': 0.0003609719999999976},...</msg>
<status status="PASS" starttime="20201029 18:19:35.307" endtime="20201029 18:19:35.311"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:35.315" level="INFO">${ACCURACY} = {'diff': [0.0003757219999999985, 0.0003857779999999998, 0.0003575700000000015, 0.00035751399999999975, 0.00035693000000000183, 0.0003609719999999976, 0.00035837500000000105, 0.0003864580000000027, 0.0...</msg>
<status status="PASS" starttime="20201029 18:19:35.311" endtime="20201029 18:19:35.315"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:35.319" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201029 18:19:35.318" endtime="20201029 18:19:35.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:35.322" level="INFO">VALUE: [0.0003757219999999985, 0.0003857779999999998, 0.0003575700000000015, 0.00035751399999999975, 0.00035693000000000183, 0.0003609719999999976, 0.00035837500000000105, 0.0003864580000000027, 0.00035733300000000134, 0.00035880500000000023, 0.000386305, 0.00036062499999999983, 0.0003855980000000009, 0.0003606940000000017, 0.00035948599999999914, 0.00035925000000000193, 0.0003864309999999996, 0.0003595420000000009, 0.00035827800000000007, 0.00035875000000000143, 0.0003601389999999989, 0.00035687499999999955, 0.00035755599999999846, 0.0003858199999999985, 0.00035852799999999685, 0.0003571669999999985, 0.00035640300000000513, 0.00035952799999999785, 0.00038654100000000413, 0.00038556900000000227, 0.0003611659999999961, 0.0003854589999999977, 0.0003582500000000044, 0.00038523599999999714, 0.0003603199999999973, 0.0003604590000000005, 0.0003602779999999986, 0.0003853750000000003, 0.00036076399999999953, 0.00035637499999999905, 0.00035915200000000147, 0.00038540199999999997, 0.00038554100000000313, 0.0003588879999999947, 0.00035773699999999686, 0.00036041700000000176, 0.00035965300000000144, 0.0003592359999999989, 0.00036004099999999845, 0.0003865970000000024]</msg>
<status status="PASS" starttime="20201029 18:19:35.320" endtime="20201029 18:19:35.322"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.315" endtime="20201029 18:19:35.323"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:35.327" endtime="20201029 18:19:35.346"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.325" endtime="20201029 18:19:35.347"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.324" endtime="20201029 18:19:35.347"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.946" endtime="20201029 18:19:35.348"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.945" endtime="20201029 18:19:35.348"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:35.357" endtime="20201029 18:19:35.396"></status>
</kw>
<msg timestamp="20201029 18:19:35.397" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:35.355" endtime="20201029 18:19:35.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:35.399" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:35.398" endtime="20201029 18:19:35.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:35.400" endtime="20201029 18:19:35.402"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.353" endtime="20201029 18:19:35.403"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.350" endtime="20201029 18:19:35.403"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:35.410" endtime="20201029 18:19:35.697"></status>
</kw>
<msg timestamp="20201029 18:19:35.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021765111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022139028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:35.408" endtime="20201029 18:19:35.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:35.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021765111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022139028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:35.702" endtime="20201029 18:19:35.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:35.710" endtime="20201029 18:19:35.712"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.406" endtime="20201029 18:19:35.713"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.404" endtime="20201029 18:19:35.713"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:35.717" level="INFO">${RESULT} = [{'diff': 0.0003739170000000014}, {'diff': 0.00038541599999999954}, {'diff': 0.00036015300000000194}, {'diff': 0.00035957000000000003}, {'diff': 0.0003596939999999972}, {'diff': 0.00035756899999999855...</msg>
<status status="PASS" starttime="20201029 18:19:35.714" endtime="20201029 18:19:35.717"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:35.721" level="INFO">${ACCURACY} = {'diff': [0.0003739170000000014, 0.00038541599999999954, 0.00036015300000000194, 0.00035957000000000003, 0.0003596939999999972, 0.00035756899999999855, 0.00036057000000000103, 0.0003579860000000011, 0...</msg>
<status status="PASS" starttime="20201029 18:19:35.718" endtime="20201029 18:19:35.721"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:35.726" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201029 18:19:35.725" endtime="20201029 18:19:35.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:35.728" level="INFO">VALUE: [0.0003739170000000014, 0.00038541599999999954, 0.00036015300000000194, 0.00035957000000000003, 0.0003596939999999972, 0.00035756899999999855, 0.00036057000000000103, 0.0003579860000000011, 0.00035720799999999775, 0.0003608610000000005, 0.0003603060000000012, 0.0003592640000000015, 0.00035977800000000157, 0.00036043099999999786, 0.0003596389999999984, 0.00035627799999999807, 0.00035711100000000023, 0.0003577359999999974, 0.00035915300000000094, 0.0003600970000000002, 0.0003857360000000011, 0.0003854859999999974, 0.0003566530000000019, 0.00035758400000000107, 0.0003606939999999982, 0.00036029200000000164, 0.0003580280000000033, 0.0003567500000000029, 0.0003859719999999983, 0.0003606250000000033, 0.00035904200000000386, 0.0003593610000000025, 0.00035683300000000084, 0.000358054999999996, 0.00038595799999999875, 0.0003579170000000062, 0.00035724999999999646, 0.0003602220000000003, 0.0003566379999999994, 0.00038611099999999454, 0.0003606390000000029, 0.0003596250000000023, 0.0003563889999999986, 0.000360555999999998, 0.0003849719999999973, 0.0003852919999999954, 0.0003860699999999953, 0.0003598050000000047, 0.0003608470000000044, 0.00038591600000000004]</msg>
<status status="PASS" starttime="20201029 18:19:35.727" endtime="20201029 18:19:35.730"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.722" endtime="20201029 18:19:35.730"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:35.734" endtime="20201029 18:19:35.754"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.733" endtime="20201029 18:19:35.754"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.731" endtime="20201029 18:19:35.755"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.349" endtime="20201029 18:19:35.755"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.348" endtime="20201029 18:19:35.755"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:35.764" endtime="20201029 18:19:35.799"></status>
</kw>
<msg timestamp="20201029 18:19:35.799" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:35.763" endtime="20201029 18:19:35.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:35.802" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:35.800" endtime="20201029 18:19:35.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:35.803" endtime="20201029 18:19:35.805"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.760" endtime="20201029 18:19:35.805"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.758" endtime="20201029 18:19:35.805"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:35.812" endtime="20201029 18:19:36.098"></status>
</kw>
<msg timestamp="20201029 18:19:36.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021217069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021575972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:35.811" endtime="20201029 18:19:36.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:36.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021217069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021575972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:36.102" endtime="20201029 18:19:36.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:36.110" endtime="20201029 18:19:36.112"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.808" endtime="20201029 18:19:36.113"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.806" endtime="20201029 18:19:36.113"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:36.117" level="INFO">${RESULT} = [{'diff': 0.0003589029999999972}, {'diff': 0.00038556900000000227}, {'diff': 0.00035694399999999793}, {'diff': 0.00035798599999999764}, {'diff': 0.0003574440000000019}, {'diff': 0.00035934699999999944...</msg>
<status status="PASS" starttime="20201029 18:19:36.114" endtime="20201029 18:19:36.117"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:36.122" level="INFO">${ACCURACY} = {'diff': [0.0003589029999999972, 0.00038556900000000227, 0.00035694399999999793, 0.00035798599999999764, 0.0003574440000000019, 0.00035934699999999944, 0.00038505499999999873, 0.00036034700000000044, ...</msg>
<status status="PASS" starttime="20201029 18:19:36.118" endtime="20201029 18:19:36.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:36.127" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201029 18:19:36.126" endtime="20201029 18:19:36.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:36.129" level="INFO">VALUE: [0.0003589029999999972, 0.00038556900000000227, 0.00035694399999999793, 0.00035798599999999764, 0.0003574440000000019, 0.00035934699999999944, 0.00038505499999999873, 0.00036034700000000044, 0.0003578059999999987, 0.00035861099999999826, 0.00035852700000000085, 0.0003576120000000002, 0.0003856390000000001, 0.0003603749999999996, 0.00036056900000000155, 0.0003610000000000002, 0.000358764000000001, 0.00035768100000000205, 0.0003602359999999999, 0.0003574019999999997, 0.0003593060000000002, 0.0003578189999999988, 0.0003595969999999997, 0.0003578189999999988, 0.0003590969999999992, 0.00035626400000000197, 0.00038604100000000016, 0.0003581660000000035, 0.0003566809999999976, 0.00035977800000000504, 0.0003860560000000027, 0.00038549999999999696, 0.0003603470000000039, 0.00038516699999999876, 0.0003863469999999952, 0.00038508300000000134, 0.0003851389999999996, 0.0003592229999999988, 0.0003576939999999987, 0.0003850829999999944, 0.00035922200000000626, 0.000384820000000001, 0.0003590419999999969, 0.00036080499999999877, 0.00035729199999999517, 0.00035874999999999796, 0.00036097200000000107, 0.00036009700000000366, 0.0003851110000000005, 0.00035836200000000096]</msg>
<status status="PASS" starttime="20201029 18:19:36.128" endtime="20201029 18:19:36.130"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.123" endtime="20201029 18:19:36.131"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:36.134" endtime="20201029 18:19:36.154"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.133" endtime="20201029 18:19:36.155"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.132" endtime="20201029 18:19:36.155"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.756" endtime="20201029 18:19:36.155"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.756" endtime="20201029 18:19:36.155"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:36.164" endtime="20201029 18:19:36.200"></status>
</kw>
<msg timestamp="20201029 18:19:36.201" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:36.163" endtime="20201029 18:19:36.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:36.203" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:36.202" endtime="20201029 18:19:36.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:36.204" endtime="20201029 18:19:36.206"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.160" endtime="20201029 18:19:36.207"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.158" endtime="20201029 18:19:36.207"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:36.214" endtime="20201029 18:19:36.501"></status>
</kw>
<msg timestamp="20201029 18:19:36.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023049611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023411458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:36.212" endtime="20201029 18:19:36.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:36.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023049611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023411458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:36.505" endtime="20201029 18:19:36.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:36.514" endtime="20201029 18:19:36.515"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.209" endtime="20201029 18:19:36.516"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.208" endtime="20201029 18:19:36.516"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:36.520" level="INFO">${RESULT} = [{'diff': 0.0003618469999999985}, {'diff': 0.00035924999999999846}, {'diff': 0.00035962499999999883}, {'diff': 0.00038552799999999957}, {'diff': 0.0003582640000000005}, {'diff': 0.000386110999999998},...</msg>
<status status="PASS" starttime="20201029 18:19:36.517" endtime="20201029 18:19:36.520"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:36.525" level="INFO">${ACCURACY} = {'diff': [0.0003618469999999985, 0.00035924999999999846, 0.00035962499999999883, 0.00038552799999999957, 0.0003582640000000005, 0.000386110999999998, 0.00035980500000000123, 0.0003605139999999993, 0.0...</msg>
<status status="PASS" starttime="20201029 18:19:36.521" endtime="20201029 18:19:36.525"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:36.530" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201029 18:19:36.528" endtime="20201029 18:19:36.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:36.532" level="INFO">VALUE: [0.0003618469999999985, 0.00035924999999999846, 0.00035962499999999883, 0.00038552799999999957, 0.0003582640000000005, 0.000386110999999998, 0.00035980500000000123, 0.0003605139999999993, 0.00035858400000000207, 0.000386417, 0.00035682000000000075, 0.00035976399999999853, 0.00036088899999999965, 0.0003852500000000002, 0.0003590000000000017, 0.0003565409999999984, 0.00036033400000000035, 0.000357861000000001, 0.00035641700000000123, 0.00035723600000000036, 0.000356763999999999, 0.0003607230000000003, 0.000356666999999998, 0.0003607360000000004, 0.0003565700000000005, 0.0003580979999999942, 0.00036008299999999716, 0.0003576250000000003, 0.00036102799999999935, 0.0003600410000000054, 0.0003562219999999963, 0.00036047300000000004, 0.00035633300000000034, 0.00036069500000000115, 0.0003563609999999995, 0.0003605410000000059, 0.0003566950000000041, 0.00035848599999999814, 0.00035744500000000484, 0.000357070000000001, 0.0003595139999999983, 0.0003863469999999952, 0.00038545799999999825, 0.0003591670000000005, 0.00035724999999999646, 0.00038527799999999585, 0.00035772300000000423, 0.00036061100000000373, 0.0003582089999999982, 0.00035736199999999996]</msg>
<status status="PASS" starttime="20201029 18:19:36.531" endtime="20201029 18:19:36.533"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.526" endtime="20201029 18:19:36.534"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:36.538" endtime="20201029 18:19:36.558"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.536" endtime="20201029 18:19:36.558"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.535" endtime="20201029 18:19:36.559"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.156" endtime="20201029 18:19:36.559"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.156" endtime="20201029 18:19:36.559"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:36.568" endtime="20201029 18:19:36.608"></status>
</kw>
<msg timestamp="20201029 18:19:36.609" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:36.567" endtime="20201029 18:19:36.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:36.611" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:36.610" endtime="20201029 18:19:36.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:36.613" endtime="20201029 18:19:36.614"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.564" endtime="20201029 18:19:36.615"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.562" endtime="20201029 18:19:36.615"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:36.622" endtime="20201029 18:19:36.908"></status>
</kw>
<msg timestamp="20201029 18:19:36.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026155556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02653675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:19:36.620" endtime="20201029 18:19:36.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:36.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026155556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02653675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:19:36.913" endtime="20201029 18:19:36.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:36.921" endtime="20201029 18:19:36.923"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.618" endtime="20201029 18:19:36.923"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.616" endtime="20201029 18:19:36.924"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:36.928" level="INFO">${RESULT} = [{'diff': 0.00038119400000000137}, {'diff': 0.0003608750000000001}, {'diff': 0.00035705600000000143}, {'diff': 0.0003607360000000004}, {'diff': 0.0003579860000000011}, {'diff': 0.00035709700000000066}...</msg>
<status status="PASS" starttime="20201029 18:19:36.924" endtime="20201029 18:19:36.928"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:36.932" level="INFO">${ACCURACY} = {'diff': [0.00038119400000000137, 0.0003608750000000001, 0.00035705600000000143, 0.0003607360000000004, 0.0003579860000000011, 0.00035709700000000066, 0.0003574860000000006, 0.000357764, 0.00035797199...</msg>
<status status="PASS" starttime="20201029 18:19:36.929" endtime="20201029 18:19:36.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:36.936" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201029 18:19:36.935" endtime="20201029 18:19:36.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:36.939" level="INFO">VALUE: [0.00038119400000000137, 0.0003608750000000001, 0.00035705600000000143, 0.0003607360000000004, 0.0003579860000000011, 0.00035709700000000066, 0.0003574860000000006, 0.000357764, 0.00035797199999999807, 0.0003582640000000005, 0.00035754200000000236, 0.00035897299999999854, 0.0003574159999999993, 0.0003854439999999987, 0.0003850970000000009, 0.00035718000000000555, 0.0003857640000000037, 0.00035855500000000345, 0.000358958999999999, 0.00038523700000000355, 0.0003855139999999965, 0.00035969500000000015, 0.0003582359999999979, 0.0003579159999999998, 0.0003564029999999982, 0.00038556900000000227, 0.00038567999999999936, 0.00035908400000000257, 0.00035711100000000023, 0.00035743099999999833, 0.0003580690000000025, 0.0003602229999999998, 0.0003856390000000001, 0.0003595269999999984, 0.0003564029999999982, 0.00036067999999999517, 0.00035891700000000026, 0.0003594999999999987, 0.0003860829999999954, 0.0003568889999999991, 0.0003584030000000002, 0.00035677800000000204, 0.00036086099999999705, 0.0003590419999999969, 0.00036004200000000486, 0.0003570140000000027, 0.00035959700000000316, 0.0003591940000000002, 0.00035672300000000323, 0.0003857079999999985]</msg>
<status status="PASS" starttime="20201029 18:19:36.937" endtime="20201029 18:19:36.940"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.933" endtime="20201029 18:19:36.941"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:36.945" endtime="20201029 18:19:36.964"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.943" endtime="20201029 18:19:36.965"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.942" endtime="20201029 18:19:36.965"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.560" endtime="20201029 18:19:36.966"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.559" endtime="20201029 18:19:36.966"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:36.975" endtime="20201029 18:19:37.010"></status>
</kw>
<msg timestamp="20201029 18:19:37.010" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:36.973" endtime="20201029 18:19:37.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:37.013" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:37.011" endtime="20201029 18:19:37.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:37.014" endtime="20201029 18:19:37.016"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.970" endtime="20201029 18:19:37.016"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.968" endtime="20201029 18:19:37.017"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:37.023" endtime="20201029 18:19:37.310"></status>
</kw>
<msg timestamp="20201029 18:19:37.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0214635, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021847958, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:19:37.022" endtime="20201029 18:19:37.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:37.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0214635, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021847958, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:19:37.314" endtime="20201029 18:19:37.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:37.323" endtime="20201029 18:19:37.324"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.019" endtime="20201029 18:19:37.325"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.017" endtime="20201029 18:19:37.325"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:37.329" level="INFO">${RESULT} = [{'diff': 0.0003844580000000007}, {'diff': 0.00035895900000000244}, {'diff': 0.0003577080000000017}, {'diff': 0.00035673599999999986}, {'diff': 0.00038552799999999957}, {'diff': 0.00035804200000000286...</msg>
<status status="PASS" starttime="20201029 18:19:37.326" endtime="20201029 18:19:37.329"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:37.337" level="INFO">${ACCURACY} = {'diff': [0.0003844580000000007, 0.00035895900000000244, 0.0003577080000000017, 0.00035673599999999986, 0.00038552799999999957, 0.00035804200000000286, 0.0003589030000000007, 0.00035902799999999735, 0...</msg>
<status status="PASS" starttime="20201029 18:19:37.330" endtime="20201029 18:19:37.337"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:37.341" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201029 18:19:37.340" endtime="20201029 18:19:37.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:37.344" level="INFO">VALUE: [0.0003844580000000007, 0.00035895900000000244, 0.0003577080000000017, 0.00035673599999999986, 0.00038552799999999957, 0.00035804200000000286, 0.0003589030000000007, 0.00035902799999999735, 0.00038618099999999933, 0.0003573610000000005, 0.00038598600000000136, 0.00038649999999999796, 0.00038620900000000194, 0.000386514000000001, 0.00038598600000000136, 0.00035952700000000185, 0.00035650000000000265, 0.000357070000000001, 0.0003588890000000011, 0.00035759700000000116, 0.00035856899999999955, 0.00035873600000000186, 0.00035930500000000073, 0.00038566699999999926, 0.00038572200000000154, 0.00035794500000000187, 0.00038612500000000105, 0.00038486100000000023, 0.00035815299999999994, 0.0003585280000000038, 0.0003581809999999991, 0.0003574720000000045, 0.00035787500000000055, 0.0003850550000000022, 0.00038529200000000235, 0.00035986099999999605, 0.0003572500000000034, 0.00035766599999999954, 0.0003593890000000016, 0.0003606390000000029, 0.00035948599999999914, 0.00038568100000000577, 0.00035636199999999896, 0.0003857780000000033, 0.00036086099999999705, 0.0003857360000000046, 0.0003861800000000068, 0.0003593339999999959, 0.000385611000000001, 0.0003853880000000004]</msg>
<status status="PASS" starttime="20201029 18:19:37.343" endtime="20201029 18:19:37.345"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.338" endtime="20201029 18:19:37.345"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:37.349" endtime="20201029 18:19:37.369"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.348" endtime="20201029 18:19:37.369"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.346" endtime="20201029 18:19:37.370"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.967" endtime="20201029 18:19:37.370"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.966" endtime="20201029 18:19:37.370"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:37.379" endtime="20201029 18:19:37.416"></status>
</kw>
<msg timestamp="20201029 18:19:37.417" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:37.377" endtime="20201029 18:19:37.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:37.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:37.418" endtime="20201029 18:19:37.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:37.420" endtime="20201029 18:19:37.422"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.375" endtime="20201029 18:19:37.423"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.373" endtime="20201029 18:19:37.423"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:37.430" endtime="20201029 18:19:37.717"></status>
</kw>
<msg timestamp="20201029 18:19:37.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024117667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024486389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:37.428" endtime="20201029 18:19:37.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:37.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024117667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024486389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:37.722" endtime="20201029 18:19:37.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:37.730" endtime="20201029 18:19:37.732"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.426" endtime="20201029 18:19:37.732"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.424" endtime="20201029 18:19:37.733"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:37.737" level="INFO">${RESULT} = [{'diff': 0.0003687220000000019}, {'diff': 0.000386207999999999}, {'diff': 0.0003589999999999982}, {'diff': 0.0003578329999999984}, {'diff': 0.00035926399999999803}, {'diff': 0.00035845900000000194}, ...</msg>
<status status="PASS" starttime="20201029 18:19:37.733" endtime="20201029 18:19:37.737"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:37.741" level="INFO">${ACCURACY} = {'diff': [0.0003687220000000019, 0.000386207999999999, 0.0003589999999999982, 0.0003578329999999984, 0.00035926399999999803, 0.00035845900000000194, 0.0003851529999999992, 0.00035791699999999926, 0.00...</msg>
<status status="PASS" starttime="20201029 18:19:37.738" endtime="20201029 18:19:37.741"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:37.745" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201029 18:19:37.744" endtime="20201029 18:19:37.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:37.748" level="INFO">VALUE: [0.0003687220000000019, 0.000386207999999999, 0.0003589999999999982, 0.0003578329999999984, 0.00035926399999999803, 0.00035845900000000194, 0.0003851529999999992, 0.00035791699999999926, 0.0003568340000000003, 0.0003571249999999998, 0.00038562500000000055, 0.00038655500000000023, 0.00035941700000000076, 0.0003578199999999983, 0.00035677799999999857, 0.00035723600000000036, 0.0003857779999999998, 0.0003594999999999987, 0.00038627700000000084, 0.0003581809999999991, 0.00036076399999999953, 0.0003866390000000011, 0.00035792999999999936, 0.0003597219999999998, 0.00035797199999999807, 0.0003858060000000024, 0.00038544499999999815, 0.00038634700000000216, 0.00036004200000000486, 0.0003586390000000009, 0.00036030599999999774, 0.00035843099999999933, 0.00035976299999999906, 0.0003575280000000028, 0.00035976299999999906, 0.0003590139999999978, 0.00035993100000000083, 0.00036074999999999996, 0.00035981899999999734, 0.00036054099999999895, 0.0003569999999999962, 0.0003566249999999993, 0.00035887500000000155, 0.00035920799999999975, 0.000386417, 0.0003866379999999947, 0.00035993000000000136, 0.0003591800000000006, 0.00035980499999999777, 0.0003578749999999936]</msg>
<status status="PASS" starttime="20201029 18:19:37.746" endtime="20201029 18:19:37.749"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.742" endtime="20201029 18:19:37.749"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:37.753" endtime="20201029 18:19:37.773"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.751" endtime="20201029 18:19:37.773"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.750" endtime="20201029 18:19:37.773"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.371" endtime="20201029 18:19:37.774"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.370" endtime="20201029 18:19:37.774"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:37.783" endtime="20201029 18:19:37.819"></status>
</kw>
<msg timestamp="20201029 18:19:37.820" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:37.781" endtime="20201029 18:19:37.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:37.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:37.821" endtime="20201029 18:19:37.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:37.824" endtime="20201029 18:19:37.825"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.779" endtime="20201029 18:19:37.826"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.776" endtime="20201029 18:19:37.826"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:37.833" endtime="20201029 18:19:38.120"></status>
</kw>
<msg timestamp="20201029 18:19:38.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022172028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022544, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:19:37.831" endtime="20201029 18:19:38.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:38.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022172028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022544, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:19:38.124" endtime="20201029 18:19:38.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:38.133" endtime="20201029 18:19:38.134"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.829" endtime="20201029 18:19:38.135"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.827" endtime="20201029 18:19:38.135"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:38.139" level="INFO">${RESULT} = [{'diff': 0.00037197200000000166}, {'diff': 0.0003565829999999971}, {'diff': 0.0003589030000000007}, {'diff': 0.0003607220000000008}, {'diff': 0.0003609029999999992}, {'diff': 0.0003600830000000006}, ...</msg>
<status status="PASS" starttime="20201029 18:19:38.136" endtime="20201029 18:19:38.139"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:38.143" level="INFO">${ACCURACY} = {'diff': [0.00037197200000000166, 0.0003565829999999971, 0.0003589030000000007, 0.0003607220000000008, 0.0003609029999999992, 0.0003600830000000006, 0.00035838899999999715, 0.0003862919999999999, 0.00...</msg>
<status status="PASS" starttime="20201029 18:19:38.140" endtime="20201029 18:19:38.144"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:38.148" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201029 18:19:38.147" endtime="20201029 18:19:38.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:38.151" level="INFO">VALUE: [0.00037197200000000166, 0.0003565829999999971, 0.0003589030000000007, 0.0003607220000000008, 0.0003609029999999992, 0.0003600830000000006, 0.00035838899999999715, 0.0003862919999999999, 0.00035683300000000084, 0.000356666999999998, 0.0003574029999999992, 0.000359151999999998, 0.0003588199999999993, 0.00038543100000000205, 0.00035740300000000266, 0.0003851939999999984, 0.0003572639999999995, 0.0003594999999999987, 0.0003588189999999998, 0.0003589449999999994, 0.00038641600000000054, 0.0003593610000000025, 0.00035705599999999796, 0.0003863329999999991, 0.0003577500000000039, 0.0003569029999999987, 0.0003567370000000028, 0.00035798599999999764, 0.00038555599999999524, 0.0003567219999999968, 0.0003576810000000055, 0.00036008400000000357, 0.0003601250000000028, 0.00038636100000000173, 0.0003861390000000006, 0.0003577500000000039, 0.00035908400000000257, 0.00035658400000000007, 0.00036043000000000186, 0.00035761100000000073, 0.00035805600000000243, 0.0003852780000000028, 0.00035848599999999814, 0.000360959000000001, 0.0003589999999999982, 0.00035926399999999803, 0.00038505499999999526, 0.0003855829999999949, 0.00036094400000000193, 0.0003572779999999956]</msg>
<status status="PASS" starttime="20201029 18:19:38.149" endtime="20201029 18:19:38.159"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.144" endtime="20201029 18:19:38.160"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:38.163" endtime="20201029 18:19:38.183"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.162" endtime="20201029 18:19:38.184"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.161" endtime="20201029 18:19:38.184"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.775" endtime="20201029 18:19:38.184"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.774" endtime="20201029 18:19:38.184"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:38.193" endtime="20201029 18:19:38.231"></status>
</kw>
<msg timestamp="20201029 18:19:38.231" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:38.192" endtime="20201029 18:19:38.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:38.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:38.232" endtime="20201029 18:19:38.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:38.235" endtime="20201029 18:19:38.237"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.189" endtime="20201029 18:19:38.237"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.187" endtime="20201029 18:19:38.238"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:38.244" endtime="20201029 18:19:38.531"></status>
</kw>
<msg timestamp="20201029 18:19:38.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02371625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024076556, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:19:38.243" endtime="20201029 18:19:38.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:38.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02371625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024076556, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:19:38.536" endtime="20201029 18:19:38.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:38.544" endtime="20201029 18:19:38.546"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.240" endtime="20201029 18:19:38.546"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.238" endtime="20201029 18:19:38.547"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:38.551" level="INFO">${RESULT} = [{'diff': 0.00036030599999999774}, {'diff': 0.0003849030000000024}, {'diff': 0.00035722300000000026}, {'diff': 0.0003598890000000021}, {'diff': 0.00035627799999999807}, {'diff': 0.0003597630000000025}...</msg>
<status status="PASS" starttime="20201029 18:19:38.547" endtime="20201029 18:19:38.551"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:38.556" level="INFO">${ACCURACY} = {'diff': [0.00036030599999999774, 0.0003849030000000024, 0.00035722300000000026, 0.0003598890000000021, 0.00035627799999999807, 0.0003597630000000025, 0.00035623600000000283, 0.00035944400000000043, 0...</msg>
<status status="PASS" starttime="20201029 18:19:38.552" endtime="20201029 18:19:38.556"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:38.561" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201029 18:19:38.560" endtime="20201029 18:19:38.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:38.564" level="INFO">VALUE: [0.00036030599999999774, 0.0003849030000000024, 0.00035722300000000026, 0.0003598890000000021, 0.00035627799999999807, 0.0003597630000000025, 0.00035623600000000283, 0.00035944400000000043, 0.00035655600000000093, 0.00036094400000000193, 0.00035965300000000144, 0.0003599999999999992, 0.0003581939999999992, 0.0003586939999999997, 0.0003579020000000002, 0.0003850139999999995, 0.00035997200000000007, 0.00035756999999999803, 0.00036079200000000214, 0.00035674999999999943, 0.00035811100000000123, 0.0003562909999999947, 0.00035659700000000016, 0.000357666999999999, 0.0003595139999999983, 0.00035630499999999427, 0.0003571389999999994, 0.0003860269999999971, 0.000357181000000005, 0.00035809700000000166, 0.0003600690000000045, 0.00036008299999999716, 0.00035729199999999517, 0.00036079199999999867, 0.0003583890000000006, 0.0003856670000000062, 0.00038534800000000063, 0.0003578199999999948, 0.0003582089999999982, 0.0003603890000000026, 0.00036108299999999816, 0.0003859169999999995, 0.00035627800000000154, 0.00035672300000000323, 0.00036015200000000247, 0.00038633400000000206, 0.00035729199999999517, 0.00035759700000000116, 0.0003571669999999985, 0.00035745800000000494]</msg>
<status status="PASS" starttime="20201029 18:19:38.563" endtime="20201029 18:19:38.565"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.557" endtime="20201029 18:19:38.566"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:38.570" endtime="20201029 18:19:38.589"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.568" endtime="20201029 18:19:38.590"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.567" endtime="20201029 18:19:38.590"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.185" endtime="20201029 18:19:38.590"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.185" endtime="20201029 18:19:38.591"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:38.600" endtime="20201029 18:19:38.637"></status>
</kw>
<msg timestamp="20201029 18:19:38.638" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:38.598" endtime="20201029 18:19:38.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:38.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:38.639" endtime="20201029 18:19:38.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:38.642" endtime="20201029 18:19:38.643"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.595" endtime="20201029 18:19:38.644"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.593" endtime="20201029 18:19:38.644"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:38.651" endtime="20201029 18:19:38.939"></status>
</kw>
<msg timestamp="20201029 18:19:38.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024496181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024875639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:38.649" endtime="20201029 18:19:38.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:38.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024496181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024875639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:38.943" endtime="20201029 18:19:38.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:38.952" endtime="20201029 18:19:38.953"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.647" endtime="20201029 18:19:38.954"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.645" endtime="20201029 18:19:38.954"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:38.958" level="INFO">${RESULT} = [{'diff': 0.00037945800000000265}, {'diff': 0.00038526399999999975}, {'diff': 0.0003566800000000016}, {'diff': 0.00035847299999999804}, {'diff': 0.0003609580000000015}, {'diff': 0.00038612500000000105...</msg>
<status status="PASS" starttime="20201029 18:19:38.955" endtime="20201029 18:19:38.959"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:38.963" level="INFO">${ACCURACY} = {'diff': [0.00037945800000000265, 0.00038526399999999975, 0.0003566800000000016, 0.00035847299999999804, 0.0003609580000000015, 0.00038612500000000105, 0.00035652699999999884, 0.00035655500000000145, ...</msg>
<status status="PASS" starttime="20201029 18:19:38.959" endtime="20201029 18:19:38.963"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:38.967" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201029 18:19:38.966" endtime="20201029 18:19:38.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:38.970" level="INFO">VALUE: [0.00037945800000000265, 0.00038526399999999975, 0.0003566800000000016, 0.00035847299999999804, 0.0003609580000000015, 0.00038612500000000105, 0.00035652699999999884, 0.00035655500000000145, 0.0003854719999999978, 0.0003866530000000007, 0.00035686199999999946, 0.00035668100000000105, 0.00035825000000000093, 0.0003608330000000014, 0.0003576799999999991, 0.00035688799999999965, 0.000385723000000001, 0.00036030499999999827, 0.0003588340000000023, 0.00038652700000000456, 0.0003582500000000044, 0.0003593470000000029, 0.00038662500000000155, 0.00035982000000000375, 0.0003594860000000061, 0.0003604019999999958, 0.0003854859999999974, 0.0003566799999999981, 0.00035626400000000197, 0.0003566119999999992, 0.0003586950000000061, 0.00038538899999999987, 0.0003850980000000004, 0.0003573470000000009, 0.0003608889999999962, 0.00036126400000000003, 0.0003861110000000015, 0.0003588329999999959, 0.0003859860000000048, 0.0003587359999999984, 0.00038549999999999696, 0.0003595139999999983, 0.00038644499999999915, 0.00038606900000000277, 0.0003589449999999994, 0.00036020800000000075, 0.00036015200000000247, 0.00035765199999999997, 0.00038619400000000637, 0.0003598329999999969]</msg>
<status status="PASS" starttime="20201029 18:19:38.968" endtime="20201029 18:19:38.970"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.964" endtime="20201029 18:19:38.971"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:38.975" endtime="20201029 18:19:38.994"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.973" endtime="20201029 18:19:38.995"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.972" endtime="20201029 18:19:38.995"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.591" endtime="20201029 18:19:38.996"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.591" endtime="20201029 18:19:38.996"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:39.005" endtime="20201029 18:19:39.044"></status>
</kw>
<msg timestamp="20201029 18:19:39.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:39.003" endtime="20201029 18:19:39.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:39.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:39.046" endtime="20201029 18:19:39.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:39.048" endtime="20201029 18:19:39.050"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.001" endtime="20201029 18:19:39.051"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.998" endtime="20201029 18:19:39.051"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:39.058" endtime="20201029 18:19:39.344"></status>
</kw>
<msg timestamp="20201029 18:19:39.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026215833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026573139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:39.056" endtime="20201029 18:19:39.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:39.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026215833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026573139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:39.348" endtime="20201029 18:19:39.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:39.357" endtime="20201029 18:19:39.358"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.053" endtime="20201029 18:19:39.359"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.052" endtime="20201029 18:19:39.360"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:39.364" level="INFO">${RESULT} = [{'diff': 0.0003573059999999982}, {'diff': 0.00035659799999999964}, {'diff': 0.00036079200000000214}, {'diff': 0.00035865300000000044}, {'diff': 0.0003603330000000009}, {'diff': 0.00035943000000000086...</msg>
<status status="PASS" starttime="20201029 18:19:39.360" endtime="20201029 18:19:39.364"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:39.368" level="INFO">${ACCURACY} = {'diff': [0.0003573059999999982, 0.00035659799999999964, 0.00036079200000000214, 0.00035865300000000044, 0.0003603330000000009, 0.00035943000000000086, 0.00036048600000000014, 0.0003578890000000001, 0...</msg>
<status status="PASS" starttime="20201029 18:19:39.365" endtime="20201029 18:19:39.368"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:39.372" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201029 18:19:39.371" endtime="20201029 18:19:39.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:39.375" level="INFO">VALUE: [0.0003573059999999982, 0.00035659799999999964, 0.00036079200000000214, 0.00035865300000000044, 0.0003603330000000009, 0.00035943000000000086, 0.00036048600000000014, 0.0003578890000000001, 0.0003592090000000027, 0.00035751399999999975, 0.00035859799999999817, 0.00036084700000000094, 0.000359263000000002, 0.00035700000000000315, 0.0003586390000000009, 0.0003865840000000023, 0.00035800000000000415, 0.0003569860000000036, 0.00036030499999999827, 0.0003856659999999998, 0.0003851110000000005, 0.00035824999999999746, 0.0003603050000000052, 0.00035691699999999826, 0.00038529200000000235, 0.0003859859999999979, 0.00035719499999999765, 0.0003582500000000044, 0.00035924999999999846, 0.0003590690000000035, 0.00038606899999999583, 0.000358861000000002, 0.0003571249999999998, 0.00036099999999999327, 0.000359346999999996, 0.00036048600000000014, 0.00036009800000000314, 0.00035948599999999914, 0.0003586250000000013, 0.00036027800000000554, 0.0003567500000000029, 0.00035729199999999517, 0.0003602359999999999, 0.00035659700000000016, 0.00036070800000000125, 0.0003576250000000003, 0.00038631999999999556, 0.00035797199999999807, 0.0003864439999999997, 0.00035809700000000166]</msg>
<status status="PASS" starttime="20201029 18:19:39.373" endtime="20201029 18:19:39.376"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.369" endtime="20201029 18:19:39.377"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:39.381" endtime="20201029 18:19:39.400"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.379" endtime="20201029 18:19:39.401"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.378" endtime="20201029 18:19:39.401"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.997" endtime="20201029 18:19:39.402"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.996" endtime="20201029 18:19:39.402"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:39.411" endtime="20201029 18:19:39.446"></status>
</kw>
<msg timestamp="20201029 18:19:39.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:39.409" endtime="20201029 18:19:39.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:39.449" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:39.447" endtime="20201029 18:19:39.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:39.450" endtime="20201029 18:19:39.452"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.406" endtime="20201029 18:19:39.452"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.404" endtime="20201029 18:19:39.453"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:39.459" endtime="20201029 18:19:39.746"></status>
</kw>
<msg timestamp="20201029 18:19:39.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022127875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022508556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:39.458" endtime="20201029 18:19:39.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:39.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022127875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022508556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:39.750" endtime="20201029 18:19:39.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:39.759" endtime="20201029 18:19:39.760"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.455" endtime="20201029 18:19:39.761"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.453" endtime="20201029 18:19:39.761"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:39.765" level="INFO">${RESULT} = [{'diff': 0.0003806809999999973}, {'diff': 0.00038637499999999783}, {'diff': 0.0003584030000000002}, {'diff': 0.0003605830000000011}, {'diff': 0.00035875000000000143}, {'diff': 0.00038494400000000165}...</msg>
<status status="PASS" starttime="20201029 18:19:39.762" endtime="20201029 18:19:39.766"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:39.770" level="INFO">${ACCURACY} = {'diff': [0.0003806809999999973, 0.00038637499999999783, 0.0003584030000000002, 0.0003605830000000011, 0.00035875000000000143, 0.00038494400000000165, 0.0003611389999999999, 0.0003603879999999997, 0.0...</msg>
<status status="PASS" starttime="20201029 18:19:39.766" endtime="20201029 18:19:39.771"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:39.775" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201029 18:19:39.774" endtime="20201029 18:19:39.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:39.778" level="INFO">VALUE: [0.0003806809999999973, 0.00038637499999999783, 0.0003584030000000002, 0.0003605830000000011, 0.00035875000000000143, 0.00038494400000000165, 0.0003611389999999999, 0.0003603879999999997, 0.0003576950000000016, 0.00035644500000000037, 0.00036093099999999836, 0.0003857500000000007, 0.00038540299999999944, 0.00036057000000000103, 0.00038566699999999926, 0.00035777799999999957, 0.00035644500000000037, 0.000359360999999999, 0.0003575829999999981, 0.00035626400000000197, 0.00036041700000000176, 0.00035861099999999826, 0.0003856659999999998, 0.00035851400000000075, 0.0003581939999999992, 0.00036047300000000004, 0.00035623600000000283, 0.0003863200000000025, 0.00038652800000000404, 0.0003865970000000024, 0.00038611099999999454, 0.0003573889999999996, 0.0003565410000000019, 0.000358667, 0.0003593340000000028, 0.00038611099999999454, 0.0003611250000000038, 0.0003571669999999985, 0.0003862639999999973, 0.00038551400000000347, 0.0003859439999999992, 0.00036093000000000236, 0.0003583889999999937, 0.00035929100000000463, 0.00038622299999999804, 0.0003586800000000001, 0.0003567080000000042, 0.0003866530000000007, 0.0003864309999999996, 0.0003564720000000035]</msg>
<status status="PASS" starttime="20201029 18:19:39.776" endtime="20201029 18:19:39.778"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.771" endtime="20201029 18:19:39.779"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:39.783" endtime="20201029 18:19:39.805"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.781" endtime="20201029 18:19:39.806"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.780" endtime="20201029 18:19:39.807"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.403" endtime="20201029 18:19:39.807"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.402" endtime="20201029 18:19:39.808"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:39.824" endtime="20201029 18:19:39.867"></status>
</kw>
<msg timestamp="20201029 18:19:39.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:39.820" endtime="20201029 18:19:39.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:39.870" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:39.869" endtime="20201029 18:19:39.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:39.871" endtime="20201029 18:19:39.873"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.817" endtime="20201029 18:19:39.874"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.814" endtime="20201029 18:19:39.874"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:39.881" endtime="20201029 18:19:40.169"></status>
</kw>
<msg timestamp="20201029 18:19:40.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037103389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037478542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:39.880" endtime="20201029 18:19:40.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:40.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037103389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037478542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:40.173" endtime="20201029 18:19:40.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:40.181" endtime="20201029 18:19:40.183"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.877" endtime="20201029 18:19:40.184"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.875" endtime="20201029 18:19:40.184"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:40.188" level="INFO">${RESULT} = [{'diff': 0.00037515299999999613}, {'diff': 0.0003581799999999996}, {'diff': 0.0003561669999999975}, {'diff': 0.00035979199999999767}, {'diff': 0.0003575689999999951}, {'diff': 0.00035937500000000205}...</msg>
<status status="PASS" starttime="20201029 18:19:40.185" endtime="20201029 18:19:40.188"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:40.192" level="INFO">${ACCURACY} = {'diff': [0.00037515299999999613, 0.0003581799999999996, 0.0003561669999999975, 0.00035979199999999767, 0.0003575689999999951, 0.00035937500000000205, 0.0003568470000000004, 0.0003592359999999989, 0.0...</msg>
<status status="PASS" starttime="20201029 18:19:40.189" endtime="20201029 18:19:40.192"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:40.197" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201029 18:19:40.196" endtime="20201029 18:19:40.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:40.199" level="INFO">VALUE: [0.00037515299999999613, 0.0003581799999999996, 0.0003561669999999975, 0.00035979199999999767, 0.0003575689999999951, 0.00035937500000000205, 0.0003568470000000004, 0.0003592359999999989, 0.00038575000000000415, 0.0003568190000000013, 0.00035904099999999745, 0.00035791600000000673, 0.00036008400000000357, 0.0003850420000000021, 0.0003592229999999988, 0.0003851389999999996, 0.0003609580000000015, 0.0003565830000000006, 0.0003608469999999975, 0.00036005600000000443, 0.00035750000000000365, 0.00035748599999999714, 0.00035644400000000437, 0.0003596940000000007, 0.0003574029999999992, 0.00035842999999999986, 0.0003576250000000003, 0.00038557000000000174, 0.0003590280000000043, 0.00035605500000000095, 0.00035626400000000197, 0.00038486100000000023, 0.00035997200000000007, 0.0003852639999999963, 0.0003561249999999988, 0.00035904200000000386, 0.00035997200000000007, 0.00035844399999999943, 0.00035605500000000095, 0.0003583199999999953, 0.0003563190000000008, 0.0003854860000000043, 0.00035837500000000105, 0.00038512500000000005, 0.0003605419999999984, 0.0003570830000000011, 0.0003568190000000013, 0.00035769499999999815, 0.00038490299999999894, 0.0003580129999999973]</msg>
<status status="PASS" starttime="20201029 18:19:40.198" endtime="20201029 18:19:40.200"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.193" endtime="20201029 18:19:40.200"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:40.204" endtime="20201029 18:19:40.224"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.203" endtime="20201029 18:19:40.224"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.201" endtime="20201029 18:19:40.225"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.809" endtime="20201029 18:19:40.225"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.808" endtime="20201029 18:19:40.225"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:40.234" endtime="20201029 18:19:40.270"></status>
</kw>
<msg timestamp="20201029 18:19:40.271" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:40.233" endtime="20201029 18:19:40.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:40.274" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:40.272" endtime="20201029 18:19:40.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:40.275" endtime="20201029 18:19:40.276"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.230" endtime="20201029 18:19:40.277"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.228" endtime="20201029 18:19:40.277"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:40.284" endtime="20201029 18:19:40.570"></status>
</kw>
<msg timestamp="20201029 18:19:40.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022619986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022994222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:40.282" endtime="20201029 18:19:40.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:40.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022619986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022994222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:40.575" endtime="20201029 18:19:40.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:40.583" endtime="20201029 18:19:40.585"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.280" endtime="20201029 18:19:40.586"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.278" endtime="20201029 18:19:40.586"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:40.590" level="INFO">${RESULT} = [{'diff': 0.000374236}, {'diff': 0.000357070000000001}, {'diff': 0.00035837500000000105}, {'diff': 0.00035640300000000166}, {'diff': 0.00035970800000000025}, {'diff': 0.00035845900000000194}, {'diff':...</msg>
<status status="PASS" starttime="20201029 18:19:40.587" endtime="20201029 18:19:40.591"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:40.595" level="INFO">${ACCURACY} = {'diff': [0.000374236, 0.000357070000000001, 0.00035837500000000105, 0.00035640300000000166, 0.00035970800000000025, 0.00035845900000000194, 0.0003567080000000007, 0.0003605549999999985, 0.00035726400...</msg>
<status status="PASS" starttime="20201029 18:19:40.592" endtime="20201029 18:19:40.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:40.600" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201029 18:19:40.599" endtime="20201029 18:19:40.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:40.602" level="INFO">VALUE: [0.000374236, 0.000357070000000001, 0.00035837500000000105, 0.00035640300000000166, 0.00035970800000000025, 0.00035845900000000194, 0.0003567080000000007, 0.0003605549999999985, 0.00035726400000000297, 0.00035844500000000237, 0.0003857079999999985, 0.0003578060000000022, 0.0003566950000000006, 0.00036097300000000054, 0.0003588609999999985, 0.0003563609999999995, 0.0003601250000000028, 0.0003851389999999996, 0.0003611809999999986, 0.0003589999999999982, 0.00038520900000000094, 0.0003604160000000023, 0.00035874999999999796, 0.00035811099999999776, 0.000386319000000003, 0.00038549999999999696, 0.00038533400000000106, 0.000358555999999996, 0.0003851110000000005, 0.0003609309999999949, 0.0003608469999999975, 0.00038612500000000105, 0.0003579449999999984, 0.00038645799999999925, 0.00038613800000000115, 0.0003576250000000003, 0.0003865699999999958, 0.00035926399999999803, 0.00035787500000000055, 0.00036104099999999945, 0.0003863200000000025, 0.00035997299999999954, 0.0003861530000000002, 0.00036011100000000323, 0.0003568750000000065, 0.00035848599999999814, 0.00035665299999999844, 0.0003576389999999999, 0.0003859439999999992, 0.0003858059999999955]</msg>
<status status="PASS" starttime="20201029 18:19:40.601" endtime="20201029 18:19:40.604"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.596" endtime="20201029 18:19:40.605"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:40.608" endtime="20201029 18:19:40.628"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.607" endtime="20201029 18:19:40.629"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.606" endtime="20201029 18:19:40.629"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.226" endtime="20201029 18:19:40.629"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.226" endtime="20201029 18:19:40.629"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:40.638" endtime="20201029 18:19:40.677"></status>
</kw>
<msg timestamp="20201029 18:19:40.678" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:40.637" endtime="20201029 18:19:40.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:40.680" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:40.679" endtime="20201029 18:19:40.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:40.681" endtime="20201029 18:19:40.683"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.634" endtime="20201029 18:19:40.683"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.632" endtime="20201029 18:19:40.684"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:40.690" endtime="20201029 18:19:40.977"></status>
</kw>
<msg timestamp="20201029 18:19:40.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025442875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025829167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:40.689" endtime="20201029 18:19:40.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:40.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025442875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025829167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:40.981" endtime="20201029 18:19:40.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:40.990" endtime="20201029 18:19:40.991"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.686" endtime="20201029 18:19:40.992"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.685" endtime="20201029 18:19:40.992"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:40.996" level="INFO">${RESULT} = [{'diff': 0.0003862919999999999}, {'diff': 0.00035895900000000244}, {'diff': 0.00035843099999999933}, {'diff': 0.0003587359999999984}, {'diff': 0.00035974999999999896}, {'diff': 0.00036038899999999915...</msg>
<status status="PASS" starttime="20201029 18:19:40.993" endtime="20201029 18:19:40.996"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:41.003" level="INFO">${ACCURACY} = {'diff': [0.0003862919999999999, 0.00035895900000000244, 0.00035843099999999933, 0.0003587359999999984, 0.00035974999999999896, 0.00036038899999999915, 0.00035993000000000136, 0.00038549999999999696, ...</msg>
<status status="PASS" starttime="20201029 18:19:40.997" endtime="20201029 18:19:41.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:41.008" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201029 18:19:41.007" endtime="20201029 18:19:41.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:41.010" level="INFO">VALUE: [0.0003862919999999999, 0.00035895900000000244, 0.00035843099999999933, 0.0003587359999999984, 0.00035974999999999896, 0.00036038899999999915, 0.00035993000000000136, 0.00038549999999999696, 0.00035970800000000025, 0.00035891700000000026, 0.0003579579999999985, 0.00035905599999999996, 0.0003599169999999978, 0.00038505499999999873, 0.00035759700000000116, 0.0003603749999999961, 0.0003607220000000008, 0.0003607220000000008, 0.00035659700000000016, 0.00036047200000000057, 0.000358555999999996, 0.0003590139999999978, 0.00038472199999999707, 0.0003851110000000005, 0.00035965200000000197, 0.0003591670000000005, 0.0003598329999999969, 0.0003855550000000027, 0.0003848339999999936, 0.00038567999999999936, 0.000357958999999998, 0.0003605689999999981, 0.000386319000000003, 0.0003588060000000032, 0.00035883300000000284, 0.00036087500000000355, 0.00036048600000000014, 0.0003861530000000002, 0.00035848599999999814, 0.0003586390000000009, 0.0003855279999999961, 0.00035765299999999944, 0.00038506899999999483, 0.00035676400000000247, 0.0003588470000000024, 0.00038491599999999904, 0.00035947199999999957, 0.00035704200000000186, 0.00036041700000000176, 0.00038545799999999825]</msg>
<status status="PASS" starttime="20201029 18:19:41.009" endtime="20201029 18:19:41.011"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.004" endtime="20201029 18:19:41.012"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:41.015" endtime="20201029 18:19:41.035"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.014" endtime="20201029 18:19:41.035"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.013" endtime="20201029 18:19:41.035"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.630" endtime="20201029 18:19:41.036"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.630" endtime="20201029 18:19:41.036"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:41.047" endtime="20201029 18:19:41.084"></status>
</kw>
<msg timestamp="20201029 18:19:41.085" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:41.045" endtime="20201029 18:19:41.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:41.087" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:41.086" endtime="20201029 18:19:41.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:41.088" endtime="20201029 18:19:41.090"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.042" endtime="20201029 18:19:41.090"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.039" endtime="20201029 18:19:41.091"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:41.097" endtime="20201029 18:19:41.384"></status>
</kw>
<msg timestamp="20201029 18:19:41.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025744792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026110444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:41.096" endtime="20201029 18:19:41.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:41.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025744792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026110444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:41.388" endtime="20201029 18:19:41.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:41.396" endtime="20201029 18:19:41.398"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.093" endtime="20201029 18:19:41.398"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.091" endtime="20201029 18:19:41.399"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:41.403" level="INFO">${RESULT} = [{'diff': 0.00036565200000000103}, {'diff': 0.00035630499999999773}, {'diff': 0.00038638900000000087}, {'diff': 0.0003566800000000016}, {'diff': 0.0003862780000000003}, {'diff': 0.0003568060000000012}...</msg>
<status status="PASS" starttime="20201029 18:19:41.400" endtime="20201029 18:19:41.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:41.407" level="INFO">${ACCURACY} = {'diff': [0.00036565200000000103, 0.00035630499999999773, 0.00038638900000000087, 0.0003566800000000016, 0.0003862780000000003, 0.0003568060000000012, 0.00036058299999999766, 0.000359652999999998, 0.0...</msg>
<status status="PASS" starttime="20201029 18:19:41.404" endtime="20201029 18:19:41.407"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:41.411" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201029 18:19:41.410" endtime="20201029 18:19:41.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:41.413" level="INFO">VALUE: [0.00036565200000000103, 0.00035630499999999773, 0.00038638900000000087, 0.0003566800000000016, 0.0003862780000000003, 0.0003568060000000012, 0.00036058299999999766, 0.000359652999999998, 0.00035686199999999946, 0.0003854170000000025, 0.0003584020000000007, 0.0003570280000000023, 0.0003601670000000015, 0.0003578189999999988, 0.0003862499999999977, 0.00038599999999999746, 0.0003600419999999979, 0.00035776400000000347, 0.00038525000000000365, 0.000356666999999998, 0.0003857640000000037, 0.0003851389999999996, 0.0003579999999999972, 0.00036013799999999596, 0.00036070800000000125, 0.000361152999999996, 0.00035879199999999667, 0.0003608199999999978, 0.0003864860000000053, 0.0003574590000000044, 0.00036126400000000003, 0.0003855139999999965, 0.00035722200000000426, 0.0003611659999999961, 0.0003864859999999984, 0.00036104099999999945, 0.0003606250000000033, 0.00035955500000000445, 0.00038648699999999786, 0.00035883300000000284, 0.00035697199999999707, 0.0003566249999999993, 0.00035893099999999983, 0.00035742999999999886, 0.00035980499999999777, 0.00038612500000000105, 0.0003610689999999986, 0.00035791699999999926, 0.0003565280000000018, 0.00038575000000000415]</msg>
<status status="PASS" starttime="20201029 18:19:41.412" endtime="20201029 18:19:41.414"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.407" endtime="20201029 18:19:41.415"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:41.418" endtime="20201029 18:19:41.438"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.417" endtime="20201029 18:19:41.438"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.416" endtime="20201029 18:19:41.439"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.037" endtime="20201029 18:19:41.439"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.036" endtime="20201029 18:19:41.439"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:41.448" endtime="20201029 18:19:41.485"></status>
</kw>
<msg timestamp="20201029 18:19:41.486" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:41.446" endtime="20201029 18:19:41.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:41.488" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:41.487" endtime="20201029 18:19:41.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:41.489" endtime="20201029 18:19:41.491"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.444" endtime="20201029 18:19:41.491"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.441" endtime="20201029 18:19:41.492"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:41.498" endtime="20201029 18:19:41.784"></status>
</kw>
<msg timestamp="20201029 18:19:41.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024482806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024858708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:41.496" endtime="20201029 18:19:41.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:41.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024482806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024858708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:41.788" endtime="20201029 18:19:41.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:41.796" endtime="20201029 18:19:41.798"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.494" endtime="20201029 18:19:41.798"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.492" endtime="20201029 18:19:41.799"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:41.803" level="INFO">${RESULT} = [{'diff': 0.0003759020000000009}, {'diff': 0.0003854720000000013}, {'diff': 0.00038634800000000163}, {'diff': 0.0003586939999999997}, {'diff': 0.0003583479999999979}, {'diff': 0.0003611670000000025}, ...</msg>
<status status="PASS" starttime="20201029 18:19:41.799" endtime="20201029 18:19:41.803"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:41.807" level="INFO">${ACCURACY} = {'diff': [0.0003759020000000009, 0.0003854720000000013, 0.00038634800000000163, 0.0003586939999999997, 0.0003583479999999979, 0.0003611670000000025, 0.00035636100000000295, 0.00038652800000000057, 0.0...</msg>
<status status="PASS" starttime="20201029 18:19:41.804" endtime="20201029 18:19:41.807"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:41.811" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201029 18:19:41.810" endtime="20201029 18:19:41.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:41.813" level="INFO">VALUE: [0.0003759020000000009, 0.0003854720000000013, 0.00038634800000000163, 0.0003586939999999997, 0.0003583479999999979, 0.0003611670000000025, 0.00035636100000000295, 0.00038652800000000057, 0.00035723600000000036, 0.00035901400000000125, 0.000357070000000001, 0.0003585410000000004, 0.000385917000000003, 0.0003857500000000007, 0.00038576400000000025, 0.0003593190000000003, 0.00036026399999999903, 0.00036112500000000033, 0.0003855840000000013, 0.0003583470000000019, 0.0003565280000000018, 0.00035854099999999695, 0.0003595269999999984, 0.00035676400000000247, 0.0003566799999999981, 0.0003849859999999969, 0.0003582909999999967, 0.0003567080000000042, 0.00038515300000000613, 0.0003598749999999956, 0.0003576109999999938, 0.0003605139999999993, 0.00035655600000000093, 0.00038573599999999764, 0.00036029199999999817, 0.0003582219999999983, 0.0003595979999999957, 0.0003564860000000031, 0.0003568050000000017, 0.0003600969999999967, 0.0003850699999999943, 0.0003572769999999961, 0.0003573340000000008, 0.00036027700000000606, 0.00038590299999999994, 0.00036102799999999935, 0.0003572779999999956, 0.0003604020000000027, 0.0003565830000000006, 0.00035911100000000223]</msg>
<status status="PASS" starttime="20201029 18:19:41.812" endtime="20201029 18:19:41.815"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.807" endtime="20201029 18:19:41.815"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:41.819" endtime="20201029 18:19:41.838"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.818" endtime="20201029 18:19:41.839"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.816" endtime="20201029 18:19:41.839"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.440" endtime="20201029 18:19:41.840"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.439" endtime="20201029 18:19:41.840"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:41.848" endtime="20201029 18:19:41.883"></status>
</kw>
<msg timestamp="20201029 18:19:41.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:41.847" endtime="20201029 18:19:41.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:41.886" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:41.885" endtime="20201029 18:19:41.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:41.887" endtime="20201029 18:19:41.889"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.844" endtime="20201029 18:19:41.889"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.842" endtime="20201029 18:19:41.890"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:41.896" endtime="20201029 18:19:42.182"></status>
</kw>
<msg timestamp="20201029 18:19:42.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020641111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021006042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:41.895" endtime="20201029 18:19:42.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:42.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020641111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021006042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:42.186" endtime="20201029 18:19:42.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:42.194" endtime="20201029 18:19:42.196"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.892" endtime="20201029 18:19:42.196"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.890" endtime="20201029 18:19:42.196"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:42.200" level="INFO">${RESULT} = [{'diff': 0.0003649309999999989}, {'diff': 0.00038472200000000054}, {'diff': 0.00038654100000000066}, {'diff': 0.0003561389999999984}, {'diff': 0.0003570409999999989}, {'diff': 0.0003573189999999983},...</msg>
<status status="PASS" starttime="20201029 18:19:42.197" endtime="20201029 18:19:42.200"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:42.205" level="INFO">${ACCURACY} = {'diff': [0.0003649309999999989, 0.00038472200000000054, 0.00038654100000000066, 0.0003561389999999984, 0.0003570409999999989, 0.0003573189999999983, 0.0003563889999999986, 0.00038627799999999685, 0.0...</msg>
<status status="PASS" starttime="20201029 18:19:42.201" endtime="20201029 18:19:42.205"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:42.209" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201029 18:19:42.208" endtime="20201029 18:19:42.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:42.212" level="INFO">VALUE: [0.0003649309999999989, 0.00038472200000000054, 0.00038654100000000066, 0.0003561389999999984, 0.0003570409999999989, 0.0003573189999999983, 0.0003563889999999986, 0.00038627799999999685, 0.00036030599999999774, 0.00035691699999999826, 0.0003862499999999977, 0.00035909700000000266, 0.0003849030000000024, 0.0003860699999999988, 0.0003578890000000001, 0.000360054999999998, 0.0003596389999999984, 0.00036048600000000014, 0.00035988899999999865, 0.0003603329999999974, 0.00035709700000000066, 0.0003604999999999997, 0.00035962499999999883, 0.0003575279999999993, 0.00036019500000000065, 0.00035795900000000144, 0.0003595830000000001, 0.0003579020000000002, 0.00036025000000000293, 0.0003596390000000019, 0.00038645799999999925, 0.00038568099999999883, 0.00038527799999999585, 0.00036024999999999946, 0.00035683300000000084, 0.0003574999999999967, 0.00035902799999999735, 0.0003600129999999993, 0.0003579029999999997, 0.00035902799999999735, 0.0003580690000000025, 0.0003848749999999998, 0.00036058299999999766, 0.0003598889999999952, 0.00038512500000000005, 0.0003597229999999993, 0.00035990299999999475, 0.00038506900000000177, 0.0003584999999999977, 0.0003599030000000017]</msg>
<status status="PASS" starttime="20201029 18:19:42.211" endtime="20201029 18:19:42.213"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.206" endtime="20201029 18:19:42.213"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:42.217" endtime="20201029 18:19:42.236"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.215" endtime="20201029 18:19:42.237"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.214" endtime="20201029 18:19:42.237"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.841" endtime="20201029 18:19:42.237"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.840" endtime="20201029 18:19:42.238"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:42.246" endtime="20201029 18:19:42.285"></status>
</kw>
<msg timestamp="20201029 18:19:42.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:42.245" endtime="20201029 18:19:42.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:42.288" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:42.286" endtime="20201029 18:19:42.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:42.289" endtime="20201029 18:19:42.290"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.242" endtime="20201029 18:19:42.291"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.240" endtime="20201029 18:19:42.291"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:42.298" endtime="20201029 18:19:42.596"></status>
</kw>
<msg timestamp="20201029 18:19:42.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024793153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025172708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:42.296" endtime="20201029 18:19:42.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:42.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024793153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025172708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:42.605" endtime="20201029 18:19:42.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:42.618" endtime="20201029 18:19:42.621"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.294" endtime="20201029 18:19:42.622"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.292" endtime="20201029 18:19:42.624"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:42.634" level="INFO">${RESULT} = [{'diff': 0.00037955500000000017}, {'diff': 0.00035619400000000065}, {'diff': 0.0003855559999999987}, {'diff': 0.00036004099999999845}, {'diff': 0.0003607779999999991}, {'diff': 0.00038522200000000104...</msg>
<status status="PASS" starttime="20201029 18:19:42.627" endtime="20201029 18:19:42.635"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:42.643" level="INFO">${ACCURACY} = {'diff': [0.00037955500000000017, 0.00035619400000000065, 0.0003855559999999987, 0.00036004099999999845, 0.0003607779999999991, 0.00038522200000000104, 0.0003575419999999989, 0.0003571389999999994, 0....</msg>
<status status="PASS" starttime="20201029 18:19:42.638" endtime="20201029 18:19:42.644"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:42.652" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201029 18:19:42.650" endtime="20201029 18:19:42.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:42.656" level="INFO">VALUE: [0.00037955500000000017, 0.00035619400000000065, 0.0003855559999999987, 0.00036004099999999845, 0.0003607779999999991, 0.00038522200000000104, 0.0003575419999999989, 0.0003571389999999994, 0.00035677799999999857, 0.00035925000000000193, 0.0003595830000000001, 0.0003561249999999988, 0.00035876399999999753, 0.0003594999999999987, 0.00035809799999999767, 0.00035797199999999807, 0.00035923600000000236, 0.0003562080000000002, 0.00036070800000000125, 0.00035772200000000476, 0.00038625000000000465, 0.0003571119999999997, 0.00035844500000000584, 0.0003850130000000035, 0.0003607360000000004, 0.00035865199999999403, 0.0003594999999999987, 0.0003565139999999953, 0.00036031899999999784, 0.0003607360000000004, 0.000357861000000001, 0.00035743099999999833, 0.0003857780000000033, 0.0003859859999999979, 0.0003857079999999985, 0.00035688799999999965, 0.00036037500000000305, 0.0003849450000000046, 0.00035755600000000193, 0.0003568060000000012, 0.0003579579999999985, 0.0003562500000000024, 0.0003572219999999973, 0.00036015200000000247, 0.00036099999999999327, 0.00038556899999999533, 0.00036109700000000466, 0.0003569170000000052, 0.00035637499999999905, 0.0003606390000000029]</msg>
<status status="PASS" starttime="20201029 18:19:42.654" endtime="20201029 18:19:42.657"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.646" endtime="20201029 18:19:42.658"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:42.662" endtime="20201029 18:19:42.682"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.660" endtime="20201029 18:19:42.682"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.659" endtime="20201029 18:19:42.682"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.238" endtime="20201029 18:19:42.683"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.238" endtime="20201029 18:19:42.683"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:42.694" endtime="20201029 18:19:42.732"></status>
</kw>
<msg timestamp="20201029 18:19:42.732" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:42.692" endtime="20201029 18:19:42.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:42.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:42.733" endtime="20201029 18:19:42.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:42.736" endtime="20201029 18:19:42.737"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.689" endtime="20201029 18:19:42.738"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.686" endtime="20201029 18:19:42.738"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:42.745" endtime="20201029 18:19:43.030"></status>
</kw>
<msg timestamp="20201029 18:19:43.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026909778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027269542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:42.743" endtime="20201029 18:19:43.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:43.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026909778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027269542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:43.035" endtime="20201029 18:19:43.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:43.042" endtime="20201029 18:19:43.044"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.740" endtime="20201029 18:19:43.045"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.739" endtime="20201029 18:19:43.045"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:43.049" level="INFO">${RESULT} = [{'diff': 0.000359764000000002}, {'diff': 0.000360667000000002}, {'diff': 0.0003573470000000009}, {'diff': 0.00035677799999999857}, {'diff': 0.0003864019999999975}, {'diff': 0.00036007000000000053}, {...</msg>
<status status="PASS" starttime="20201029 18:19:43.046" endtime="20201029 18:19:43.049"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:43.053" level="INFO">${ACCURACY} = {'diff': [0.000359764000000002, 0.000360667000000002, 0.0003573470000000009, 0.00035677799999999857, 0.0003864019999999975, 0.00036007000000000053, 0.0003584449999999989, 0.0003603890000000026, 0.0003...</msg>
<status status="PASS" starttime="20201029 18:19:43.050" endtime="20201029 18:19:43.053"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:43.057" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201029 18:19:43.056" endtime="20201029 18:19:43.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:43.060" level="INFO">VALUE: [0.000359764000000002, 0.000360667000000002, 0.0003573470000000009, 0.00035677799999999857, 0.0003864019999999975, 0.00036007000000000053, 0.0003584449999999989, 0.0003603890000000026, 0.000358667, 0.0003850970000000009, 0.00035825000000000093, 0.00038495900000000416, 0.00038488899999999937, 0.0003606109999999968, 0.00035924999999999846, 0.0003585140000000042, 0.00036062499999999637, 0.00035802799999999635, 0.00036093100000000183, 0.0003593190000000038, 0.0003600559999999975, 0.0003864860000000053, 0.00035848599999999814, 0.0003594999999999987, 0.00035616599999999804, 0.00036086099999999705, 0.00036013899999999543, 0.00035841599999999335, 0.00036074999999999996, 0.0003591250000000018, 0.00035770799999999825, 0.00035877800000000404, 0.0003593470000000029, 0.0003609580000000015, 0.00038506900000000177, 0.00038606899999999583, 0.000385611000000001, 0.00038480500000000195, 0.0003602090000000002, 0.0003582359999999979, 0.0003561389999999984, 0.0003601669999999946, 0.00038536100000000073, 0.0003589449999999994, 0.00035737500000000005, 0.00038605499999999626, 0.00035607, 0.0003591109999999953, 0.00038584700000000166, 0.0003602359999999999]</msg>
<status status="PASS" starttime="20201029 18:19:43.058" endtime="20201029 18:19:43.061"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.054" endtime="20201029 18:19:43.062"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:43.065" endtime="20201029 18:19:43.085"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.064" endtime="20201029 18:19:43.085"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.063" endtime="20201029 18:19:43.086"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.684" endtime="20201029 18:19:43.086"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.684" endtime="20201029 18:19:43.086"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:43.095" endtime="20201029 18:19:43.128"></status>
</kw>
<msg timestamp="20201029 18:19:43.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:43.093" endtime="20201029 18:19:43.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:43.131" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:43.130" endtime="20201029 18:19:43.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:43.132" endtime="20201029 18:19:43.134"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.090" endtime="20201029 18:19:43.134"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.088" endtime="20201029 18:19:43.135"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:43.141" endtime="20201029 18:19:43.426"></status>
</kw>
<msg timestamp="20201029 18:19:43.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020229042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020602389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:43.139" endtime="20201029 18:19:43.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:43.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020229042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020602389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:43.430" endtime="20201029 18:19:43.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:43.438" endtime="20201029 18:19:43.440"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.137" endtime="20201029 18:19:43.440"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.135" endtime="20201029 18:19:43.441"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:43.445" level="INFO">${RESULT} = [{'diff': 0.00037334699999999957}, {'diff': 0.0003591380000000019}, {'diff': 0.00036079100000000267}, {'diff': 0.0003581669999999995}, {'diff': 0.0003602779999999986}, {'diff': 0.00038586100000000123}...</msg>
<status status="PASS" starttime="20201029 18:19:43.442" endtime="20201029 18:19:43.445"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:43.450" level="INFO">${ACCURACY} = {'diff': [0.00037334699999999957, 0.0003591380000000019, 0.00036079100000000267, 0.0003581669999999995, 0.0003602779999999986, 0.00038586100000000123, 0.0003588609999999985, 0.0003851110000000005, 0.0...</msg>
<status status="PASS" starttime="20201029 18:19:43.446" endtime="20201029 18:19:43.450"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:43.454" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201029 18:19:43.453" endtime="20201029 18:19:43.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:43.456" level="INFO">VALUE: [0.00037334699999999957, 0.0003591380000000019, 0.00036079100000000267, 0.0003581669999999995, 0.0003602779999999986, 0.00038586100000000123, 0.0003588609999999985, 0.0003851110000000005, 0.0003862500000000012, 0.00035947299999999904, 0.000359458, 0.00035934699999999944, 0.0003566389999999989, 0.0003561250000000023, 0.0003585969999999987, 0.0003861520000000007, 0.0003849719999999973, 0.000359458, 0.0003581799999999996, 0.0003856520000000002, 0.0003568190000000013, 0.0003605970000000007, 0.00036095799999999803, 0.0003863329999999991, 0.0003590420000000004, 0.00035793099999999883, 0.00036052799999999885, 0.0003562920000000011, 0.0003572080000000012, 0.00038586100000000123, 0.00035943000000000086, 0.00036005600000000443, 0.00038608300000000234, 0.00035792999999999936, 0.0003857780000000033, 0.00036030499999999827, 0.0003583749999999941, 0.00038512500000000005, 0.000359458, 0.0003863189999999961, 0.0003859299999999996, 0.00036048600000000014, 0.00038490299999999894, 0.0003606109999999968, 0.0003850000000000034, 0.00036093100000000183, 0.00038534700000000116, 0.00038508300000000134, 0.00038608300000000234, 0.00035623600000000283]</msg>
<status status="PASS" starttime="20201029 18:19:43.455" endtime="20201029 18:19:43.461"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.450" endtime="20201029 18:19:43.462"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:43.465" endtime="20201029 18:19:43.485"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.464" endtime="20201029 18:19:43.485"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.463" endtime="20201029 18:19:43.486"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.087" endtime="20201029 18:19:43.486"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.086" endtime="20201029 18:19:43.486"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:43.495" endtime="20201029 18:19:43.531"></status>
</kw>
<msg timestamp="20201029 18:19:43.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:43.493" endtime="20201029 18:19:43.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:43.534" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:43.533" endtime="20201029 18:19:43.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:43.535" endtime="20201029 18:19:43.537"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.491" endtime="20201029 18:19:43.537"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.489" endtime="20201029 18:19:43.538"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:43.544" endtime="20201029 18:19:43.830"></status>
</kw>
<msg timestamp="20201029 18:19:43.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022079625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022441153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:43.542" endtime="20201029 18:19:43.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:43.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022079625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022441153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:43.835" endtime="20201029 18:19:43.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:43.843" endtime="20201029 18:19:43.844"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.540" endtime="20201029 18:19:43.845"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.538" endtime="20201029 18:19:43.845"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:43.849" level="INFO">${RESULT} = [{'diff': 0.00036152799999999985}, {'diff': 0.00035627799999999807}, {'diff': 0.00036012499999999933}, {'diff': 0.0003596940000000007}, {'diff': 0.0003595129999999988}, {'diff': 0.0003848469999999972}...</msg>
<status status="PASS" starttime="20201029 18:19:43.846" endtime="20201029 18:19:43.849"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:43.853" level="INFO">${ACCURACY} = {'diff': [0.00036152799999999985, 0.00035627799999999807, 0.00036012499999999933, 0.0003596940000000007, 0.0003595129999999988, 0.0003848469999999972, 0.0003608330000000014, 0.000359667000000001, 0.00...</msg>
<status status="PASS" starttime="20201029 18:19:43.850" endtime="20201029 18:19:43.853"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:43.857" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201029 18:19:43.856" endtime="20201029 18:19:43.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:43.860" level="INFO">VALUE: [0.00036152799999999985, 0.00035627799999999807, 0.00036012499999999933, 0.0003596940000000007, 0.0003595129999999988, 0.0003848469999999972, 0.0003608330000000014, 0.000359667000000001, 0.0003596390000000019, 0.00038540299999999944, 0.00035988899999999865, 0.00035787500000000055, 0.00035869499999999915, 0.0003566809999999976, 0.000357764, 0.00038541599999999954, 0.00035647200000000004, 0.0003575280000000028, 0.0003861949999999989, 0.0003851110000000005, 0.00036088899999999965, 0.00036097300000000054, 0.00036011099999999976, 0.00035637499999999905, 0.0003577220000000013, 0.0003567089999999967, 0.00035687499999999955, 0.00038523599999999714, 0.000358457999999999, 0.000386207999999999, 0.00035638900000000556, 0.0003572920000000021, 0.00035848599999999814, 0.00036058299999999766, 0.0003855420000000026, 0.0003854440000000056, 0.0003568050000000017, 0.00038512500000000005, 0.00035983300000000384, 0.0003590830000000031, 0.00036108399999999763, 0.0003580690000000025, 0.00035650000000000265, 0.00035759700000000116, 0.000356473000000003, 0.0003566379999999994, 0.0003602779999999986, 0.0003854589999999977, 0.00035891700000000026, 0.0003585269999999974]</msg>
<status status="PASS" starttime="20201029 18:19:43.858" endtime="20201029 18:19:43.860"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.854" endtime="20201029 18:19:43.861"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:43.865" endtime="20201029 18:19:43.884"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.863" endtime="20201029 18:19:43.885"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.862" endtime="20201029 18:19:43.885"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.487" endtime="20201029 18:19:43.885"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.487" endtime="20201029 18:19:43.885"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:43.894" endtime="20201029 18:19:43.933"></status>
</kw>
<msg timestamp="20201029 18:19:43.933" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:43.892" endtime="20201029 18:19:43.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:43.936" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:43.934" endtime="20201029 18:19:43.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:43.937" endtime="20201029 18:19:43.938"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.890" endtime="20201029 18:19:43.939"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.888" endtime="20201029 18:19:43.939"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:43.945" endtime="20201029 18:19:44.231"></status>
</kw>
<msg timestamp="20201029 18:19:44.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024825667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025201778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:43.944" endtime="20201029 18:19:44.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:44.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024825667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025201778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:44.235" endtime="20201029 18:19:44.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:44.243" endtime="20201029 18:19:44.244"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.941" endtime="20201029 18:19:44.245"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.940" endtime="20201029 18:19:44.245"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:44.249" level="INFO">${RESULT} = [{'diff': 0.0003761110000000019}, {'diff': 0.00035955600000000046}, {'diff': 0.00035741600000000276}, {'diff': 0.0003573050000000022}, {'diff': 0.0003856529999999997}, {'diff': 0.0003848199999999975},...</msg>
<status status="PASS" starttime="20201029 18:19:44.246" endtime="20201029 18:19:44.249"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:44.253" level="INFO">${ACCURACY} = {'diff': [0.0003761110000000019, 0.00035955600000000046, 0.00035741600000000276, 0.0003573050000000022, 0.0003856529999999997, 0.0003848199999999975, 0.000358457999999999, 0.00035869499999999915, 0.00...</msg>
<status status="PASS" starttime="20201029 18:19:44.250" endtime="20201029 18:19:44.253"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:44.257" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201029 18:19:44.256" endtime="20201029 18:19:44.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:44.260" level="INFO">VALUE: [0.0003761110000000019, 0.00035955600000000046, 0.00035741600000000276, 0.0003573050000000022, 0.0003856529999999997, 0.0003848199999999975, 0.000358457999999999, 0.00035869499999999915, 0.0003568889999999991, 0.0003606809999999981, 0.00035777799999999957, 0.0003851949999999979, 0.00038602800000000007, 0.0003606390000000029, 0.000385110999999997, 0.0003573889999999996, 0.000385416999999999, 0.0003588190000000033, 0.00038623599999999814, 0.0003568199999999938, 0.00035627800000000154, 0.0003606109999999968, 0.0003580689999999956, 0.00035962499999999537, 0.00035752799999999585, 0.0003597219999999998, 0.00036048600000000014, 0.00036052799999999885, 0.00036058399999999713, 0.00036020800000000075, 0.0003598470000000034, 0.0003586939999999997, 0.0003595700000000035, 0.00035861100000000173, 0.0003572920000000021, 0.00035626400000000197, 0.00038557000000000174, 0.00038511099999999354, 0.0003606250000000033, 0.0003589999999999982, 0.00035677800000000204, 0.0003600140000000057, 0.00035937500000000205, 0.00036093100000000183, 0.00035659799999999964, 0.0003590979999999952, 0.00035633300000000034, 0.0003583890000000006, 0.0003565280000000018, 0.0003850970000000009]</msg>
<status status="PASS" starttime="20201029 18:19:44.258" endtime="20201029 18:19:44.261"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.254" endtime="20201029 18:19:44.262"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:44.266" endtime="20201029 18:19:44.285"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.264" endtime="20201029 18:19:44.286"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.263" endtime="20201029 18:19:44.286"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.886" endtime="20201029 18:19:44.286"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.886" endtime="20201029 18:19:44.286"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:44.295" endtime="20201029 18:19:44.334"></status>
</kw>
<msg timestamp="20201029 18:19:44.335" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:44.293" endtime="20201029 18:19:44.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:44.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:44.336" endtime="20201029 18:19:44.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:44.338" endtime="20201029 18:19:44.340"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.291" endtime="20201029 18:19:44.340"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.289" endtime="20201029 18:19:44.341"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:44.347" endtime="20201029 18:19:44.633"></status>
</kw>
<msg timestamp="20201029 18:19:44.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020881528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021250653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:44.346" endtime="20201029 18:19:44.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:44.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020881528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021250653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:44.637" endtime="20201029 18:19:44.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:44.645" endtime="20201029 18:19:44.647"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.343" endtime="20201029 18:19:44.648"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.341" endtime="20201029 18:19:44.648"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:44.652" level="INFO">${RESULT} = [{'diff': 0.0003691250000000014}, {'diff': 0.0003607360000000004}, {'diff': 0.00038654200000000014}, {'diff': 0.0003571249999999998}, {'diff': 0.00035656899999999755}, {'diff': 0.0003858199999999985},...</msg>
<status status="PASS" starttime="20201029 18:19:44.649" endtime="20201029 18:19:44.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:44.660" level="INFO">${ACCURACY} = {'diff': [0.0003691250000000014, 0.0003607360000000004, 0.00038654200000000014, 0.0003571249999999998, 0.00035656899999999755, 0.0003858199999999985, 0.0003562080000000002, 0.000359667000000001, 0.000...</msg>
<status status="PASS" starttime="20201029 18:19:44.653" endtime="20201029 18:19:44.660"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:44.665" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201029 18:19:44.664" endtime="20201029 18:19:44.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:44.667" level="INFO">VALUE: [0.0003691250000000014, 0.0003607360000000004, 0.00038654200000000014, 0.0003571249999999998, 0.00035656899999999755, 0.0003858199999999985, 0.0003562080000000002, 0.000359667000000001, 0.000360667000000002, 0.0003852500000000002, 0.0003865980000000019, 0.0003857500000000007, 0.00038479200000000185, 0.0003593470000000029, 0.000357764, 0.0003600420000000014, 0.0003599999999999992, 0.00036030499999999827, 0.0003585410000000004, 0.0003564860000000031, 0.0003610139999999998, 0.0003595000000000022, 0.00035842999999999986, 0.00035827800000000007, 0.0003603190000000013, 0.0003563469999999999, 0.0003593190000000003, 0.0003598609999999995, 0.00035829100000000363, 0.00035865300000000044, 0.0003604999999999997, 0.00036059700000000416, 0.0003860420000000031, 0.0003607220000000008, 0.00035655600000000093, 0.0003602220000000003, 0.00036011100000000323, 0.0003601109999999963, 0.0003854859999999974, 0.00035974999999999896, 0.0003592909999999977, 0.0003568190000000013, 0.00035711100000000023, 0.00035959800000000264, 0.00036036099999999655, 0.0003592219999999993, 0.00035990299999999475, 0.0003586809999999996, 0.0003605419999999984, 0.00035670799999999725]</msg>
<status status="PASS" starttime="20201029 18:19:44.666" endtime="20201029 18:19:44.668"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.661" endtime="20201029 18:19:44.668"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:44.672" endtime="20201029 18:19:44.691"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.670" endtime="20201029 18:19:44.692"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.669" endtime="20201029 18:19:44.692"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.287" endtime="20201029 18:19:44.693"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.287" endtime="20201029 18:19:44.693"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:44.701" endtime="20201029 18:19:44.736"></status>
</kw>
<msg timestamp="20201029 18:19:44.736" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:44.700" endtime="20201029 18:19:44.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:44.739" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:44.737" endtime="20201029 18:19:44.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:44.740" endtime="20201029 18:19:44.741"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.697" endtime="20201029 18:19:44.742"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.695" endtime="20201029 18:19:44.742"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:44.749" endtime="20201029 18:19:45.035"></status>
</kw>
<msg timestamp="20201029 18:19:45.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021400097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021784569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:44.747" endtime="20201029 18:19:45.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:45.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021400097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021784569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:45.039" endtime="20201029 18:19:45.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:45.047" endtime="20201029 18:19:45.049"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.745" endtime="20201029 18:19:45.050"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.743" endtime="20201029 18:19:45.050"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:45.054" level="INFO">${RESULT} = [{'diff': 0.0003844720000000003}, {'diff': 0.0003599030000000017}, {'diff': 0.0003600830000000006}, {'diff': 0.0003593749999999986}, {'diff': 0.00035756999999999803}, {'diff': 0.0003858190000000025}, ...</msg>
<status status="PASS" starttime="20201029 18:19:45.051" endtime="20201029 18:19:45.054"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:45.058" level="INFO">${ACCURACY} = {'diff': [0.0003844720000000003, 0.0003599030000000017, 0.0003600830000000006, 0.0003593749999999986, 0.00035756999999999803, 0.0003858190000000025, 0.00036108299999999816, 0.0003593199999999998, 0.00...</msg>
<status status="PASS" starttime="20201029 18:19:45.055" endtime="20201029 18:19:45.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:45.062" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201029 18:19:45.061" endtime="20201029 18:19:45.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:45.064" level="INFO">VALUE: [0.0003844720000000003, 0.0003599030000000017, 0.0003600830000000006, 0.0003593749999999986, 0.00035756999999999803, 0.0003858190000000025, 0.00036108299999999816, 0.0003593199999999998, 0.00035820799999999875, 0.0003583470000000019, 0.0003592359999999989, 0.00035893099999999983, 0.00035791699999999926, 0.0003605269999999994, 0.00035897200000000254, 0.00035640300000000166, 0.00035797200000000154, 0.00035938899999999815, 0.00038505499999999873, 0.0003560280000000013, 0.0003609169999999988, 0.0003849999999999999, 0.0003566950000000006, 0.00035647200000000004, 0.00038484700000000066, 0.00035659700000000016, 0.0003598890000000021, 0.0003599580000000005, 0.0003598340000000033, 0.0003854859999999974, 0.0003859299999999996, 0.0003586250000000013, 0.0003855560000000022, 0.0003584160000000003, 0.0003581250000000008, 0.0003567769999999956, 0.0003596810000000006, 0.0003605139999999993, 0.00035948599999999914, 0.0003577229999999973, 0.0003578329999999949, 0.00035844500000000584, 0.00035709700000000066, 0.0003574999999999967, 0.00035630499999999427, 0.0003570689999999946, 0.0003562359999999959, 0.00035915300000000094, 0.0003574999999999967, 0.0003594449999999999]</msg>
<status status="PASS" starttime="20201029 18:19:45.063" endtime="20201029 18:19:45.065"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.059" endtime="20201029 18:19:45.066"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:45.069" endtime="20201029 18:19:45.089"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.068" endtime="20201029 18:19:45.089"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.067" endtime="20201029 18:19:45.090"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.694" endtime="20201029 18:19:45.090"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.693" endtime="20201029 18:19:45.090"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:45.099" endtime="20201029 18:19:45.133"></status>
</kw>
<msg timestamp="20201029 18:19:45.133" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:45.097" endtime="20201029 18:19:45.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:45.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:45.134" endtime="20201029 18:19:45.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:45.137" endtime="20201029 18:19:45.138"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.095" endtime="20201029 18:19:45.139"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.093" endtime="20201029 18:19:45.139"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:45.145" endtime="20201029 18:19:45.431"></status>
</kw>
<msg timestamp="20201029 18:19:45.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020838806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021203181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:45.144" endtime="20201029 18:19:45.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:45.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020838806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021203181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:45.436" endtime="20201029 18:19:45.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:45.444" endtime="20201029 18:19:45.445"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.141" endtime="20201029 18:19:45.446"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.140" endtime="20201029 18:19:45.446"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:45.450" level="INFO">${RESULT} = [{'diff': 0.0003643750000000001}, {'diff': 0.00035870799999999925}, {'diff': 0.0003591810000000001}, {'diff': 0.000385820000000002}, {'diff': 0.0003589160000000008}, {'diff': 0.00036056900000000155}, ...</msg>
<status status="PASS" starttime="20201029 18:19:45.447" endtime="20201029 18:19:45.450"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:45.454" level="INFO">${ACCURACY} = {'diff': [0.0003643750000000001, 0.00035870799999999925, 0.0003591810000000001, 0.000385820000000002, 0.0003589160000000008, 0.00036056900000000155, 0.0003579449999999984, 0.0003858190000000025, 0.000...</msg>
<status status="PASS" starttime="20201029 18:19:45.451" endtime="20201029 18:19:45.454"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:45.458" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201029 18:19:45.457" endtime="20201029 18:19:45.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:45.461" level="INFO">VALUE: [0.0003643750000000001, 0.00035870799999999925, 0.0003591810000000001, 0.000385820000000002, 0.0003589160000000008, 0.00036056900000000155, 0.0003579449999999984, 0.0003858190000000025, 0.0003610139999999998, 0.000385416999999999, 0.0003610000000000002, 0.00035843099999999933, 0.0003861800000000033, 0.00035861099999999826, 0.0003601670000000015, 0.00036052799999999885, 0.00036001400000000225, 0.00038580599999999896, 0.000357666999999999, 0.0003860699999999988, 0.0003600280000000018, 0.00035643099999999733, 0.0003589579999999995, 0.0003567220000000003, 0.000358457999999999, 0.0003865000000000014, 0.00036054099999999895, 0.00035811100000000123, 0.00038507000000000124, 0.0003608470000000044, 0.00036065199999999603, 0.0003602779999999986, 0.0003585269999999974, 0.0003606109999999968, 0.00035950000000000565, 0.0003850829999999944, 0.00035665299999999844, 0.00035841699999999976, 0.00035672200000000376, 0.0003581809999999991, 0.0003608889999999962, 0.0003561669999999975, 0.0003588470000000024, 0.00035647299999999604, 0.0003859589999999982, 0.00035837500000000105, 0.0003856390000000001, 0.0003607360000000004, 0.0003862499999999977, 0.00038602800000000353]</msg>
<status status="PASS" starttime="20201029 18:19:45.459" endtime="20201029 18:19:45.462"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.455" endtime="20201029 18:19:45.463"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:45.466" endtime="20201029 18:19:45.486"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.465" endtime="20201029 18:19:45.486"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.464" endtime="20201029 18:19:45.487"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.091" endtime="20201029 18:19:45.487"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.090" endtime="20201029 18:19:45.487"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:45.496" endtime="20201029 18:19:45.531"></status>
</kw>
<msg timestamp="20201029 18:19:45.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:45.494" endtime="20201029 18:19:45.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:45.534" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:45.533" endtime="20201029 18:19:45.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:45.535" endtime="20201029 18:19:45.537"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.492" endtime="20201029 18:19:45.538"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.490" endtime="20201029 18:19:45.538"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:45.544" endtime="20201029 18:19:45.853"></status>
</kw>
<msg timestamp="20201029 18:19:45.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020697431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021062764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:45.543" endtime="20201029 18:19:45.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:45.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020697431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021062764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:45.862" endtime="20201029 18:19:45.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:45.870" endtime="20201029 18:19:45.872"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.540" endtime="20201029 18:19:45.872"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.539" endtime="20201029 18:19:45.873"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:45.877" level="INFO">${RESULT} = [{'diff': 0.0003653330000000024}, {'diff': 0.0003582220000000018}, {'diff': 0.00036116699999999904}, {'diff': 0.00036009799999999967}, {'diff': 0.00036008299999999716}, {'diff': 0.0003852360000000006}...</msg>
<status status="PASS" starttime="20201029 18:19:45.874" endtime="20201029 18:19:45.877"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:45.881" level="INFO">${ACCURACY} = {'diff': [0.0003653330000000024, 0.0003582220000000018, 0.00036116699999999904, 0.00036009799999999967, 0.00036008299999999716, 0.0003852360000000006, 0.0003608060000000017, 0.00038549999999999696, 0....</msg>
<status status="PASS" starttime="20201029 18:19:45.878" endtime="20201029 18:19:45.882"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:45.886" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201029 18:19:45.885" endtime="20201029 18:19:45.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:45.888" level="INFO">VALUE: [0.0003653330000000024, 0.0003582220000000018, 0.00036116699999999904, 0.00036009799999999967, 0.00036008299999999716, 0.0003852360000000006, 0.0003608060000000017, 0.00038549999999999696, 0.0003604299999999984, 0.0003577219999999978, 0.00036038899999999915, 0.00038566699999999926, 0.0003850970000000009, 0.0003582229999999978, 0.0003576389999999999, 0.0003857360000000011, 0.0003602779999999986, 0.00035925000000000193, 0.00035791699999999926, 0.0003593479999999989, 0.0003853330000000016, 0.00035893099999999983, 0.0003562080000000002, 0.00038543100000000205, 0.00036111100000000076, 0.0003854450000000016, 0.00036070800000000125, 0.0003602359999999999, 0.00035747199999999757, 0.000386417, 0.00035843100000000627, 0.00035727800000000254, 0.0003864589999999987, 0.000358457999999999, 0.000356972000000004, 0.00035902799999999735, 0.00038575000000000415, 0.0003599999999999992, 0.0003568889999999991, 0.0003596529999999945, 0.00038536100000000073, 0.0003855550000000027, 0.00036074999999999996, 0.0003854589999999977, 0.00035661099999999973, 0.0003569019999999992, 0.00038558300000000184, 0.00035668000000000505, 0.00035676399999999553, 0.0003857079999999985]</msg>
<status status="PASS" starttime="20201029 18:19:45.887" endtime="20201029 18:19:45.889"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.882" endtime="20201029 18:19:45.890"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:45.893" endtime="20201029 18:19:45.913"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.892" endtime="20201029 18:19:45.913"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.890" endtime="20201029 18:19:45.913"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.488" endtime="20201029 18:19:45.914"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.487" endtime="20201029 18:19:45.914"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:45.922" endtime="20201029 18:19:45.957"></status>
</kw>
<msg timestamp="20201029 18:19:45.958" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:45.921" endtime="20201029 18:19:45.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:45.960" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:45.959" endtime="20201029 18:19:45.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:45.961" endtime="20201029 18:19:45.963"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.918" endtime="20201029 18:19:45.963"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.916" endtime="20201029 18:19:45.964"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:45.970" endtime="20201029 18:19:46.256"></status>
</kw>
<msg timestamp="20201029 18:19:46.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021057042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021419181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:45.968" endtime="20201029 18:19:46.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:46.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021057042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021419181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:46.260" endtime="20201029 18:19:46.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:46.268" endtime="20201029 18:19:46.270"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.966" endtime="20201029 18:19:46.271"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.964" endtime="20201029 18:19:46.271"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:46.275" level="INFO">${RESULT} = [{'diff': 0.00036213899999999744}, {'diff': 0.00038512500000000005}, {'diff': 0.0003854580000000017}, {'diff': 0.00036044399999999796}, {'diff': 0.00035694500000000087}, {'diff': 0.0003563190000000008...</msg>
<status status="PASS" starttime="20201029 18:19:46.272" endtime="20201029 18:19:46.275"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:46.279" level="INFO">${ACCURACY} = {'diff': [0.00036213899999999744, 0.00038512500000000005, 0.0003854580000000017, 0.00036044399999999796, 0.00035694500000000087, 0.0003563190000000008, 0.0003578470000000014, 0.00035825000000000093, 0...</msg>
<status status="PASS" starttime="20201029 18:19:46.276" endtime="20201029 18:19:46.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:46.283" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201029 18:19:46.282" endtime="20201029 18:19:46.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:46.285" level="INFO">VALUE: [0.00036213899999999744, 0.00038512500000000005, 0.0003854580000000017, 0.00036044399999999796, 0.00035694500000000087, 0.0003563190000000008, 0.0003578470000000014, 0.00035825000000000093, 0.0003578189999999988, 0.0003589579999999995, 0.00035632000000000025, 0.0003575830000000016, 0.0003564440000000009, 0.0003601670000000015, 0.00036057000000000103, 0.0003563890000000021, 0.00035988899999999865, 0.00035825000000000093, 0.0003571950000000011, 0.00038640300000000044, 0.000358070000000002, 0.0003563609999999995, 0.00038645799999999925, 0.0003581799999999996, 0.00035976399999999853, 0.00035651399999999875, 0.0003607360000000004, 0.00035816699999999604, 0.0003602359999999999, 0.00038607000000000224, 0.000386207999999999, 0.00035904200000000386, 0.0003603190000000048, 0.00035726400000000297, 0.00038516699999999876, 0.0003864870000000048, 0.0003865139999999975, 0.00035958299999999666, 0.0003607360000000004, 0.0003865279999999971, 0.0003577779999999961, 0.0003850420000000021, 0.00035976399999999853, 0.00038556899999999533, 0.0003602359999999999, 0.00035793099999999883, 0.0003579999999999972, 0.0003608889999999962, 0.000359667000000001, 0.0003863750000000013]</msg>
<status status="PASS" starttime="20201029 18:19:46.284" endtime="20201029 18:19:46.286"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.280" endtime="20201029 18:19:46.287"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:46.290" endtime="20201029 18:19:46.310"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.289" endtime="20201029 18:19:46.310"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.288" endtime="20201029 18:19:46.311"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.915" endtime="20201029 18:19:46.311"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.914" endtime="20201029 18:19:46.311"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:46.320" endtime="20201029 18:19:46.359"></status>
</kw>
<msg timestamp="20201029 18:19:46.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:46.318" endtime="20201029 18:19:46.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:46.362" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:46.360" endtime="20201029 18:19:46.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:46.363" endtime="20201029 18:19:46.364"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.316" endtime="20201029 18:19:46.365"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.313" endtime="20201029 18:19:46.365"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:46.372" endtime="20201029 18:19:46.657"></status>
</kw>
<msg timestamp="20201029 18:19:46.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025792569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026157944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:46.370" endtime="20201029 18:19:46.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:46.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025792569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026157944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:46.661" endtime="20201029 18:19:46.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:46.669" endtime="20201029 18:19:46.671"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.368" endtime="20201029 18:19:46.671"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.366" endtime="20201029 18:19:46.672"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:46.676" level="INFO">${RESULT} = [{'diff': 0.00036537499999999765}, {'diff': 0.0003566950000000006}, {'diff': 0.0003849299999999986}, {'diff': 0.0003609719999999976}, {'diff': 0.00035694500000000087}, {'diff': 0.0003590829999999996},...</msg>
<status status="PASS" starttime="20201029 18:19:46.672" endtime="20201029 18:19:46.676"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:46.680" level="INFO">${ACCURACY} = {'diff': [0.00036537499999999765, 0.0003566950000000006, 0.0003849299999999986, 0.0003609719999999976, 0.00035694500000000087, 0.0003590829999999996, 0.00035863799999999793, 0.00038609699999999844, 0....</msg>
<status status="PASS" starttime="20201029 18:19:46.677" endtime="20201029 18:19:46.680"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:46.685" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201029 18:19:46.684" endtime="20201029 18:19:46.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:46.687" level="INFO">VALUE: [0.00036537499999999765, 0.0003566950000000006, 0.0003849299999999986, 0.0003609719999999976, 0.00035694500000000087, 0.0003590829999999996, 0.00035863799999999793, 0.00038609699999999844, 0.00035811099999999776, 0.0003860689999999993, 0.0003607360000000004, 0.00038598600000000136, 0.0003565140000000022, 0.0003579020000000002, 0.0003563190000000008, 0.00035815299999999994, 0.0003586809999999996, 0.0003596800000000011, 0.00038517999999999886, 0.0003589999999999982, 0.00035941700000000076, 0.0003855840000000013, 0.000384820000000001, 0.00035662500000000624, 0.00035900000000000515, 0.0003566660000000055, 0.0003598470000000034, 0.0003565140000000022, 0.00038525000000000365, 0.0003858060000000024, 0.0003593890000000016, 0.0003584449999999989, 0.00035594400000000387, 0.00038633299999999565, 0.00035956999999999656, 0.000384916000000006, 0.0003601670000000015, 0.00038637499999999436, 0.00035961100000000273, 0.00035947199999999957, 0.0003577089999999977, 0.0003562920000000011, 0.0003599030000000017, 0.00035876399999999753, 0.0003861390000000006, 0.0003580140000000037, 0.00038525000000000365, 0.000357346999999994, 0.0003599450000000004, 0.0003571530000000059]</msg>
<status status="PASS" starttime="20201029 18:19:46.686" endtime="20201029 18:19:46.689"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.681" endtime="20201029 18:19:46.690"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:46.693" endtime="20201029 18:19:46.713"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.692" endtime="20201029 18:19:46.713"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.691" endtime="20201029 18:19:46.714"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.312" endtime="20201029 18:19:46.714"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.311" endtime="20201029 18:19:46.714"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:46.723" endtime="20201029 18:19:46.761"></status>
</kw>
<msg timestamp="20201029 18:19:46.761" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:46.721" endtime="20201029 18:19:46.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:46.764" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:46.762" endtime="20201029 18:19:46.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:46.765" endtime="20201029 18:19:46.766"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.718" endtime="20201029 18:19:46.767"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.716" endtime="20201029 18:19:46.767"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:46.774" endtime="20201029 18:19:47.058"></status>
</kw>
<msg timestamp="20201029 18:19:47.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024671333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025054389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:46.772" endtime="20201029 18:19:47.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:47.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024671333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025054389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:47.062" endtime="20201029 18:19:47.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:47.070" endtime="20201029 18:19:47.072"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.769" endtime="20201029 18:19:47.072"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.768" endtime="20201029 18:19:47.073"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:47.077" level="INFO">${RESULT} = [{'diff': 0.0003830559999999997}, {'diff': 0.0003559999999999987}, {'diff': 0.00038598600000000136}, {'diff': 0.0003582640000000005}, {'diff': 0.00035723600000000036}, {'diff': 0.0003594160000000013},...</msg>
<status status="PASS" starttime="20201029 18:19:47.074" endtime="20201029 18:19:47.077"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:47.081" level="INFO">${ACCURACY} = {'diff': [0.0003830559999999997, 0.0003559999999999987, 0.00038598600000000136, 0.0003582640000000005, 0.00035723600000000036, 0.0003594160000000013, 0.0003859169999999995, 0.00035705500000000195, 0.0...</msg>
<status status="PASS" starttime="20201029 18:19:47.078" endtime="20201029 18:19:47.082"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:47.086" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201029 18:19:47.085" endtime="20201029 18:19:47.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:47.088" level="INFO">VALUE: [0.0003830559999999997, 0.0003559999999999987, 0.00038598600000000136, 0.0003582640000000005, 0.00035723600000000036, 0.0003594160000000013, 0.0003859169999999995, 0.00035705500000000195, 0.0003594449999999999, 0.00038488899999999937, 0.00036001400000000225, 0.00035747199999999757, 0.0003849450000000011, 0.00035837500000000105, 0.00035815299999999994, 0.0003861249999999976, 0.0003594999999999987, 0.00038570800000000197, 0.00035622200000000326, 0.0003598890000000021, 0.00038575000000000415, 0.0003600270000000058, 0.00035720799999999775, 0.0003572229999999968, 0.0003594999999999987, 0.00035848599999999814, 0.0003863330000000026, 0.0003594030000000012, 0.00036044400000000143, 0.00036044400000000143, 0.0003598340000000033, 0.00035965300000000144, 0.0003572920000000021, 0.0003606940000000017, 0.0003574159999999993, 0.00035626400000000197, 0.00035700000000000315, 0.0003564170000000047, 0.0003852780000000028, 0.0003584030000000002, 0.00038540199999999997, 0.00036055600000000493, 0.00035908399999999563, 0.00035870799999999925, 0.00035662500000000624, 0.0003569159999999988, 0.0003565139999999953, 0.0003591940000000002, 0.00038507000000000124, 0.0003582630000000045]</msg>
<status status="PASS" starttime="20201029 18:19:47.087" endtime="20201029 18:19:47.089"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.082" endtime="20201029 18:19:47.090"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:47.093" endtime="20201029 18:19:47.113"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.092" endtime="20201029 18:19:47.113"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.090" endtime="20201029 18:19:47.113"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.715" endtime="20201029 18:19:47.114"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.714" endtime="20201029 18:19:47.114"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:47.122" endtime="20201029 18:19:47.158"></status>
</kw>
<msg timestamp="20201029 18:19:47.159" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:47.121" endtime="20201029 18:19:47.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:47.161" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:47.160" endtime="20201029 18:19:47.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:47.162" endtime="20201029 18:19:47.164"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.118" endtime="20201029 18:19:47.165"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.116" endtime="20201029 18:19:47.165"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:47.171" endtime="20201029 18:19:47.458"></status>
</kw>
<msg timestamp="20201029 18:19:47.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021746736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022114889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:47.170" endtime="20201029 18:19:47.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:47.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021746736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022114889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:47.462" endtime="20201029 18:19:47.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:47.470" endtime="20201029 18:19:47.472"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.167" endtime="20201029 18:19:47.472"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.166" endtime="20201029 18:19:47.473"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:47.477" level="INFO">${RESULT} = [{'diff': 0.00036815299999999954}, {'diff': 0.0003856390000000001}, {'diff': 0.0003567920000000016}, {'diff': 0.00035741699999999876}, {'diff': 0.0003610830000000016}, {'diff': 0.00035741700000000223}...</msg>
<status status="PASS" starttime="20201029 18:19:47.473" endtime="20201029 18:19:47.477"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:47.480" level="INFO">${ACCURACY} = {'diff': [0.00036815299999999954, 0.0003856390000000001, 0.0003567920000000016, 0.00035741699999999876, 0.0003610830000000016, 0.00035741700000000223, 0.0003593749999999986, 0.00036012499999999933, 0....</msg>
<status status="PASS" starttime="20201029 18:19:47.478" endtime="20201029 18:19:47.481"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:47.485" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201029 18:19:47.484" endtime="20201029 18:19:47.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:47.487" level="INFO">VALUE: [0.00036815299999999954, 0.0003856390000000001, 0.0003567920000000016, 0.00035741699999999876, 0.0003610830000000016, 0.00035741700000000223, 0.0003593749999999986, 0.00036012499999999933, 0.0003855699999999983, 0.00035865300000000044, 0.00035937500000000205, 0.0003569029999999987, 0.0003605689999999981, 0.00035920799999999975, 0.0003585410000000004, 0.0003857779999999998, 0.0003572220000000008, 0.0003580829999999986, 0.00035981899999999734, 0.00038506900000000177, 0.0003855840000000013, 0.0003570280000000023, 0.0003583050000000032, 0.0003849999999999999, 0.0003603329999999974, 0.000385416999999999, 0.00035865300000000044, 0.0003592909999999977, 0.0003597359999999994, 0.0003859299999999996, 0.0003575140000000032, 0.0003587219999999988, 0.0003604030000000022, 0.0003856529999999997, 0.00036097300000000054, 0.0003563060000000007, 0.0003595140000000052, 0.0003581669999999995, 0.0003567359999999964, 0.0003586939999999997, 0.00035837500000000105, 0.00038633299999999565, 0.00038504100000000263, 0.00038638900000000087, 0.0003863609999999948, 0.0003855000000000039, 0.0003599030000000017, 0.00038557000000000174, 0.00038651299999999805, 0.0003595419999999974]</msg>
<status status="PASS" starttime="20201029 18:19:47.486" endtime="20201029 18:19:47.488"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.481" endtime="20201029 18:19:47.489"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:47.492" endtime="20201029 18:19:47.512"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.491" endtime="20201029 18:19:47.512"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.489" endtime="20201029 18:19:47.513"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.115" endtime="20201029 18:19:47.513"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.114" endtime="20201029 18:19:47.513"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:47.521" endtime="20201029 18:19:47.564"></status>
</kw>
<msg timestamp="20201029 18:19:47.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:47.520" endtime="20201029 18:19:47.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:47.567" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:47.566" endtime="20201029 18:19:47.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:47.568" endtime="20201029 18:19:47.570"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.517" endtime="20201029 18:19:47.570"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.515" endtime="20201029 18:19:47.571"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:47.577" endtime="20201029 18:19:47.863"></status>
</kw>
<msg timestamp="20201029 18:19:47.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024616542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024976847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:47.576" endtime="20201029 18:19:47.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:47.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024616542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024976847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:47.867" endtime="20201029 18:19:47.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:47.875" endtime="20201029 18:19:47.877"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.573" endtime="20201029 18:19:47.878"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.571" endtime="20201029 18:19:47.878"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:47.882" level="INFO">${RESULT} = [{'diff': 0.00036030499999999827}, {'diff': 0.0003849450000000011}, {'diff': 0.00035894399999999993}, {'diff': 0.0003569440000000014}, {'diff': 0.0003862360000000016}, {'diff': 0.0003849160000000025},...</msg>
<status status="PASS" starttime="20201029 18:19:47.879" endtime="20201029 18:19:47.883"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:47.887" level="INFO">${ACCURACY} = {'diff': [0.00036030499999999827, 0.0003849450000000011, 0.00035894399999999993, 0.0003569440000000014, 0.0003862360000000016, 0.0003849160000000025, 0.0003866390000000011, 0.00035704200000000186, 0.0...</msg>
<status status="PASS" starttime="20201029 18:19:47.884" endtime="20201029 18:19:47.888"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:47.892" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201029 18:19:47.891" endtime="20201029 18:19:47.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:47.894" level="INFO">VALUE: [0.00036030499999999827, 0.0003849450000000011, 0.00035894399999999993, 0.0003569440000000014, 0.0003862360000000016, 0.0003849160000000025, 0.0003866390000000011, 0.00035704200000000186, 0.0003598749999999991, 0.00036061199999999974, 0.000356763999999999, 0.00035927800000000107, 0.0003597359999999994, 0.0003860140000000005, 0.00038552799999999957, 0.0003862500000000012, 0.0003586950000000026, 0.0003590139999999978, 0.0003563190000000008, 0.00035650000000000265, 0.0003576250000000003, 0.0003569579999999975, 0.00036102799999999935, 0.00035650000000000265, 0.0003582229999999978, 0.0003591810000000001, 0.0003575419999999954, 0.00035844399999999943, 0.0003858750000000008, 0.0003596250000000023, 0.00035772200000000476, 0.0003564029999999982, 0.00035836099999999455, 0.0003583329999999954, 0.0003864859999999984, 0.0003863189999999961, 0.0003584449999999989, 0.0003577769999999966, 0.00035705500000000195, 0.00035641699999999776, 0.0003584449999999989, 0.0003862220000000055, 0.0003602359999999999, 0.00035841699999999976, 0.000356763000000003, 0.00036036200000000296, 0.0003864300000000001, 0.00035887500000000155, 0.00035720799999999775, 0.00035812499999999386]</msg>
<status status="PASS" starttime="20201029 18:19:47.893" endtime="20201029 18:19:47.896"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.888" endtime="20201029 18:19:47.896"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:47.900" endtime="20201029 18:19:47.919"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.899" endtime="20201029 18:19:47.920"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.897" endtime="20201029 18:19:47.920"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.514" endtime="20201029 18:19:47.921"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.513" endtime="20201029 18:19:47.921"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:47.929" endtime="20201029 18:19:47.967"></status>
</kw>
<msg timestamp="20201029 18:19:47.967" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:47.928" endtime="20201029 18:19:47.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:47.970" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:47.968" endtime="20201029 18:19:47.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:47.971" endtime="20201029 18:19:47.972"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.925" endtime="20201029 18:19:47.973"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.923" endtime="20201029 18:19:47.973"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:47.980" endtime="20201029 18:19:48.266"></status>
</kw>
<msg timestamp="20201029 18:19:48.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023775556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024146125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:47.978" endtime="20201029 18:19:48.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:48.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023775556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024146125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:48.270" endtime="20201029 18:19:48.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:48.278" endtime="20201029 18:19:48.280"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.976" endtime="20201029 18:19:48.280"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.974" endtime="20201029 18:19:48.281"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:48.284" level="INFO">${RESULT} = [{'diff': 0.00037056900000000115}, {'diff': 0.00035842999999999986}, {'diff': 0.00035827800000000007}, {'diff': 0.0003560980000000026}, {'diff': 0.0003861520000000007}, {'diff': 0.00038495799999999775...</msg>
<status status="PASS" starttime="20201029 18:19:48.281" endtime="20201029 18:19:48.285"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:48.292" level="INFO">${ACCURACY} = {'diff': [0.00037056900000000115, 0.00035842999999999986, 0.00035827800000000007, 0.0003560980000000026, 0.0003861520000000007, 0.00038495799999999775, 0.00035837500000000105, 0.0003560690000000005, 0...</msg>
<status status="PASS" starttime="20201029 18:19:48.285" endtime="20201029 18:19:48.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:48.296" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201029 18:19:48.295" endtime="20201029 18:19:48.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:48.298" level="INFO">VALUE: [0.00037056900000000115, 0.00035842999999999986, 0.00035827800000000007, 0.0003560980000000026, 0.0003861520000000007, 0.00038495799999999775, 0.00035837500000000105, 0.0003560690000000005, 0.0003564999999999992, 0.00038609699999999844, 0.0003573340000000008, 0.0003593190000000003, 0.00035847199999999857, 0.0003850560000000017, 0.00035741699999999876, 0.00038577700000000034, 0.0003587770000000011, 0.00035802700000000034, 0.00035797200000000154, 0.0003595280000000013, 0.0003573610000000005, 0.0003571939999999982, 0.00036056999999999756, 0.0003599580000000005, 0.0003564159999999983, 0.00035923600000000583, 0.0003607220000000008, 0.00035919499999999965, 0.0003586939999999997, 0.00035931899999999684, 0.00035981899999999734, 0.0003854859999999974, 0.00035826400000000397, 0.0003569029999999987, 0.00035950000000000565, 0.0003571389999999994, 0.00035741699999999876, 0.00038634700000000216, 0.00038495799999999775, 0.00035780499999999577, 0.00038579200000000285, 0.00038586100000000123, 0.00035711100000000023, 0.00035636199999999896, 0.0003861390000000006, 0.00038605499999999626, 0.0003582219999999983, 0.0003855970000000014, 0.0003584030000000002, 0.0003849859999999969]</msg>
<status status="PASS" starttime="20201029 18:19:48.297" endtime="20201029 18:19:48.299"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.293" endtime="20201029 18:19:48.300"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:48.303" endtime="20201029 18:19:48.323"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.302" endtime="20201029 18:19:48.323"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.301" endtime="20201029 18:19:48.324"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.922" endtime="20201029 18:19:48.324"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.921" endtime="20201029 18:19:48.324"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:48.333" endtime="20201029 18:19:48.368"></status>
</kw>
<msg timestamp="20201029 18:19:48.369" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:48.331" endtime="20201029 18:19:48.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:48.371" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:48.370" endtime="20201029 18:19:48.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:48.372" endtime="20201029 18:19:48.374"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.329" endtime="20201029 18:19:48.375"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.327" endtime="20201029 18:19:48.375"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:48.381" endtime="20201029 18:19:48.711"></status>
</kw>
<msg timestamp="20201029 18:19:48.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022252208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022612583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:48.380" endtime="20201029 18:19:48.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:48.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022252208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022612583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:48.716" endtime="20201029 18:19:48.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:48.724" endtime="20201029 18:19:48.726"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.377" endtime="20201029 18:19:48.726"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.376" endtime="20201029 18:19:48.727"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:48.730" level="INFO">${RESULT} = [{'diff': 0.0003603749999999996}, {'diff': 0.00038476399999999925}, {'diff': 0.0003857369999999971}, {'diff': 0.0003566530000000019}, {'diff': 0.00035704200000000186}, {'diff': 0.00035944400000000043}...</msg>
<status status="PASS" starttime="20201029 18:19:48.727" endtime="20201029 18:19:48.730"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:48.734" level="INFO">${ACCURACY} = {'diff': [0.0003603749999999996, 0.00038476399999999925, 0.0003857369999999971, 0.0003566530000000019, 0.00035704200000000186, 0.00035944400000000043, 0.00038548600000000086, 0.0003567090000000002, 0....</msg>
<status status="PASS" starttime="20201029 18:19:48.731" endtime="20201029 18:19:48.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:48.739" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201029 18:19:48.738" endtime="20201029 18:19:48.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:48.741" level="INFO">VALUE: [0.0003603749999999996, 0.00038476399999999925, 0.0003857369999999971, 0.0003566530000000019, 0.00035704200000000186, 0.00035944400000000043, 0.00038548600000000086, 0.0003567090000000002, 0.0003580690000000025, 0.0003588189999999998, 0.0003566110000000032, 0.00035905599999999996, 0.00035922300000000226, 0.00035693000000000183, 0.0003573329999999979, 0.0003855979999999974, 0.00035709800000000014, 0.00038636099999999826, 0.00038605499999999973, 0.00038569500000000187, 0.0003580279999999998, 0.00038609699999999844, 0.0003590420000000004, 0.0003588890000000011, 0.00038612500000000105, 0.00035870799999999925, 0.00038567999999999936, 0.00035659700000000016, 0.0003588329999999959, 0.0003567779999999951, 0.00036013899999999543, 0.0003602769999999991, 0.00035944400000000043, 0.000358667, 0.00035776299999999706, 0.0003608469999999975, 0.00035665299999999844, 0.0003582089999999982, 0.0003859309999999991, 0.00038497200000000426, 0.0003568340000000003, 0.00038506900000000177, 0.0003585689999999961, 0.0003851529999999992, 0.0003561379999999989, 0.000357666999999999, 0.00038533400000000106, 0.000358667, 0.0003599999999999992, 0.00035876399999999753]</msg>
<status status="PASS" starttime="20201029 18:19:48.740" endtime="20201029 18:19:48.746"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.735" endtime="20201029 18:19:48.747"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:48.750" endtime="20201029 18:19:48.770"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.749" endtime="20201029 18:19:48.771"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.747" endtime="20201029 18:19:48.771"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.325" endtime="20201029 18:19:48.771"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.325" endtime="20201029 18:19:48.771"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:48.780" endtime="20201029 18:19:48.816"></status>
</kw>
<msg timestamp="20201029 18:19:48.817" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:48.779" endtime="20201029 18:19:48.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:48.819" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:48.818" endtime="20201029 18:19:48.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:48.820" endtime="20201029 18:19:48.822"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.776" endtime="20201029 18:19:48.822"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.774" endtime="20201029 18:19:48.823"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:48.829" endtime="20201029 18:19:49.115"></status>
</kw>
<msg timestamp="20201029 18:19:49.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022153444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022529528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:48.828" endtime="20201029 18:19:49.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:49.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022153444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022529528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:49.119" endtime="20201029 18:19:49.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:49.127" endtime="20201029 18:19:49.128"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.825" endtime="20201029 18:19:49.129"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.824" endtime="20201029 18:19:49.129"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:49.133" level="INFO">${RESULT} = [{'diff': 0.00037608399999999875}, {'diff': 0.00035775000000000043}, {'diff': 0.00036079199999999867}, {'diff': 0.0003864309999999996}, {'diff': 0.00038670899999999897}, {'diff': 0.0003859589999999982...</msg>
<status status="PASS" starttime="20201029 18:19:49.130" endtime="20201029 18:19:49.133"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:49.138" level="INFO">${ACCURACY} = {'diff': [0.00037608399999999875, 0.00035775000000000043, 0.00036079199999999867, 0.0003864309999999996, 0.00038670899999999897, 0.0003859589999999982, 0.00038538899999999987, 0.0003561530000000014, 0...</msg>
<status status="PASS" starttime="20201029 18:19:49.134" endtime="20201029 18:19:49.138"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:49.142" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201029 18:19:49.141" endtime="20201029 18:19:49.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:49.145" level="INFO">VALUE: [0.00037608399999999875, 0.00035775000000000043, 0.00036079199999999867, 0.0003864309999999996, 0.00038670899999999897, 0.0003859589999999982, 0.00038538899999999987, 0.0003561530000000014, 0.00038508399999999735, 0.0003603890000000026, 0.00038504199999999864, 0.0003598060000000007, 0.0003576389999999999, 0.00035665200000000244, 0.0003592779999999976, 0.00038612500000000105, 0.00035669400000000115, 0.0003866249999999981, 0.00038495799999999775, 0.00038530599999999846, 0.0003860559999999992, 0.0003860000000000009, 0.0003603060000000012, 0.0003851520000000032, 0.000359054999999997, 0.000359458, 0.00036063899999999594, 0.00036052799999999885, 0.000358958999999999, 0.00038533299999999465, 0.0003602769999999991, 0.0003589999999999982, 0.0003572089999999972, 0.0003609309999999949, 0.00035982000000000375, 0.0003564720000000035, 0.0003861390000000006, 0.000357666999999999, 0.0003602779999999986, 0.0003602779999999986, 0.00035909800000000214, 0.0003608339999999974, 0.00035816700000000645, 0.000357666999999999, 0.0003607779999999991, 0.00036095799999999456, 0.00035993100000000083, 0.000385513000000004, 0.000385207999999998, 0.0003566940000000046]</msg>
<status status="PASS" starttime="20201029 18:19:49.143" endtime="20201029 18:19:49.145"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.139" endtime="20201029 18:19:49.146"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:49.149" endtime="20201029 18:19:49.169"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.148" endtime="20201029 18:19:49.169"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.147" endtime="20201029 18:19:49.170"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.772" endtime="20201029 18:19:49.170"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.772" endtime="20201029 18:19:49.170"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:49.179" endtime="20201029 18:19:49.213"></status>
</kw>
<msg timestamp="20201029 18:19:49.213" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:49.177" endtime="20201029 18:19:49.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:49.216" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:49.214" endtime="20201029 18:19:49.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:49.217" endtime="20201029 18:19:49.218"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.175" endtime="20201029 18:19:49.219"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.172" endtime="20201029 18:19:49.219"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:49.226" endtime="20201029 18:19:49.513"></status>
</kw>
<msg timestamp="20201029 18:19:49.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020471417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020847889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:49.224" endtime="20201029 18:19:49.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:49.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020471417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020847889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:49.517" endtime="20201029 18:19:49.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:49.525" endtime="20201029 18:19:49.526"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.222" endtime="20201029 18:19:49.527"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.220" endtime="20201029 18:19:49.527"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:49.531" level="INFO">${RESULT} = [{'diff': 0.0003764720000000027}, {'diff': 0.0003578470000000014}, {'diff': 0.00036088899999999965}, {'diff': 0.0003597079999999968}, {'diff': 0.0003610689999999986}, {'diff': 0.0003598190000000008}, ...</msg>
<status status="PASS" starttime="20201029 18:19:49.528" endtime="20201029 18:19:49.531"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:49.535" level="INFO">${ACCURACY} = {'diff': [0.0003764720000000027, 0.0003578470000000014, 0.00036088899999999965, 0.0003597079999999968, 0.0003610689999999986, 0.0003598190000000008, 0.00035919499999999965, 0.0003564449999999969, 0.00...</msg>
<status status="PASS" starttime="20201029 18:19:49.532" endtime="20201029 18:19:49.535"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:49.539" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201029 18:19:49.538" endtime="20201029 18:19:49.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:49.542" level="INFO">VALUE: [0.0003764720000000027, 0.0003578470000000014, 0.00036088899999999965, 0.0003597079999999968, 0.0003610689999999986, 0.0003598190000000008, 0.00035919499999999965, 0.0003564449999999969, 0.00035798599999999764, 0.000359458, 0.000357764, 0.0003589020000000012, 0.00038512500000000005, 0.00038637499999999783, 0.00035642999999999786, 0.0003594020000000017, 0.0003591810000000001, 0.0003566950000000006, 0.00035897199999999907, 0.00035893099999999983, 0.0003849439999999982, 0.00035870799999999925, 0.0003850560000000017, 0.0003599029999999982, 0.000356666999999998, 0.00035993100000000083, 0.0003601670000000015, 0.0003582220000000018, 0.0003850139999999995, 0.00035747200000000104, 0.0003573610000000005, 0.000356666999999998, 0.00035688900000000606, 0.00038608300000000234, 0.00035844399999999943, 0.0003601810000000011, 0.00035944400000000043, 0.0003570690000000015, 0.0003569449999999974, 0.0003861939999999994, 0.0003593610000000025, 0.0003609299999999954, 0.00038595799999999875, 0.00038616699999999976, 0.00036054200000000536, 0.00038534800000000063, 0.00035705600000000143, 0.0003601250000000028, 0.00035633300000000034, 0.0003568889999999991]</msg>
<status status="PASS" starttime="20201029 18:19:49.540" endtime="20201029 18:19:49.543"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.536" endtime="20201029 18:19:49.543"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:49.547" endtime="20201029 18:19:49.566"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.545" endtime="20201029 18:19:49.567"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.544" endtime="20201029 18:19:49.567"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.171" endtime="20201029 18:19:49.567"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.170" endtime="20201029 18:19:49.567"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:49.576" endtime="20201029 18:19:49.615"></status>
</kw>
<msg timestamp="20201029 18:19:49.615" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:49.574" endtime="20201029 18:19:49.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:49.617" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:49.616" endtime="20201029 18:19:49.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:49.618" endtime="20201029 18:19:49.620"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.572" endtime="20201029 18:19:49.621"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.570" endtime="20201029 18:19:49.621"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:49.627" endtime="20201029 18:19:49.915"></status>
</kw>
<msg timestamp="20201029 18:19:49.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025059403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02543175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:19:49.626" endtime="20201029 18:19:49.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:49.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025059403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02543175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:19:49.919" endtime="20201029 18:19:49.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:49.927" endtime="20201029 18:19:49.928"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.623" endtime="20201029 18:19:49.929"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.621" endtime="20201029 18:19:49.929"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:49.933" level="INFO">${RESULT} = [{'diff': 0.00037234699999999857}, {'diff': 0.0003601250000000028}, {'diff': 0.0003607220000000008}, {'diff': 0.00035704200000000186}, {'diff': 0.0003595420000000009}, {'diff': 0.00036061100000000026}...</msg>
<status status="PASS" starttime="20201029 18:19:49.930" endtime="20201029 18:19:49.933"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:49.937" level="INFO">${ACCURACY} = {'diff': [0.00037234699999999857, 0.0003601250000000028, 0.0003607220000000008, 0.00035704200000000186, 0.0003595420000000009, 0.00036061100000000026, 0.00035795800000000197, 0.0003596810000000006, 0....</msg>
<status status="PASS" starttime="20201029 18:19:49.934" endtime="20201029 18:19:49.937"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:49.941" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201029 18:19:49.940" endtime="20201029 18:19:49.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:49.945" level="INFO">VALUE: [0.00037234699999999857, 0.0003601250000000028, 0.0003607220000000008, 0.00035704200000000186, 0.0003595420000000009, 0.00036061100000000026, 0.00035795800000000197, 0.0003596810000000006, 0.0003849999999999999, 0.0003590000000000017, 0.00035786200000000046, 0.0003609580000000015, 0.00035848599999999814, 0.0003578609999999975, 0.0003851389999999996, 0.00035659799999999964, 0.00038567999999999936, 0.00036074999999999996, 0.0003847360000000036, 0.0003577080000000052, 0.0003851110000000005, 0.0003598329999999969, 0.00035666599999999854, 0.0003606659999999956, 0.00038586100000000123, 0.00035794500000000534, 0.0003585969999999952, 0.0003606529999999955, 0.00038637499999999436, 0.0003601109999999963, 0.00035943100000000033, 0.00038608300000000234, 0.0003581250000000008, 0.00036087500000000355, 0.00035919499999999965, 0.0003575139999999963, 0.00035800000000000415, 0.00035976399999999853, 0.00036005500000000495, 0.00036076399999999953, 0.0003859309999999991, 0.00038617999999999986, 0.00035782000000000175, 0.0003609299999999954, 0.00035908299999999616, 0.0003575700000000015, 0.00035987500000000255, 0.0003600830000000041, 0.0003574860000000041, 0.0003606800000000021]</msg>
<status status="PASS" starttime="20201029 18:19:49.943" endtime="20201029 18:19:49.945"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.938" endtime="20201029 18:19:49.946"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:49.949" endtime="20201029 18:19:49.969"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.948" endtime="20201029 18:19:49.969"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.947" endtime="20201029 18:19:49.970"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.568" endtime="20201029 18:19:49.970"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.568" endtime="20201029 18:19:49.970"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:49.979" endtime="20201029 18:19:50.017"></status>
</kw>
<msg timestamp="20201029 18:19:50.018" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:49.977" endtime="20201029 18:19:50.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:50.020" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:50.019" endtime="20201029 18:19:50.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:50.021" endtime="20201029 18:19:50.023"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.975" endtime="20201029 18:19:50.024"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.973" endtime="20201029 18:19:50.024"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:50.030" endtime="20201029 18:19:50.316"></status>
</kw>
<msg timestamp="20201029 18:19:50.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024117056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024494917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:50.029" endtime="20201029 18:19:50.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:50.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024117056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024494917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:50.320" endtime="20201029 18:19:50.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:50.328" endtime="20201029 18:19:50.329"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.026" endtime="20201029 18:19:50.330"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.025" endtime="20201029 18:19:50.330"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:50.334" level="INFO">${RESULT} = [{'diff': 0.00037786100000000017}, {'diff': 0.00035926299999999856}, {'diff': 0.000385820000000002}, {'diff': 0.0003580549999999995}, {'diff': 0.0003606940000000017}, {'diff': 0.0003862919999999999}, ...</msg>
<status status="PASS" starttime="20201029 18:19:50.331" endtime="20201029 18:19:50.334"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:50.339" level="INFO">${ACCURACY} = {'diff': [0.00037786100000000017, 0.00035926299999999856, 0.000385820000000002, 0.0003580549999999995, 0.0003606940000000017, 0.0003862919999999999, 0.0003573340000000008, 0.00035837500000000105, 0.00...</msg>
<status status="PASS" starttime="20201029 18:19:50.335" endtime="20201029 18:19:50.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:50.343" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201029 18:19:50.342" endtime="20201029 18:19:50.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:50.346" level="INFO">VALUE: [0.00037786100000000017, 0.00035926299999999856, 0.000385820000000002, 0.0003580549999999995, 0.0003606940000000017, 0.0003862919999999999, 0.0003573340000000008, 0.00035837500000000105, 0.0003569020000000027, 0.0003855980000000009, 0.0003853750000000003, 0.0003859859999999979, 0.00035629199999999764, 0.00035827800000000007, 0.00035811099999999776, 0.00038507000000000124, 0.0003578609999999975, 0.0003576939999999987, 0.00035755599999999846, 0.0003859719999999983, 0.0003577920000000026, 0.0003851110000000005, 0.0003581809999999991, 0.00035597199999999607, 0.00035677800000000204, 0.00035661099999999973, 0.0003573610000000005, 0.0003569029999999987, 0.00036043100000000133, 0.00035698599999999664, 0.00035844399999999943, 0.00036029199999999817, 0.00036095799999999456, 0.0003858330000000021, 0.00035811100000000123, 0.00036037500000000305, 0.0003565140000000022, 0.00038505599999999474, 0.0003572080000000047, 0.0003600139999999988, 0.0003595830000000036, 0.00038488899999999937, 0.00036026399999999903, 0.00035738800000000015, 0.00035948599999999914, 0.0003568190000000013, 0.00036070800000000125, 0.0003592219999999993, 0.00038623599999999814, 0.0003566379999999994]</msg>
<status status="PASS" starttime="20201029 18:19:50.344" endtime="20201029 18:19:50.347"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.340" endtime="20201029 18:19:50.347"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:50.351" endtime="20201029 18:19:50.370"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.349" endtime="20201029 18:19:50.371"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.348" endtime="20201029 18:19:50.371"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.971" endtime="20201029 18:19:50.371"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.970" endtime="20201029 18:19:50.371"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:50.380" endtime="20201029 18:19:50.414"></status>
</kw>
<msg timestamp="20201029 18:19:50.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:50.378" endtime="20201029 18:19:50.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:50.417" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:50.415" endtime="20201029 18:19:50.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:50.418" endtime="20201029 18:19:50.419"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.376" endtime="20201029 18:19:50.420"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.374" endtime="20201029 18:19:50.420"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:50.427" endtime="20201029 18:19:50.714"></status>
</kw>
<msg timestamp="20201029 18:19:50.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019912333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020276889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:50.425" endtime="20201029 18:19:50.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:50.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019912333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020276889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:50.718" endtime="20201029 18:19:50.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:50.726" endtime="20201029 18:19:50.728"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.423" endtime="20201029 18:19:50.728"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.421" endtime="20201029 18:19:50.729"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:50.732" level="INFO">${RESULT} = [{'diff': 0.0003645559999999985}, {'diff': 0.00035747200000000104}, {'diff': 0.0003594029999999977}, {'diff': 0.0003590419999999969}, {'diff': 0.00035605599999999696}, {'diff': 0.000359959}, {'diff': ...</msg>
<status status="PASS" starttime="20201029 18:19:50.729" endtime="20201029 18:19:50.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:50.737" level="INFO">${ACCURACY} = {'diff': [0.0003645559999999985, 0.00035747200000000104, 0.0003594029999999977, 0.0003590419999999969, 0.00035605599999999696, 0.000359959, 0.0003594860000000026, 0.0003602909999999987, 0.000358832999...</msg>
<status status="PASS" starttime="20201029 18:19:50.734" endtime="20201029 18:19:50.737"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:50.741" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201029 18:19:50.740" endtime="20201029 18:19:50.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:50.744" level="INFO">VALUE: [0.0003645559999999985, 0.00035747200000000104, 0.0003594029999999977, 0.0003590419999999969, 0.00035605599999999696, 0.000359959, 0.0003594860000000026, 0.0003602909999999987, 0.0003588329999999994, 0.0003605420000000019, 0.00035943100000000033, 0.0003862500000000012, 0.00035709700000000066, 0.0003858339999999981, 0.0003570549999999985, 0.0003574159999999993, 0.0003851659999999993, 0.00036074999999999996, 0.00038493100000000155, 0.00035943000000000086, 0.0003571119999999997, 0.0003566670000000015, 0.0003855689999999988, 0.0003577920000000026, 0.0003576250000000003, 0.00035974999999999896, 0.00035761100000000073, 0.00035930500000000073, 0.00035772300000000076, 0.0003610420000000024, 0.00036002799999999835, 0.00035637499999999905, 0.0003574999999999967, 0.00035909700000000266, 0.00035809700000000166, 0.00038629200000000335, 0.0003857640000000037, 0.0003580830000000021, 0.0003560830000000001, 0.0003585700000000025, 0.0003855560000000022, 0.0003602769999999991, 0.00035611099999999923, 0.0003588890000000011, 0.00035844399999999943, 0.0003596940000000007, 0.00035793100000000577, 0.00035638900000000556, 0.0003863750000000013, 0.000359959]</msg>
<status status="PASS" starttime="20201029 18:19:50.743" endtime="20201029 18:19:50.745"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.738" endtime="20201029 18:19:50.746"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:50.749" endtime="20201029 18:19:50.769"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.748" endtime="20201029 18:19:50.770"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.747" endtime="20201029 18:19:50.770"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.372" endtime="20201029 18:19:50.770"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.372" endtime="20201029 18:19:50.770"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:50.779" endtime="20201029 18:19:50.817"></status>
</kw>
<msg timestamp="20201029 18:19:50.818" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:50.777" endtime="20201029 18:19:50.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:50.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:50.821" endtime="20201029 18:19:50.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:50.826" endtime="20201029 18:19:50.829"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.775" endtime="20201029 18:19:50.830"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.773" endtime="20201029 18:19:50.831"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:50.844" endtime="20201029 18:19:51.136"></status>
</kw>
<msg timestamp="20201029 18:19:51.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022914986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023285972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:50.841" endtime="20201029 18:19:51.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:51.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022914986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023285972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:51.140" endtime="20201029 18:19:51.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:51.148" endtime="20201029 18:19:51.150"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.836" endtime="20201029 18:19:51.151"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.832" endtime="20201029 18:19:51.151"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:51.155" level="INFO">${RESULT} = [{'diff': 0.00037098600000000023}, {'diff': 0.0003598190000000008}, {'diff': 0.00035658400000000007}, {'diff': 0.0003582089999999982}, {'diff': 0.0003855000000000004}, {'diff': 0.00035683300000000084}...</msg>
<status status="PASS" starttime="20201029 18:19:51.152" endtime="20201029 18:19:51.155"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:51.159" level="INFO">${ACCURACY} = {'diff': [0.00037098600000000023, 0.0003598190000000008, 0.00035658400000000007, 0.0003582089999999982, 0.0003855000000000004, 0.00035683300000000084, 0.00035805600000000243, 0.00038567999999999936, 0...</msg>
<status status="PASS" starttime="20201029 18:19:51.156" endtime="20201029 18:19:51.159"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:51.163" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201029 18:19:51.162" endtime="20201029 18:19:51.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:51.166" level="INFO">VALUE: [0.00037098600000000023, 0.0003598190000000008, 0.00035658400000000007, 0.0003582089999999982, 0.0003855000000000004, 0.00035683300000000084, 0.00035805600000000243, 0.00038567999999999936, 0.00035643000000000133, 0.0003587089999999987, 0.0003566250000000028, 0.0003862919999999999, 0.0003578480000000009, 0.0003574860000000006, 0.0003605830000000011, 0.00036079200000000214, 0.00035687499999999955, 0.0003593340000000028, 0.00038654100000000066, 0.00038648600000000186, 0.00035911099999999876, 0.00035762499999999683, 0.0003588340000000023, 0.0003573190000000018, 0.0003589999999999982, 0.00035961100000000273, 0.00038549999999999696, 0.0003583890000000006, 0.000386417, 0.00038552800000000303, 0.0003609169999999953, 0.00038656899999999633, 0.00035927800000000454, 0.00038572199999999807, 0.0003605549999999985, 0.00035852799999999685, 0.0003607220000000008, 0.0003856520000000002, 0.00035754200000000236, 0.00036108399999999763, 0.00035952799999999785, 0.00036047200000000057, 0.00035742999999999886, 0.00035791699999999926, 0.0003596810000000006, 0.00035776399999999653, 0.0003862780000000038, 0.00035952799999999785, 0.00035841699999999976, 0.0003606810000000016]</msg>
<status status="PASS" starttime="20201029 18:19:51.164" endtime="20201029 18:19:51.167"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.160" endtime="20201029 18:19:51.168"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:51.171" endtime="20201029 18:19:51.191"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.170" endtime="20201029 18:19:51.191"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.169" endtime="20201029 18:19:51.192"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.771" endtime="20201029 18:19:51.192"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.771" endtime="20201029 18:19:51.192"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:51.201" endtime="20201029 18:19:51.237"></status>
</kw>
<msg timestamp="20201029 18:19:51.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:51.199" endtime="20201029 18:19:51.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:51.240" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:51.239" endtime="20201029 18:19:51.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:51.241" endtime="20201029 18:19:51.243"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.197" endtime="20201029 18:19:51.244"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.195" endtime="20201029 18:19:51.244"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:51.250" endtime="20201029 18:19:51.535"></status>
</kw>
<msg timestamp="20201029 18:19:51.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023118444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023483431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:51.249" endtime="20201029 18:19:51.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:51.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023118444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023483431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:51.539" endtime="20201029 18:19:51.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:51.547" endtime="20201029 18:19:51.549"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.246" endtime="20201029 18:19:51.549"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.245" endtime="20201029 18:19:51.550"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:51.554" level="INFO">${RESULT} = [{'diff': 0.00036498700000000064}, {'diff': 0.000385110999999997}, {'diff': 0.000360361}, {'diff': 0.0003587770000000011}, {'diff': 0.0003580000000000007}, {'diff': 0.00035666599999999854}, {'diff': 0...</msg>
<status status="PASS" starttime="20201029 18:19:51.550" endtime="20201029 18:19:51.554"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:51.558" level="INFO">${ACCURACY} = {'diff': [0.00036498700000000064, 0.000385110999999997, 0.000360361, 0.0003587770000000011, 0.0003580000000000007, 0.00035666599999999854, 0.00035843099999999933, 0.00038517999999999886, 0.00038525000...</msg>
<status status="PASS" starttime="20201029 18:19:51.555" endtime="20201029 18:19:51.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:51.563" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201029 18:19:51.562" endtime="20201029 18:19:51.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:51.565" level="INFO">VALUE: [0.00036498700000000064, 0.000385110999999997, 0.000360361, 0.0003587770000000011, 0.0003580000000000007, 0.00035666599999999854, 0.00035843099999999933, 0.00038517999999999886, 0.0003852500000000002, 0.0003854720000000013, 0.00035806999999999853, 0.0003588199999999993, 0.00035794500000000187, 0.00035805599999999896, 0.0003564029999999982, 0.00035632000000000025, 0.0003859309999999991, 0.00035744500000000137, 0.0003573889999999996, 0.00035875000000000143, 0.00035929199999999717, 0.00035906999999999606, 0.0003584999999999977, 0.00038512500000000005, 0.0003606940000000017, 0.00036037500000000305, 0.00038555499999999576, 0.00038501400000000296, 0.0003562500000000024, 0.00035872200000000576, 0.0003571669999999985, 0.00035609699999999966, 0.0003586109999999948, 0.00036029100000000563, 0.00035805600000000243, 0.00035791699999999926, 0.0003576809999999986, 0.00035904200000000386, 0.00038522199999999757, 0.00035774999999999696, 0.0003588190000000033, 0.0003572359999999969, 0.00035847199999999857, 0.00035952799999999785, 0.0003601250000000028, 0.0003864309999999996, 0.0003600559999999975, 0.0003861110000000015, 0.00035854200000000336, 0.00035948599999999914]</msg>
<status status="PASS" starttime="20201029 18:19:51.564" endtime="20201029 18:19:51.566"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.559" endtime="20201029 18:19:51.566"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:51.570" endtime="20201029 18:19:51.589"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.568" endtime="20201029 18:19:51.590"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.567" endtime="20201029 18:19:51.590"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.193" endtime="20201029 18:19:51.591"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.193" endtime="20201029 18:19:51.591"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:51.599" endtime="20201029 18:19:51.634"></status>
</kw>
<msg timestamp="20201029 18:19:51.634" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:51.598" endtime="20201029 18:19:51.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:51.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:51.635" endtime="20201029 18:19:51.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:51.638" endtime="20201029 18:19:51.639"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.595" endtime="20201029 18:19:51.640"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.593" endtime="20201029 18:19:51.640"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:51.647" endtime="20201029 18:19:51.933"></status>
</kw>
<msg timestamp="20201029 18:19:51.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021371431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021734736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:51.645" endtime="20201029 18:19:51.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:51.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021371431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021734736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:51.937" endtime="20201029 18:19:51.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:51.945" endtime="20201029 18:19:51.947"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.643" endtime="20201029 18:19:51.947"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.641" endtime="20201029 18:19:51.948"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:51.952" level="INFO">${RESULT} = [{'diff': 0.00036330500000000127}, {'diff': 0.0003850699999999978}, {'diff': 0.00035927800000000107}, {'diff': 0.0003563469999999999}, {'diff': 0.0003596940000000007}, {'diff': 0.0003604590000000005},...</msg>
<status status="PASS" starttime="20201029 18:19:51.949" endtime="20201029 18:19:51.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:51.956" level="INFO">${ACCURACY} = {'diff': [0.00036330500000000127, 0.0003850699999999978, 0.00035927800000000107, 0.0003563469999999999, 0.0003596940000000007, 0.0003604590000000005, 0.00036012499999999933, 0.0003579860000000011, 0.0...</msg>
<status status="PASS" starttime="20201029 18:19:51.953" endtime="20201029 18:19:51.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:51.960" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201029 18:19:51.959" endtime="20201029 18:19:51.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:51.962" level="INFO">VALUE: [0.00036330500000000127, 0.0003850699999999978, 0.00035927800000000107, 0.0003563469999999999, 0.0003596940000000007, 0.0003604590000000005, 0.00036012499999999933, 0.0003579860000000011, 0.0003595969999999997, 0.0003578480000000009, 0.00035693000000000183, 0.00035962499999999883, 0.0003584870000000011, 0.00035848599999999814, 0.0003567769999999991, 0.00035856899999999955, 0.0003597079999999968, 0.0003583060000000027, 0.00038638900000000087, 0.00038552799999999957, 0.0003562219999999998, 0.00035934699999999944, 0.0003605139999999993, 0.00035994400000000093, 0.0003576250000000003, 0.0003862629999999978, 0.00036074999999999996, 0.0003864300000000001, 0.000357861000000001, 0.00035670799999999725, 0.0003856939999999989, 0.00035644399999999743, 0.00035616700000000445, 0.00035687499999999955, 0.0003598199999999968, 0.0003862640000000042, 0.0003593060000000037, 0.0003606669999999951, 0.00035747199999999757, 0.0003851389999999996, 0.0003565700000000005, 0.00036024999999999946, 0.0003590979999999952, 0.0003858880000000009, 0.000356457999999997, 0.0003864309999999996, 0.0003598470000000034, 0.00036074999999999996, 0.0003565140000000022, 0.00035633300000000034]</msg>
<status status="PASS" starttime="20201029 18:19:51.961" endtime="20201029 18:19:51.963"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.956" endtime="20201029 18:19:51.964"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:51.967" endtime="20201029 18:19:51.987"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.966" endtime="20201029 18:19:51.987"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.965" endtime="20201029 18:19:51.987"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.592" endtime="20201029 18:19:51.988"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.591" endtime="20201029 18:19:51.988"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:51.996" endtime="20201029 18:19:52.040"></status>
</kw>
<msg timestamp="20201029 18:19:52.041" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:51.995" endtime="20201029 18:19:52.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:52.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:52.042" endtime="20201029 18:19:52.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:52.044" endtime="20201029 18:19:52.046"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.992" endtime="20201029 18:19:52.046"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.990" endtime="20201029 18:19:52.047"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:52.053" endtime="20201029 18:19:52.341"></status>
</kw>
<msg timestamp="20201029 18:19:52.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026150361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026519417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:52.052" endtime="20201029 18:19:52.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:52.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026150361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026519417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:52.350" endtime="20201029 18:19:52.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:52.368" endtime="20201029 18:19:52.371"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.049" endtime="20201029 18:19:52.372"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.047" endtime="20201029 18:19:52.373"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:52.381" level="INFO">${RESULT} = [{'diff': 0.00036905599999999955}, {'diff': 0.00035844399999999943}, {'diff': 0.00035862499999999783}, {'diff': 0.00035824999999999746}, {'diff': 0.0003854719999999978}, {'diff': 0.0003859579999999987...</msg>
<status status="PASS" starttime="20201029 18:19:52.375" endtime="20201029 18:19:52.382"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:52.390" level="INFO">${ACCURACY} = {'diff': [0.00036905599999999955, 0.00035844399999999943, 0.00035862499999999783, 0.00035824999999999746, 0.0003854719999999978, 0.00038595799999999875, 0.0003862919999999999, 0.0003585410000000004, 0...</msg>
<status status="PASS" starttime="20201029 18:19:52.383" endtime="20201029 18:19:52.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:52.399" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201029 18:19:52.397" endtime="20201029 18:19:52.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:52.404" level="INFO">VALUE: [0.00036905599999999955, 0.00035844399999999943, 0.00035862499999999783, 0.00035824999999999746, 0.0003854719999999978, 0.00038595799999999875, 0.0003862919999999999, 0.0003585410000000004, 0.00035823600000000136, 0.00035859800000000164, 0.00038648700000000133, 0.0003860140000000005, 0.00038507000000000124, 0.0003606390000000029, 0.00035974999999999896, 0.0003854309999999986, 0.00035929100000000463, 0.0003585419999999964, 0.00035676400000000247, 0.0003581939999999992, 0.00036056999999999756, 0.00035965300000000144, 0.00035722200000000426, 0.0003573470000000009, 0.00035915300000000094, 0.00035679100000000213, 0.0003587219999999988, 0.00035947199999999957, 0.00036015300000000194, 0.0003609160000000028, 0.0003611940000000022, 0.0003591250000000018, 0.00036065300000000244, 0.00035720799999999775, 0.0003854719999999978, 0.00035880499999999677, 0.0003595419999999974, 0.00038529200000000235, 0.0003580830000000021, 0.0003858189999999956, 0.0003854309999999986, 0.0003588470000000024, 0.0003569449999999974, 0.00035954099999999795, 0.00035766599999999954, 0.0003610139999999998, 0.0003595830000000036, 0.0003860550000000032, 0.0003565700000000005, 0.0003571799999999986]</msg>
<status status="PASS" starttime="20201029 18:19:52.401" endtime="20201029 18:19:52.407"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.391" endtime="20201029 18:19:52.408"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:52.415" endtime="20201029 18:19:52.436"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.412" endtime="20201029 18:19:52.437"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.410" endtime="20201029 18:19:52.437"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.989" endtime="20201029 18:19:52.438"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.988" endtime="20201029 18:19:52.438"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:52.446" endtime="20201029 18:19:52.484"></status>
</kw>
<msg timestamp="20201029 18:19:52.484" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:52.445" endtime="20201029 18:19:52.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:52.487" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:52.485" endtime="20201029 18:19:52.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:52.488" endtime="20201029 18:19:52.489"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.442" endtime="20201029 18:19:52.490"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.440" endtime="20201029 18:19:52.490"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:52.496" endtime="20201029 18:19:52.782"></status>
</kw>
<msg timestamp="20201029 18:19:52.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024451208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024815694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:52.495" endtime="20201029 18:19:52.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:52.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024451208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024815694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:52.786" endtime="20201029 18:19:52.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:52.794" endtime="20201029 18:19:52.796"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.492" endtime="20201029 18:19:52.796"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.491" endtime="20201029 18:19:52.797"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:52.800" level="INFO">${RESULT} = [{'diff': 0.00036448600000000067}, {'diff': 0.0003568470000000004}, {'diff': 0.000358070000000002}, {'diff': 0.00035845900000000194}, {'diff': 0.0003856109999999975}, {'diff': 0.00035613800000000237},...</msg>
<status status="PASS" starttime="20201029 18:19:52.797" endtime="20201029 18:19:52.801"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:52.805" level="INFO">${ACCURACY} = {'diff': [0.00036448600000000067, 0.0003568470000000004, 0.000358070000000002, 0.00035845900000000194, 0.0003856109999999975, 0.00035613800000000237, 0.0003848749999999998, 0.0003581809999999991, 0.00...</msg>
<status status="PASS" starttime="20201029 18:19:52.801" endtime="20201029 18:19:52.806"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:52.810" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201029 18:19:52.809" endtime="20201029 18:19:52.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:52.812" level="INFO">VALUE: [0.00036448600000000067, 0.0003568470000000004, 0.000358070000000002, 0.00035845900000000194, 0.0003856109999999975, 0.00035613800000000237, 0.0003848749999999998, 0.0003581809999999991, 0.0003590829999999996, 0.0003570280000000023, 0.00038566699999999926, 0.00036048600000000014, 0.000384917000000002, 0.0003567769999999991, 0.0003588189999999998, 0.0003575279999999993, 0.0003561379999999989, 0.00035816600000000004, 0.0003573610000000005, 0.0003847919999999949, 0.0003595269999999984, 0.00035976400000000547, 0.00035998599999999964, 0.0003860560000000027, 0.0003560280000000013, 0.0003597219999999998, 0.00035883300000000284, 0.00038618099999999933, 0.00036032000000000425, 0.00035673600000000333, 0.00038522199999999757, 0.00035624999999999546, 0.00038562500000000055, 0.00035943000000000086, 0.00035997200000000007, 0.0003571669999999985, 0.00038588900000000037, 0.00035659700000000016, 0.00035777800000000304, 0.0003859859999999979, 0.00035858400000000207, 0.00038586100000000123, 0.00038552700000000356, 0.00035791699999999926, 0.00035648599999999614, 0.0003852639999999963, 0.00038506900000000177, 0.0003566389999999989, 0.0003599450000000004, 0.00035893099999999983]</msg>
<status status="PASS" starttime="20201029 18:19:52.811" endtime="20201029 18:19:52.813"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.806" endtime="20201029 18:19:52.813"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:52.817" endtime="20201029 18:19:52.836"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.816" endtime="20201029 18:19:52.837"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.814" endtime="20201029 18:19:52.837"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.439" endtime="20201029 18:19:52.838"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.438" endtime="20201029 18:19:52.838"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:52.846" endtime="20201029 18:19:52.880"></status>
</kw>
<msg timestamp="20201029 18:19:52.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:52.845" endtime="20201029 18:19:52.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:52.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:52.882" endtime="20201029 18:19:52.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:52.884" endtime="20201029 18:19:52.886"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.842" endtime="20201029 18:19:52.886"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.840" endtime="20201029 18:19:52.887"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:52.893" endtime="20201029 18:19:53.189"></status>
</kw>
<msg timestamp="20201029 18:19:53.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020352611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020734319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:52.892" endtime="20201029 18:19:53.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:53.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020352611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020734319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:53.199" endtime="20201029 18:19:53.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:53.217" endtime="20201029 18:19:53.220"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.889" endtime="20201029 18:19:53.221"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.887" endtime="20201029 18:19:53.222"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:53.230" level="INFO">${RESULT} = [{'diff': 0.00038170800000000144}, {'diff': 0.0003593329999999999}, {'diff': 0.0003580000000000007}, {'diff': 0.0003601529999999985}, {'diff': 0.0003856800000000028}, {'diff': 0.0003597359999999994}, ...</msg>
<status status="PASS" starttime="20201029 18:19:53.224" endtime="20201029 18:19:53.231"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:53.239" level="INFO">${ACCURACY} = {'diff': [0.00038170800000000144, 0.0003593329999999999, 0.0003580000000000007, 0.0003601529999999985, 0.0003856800000000028, 0.0003597359999999994, 0.00035872300000000176, 0.00038526399999999975, 0.0...</msg>
<status status="PASS" starttime="20201029 18:19:53.232" endtime="20201029 18:19:53.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:53.246" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201029 18:19:53.245" endtime="20201029 18:19:53.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:53.248" level="INFO">VALUE: [0.00038170800000000144, 0.0003593329999999999, 0.0003580000000000007, 0.0003601529999999985, 0.0003856800000000028, 0.0003597359999999994, 0.00035872300000000176, 0.00038526399999999975, 0.0003851810000000018, 0.0003597219999999998, 0.00035779199999999914, 0.00035801400000000025, 0.0003575700000000015, 0.0003852919999999989, 0.0003609029999999992, 0.00038567999999999936, 0.00035827800000000007, 0.00035952700000000185, 0.00035843099999999933, 0.00035611099999999923, 0.0003568889999999991, 0.0003574730000000005, 0.00035875000000000143, 0.00035663900000000234, 0.0003852779999999993, 0.00035829199999999964, 0.0003591810000000001, 0.0003864720000000023, 0.00035645899999999994, 0.0003857079999999985, 0.00036090299999999575, 0.0003605140000000062, 0.0003591250000000018, 0.0003861939999999994, 0.000360458000000001, 0.0003585830000000026, 0.0003859169999999995, 0.0003586939999999997, 0.0003563889999999986, 0.00038504100000000263, 0.00035777800000000304, 0.000357861000000001, 0.00038554199999999567, 0.00035777800000000304, 0.00035626399999999503, 0.0003605280000000058, 0.00038527799999999585, 0.0003608060000000052, 0.0003604450000000009, 0.0003607920000000056]</msg>
<status status="PASS" starttime="20201029 18:19:53.247" endtime="20201029 18:19:53.249"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.241" endtime="20201029 18:19:53.250"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:53.253" endtime="20201029 18:19:53.273"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.252" endtime="20201029 18:19:53.273"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.251" endtime="20201029 18:19:53.274"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.839" endtime="20201029 18:19:53.274"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.838" endtime="20201029 18:19:53.274"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:53.282" endtime="20201029 18:19:53.317"></status>
</kw>
<msg timestamp="20201029 18:19:53.318" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:53.281" endtime="20201029 18:19:53.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:53.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:53.319" endtime="20201029 18:19:53.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:53.321" endtime="20201029 18:19:53.323"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.278" endtime="20201029 18:19:53.323"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.276" endtime="20201029 18:19:53.324"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:53.330" endtime="20201029 18:19:53.616"></status>
</kw>
<msg timestamp="20201029 18:19:53.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021228278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021611597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:53.329" endtime="20201029 18:19:53.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:53.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021228278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021611597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:53.620" endtime="20201029 18:19:53.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:53.628" endtime="20201029 18:19:53.630"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.326" endtime="20201029 18:19:53.630"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.324" endtime="20201029 18:19:53.631"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:53.634" level="INFO">${RESULT} = [{'diff': 0.000383319}, {'diff': 0.00035804200000000286}, {'diff': 0.0003608060000000017}, {'diff': 0.00038512500000000005}, {'diff': 0.00036098600000000064}, {'diff': 0.00035668100000000105}, {'diff'...</msg>
<status status="PASS" starttime="20201029 18:19:53.631" endtime="20201029 18:19:53.635"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:53.638" level="INFO">${ACCURACY} = {'diff': [0.000383319, 0.00035804200000000286, 0.0003608060000000017, 0.00038512500000000005, 0.00036098600000000064, 0.00035668100000000105, 0.0003576389999999999, 0.00035659700000000016, 0.000385583...</msg>
<status status="PASS" starttime="20201029 18:19:53.635" endtime="20201029 18:19:53.639"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:53.643" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201029 18:19:53.642" endtime="20201029 18:19:53.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:53.645" level="INFO">VALUE: [0.000383319, 0.00035804200000000286, 0.0003608060000000017, 0.00038512500000000005, 0.00036098600000000064, 0.00035668100000000105, 0.0003576389999999999, 0.00035659700000000016, 0.00038558399999999785, 0.00038618099999999933, 0.00035719400000000165, 0.0003575700000000015, 0.0003575279999999993, 0.00038576400000000025, 0.0003577770000000001, 0.0003859859999999979, 0.0003567220000000003, 0.00035880500000000023, 0.0003563339999999998, 0.00038520800000000147, 0.00035774999999999696, 0.00038606900000000277, 0.00038640300000000044, 0.0003571379999999999, 0.00035741699999999876, 0.0003591810000000001, 0.0003611529999999995, 0.00038605499999999626, 0.00038590299999999994, 0.0003859860000000048, 0.0003574999999999967, 0.00036102799999999935, 0.00038504100000000263, 0.00035913899999999443, 0.00035808400000000157, 0.0003595280000000048, 0.00035919499999999965, 0.00036104099999999945, 0.00035944400000000043, 0.00035791699999999926, 0.0003583610000000015, 0.00035943100000000033, 0.0003593889999999947, 0.00038634700000000216, 0.00036062499999999637, 0.00035644400000000437, 0.0003858330000000021, 0.0003601810000000011, 0.00035965300000000144, 0.0003580269999999969]</msg>
<status status="PASS" starttime="20201029 18:19:53.644" endtime="20201029 18:19:53.647"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.639" endtime="20201029 18:19:53.647"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:53.651" endtime="20201029 18:19:53.670"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.649" endtime="20201029 18:19:53.671"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.648" endtime="20201029 18:19:53.671"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.275" endtime="20201029 18:19:53.671"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.274" endtime="20201029 18:19:53.671"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:53.680" endtime="20201029 18:19:53.715"></status>
</kw>
<msg timestamp="20201029 18:19:53.715" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:53.678" endtime="20201029 18:19:53.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:53.718" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:53.716" endtime="20201029 18:19:53.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:53.719" endtime="20201029 18:19:53.720"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.676" endtime="20201029 18:19:53.721"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.674" endtime="20201029 18:19:53.721"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:53.728" endtime="20201029 18:19:54.028"></status>
</kw>
<msg timestamp="20201029 18:19:54.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020518917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020894639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:53.726" endtime="20201029 18:19:54.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:54.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020518917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020894639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:54.037" endtime="20201029 18:19:54.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:54.054" endtime="20201029 18:19:54.056"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.724" endtime="20201029 18:19:54.057"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.722" endtime="20201029 18:19:54.057"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:54.061" level="INFO">${RESULT} = [{'diff': 0.0003757219999999985}, {'diff': 0.0003585410000000004}, {'diff': 0.0003579579999999985}, {'diff': 0.0003562080000000002}, {'diff': 0.00035862499999999783}, {'diff': 0.0003850970000000009}, ...</msg>
<status status="PASS" starttime="20201029 18:19:54.058" endtime="20201029 18:19:54.061"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:54.066" level="INFO">${ACCURACY} = {'diff': [0.0003757219999999985, 0.0003585410000000004, 0.0003579579999999985, 0.0003562080000000002, 0.00035862499999999783, 0.0003850970000000009, 0.0003605139999999993, 0.0003595420000000009, 0.000...</msg>
<status status="PASS" starttime="20201029 18:19:54.062" endtime="20201029 18:19:54.066"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:54.070" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201029 18:19:54.069" endtime="20201029 18:19:54.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:54.072" level="INFO">VALUE: [0.0003757219999999985, 0.0003585410000000004, 0.0003579579999999985, 0.0003562080000000002, 0.00035862499999999783, 0.0003850970000000009, 0.0003605139999999993, 0.0003595420000000009, 0.00036074999999999996, 0.0003600139999999988, 0.00035761100000000073, 0.0003576950000000016, 0.00035624999999999893, 0.0003859169999999995, 0.000385416999999999, 0.000385820000000002, 0.0003596940000000007, 0.0003597779999999981, 0.00038512500000000005, 0.000357764, 0.0003862499999999977, 0.0003595830000000001, 0.00035655600000000093, 0.00038620900000000194, 0.0003865560000000032, 0.00035683399999999685, 0.00035819499999999865, 0.00035843099999999933, 0.0003582640000000005, 0.00038649999999999796, 0.0003598339999999964, 0.000359361999999995, 0.0003856949999999984, 0.0003853049999999955, 0.0003590270000000048, 0.00036094499999999446, 0.00035962499999999537, 0.0003592500000000054, 0.000358457999999999, 0.00035994400000000093, 0.0003600419999999979, 0.00038631999999999556, 0.00035620900000000316, 0.00035897199999999907, 0.0003860550000000032, 0.0003594720000000065, 0.00038663800000000165, 0.0003609309999999949, 0.00035944400000000043, 0.00035627700000000206]</msg>
<status status="PASS" starttime="20201029 18:19:54.071" endtime="20201029 18:19:54.073"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.067" endtime="20201029 18:19:54.074"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:54.077" endtime="20201029 18:19:54.097"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.076" endtime="20201029 18:19:54.097"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.075" endtime="20201029 18:19:54.098"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.672" endtime="20201029 18:19:54.098"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.672" endtime="20201029 18:19:54.098"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:54.107" endtime="20201029 18:19:54.141"></status>
</kw>
<msg timestamp="20201029 18:19:54.142" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:54.105" endtime="20201029 18:19:54.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:54.144" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:54.143" endtime="20201029 18:19:54.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:54.145" endtime="20201029 18:19:54.147"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.103" endtime="20201029 18:19:54.148"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.100" endtime="20201029 18:19:54.148"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:54.154" endtime="20201029 18:19:54.441"></status>
</kw>
<msg timestamp="20201029 18:19:54.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021037972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021402472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:54.153" endtime="20201029 18:19:54.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:54.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021037972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021402472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:54.445" endtime="20201029 18:19:54.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:54.454" endtime="20201029 18:19:54.455"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.150" endtime="20201029 18:19:54.456"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.149" endtime="20201029 18:19:54.456"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:54.460" level="INFO">${RESULT} = [{'diff': 0.00036450000000000024}, {'diff': 0.00038616699999999976}, {'diff': 0.0003850970000000009}, {'diff': 0.0003577770000000001}, {'diff': 0.00036088899999999965}, {'diff': 0.0003573610000000005}...</msg>
<status status="PASS" starttime="20201029 18:19:54.457" endtime="20201029 18:19:54.460"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:54.464" level="INFO">${ACCURACY} = {'diff': [0.00036450000000000024, 0.00038616699999999976, 0.0003850970000000009, 0.0003577770000000001, 0.00036088899999999965, 0.0003573610000000005, 0.00035787500000000055, 0.0003585410000000004, 0....</msg>
<status status="PASS" starttime="20201029 18:19:54.461" endtime="20201029 18:19:54.464"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:54.468" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201029 18:19:54.467" endtime="20201029 18:19:54.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:54.471" level="INFO">VALUE: [0.00036450000000000024, 0.00038616699999999976, 0.0003850970000000009, 0.0003577770000000001, 0.00036088899999999965, 0.0003573610000000005, 0.00035787500000000055, 0.0003585410000000004, 0.00038586099999999776, 0.00035851400000000075, 0.0003605830000000011, 0.00035659700000000016, 0.0003862780000000003, 0.0003568199999999973, 0.00035733399999999735, 0.0003854300000000026, 0.0003849580000000012, 0.00036054099999999895, 0.0003565140000000022, 0.0003586389999999974, 0.00035677800000000204, 0.00035823699999999736, 0.00035934699999999944, 0.00035637499999999905, 0.00035848599999999814, 0.00038637499999999783, 0.000385304999999999, 0.00035770799999999825, 0.0003863609999999948, 0.0003855550000000027, 0.0003578470000000014, 0.0003596940000000007, 0.0003849439999999982, 0.000359346999999996, 0.0003587779999999971, 0.0003575830000000016, 0.000356666999999998, 0.0003591250000000018, 0.0003592219999999993, 0.0003607360000000004, 0.0003605969999999972, 0.00038625000000000465, 0.00035676400000000247, 0.0003865279999999971, 0.00035998599999999964, 0.0003570129999999963, 0.0003576389999999999, 0.00035916600000000104, 0.00038618099999999933, 0.0003587500000000049]</msg>
<status status="PASS" starttime="20201029 18:19:54.469" endtime="20201029 18:19:54.471"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.465" endtime="20201029 18:19:54.472"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:54.476" endtime="20201029 18:19:54.495"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.474" endtime="20201029 18:19:54.496"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.473" endtime="20201029 18:19:54.496"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.099" endtime="20201029 18:19:54.496"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.098" endtime="20201029 18:19:54.496"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:54.505" endtime="20201029 18:19:54.545"></status>
</kw>
<msg timestamp="20201029 18:19:54.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:54.503" endtime="20201029 18:19:54.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:54.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:54.546" endtime="20201029 18:19:54.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:54.550" endtime="20201029 18:19:54.553"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.501" endtime="20201029 18:19:54.553"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.499" endtime="20201029 18:19:54.554"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:54.564" endtime="20201029 18:19:54.852"></status>
</kw>
<msg timestamp="20201029 18:19:54.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024684597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025050375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:54.561" endtime="20201029 18:19:54.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:54.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024684597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025050375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:54.856" endtime="20201029 18:19:54.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:54.864" endtime="20201029 18:19:54.866"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.558" endtime="20201029 18:19:54.866"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.555" endtime="20201029 18:19:54.867"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:54.871" level="INFO">${RESULT} = [{'diff': 0.00036577800000000063}, {'diff': 0.0003580279999999998}, {'diff': 0.0003609580000000015}, {'diff': 0.00035834699999999844}, {'diff': 0.00035943099999999686}, {'diff': 0.00035607}, {'diff': ...</msg>
<status status="PASS" starttime="20201029 18:19:54.867" endtime="20201029 18:19:54.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:54.875" level="INFO">${ACCURACY} = {'diff': [0.00036577800000000063, 0.0003580279999999998, 0.0003609580000000015, 0.00035834699999999844, 0.00035943099999999686, 0.00035607, 0.00035624999999999893, 0.0003604030000000022, 0.00035741599...</msg>
<status status="PASS" starttime="20201029 18:19:54.871" endtime="20201029 18:19:54.875"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:54.879" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201029 18:19:54.878" endtime="20201029 18:19:54.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:54.881" level="INFO">VALUE: [0.00036577800000000063, 0.0003580279999999998, 0.0003609580000000015, 0.00035834699999999844, 0.00035943099999999686, 0.00035607, 0.00035624999999999893, 0.0003604030000000022, 0.0003574159999999993, 0.0003590839999999991, 0.0003565409999999984, 0.0003584860000000016, 0.00035924999999999846, 0.00035851400000000075, 0.00035795900000000144, 0.0003849999999999999, 0.0003607360000000004, 0.0003860560000000027, 0.00036054200000000536, 0.00035619499999999665, 0.00035902799999999735, 0.00038541599999999954, 0.00036026399999999903, 0.00038599999999999746, 0.00035955600000000393, 0.0003855970000000014, 0.00038604199999999617, 0.00035980599999999724, 0.0003560129999999953, 0.0003598470000000034, 0.0003855279999999961, 0.00038479200000000185, 0.0003591390000000014, 0.0003848060000000014, 0.00035874999999999796, 0.00035626400000000197, 0.00036066600000000254, 0.0003586380000000014, 0.0003595969999999962, 0.00035936099999999555, 0.0003855829999999949, 0.0003602779999999986, 0.0003583610000000015, 0.0003593749999999951, 0.0003581939999999992, 0.00035997200000000007, 0.000358667, 0.00038519400000000537, 0.00038501400000000296, 0.00035922200000000626]</msg>
<status status="PASS" starttime="20201029 18:19:54.880" endtime="20201029 18:19:54.883"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.875" endtime="20201029 18:19:54.883"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:54.887" endtime="20201029 18:19:54.906"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.885" endtime="20201029 18:19:54.907"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.884" endtime="20201029 18:19:54.907"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.497" endtime="20201029 18:19:54.908"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.497" endtime="20201029 18:19:54.908"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:54.916" endtime="20201029 18:19:54.950"></status>
</kw>
<msg timestamp="20201029 18:19:54.950" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:54.915" endtime="20201029 18:19:54.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:54.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:54.951" endtime="20201029 18:19:54.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:54.954" endtime="20201029 18:19:54.955"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.912" endtime="20201029 18:19:54.956"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.910" endtime="20201029 18:19:54.956"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:54.963" endtime="20201029 18:19:55.248"></status>
</kw>
<msg timestamp="20201029 18:19:55.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020233333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020597069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:54.961" endtime="20201029 18:19:55.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:55.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020233333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020597069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:55.252" endtime="20201029 18:19:55.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:55.260" endtime="20201029 18:19:55.261"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.958" endtime="20201029 18:19:55.262"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.957" endtime="20201029 18:19:55.262"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:55.266" level="INFO">${RESULT} = [{'diff': 0.0003637359999999999}, {'diff': 0.00036020800000000075}, {'diff': 0.00035905599999999996}, {'diff': 0.0003571530000000024}, {'diff': 0.0003562639999999985}, {'diff': 0.0003563890000000021},...</msg>
<status status="PASS" starttime="20201029 18:19:55.263" endtime="20201029 18:19:55.266"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:55.271" level="INFO">${ACCURACY} = {'diff': [0.0003637359999999999, 0.00036020800000000075, 0.00035905599999999996, 0.0003571530000000024, 0.0003562639999999985, 0.0003563890000000021, 0.00036098600000000064, 0.00038617999999999986, 0....</msg>
<status status="PASS" starttime="20201029 18:19:55.267" endtime="20201029 18:19:55.271"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:55.275" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201029 18:19:55.274" endtime="20201029 18:19:55.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:55.278" level="INFO">VALUE: [0.0003637359999999999, 0.00036020800000000075, 0.00035905599999999996, 0.0003571530000000024, 0.0003562639999999985, 0.0003563890000000021, 0.00036098600000000064, 0.00038617999999999986, 0.00036020800000000075, 0.00038519500000000137, 0.0003575969999999977, 0.0003561950000000001, 0.00035847199999999857, 0.00035827800000000007, 0.00038588900000000037, 0.0003568340000000003, 0.0003608060000000017, 0.00035741700000000223, 0.0003608190000000018, 0.00036011099999999976, 0.00038584700000000166, 0.00038576400000000025, 0.00038587499999999733, 0.00035761099999999726, 0.0003602779999999986, 0.0003854450000000016, 0.0003580409999999999, 0.0003608060000000017, 0.00035887500000000155, 0.00035811100000000123, 0.00035677700000000256, 0.00038606900000000277, 0.0003572920000000021, 0.00038637499999999436, 0.00038495799999999775, 0.000385611000000001, 0.00038511099999999354, 0.0003856659999999998, 0.00038540199999999997, 0.0003570830000000011, 0.00038572199999999807, 0.0003599580000000005, 0.00038541599999999954, 0.0003575969999999942, 0.00035908400000000257, 0.0003606250000000033, 0.00038629099999999694, 0.00038609699999999497, 0.00038538899999999987, 0.0003598890000000021]</msg>
<status status="PASS" starttime="20201029 18:19:55.277" endtime="20201029 18:19:55.279"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.272" endtime="20201029 18:19:55.279"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:55.283" endtime="20201029 18:19:55.302"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.281" endtime="20201029 18:19:55.303"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.280" endtime="20201029 18:19:55.303"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.909" endtime="20201029 18:19:55.303"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.908" endtime="20201029 18:19:55.304"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:55.312" endtime="20201029 18:19:55.348"></status>
</kw>
<msg timestamp="20201029 18:19:55.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:55.310" endtime="20201029 18:19:55.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:55.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:55.349" endtime="20201029 18:19:55.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:55.351" endtime="20201029 18:19:55.353"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.308" endtime="20201029 18:19:55.354"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.306" endtime="20201029 18:19:55.354"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:55.360" endtime="20201029 18:19:55.647"></status>
</kw>
<msg timestamp="20201029 18:19:55.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021308931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021672819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:55.359" endtime="20201029 18:19:55.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:55.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021308931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021672819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:55.651" endtime="20201029 18:19:55.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:55.659" endtime="20201029 18:19:55.661"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.356" endtime="20201029 18:19:55.662"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.355" endtime="20201029 18:19:55.662"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:55.666" level="INFO">${RESULT} = [{'diff': 0.0003638879999999997}, {'diff': 0.00035745800000000147}, {'diff': 0.00035997200000000007}, {'diff': 0.000385416999999999}, {'diff': 0.0003580279999999998}, {'diff': 0.0003600420000000014}, ...</msg>
<status status="PASS" starttime="20201029 18:19:55.663" endtime="20201029 18:19:55.666"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:55.670" level="INFO">${ACCURACY} = {'diff': [0.0003638879999999997, 0.00035745800000000147, 0.00035997200000000007, 0.000385416999999999, 0.0003580279999999998, 0.0003600420000000014, 0.00038515300000000266, 0.0003588749999999981, 0.00...</msg>
<status status="PASS" starttime="20201029 18:19:55.667" endtime="20201029 18:19:55.670"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:55.674" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201029 18:19:55.673" endtime="20201029 18:19:55.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:55.676" level="INFO">VALUE: [0.0003638879999999997, 0.00035745800000000147, 0.00035997200000000007, 0.000385416999999999, 0.0003580279999999998, 0.0003600420000000014, 0.00038515300000000266, 0.0003588749999999981, 0.0003562920000000011, 0.0003583479999999979, 0.00035695800000000097, 0.0003608890000000031, 0.0003572220000000008, 0.0003860689999999993, 0.00035701399999999925, 0.00036070899999999725, 0.000357764, 0.0003599029999999982, 0.00035979199999999767, 0.0003590410000000009, 0.000358958999999999, 0.0003864439999999997, 0.0003588059999999997, 0.00038572199999999807, 0.0003599030000000017, 0.00035651399999999875, 0.00035962499999999883, 0.00035993100000000083, 0.00038590299999999994, 0.0003567089999999967, 0.0003593470000000029, 0.0003585700000000025, 0.000385804999999996, 0.0003580280000000033, 0.00035759700000000116, 0.0003848749999999998, 0.00035724999999999646, 0.00035700000000000315, 0.0003608889999999962, 0.000358861000000002, 0.0003572229999999968, 0.000385013999999996, 0.0003848749999999998, 0.000361152999999996, 0.0003585700000000025, 0.0003563609999999995, 0.0003602220000000003, 0.00035865300000000044, 0.00035826399999999703, 0.0003591810000000001]</msg>
<status status="PASS" starttime="20201029 18:19:55.675" endtime="20201029 18:19:55.677"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.671" endtime="20201029 18:19:55.678"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:55.681" endtime="20201029 18:19:55.701"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.680" endtime="20201029 18:19:55.701"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.679" endtime="20201029 18:19:55.702"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.304" endtime="20201029 18:19:55.702"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.304" endtime="20201029 18:19:55.702"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:55.711" endtime="20201029 18:19:55.749"></status>
</kw>
<msg timestamp="20201029 18:19:55.750" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:55.709" endtime="20201029 18:19:55.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:55.752" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:55.751" endtime="20201029 18:19:55.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:55.754" endtime="20201029 18:19:55.755"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.707" endtime="20201029 18:19:55.756"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.704" endtime="20201029 18:19:55.756"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:55.762" endtime="20201029 18:19:56.048"></status>
</kw>
<msg timestamp="20201029 18:19:56.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024703861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025087833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:55.761" endtime="20201029 18:19:56.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:56.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024703861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025087833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:56.052" endtime="20201029 18:19:56.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:56.060" endtime="20201029 18:19:56.062"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.758" endtime="20201029 18:19:56.062"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.757" endtime="20201029 18:19:56.063"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:56.067" level="INFO">${RESULT} = [{'diff': 0.0003839719999999998}, {'diff': 0.00035879100000000066}, {'diff': 0.0003596389999999984}, {'diff': 0.000356666999999998}, {'diff': 0.00035944400000000043}, {'diff': 0.00036095799999999803},...</msg>
<status status="PASS" starttime="20201029 18:19:56.063" endtime="20201029 18:19:56.067"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:56.070" level="INFO">${ACCURACY} = {'diff': [0.0003839719999999998, 0.00035879100000000066, 0.0003596389999999984, 0.000356666999999998, 0.00035944400000000043, 0.00036095799999999803, 0.000358360999999998, 0.00035919499999999965, 0.00...</msg>
<status status="PASS" starttime="20201029 18:19:56.067" endtime="20201029 18:19:56.071"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:56.075" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201029 18:19:56.074" endtime="20201029 18:19:56.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:56.077" level="INFO">VALUE: [0.0003839719999999998, 0.00035879100000000066, 0.0003596389999999984, 0.000356666999999998, 0.00035944400000000043, 0.00036095799999999803, 0.000358360999999998, 0.00035919499999999965, 0.0003853750000000003, 0.00036058299999999766, 0.0003596390000000019, 0.0003589029999999972, 0.0003859309999999991, 0.00035779099999999966, 0.0003608330000000014, 0.0003604169999999983, 0.00035744500000000137, 0.0003855000000000039, 0.00036013899999999543, 0.0003583060000000027, 0.00035965300000000144, 0.00036030599999999774, 0.00035794399999999893, 0.00038618099999999933, 0.00035792999999999936, 0.0003859309999999991, 0.00038534800000000063, 0.00038623599999999814, 0.0003608199999999978, 0.0003607779999999991, 0.0003851389999999996, 0.00038644499999999915, 0.00035937500000000205, 0.00038515300000000613, 0.0003851659999999993, 0.00035987500000000255, 0.00035698599999999664, 0.0003588890000000011, 0.0003594030000000012, 0.00038587499999999386, 0.0003591940000000002, 0.00035777800000000304, 0.00035641699999999776, 0.00035793099999999883, 0.00038590299999999994, 0.0003583470000000019, 0.0003563609999999995, 0.0003576389999999999, 0.0003858059999999955, 0.00035959700000000316]</msg>
<status status="PASS" starttime="20201029 18:19:56.076" endtime="20201029 18:19:56.079"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.071" endtime="20201029 18:19:56.079"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:56.083" endtime="20201029 18:19:56.102"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.081" endtime="20201029 18:19:56.103"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.080" endtime="20201029 18:19:56.103"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.703" endtime="20201029 18:19:56.103"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.702" endtime="20201029 18:19:56.104"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:56.112" endtime="20201029 18:19:56.146"></status>
</kw>
<msg timestamp="20201029 18:19:56.146" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:56.110" endtime="20201029 18:19:56.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:56.149" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:56.148" endtime="20201029 18:19:56.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:56.150" endtime="20201029 18:19:56.151"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.108" endtime="20201029 18:19:56.152"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.106" endtime="20201029 18:19:56.152"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:56.159" endtime="20201029 18:19:56.443"></status>
</kw>
<msg timestamp="20201029 18:19:56.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020092028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020458944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:56.157" endtime="20201029 18:19:56.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:56.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020092028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020458944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:56.447" endtime="20201029 18:19:56.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:56.456" endtime="20201029 18:19:56.457"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.155" endtime="20201029 18:19:56.458"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.153" endtime="20201029 18:19:56.458"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:56.462" level="INFO">${RESULT} = [{'diff': 0.0003669159999999984}, {'diff': 0.00036052799999999885}, {'diff': 0.0003601389999999989}, {'diff': 0.0003563060000000007}, {'diff': 0.00038530500000000245}, {'diff': 0.0003862360000000016},...</msg>
<status status="PASS" starttime="20201029 18:19:56.459" endtime="20201029 18:19:56.462"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:56.467" level="INFO">${ACCURACY} = {'diff': [0.0003669159999999984, 0.00036052799999999885, 0.0003601389999999989, 0.0003563060000000007, 0.00038530500000000245, 0.0003862360000000016, 0.0003860699999999988, 0.0003862500000000012, 0.00...</msg>
<status status="PASS" starttime="20201029 18:19:56.463" endtime="20201029 18:19:56.467"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:56.471" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201029 18:19:56.470" endtime="20201029 18:19:56.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:56.473" level="INFO">VALUE: [0.0003669159999999984, 0.00036052799999999885, 0.0003601389999999989, 0.0003563060000000007, 0.00038530500000000245, 0.0003862360000000016, 0.0003860699999999988, 0.0003862500000000012, 0.000385723000000001, 0.0003853200000000015, 0.00038590299999999994, 0.000385611000000001, 0.0003855270000000001, 0.0003605139999999993, 0.00038552799999999957, 0.00035920799999999975, 0.0003860140000000005, 0.0003578189999999988, 0.0003600419999999979, 0.00035756899999999855, 0.00035877800000000057, 0.0003567500000000029, 0.00035733399999999735, 0.00035705600000000143, 0.0003599450000000004, 0.0003590829999999996, 0.0003600420000000014, 0.00035848599999999814, 0.0003585969999999987, 0.00035888899999999765, 0.00038527799999999585, 0.0003573060000000017, 0.00035691699999999826, 0.00038586100000000123, 0.0003575129999999968, 0.000385013999999996, 0.00035848599999999814, 0.0003859439999999992, 0.00036106999999999806, 0.0003564300000000048, 0.0003608469999999975, 0.0003586939999999997, 0.0003600269999999989, 0.0003575280000000028, 0.0003605139999999993, 0.00035804200000000286, 0.00038640300000000044, 0.00036030499999999827, 0.00035882000000000275, 0.0003863189999999961]</msg>
<status status="PASS" starttime="20201029 18:19:56.472" endtime="20201029 18:19:56.474"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.468" endtime="20201029 18:19:56.475"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:56.478" endtime="20201029 18:19:56.498"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.477" endtime="20201029 18:19:56.498"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.476" endtime="20201029 18:19:56.499"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.104" endtime="20201029 18:19:56.499"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.104" endtime="20201029 18:19:56.499"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:56.508" endtime="20201029 18:19:56.547"></status>
</kw>
<msg timestamp="20201029 18:19:56.548" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:56.506" endtime="20201029 18:19:56.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:56.550" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:56.549" endtime="20201029 18:19:56.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:56.551" endtime="20201029 18:19:56.553"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.504" endtime="20201029 18:19:56.553"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.501" endtime="20201029 18:19:56.554"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:56.560" endtime="20201029 18:19:56.846"></status>
</kw>
<msg timestamp="20201029 18:19:56.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021540014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021918181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:56.558" endtime="20201029 18:19:56.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:56.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021540014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021918181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:56.851" endtime="20201029 18:19:56.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:56.859" endtime="20201029 18:19:56.860"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.556" endtime="20201029 18:19:56.861"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.554" endtime="20201029 18:19:56.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:56.865" level="INFO">${RESULT} = [{'diff': 0.0003781669999999987}, {'diff': 0.0003592219999999993}, {'diff': 0.0003586939999999997}, {'diff': 0.0003607779999999991}, {'diff': 0.00035792999999999936}, {'diff': 0.00038568099999999883},...</msg>
<status status="PASS" starttime="20201029 18:19:56.862" endtime="20201029 18:19:56.865"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:56.869" level="INFO">${ACCURACY} = {'diff': [0.0003781669999999987, 0.0003592219999999993, 0.0003586939999999997, 0.0003607779999999991, 0.00035792999999999936, 0.00038568099999999883, 0.00035743000000000233, 0.0003571249999999998, 0.0...</msg>
<status status="PASS" starttime="20201029 18:19:56.866" endtime="20201029 18:19:56.869"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:56.874" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201029 18:19:56.872" endtime="20201029 18:19:56.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:56.876" level="INFO">VALUE: [0.0003781669999999987, 0.0003592219999999993, 0.0003586939999999997, 0.0003607779999999991, 0.00035792999999999936, 0.00038568099999999883, 0.00035743000000000233, 0.0003571249999999998, 0.00038562500000000055, 0.0003606800000000021, 0.0003585280000000003, 0.00036029199999999817, 0.00035961099999999926, 0.00035994400000000093, 0.00035847299999999804, 0.0003587359999999984, 0.0003578340000000013, 0.00035979200000000114, 0.000385319000000002, 0.000360361, 0.00038573599999999764, 0.0003584160000000003, 0.00038580599999999896, 0.0003584020000000007, 0.00035794399999999893, 0.000359555000000001, 0.0003582500000000044, 0.0003597909999999982, 0.00035997200000000007, 0.000359555999999997, 0.00038558300000000184, 0.0003575280000000028, 0.0003607230000000003, 0.0003864439999999997, 0.0003583889999999937, 0.0003580689999999956, 0.0003609580000000015, 0.0003598050000000047, 0.00036016600000000204, 0.0003852499999999967, 0.00038579099999999644, 0.0003585129999999978, 0.00035805500000000295, 0.00035856999999999556, 0.0003605419999999984, 0.0003857369999999971, 0.0003593610000000025, 0.00035659700000000016, 0.00035786099999999404, 0.00038540199999999997]</msg>
<status status="PASS" starttime="20201029 18:19:56.875" endtime="20201029 18:19:56.877"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.870" endtime="20201029 18:19:56.877"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:56.881" endtime="20201029 18:19:56.900"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.879" endtime="20201029 18:19:56.901"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.878" endtime="20201029 18:19:56.901"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.500" endtime="20201029 18:19:56.901"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.499" endtime="20201029 18:19:56.901"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:56.912" endtime="20201029 18:19:56.949"></status>
</kw>
<msg timestamp="20201029 18:19:56.950" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:56.910" endtime="20201029 18:19:56.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:56.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:56.951" endtime="20201029 18:19:56.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:56.953" endtime="20201029 18:19:56.955"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.907" endtime="20201029 18:19:56.955"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.904" endtime="20201029 18:19:56.956"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:56.962" endtime="20201029 18:19:57.248"></status>
</kw>
<msg timestamp="20201029 18:19:57.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026087111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026466486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:56.961" endtime="20201029 18:19:57.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:57.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026087111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026466486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:57.252" endtime="20201029 18:19:57.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:57.260" endtime="20201029 18:19:57.262"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.958" endtime="20201029 18:19:57.263"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.956" endtime="20201029 18:19:57.263"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:57.267" level="INFO">${RESULT} = [{'diff': 0.00037937500000000124}, {'diff': 0.00035797200000000154}, {'diff': 0.0003576250000000003}, {'diff': 0.000359861000000003}, {'diff': 0.00035893000000000036}, {'diff': 0.00035883399999999885}...</msg>
<status status="PASS" starttime="20201029 18:19:57.264" endtime="20201029 18:19:57.267"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:57.271" level="INFO">${ACCURACY} = {'diff': [0.00037937500000000124, 0.00035797200000000154, 0.0003576250000000003, 0.000359861000000003, 0.00035893000000000036, 0.00035883399999999885, 0.00035724999999999993, 0.0003608200000000013, 0....</msg>
<status status="PASS" starttime="20201029 18:19:57.268" endtime="20201029 18:19:57.271"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:57.275" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201029 18:19:57.274" endtime="20201029 18:19:57.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:57.278" level="INFO">VALUE: [0.00037937500000000124, 0.00035797200000000154, 0.0003576250000000003, 0.000359861000000003, 0.00035893000000000036, 0.00035883399999999885, 0.00035724999999999993, 0.0003608200000000013, 0.00035730499999999873, 0.00035674999999999943, 0.0003849720000000008, 0.00035754200000000236, 0.000357973000000001, 0.0003598609999999995, 0.0003586809999999996, 0.0003574449999999979, 0.0003564029999999982, 0.0003608339999999974, 0.0003579449999999984, 0.00038556900000000227, 0.0003575139999999963, 0.00038575000000000415, 0.00036087500000000355, 0.0003603470000000039, 0.0003601810000000011, 0.0003560830000000001, 0.00038575000000000415, 0.000356861, 0.0003575280000000028, 0.0003864309999999996, 0.0003571249999999998, 0.00035969500000000015, 0.00035998599999999964, 0.00035798599999999764, 0.00035847299999999804, 0.00038558300000000184, 0.00035974999999999896, 0.0003561249999999988, 0.00035792999999999936, 0.0003565419999999944, 0.00038580500000000295, 0.0003562920000000011, 0.0003856529999999997, 0.0003580690000000025, 0.0003577219999999978, 0.00038538899999999987, 0.0003854729999999973, 0.00036040299999999525, 0.0003596109999999958, 0.0003570830000000011]</msg>
<status status="PASS" starttime="20201029 18:19:57.276" endtime="20201029 18:19:57.279"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.272" endtime="20201029 18:19:57.280"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:57.283" endtime="20201029 18:19:57.303"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.282" endtime="20201029 18:19:57.303"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.281" endtime="20201029 18:19:57.304"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.902" endtime="20201029 18:19:57.304"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.902" endtime="20201029 18:19:57.304"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:57.312" endtime="20201029 18:19:57.347"></status>
</kw>
<msg timestamp="20201029 18:19:57.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:57.311" endtime="20201029 18:19:57.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:57.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:57.349" endtime="20201029 18:19:57.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:57.351" endtime="20201029 18:19:57.353"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.308" endtime="20201029 18:19:57.353"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.306" endtime="20201029 18:19:57.354"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:57.360" endtime="20201029 18:19:57.658"></status>
</kw>
<msg timestamp="20201029 18:19:57.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020414542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020794861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:57.358" endtime="20201029 18:19:57.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:57.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020414542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020794861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:57.667" endtime="20201029 18:19:57.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:57.685" endtime="20201029 18:19:57.688"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.356" endtime="20201029 18:19:57.689"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.354" endtime="20201029 18:19:57.690"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:57.696" level="INFO">${RESULT} = [{'diff': 0.0003803190000000005}, {'diff': 0.00035732000000000125}, {'diff': 0.00035966599999999807}, {'diff': 0.00038538899999999987}, {'diff': 0.00035966600000000154}, {'diff': 0.0003584999999999977...</msg>
<status status="PASS" starttime="20201029 18:19:57.692" endtime="20201029 18:19:57.696"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:57.701" level="INFO">${ACCURACY} = {'diff': [0.0003803190000000005, 0.00035732000000000125, 0.00035966599999999807, 0.00038538899999999987, 0.00035966600000000154, 0.0003584999999999977, 0.00035748599999999714, 0.00038526399999999975, ...</msg>
<status status="PASS" starttime="20201029 18:19:57.697" endtime="20201029 18:19:57.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:57.705" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201029 18:19:57.704" endtime="20201029 18:19:57.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:57.708" level="INFO">VALUE: [0.0003803190000000005, 0.00035732000000000125, 0.00035966599999999807, 0.00038538899999999987, 0.00035966600000000154, 0.0003584999999999977, 0.00035748599999999714, 0.00038526399999999975, 0.00035633300000000034, 0.0003596940000000007, 0.0003561530000000014, 0.00035877800000000057, 0.0003574029999999992, 0.0003562920000000011, 0.00035601399999999825, 0.0003597229999999993, 0.0003858339999999981, 0.0003568189999999978, 0.0003594160000000013, 0.00035619400000000065, 0.0003590139999999978, 0.0003849999999999999, 0.0003860699999999988, 0.00036062499999999983, 0.0003571809999999981, 0.0003859589999999982, 0.00035724999999999993, 0.0003570549999999985, 0.0003857919999999994, 0.00035877700000000456, 0.0003849589999999972, 0.0003591670000000005, 0.00035776399999999653, 0.00036019500000000065, 0.00038567999999999936, 0.0003590559999999965, 0.0003857919999999959, 0.0003603610000000035, 0.00036024999999999946, 0.0003852639999999963, 0.00035808400000000157, 0.0003849859999999969, 0.0003861530000000002, 0.0003597359999999994, 0.0003597359999999994, 0.00035858400000000207, 0.00038549999999999696, 0.0003581669999999995, 0.0003576809999999986, 0.00038638900000000087]</msg>
<status status="PASS" starttime="20201029 18:19:57.706" endtime="20201029 18:19:57.708"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.702" endtime="20201029 18:19:57.709"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:57.713" endtime="20201029 18:19:57.732"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.711" endtime="20201029 18:19:57.733"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.710" endtime="20201029 18:19:57.733"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.305" endtime="20201029 18:19:57.733"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.304" endtime="20201029 18:19:57.733"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:57.742" endtime="20201029 18:19:57.779"></status>
</kw>
<msg timestamp="20201029 18:19:57.780" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:57.740" endtime="20201029 18:19:57.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:57.782" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:57.781" endtime="20201029 18:19:57.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:57.783" endtime="20201029 18:19:57.785"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.738" endtime="20201029 18:19:57.786"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.736" endtime="20201029 18:19:57.786"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:57.792" endtime="20201029 18:19:58.078"></status>
</kw>
<msg timestamp="20201029 18:19:58.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023165347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023534778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:57.791" endtime="20201029 18:19:58.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:58.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023165347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023534778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:58.083" endtime="20201029 18:19:58.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:58.091" endtime="20201029 18:19:58.092"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.788" endtime="20201029 18:19:58.093"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.786" endtime="20201029 18:19:58.093"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:58.097" level="INFO">${RESULT} = [{'diff': 0.0003694309999999999}, {'diff': 0.0003595969999999997}, {'diff': 0.00038558300000000184}, {'diff': 0.00036031899999999784}, {'diff': 0.00035880500000000023}, {'diff': 0.0003865699999999993}...</msg>
<status status="PASS" starttime="20201029 18:19:58.094" endtime="20201029 18:19:58.097"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:58.101" level="INFO">${ACCURACY} = {'diff': [0.0003694309999999999, 0.0003595969999999997, 0.00038558300000000184, 0.00036031899999999784, 0.00035880500000000023, 0.0003865699999999993, 0.0003864300000000001, 0.0003565830000000006, 0.0...</msg>
<status status="PASS" starttime="20201029 18:19:58.098" endtime="20201029 18:19:58.101"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:58.105" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201029 18:19:58.104" endtime="20201029 18:19:58.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:58.108" level="INFO">VALUE: [0.0003694309999999999, 0.0003595969999999997, 0.00038558300000000184, 0.00036031899999999784, 0.00035880500000000023, 0.0003865699999999993, 0.0003864300000000001, 0.0003565830000000006, 0.00035847199999999857, 0.00035661099999999973, 0.00035915300000000094, 0.0003599029999999982, 0.00035951400000000175, 0.00035847200000000204, 0.00035695800000000097, 0.0003573470000000009, 0.0003866530000000007, 0.0003581939999999992, 0.00035651399999999875, 0.0003853339999999976, 0.0003857499999999972, 0.0003582359999999979, 0.000356375000000006, 0.00038620899999999847, 0.00038527699999999637, 0.00035929199999999717, 0.00035883300000000284, 0.0003594449999999999, 0.00038584700000000166, 0.00035658400000000007, 0.0003581669999999995, 0.00038534700000000116, 0.000357666999999999, 0.00038570899999999797, 0.00035666700000000495, 0.00035958299999999666, 0.00038583400000000156, 0.00035783300000000184, 0.00035883300000000284, 0.0003565280000000018, 0.0003563339999999998, 0.0003577769999999966, 0.000386417, 0.00035865199999999403, 0.0003609580000000015, 0.0003610969999999977, 0.00035904200000000386, 0.0003564029999999982, 0.00035848599999999814, 0.0003563469999999999]</msg>
<status status="PASS" starttime="20201029 18:19:58.106" endtime="20201029 18:19:58.109"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.102" endtime="20201029 18:19:58.109"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:58.113" endtime="20201029 18:19:58.132"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.111" endtime="20201029 18:19:58.133"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.110" endtime="20201029 18:19:58.133"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.734" endtime="20201029 18:19:58.133"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.734" endtime="20201029 18:19:58.134"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:58.142" endtime="20201029 18:19:58.180"></status>
</kw>
<msg timestamp="20201029 18:19:58.181" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:58.140" endtime="20201029 18:19:58.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:58.183" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:58.182" endtime="20201029 18:19:58.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:58.184" endtime="20201029 18:19:58.186"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.138" endtime="20201029 18:19:58.186"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.136" endtime="20201029 18:19:58.187"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:58.193" endtime="20201029 18:19:58.492"></status>
</kw>
<msg timestamp="20201029 18:19:58.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024850472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025222028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:58.192" endtime="20201029 18:19:58.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:58.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024850472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025222028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:58.502" endtime="20201029 18:19:58.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:58.511" endtime="20201029 18:19:58.513"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.189" endtime="20201029 18:19:58.513"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.187" endtime="20201029 18:19:58.514"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:58.517" level="INFO">${RESULT} = [{'diff': 0.00037155600000000205}, {'diff': 0.00036069500000000115}, {'diff': 0.0003571660000000025}, {'diff': 0.00035611099999999923}, {'diff': 0.0003852779999999993}, {'diff': 0.00038554099999999966...</msg>
<status status="PASS" starttime="20201029 18:19:58.514" endtime="20201029 18:19:58.518"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:58.521" level="INFO">${ACCURACY} = {'diff': [0.00037155600000000205, 0.00036069500000000115, 0.0003571660000000025, 0.00035611099999999923, 0.0003852779999999993, 0.00038554099999999966, 0.00035751399999999975, 0.00035901400000000125, ...</msg>
<status status="PASS" starttime="20201029 18:19:58.518" endtime="20201029 18:19:58.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:58.526" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201029 18:19:58.525" endtime="20201029 18:19:58.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:58.528" level="INFO">VALUE: [0.00037155600000000205, 0.00036069500000000115, 0.0003571660000000025, 0.00035611099999999923, 0.0003852779999999993, 0.00038554099999999966, 0.00035751399999999975, 0.00035901400000000125, 0.00035891700000000026, 0.0003579860000000011, 0.0003590420000000004, 0.00035773600000000086, 0.00035677800000000204, 0.00035636199999999896, 0.00035819400000000265, 0.0003565700000000005, 0.00035783300000000184, 0.0003581799999999996, 0.00035816600000000004, 0.00035777800000000304, 0.0003590280000000043, 0.0003575280000000028, 0.0003862639999999973, 0.00038551400000000347, 0.00038529200000000235, 0.0003853060000000019, 0.0003561669999999975, 0.0003598749999999956, 0.0003568050000000017, 0.0003569159999999988, 0.00035686199999999946, 0.00035920900000000616, 0.00035676399999999553, 0.00035867999999999317, 0.00036091599999999585, 0.0003610000000000002, 0.0003856939999999989, 0.0003602220000000003, 0.0003861949999999989, 0.0003583340000000018, 0.00038495900000000416, 0.0003572500000000034, 0.0003597229999999993, 0.0003570280000000023, 0.00035958400000000307, 0.00038555599999999524, 0.0003580140000000037, 0.0003853330000000016, 0.0003603749999999961, 0.00035673600000000333]</msg>
<status status="PASS" starttime="20201029 18:19:58.527" endtime="20201029 18:19:58.530"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.522" endtime="20201029 18:19:58.530"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:58.534" endtime="20201029 18:19:58.553"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.532" endtime="20201029 18:19:58.554"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.531" endtime="20201029 18:19:58.554"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.134" endtime="20201029 18:19:58.554"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.134" endtime="20201029 18:19:58.555"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:58.563" endtime="20201029 18:19:58.597"></status>
</kw>
<msg timestamp="20201029 18:19:58.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:58.561" endtime="20201029 18:19:58.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:58.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:58.599" endtime="20201029 18:19:58.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:58.601" endtime="20201029 18:19:58.603"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.559" endtime="20201029 18:19:58.603"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.557" endtime="20201029 18:19:58.604"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:58.610" endtime="20201029 18:19:58.895"></status>
</kw>
<msg timestamp="20201029 18:19:58.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020836569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021195889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:58.608" endtime="20201029 18:19:58.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:58.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020836569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021195889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:58.899" endtime="20201029 18:19:58.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:58.907" endtime="20201029 18:19:58.909"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.606" endtime="20201029 18:19:58.910"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.604" endtime="20201029 18:19:58.910"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:58.914" level="INFO">${RESULT} = [{'diff': 0.0003593199999999998}, {'diff': 0.0003595830000000001}, {'diff': 0.0003598609999999995}, {'diff': 0.00035848599999999814}, {'diff': 0.00038605499999999973}, {'diff': 0.00035893099999999983}...</msg>
<status status="PASS" starttime="20201029 18:19:58.911" endtime="20201029 18:19:58.914"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:58.919" level="INFO">${ACCURACY} = {'diff': [0.0003593199999999998, 0.0003595830000000001, 0.0003598609999999995, 0.00035848599999999814, 0.00038605499999999973, 0.00035893099999999983, 0.00036080499999999877, 0.00036111100000000076, 0...</msg>
<status status="PASS" starttime="20201029 18:19:58.915" endtime="20201029 18:19:58.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:58.923" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201029 18:19:58.922" endtime="20201029 18:19:58.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:58.925" level="INFO">VALUE: [0.0003593199999999998, 0.0003595830000000001, 0.0003598609999999995, 0.00035848599999999814, 0.00038605499999999973, 0.00035893099999999983, 0.00036080499999999877, 0.00036111100000000076, 0.00035947199999999957, 0.0003859439999999992, 0.000386514000000001, 0.0003596809999999971, 0.0003599299999999979, 0.0003860699999999988, 0.0003587219999999988, 0.00038652800000000057, 0.0003568189999999978, 0.0003575419999999989, 0.0003573340000000008, 0.0003851529999999992, 0.0003601529999999985, 0.00035823600000000136, 0.0003610419999999989, 0.00036056900000000155, 0.00035624999999999893, 0.0003560409999999979, 0.00035841699999999976, 0.0003591940000000002, 0.00035948599999999567, 0.00038516699999999876, 0.0003850970000000009, 0.0003849859999999969, 0.0003584720000000055, 0.0003569019999999992, 0.0003584589999999985, 0.0003563889999999986, 0.0003566390000000058, 0.0003561249999999988, 0.00038490299999999894, 0.00035893000000000036, 0.00035843099999999933, 0.000358667, 0.0003856529999999997, 0.00035879199999999667, 0.000356569000000001, 0.00035623600000000283, 0.0003859299999999996, 0.0003609580000000015, 0.000359555999999997, 0.0003601940000000012]</msg>
<status status="PASS" starttime="20201029 18:19:58.924" endtime="20201029 18:19:58.926"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.919" endtime="20201029 18:19:58.927"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:58.930" endtime="20201029 18:19:58.950"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.929" endtime="20201029 18:19:58.950"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.928" endtime="20201029 18:19:58.951"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.555" endtime="20201029 18:19:58.951"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.555" endtime="20201029 18:19:58.951"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:58.959" endtime="20201029 18:19:58.995"></status>
</kw>
<msg timestamp="20201029 18:19:58.996" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:58.958" endtime="20201029 18:19:58.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:58.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:58.997" endtime="20201029 18:19:58.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:58.999" endtime="20201029 18:19:59.001"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.955" endtime="20201029 18:19:59.001"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.953" endtime="20201029 18:19:59.002"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:59.008" endtime="20201029 18:19:59.309"></status>
</kw>
<msg timestamp="20201029 18:19:59.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021301361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021658042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:59.006" endtime="20201029 18:19:59.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:59.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021301361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021658042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:59.316" endtime="20201029 18:19:59.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:59.324" endtime="20201029 18:19:59.326"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.004" endtime="20201029 18:19:59.326"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.002" endtime="20201029 18:19:59.327"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:59.330" level="INFO">${RESULT} = [{'diff': 0.0003566809999999976}, {'diff': 0.00035909799999999867}, {'diff': 0.00035697200000000054}, {'diff': 0.0003849720000000008}, {'diff': 0.00035676400000000247}, {'diff': 0.0003600550000000015}...</msg>
<status status="PASS" starttime="20201029 18:19:59.327" endtime="20201029 18:19:59.331"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:59.334" level="INFO">${ACCURACY} = {'diff': [0.0003566809999999976, 0.00035909799999999867, 0.00035697200000000054, 0.0003849720000000008, 0.00035676400000000247, 0.0003600550000000015, 0.00038618099999999933, 0.00038597300000000126, 0...</msg>
<status status="PASS" starttime="20201029 18:19:59.331" endtime="20201029 18:19:59.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:59.339" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201029 18:19:59.338" endtime="20201029 18:19:59.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:59.341" level="INFO">VALUE: [0.0003566809999999976, 0.00035909799999999867, 0.00035697200000000054, 0.0003849720000000008, 0.00035676400000000247, 0.0003600550000000015, 0.00038618099999999933, 0.00038597300000000126, 0.00038643100000000305, 0.0003586380000000014, 0.00038506900000000177, 0.0003605139999999993, 0.000357360999999997, 0.0003563469999999999, 0.0003596519999999985, 0.00036080599999999824, 0.00035745900000000094, 0.0003848749999999998, 0.0003579449999999984, 0.00038573599999999764, 0.00035737500000000005, 0.0003586389999999974, 0.00035775000000000043, 0.00038597300000000126, 0.00038516699999999876, 0.0003581939999999992, 0.0003599029999999982, 0.0003856390000000001, 0.0003609580000000015, 0.0003859309999999991, 0.0003568470000000004, 0.00035870799999999925, 0.0003609030000000027, 0.00038599999999999746, 0.0003862499999999977, 0.00035601300000000224, 0.0003853750000000003, 0.0003605969999999972, 0.00038611099999999454, 0.0003603050000000052, 0.00038584800000000113, 0.0003600689999999976, 0.0003599160000000018, 0.0003596810000000006, 0.00035761100000000073, 0.0003608469999999975, 0.0003576939999999987, 0.0003589999999999982, 0.0003570410000000024, 0.00038480500000000195]</msg>
<status status="PASS" starttime="20201029 18:19:59.340" endtime="20201029 18:19:59.345"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.335" endtime="20201029 18:19:59.346"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:59.350" endtime="20201029 18:19:59.369"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.348" endtime="20201029 18:19:59.370"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.347" endtime="20201029 18:19:59.370"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.952" endtime="20201029 18:19:59.370"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.951" endtime="20201029 18:19:59.370"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:59.379" endtime="20201029 18:19:59.417"></status>
</kw>
<msg timestamp="20201029 18:19:59.417" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:59.377" endtime="20201029 18:19:59.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:59.420" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:59.418" endtime="20201029 18:19:59.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:59.421" endtime="20201029 18:19:59.422"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.375" endtime="20201029 18:19:59.423"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.373" endtime="20201029 18:19:59.423"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:59.430" endtime="20201029 18:19:59.714"></status>
</kw>
<msg timestamp="20201029 18:19:59.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024008125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024388764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:59.428" endtime="20201029 18:19:59.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:59.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024008125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024388764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:59.719" endtime="20201029 18:19:59.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:59.727" endtime="20201029 18:19:59.728"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.426" endtime="20201029 18:19:59.729"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.424" endtime="20201029 18:19:59.729"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:59.733" level="INFO">${RESULT} = [{'diff': 0.0003806389999999986}, {'diff': 0.0003851389999999996}, {'diff': 0.00038623599999999814}, {'diff': 0.0003593329999999999}, {'diff': 0.0003859299999999996}, {'diff': 0.0003577090000000012}, ...</msg>
<status status="PASS" starttime="20201029 18:19:59.730" endtime="20201029 18:19:59.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:59.737" level="INFO">${ACCURACY} = {'diff': [0.0003806389999999986, 0.0003851389999999996, 0.00038623599999999814, 0.0003593329999999999, 0.0003859299999999996, 0.0003577090000000012, 0.00035632000000000025, 0.00035765299999999944, 0.0...</msg>
<status status="PASS" starttime="20201029 18:19:59.734" endtime="20201029 18:19:59.737"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:59.741" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201029 18:19:59.740" endtime="20201029 18:19:59.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:59.744" level="INFO">VALUE: [0.0003806389999999986, 0.0003851389999999996, 0.00038623599999999814, 0.0003593329999999999, 0.0003859299999999996, 0.0003577090000000012, 0.00035632000000000025, 0.00035765299999999944, 0.0003572220000000008, 0.00035729099999999916, 0.0003581809999999991, 0.00035632000000000025, 0.0003609450000000014, 0.00038508300000000134, 0.00036005600000000096, 0.00035641600000000176, 0.00036098600000000064, 0.0003849169999999985, 0.0003565830000000006, 0.00035798599999999764, 0.0003569029999999987, 0.0003591800000000006, 0.0003862499999999977, 0.0003570559999999945, 0.0003569579999999975, 0.0003859719999999983, 0.0003854440000000056, 0.0003849439999999982, 0.00038590200000000047, 0.0003855560000000022, 0.0003608749999999966, 0.000359054999999997, 0.00038512500000000005, 0.0003562769999999951, 0.0003591390000000014, 0.000357569000000002, 0.0003580690000000025, 0.00038595799999999875, 0.00035693100000000477, 0.0003862629999999978, 0.00035874999999999796, 0.0003593610000000025, 0.00038622199999999857, 0.0003607769999999996, 0.0003570280000000023, 0.000360555999999998, 0.0003606390000000029, 0.00035826400000000397, 0.00038538899999999987, 0.000361054999999999]</msg>
<status status="PASS" starttime="20201029 18:19:59.742" endtime="20201029 18:19:59.745"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.738" endtime="20201029 18:19:59.746"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:59.749" endtime="20201029 18:19:59.769"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.748" endtime="20201029 18:19:59.769"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.747" endtime="20201029 18:19:59.770"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.371" endtime="20201029 18:19:59.770"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.371" endtime="20201029 18:19:59.770"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:59.779" endtime="20201029 18:19:59.813"></status>
</kw>
<msg timestamp="20201029 18:19:59.814" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:59.777" endtime="20201029 18:19:59.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:59.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:59.815" endtime="20201029 18:19:59.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:59.817" endtime="20201029 18:19:59.819"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.775" endtime="20201029 18:19:59.819"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.772" endtime="20201029 18:19:59.820"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:59.826" endtime="20201029 18:20:00.111"></status>
</kw>
<msg timestamp="20201029 18:20:00.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021243264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021623861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:59.825" endtime="20201029 18:20:00.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:00.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021243264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021623861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:00.116" endtime="20201029 18:20:00.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:00.124" endtime="20201029 18:20:00.125"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.822" endtime="20201029 18:20:00.126"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.820" endtime="20201029 18:20:00.126"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:00.130" level="INFO">${RESULT} = [{'diff': 0.0003805969999999999}, {'diff': 0.00035711100000000023}, {'diff': 0.000356262999999999}, {'diff': 0.00038617999999999986}, {'diff': 0.0003580839999999981}, {'diff': 0.00035747200000000104},...</msg>
<status status="PASS" starttime="20201029 18:20:00.127" endtime="20201029 18:20:00.130"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:00.135" level="INFO">${ACCURACY} = {'diff': [0.0003805969999999999, 0.00035711100000000023, 0.000356262999999999, 0.00038617999999999986, 0.0003580839999999981, 0.00035747200000000104, 0.0003598749999999991, 0.00035980599999999724, 0.0...</msg>
<status status="PASS" starttime="20201029 18:20:00.131" endtime="20201029 18:20:00.135"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:00.139" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201029 18:20:00.138" endtime="20201029 18:20:00.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:00.142" level="INFO">VALUE: [0.0003805969999999999, 0.00035711100000000023, 0.000356262999999999, 0.00038617999999999986, 0.0003580839999999981, 0.00035747200000000104, 0.0003598749999999991, 0.00035980599999999724, 0.00035641700000000123, 0.0003563750000000025, 0.0003849999999999999, 0.00035783399999999785, 0.0003852360000000006, 0.00038613899999999715, 0.00035623599999999936, 0.000358861000000002, 0.0003588329999999994, 0.0003850559999999982, 0.0003605280000000023, 0.00038666700000000026, 0.00035795800000000197, 0.0003610000000000002, 0.0003852500000000002, 0.0003601529999999985, 0.0003580409999999999, 0.00038588900000000037, 0.00036016600000000204, 0.00038633400000000206, 0.00035786200000000046, 0.00036066600000000254, 0.0003859169999999995, 0.00035976299999999906, 0.00035929100000000463, 0.00035816600000000004, 0.00036105500000000595, 0.0003851659999999993, 0.00038649999999999796, 0.00035948599999999914, 0.0003580830000000021, 0.0003593470000000029, 0.00035694400000000487, 0.00035862499999999436, 0.0003582500000000044, 0.00035777800000000304, 0.0003850970000000009, 0.0003580690000000025, 0.00035794399999999893, 0.00035870799999999925, 0.00035776400000000347, 0.00036012499999999587]</msg>
<status status="PASS" starttime="20201029 18:20:00.140" endtime="20201029 18:20:00.142"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.136" endtime="20201029 18:20:00.143"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:00.146" endtime="20201029 18:20:00.166"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.145" endtime="20201029 18:20:00.166"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.144" endtime="20201029 18:20:00.167"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.771" endtime="20201029 18:20:00.167"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.770" endtime="20201029 18:20:00.167"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.513" endtime="20201029 18:20:00.167"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201029 18:19:19.438" endtime="20201029 18:20:00.168" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 18:18:37.260" endtime="20201029 18:20:00.171"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:20:00.224" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:20:00.232" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:20:01.418" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:20:00.222" endtime="20201029 18:20:01.419"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:20:01.421" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 18:20:01.420" endtime="20201029 18:20:01.421"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.221" endtime="20201029 18:20:01.422"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:01.424" endtime="20201029 18:20:01.665"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.423" endtime="20201029 18:20:01.665"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:01.678" endtime="20201029 18:20:01.698"></status>
</kw>
<msg timestamp="20201029 18:20:01.698" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:01.676" endtime="20201029 18:20:01.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:01.701" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:01.700" endtime="20201029 18:20:01.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:20:01.704" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:20:01.702" endtime="20201029 18:20:01.705"></status>
</kw>
<status status="FAIL" starttime="20201029 18:20:01.674" endtime="20201029 18:20:01.705"></status>
</kw>
<status status="FAIL" starttime="20201029 18:20:01.671" endtime="20201029 18:20:01.706"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.670" endtime="20201029 18:20:01.706"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:20:01.710" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:20:01.709" endtime="20201029 18:20:01.710"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.707" endtime="20201029 18:20:01.710"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.669" endtime="20201029 18:20:01.710"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.669" endtime="20201029 18:20:01.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:01.711" endtime="20201029 18:20:01.713"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.668" endtime="20201029 18:20:01.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:01.714" endtime="20201029 18:20:01.716"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.666" endtime="20201029 18:20:01.716"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.220" endtime="20201029 18:20:01.716"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:01.722" endtime="20201029 18:20:01.742"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.721" endtime="20201029 18:20:01.742"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:01.755" endtime="20201029 18:20:01.773"></status>
</kw>
<msg timestamp="20201029 18:20:01.774" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:01.754" endtime="20201029 18:20:01.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:01.776" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:01.775" endtime="20201029 18:20:01.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:20:01.780" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:20:01.777" endtime="20201029 18:20:01.780"></status>
</kw>
<status status="FAIL" starttime="20201029 18:20:01.751" endtime="20201029 18:20:01.781"></status>
</kw>
<status status="FAIL" starttime="20201029 18:20:01.749" endtime="20201029 18:20:01.782"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.747" endtime="20201029 18:20:01.782"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:20:01.786" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:20:01.785" endtime="20201029 18:20:01.786"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.783" endtime="20201029 18:20:01.786"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.747" endtime="20201029 18:20:01.786"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.746" endtime="20201029 18:20:01.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:01.787" endtime="20201029 18:20:01.789"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.745" endtime="20201029 18:20:01.789"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.743" endtime="20201029 18:20:01.790"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.720" endtime="20201029 18:20:01.790"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:01.799" endtime="20201029 18:20:07.907"></status>
</kw>
<msg timestamp="20201029 18:20:07.908" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:01.796" endtime="20201029 18:20:07.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:07.913" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:07.910" endtime="20201029 18:20:07.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:07.915" endtime="20201029 18:20:07.919"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.794" endtime="20201029 18:20:07.920"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.792" endtime="20201029 18:20:07.921"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:07.926" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 0, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201029 18:20:07.922" endtime="20201029 18:20:07.926"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:07.935" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:20:07.933" endtime="20201029 18:20:07.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:07.939" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:20:07.937" endtime="20201029 18:20:07.940"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:07.927" endtime="20201029 18:20:07.941"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:07.949" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:20:07.947" endtime="20201029 18:20:07.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:07.953" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:20:07.951" endtime="20201029 18:20:07.954"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:07.942" endtime="20201029 18:20:07.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:07.963" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:20:07.960" endtime="20201029 18:20:07.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:07.967" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201029 18:20:07.965" endtime="20201029 18:20:07.967"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:07.956" endtime="20201029 18:20:07.969"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:07.982" endtime="20201029 18:20:08.288"></status>
</kw>
<msg timestamp="20201029 18:20:08.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071609514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.171319264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:07.979" endtime="20201029 18:20:08.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:08.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071609514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.171319264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:08.292" endtime="20201029 18:20:08.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:08.300" endtime="20201029 18:20:08.302"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:07.973" endtime="20201029 18:20:08.302"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:07.970" endtime="20201029 18:20:08.303"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:20:08.307" level="INFO">${FILTERED} = [{'diff': 0.09970975}, {'diff': 0.09969061100000001}, {'diff': 0.09967843099999996}, {'diff': 0.09969377700000004}, {'diff': 0.09962208300000003}, {'diff': 0.09967083300000001}, {'diff': 0.09968591699...</msg>
<status status="PASS" starttime="20201029 18:20:08.304" endtime="20201029 18:20:08.307"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:08.311" level="INFO">${RESULT} = {'diff': [0.09970975, 0.09969061100000001, 0.09967843099999996, 0.09969377700000004, 0.09962208300000003, 0.09967083300000001, 0.09968591699999996, 0.09965556900000005, 0.09966661099999996, 0.09964636...</msg>
<status status="PASS" starttime="20201029 18:20:08.308" endtime="20201029 18:20:08.311"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:08.315" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:20:08.314" endtime="20201029 18:20:08.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:08.317" level="INFO">VALUE: [0.09970975, 0.09969061100000001, 0.09967843099999996, 0.09969377700000004, 0.09962208300000003, 0.09967083300000001, 0.09968591699999996, 0.09965556900000005, 0.09966661099999996, 0.09964636199999988, 0.09967729199999997, 0.09966509699999992, 0.09966179200000003, 0.09967259699999986, 0.09962397200000006, 0.09966158300000005, 0.09967538799999986, 0.09966087499999987, 0.09965236099999997, 0.09964161100000002, 0.09967009800000026, 0.09965220899999983, 0.09966187499999979, 0.0996944580000001, 0.09966059699999974, 0.09966329100000015, 0.09970126400000012, 0.09967012500000028, 0.09966258299999975, 0.09962442999999999, 0.0996508610000002, 0.09969097199999988, 0.09968501399999985, 0.09968570900000007, 0.09963962500000001, 0.0997027079999997, 0.0996608750000001, 0.09967541600000018, 0.09968991700000007, 0.09965938900000015, 0.09965237500000068, 0.09965107000000017, 0.09966230500000073, 0.09967941599999985, 0.09962415299999972, 0.09964945800000002, 0.09968169400000004, 0.09965070799999953, 0.09965104200000052, 0.09964415199999976, 0.0996930969999994]</msg>
<status status="PASS" starttime="20201029 18:20:08.316" endtime="20201029 18:20:08.317"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:08.311" endtime="20201029 18:20:08.318"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.790" endtime="20201029 18:20:08.319"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201029 18:20:01.717" endtime="20201029 18:20:08.319" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:08.326" endtime="20201029 18:20:08.345"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:08.324" endtime="20201029 18:20:08.346"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:08.359" endtime="20201029 18:20:08.375"></status>
</kw>
<msg timestamp="20201029 18:20:08.376" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:08.358" endtime="20201029 18:20:08.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:08.378" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:08.377" endtime="20201029 18:20:08.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:20:08.381" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:20:08.379" endtime="20201029 18:20:08.382"></status>
</kw>
<status status="FAIL" starttime="20201029 18:20:08.355" endtime="20201029 18:20:08.382"></status>
</kw>
<status status="FAIL" starttime="20201029 18:20:08.353" endtime="20201029 18:20:08.383"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:08.351" endtime="20201029 18:20:08.383"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:20:08.387" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:20:08.386" endtime="20201029 18:20:08.387"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:08.384" endtime="20201029 18:20:08.387"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:08.350" endtime="20201029 18:20:08.387"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:08.349" endtime="20201029 18:20:08.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:08.388" endtime="20201029 18:20:08.390"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:08.348" endtime="20201029 18:20:08.390"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:08.346" endtime="20201029 18:20:08.391"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:08.323" endtime="20201029 18:20:08.391"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:08.399" endtime="20201029 18:20:14.505"></status>
</kw>
<msg timestamp="20201029 18:20:14.506" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:08.398" endtime="20201029 18:20:14.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:14.511" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:14.508" endtime="20201029 18:20:14.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:14.513" endtime="20201029 18:20:14.516"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:08.395" endtime="20201029 18:20:14.517"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:08.393" endtime="20201029 18:20:14.518"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:14.523" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 5, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201029 18:20:14.520" endtime="20201029 18:20:14.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:14.533" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:20:14.530" endtime="20201029 18:20:14.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:14.537" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:20:14.535" endtime="20201029 18:20:14.538"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.526" endtime="20201029 18:20:14.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:14.548" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:20:14.544" endtime="20201029 18:20:14.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:14.553" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:20:14.551" endtime="20201029 18:20:14.554"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.540" endtime="20201029 18:20:14.555"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:14.562" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:20:14.560" endtime="20201029 18:20:14.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:14.567" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201029 18:20:14.565" endtime="20201029 18:20:14.567"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.556" endtime="20201029 18:20:14.568"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:14.582" endtime="20201029 18:20:14.887"></status>
</kw>
<msg timestamp="20201029 18:20:14.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064941389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.164712056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:14.578" endtime="20201029 18:20:14.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:14.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064941389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.164712056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:14.891" endtime="20201029 18:20:14.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:14.899" endtime="20201029 18:20:14.901"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.573" endtime="20201029 18:20:14.901"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.570" endtime="20201029 18:20:14.901"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:20:14.905" level="INFO">${FILTERED} = [{'diff': 0.099770667}, {'diff': 0.09962190299999998}, {'diff': 0.09966375}, {'diff': 0.09966341700000003}, {'diff': 0.09967231899999995}, {'diff': 0.09969443}, {'diff': 0.09965162499999991}, {'diff':...</msg>
<status status="PASS" starttime="20201029 18:20:14.902" endtime="20201029 18:20:14.906"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:14.909" level="INFO">${RESULT} = {'diff': [0.099770667, 0.09962190299999998, 0.09966375, 0.09966341700000003, 0.09967231899999995, 0.09969443, 0.09965162499999991, 0.0996685140000001, 0.09967363900000004, 0.09969961099999991, 0.09962...</msg>
<status status="PASS" starttime="20201029 18:20:14.906" endtime="20201029 18:20:14.909"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:14.914" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:20:14.913" endtime="20201029 18:20:14.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:14.916" level="INFO">VALUE: [0.099770667, 0.09962190299999998, 0.09966375, 0.09966341700000003, 0.09967231899999995, 0.09969443, 0.09965162499999991, 0.0996685140000001, 0.09967363900000004, 0.09969961099999991, 0.09962813800000014, 0.09966402800000007, 0.0997069439999998, 0.09966220799999981, 0.09963031900000008, 0.09966916599999998, 0.0996639720000001, 0.09966308300000004, 0.099674139, 0.09963205499999983, 0.09969345799999996, 0.09970425000000027, 0.09970781999999989, 0.09968329100000028, 0.0996439579999997, 0.09967112499999997, 0.099683513, 0.09969537500000003, 0.09965725000000036, 0.09962737499999985, 0.09966188900000006, 0.0996592500000002, 0.09966494499999978, 0.0996548620000004, 0.09966133399999988, 0.09965220900000027, 0.09968579199999983, 0.09970240200000013, 0.09970786100000018, 0.09967574999999984, 0.09970506999999973, 0.0996663050000004, 0.0996656809999994, 0.0996647639999999, 0.09967608299999942, 0.09965023599999956, 0.09970416599999954, 0.09968288899999944, 0.09968823599999954, 0.09966494499999978, 0.09970076299999953]</msg>
<status status="PASS" starttime="20201029 18:20:14.915" endtime="20201029 18:20:14.917"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.910" endtime="20201029 18:20:14.918"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:08.392" endtime="20201029 18:20:14.918"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201029 18:20:08.321" endtime="20201029 18:20:14.919" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:14.925" endtime="20201029 18:20:14.944"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.924" endtime="20201029 18:20:14.945"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:14.958" endtime="20201029 18:20:14.976"></status>
</kw>
<msg timestamp="20201029 18:20:14.977" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:14.956" endtime="20201029 18:20:14.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:14.979" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:14.978" endtime="20201029 18:20:14.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:20:14.982" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:20:14.980" endtime="20201029 18:20:14.983"></status>
</kw>
<status status="FAIL" starttime="20201029 18:20:14.954" endtime="20201029 18:20:14.983"></status>
</kw>
<status status="FAIL" starttime="20201029 18:20:14.951" endtime="20201029 18:20:14.984"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.950" endtime="20201029 18:20:14.984"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:20:14.988" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:20:14.987" endtime="20201029 18:20:14.988"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.985" endtime="20201029 18:20:14.988"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.949" endtime="20201029 18:20:14.988"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.949" endtime="20201029 18:20:14.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:14.989" endtime="20201029 18:20:14.991"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.947" endtime="20201029 18:20:14.991"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.946" endtime="20201029 18:20:14.992"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.922" endtime="20201029 18:20:14.992"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:15.001" endtime="20201029 18:20:21.109"></status>
</kw>
<msg timestamp="20201029 18:20:21.110" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:14.999" endtime="20201029 18:20:21.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:21.115" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:21.112" endtime="20201029 18:20:21.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:21.118" endtime="20201029 18:20:21.121"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.996" endtime="20201029 18:20:21.122"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.994" endtime="20201029 18:20:21.123"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:21.129" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 10, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201029 18:20:21.125" endtime="20201029 18:20:21.129"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:21.137" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:20:21.135" endtime="20201029 18:20:21.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:21.141" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:20:21.139" endtime="20201029 18:20:21.142"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:21.130" endtime="20201029 18:20:21.143"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:21.151" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:20:21.149" endtime="20201029 18:20:21.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:21.155" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:20:21.153" endtime="20201029 18:20:21.156"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:21.144" endtime="20201029 18:20:21.157"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:21.165" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:20:21.163" endtime="20201029 18:20:21.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:21.169" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201029 18:20:21.167" endtime="20201029 18:20:21.170"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:21.158" endtime="20201029 18:20:21.171"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:21.186" endtime="20201029 18:20:21.492"></status>
</kw>
<msg timestamp="20201029 18:20:21.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067269806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.1670035, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:20:21.182" endtime="20201029 18:20:21.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:21.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067269806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.1670035, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:20:21.496" endtime="20201029 18:20:21.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:21.504" endtime="20201029 18:20:21.506"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:21.176" endtime="20201029 18:20:21.506"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:21.172" endtime="20201029 18:20:21.507"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:20:21.511" level="INFO">${FILTERED} = [{'diff': 0.099733694}, {'diff': 0.09971425000000003}, {'diff': 0.09966962499999998}, {'diff': 0.09966127799999996}, {'diff': 0.09962709800000003}, {'diff': 0.09966233399999991}, {'diff': 0.0996877230...</msg>
<status status="PASS" starttime="20201029 18:20:21.507" endtime="20201029 18:20:21.511"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:21.517" level="INFO">${RESULT} = {'diff': [0.099733694, 0.09971425000000003, 0.09966962499999998, 0.09966127799999996, 0.09962709800000003, 0.09966233399999991, 0.09968772300000006, 0.09968395900000004, 0.09965800000000002, 0.0996284...</msg>
<status status="PASS" starttime="20201029 18:20:21.511" endtime="20201029 18:20:21.518"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:21.521" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:20:21.520" endtime="20201029 18:20:21.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:21.524" level="INFO">VALUE: [0.099733694, 0.09971425000000003, 0.09966962499999998, 0.09966127799999996, 0.09962709800000003, 0.09966233399999991, 0.09968772300000006, 0.09968395900000004, 0.09965800000000002, 0.09962841700000002, 0.09968158299999996, 0.09968823599999999, 0.09965861200000004, 0.09968858399999991, 0.09964499999999998, 0.0997025279999999, 0.0996711669999999, 0.0996581110000001, 0.09965613899999992, 0.09963366699999998, 0.09967806999999995, 0.099696389, 0.09969512499999977, 0.0996679300000003, 0.09963634699999968, 0.09966629100000013, 0.09967194499999987, 0.09966552799999961, 0.09966490200000022, 0.0996417639999998, 0.09970841600000035, 0.09970256899999974, 0.099687195, 0.09966197200000027, 0.09964530599999977, 0.09970040299999994, 0.09966844399999975, 0.0996864030000002, 0.0997015280000002, 0.09963644400000016, 0.09966651399999993, 0.09967101400000011, 0.09966587500000035, 0.09967377700000046, 0.09963892999999935, 0.09968036099999988, 0.09969148599999933, 0.09968362499999994, 0.09966737499999923, 0.09967274999999987, 0.09967313900000008]</msg>
<status status="PASS" starttime="20201029 18:20:21.523" endtime="20201029 18:20:21.525"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:21.518" endtime="20201029 18:20:21.525"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.993" endtime="20201029 18:20:21.526"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201029 18:20:14.920" endtime="20201029 18:20:21.526" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:21.532" endtime="20201029 18:20:21.552"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:21.531" endtime="20201029 18:20:21.553"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:21.565" endtime="20201029 18:20:21.583"></status>
</kw>
<msg timestamp="20201029 18:20:21.584" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:21.564" endtime="20201029 18:20:21.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:21.586" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:21.585" endtime="20201029 18:20:21.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:20:21.590" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:20:21.587" endtime="20201029 18:20:21.590"></status>
</kw>
<status status="FAIL" starttime="20201029 18:20:21.561" endtime="20201029 18:20:21.591"></status>
</kw>
<status status="FAIL" starttime="20201029 18:20:21.559" endtime="20201029 18:20:21.592"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:21.558" endtime="20201029 18:20:21.592"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:20:21.596" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:20:21.595" endtime="20201029 18:20:21.596"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:21.593" endtime="20201029 18:20:21.596"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:21.557" endtime="20201029 18:20:21.596"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:21.556" endtime="20201029 18:20:21.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:21.597" endtime="20201029 18:20:21.599"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:21.555" endtime="20201029 18:20:21.599"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:21.553" endtime="20201029 18:20:21.600"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:21.530" endtime="20201029 18:20:21.600"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:21.608" endtime="20201029 18:20:27.715"></status>
</kw>
<msg timestamp="20201029 18:20:27.716" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:21.606" endtime="20201029 18:20:27.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:27.721" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:27.718" endtime="20201029 18:20:27.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:27.723" endtime="20201029 18:20:27.726"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:21.604" endtime="20201029 18:20:27.727"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:21.602" endtime="20201029 18:20:27.728"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:27.734" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 15, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201029 18:20:27.730" endtime="20201029 18:20:27.734"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:27.742" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:20:27.740" endtime="20201029 18:20:27.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:27.746" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:20:27.745" endtime="20201029 18:20:27.747"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:27.736" endtime="20201029 18:20:27.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:27.756" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:20:27.754" endtime="20201029 18:20:27.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:27.760" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:20:27.758" endtime="20201029 18:20:27.761"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:27.749" endtime="20201029 18:20:27.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:27.770" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:20:27.768" endtime="20201029 18:20:27.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:27.774" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201029 18:20:27.772" endtime="20201029 18:20:27.775"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:27.763" endtime="20201029 18:20:27.776"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:27.789" endtime="20201029 18:20:28.092"></status>
</kw>
<msg timestamp="20201029 18:20:28.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066384917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.166169403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:27.786" endtime="20201029 18:20:28.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:28.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066384917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.166169403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:28.096" endtime="20201029 18:20:28.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:28.104" endtime="20201029 18:20:28.106"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:27.780" endtime="20201029 18:20:28.106"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:27.777" endtime="20201029 18:20:28.107"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:20:28.110" level="INFO">${FILTERED} = [{'diff': 0.09978448599999999}, {'diff': 0.099673862}, {'diff': 0.09965740300000003}, {'diff': 0.09966723599999999}, {'diff': 0.09967476399999997}, {'diff': 0.09963755600000002}, {'diff': 0.0996613339...</msg>
<status status="PASS" starttime="20201029 18:20:28.107" endtime="20201029 18:20:28.111"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:28.114" level="INFO">${RESULT} = {'diff': [0.09978448599999999, 0.099673862, 0.09965740300000003, 0.09966723599999999, 0.09967476399999997, 0.09963755600000002, 0.09966133399999999, 0.09966900000000001, 0.099681083, 0.099653430999999...</msg>
<status status="PASS" starttime="20201029 18:20:28.111" endtime="20201029 18:20:28.115"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:28.118" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:20:28.117" endtime="20201029 18:20:28.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:28.121" level="INFO">VALUE: [0.09978448599999999, 0.099673862, 0.09965740300000003, 0.09966723599999999, 0.09967476399999997, 0.09963755600000002, 0.09966133399999999, 0.09966900000000001, 0.099681083, 0.0996534309999999, 0.09963590200000016, 0.09966432000000003, 0.09966377800000004, 0.09966241599999992, 0.0996351390000001, 0.09967227799999989, 0.09966418000000021, 0.09967524999999999, 0.0996610280000001, 0.09965351400000011, 0.09964059799999969, 0.09969074999999972, 0.09969861099999999, 0.09969597200000013, 0.09965912500000007, 0.09967776399999995, 0.09967022200000031, 0.09967101399999967, 0.09968444499999984, 0.09968706999999988, 0.0996659860000002, 0.09969143100000011, 0.09964424999999988, 0.09965852799999997, 0.09966698600000035, 0.09964050000000002, 0.0996487359999998, 0.09964925000000013, 0.09965726300000011, 0.09962337500000018, 0.0996562360000004, 0.09966545800000048, 0.09969459700000005, 0.09967598600000027, 0.09967901400000034, 0.09964018100000072, 0.0996527219999992, 0.09965069400000015, 0.099687694, 0.0996670970000002, 0.09969699999999992]</msg>
<status status="PASS" starttime="20201029 18:20:28.119" endtime="20201029 18:20:28.121"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:28.115" endtime="20201029 18:20:28.122"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:21.600" endtime="20201029 18:20:28.122"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201029 18:20:21.528" endtime="20201029 18:20:28.123" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:28.129" endtime="20201029 18:20:28.149"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:28.128" endtime="20201029 18:20:28.149"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:28.163" endtime="20201029 18:20:28.180"></status>
</kw>
<msg timestamp="20201029 18:20:28.181" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:28.161" endtime="20201029 18:20:28.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:28.183" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:28.182" endtime="20201029 18:20:28.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:20:28.186" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:20:28.184" endtime="20201029 18:20:28.187"></status>
</kw>
<status status="FAIL" starttime="20201029 18:20:28.159" endtime="20201029 18:20:28.187"></status>
</kw>
<status status="FAIL" starttime="20201029 18:20:28.156" endtime="20201029 18:20:28.188"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:28.154" endtime="20201029 18:20:28.188"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:20:28.192" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:20:28.191" endtime="20201029 18:20:28.192"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:28.189" endtime="20201029 18:20:28.192"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:28.154" endtime="20201029 18:20:28.193"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:28.153" endtime="20201029 18:20:28.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:28.193" endtime="20201029 18:20:28.195"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:28.152" endtime="20201029 18:20:28.195"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:28.150" endtime="20201029 18:20:28.196"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:28.127" endtime="20201029 18:20:28.196"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:28.204" endtime="20201029 18:20:34.316"></status>
</kw>
<msg timestamp="20201029 18:20:34.317" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:28.203" endtime="20201029 18:20:34.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:34.322" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:34.319" endtime="20201029 18:20:34.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:34.325" endtime="20201029 18:20:34.328"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:28.200" endtime="20201029 18:20:34.329"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:28.198" endtime="20201029 18:20:34.330"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:34.336" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 20, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201029 18:20:34.331" endtime="20201029 18:20:34.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:34.344" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:20:34.342" endtime="20201029 18:20:34.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:34.348" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:20:34.346" endtime="20201029 18:20:34.349"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:34.337" endtime="20201029 18:20:34.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:34.358" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:20:34.356" endtime="20201029 18:20:34.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:34.362" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:20:34.360" endtime="20201029 18:20:34.363"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:34.351" endtime="20201029 18:20:34.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:34.371" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:20:34.369" endtime="20201029 18:20:34.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:34.378" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201029 18:20:34.374" endtime="20201029 18:20:34.379"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:34.365" endtime="20201029 18:20:34.380"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:34.393" endtime="20201029 18:20:34.695"></status>
</kw>
<msg timestamp="20201029 18:20:34.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066258111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.165998792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:34.390" endtime="20201029 18:20:34.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:34.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066258111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.165998792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:34.699" endtime="20201029 18:20:34.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:34.707" endtime="20201029 18:20:34.709"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:34.385" endtime="20201029 18:20:34.709"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:34.381" endtime="20201029 18:20:34.710"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:20:34.714" level="INFO">${FILTERED} = [{'diff': 0.09974068100000001}, {'diff': 0.09972577800000001}, {'diff': 0.099754903}, {'diff': 0.09971208400000003}, {'diff': 0.09968456999999997}, {'diff': 0.09969030600000006}, {'diff': 0.0996891519...</msg>
<status status="PASS" starttime="20201029 18:20:34.710" endtime="20201029 18:20:34.714"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:34.717" level="INFO">${RESULT} = {'diff': [0.09974068100000001, 0.09972577800000001, 0.099754903, 0.09971208400000003, 0.09968456999999997, 0.09969030600000006, 0.09968915199999995, 0.09968670800000001, 0.09970901399999998, 0.0996568...</msg>
<status status="PASS" starttime="20201029 18:20:34.714" endtime="20201029 18:20:34.718"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:34.721" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:20:34.720" endtime="20201029 18:20:34.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:34.725" level="INFO">VALUE: [0.09974068100000001, 0.09972577800000001, 0.099754903, 0.09971208400000003, 0.09968456999999997, 0.09969030600000006, 0.09968915199999995, 0.09968670800000001, 0.09970901399999998, 0.09965686100000015, 0.0997014730000001, 0.09968868099999995, 0.09970130599999982, 0.0997096110000002, 0.0996815980000001, 0.09967766699999991, 0.0996824300000001, 0.0997060139999999, 0.099675819, 0.0996471940000001, 0.09968704199999978, 0.09968734799999979, 0.09968211100000035, 0.0996848469999998, 0.09965036100000013, 0.099680153, 0.09968877799999998, 0.09969336099999992, 0.09972383299999965, 0.09969754200000036, 0.0997083889999999, 0.09969181999999988, 0.09969630599999979, 0.09968986099999988, 0.09965356999999964, 0.09970019400000041, 0.09968162500000011, 0.0996980409999999, 0.09970247200000015, 0.09968136100000002, 0.09973091600000039, 0.09972038900000069, 0.09971319400000045, 0.09969961100000013, 0.0996694860000007, 0.09973650000000056, 0.0997220969999999, 0.09971981899999971, 0.09969066699999996, 0.09964008400000068, 0.09969915300000043]</msg>
<status status="PASS" starttime="20201029 18:20:34.723" endtime="20201029 18:20:34.725"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:34.718" endtime="20201029 18:20:34.726"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:28.197" endtime="20201029 18:20:34.726"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201029 18:20:28.124" endtime="20201029 18:20:34.727" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:34.733" endtime="20201029 18:20:34.753"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:34.732" endtime="20201029 18:20:34.753"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:34.766" endtime="20201029 18:20:34.781"></status>
</kw>
<msg timestamp="20201029 18:20:34.782" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:34.764" endtime="20201029 18:20:34.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:34.784" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:34.783" endtime="20201029 18:20:34.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:20:34.787" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:20:34.785" endtime="20201029 18:20:34.788"></status>
</kw>
<status status="FAIL" starttime="20201029 18:20:34.762" endtime="20201029 18:20:34.788"></status>
</kw>
<status status="FAIL" starttime="20201029 18:20:34.759" endtime="20201029 18:20:34.789"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:34.758" endtime="20201029 18:20:34.789"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:20:34.793" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:20:34.792" endtime="20201029 18:20:34.793"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:34.790" endtime="20201029 18:20:34.793"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:34.757" endtime="20201029 18:20:34.794"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:34.757" endtime="20201029 18:20:34.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:34.794" endtime="20201029 18:20:34.796"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:34.755" endtime="20201029 18:20:34.796"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:34.754" endtime="20201029 18:20:34.797"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:34.730" endtime="20201029 18:20:34.797"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:34.806" endtime="20201029 18:20:40.912"></status>
</kw>
<msg timestamp="20201029 18:20:40.913" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:34.804" endtime="20201029 18:20:40.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:40.918" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:40.915" endtime="20201029 18:20:40.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:40.920" endtime="20201029 18:20:40.923"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:34.801" endtime="20201029 18:20:40.925"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:34.799" endtime="20201029 18:20:40.925"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:40.931" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 25, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201029 18:20:40.927" endtime="20201029 18:20:40.931"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:40.939" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:20:40.937" endtime="20201029 18:20:40.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:40.944" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:20:40.942" endtime="20201029 18:20:40.944"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:40.933" endtime="20201029 18:20:40.945"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:40.953" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:20:40.951" endtime="20201029 18:20:40.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:40.957" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:20:40.955" endtime="20201029 18:20:40.958"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:40.947" endtime="20201029 18:20:40.959"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:40.967" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:20:40.965" endtime="20201029 18:20:40.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:40.971" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201029 18:20:40.969" endtime="20201029 18:20:40.972"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:40.960" endtime="20201029 18:20:40.973"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:40.986" endtime="20201029 18:20:41.285"></status>
</kw>
<msg timestamp="20201029 18:20:41.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063959875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.16426125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:20:40.983" endtime="20201029 18:20:41.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:41.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063959875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.16426125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:20:41.289" endtime="20201029 18:20:41.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:41.297" endtime="20201029 18:20:41.299"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:40.977" endtime="20201029 18:20:41.299"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:40.974" endtime="20201029 18:20:41.300"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:20:41.304" level="INFO">${FILTERED} = [{'diff': 0.100301375}, {'diff': 0.09914794400000002}, {'diff': 0.09964894400000002}, {'diff': 0.09967547199999999}, {'diff': 0.09965120800000005}, {'diff': 0.09968163899999993}, {'diff': 0.0996808890...</msg>
<status status="PASS" starttime="20201029 18:20:41.300" endtime="20201029 18:20:41.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:41.308" level="INFO">${RESULT} = {'diff': [0.100301375, 0.09914794400000002, 0.09964894400000002, 0.09967547199999999, 0.09965120800000005, 0.09968163899999993, 0.09968088900000005, 0.09968163899999993, 0.09966379199999997, 0.0996542...</msg>
<status status="PASS" starttime="20201029 18:20:41.305" endtime="20201029 18:20:41.309"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:41.313" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:20:41.311" endtime="20201029 18:20:41.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:41.315" level="INFO">VALUE: [0.100301375, 0.09914794400000002, 0.09964894400000002, 0.09967547199999999, 0.09965120800000005, 0.09968163899999993, 0.09968088900000005, 0.09968163899999993, 0.09966379199999997, 0.09965422200000007, 0.09969719500000007, 0.09965726399999997, 0.09965856900000003, 0.09966663900000006, 0.09966333399999994, 0.09966333399999994, 0.09966745899999996, 0.09969584800000009, 0.09969469499999994, 0.0996674999999998, 0.09966119500000037, 0.0996962779999997, 0.09970497200000006, 0.09970522199999987, 0.09965362500000019, 0.09966434700000004, 0.09966729199999991, 0.0996771110000001, 0.09965761100000003, 0.09963942999999986, 0.09969645799999993, 0.09969645799999993, 0.09968804199999992, 0.09967677800000008, 0.09962016600000023, 0.09968840299999959, 0.09969266599999971, 0.09968895800000022, 0.09965372199999978, 0.09961662500000035, 0.09965306900000037, 0.0996930279999999, 0.09967566599999955, 0.0996979730000005, 0.09964257000000032, 0.09965283400000047, 0.09964786099999934, 0.09965963899999952, 0.09965562499999958, 0.09962826399999969, 0.0996529439999998]</msg>
<status status="PASS" starttime="20201029 18:20:41.314" endtime="20201029 18:20:41.316"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:41.309" endtime="20201029 18:20:41.316"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:34.798" endtime="20201029 18:20:41.317"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201029 18:20:34.728" endtime="20201029 18:20:41.317" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 18:20:00.180" endtime="20201029 18:20:41.324"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">frdm-kw41z</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201029 18:17:51.747" endtime="20201029 18:20:41.355"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="18" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="18" fail="0">BOARD_frdm-kw41z</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_ztimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_ztimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_ztimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
